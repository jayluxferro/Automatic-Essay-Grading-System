digraph "CFG forandroid.support.multidex.MultiDex.installSecondaryDexes(Ljava\/lang\/ClassLoader;Ljava\/io\/File;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r4.isEmpty() != false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (android.os.Build.VERSION.SDK_INT \< 19) goto L_0x0010\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|android.support.multidex.MultiDex.V19.install(r2, r4, r3)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010}"];
Node_6 [shape=record,label="{6\:\ 0x0014|if (android.os.Build.VERSION.SDK_INT \< 14) goto L_0x001a\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|android.support.multidex.MultiDex.V14.install(r2, r4)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|android.support.multidex.MultiDex.C0167V4.install(r2, r4)\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private static void android.support.multidex.MultiDex.installSecondaryDexes((r2v0 'loader' java.lang.ClassLoader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'dexDir' java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'files' java.util.List\<? extends java.io.File\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.IllegalArgumentException, java.lang.IllegalAccessException, java.lang.NoSuchFieldException, java.lang.reflect.InvocationTargetException, java.lang.NoSuchMethodException, java.io.IOException, java.lang.SecurityException, java.lang.ClassNotFoundException, java.lang.InstantiationException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/ClassLoader;, Ljava\/io\/File;, Ljava\/util\/List, \<+, Ljava\/io\/File;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_11;
Node_8 -> Node_12;
}

