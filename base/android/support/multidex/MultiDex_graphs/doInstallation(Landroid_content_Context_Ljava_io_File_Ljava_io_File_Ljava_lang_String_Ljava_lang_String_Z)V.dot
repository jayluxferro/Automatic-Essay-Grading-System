digraph "CFG forandroid.support.multidex.MultiDex.doInstallation(Landroid\/content\/Context;Ljava\/io\/File;Ljava\/io\/File;Ljava\/lang\/String;Ljava\/lang\/String;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Set\<java.io.File\> r8 = installedApk\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|monitor\-enter(r8)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ RuntimeException \-\> 0x0072 \}\lSplitter:B:2:0x0003\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|Catch:\{ RuntimeException \-\> 0x0072 \}\l|if (installedApk.contains(r12) == false) goto L_0x000d     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|Catch:\{ RuntimeException \-\> 0x0072 \}\l|monitor\-exit(r8)     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|Catch:\{ RuntimeException \-\> 0x0072 \}\l|installedApk.add(r12)     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|Catch:\{ RuntimeException \-\> 0x0072 \}\l|if (android.os.Build.VERSION.SDK_INT \<= 20) goto L_0x0060     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|Catch:\{ RuntimeException \-\> 0x0072 \}\l|android.util.Log.w(TAG, new java.lang.StringBuilder().append(\"MultiDex is not guaranteed to work in SDK version \").append(android.os.Build.VERSION.SDK_INT).append(\": SDK version higher than \").append(20).append(\" should be backed by \").append(\"runtime with built\-in multidex capabilty but it's not the \").append(\"case here: java.vm.version=\"\").append(java.lang.System.getProperty(\"java.vm.version\")).append(\"\"\").toString())     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0060|SYNTHETIC\lSplitter:B:9:0x0060\l}"];
Node_10 [shape=record,label="{10\:\ ?|Catch:\{ RuntimeException \-\> 0x0072 \}\lSplitter:B:9:0x0060\l|java.lang.ClassLoader r5 = r11.getClassLoader()     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0064|if (r5 != null) goto L_0x007c\l}"];
Node_12 [shape=record,label="{12\:\ 0x0066}"];
Node_13 [shape=record,label="{13\:\ 0x006a|SYNTHETIC\lSplitter:B:13:0x006a\l}"];
Node_14 [shape=record,label="{14\:\ ?|Catch:\{ RuntimeException \-\> 0x0072 \}\lSplitter:B:13:0x006a\l|android.util.Log.e(TAG, \"Context class loader is null. Must be running in test mode. Skip patching.\")     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x006d|Catch:\{ RuntimeException \-\> 0x0072 \}\l|monitor\-exit(r8)     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x006e|Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x006f|REMOVE\lCatch:\{ RuntimeException \-\> 0x0072 \}\l|java.lang.Throwable r7 = move\-exception     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x0070|REMOVE\l}"];
Node_19 [shape=record,label="{19\:\ 0x0071|REMOVE\l|throw r7\l}"];
Node_20 [shape=record,label="{20\:\ 0x0072|ExcHandler: RuntimeException (r2v0 'e' java.lang.RuntimeException A[CUSTOM_DECLARE])\lSplitter:B:9:0x0060\l|java.lang.RuntimeException r2 = move\-exception\l}"];
Node_21 [shape=record,label="{21\:\ 0x0073}"];
Node_22 [shape=record,label="{22\:\ 0x0077|SYNTHETIC\lSplitter:B:22:0x0077\l}"];
Node_23 [shape=record,label="{23\:\ ?|Catch:\{ RuntimeException \-\> 0x0072 \}\lSplitter:B:22:0x0077\l|android.util.Log.w(TAG, \"Failure while trying to obtain Context class loader. Must be running in test mode. Skip patching.\", r2)     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_24 [shape=record,label="{24\:\ 0x007a}"];
Node_25 [shape=record,label="{25\:\ 0x007c|SYNTHETIC\lSplitter:B:25:0x007c\l}"];
Node_26 [shape=record,label="{26\:\ ?|Catch:\{ Throwable \-\> 0x0097 \}\lSplitter:B:25:0x007c\l|clearOldDexDir(r11)     \/\/ Catch:\{ Throwable \-\> 0x0097 \}\l}"];
Node_27 [shape=record,label="{27\:\ 0x007f|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ ?|Catch:\{ RuntimeException \-\> 0x0072 \}\l|java.io.File r1 = getDexDir(r11, r13, r14)     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\landroid.support.multidex.MultiDexExtractor r3 = new android.support.multidex.MultiDexExtractor(r12, r1)     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x0088|r0 = null\l}"];
Node_30 [shape=record,label="{30\:\ 0x008a|SYNTHETIC\lSplitter:B:30:0x008a\l}"];
Node_31 [shape=record,label="{31\:\ ?|Catch:\{ IOException \-\> 0x00a0, all \-\> 0x00a4 \}\lSplitter:B:30:0x008a\l}"];
Node_32 [shape=record,label="{32\:\ 0x008e|SYNTHETIC\lSplitter:B:32:0x008e\l}"];
Node_33 [shape=record,label="{33\:\ ?|Catch:\{ IOException \-\> 0x00a0, all \-\> 0x00a4 \}\lSplitter:B:32:0x008e\l|installSecondaryDexes(r5, r1, r3.load(r11, r15, false))     \/\/ Catch:\{ IOException \-\> 0x00a0, all \-\> 0x00a4 \}\l}"];
Node_34 [shape=record,label="{34\:\ 0x0091|SYNTHETIC\lSplitter:B:34:0x0091\l}"];
Node_35 [shape=record,label="{35\:\ ?|Catch:\{ IOException \-\> 0x00b9 \}\lSplitter:B:34:0x0091\l|r3.close()     \/\/ Catch:\{ IOException \-\> 0x00b9 \}\l}"];
Node_36 [shape=record,label="{36\:\ 0x0094|PHI: r0 \l  PHI: (r0v3 'closeException' java.io.IOException) = (r0v2 'closeException' java.io.IOException), (r0v0 'closeException' java.io.IOException) binds: [B:54:0x00ba, B:35:?] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == null) goto L_0x00bf\l}"];
Node_37 [shape=record,label="{37\:\ 0x0096|SYNTHETIC\lSplitter:B:37:0x0096\l}"];
Node_38 [shape=record,label="{38\:\ ?|Catch:\{ RuntimeException \-\> 0x0072 \}\lSplitter:B:37:0x0096\l|throw r0     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_39 [shape=record,label="{39\:\ 0x0097|Catch:\{ RuntimeException \-\> 0x0072 \}\lExcHandler: Throwable (r6v0 't' java.lang.Throwable A[CUSTOM_DECLARE, Catch:\{  \}])\lSplitter:B:25:0x007c\l|java.lang.Throwable r6 = move\-exception     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_40 [shape=record,label="{40\:\ 0x0098|Catch:\{ RuntimeException \-\> 0x0072 \}\l|android.util.Log.w(TAG, \"Something went wrong when trying to clear old MultiDex extraction, continuing without cleaning.\", r6)     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_41 [shape=record,label="{41\:\ 0x00a0|ExcHandler: IOException (r2v2 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:32:0x008e\l|java.io.IOException r2 = move\-exception\l}"];
Node_42 [shape=record,label="{42\:\ 0x00a1|if (r16 != false) goto L_0x00a9\l}"];
Node_43 [shape=record,label="{43\:\ 0x00a3|SYNTHETIC\lSplitter:B:43:0x00a3\l}"];
Node_44 [shape=record,label="{44\:\ ?|Catch:\{ IOException \-\> 0x00a0, all \-\> 0x00a4 \}\lSplitter:B:43:0x00a3\l|throw r2     \/\/ Catch:\{ IOException \-\> 0x00a0, all \-\> 0x00a4 \}\l}"];
Node_45 [shape=record,label="{45\:\ 0x00a4|ExcHandler: all (r7v8 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:30:0x008a\l|java.lang.Throwable r7 = move\-exception\l}"];
Node_46 [shape=record,label="{46\:\ 0x00a5|SYNTHETIC\lSplitter:B:46:0x00a5\l}"];
Node_47 [shape=record,label="{47\:\ ?|Catch:\{ IOException \-\> 0x00bc \}\lSplitter:B:46:0x00a5\l|r3.close()     \/\/ Catch:\{ IOException \-\> 0x00bc \}\l}"];
Node_48 [shape=record,label="{48\:\ 0x00a8|SYNTHETIC\lDONT_GENERATE\l}"];
Node_49 [shape=record,label="{49\:\ ?|Catch:\{ RuntimeException \-\> 0x0072 \}\l|throw r7     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_50 [shape=record,label="{50\:\ 0x00a9}"];
Node_51 [shape=record,label="{51\:\ 0x00ad|SYNTHETIC\lSplitter:B:51:0x00ad\l}"];
Node_52 [shape=record,label="{52\:\ ?|Catch:\{ IOException \-\> 0x00a0, all \-\> 0x00a4 \}\lSplitter:B:51:0x00ad\l|android.util.Log.w(TAG, \"Failed to install extracted secondary dex files, retrying with forced extraction\", r2)     \/\/ Catch:\{ IOException \-\> 0x00a0, all \-\> 0x00a4 \}\linstallSecondaryDexes(r5, r1, r3.load(r11, r15, true))     \/\/ Catch:\{ IOException \-\> 0x00a0, all \-\> 0x00a4 \}\l}"];
Node_53 [shape=record,label="{53\:\ 0x00b9|ExcHandler: IOException (r2v3 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:34:0x0091\l|java.io.IOException r2 = move\-exception\l}"];
Node_54 [shape=record,label="{54\:\ 0x00ba|r0 = r2\l}"];
Node_55 [shape=record,label="{55\:\ 0x00bc|ExcHandler: IOException (r2v1 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:46:0x00a5\l|java.io.IOException r2 = move\-exception\l}"];
Node_56 [shape=record,label="{56\:\ 0x00bd|r0 = r2\l}"];
Node_57 [shape=record,label="{57\:\ 0x00bf|SYNTHETIC\lSplitter:B:57:0x00bf\l}"];
Node_58 [shape=record,label="{58\:\ ?|Catch:\{ RuntimeException \-\> 0x0072 \}\lSplitter:B:57:0x00bf\l|monitor\-exit(r8)     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_59 [shape=record,label="{59\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lCatch:\{ RuntimeException \-\> 0x0072 \}\l|return     \/\/ Catch:\{ RuntimeException \-\> 0x0072 \}\l}"];
Node_60 [shape=record,label="{60\:\ ?|SYNTHETIC\lRETURN\lCatch:\{  \}\l|return     \/\/ Catch:\{  \}\l}"];
Node_61 [shape=record,label="{61\:\ ?|SYNTHETIC\lRETURN\lCatch:\{  \}\l|return     \/\/ Catch:\{  \}\l}"];
Node_62 [shape=record,label="{62\:\ ?|SYNTHETIC\lRETURN\lCatch:\{  \}\l|return     \/\/ Catch:\{  \}\l}"];
MethodNode[shape=record,label="{private static void android.support.multidex.MultiDex.doInstallation((r11v0 'mainContext' android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'sourceApk' java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'dataDir' java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'secondaryFolderName' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'prefsKeyPrefix' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 'reinstallOnPatchRecoverableException' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalAccessException, java.lang.NoSuchFieldException, java.lang.reflect.InvocationTargetException, java.lang.NoSuchMethodException, java.lang.SecurityException, java.lang.ClassNotFoundException, java.lang.InstantiationException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_17;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_59;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_20;
Node_10 -> Node_20;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_25;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_60;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_17;
Node_23 -> Node_24;
Node_24 -> Node_61;
Node_25 -> Node_26;
Node_25 -> Node_39;
Node_25 -> Node_17;
Node_26 -> Node_27;
Node_26 -> Node_39;
Node_27 -> Node_28;
Node_27 -> Node_17;
Node_28 -> Node_29;
Node_28 -> Node_17;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_45;
Node_31 -> Node_45;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_41;
Node_33 -> Node_34;
Node_33 -> Node_41;
Node_34 -> Node_35;
Node_34 -> Node_53;
Node_35 -> Node_36;
Node_35 -> Node_53;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_57;
Node_37 -> Node_38;
Node_37 -> Node_17;
Node_39 -> Node_40;
Node_40 -> Node_27;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_50;
Node_43 -> Node_44;
Node_43 -> Node_45;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_46 -> Node_55;
Node_47 -> Node_48;
Node_47 -> Node_55;
Node_48 -> Node_49;
Node_48 -> Node_17;
Node_49 -> Node_17;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_51 -> Node_45;
Node_52 -> Node_45;
Node_52 -> Node_34;
Node_53 -> Node_54;
Node_54 -> Node_36;
Node_55 -> Node_56;
Node_56 -> Node_48;
Node_57 -> Node_58;
Node_57 -> Node_17;
Node_58 -> Node_17;
Node_58 -> Node_62;
}

