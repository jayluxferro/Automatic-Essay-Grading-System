digraph "CFG forandroid.support.multidex.MultiDex.getDexDir(Landroid\/content\/Context;Ljava\/io\/File;Ljava\/lang\/String;)Ljava\/io\/File;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.io.File) =  java.io.File \l0x0002: CONST_STR  (r3 I:java.lang.String) =  \"code_cache\" \l0x0004: INVOKE  \l  (r0 I:java.io.File)\l  (r6 I:java.io.File A[D('dataDir' java.io.File)])\l  (r3 I:java.lang.String)\l java.io.File.\<init\>(java.io.File, java.lang.String):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|SYNTHETIC\lSplitter:B:1:0x0007\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0007\l|0x0007: INVOKE  (r0 I:java.io.File A[D('cache' java.io.File)]) android.support.multidex.MultiDex.mkdirChecked(java.io.File):void type: STATIC A[Catch:\{ IOException \-\> 0x0013 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: NEW_INSTANCE  (r1 I:java.io.File) =  java.io.File \l0x000c: INVOKE  \l  (r1 I:java.io.File)\l  (r0 I:java.io.File A[D('cache' java.io.File)])\l  (r7 I:java.lang.String A[D('secondaryFolderName' java.lang.String)])\l java.io.File.\<init\>(java.io.File, java.lang.String):void type: DIRECT \l0x000f: INVOKE  (r1 I:java.io.File A[D('dexDir' java.io.File)]) android.support.multidex.MultiDex.mkdirChecked(java.io.File):void type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: RETURN  (r1 I:java.io.File A[D('dexDir' java.io.File)]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|ExcHandler: IOException null\lSplitter:B:1:0x0007\l|0x0013: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:java.io.File A[D('cache' java.io.File)]) =  java.io.File \l0x0016: INVOKE  (r3 I:java.io.File) = \l  (r5 I:android.content.Context A[D('context' android.content.Context)])\l android.content.Context.getFilesDir():java.io.File type: VIRTUAL \l0x001a: CONST_STR  (r4 I:java.lang.String) =  \"code_cache\" \l0x001c: INVOKE  \l  (r0 I:java.io.File)\l  (r3 I:java.io.File)\l  (r4 I:java.lang.String)\l java.io.File.\<init\>(java.io.File, java.lang.String):void type: DIRECT \l0x001f: INVOKE  (r0 I:java.io.File A[D('cache' java.io.File)]) android.support.multidex.MultiDex.mkdirChecked(java.io.File):void type: STATIC \l}"];
MethodNode[shape=record,label="{private static java.io.File android.support.multidex.MultiDex.getDexDir((r5 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.io.File A[D('dataDir' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.String A[D('secondaryFolderName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000f\-0x0013: r1 'dexDir' java.io.File\l  0x0007\-0x0016: r0 'cache' java.io.File\l  0x001f\-0x0022: r0 'cache' java.io.File\l  0x0014\-0x0022: r2 'e' java.io.IOException\l  ?\-0x0022: r5 'context' android.content.Context\l  ?\-0x0022: r6 'dataDir' java.io.File\l  ?\-0x0022: r7 'secondaryFolderName' java.lang.String\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_3;
}

