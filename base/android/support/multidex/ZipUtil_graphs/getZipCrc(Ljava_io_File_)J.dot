digraph "CFG forandroid.support.multidex.ZipUtil.getZipCrc(Ljava\/io\/File;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.io.RandomAccessFile r1 = new java.io.RandomAccessFile(r4, \"r\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|SYNTHETIC\lSplitter:B:1:0x0007\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x0013 \}\lSplitter:B:1:0x0007\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|DONT_GENERATE\l|r1.close()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|RETURN\l|return computeCrcOfCentralDir(r1, findCentralDirectory(r1))\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|ExcHandler:  FINALLY\lSplitter:B:1:0x0007\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|FINALLY_INSNS\l|r1.close()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|throw r2\l}"];
MethodNode[shape=record,label="{static long android.support.multidex.ZipUtil.getZipCrc((r4v0 'apk' java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

