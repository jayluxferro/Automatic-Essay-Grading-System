digraph "CFG forandroid.support.multidex.ZipUtil.computeCrcOfCentralDir(Ljava\/io\/RandomAccessFile;Landroid\/support\/multidex\/ZipUtil$CentralDirectory;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r10 I:?[long, double]) = (16384(0x4000, double:8.0948E\-320) ?[long, double]) \l0x0002: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: NEW_INSTANCE  (r1 I:java.util.zip.CRC32) =  java.util.zip.CRC32 \l0x0005: INVOKE  (r1 I:java.util.zip.CRC32) java.util.zip.CRC32.\<init\>():void type: DIRECT \l0x0008: IGET  (r4 I:long) = \l  (r13 I:android.support.multidex.ZipUtil$CentralDirectory A[D('dir' android.support.multidex.ZipUtil$CentralDirectory)])\l android.support.multidex.ZipUtil.CentralDirectory.size long \l0x000a: IGET  (r6 I:long) = \l  (r13 I:android.support.multidex.ZipUtil$CentralDirectory A[D('dir' android.support.multidex.ZipUtil$CentralDirectory)])\l android.support.multidex.ZipUtil.CentralDirectory.offset long \l0x000c: INVOKE  \l  (r12 I:java.io.RandomAccessFile A[D('raf' java.io.RandomAccessFile)])\l  (r6 I:long)\l java.io.RandomAccessFile.seek(long):void type: VIRTUAL \l0x000f: INVOKE  (r6 I:long) = (r10 I:long), (r4 I:long A[D('stillToRead' long)]) java.lang.Math.min(long, long):long type: STATIC \l0x0013: CAST  (r2 I:int) = (int) (r6 I:long) \l0x0014: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (16384(0x4000, float:2.2959E\-41) ?[int, float, short, byte, char])\l \l0x0016: NEW_ARRAY  (r0 I:byte[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0018: INVOKE  (r2 I:int A[D('length' int)]) = \l  (r12 I:java.io.RandomAccessFile A[D('raf' java.io.RandomAccessFile)])\l  (r0 I:byte[] A[D('buffer' byte[])])\l  (r8 I:int)\l  (r2 I:int A[D('length' int)])\l java.io.RandomAccessFile.read(byte[], int, int):int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x001c|0x001c: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x001d|0x001d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('length' int)]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x002a \l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: INVOKE  \l  (r1 I:java.util.zip.CRC32 A[D('crc' java.util.zip.CRC32)])\l  (r0 I:byte[] A[D('buffer' byte[])])\l  (r8 I:int)\l  (r2 I:int A[D('length' int)])\l java.util.zip.CRC32.update(byte[], int, int):void type: VIRTUAL \l0x0022: CAST  (r6 I:long) = (long) (r2 I:int A[D('length' int)]) \l0x0023: ARITH  (r4 I:long A[D('stillToRead' long)]) = (r4 I:long A[D('stillToRead' long)]) \- (r6 I:long) \l0x0024: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l0x0026: CMP_L  (r3 I:int) = (r4 I:long A[D('stillToRead' long)]), (r6 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002f \l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|0x002a: INVOKE  (r6 I:long) = (r1 I:java.util.zip.CRC32 A[D('crc' java.util.zip.CRC32)]) java.util.zip.CRC32.getValue():long type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: RETURN  (r6 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: INVOKE  (r6 I:long) = (r10 I:long), (r4 I:long A[D('stillToRead' long)]) java.lang.Math.min(long, long):long type: STATIC \l0x0033: CAST  (r2 I:int A[D('length' int)]) = (int) (r6 I:long) \l0x0034: INVOKE  (r2 I:int A[D('length' int)]) = \l  (r12 I:java.io.RandomAccessFile A[D('raf' java.io.RandomAccessFile)])\l  (r0 I:byte[] A[D('buffer' byte[])])\l  (r8 I:int)\l  (r2 I:int A[D('length' int)])\l java.io.RandomAccessFile.read(byte[], int, int):int type: VIRTUAL \l}"];
MethodNode[shape=record,label="{static long android.support.multidex.ZipUtil.computeCrcOfCentralDir((r12 I:java.io.RandomAccessFile A[D('raf' java.io.RandomAccessFile), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:android.support.multidex.ZipUtil$CentralDirectory A[D('dir' android.support.multidex.ZipUtil$CentralDirectory), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0018\-0x0038: r0 'buffer' byte[]\l  0x0008\-0x0038: r1 'crc' java.util.zip.CRC32\l  0x0014\-0x0038: r2 'length' int\l  0x000a\-0x0038: r4 'stillToRead' long\l  ?\-0x0038: r12 'raf' java.io.RandomAccessFile\l  ?\-0x0038: r13 'dir' android.support.multidex.ZipUtil$CentralDirectory\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_1;
}

