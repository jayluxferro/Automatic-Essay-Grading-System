digraph "CFG forandroid.support.multidex.ZipUtil.getZipCrc(Ljava\/io\/File;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r1 I:java.io.RandomAccessFile) =  java.io.RandomAccessFile \l0x0002: CONST_STR  (r2 I:java.lang.String) =  \"r\" \l0x0004: INVOKE  \l  (r1 I:java.io.RandomAccessFile)\l  (r4 I:java.io.File A[D('apk' java.io.File)])\l  (r2 I:java.lang.String)\l java.io.RandomAccessFile.\<init\>(java.io.File, java.lang.String):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|SYNTHETIC\lSplitter:B:1:0x0007\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0007\l|0x0007: INVOKE  (r0 I:android.support.multidex.ZipUtil$CentralDirectory) = \l  (r1 I:java.io.RandomAccessFile A[D('raf' java.io.RandomAccessFile)])\l android.support.multidex.ZipUtil.findCentralDirectory(java.io.RandomAccessFile):android.support.multidex.ZipUtil$CentralDirectory type: STATIC A[Catch:\{ all \-\> 0x0013 \}, TRY_ENTER]\l0x000b: INVOKE  (r2 I:long) = \l  (r1 I:java.io.RandomAccessFile A[D('raf' java.io.RandomAccessFile)])\l  (r0 I:android.support.multidex.ZipUtil$CentralDirectory A[D('dir' android.support.multidex.ZipUtil$CentralDirectory)])\l android.support.multidex.ZipUtil.computeCrcOfCentralDir(java.io.RandomAccessFile, android.support.multidex.ZipUtil$CentralDirectory):long type: STATIC A[Catch:\{ all \-\> 0x0013 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000f: INVOKE  \l  (r1 I:java.io.RandomAccessFile A[D('raf' java.io.RandomAccessFile)])\l java.io.RandomAccessFile.close():void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: RETURN  (r2 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|ExcHandler: all null\lSplitter:B:1:0x0007\l|0x0013: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: INVOKE  \l  (r1 I:java.io.RandomAccessFile A[D('raf' java.io.RandomAccessFile)])\l java.io.RandomAccessFile.close():void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{static long android.support.multidex.ZipUtil.getZipCrc((r4 I:java.io.File A[D('apk' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000b\-0x0013: r0 'dir' android.support.multidex.ZipUtil$CentralDirectory\l  0x0007\-0x0017: r1 'raf' java.io.RandomAccessFile\l  ?\-0x0017: r4 'apk' java.io.File\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

