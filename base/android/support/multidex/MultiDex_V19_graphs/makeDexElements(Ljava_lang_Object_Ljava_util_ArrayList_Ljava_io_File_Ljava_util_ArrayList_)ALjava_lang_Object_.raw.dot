digraph "CFG forandroid.support.multidex.MultiDex.V19.makeDexElements(Ljava\/lang\/Object;Ljava\/util\/ArrayList;Ljava\/io\/File;Ljava\/util\/ArrayList;)[Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r7 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0001: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0002: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0003: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: CONST_STR  (r1 I:java.lang.String) =  \"makeDexElements\" \l0x0006: NEW_ARRAY  (r2 I:java.lang.Class[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] \l0x0008: CONST_CLASS  (r3 I:java.lang.Class\<java.util.ArrayList\>) =  java.util.ArrayList.class \l0x000a: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x000c: CONST_CLASS  (r3 I:java.lang.Class\<java.io.File\>) =  java.io.File.class \l0x000e: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0010: CONST_CLASS  (r3 I:java.lang.Class\<java.util.ArrayList\>) =  java.util.ArrayList.class \l0x0012: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r6 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0014: INVOKE  (r0 I:java.lang.reflect.Method) = \l  (r8 I:java.lang.Object A[D('dexPathList' java.lang.Object)])\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Class[])\l android.support.multidex.MultiDex.access$200(java.lang.Object, java.lang.String, java.lang.Class[]):java.lang.reflect.Method type: STATIC \l0x0018: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x001a: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r9 I:?[OBJECT, ARRAY] A[D('files' java.util.ArrayList\<java.io.File\>)])\l \l0x001c: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r10 I:?[OBJECT, ARRAY] A[D('optimizedDirectory' java.io.File)])\l \l0x001e: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r6 I:?[int, short, byte, char])\l  (r11 I:?[OBJECT, ARRAY] A[D('suppressedExceptions' java.util.ArrayList\<java.io.IOException\>)])\l \l0x0020: INVOKE  (r1 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Method A[D('makeDexElements' java.lang.reflect.Method)])\l  (r8 I:java.lang.Object A[D('dexPathList' java.lang.Object)])\l  (r1 I:java.lang.Object[])\l java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL \l0x0024: CHECK_CAST  (r1 I:java.lang.Object[]) = (java.lang.Object[]) (r1 I:?[OBJECT, ARRAY]) \l0x0026: CHECK_CAST  (r1 I:java.lang.Object[]) = (java.lang.Object[]) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0028|0x0028: RETURN  (r1 I:java.lang.Object[]) \l}"];
MethodNode[shape=record,label="{private static java.lang.Object[] android.support.multidex.MultiDex.V19.makeDexElements((r8 I:java.lang.Object A[D('dexPathList' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.util.ArrayList\<java.io.File\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.io.File A[D('optimizedDirectory' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.util.ArrayList\<java.io.IOException\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0018\-0x0028: r0 'makeDexElements' java.lang.reflect.Method\l  ?\-0x0028: r8 'dexPathList' java.lang.Object\l  0x0000\-0x0028: r9 'files' java.util.ArrayList\<java.io.File\>\l  ?\-0x0028: r10 'optimizedDirectory' java.io.File\l  0x0000\-0x0028: r11 'suppressedExceptions' java.util.ArrayList\<java.io.IOException\>\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.NoSuchMethodException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/Object;, Ljava\/util\/ArrayList, \<, Ljava\/io\/File;, \>;, Ljava\/io\/File;, Ljava\/util\/ArrayList, \<, Ljava\/io\/IOException;, \>;)[, Ljava\/lang\/Object;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

