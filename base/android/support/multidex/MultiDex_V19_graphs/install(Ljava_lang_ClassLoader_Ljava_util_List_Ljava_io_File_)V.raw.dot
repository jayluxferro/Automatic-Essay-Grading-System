digraph "CFG forandroid.support.multidex.MultiDex.V19.install(Ljava\/lang\/ClassLoader;Ljava\/util\/List;Ljava\/io\/File;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST_STR  (r8 I:java.lang.String) =  \"pathList\" \l0x0003: INVOKE  (r5 I:java.lang.reflect.Field) = \l  (r12 I:java.lang.Object A[D('loader' java.lang.ClassLoader)])\l  (r8 I:java.lang.String)\l android.support.multidex.MultiDex.access$000(java.lang.Object, java.lang.String):java.lang.reflect.Field type: STATIC \l0x0007: INVOKE  (r2 I:java.lang.Object) = \l  (r5 I:java.lang.reflect.Field A[D('pathListField' java.lang.reflect.Field)])\l  (r12 I:java.lang.Object A[D('loader' java.lang.ClassLoader)])\l java.lang.reflect.Field.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x000b: NEW_INSTANCE  (r6 I:java.util.ArrayList) =  java.util.ArrayList \l0x000d: INVOKE  (r6 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0010: CONST_STR  (r8 I:java.lang.String) =  \"dexElements\" \l0x0012: NEW_INSTANCE  (r9 I:java.util.ArrayList) =  java.util.ArrayList \l0x0014: INVOKE  \l  (r9 I:java.util.ArrayList)\l  (r13 I:java.util.Collection A[D('additionalClassPathEntries' java.util.List\<? extends java.io.File\>)])\l java.util.ArrayList.\<init\>(java.util.Collection):void type: DIRECT \l0x0017: INVOKE  (r9 I:java.lang.Object[]) = \l  (r2 I:java.lang.Object A[D('dexPathList' java.lang.Object)])\l  (r9 I:java.util.ArrayList)\l  (r14 I:java.io.File A[D('optimizedDirectory' java.io.File)])\l  (r6 I:java.util.ArrayList A[D('suppressedExceptions' java.util.ArrayList\<java.io.IOException\>)])\l android.support.multidex.MultiDex.V19.makeDexElements(java.lang.Object, java.util.ArrayList, java.io.File, java.util.ArrayList):java.lang.Object[] type: STATIC \l0x001b: INVOKE  \l  (r2 I:java.lang.Object A[D('dexPathList' java.lang.Object)])\l  (r8 I:java.lang.String)\l  (r9 I:java.lang.Object[])\l android.support.multidex.MultiDex.access$100(java.lang.Object, java.lang.String, java.lang.Object[]):void type: STATIC \l0x001e: INVOKE  (r8 I:int) = \l  (r6 I:java.util.ArrayList A[D('suppressedExceptions' java.util.ArrayList\<java.io.IOException\>)])\l java.util.ArrayList.size():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0022|0x0022: IF  (r8 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x0082 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0024|0x0024: INVOKE  (r8 I:java.util.Iterator) = \l  (r6 I:java.util.ArrayList A[D('suppressedExceptions' java.util.ArrayList\<java.io.IOException\>)])\l java.util.ArrayList.iterator():java.util.Iterator type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0028|0x0028: INVOKE  (r9 I:boolean) = (r8 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|0x002c: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x003c \l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|0x002e: INVOKE  (r3 I:java.lang.Object) = (r8 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0032: CHECK_CAST  (r3 I:java.io.IOException) = (java.io.IOException) (r3 I:?[OBJECT, ARRAY]) \l0x0034: CONST_STR  (r9 I:java.lang.String) =  \"MultiDex\" \l0x0036: CONST_STR  (r10 I:java.lang.String) =  \"Exception in makeDexElement\" \l0x0038: INVOKE  \l  (r9 I:java.lang.String)\l  (r10 I:java.lang.String)\l  (r3 I:java.lang.Throwable A[D('e' java.io.IOException)])\l android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x003c|0x003c: CONST_STR  (r8 I:java.lang.String) =  \"dexElementsSuppressedExceptions\" \l0x003e: INVOKE  (r7 I:java.lang.reflect.Field) = \l  (r2 I:java.lang.Object A[D('dexPathList' java.lang.Object)])\l  (r8 I:java.lang.String)\l android.support.multidex.MultiDex.access$000(java.lang.Object, java.lang.String):java.lang.reflect.Field type: STATIC \l0x0042: INVOKE  (r8 I:java.lang.Object) = \l  (r7 I:java.lang.reflect.Field A[D('suppressedExceptionsField' java.lang.reflect.Field)])\l  (r2 I:java.lang.Object A[D('dexPathList' java.lang.Object)])\l java.lang.reflect.Field.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0046: CHECK_CAST  (r8 I:java.io.IOException[]) = (java.io.IOException[]) (r8 I:?[OBJECT, ARRAY]) \l0x0048: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0049: CHECK_CAST  (r1 I:java.io.IOException[]) = (java.io.IOException[]) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x004b|0x004b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('dexElementsSuppressedExceptions' java.io.IOException[])]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x006d \l}"];
Node_8 [shape=record,label="{8\:\ 0x004d|0x004d: INVOKE  (r8 I:int) = \l  (r6 I:java.util.ArrayList A[D('suppressedExceptions' java.util.ArrayList\<java.io.IOException\>)])\l java.util.ArrayList.size():int type: VIRTUAL \l0x0051: NEW_ARRAY  (r8 I:java.io.IOException[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: java.io.IOException[] \l0x0053: INVOKE  (r1 I:java.lang.Object[] A[D('dexElementsSuppressedExceptions' java.io.IOException[])]) = \l  (r6 I:java.util.ArrayList A[D('suppressedExceptions' java.util.ArrayList\<java.io.IOException\>)])\l  (r8 I:java.lang.Object[])\l java.util.ArrayList.toArray(java.lang.Object[]):java.lang.Object[] type: VIRTUAL \l0x0057: CHECK_CAST  (r1 I:java.io.IOException[] A[D('dexElementsSuppressedExceptions' java.io.IOException[])]) = (java.io.IOException[]) (r1 I:?[OBJECT, ARRAY] A[D('dexElementsSuppressedExceptions' java.io.IOException[])]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0059|0x0059: INVOKE  \l  (r7 I:java.lang.reflect.Field A[D('suppressedExceptionsField' java.lang.reflect.Field)])\l  (r2 I:java.lang.Object A[D('dexPathList' java.lang.Object)])\l  (r1 I:java.lang.Object A[D('dexElementsSuppressedExceptions' java.io.IOException[])])\l java.lang.reflect.Field.set(java.lang.Object, java.lang.Object):void type: VIRTUAL \l0x005c: NEW_INSTANCE  (r4 I:java.io.IOException) =  java.io.IOException \l0x005e: CONST_STR  (r8 I:java.lang.String) =  \"I\/O exception during makeDexElement\" \l0x0060: INVOKE  (r4 I:java.io.IOException), (r8 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l0x0063: INVOKE  (r8 I:java.lang.Object) = \l  (r6 I:java.util.ArrayList A[D('suppressedExceptions' java.util.ArrayList\<java.io.IOException\>)])\l  (r11 I:int)\l java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0067: CHECK_CAST  (r8 I:java.lang.Throwable) = (java.lang.Throwable) (r8 I:?[OBJECT, ARRAY]) \l0x0069: INVOKE  \l  (r4 I:java.io.IOException A[D('exception' java.io.IOException)])\l  (r8 I:java.lang.Throwable)\l java.io.IOException.initCause(java.lang.Throwable):java.lang.Throwable type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x006c|0x006c: THROW  \l  (r4 I:java.lang.Throwable A[D('exception' java.io.IOException)])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x006d|0x006d: INVOKE  (r8 I:int) = \l  (r6 I:java.util.ArrayList A[D('suppressedExceptions' java.util.ArrayList\<java.io.IOException\>)])\l java.util.ArrayList.size():int type: VIRTUAL \l0x0071: ARRAY_LENGTH  (r9 I:int) = \l  (r1 I:?[] A[D('dexElementsSuppressedExceptions' java.io.IOException[])])\l \l0x0072: ARITH  (r8 I:int) = (r8 I:int) + (r9 I:int) \l0x0073: NEW_ARRAY  (r0 I:java.io.IOException[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: java.io.IOException[] \l0x0075: INVOKE  \l  (r6 I:java.util.ArrayList A[D('suppressedExceptions' java.util.ArrayList\<java.io.IOException\>)])\l  (r0 I:java.lang.Object[] A[D('combined' java.io.IOException[])])\l java.util.ArrayList.toArray(java.lang.Object[]):java.lang.Object[] type: VIRTUAL \l0x0078: INVOKE  (r8 I:int) = \l  (r6 I:java.util.ArrayList A[D('suppressedExceptions' java.util.ArrayList\<java.io.IOException\>)])\l java.util.ArrayList.size():int type: VIRTUAL \l0x007c: ARRAY_LENGTH  (r9 I:int) = \l  (r1 I:?[] A[D('dexElementsSuppressedExceptions' java.io.IOException[])])\l \l0x007d: INVOKE  \l  (r1 I:java.lang.Object A[D('dexElementsSuppressedExceptions' java.io.IOException[])])\l  (r11 I:int)\l  (r0 I:java.lang.Object A[D('combined' java.io.IOException[])])\l  (r8 I:int)\l  (r9 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0080: MOVE  (r1 I:?[OBJECT, ARRAY] A[D('dexElementsSuppressedExceptions' java.io.IOException[])]) = \l  (r0 I:?[OBJECT, ARRAY] A[D('combined' java.io.IOException[])])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0082|0x0082: RETURN   \l}"];
MethodNode[shape=record,label="{static void android.support.multidex.MultiDex.V19.install((r12 I:java.lang.ClassLoader A[D('loader' java.lang.ClassLoader), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.util.List\<? extends java.io.File\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:java.io.File A[D('optimizedDirectory' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0034\-0x003c: r3 'e' java.io.IOException\l  0x004b\-0x0057: r1 'dexElementsSuppressedExceptions' java.io.IOException[]\l  0x0063\-0x006d: r4 'exception' java.io.IOException\l  0x0075\-0x0082: r0 'combined' java.io.IOException[]\l  0x0059\-0x0082: r1 'dexElementsSuppressedExceptions' java.io.IOException[]\l  0x0042\-0x0082: r7 'suppressedExceptionsField' java.lang.reflect.Field\l  0x000b\-0x0082: r2 'dexPathList' java.lang.Object\l  0x0007\-0x0082: r5 'pathListField' java.lang.reflect.Field\l  0x0010\-0x0082: r6 'suppressedExceptions' java.util.ArrayList\<java.io.IOException\>\l  ?\-0x0082: r12 'loader' java.lang.ClassLoader\l  0x0000\-0x0082: r13 'additionalClassPathEntries' java.util.List\<? extends java.io.File\>\l  ?\-0x0082: r14 'optimizedDirectory' java.io.File\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.IllegalArgumentException, java.lang.IllegalAccessException, java.lang.NoSuchFieldException, java.lang.reflect.InvocationTargetException, java.lang.NoSuchMethodException, java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/ClassLoader;, Ljava\/util\/List, \<+, Ljava\/io\/File;, \>;, Ljava\/io\/File;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_9;
}

