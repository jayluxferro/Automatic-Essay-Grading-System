digraph "CFG forandroid.support.multidex.MultiDex.V4.install(Ljava\/lang\/ClassLoader;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r5 = r14.size()\ljava.lang.reflect.Field r10 = android.support.multidex.MultiDex.access$000(r13, \"path\")\ljava.lang.StringBuilder r9 = new java.lang.StringBuilder((java.lang.String) r10.get(r13))\ljava.lang.String[] r4 = new java.lang.String[r5]\ljava.io.File[] r3 = new java.io.File[r5]\ljava.util.zip.ZipFile[] r6 = new java.util.zip.ZipFile[r5]\ldalvik.system.DexFile[] r2 = new dalvik.system.DexFile[r5]\ljava.util.ListIterator r8 = r14.listIterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0021|LOOP_START\lLOOP:0: B:1:0x0021\-\>B:3:0x0027\l}"];
Node_2 [shape=record,label="{2\:\ 0x0025|if (r8.hasNext() == false) goto L_0x0064\l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|LOOP_END\lLOOP:0: B:1:0x0021\-\>B:3:0x0027\l|java.io.File r0 = (java.io.File) r8.next()\ljava.lang.String r1 = r0.getAbsolutePath()\lr9.append(':').append(r1)\lint r7 = r8.previousIndex()\lr4[r7] = r1\lr3[r7] = r0\lr6[r7] = new java.util.zip.ZipFile(r0)\lr2[r7] = dalvik.system.DexFile.loadDex(r1, new java.lang.StringBuilder().append(r1).append(\".dex\").toString(), 0)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0064|r10.set(r13, r9.toString())\landroid.support.multidex.MultiDex.access$100(r13, \"mPaths\", r4)\landroid.support.multidex.MultiDex.access$100(r13, \"mFiles\", r3)\landroid.support.multidex.MultiDex.access$100(r13, \"mZips\", r6)\landroid.support.multidex.MultiDex.access$100(r13, \"mDexs\", r2)\l}"];
Node_5 [shape=record,label="{5\:\ 0x007f|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x0064|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static void android.support.multidex.MultiDex.V4.install((r13v0 'loader' java.lang.ClassLoader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'additionalClassPathEntries' java.util.List\<? extends java.io.File\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.IllegalArgumentException, java.lang.IllegalAccessException, java.lang.NoSuchFieldException, java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/ClassLoader;, Ljava\/util\/List, \<+, Ljava\/io\/File;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_6 -> Node_4;
}

