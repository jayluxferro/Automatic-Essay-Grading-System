digraph "CFG forandroid.support.multidex.MultiDexExtractor.performExtractions()Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r4 = new java.lang.StringBuilder().append(r14.sourceApk.getName()).append(EXTRACTED_NAME_EXT).toString()\lclearDexDir()\ljava.util.ArrayList r6 = new java.util.ArrayList\<\>()\ljava.util.zip.ZipFile r0 = new java.util.zip.ZipFile(r14.sourceApk)\lr9 = 2\l}"];
Node_1 [shape=record,label="{1\:\ 0x0029|SYNTHETIC\lSplitter:B:1:0x0029\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\lSplitter:B:1:0x0029\l|java.util.zip.ZipEntry r1 = r0.getEntry(new java.lang.StringBuilder().append(DEX_PREFIX).append(2).append(DEX_SUFFIX).toString())     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0046|LOOP_START\lCatch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\lPHI: r1 r9 \l  PHI: (r1v1 'dexFile' java.util.zip.ZipEntry) = (r1v0 'dexFile' java.util.zip.ZipEntry), (r1v2 'dexFile' java.util.zip.ZipEntry) binds: [B:2:?, B:34:0x015f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v1 'secondaryNumber' int) = (r9v0 'secondaryNumber' int), (r9v2 'secondaryNumber' int) binds: [B:2:?, B:34:0x015f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0046\-\>B:34:0x015f\l|if (r1 == null) goto L_0x0180     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0048|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l|java.lang.String r5 = new java.lang.StringBuilder().append(r4).append(r9).append(EXTRACTED_SUFFIX).toString()     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\landroid.support.multidex.MultiDexExtractor$ExtractedDex r3 = new android.support.multidex.MultiDexExtractor.ExtractedDex(r14.dexDir, r5)     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\lr6.add(r3)     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\landroid.util.Log.i(TAG, new java.lang.StringBuilder().append(\"Extraction is needed for file \").append(r3).toString())     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\lr8 = 0     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\lr7 = false     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0083|LOOP_START\lCatch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\lPHI: r7 r8 \l  PHI: (r7v1 'isExtractionSuccessful' boolean) = (r7v0 'isExtractionSuccessful' boolean), (r7v3 'isExtractionSuccessful' boolean) binds: [B:4:0x0048, B:43:0x0083] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 'numAttempts' int) = (r8v0 'numAttempts' int), (r8v2 'numAttempts' int) binds: [B:4:0x0048, B:43:0x0083] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:5:0x0083\-\>B:43:0x0083\l}"];
Node_6 [shape=record,label="{6\:\ 0x0084|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l|if (r8 \>= 3) goto L_0x0130     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0086|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l|if (r7 != false) goto L_0x0130     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0088|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l|int r8 = r8 + 1     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\lextract(r0, r1, r3, r4)     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x008d|SYNTHETIC\lSplitter:B:9:0x008d\l}"];
Node_10 [shape=record,label="{10\:\ ?|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\lSplitter:B:9:0x008d\l|r3.crc = getZipCrc(r3)     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0093|r7 = true\l}"];
Node_12 [shape=record,label="{12\:\ 0x0094|PHI: r7 \l  PHI: (r7v3 'isExtractionSuccessful' boolean) = (r7v2 'isExtractionSuccessful' boolean), (r7v4 'isExtractionSuccessful' boolean) binds: [B:29:?, B:11:0x0093] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0096|SYNTHETIC\lSplitter:B:13:0x0096\l}"];
Node_14 [shape=record,label="{14\:\ ?|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\lSplitter:B:13:0x0096\l|java.lang.StringBuilder r12 = new java.lang.StringBuilder().append(\"Extraction \")     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x00a1|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l|if (r7 == false) goto L_0x012c     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x00a3|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l|java.lang.String r10 = \"succeeded\"     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x00a5|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\lPHI: r10 \l  PHI: (r10v27 java.lang.String) = (r10v26 java.lang.String), (r10v38 java.lang.String) binds: [B:30:0x012c, B:16:0x00a3] A[DONT_GENERATE, DONT_INLINE]\l|android.util.Log.i(TAG, r12.append(r10).append(\" '\").append(r3.getAbsolutePath()).append(\"': length \").append(r3.length()).append(\" \- crc: \").append(r3.crc).toString())     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x00d8|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l|if (r7 != false) goto L_0x0083     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x00da|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l|r3.delete()     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x00e1|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l|if (r3.exists() == false) goto L_0x0083     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x00e3|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l|android.util.Log.w(TAG, new java.lang.StringBuilder().append(\"Failed to delete corrupted secondary dex '\").append(r3.getPath()).append(\"'\").toString())     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x0107|ExcHandler: all (r10v4 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:1:0x0029\l|java.lang.Throwable r10 = move\-exception\l}"];
Node_23 [shape=record,label="{23\:\ 0x0108|SYNTHETIC\lSplitter:B:23:0x0108\l}"];
Node_24 [shape=record,label="{24\:\ ?|Catch:\{ IOException \-\> 0x018d \}\lSplitter:B:23:0x0108\l|r0.close()     \/\/ Catch:\{ IOException \-\> 0x018d \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x010b|throw r10\l}"];
Node_26 [shape=record,label="{26\:\ 0x010c|ExcHandler: IOException (r2v2 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:9:0x008d\l|java.io.IOException r2 = move\-exception\l}"];
Node_27 [shape=record,label="{27\:\ 0x010d|r7 = false\l}"];
Node_28 [shape=record,label="{28\:\ 0x0110|SYNTHETIC\lSplitter:B:28:0x0110\l}"];
Node_29 [shape=record,label="{29\:\ ?|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\lSplitter:B:28:0x0110\l|android.util.Log.w(TAG, new java.lang.StringBuilder().append(\"Failed to read crc from \").append(r3.getAbsolutePath()).toString(), r2)     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_30 [shape=record,label="{30\:\ 0x012c|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l|java.lang.String r10 = \"failed\"     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_31 [shape=record,label="{31\:\ 0x0130|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l|if (r7 != false) goto L_0x015f     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_32 [shape=record,label="{32\:\ 0x0132|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_33 [shape=record,label="{33\:\ 0x015e|Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l|throw new java.io.IOException(new java.lang.StringBuilder().append(\"Could not create zip file \").append(r3.getAbsolutePath()).append(\" for secondary dex (\").append(r9).append(\")\").toString())     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_34 [shape=record,label="{34\:\ 0x015f|LOOP_END\lCatch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\lLOOP:0: B:3:0x0046\-\>B:34:0x015f\l|int r9 = r9 + 1     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\ljava.util.zip.ZipEntry r1 = r0.getEntry(new java.lang.StringBuilder().append(DEX_PREFIX).append(r9).append(DEX_SUFFIX).toString())     \/\/ Catch:\{ IOException \-\> 0x010c, all \-\> 0x0107 \}\l}"];
Node_35 [shape=record,label="{35\:\ 0x0180|SYNTHETIC\lSplitter:B:35:0x0180\l}"];
Node_36 [shape=record,label="{36\:\ ?|Catch:\{ IOException \-\> 0x0184 \}\lSplitter:B:35:0x0180\l|r0.close()     \/\/ Catch:\{ IOException \-\> 0x0184 \}\l}"];
Node_37 [shape=record,label="{37\:\ 0x0183|RETURN\l|return r6\l}"];
Node_38 [shape=record,label="{38\:\ 0x0184|ExcHandler: IOException (r2v1 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:35:0x0180\l|java.io.IOException r2 = move\-exception\l}"];
Node_39 [shape=record,label="{39\:\ 0x0185|android.util.Log.w(TAG, \"Failed to close resource\", r2)\l}"];
Node_40 [shape=record,label="{40\:\ 0x018d|ExcHandler: IOException (r2v0 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:23:0x0108\l|java.io.IOException r2 = move\-exception\l}"];
Node_41 [shape=record,label="{41\:\ 0x018e|android.util.Log.w(TAG, \"Failed to close resource\", r2)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0132|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0083|LOOP_END\lSYNTHETIC\lLOOP:1: B:5:0x0083\-\>B:43:0x0083\l}"];
Node_44 [shape=record,label="{44\:\ 0x0130|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0130|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0083|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0083|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0083|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private java.util.List\<android.support.multidex.MultiDexExtractor$ExtractedDex\> android.support.multidex.MultiDexExtractor.performExtractions((r14v0 'this' android.support.multidex.MultiDexExtractor A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/List, \<, Landroid\/support\/multidex\/MultiDexExtractor$ExtractedDex;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_22;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_35;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_44;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_45;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_26;
Node_10 -> Node_11;
Node_10 -> Node_26;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_22;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_30;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_46;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_47;
Node_21 -> Node_48;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_40;
Node_24 -> Node_25;
Node_24 -> Node_40;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_22;
Node_29 -> Node_12;
Node_30 -> Node_17;
Node_31 -> Node_34;
Node_31 -> Node_42[style=dashed];
Node_32 -> Node_33;
Node_34 -> Node_3;
Node_35 -> Node_36;
Node_35 -> Node_38;
Node_36 -> Node_37;
Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_37;
Node_40 -> Node_41;
Node_41 -> Node_25;
Node_42 -> Node_32;
Node_43 -> Node_5;
Node_44 -> Node_31;
Node_45 -> Node_31;
Node_46 -> Node_43;
Node_47 -> Node_43;
Node_48 -> Node_43;
}

