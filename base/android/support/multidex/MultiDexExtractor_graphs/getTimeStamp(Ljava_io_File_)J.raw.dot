digraph "CFG forandroid.support.multidex.MultiDexExtractor.getTimeStamp(Ljava\/io\/File;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:long) = (r4 I:java.io.File A[D('archive' java.io.File)]) java.io.File.lastModified():long type: VIRTUAL \l0x0004: CONST  (r2 I:?[long, double]) = (\-1 ?[long, double]) \l0x0006: CMP_L  (r2 I:int) = (r0 I:long A[D('timeStamp' long)]), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST  (r2 I:?[long, double]) = (1 ?[long, double]) \l0x000c: ARITH  (r0 I:long A[D('timeStamp' long)]) = (r0 I:long A[D('timeStamp' long)]) \- (r2 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN  (r0 I:long A[D('timeStamp' long)]) \l}"];
MethodNode[shape=record,label="{private static long android.support.multidex.MultiDexExtractor.getTimeStamp((r4 I:java.io.File A[D('archive' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0004\-0x000d: r0 'timeStamp' long\l  ?\-0x000d: r4 'archive' java.io.File\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

