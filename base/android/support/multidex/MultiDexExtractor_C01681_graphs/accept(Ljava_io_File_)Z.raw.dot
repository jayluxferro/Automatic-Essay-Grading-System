digraph "CFG forandroid.support.multidex.MultiDexExtractor.1.accept(Ljava\/io\/File;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.String) = (r3 I:java.io.File A[D('pathname' java.io.File)]) java.io.File.getName():java.lang.String type: VIRTUAL \l0x0004: CONST_STR  (r1 I:java.lang.String) =  \"MultiDex.lock\" \l0x0006: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN  (r0 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public boolean android.support.multidex.MultiDexExtractor.1.accept((r2 'this' I:android.support.multidex.MultiDexExtractor$1 A[IMMUTABLE_TYPE, THIS]), (r3 I:java.io.File A[D('pathname' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x000f: r3 'pathname' java.io.File\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_3;
}

