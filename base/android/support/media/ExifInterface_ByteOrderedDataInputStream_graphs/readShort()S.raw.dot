digraph "CFG forandroid.support.media.ExifInterface.ByteOrderedDataInputStream.readShort()S" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = \l  (r4 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mPosition int \l0x0002: ARITH  (r0 I:int) = (r0 I:int) + (2 int) \l0x0004: IPUT  \l  (r0 I:int)\l  (r4 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mPosition int \l0x0006: IGET  (r0 I:int) = \l  (r4 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mPosition int \l0x0008: IGET  (r1 I:int) = \l  (r4 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mLength int \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:16:0x0051 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IGET  (r0 I:java.io.DataInputStream) = \l  (r4 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mDataInputStream java.io.DataInputStream \l0x000e: INVOKE  (r0 I:int) = (r0 I:java.io.DataInputStream) java.io.DataInputStream.read():int type: VIRTUAL \l0x0012: IGET  (r1 I:java.io.DataInputStream) = \l  (r4 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mDataInputStream java.io.DataInputStream \l0x0014: INVOKE  (r1 I:int) = (r1 I:java.io.DataInputStream) java.io.DataInputStream.read():int type: VIRTUAL \l0x0018: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) \| (r1 I:?[int, boolean, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IF  (r2 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:14:0x004b \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: IGET  (r2 I:java.nio.ByteOrder) = \l  (r4 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mByteOrder java.nio.ByteOrder \l0x001e: SGET  (r3 I:java.nio.ByteOrder) =  android.support.media.ExifInterface.ByteOrderedDataInputStream.LITTLE_ENDIAN java.nio.ByteOrder \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0027 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: ARITH  (r1 I:int) = (r1 I:int) \<\< (8 int) \l0x0024: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x0025: CAST  (r0 I:short) = (short) (r1 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: RETURN  (r0 I:short) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: IGET  (r2 I:java.nio.ByteOrder) = \l  (r4 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mByteOrder java.nio.ByteOrder \l0x0029: SGET  (r3 I:java.nio.ByteOrder) =  android.support.media.ExifInterface.ByteOrderedDataInputStream.BIG_ENDIAN java.nio.ByteOrder \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0032 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: ARITH  (r0 I:int) = (r0 I:int) \<\< (8 int) \l0x002f: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0030: CAST  (r0 I:short) = (short) (r0 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|0x0031: RETURN  (r0 I:short) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|0x0032: NEW_INSTANCE  (r0 I:java.io.IOException) =  java.io.IOException \l0x0034: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0036: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0039: CONST_STR  (r2 I:java.lang.String) =  \"Invalid byte order: \" \l0x003b: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003e: IGET  (r2 I:java.nio.ByteOrder) = \l  (r4 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mByteOrder java.nio.ByteOrder \l0x0040: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0043: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0047: INVOKE  (r0 I:java.io.IOException), (r1 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x004a|0x004a: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x004b|0x004b: NEW_INSTANCE  (r0 I:java.io.EOFException) =  java.io.EOFException \l0x004d: INVOKE  (r0 I:java.io.EOFException) java.io.EOFException.\<init\>():void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0050|0x0050: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0051|0x0051: NEW_INSTANCE  (r0 I:java.io.EOFException) =  java.io.EOFException \l0x0053: INVOKE  (r0 I:java.io.EOFException) java.io.EOFException.\<init\>():void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0056|0x0056: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public short android.support.media.ExifInterface.ByteOrderedDataInputStream.readShort((r4 'this' I:android.support.media.ExifInterface$ByteOrderedDataInputStream A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

