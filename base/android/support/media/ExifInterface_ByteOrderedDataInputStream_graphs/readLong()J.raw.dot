digraph "CFG forandroid.support.media.ExifInterface.ByteOrderedDataInputStream.readLong()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0002: IGET  (r1 I:int) = \l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mPosition int \l0x0004: CONST  (r2 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0006: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x0007: IPUT  \l  (r1 I:int)\l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mPosition int \l0x0009: IGET  (r1 I:int) = \l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mPosition int \l0x000b: IGET  (r3 I:int) = \l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mLength int \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r1 I:?[int, byte, short, char]) \> (r3 I:?[int, byte, short, char])  \-\> B:16:0x00bb \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: IGET  (r1 I:java.io.DataInputStream) = \l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mDataInputStream java.io.DataInputStream \l0x0011: INVOKE  (r1 I:int) = (r1 I:java.io.DataInputStream) java.io.DataInputStream.read():int type: VIRTUAL \l0x0015: IGET  (r3 I:java.io.DataInputStream) = \l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mDataInputStream java.io.DataInputStream \l0x0017: INVOKE  (r3 I:int) = (r3 I:java.io.DataInputStream) java.io.DataInputStream.read():int type: VIRTUAL \l0x001b: IGET  (r4 I:java.io.DataInputStream) = \l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mDataInputStream java.io.DataInputStream \l0x001d: INVOKE  (r4 I:int) = (r4 I:java.io.DataInputStream) java.io.DataInputStream.read():int type: VIRTUAL \l0x0021: IGET  (r5 I:java.io.DataInputStream) = \l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mDataInputStream java.io.DataInputStream \l0x0023: INVOKE  (r5 I:int) = (r5 I:java.io.DataInputStream) java.io.DataInputStream.read():int type: VIRTUAL \l0x0027: IGET  (r6 I:java.io.DataInputStream) = \l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mDataInputStream java.io.DataInputStream \l0x0029: INVOKE  (r6 I:int) = (r6 I:java.io.DataInputStream) java.io.DataInputStream.read():int type: VIRTUAL \l0x002d: IGET  (r7 I:java.io.DataInputStream) = \l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mDataInputStream java.io.DataInputStream \l0x002f: INVOKE  (r7 I:int) = (r7 I:java.io.DataInputStream) java.io.DataInputStream.read():int type: VIRTUAL \l0x0033: IGET  (r8 I:java.io.DataInputStream) = \l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mDataInputStream java.io.DataInputStream \l0x0035: INVOKE  (r8 I:int) = (r8 I:java.io.DataInputStream) java.io.DataInputStream.read():int type: VIRTUAL \l0x0039: IGET  (r9 I:java.io.DataInputStream) = \l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mDataInputStream java.io.DataInputStream \l0x003b: INVOKE  (r9 I:int) = (r9 I:java.io.DataInputStream) java.io.DataInputStream.read():int type: VIRTUAL \l0x003f: ARITH  (r10 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) \| (r3 I:?[int, boolean, short, byte, char]) \l0x0041: ARITH  (r10 I:?[int, boolean, short, byte, char]) = (r10 I:?[int, boolean, short, byte, char]) \| (r4 I:?[int, boolean, short, byte, char]) \l0x0042: ARITH  (r10 I:?[int, boolean, short, byte, char]) = (r10 I:?[int, boolean, short, byte, char]) \| (r5 I:?[int, boolean, short, byte, char]) \l0x0043: ARITH  (r10 I:?[int, boolean, short, byte, char]) = (r10 I:?[int, boolean, short, byte, char]) \| (r6 I:?[int, boolean, short, byte, char]) \l0x0044: ARITH  (r10 I:?[int, boolean, short, byte, char]) = (r10 I:?[int, boolean, short, byte, char]) \| (r7 I:?[int, boolean, short, byte, char]) \l0x0045: ARITH  (r10 I:?[int, boolean, short, byte, char]) = (r10 I:?[int, boolean, short, byte, char]) \| (r8 I:?[int, boolean, short, byte, char]) \l0x0046: ARITH  (r10 I:?[int, boolean, short, byte, char]) = (r10 I:?[int, boolean, short, byte, char]) \| (r9 I:?[int, boolean, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0047|0x0047: IF  (r10 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:14:0x00b5 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0049|0x0049: IGET  (r10 I:java.nio.ByteOrder) = \l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mByteOrder java.nio.ByteOrder \l0x004b: SGET  (r11 I:java.nio.ByteOrder) =  android.support.media.ExifInterface.ByteOrderedDataInputStream.LITTLE_ENDIAN java.nio.ByteOrder \l0x004d: CONST  (r12 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x004f: CONST  (r13 I:?[int, float, short, byte, char]) = (24 ?[int, float, short, byte, char]) \l0x0051: CONST  (r14 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0053: CONST  (r15 I:?[int, float, short, byte, char]) = (40 ?[int, float, short, byte, char]) \l0x0055: CONST  (r16 I:?[int, float, short, byte, char]) = (48 ?[int, float, short, byte, char]) \l0x0057: CONST  (r17 I:?[int, float, short, byte, char]) = (56 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0059|0x0059: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x007a \l}"];
Node_6 [shape=record,label="{6\:\ 0x005b|0x005b: CAST  (r9 I:long) = (long) (r9 I:int) \l0x005c: ARITH  (r9 I:long) = (r9 I:long) \<\< (r17 I:long) \l0x005e: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0060: CAST  (r2 I:long) = (long) (r8 I:int) \l0x0061: ARITH  (r2 I:long) = (r2 I:long) \<\< (r16 I:long) \l0x0063: ARITH  (r9 I:long) = (r9 I:long) + (r2 I:long) \l0x0064: CAST  (r2 I:long) = (long) (r7 I:int) \l0x0065: ARITH  (r2 I:long) = (r2 I:long) \<\< (r15 I:long) \l0x0066: ARITH  (r9 I:long) = (r9 I:long) + (r2 I:long) \l0x0067: CAST  (r2 I:long) = (long) (r6 I:int) \l0x0068: ARITH  (r2 I:long) = (r2 I:long) \<\< (r14 I:long) \l0x0069: ARITH  (r9 I:long) = (r9 I:long) + (r2 I:long) \l0x006a: CAST  (r2 I:long) = (long) (r5 I:int) \l0x006b: ARITH  (r2 I:long) = (r2 I:long) \<\< (r13 I:long) \l0x006c: ARITH  (r9 I:long) = (r9 I:long) + (r2 I:long) \l0x006d: CAST  (r2 I:long) = (long) (r4 I:int) \l0x006e: ARITH  (r2 I:long) = (r2 I:long) \<\< (r12 I:long) \l0x006f: ARITH  (r9 I:long) = (r9 I:long) + (r2 I:long) \l0x0070: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0072: CAST  (r2 I:long) = (long) (r2 I:int) \l0x0073: CONST  (r4 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0075: ARITH  (r2 I:long) = (r2 I:long) \<\< (r4 I:long) \l0x0076: ARITH  (r9 I:long) = (r9 I:long) + (r2 I:long) \l0x0077: CAST  (r1 I:long) = (long) (r1 I:int) \l0x0078: ARITH  (r9 I:long) = (r9 I:long) + (r1 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0079|0x0079: RETURN  (r9 I:long) \l}"];
Node_8 [shape=record,label="{8\:\ 0x007a|0x007a: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007b: IGET  (r3 I:java.nio.ByteOrder) = \l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mByteOrder java.nio.ByteOrder \l0x007d: SGET  (r10 I:java.nio.ByteOrder) =  android.support.media.ExifInterface.ByteOrderedDataInputStream.BIG_ENDIAN java.nio.ByteOrder \l}"];
Node_9 [shape=record,label="{9\:\ 0x007f|0x007f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x009c \l}"];
Node_10 [shape=record,label="{10\:\ 0x0081|0x0081: CAST  (r10 I:long) = (long) (r1 I:int) \l0x0082: ARITH  (r10 I:long) = (r10 I:long) \<\< (r17 I:long) \l0x0084: CAST  (r1 I:long) = (long) (r2 I:int) \l0x0085: ARITH  (r1 I:long) = (r1 I:long) \<\< (r16 I:long) \l0x0087: ARITH  (r10 I:long) = (r10 I:long) + (r1 I:long) \l0x0088: CAST  (r1 I:long) = (long) (r4 I:int) \l0x0089: ARITH  (r1 I:long) = (r1 I:long) \<\< (r15 I:long) \l0x008a: ARITH  (r10 I:long) = (r10 I:long) + (r1 I:long) \l0x008b: CAST  (r1 I:long) = (long) (r5 I:int) \l0x008c: ARITH  (r1 I:long) = (r1 I:long) \<\< (r14 I:long) \l0x008d: ARITH  (r10 I:long) = (r10 I:long) + (r1 I:long) \l0x008e: CAST  (r1 I:long) = (long) (r6 I:int) \l0x008f: ARITH  (r1 I:long) = (r1 I:long) \<\< (r13 I:long) \l0x0090: ARITH  (r10 I:long) = (r10 I:long) + (r1 I:long) \l0x0091: CAST  (r1 I:long) = (long) (r7 I:int) \l0x0092: ARITH  (r1 I:long) = (r1 I:long) \<\< (r12 I:long) \l0x0093: ARITH  (r10 I:long) = (r10 I:long) + (r1 I:long) \l0x0094: CAST  (r1 I:long) = (long) (r8 I:int) \l0x0095: CONST  (r3 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0097: ARITH  (r1 I:long) = (r1 I:long) \<\< (r3 I:long) \l0x0098: ARITH  (r10 I:long) = (r10 I:long) + (r1 I:long) \l0x0099: CAST  (r1 I:long) = (long) (r9 I:int) \l0x009a: ARITH  (r10 I:long) = (r10 I:long) + (r1 I:long) \l}"];
Node_11 [shape=record,label="{11\:\ 0x009b|0x009b: RETURN  (r10 I:long) \l}"];
Node_12 [shape=record,label="{12\:\ 0x009c|0x009c: NEW_INSTANCE  (r1 I:java.io.IOException) =  java.io.IOException \l0x009e: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00a0: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00a3: CONST_STR  (r3 I:java.lang.String) =  \"Invalid byte order: \" \l0x00a5: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a8: IGET  (r3 I:java.nio.ByteOrder) = \l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mByteOrder java.nio.ByteOrder \l0x00aa: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x00ad: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00b1: INVOKE  (r1 I:java.io.IOException), (r2 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x00b4|0x00b4: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x00b5|0x00b5: NEW_INSTANCE  (r1 I:java.io.EOFException) =  java.io.EOFException \l0x00b7: INVOKE  (r1 I:java.io.EOFException) java.io.EOFException.\<init\>():void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x00ba|0x00ba: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x00bb|0x00bb: NEW_INSTANCE  (r1 I:java.io.EOFException) =  java.io.EOFException \l0x00bd: INVOKE  (r1 I:java.io.EOFException) java.io.EOFException.\<init\>():void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x00c0|0x00c0: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public long android.support.media.ExifInterface.ByteOrderedDataInputStream.readLong((r19 'this' I:android.support.media.ExifInterface$ByteOrderedDataInputStream A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

