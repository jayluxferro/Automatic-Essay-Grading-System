digraph "CFG forandroid.support.media.ExifInterface.ByteOrderedDataInputStream.readFully([B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = \l  (r3 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mPosition int \l0x0002: ARRAY_LENGTH  (r1 I:int) = (r4 I:?[]) \l0x0003: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0004: IPUT  \l  (r0 I:int)\l  (r3 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mPosition int \l0x0006: IGET  (r0 I:int) = \l  (r3 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mPosition int \l0x0008: IGET  (r1 I:int) = \l  (r3 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mLength int \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:7:0x0020 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IGET  (r0 I:java.io.DataInputStream) = \l  (r3 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.mDataInputStream java.io.DataInputStream \l0x000e: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000f: ARRAY_LENGTH  (r2 I:int) = (r4 I:?[]) \l0x0010: INVOKE  (r0 I:int) = \l  (r0 I:java.io.DataInputStream)\l  (r4 I:byte[])\l  (r1 I:int)\l  (r2 I:int)\l java.io.DataInputStream.read(byte[], int, int):int type: VIRTUAL \l0x0014: ARRAY_LENGTH  (r4 I:int) = (r4 I:?[]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0018 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: NEW_INSTANCE  (r4 I:java.io.IOException) =  java.io.IOException \l0x001a: CONST_STR  (r0 I:java.lang.String) =  \"Couldn't read up to the length of buffer\" \l0x001c: INVOKE  (r4 I:java.io.IOException), (r0 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: NEW_INSTANCE  (r4 I:java.io.EOFException) =  java.io.EOFException \l0x0022: INVOKE  (r4 I:java.io.EOFException) java.io.EOFException.\<init\>():void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.media.ExifInterface.ByteOrderedDataInputStream.readFully((r3 'this' I:android.support.media.ExifInterface$ByteOrderedDataInputStream A[IMMUTABLE_TYPE, THIS]), (r4 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

