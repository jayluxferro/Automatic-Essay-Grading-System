digraph "CFG forandroid.support.media.ExifInterface.getThumbnailBitmap()Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mHasThumbnail boolean \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r1 I:android.graphics.Bitmap) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r0 I:byte[]) = (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mThumbnailBytes byte[] \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: INVOKE  (r0 I:byte[]) = (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.getThumbnailBytes():byte[] type: VIRTUAL \l0x000e: IPUT  (r0 I:byte[]), (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mThumbnailBytes byte[] \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IGET  (r0 I:int) = (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mThumbnailCompression int \l0x0012: CONST  (r2 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0013: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x007b \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: IGET  (r0 I:int) = (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mThumbnailCompression int \l0x0018: CONST  (r2 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001c \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: IGET  (r0 I:int) = (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mThumbnailCompression int \l0x001e: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|0x001f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x007a \l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|0x0021: IGET  (r0 I:byte[]) = (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mThumbnailBytes byte[] \l0x0023: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l0x0024: ARITH  (r0 I:int) = (r0 I:int) \/ (3 int) \l0x0026: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0028: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|0x0029: ARRAY_LENGTH  (r4 I:int) = (r0 I:?[]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|0x002a: IF  (r2 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:17:0x004a \l}"];
Node_16 [shape=record,label="{16\:\ 0x002c|0x002c: IGET  (r4 I:byte[]) = (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mThumbnailBytes byte[] \l0x002e: ARITH  (r5 I:int) = (r2 I:int) * (3 int) \l0x0030: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r4 I:byte[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l \l0x0032: ARITH  (r4 I:int) = (r4 I:int) \<\< (16 int) \l0x0034: ARITH  (r4 I:int) = (r4 I:int) + (r3 I:int) \l0x0035: IGET  (r6 I:byte[]) = (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mThumbnailBytes byte[] \l0x0037: ARITH  (r7 I:int) = (r5 I:int) + (1 int) \l0x0039: AGET  (r6 I:byte A[IMMUTABLE_TYPE]) = \l  (r6 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l \l0x003b: ARITH  (r6 I:int) = (r6 I:int) \<\< (8 int) \l0x003d: ARITH  (r4 I:int) = (r4 I:int) + (r6 I:int) \l0x003e: IGET  (r6 I:byte[]) = (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mThumbnailBytes byte[] \l0x0040: ARITH  (r5 I:int) = (r5 I:int) + (2 int) \l0x0042: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r6 I:byte[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l \l0x0044: ARITH  (r4 I:int) = (r4 I:int) + (r5 I:int) \l0x0045: APUT  \l  (r0 I:?[int, float][])\l  (r2 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x0047: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x004a|0x004a: IGET  (r2 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x004c: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x004d: AGET  (r2 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x004f: CONST_STR  (r4 I:java.lang.String) =  \"ImageLength\" \l0x0051: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.HashMap), (r4 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0055: CHECK_CAST  (r2 I:android.support.media.ExifInterface$ExifAttribute) = (android.support.media.ExifInterface$ExifAttribute) (r2 I:?[OBJECT, ARRAY]) \l0x0057: IGET  (r4 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x0059: AGET  (r3 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x005b: CONST_STR  (r4 I:java.lang.String) =  \"ImageWidth\" \l0x005d: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.HashMap), (r4 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0061: CHECK_CAST  (r3 I:android.support.media.ExifInterface$ExifAttribute) = (android.support.media.ExifInterface$ExifAttribute) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0063|0x0063: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x007a \l}"];
Node_19 [shape=record,label="{19\:\ 0x0065|0x0065: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x007a \l}"];
Node_20 [shape=record,label="{20\:\ 0x0067|0x0067: IGET  (r1 I:java.nio.ByteOrder) = (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mExifByteOrder java.nio.ByteOrder \l0x0069: INVOKE  (r1 I:int) = \l  (r2 I:android.support.media.ExifInterface$ExifAttribute)\l  (r1 I:java.nio.ByteOrder)\l android.support.media.ExifInterface.ExifAttribute.getIntValue(java.nio.ByteOrder):int type: VIRTUAL \l0x006d: IGET  (r2 I:java.nio.ByteOrder) = (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mExifByteOrder java.nio.ByteOrder \l0x006f: INVOKE  (r2 I:int) = \l  (r3 I:android.support.media.ExifInterface$ExifAttribute)\l  (r2 I:java.nio.ByteOrder)\l android.support.media.ExifInterface.ExifAttribute.getIntValue(java.nio.ByteOrder):int type: VIRTUAL \l0x0073: SGET  (r3 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config \l0x0075: INVOKE  (r0 I:android.graphics.Bitmap) = \l  (r0 I:int[])\l  (r2 I:int)\l  (r1 I:int)\l  (r3 I:android.graphics.Bitmap$Config)\l android.graphics.Bitmap.createBitmap(int[], int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap type: STATIC \l}"];
Node_21 [shape=record,label="{21\:\ 0x0079|0x0079: RETURN  (r0 I:android.graphics.Bitmap) \l}"];
Node_22 [shape=record,label="{22\:\ 0x007a|0x007a: RETURN  (r1 I:android.graphics.Bitmap) \l}"];
Node_23 [shape=record,label="{23\:\ 0x007b|0x007b: IGET  (r0 I:byte[]) = (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mThumbnailBytes byte[] \l0x007d: IGET  (r1 I:int) = (r8 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mThumbnailLength int \l0x007f: INVOKE  (r0 I:android.graphics.Bitmap) = (r0 I:byte[]), (r3 I:int), (r1 I:int) android.graphics.BitmapFactory.decodeByteArray(byte[], int, int):android.graphics.Bitmap type: STATIC \l}"];
Node_24 [shape=record,label="{24\:\ 0x0083|0x0083: RETURN  (r0 I:android.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{public android.graphics.Bitmap android.support.media.ExifInterface.getThumbnailBitmap((r8 'this' I:android.support.media.ExifInterface A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_23;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_23[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_22;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_14;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_23 -> Node_24;
}

