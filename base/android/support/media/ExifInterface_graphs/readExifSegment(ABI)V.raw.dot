digraph "CFG forandroid.support.media.ExifInterface.readExifSegment([BI)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream) =  android.support.media.ExifInterface$ByteOrderedDataInputStream \l0x0002: INVOKE  \l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l  (r2 I:byte[])\l android.support.media.ExifInterface.ByteOrderedDataInputStream.\<init\>(byte[]):void type: DIRECT \l0x0005: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l0x0006: INVOKE  \l  (r1 I:android.support.media.ExifInterface)\l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l  (r2 I:int)\l android.support.media.ExifInterface.parseTiffHeaders(android.support.media.ExifInterface$ByteOrderedDataInputStream, int):void type: DIRECT \l0x0009: INVOKE  \l  (r1 I:android.support.media.ExifInterface)\l  (r0 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l  (r3 I:int)\l android.support.media.ExifInterface.readImageFileDirectory(android.support.media.ExifInterface$ByteOrderedDataInputStream, int):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.media.ExifInterface.readExifSegment((r1 'this' I:android.support.media.ExifInterface A[IMMUTABLE_TYPE, THIS]), (r2 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

