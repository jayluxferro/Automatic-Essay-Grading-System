digraph "CFG forandroid.support.media.ExifInterface.getAltitude(D)D" {
subgraph cluster_Region_1333733082 {
label = "R(2:0|(2:(1:8)|(3:3|(1:5)|7)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|double double r0 = getAttributeDouble(TAG_GPS_ALTITUDE, \-1.0d)\lint int r2 = getAttributeInt(TAG_GPS_ALTITUDE_REF, \-1)\l}"];
subgraph cluster_Region_773403411 {
label = "R(2:(1:8)|(3:3|(1:5)|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2077238387 {
label = "IF [B:1:0x0013, B:2:0x0015] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0013|if (r0 \< 0.0d) goto L_0x001f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|ADDED_TO_REGION\l|if (r2 \< 0) goto L_0x001f\l}"];
subgraph cluster_Region_2136621542 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001f|RETURN\l|return r7\l}"];
}
}
subgraph cluster_Region_1601528698 {
label = "R(3:3|(1:5)|7)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0017|int r7 = 1\l}"];
subgraph cluster_IfRegion_1001780044 {
label = "IF [B:4:0x0018] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0018|if (r2 == 1) goto L_0x001a\l}"];
subgraph cluster_Region_231365398 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001a|r7 = \-1\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x001e|RETURN\l|return r0 * ((double) r7)\l}"];
}
}
}
Node_6 [shape=record,color=red,label="{6\:\ 0x001b|PHI: r7 \l  PHI: (r7v2 int) = (r7v1 int), (r7v4 int) binds: [B:4:0x0018, B:5:0x001a] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public double android.support.media.ExifInterface.getAltitude((r6v0 'this' android.support.media.ExifInterface A[IMMUTABLE_TYPE, THIS]), (r7v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
}

