digraph "CFG forandroid.support.media.ExifInterface.isJpegFormat([B)Z" {
subgraph cluster_Region_161832925 {
label = "R(3:0|(1:(2:(1:5)|(1:6)))|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = 0\l}"];
subgraph cluster_LoopRegion_1949292249 {
label = "LOOP:0: (1:(2:(1:5)|(1:6)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r1 \< JPEG_SIGNATURE.length) goto L_0x0007\l}"];
subgraph cluster_Region_625679829 {
label = "R(1:(2:(1:5)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1989895570 {
label = "R(2:(1:5)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1298320069 {
label = "IF [B:4:0x000d] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|if (r4[r1] != JPEG_SIGNATURE[r1]) goto L_0x000f\l}"];
subgraph cluster_Region_1798535222 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_755243822 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0010|LOOP_END\lLOOP:0: B:1:0x0002\-\>B:6:0x0010\l|r1++\l}"];
}
}
}
}
Node_7 [shape=record,label="{7\:\ 0x0013|RETURN\l|return true\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:6:0x0010] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0002\-\>B:6:0x0010\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0007}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0013|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x000f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static boolean android.support.media.ExifInterface.isJpegFormat((r4v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_8[style=dashed];
Node_4 -> Node_6[style=dashed];
Node_4 -> Node_9;
Node_6 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_8 -> Node_7;
Node_9 -> Node_5;
}

