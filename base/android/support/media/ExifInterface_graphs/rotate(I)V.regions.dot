digraph "CFG forandroid.support.media.ExifInterface.rotate(I)V" {
subgraph cluster_Region_1139845960 {
label = "R(1:(2:(4:2|(3:4|(1:6)|7)(1:(3:10|(1:12)|13))|14|15)|(1:17)))";
node [shape=record,color=blue];
subgraph cluster_Region_1018445847 {
label = "R(2:(4:2|(3:4|(1:6)|7)(1:(3:10|(1:12)|13))|14|15)|(1:17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_962420856 {
label = "IF [B:1:0x0002] THEN: R(4:2|(3:4|(1:6)|7)(1:(3:10|(1:12)|13))|14|15) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r6 % 90) == 0) goto L_0x0004\l}"];
subgraph cluster_Region_631876575 {
label = "R(4:2|(3:4|(1:6)|7)(1:(3:10|(1:12)|13))|14|15)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|int int r0 = getAttributeInt(TAG_ORIENTATION, 1)\lint r2 = 0\l}"];
subgraph cluster_IfRegion_2031927289 {
label = "IF [B:3:0x0017] THEN: R(3:4|(1:6)|7) ELSE: R(1:(3:10|(1:12)|13))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0017|if (ROTATION_ORDER.contains(java.lang.Integer.valueOf(r0)) == true) goto L_0x0019\l}"];
subgraph cluster_Region_322992016 {
label = "R(3:4|(1:6)|7)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0019|int int r0 = (ROTATION_ORDER.indexOf(java.lang.Integer.valueOf(r0)) + (r6 \/ 90)) % 4\l}"];
subgraph cluster_IfRegion_1893029117 {
label = "IF [B:5:0x0027] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0027|if (r0 \< 0) goto L_0x0029\l}"];
subgraph cluster_Region_1710935095 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0029|r2 = 4\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x002a|PHI: r2 \l  PHI: (r2v6 int) = (r2v1 int), (r2v8 int) binds: [B:5:0x0027, B:6:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = ROTATION_ORDER.get(r0 + r2).intValue()\l}"];
}
subgraph cluster_Region_1689882448 {
label = "R(1:(3:10|(1:12)|13)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_24569075 {
label = "IF [B:9:0x0042] THEN: R(3:10|(1:12)|13) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0042|if (FLIPPED_ROTATION_ORDER.contains(java.lang.Integer.valueOf(r0)) == true) goto L_0x0044\l}"];
subgraph cluster_Region_1768505425 {
label = "R(3:10|(1:12)|13)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0044|int int r0 = (FLIPPED_ROTATION_ORDER.indexOf(java.lang.Integer.valueOf(r0)) + (r6 \/ 90)) % 4\l}"];
subgraph cluster_IfRegion_1394470151 {
label = "IF [B:11:0x0052] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0052|if (r0 \< 0) goto L_0x0054\l}"];
subgraph cluster_Region_1964427762 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0054|r2 = 4\l}"];
}
}
Node_13 [shape=record,label="{13\:\ 0x0055|PHI: r2 \l  PHI: (r2v3 int) = (r2v1 int), (r2v5 int) binds: [B:11:0x0052, B:12:0x0054] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = FLIPPED_ROTATION_ORDER.get(r0 + r2).intValue()\l}"];
}
}
}
}
Node_14 [shape=record,label="{14\:\ 0x0062|PHI: r2 \l  PHI: (r2v2 int) = (r2v1 int), (r2v4 int), (r2v7 int) binds: [B:9:0x0042, B:13:0x0055, B:7:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|setAttribute(TAG_ORIENTATION, java.lang.Integer.toString(r2))\l}"];
Node_15 [shape=record,label="{15\:\ 0x006b|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_576045668 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0073|throw new java.lang.IllegalArgumentException(\"degree should be a multiple of 90\")\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0038}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x006c}"];
MethodNode[shape=record,label="{public void android.support.media.ExifInterface.rotate((r5v0 'this' android.support.media.ExifInterface A[IMMUTABLE_TYPE, THIS]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_16[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_8[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_14;
Node_9 -> Node_10;
Node_9 -> Node_14[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_0 -> Node_1;
Node_8 -> Node_9;
Node_16 -> Node_17;
}

