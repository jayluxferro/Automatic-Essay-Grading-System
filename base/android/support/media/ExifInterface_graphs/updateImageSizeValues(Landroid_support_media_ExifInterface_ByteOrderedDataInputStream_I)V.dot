digraph "CFG forandroid.support.media.ExifInterface.updateImageSizeValues(Landroid\/support\/media\/ExifInterface$ByteOrderedDataInputStream;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.support.media.ExifInterface$ExifAttribute r0 = r6.mAttributes[r8].get(TAG_DEFAULT_CROP_SIZE)\landroid.support.media.ExifInterface$ExifAttribute r1 = r6.mAttributes[r8].get(TAG_RW2_SENSOR_TOP_BORDER)\landroid.support.media.ExifInterface$ExifAttribute r2 = r6.mAttributes[r8].get(TAG_RW2_SENSOR_LEFT_BORDER)\landroid.support.media.ExifInterface$ExifAttribute r3 = r6.mAttributes[r8].get(TAG_RW2_SENSOR_BOTTOM_BORDER)\landroid.support.media.ExifInterface$ExifAttribute r4 = r6.mAttributes[r8].get(TAG_RW2_SENSOR_RIGHT_BORDER)\l}"];
Node_1 [shape=record,label="{1\:\ 0x003c|if (r0 == null) goto L_0x00cc\l}"];
Node_2 [shape=record,label="{2\:\ 0x003e}"];
Node_3 [shape=record,label="{3\:\ 0x0044|if (r0.format != 5) goto L_0x0080\l}"];
Node_4 [shape=record,label="{4\:\ 0x0046|android.support.media.ExifInterface$Rational[] r7 = (android.support.media.ExifInterface.Rational[]) android.support.media.ExifInterface.ExifAttribute.access$500(r0, r6.mExifByteOrder)\l}"];
Node_5 [shape=record,label="{5\:\ 0x004e|if (r7 == null) goto L_0x0065\l}"];
Node_6 [shape=record,label="{6\:\ 0x0050}"];
Node_7 [shape=record,label="{7\:\ 0x0051|if (r7.length == 2) goto L_0x0054\l}"];
Node_8 [shape=record,label="{8\:\ 0x0054|android.support.media.ExifInterface$ExifAttribute r0 = android.support.media.ExifInterface.ExifAttribute.createURational(r7[0], r6.mExifByteOrder)\landroid.support.media.ExifInterface$ExifAttribute r7 = android.support.media.ExifInterface.ExifAttribute.createURational(r7[1], r6.mExifByteOrder)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0065|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Invalid crop size values. cropSize=\")\lr0.append(java.util.Arrays.toString(r7))\landroid.util.Log.w(TAG, r0.toString())\l}"];
Node_10 [shape=record,label="{10\:\ 0x007f|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x0080|int[] r7 = (int[]) android.support.media.ExifInterface.ExifAttribute.access$500(r0, r6.mExifByteOrder)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0088|if (r7 == null) goto L_0x00b1\l}"];
Node_13 [shape=record,label="{13\:\ 0x008a}"];
Node_14 [shape=record,label="{14\:\ 0x008b|if (r7.length == 2) goto L_0x008e\l}"];
Node_15 [shape=record,label="{15\:\ 0x008e|android.support.media.ExifInterface$ExifAttribute r0 = android.support.media.ExifInterface.ExifAttribute.createUShort(r7[0], r6.mExifByteOrder)\landroid.support.media.ExifInterface$ExifAttribute r7 = android.support.media.ExifInterface.ExifAttribute.createUShort(r7[1], r6.mExifByteOrder)\l}"];
Node_16 [shape=record,label="{16\:\ 0x009e|PHI: r0 r7 \l  PHI: (r0v9 android.support.media.ExifInterface$ExifAttribute) = (r0v15 android.support.media.ExifInterface$ExifAttribute), (r0v19 android.support.media.ExifInterface$ExifAttribute) binds: [B:15:0x008e, B:8:0x0054] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v8 android.support.media.ExifInterface$ExifAttribute) = (r7v15 android.support.media.ExifInterface$ExifAttribute), (r7v22 android.support.media.ExifInterface$ExifAttribute) binds: [B:15:0x008e, B:8:0x0054] A[DONT_GENERATE, DONT_INLINE]\l|r6.mAttributes[r8].put(TAG_IMAGE_WIDTH, r0)\lr6.mAttributes[r8].put(TAG_IMAGE_LENGTH, r7)\l}"];
Node_17 [shape=record,label="{17\:\ 0x00b1|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Invalid crop size values. cropSize=\")\lr0.append(java.util.Arrays.toString(r7))\landroid.util.Log.w(TAG, r0.toString())\l}"];
Node_18 [shape=record,label="{18\:\ 0x00cb|RETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ 0x00cc|if (r1 == null) goto L_0x0111\l}"];
Node_20 [shape=record,label="{20\:\ 0x00ce|if (r2 == null) goto L_0x0111\l}"];
Node_21 [shape=record,label="{21\:\ 0x00d0|if (r3 == null) goto L_0x0111\l}"];
Node_22 [shape=record,label="{22\:\ 0x00d2|if (r4 == null) goto L_0x0111\l}"];
Node_23 [shape=record,label="{23\:\ 0x00d4|int r7 = r1.getIntValue(r6.mExifByteOrder)\lint r0 = r3.getIntValue(r6.mExifByteOrder)\lint r1 = r4.getIntValue(r6.mExifByteOrder)\lint r2 = r2.getIntValue(r6.mExifByteOrder)\l}"];
Node_24 [shape=record,label="{24\:\ 0x00ec|if (r0 \<= r7) goto L_?\l}"];
Node_25 [shape=record,label="{25\:\ 0x00ee|if (r1 \<= r2) goto L_?\l}"];
Node_26 [shape=record,label="{26\:\ 0x00f0|android.support.media.ExifInterface$ExifAttribute r7 = android.support.media.ExifInterface.ExifAttribute.createUShort(r0 \- r7, r6.mExifByteOrder)\landroid.support.media.ExifInterface$ExifAttribute r0 = android.support.media.ExifInterface.ExifAttribute.createUShort(r1 \- r2, r6.mExifByteOrder)\lr6.mAttributes[r8].put(TAG_IMAGE_LENGTH, r7)\lr6.mAttributes[r8].put(TAG_IMAGE_WIDTH, r0)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0111|retrieveJpegImageSize(r7, r8)\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.media.ExifInterface.updateImageSizeValues((r6v0 'this' android.support.media.ExifInterface A[IMMUTABLE_TYPE, THIS]), (r7v0 android.support.media.ExifInterface$ByteOrderedDataInputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_17[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_29;
Node_17 -> Node_18;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_27;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_30;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_32;
Node_27 -> Node_28;
}

