digraph "CFG forandroid.support.media.ExifInterface.getOrfAttributes(Landroid\/support\/media\/ExifInterface$ByteOrderedDataInputStream;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r6 I:android.support.media.ExifInterface)\l  (r7 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.getRawAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream):void type: DIRECT \l0x0003: IGET  (r7 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r6 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x0005: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0006: AGET  (r7 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0008: CONST_STR  (r1 I:java.lang.String) =  \"MakerNote\" \l0x000a: INVOKE  (r7 I:java.lang.Object) = (r7 I:java.util.HashMap), (r1 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x000e: CHECK_CAST  (r7 I:android.support.media.ExifInterface$ExifAttribute) = (android.support.media.ExifInterface$ExifAttribute) (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00fc \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: NEW_INSTANCE  (r1 I:android.support.media.ExifInterface$ByteOrderedDataInputStream) =  android.support.media.ExifInterface$ByteOrderedDataInputStream \l0x0014: IGET  (r7 I:byte[]) = (r7 I:android.support.media.ExifInterface$ExifAttribute) android.support.media.ExifInterface.ExifAttribute.bytes byte[] \l0x0016: INVOKE  \l  (r1 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l  (r7 I:byte[])\l android.support.media.ExifInterface.ByteOrderedDataInputStream.\<init\>(byte[]):void type: DIRECT \l0x0019: IGET  (r7 I:java.nio.ByteOrder) = (r6 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mExifByteOrder java.nio.ByteOrder \l0x001b: INVOKE  \l  (r1 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l  (r7 I:java.nio.ByteOrder)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.setByteOrder(java.nio.ByteOrder):void type: VIRTUAL \l0x001e: SGET  (r7 I:byte[]) =  android.support.media.ExifInterface.ORF_MAKER_NOTE_HEADER_1 byte[] \l0x0020: ARRAY_LENGTH  (r7 I:int) = (r7 I:?[]) \l0x0021: NEW_ARRAY  (r7 I:byte[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0023: INVOKE  \l  (r1 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l  (r7 I:byte[])\l android.support.media.ExifInterface.ByteOrderedDataInputStream.readFully(byte[]):void type: VIRTUAL \l0x0026: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0028: INVOKE  \l  (r1 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l  (r2 I:long)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.seek(long):void type: VIRTUAL \l0x002b: SGET  (r2 I:byte[]) =  android.support.media.ExifInterface.ORF_MAKER_NOTE_HEADER_2 byte[] \l0x002d: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l0x002e: NEW_ARRAY  (r2 I:byte[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0030: INVOKE  \l  (r1 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l  (r2 I:byte[])\l android.support.media.ExifInterface.ByteOrderedDataInputStream.readFully(byte[]):void type: VIRTUAL \l0x0033: SGET  (r3 I:byte[]) =  android.support.media.ExifInterface.ORF_MAKER_NOTE_HEADER_1 byte[] \l0x0035: INVOKE  (r7 I:boolean) = (r7 I:byte[]), (r3 I:byte[]) java.util.Arrays.equals(byte[], byte[]):boolean type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0039|0x0039: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0041 \l}"];
Node_4 [shape=record,label="{4\:\ 0x003b|0x003b: CONST  (r2 I:?[long, double]) = (8 ?[long, double]) \l0x003d: INVOKE  \l  (r1 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l  (r2 I:long)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.seek(long):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0041|0x0041: SGET  (r7 I:byte[]) =  android.support.media.ExifInterface.ORF_MAKER_NOTE_HEADER_2 byte[] \l0x0043: INVOKE  (r7 I:boolean) = (r2 I:byte[]), (r7 I:byte[]) java.util.Arrays.equals(byte[], byte[]):boolean type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0047|0x0047: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x004e \l}"];
Node_7 [shape=record,label="{7\:\ 0x0049|0x0049: CONST  (r2 I:?[long, double]) = (12 ?[long, double]) \l0x004b: INVOKE  \l  (r1 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l  (r2 I:long)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.seek(long):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x004e|0x004e: CONST  (r7 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x004f: INVOKE  \l  (r6 I:android.support.media.ExifInterface)\l  (r1 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l  (r7 I:int)\l android.support.media.ExifInterface.readImageFileDirectory(android.support.media.ExifInterface$ByteOrderedDataInputStream, int):void type: DIRECT \l0x0052: IGET  (r7 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r6 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x0054: CONST  (r1 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l0x0055: AGET  (r7 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0057: CONST_STR  (r2 I:java.lang.String) =  \"PreviewImageStart\" \l0x0059: INVOKE  (r7 I:java.lang.Object) = (r7 I:java.util.HashMap), (r2 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x005d: CHECK_CAST  (r7 I:android.support.media.ExifInterface$ExifAttribute) = (android.support.media.ExifInterface$ExifAttribute) (r7 I:?[OBJECT, ARRAY]) \l0x005f: IGET  (r2 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r6 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x0061: AGET  (r1 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0063: CONST_STR  (r2 I:java.lang.String) =  \"PreviewImageLength\" \l0x0065: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.HashMap), (r2 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0069: CHECK_CAST  (r1 I:android.support.media.ExifInterface$ExifAttribute) = (android.support.media.ExifInterface$ExifAttribute) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x006b|0x006b: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0082 \l}"];
Node_10 [shape=record,label="{10\:\ 0x006d|0x006d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0082 \l}"];
Node_11 [shape=record,label="{11\:\ 0x006f|0x006f: IGET  (r2 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r6 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x0071: CONST  (r3 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0072: AGET  (r2 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0074: CONST_STR  (r4 I:java.lang.String) =  \"JPEGInterchangeFormat\" \l0x0076: INVOKE  \l  (r2 I:java.util.HashMap)\l  (r4 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l0x0079: IGET  (r7 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r6 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x007b: AGET  (r7 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x007d: CONST_STR  (r2 I:java.lang.String) =  \"JPEGInterchangeFormatLength\" \l0x007f: INVOKE  \l  (r7 I:java.util.HashMap)\l  (r2 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0082|0x0082: IGET  (r7 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r6 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x0084: CONST  (r1 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0086: AGET  (r7 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0088: CONST_STR  (r1 I:java.lang.String) =  \"AspectFrame\" \l0x008a: INVOKE  (r7 I:java.lang.Object) = (r7 I:java.util.HashMap), (r1 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x008e: CHECK_CAST  (r7 I:android.support.media.ExifInterface$ExifAttribute) = (android.support.media.ExifInterface$ExifAttribute) (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0090|0x0090: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00fc \l}"];
Node_14 [shape=record,label="{14\:\ 0x0092|0x0092: IGET  (r1 I:java.nio.ByteOrder) = (r6 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mExifByteOrder java.nio.ByteOrder \l0x0094: INVOKE  (r7 I:java.lang.Object) = \l  (r7 I:android.support.media.ExifInterface$ExifAttribute)\l  (r1 I:java.nio.ByteOrder)\l android.support.media.ExifInterface.ExifAttribute.access$500(android.support.media.ExifInterface$ExifAttribute, java.nio.ByteOrder):java.lang.Object type: STATIC \l0x0098: CHECK_CAST  (r7 I:int[]) = (int[]) (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x009a|0x009a: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x00e1 \l}"];
Node_16 [shape=record,label="{16\:\ 0x009c|0x009c: ARRAY_LENGTH  (r1 I:int) = (r7 I:?[]) \l0x009d: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x009e|0x009e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x00a1 \l}"];
Node_19 [shape=record,label="{19\:\ 0x00a1|0x00a1: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x00a2: AGET  (r2 I:?[int, float]) = (r7 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x00a4: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a5: AGET  (r4 I:?[int, float]) = (r7 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x00a7|0x00a7: IF  (r2 I:?[int, byte, short, char]) \<= (r4 I:?[int, byte, short, char])  \-\> B:29:0x00fc \l}"];
Node_21 [shape=record,label="{21\:\ 0x00a9|0x00a9: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x00aa: AGET  (r4 I:?[int, float]) = (r7 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x00ac: AGET  (r5 I:?[int, float]) = (r7 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x00ae|0x00ae: IF  (r4 I:?[int, byte, short, char]) \<= (r5 I:?[int, byte, short, char])  \-\> B:29:0x00fc \l}"];
Node_23 [shape=record,label="{23\:\ 0x00b0|0x00b0: AGET  (r1 I:?[int, float]) = (r7 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x00b2: AGET  (r4 I:?[int, float]) = (r7 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x00b4: ARITH  (r1 I:int) = (r1 I:int) \- (r4 I:int) \l0x00b5: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x00b6: AGET  (r2 I:?[int, float]) = (r7 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x00b8: AGET  (r7 I:?[int, float]) = (r7 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l0x00ba: ARITH  (r2 I:int) = (r2 I:int) \- (r7 I:int) \l0x00bb: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int) \l}"];
Node_24 [shape=record,label="{24\:\ 0x00bc|0x00bc: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:26:0x00c2 \l}"];
Node_25 [shape=record,label="{25\:\ 0x00be|0x00be: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x00bf: ARITH  (r2 I:int) = (r1 I:int) \- (r2 I:int) \l0x00c1: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x00c2|0x00c2: IGET  (r7 I:java.nio.ByteOrder) = (r6 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mExifByteOrder java.nio.ByteOrder \l0x00c4: INVOKE  (r7 I:android.support.media.ExifInterface$ExifAttribute) = (r1 I:int), (r7 I:java.nio.ByteOrder) android.support.media.ExifInterface.ExifAttribute.createUShort(int, java.nio.ByteOrder):android.support.media.ExifInterface$ExifAttribute type: STATIC \l0x00c8: IGET  (r0 I:java.nio.ByteOrder) = (r6 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mExifByteOrder java.nio.ByteOrder \l0x00ca: INVOKE  (r0 I:android.support.media.ExifInterface$ExifAttribute) = (r2 I:int), (r0 I:java.nio.ByteOrder) android.support.media.ExifInterface.ExifAttribute.createUShort(int, java.nio.ByteOrder):android.support.media.ExifInterface$ExifAttribute type: STATIC \l0x00ce: IGET  (r1 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r6 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x00d0: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x00d2: CONST_STR  (r2 I:java.lang.String) =  \"ImageWidth\" \l0x00d4: INVOKE  \l  (r1 I:java.util.HashMap)\l  (r2 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l0x00d7: IGET  (r7 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r6 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x00d9: AGET  (r7 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x00db: CONST_STR  (r1 I:java.lang.String) =  \"ImageLength\" \l0x00dd: INVOKE  \l  (r7 I:java.util.HashMap)\l  (r1 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x00e1|0x00e1: CONST_STR  (r0 I:java.lang.String) =  \"ExifInterface\" \l0x00e3: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00e5: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00e8: CONST_STR  (r2 I:java.lang.String) =  \"Invalid aspect frame values. frame=\" \l0x00ea: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00ed: INVOKE  (r7 I:java.lang.String) = (r7 I:int[]) java.util.Arrays.toString(int[]):java.lang.String type: STATIC \l0x00f1: INVOKE  (r1 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00f4: INVOKE  (r7 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00f8: INVOKE  (r0 I:java.lang.String), (r7 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_28 [shape=record,label="{28\:\ 0x00fb|0x00fb: RETURN   \l}"];
Node_29 [shape=record,label="{29\:\ 0x00fc|0x00fc: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.media.ExifInterface.getOrfAttributes((r6 'this' I:android.support.media.ExifInterface A[IMMUTABLE_TYPE, THIS]), (r7 I:android.support.media.ExifInterface$ByteOrderedDataInputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_29;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_29;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_27;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_27[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_29;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_29;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_29;
Node_27 -> Node_28;
}

