digraph "CFG forandroid.support.media.ExifInterface.saveJpegAttributes(Ljava\/io\/InputStream;Ljava\/io\/OutputStream;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.io.DataInputStream) =  java.io.DataInputStream \l0x0002: INVOKE  (r0 I:java.io.DataInputStream), (r10 I:java.io.InputStream) java.io.DataInputStream.\<init\>(java.io.InputStream):void type: DIRECT \l0x0005: NEW_INSTANCE  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream) =  android.support.media.ExifInterface$ByteOrderedDataOutputStream \l0x0007: SGET  (r1 I:java.nio.ByteOrder) =  java.nio.ByteOrder.BIG_ENDIAN java.nio.ByteOrder \l0x0009: INVOKE  \l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r11 I:java.io.OutputStream)\l  (r1 I:java.nio.ByteOrder)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.\<init\>(java.io.OutputStream, java.nio.ByteOrder):void type: DIRECT \l0x000c: INVOKE  (r11 I:byte) = (r0 I:java.io.DataInputStream) java.io.DataInputStream.readByte():byte type: VIRTUAL \l0x0010: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x00e5 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: INVOKE  \l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r1 I:int)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.writeByte(int):void type: VIRTUAL \l0x0016: INVOKE  (r11 I:byte) = (r0 I:java.io.DataInputStream) java.io.DataInputStream.readByte():byte type: VIRTUAL \l0x001a: CONST  (r2 I:?[int, float, short, byte, char]) = (\-40 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x00dd \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: INVOKE  \l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r2 I:int)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.writeByte(int):void type: VIRTUAL \l0x0021: INVOKE  \l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r1 I:int)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.writeByte(int):void type: VIRTUAL \l0x0024: CONST  (r11 I:?[int, float, short, byte, char]) = (\-31 ?[int, float, short, byte, char]) \l0x0026: INVOKE  \l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r11 I:int)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.writeByte(int):void type: VIRTUAL \l0x0029: CONST  (r2 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x002a: INVOKE  \l  (r9 I:android.support.media.ExifInterface)\l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r2 I:int)\l android.support.media.ExifInterface.writeExifSegment(android.support.media.ExifInterface$ByteOrderedDataOutputStream, int):int type: DIRECT \l0x002d: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (4096(0x1000, float:5.74E\-42) ?[int, float, short, byte, char])\l \l0x002f: NEW_ARRAY  (r3 I:byte[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: byte[] \l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|0x0031: INVOKE  (r4 I:byte) = (r0 I:java.io.DataInputStream) java.io.DataInputStream.readByte():byte type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0035|0x0035: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x00d5 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|0x0037: INVOKE  (r4 I:byte) = (r0 I:java.io.DataInputStream) java.io.DataInputStream.readByte():byte type: VIRTUAL \l0x003b: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|0x003c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0076 \l}"];
Node_9 [shape=record,label="{9\:\ 0x003e|0x003e: SWITCH  \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[\-39, \-38] t:[0x006c, 0x006c] \l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|0x0041: INVOKE  \l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r1 I:int)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.writeByte(int):void type: VIRTUAL \l0x0044: INVOKE  \l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r4 I:int)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.writeByte(int):void type: VIRTUAL \l0x0047: INVOKE  (r4 I:int) = (r0 I:java.io.DataInputStream) java.io.DataInputStream.readUnsignedShort():int type: VIRTUAL \l0x004b: INVOKE  \l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r4 I:int)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.writeUnsignedShort(int):void type: VIRTUAL \l0x004e: ARITH  (r4 I:int) = (r4 I:int) + (\-2 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|0x0050: IF  (r4 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:16:0x0064 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0052|0x0052: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:5:0x0031 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0054|0x0054: ARRAY_LENGTH  (r6 I:int) = (r3 I:?[]) \l0x0055: INVOKE  (r6 I:int) = (r4 I:int), (r6 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x0059: INVOKE  (r6 I:int) = \l  (r0 I:java.io.DataInputStream)\l  (r3 I:byte[])\l  (r5 I:int)\l  (r6 I:int)\l java.io.DataInputStream.read(byte[], int, int):int type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x005d|0x005d: IF  (r6 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:5:0x0031 \l}"];
Node_15 [shape=record,label="{15\:\ 0x005f|0x005f: INVOKE  \l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r3 I:byte[])\l  (r5 I:int)\l  (r6 I:int)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.write(byte[], int, int):void type: VIRTUAL \l0x0062: ARITH  (r4 I:int) = (r4 I:int) \- (r6 I:int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0064|0x0064: NEW_INSTANCE  (r10 I:java.io.IOException) =  java.io.IOException \l0x0066: CONST_STR  (r11 I:java.lang.String) =  \"Invalid length\" \l0x0068: INVOKE  (r10 I:java.io.IOException), (r11 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x006b|0x006b: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_18 [shape=record,label="{18\:\ 0x006c|0x006c: INVOKE  \l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r1 I:int)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.writeByte(int):void type: VIRTUAL \l0x006f: INVOKE  \l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r4 I:int)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.writeByte(int):void type: VIRTUAL \l0x0072: INVOKE  (r0 I:java.io.InputStream), (r10 I:java.io.OutputStream) android.support.media.ExifInterface.copy(java.io.InputStream, java.io.OutputStream):int type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x0075|0x0075: RETURN   \l}"];
Node_20 [shape=record,label="{20\:\ 0x0076|0x0076: INVOKE  (r6 I:int) = (r0 I:java.io.DataInputStream) java.io.DataInputStream.readUnsignedShort():int type: VIRTUAL \l0x007a: ARITH  (r6 I:int) = (r6 I:int) + (\-2 int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x007c|0x007c: IF  (r6 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:42:0x00cd \l}"];
Node_22 [shape=record,label="{22\:\ 0x007e|0x007e: NEW_ARRAY  (r7 I:byte[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: byte[] \l}"];
Node_23 [shape=record,label="{23\:\ 0x0080|0x0080: IF  (r6 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:35:0x00a9 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0082|0x0082: INVOKE  (r8 I:int) = (r0 I:java.io.DataInputStream), (r7 I:byte[]) java.io.DataInputStream.read(byte[]):int type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x0086|0x0086: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x00a1 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0088|0x0088: SGET  (r8 I:byte[]) =  android.support.media.ExifInterface.IDENTIFIER_EXIF_APP1 byte[] \l0x008a: INVOKE  (r8 I:boolean) = (r7 I:byte[]), (r8 I:byte[]) java.util.Arrays.equals(byte[], byte[]):boolean type: STATIC \l}"];
Node_27 [shape=record,label="{27\:\ 0x008e|0x008e: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x00a9 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0090|0x0090: ARITH  (r6 I:int) = (r6 I:int) + (\-6 int) \l0x0092: INVOKE  (r4 I:int) = (r0 I:java.io.DataInputStream), (r6 I:int) java.io.DataInputStream.skipBytes(int):int type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x0096|0x0096: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0099 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0099|0x0099: NEW_INSTANCE  (r10 I:java.io.IOException) =  java.io.IOException \l0x009b: CONST_STR  (r11 I:java.lang.String) =  \"Invalid length\" \l0x009d: INVOKE  (r10 I:java.io.IOException), (r11 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_32 [shape=record,label="{32\:\ 0x00a0|0x00a0: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_33 [shape=record,label="{33\:\ 0x00a1|0x00a1: NEW_INSTANCE  (r10 I:java.io.IOException) =  java.io.IOException \l0x00a3: CONST_STR  (r11 I:java.lang.String) =  \"Invalid exif\" \l0x00a5: INVOKE  (r10 I:java.io.IOException), (r11 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_34 [shape=record,label="{34\:\ 0x00a8|0x00a8: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_35 [shape=record,label="{35\:\ 0x00a9|0x00a9: INVOKE  \l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r1 I:int)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.writeByte(int):void type: VIRTUAL \l0x00ac: INVOKE  \l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r4 I:int)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.writeByte(int):void type: VIRTUAL \l0x00af: ARITH  (r4 I:int) = (r6 I:int) + (2 int) \l0x00b1: INVOKE  \l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r4 I:int)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.writeUnsignedShort(int):void type: VIRTUAL \l}"];
Node_36 [shape=record,label="{36\:\ 0x00b4|0x00b4: IF  (r6 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:38:0x00bb \l}"];
Node_37 [shape=record,label="{37\:\ 0x00b6|0x00b6: ARITH  (r6 I:int) = (r6 I:int) + (\-6 int) \l0x00b8: INVOKE  \l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r7 I:byte[])\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.write(byte[]):void type: VIRTUAL \l}"];
Node_38 [shape=record,label="{38\:\ 0x00bb|0x00bb: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:5:0x0031 \l}"];
Node_39 [shape=record,label="{39\:\ 0x00bd|0x00bd: ARRAY_LENGTH  (r4 I:int) = (r3 I:?[]) \l0x00be: INVOKE  (r4 I:int) = (r6 I:int), (r4 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x00c2: INVOKE  (r4 I:int) = \l  (r0 I:java.io.DataInputStream)\l  (r3 I:byte[])\l  (r5 I:int)\l  (r4 I:int)\l java.io.DataInputStream.read(byte[], int, int):int type: VIRTUAL \l}"];
Node_40 [shape=record,label="{40\:\ 0x00c6|0x00c6: IF  (r4 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:5:0x0031 \l}"];
Node_41 [shape=record,label="{41\:\ 0x00c8|0x00c8: INVOKE  \l  (r10 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l  (r3 I:byte[])\l  (r5 I:int)\l  (r4 I:int)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.write(byte[], int, int):void type: VIRTUAL \l0x00cb: ARITH  (r6 I:int) = (r6 I:int) \- (r4 I:int) \l}"];
Node_42 [shape=record,label="{42\:\ 0x00cd|0x00cd: NEW_INSTANCE  (r10 I:java.io.IOException) =  java.io.IOException \l0x00cf: CONST_STR  (r11 I:java.lang.String) =  \"Invalid length\" \l0x00d1: INVOKE  (r10 I:java.io.IOException), (r11 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_43 [shape=record,label="{43\:\ 0x00d4|0x00d4: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_44 [shape=record,label="{44\:\ 0x00d5|0x00d5: NEW_INSTANCE  (r10 I:java.io.IOException) =  java.io.IOException \l0x00d7: CONST_STR  (r11 I:java.lang.String) =  \"Invalid marker\" \l0x00d9: INVOKE  (r10 I:java.io.IOException), (r11 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_45 [shape=record,label="{45\:\ 0x00dc|0x00dc: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_46 [shape=record,label="{46\:\ 0x00dd|0x00dd: NEW_INSTANCE  (r10 I:java.io.IOException) =  java.io.IOException \l0x00df: CONST_STR  (r11 I:java.lang.String) =  \"Invalid marker\" \l0x00e1: INVOKE  (r10 I:java.io.IOException), (r11 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_47 [shape=record,label="{47\:\ 0x00e4|0x00e4: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_48 [shape=record,label="{48\:\ 0x00e5|0x00e5: NEW_INSTANCE  (r10 I:java.io.IOException) =  java.io.IOException \l0x00e7: CONST_STR  (r11 I:java.lang.String) =  \"Invalid marker\" \l0x00e9: INVOKE  (r10 I:java.io.IOException), (r11 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_49 [shape=record,label="{49\:\ 0x00ec|0x00ec: THROW  (r10 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void android.support.media.ExifInterface.saveJpegAttributes((r9 'this' I:android.support.media.ExifInterface A[IMMUTABLE_TYPE, THIS]), (r10 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_48;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_46;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_44;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_20;
Node_9 -> Node_10;
Node_9 -> Node_18;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_5;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_5;
Node_14 -> Node_15[style=dashed];
Node_15 -> Node_12;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_42;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_35;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_33;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_35;
Node_28 -> Node_29;
Node_29 -> Node_31;
Node_29 -> Node_5[style=dashed];
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_5;
Node_38 -> Node_39[style=dashed];
Node_39 -> Node_40;
Node_40 -> Node_5;
Node_40 -> Node_41[style=dashed];
Node_41 -> Node_38;
Node_42 -> Node_43;
Node_44 -> Node_45;
Node_46 -> Node_47;
Node_48 -> Node_49;
}

