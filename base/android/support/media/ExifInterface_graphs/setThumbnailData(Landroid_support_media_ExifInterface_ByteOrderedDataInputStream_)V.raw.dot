digraph "CFG forandroid.support.media.ExifInterface.setThumbnailData(Landroid\/support\/media\/ExifInterface$ByteOrderedDataInputStream;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r3 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0003: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0005: CONST_STR  (r1 I:java.lang.String) =  \"Compression\" \l0x0007: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.HashMap), (r1 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x000b: CHECK_CAST  (r1 I:android.support.media.ExifInterface$ExifAttribute) = (android.support.media.ExifInterface$ExifAttribute) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: IGET  (r2 I:java.nio.ByteOrder) = (r3 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mExifByteOrder java.nio.ByteOrder \l0x0011: INVOKE  (r1 I:int) = \l  (r1 I:android.support.media.ExifInterface$ExifAttribute)\l  (r2 I:java.nio.ByteOrder)\l android.support.media.ExifInterface.ExifAttribute.getIntValue(java.nio.ByteOrder):int type: VIRTUAL \l0x0015: IPUT  (r1 I:int), (r3 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mThumbnailCompression int \l0x0017: IGET  (r1 I:int) = (r3 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mThumbnailCompression int \l0x0019: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0024 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[6, 7] t:[0x0020, 0x0024] \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: INVOKE  \l  (r3 I:android.support.media.ExifInterface)\l  (r4 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l  (r0 I:java.util.HashMap)\l android.support.media.ExifInterface.handleThumbnailFromJfif(android.support.media.ExifInterface$ByteOrderedDataInputStream, java.util.HashMap):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: INVOKE  (r1 I:boolean) = \l  (r3 I:android.support.media.ExifInterface)\l  (r0 I:java.util.HashMap)\l android.support.media.ExifInterface.isSupportedDataType(java.util.HashMap):boolean type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0034 \l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: INVOKE  \l  (r3 I:android.support.media.ExifInterface)\l  (r4 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l  (r0 I:java.util.HashMap)\l android.support.media.ExifInterface.handleThumbnailFromStrips(android.support.media.ExifInterface$ByteOrderedDataInputStream, java.util.HashMap):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: CONST  (r1 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x002f: IPUT  (r1 I:int), (r3 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mThumbnailCompression int \l0x0031: INVOKE  \l  (r3 I:android.support.media.ExifInterface)\l  (r4 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l  (r0 I:java.util.HashMap)\l android.support.media.ExifInterface.handleThumbnailFromJfif(android.support.media.ExifInterface$ByteOrderedDataInputStream, java.util.HashMap):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.media.ExifInterface.setThumbnailData((r3 'this' I:android.support.media.ExifInterface A[IMMUTABLE_TYPE, THIS]), (r4 I:android.support.media.ExifInterface$ByteOrderedDataInputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_6;
Node_4 -> Node_7;
Node_4 -> Node_11;
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_11;
Node_10 -> Node_11;
}

