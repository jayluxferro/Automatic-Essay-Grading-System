digraph "CFG forandroid.support.media.ExifInterface.readByteOrder(Landroid\/support\/media\/ExifInterface$ByteOrderedDataInputStream;)Ljava\/nio\/ByteOrder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:short) = \l  (r4 I:android.support.media.ExifInterface$ByteOrderedDataInputStream)\l android.support.media.ExifInterface.ByteOrderedDataInputStream.readShort():short type: VIRTUAL \l0x0004: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (18761(0x4949, float:2.629E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (19789(0x4d4d, float:2.773E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: SGET  (r4 I:java.nio.ByteOrder) =  java.nio.ByteOrder.BIG_ENDIAN java.nio.ByteOrder \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: RETURN  (r4 I:java.nio.ByteOrder) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: NEW_INSTANCE  (r0 I:java.io.IOException) =  java.io.IOException \l0x0011: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0013: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0016: CONST_STR  (r2 I:java.lang.String) =  \"Invalid byte order: \" \l0x0018: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001b: INVOKE  (r4 I:java.lang.String) = (r4 I:int) java.lang.Integer.toHexString(int):java.lang.String type: STATIC \l0x001f: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0022: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0026: INVOKE  (r0 I:java.io.IOException), (r4 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: SGET  (r4 I:java.nio.ByteOrder) =  java.nio.ByteOrder.LITTLE_ENDIAN java.nio.ByteOrder \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: RETURN  (r4 I:java.nio.ByteOrder) \l}"];
MethodNode[shape=record,label="{private java.nio.ByteOrder android.support.media.ExifInterface.readByteOrder((r3 'this' I:android.support.media.ExifInterface A[IMMUTABLE_TYPE, THIS]), (r4 I:android.support.media.ExifInterface$ByteOrderedDataInputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

