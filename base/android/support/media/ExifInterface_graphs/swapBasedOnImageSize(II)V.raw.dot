digraph "CFG forandroid.support.media.ExifInterface.swapBasedOnImageSize(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r5 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x0002: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r6 I:?[int, short, byte, char]) \l0x0004: INVOKE  (r0 I:boolean) = (r0 I:java.util.HashMap) java.util.HashMap.isEmpty():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x007c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r0 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r5 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x000c: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r7 I:?[int, short, byte, char]) \l0x000e: INVOKE  (r0 I:boolean) = (r0 I:java.util.HashMap) java.util.HashMap.isEmpty():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0015 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IGET  (r0 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r5 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x0017: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r6 I:?[int, short, byte, char]) \l0x0019: CONST_STR  (r1 I:java.lang.String) =  \"ImageLength\" \l0x001b: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.HashMap), (r1 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x001f: CHECK_CAST  (r0 I:android.support.media.ExifInterface$ExifAttribute) = (android.support.media.ExifInterface$ExifAttribute) (r0 I:?[OBJECT, ARRAY]) \l0x0021: IGET  (r1 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r5 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x0023: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r6 I:?[int, short, byte, char]) \l0x0025: CONST_STR  (r2 I:java.lang.String) =  \"ImageWidth\" \l0x0027: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.HashMap), (r2 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x002b: CHECK_CAST  (r1 I:android.support.media.ExifInterface$ExifAttribute) = (android.support.media.ExifInterface$ExifAttribute) (r1 I:?[OBJECT, ARRAY]) \l0x002d: IGET  (r2 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r5 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x002f: AGET  (r2 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r7 I:?[int, short, byte, char]) \l0x0031: CONST_STR  (r3 I:java.lang.String) =  \"ImageLength\" \l0x0033: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.HashMap), (r3 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0037: CHECK_CAST  (r2 I:android.support.media.ExifInterface$ExifAttribute) = (android.support.media.ExifInterface$ExifAttribute) (r2 I:?[OBJECT, ARRAY]) \l0x0039: IGET  (r3 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r5 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x003b: AGET  (r3 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r7 I:?[int, short, byte, char]) \l0x003d: CONST_STR  (r4 I:java.lang.String) =  \"ImageWidth\" \l0x003f: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.HashMap), (r4 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0043: CHECK_CAST  (r3 I:android.support.media.ExifInterface$ExifAttribute) = (android.support.media.ExifInterface$ExifAttribute) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0045|0x0045: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x007b \l}"];
Node_7 [shape=record,label="{7\:\ 0x0047|0x0047: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x004a \l}"];
Node_9 [shape=record,label="{9\:\ 0x004a|0x004a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x007b \l}"];
Node_10 [shape=record,label="{10\:\ 0x004c|0x004c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x004f \l}"];
Node_12 [shape=record,label="{12\:\ 0x004f|0x004f: IGET  (r4 I:java.nio.ByteOrder) = (r5 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mExifByteOrder java.nio.ByteOrder \l0x0051: INVOKE  (r0 I:int) = \l  (r0 I:android.support.media.ExifInterface$ExifAttribute)\l  (r4 I:java.nio.ByteOrder)\l android.support.media.ExifInterface.ExifAttribute.getIntValue(java.nio.ByteOrder):int type: VIRTUAL \l0x0055: IGET  (r4 I:java.nio.ByteOrder) = (r5 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mExifByteOrder java.nio.ByteOrder \l0x0057: INVOKE  (r1 I:int) = \l  (r1 I:android.support.media.ExifInterface$ExifAttribute)\l  (r4 I:java.nio.ByteOrder)\l android.support.media.ExifInterface.ExifAttribute.getIntValue(java.nio.ByteOrder):int type: VIRTUAL \l0x005b: IGET  (r4 I:java.nio.ByteOrder) = (r5 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mExifByteOrder java.nio.ByteOrder \l0x005d: INVOKE  (r2 I:int) = \l  (r2 I:android.support.media.ExifInterface$ExifAttribute)\l  (r4 I:java.nio.ByteOrder)\l android.support.media.ExifInterface.ExifAttribute.getIntValue(java.nio.ByteOrder):int type: VIRTUAL \l0x0061: IGET  (r4 I:java.nio.ByteOrder) = (r5 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mExifByteOrder java.nio.ByteOrder \l0x0063: INVOKE  (r3 I:int) = \l  (r3 I:android.support.media.ExifInterface$ExifAttribute)\l  (r4 I:java.nio.ByteOrder)\l android.support.media.ExifInterface.ExifAttribute.getIntValue(java.nio.ByteOrder):int type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0067|0x0067: IF  (r0 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:16:0x007b \l}"];
Node_14 [shape=record,label="{14\:\ 0x0069|0x0069: IF  (r1 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:16:0x007b \l}"];
Node_15 [shape=record,label="{15\:\ 0x006b|0x006b: IGET  (r0 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r5 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x006d: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r6 I:?[int, short, byte, char]) \l0x006f: IGET  (r1 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r5 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x0071: IGET  (r2 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r5 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x0073: AGET  (r2 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r7 I:?[int, short, byte, char]) \l0x0075: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r6 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0077: IGET  (r6 I:java.util.HashMap\<java.lang.String, android.support.media.ExifInterface$ExifAttribute\>[]) = (r5 I:android.support.media.ExifInterface) android.support.media.ExifInterface.mAttributes java.util.HashMap[] \l0x0079: APUT  \l  (r6 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x007b|0x007b: RETURN   \l}"];
Node_17 [shape=record,label="{17\:\ 0x007c|0x007c: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.media.ExifInterface.swapBasedOnImageSize((r5 'this' I:android.support.media.ExifInterface A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_17[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_16;
Node_7 -> Node_9;
Node_7 -> Node_16[style=dashed];
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_12;
Node_10 -> Node_16[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
}

