digraph "CFG forandroid.support.media.ExifInterface.getRawAttributes(Landroid\/support\/media\/ExifInterface$ByteOrderedDataInputStream;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|parseTiffHeaders(r5, r5.available())\lreadImageFileDirectory(r5, 0)\lupdateImageSizeValues(r5, 0)\lupdateImageSizeValues(r5, 5)\lupdateImageSizeValues(r5, 4)\lvalidateImages(r5)\l}"];
Node_1 [shape=record,label="{1\:\ 0x001d|if (r4.mMimeType != 8) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x001f|android.support.media.ExifInterface$ExifAttribute r5 = r4.mAttributes[1].get(TAG_MAKER_NOTE)\l}"];
Node_3 [shape=record,label="{3\:\ 0x002c|if (r5 == null) goto L_?\l}"];
Node_4 [shape=record,label="{4\:\ 0x002e|android.support.media.ExifInterface$ByteOrderedDataInputStream r1 = new android.support.media.ExifInterface.ByteOrderedDataInputStream(r5.bytes)\lr1.setByteOrder(r4.mExifByteOrder)\lr1.seek(6)\lreadImageFileDirectory(r1, 9)\landroid.support.media.ExifInterface$ExifAttribute r5 = r4.mAttributes[9].get(TAG_COLOR_SPACE)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0050|if (r5 == null) goto L_?\l}"];
Node_6 [shape=record,label="{6\:\ 0x0052|r4.mAttributes[1].put(TAG_COLOR_SPACE, r5)\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.media.ExifInterface.getRawAttributes((r4v0 'this' android.support.media.ExifInterface A[IMMUTABLE_TYPE, THIS]), (r5v0 android.support.media.ExifInterface$ByteOrderedDataInputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
}

