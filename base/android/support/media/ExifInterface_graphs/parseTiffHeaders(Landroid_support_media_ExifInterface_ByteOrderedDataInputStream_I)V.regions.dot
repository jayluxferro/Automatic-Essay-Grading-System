digraph "CFG forandroid.support.media.ExifInterface.parseTiffHeaders(Landroid\/support\/media\/ExifInterface$ByteOrderedDataInputStream;I)V" {
subgraph cluster_Region_446138914 {
label = "R(2:0|(2:(2:8|(2:(2:17|18)|(2:11|(2:(2:15|16)|(1:20)))))|(2:6|7)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3.mExifByteOrder = readByteOrder(r4)\lr4.setByteOrder(r3.mExifByteOrder)\lint int r0 = r4.readUnsignedShort()\l}"];
subgraph cluster_Region_286535185 {
label = "R(2:(2:8|(2:(2:17|18)|(2:11|(2:(2:15|16)|(1:20)))))|(2:6|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_545752947 {
label = "IF [B:1:0x0012, B:3:0x0018, B:5:0x001c] THEN: R(2:8|(2:(2:17|18)|(2:11|(2:(2:15|16)|(1:20))))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0012|if (r3.mMimeType == 7) goto L_0x003a\l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|ADDED_TO_REGION\l|if (r3.mMimeType == 10) goto L_0x003a\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|ADDED_TO_REGION\l|if (r0 == 42) goto L_0x003a\l}"];
subgraph cluster_Region_332418305 {
label = "R(2:8|(2:(2:17|18)|(2:11|(2:(2:15|16)|(1:20)))))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x003a|int int r0 = r4.readInt()\l}"];
subgraph cluster_Region_1907753363 {
label = "R(2:(2:17|18)|(2:11|(2:(2:15|16)|(1:20))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_900731843 {
label = "IF [B:9:0x0040, B:10:0x0042] THEN: R(2:17|18) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0040|if (r0 \< 8) goto L_0x0067\l}"];
Node_10 [shape=record,label="{10\:\ 0x0042|ADDED_TO_REGION\l|if (r0 \>= r5) goto L_0x0067\l}"];
subgraph cluster_Region_697345561 {
label = "R(2:17|18)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0067}"];
Node_18 [shape=record,label="{18\:\ 0x007d|throw new java.io.IOException(\"Invalid first Ifd offset: \" + r0)\l}"];
}
}
subgraph cluster_Region_1449105121 {
label = "R(2:11|(2:(2:15|16)|(1:20)))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0044|int int r0 = r0 \- 8\l}"];
subgraph cluster_Region_1776388177 {
label = "R(2:(2:15|16)|(1:20))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1198940526 {
label = "IF [B:12:0x0046, B:14:0x004c] THEN: R(2:15|16) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0046|if (r0 \> 0) goto L_0x0048\l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|ADDED_TO_REGION\l|if (r4.skipBytes(r0) != r0) goto L_0x004f\l}"];
subgraph cluster_Region_1919769672 {
label = "R(2:15|16)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x004f}"];
Node_16 [shape=record,label="{16\:\ 0x0065|throw new java.io.IOException(\"Couldn't jump to first Ifd: \" + r0)\l}"];
}
}
subgraph cluster_Region_1484523673 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
}
}
subgraph cluster_Region_677051727 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001f}"];
Node_7 [shape=record,label="{7\:\ 0x0039|throw new java.io.IOException(\"Invalid start code: \" + java.lang.Integer.toHexString(r0))\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0014}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x001a}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0048}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.media.ExifInterface.parseTiffHeaders((r3v0 'this' android.support.media.ExifInterface A[IMMUTABLE_TYPE, THIS]), (r4v0 android.support.media.ExifInterface$ByteOrderedDataInputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_17 -> Node_18;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_19[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_20[style=dashed];
Node_15 -> Node_16;
Node_6 -> Node_7;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_13 -> Node_14;
}

