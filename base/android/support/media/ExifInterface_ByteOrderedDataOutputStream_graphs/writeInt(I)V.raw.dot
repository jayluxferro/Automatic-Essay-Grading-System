digraph "CFG forandroid.support.media.ExifInterface.ByteOrderedDataOutputStream.writeInt(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.nio.ByteOrder) = \l  (r2 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.mByteOrder java.nio.ByteOrder \l0x0002: SGET  (r1 I:java.nio.ByteOrder) =  java.nio.ByteOrder.LITTLE_ENDIAN java.nio.ByteOrder \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x002b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:java.io.OutputStream) = \l  (r2 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.mOutputStream java.io.OutputStream \l0x0008: ARITH  (r1 I:int) = (r3 I:int) \>\>\> (0 int) \l0x000a: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x000c: INVOKE  (r0 I:java.io.OutputStream), (r1 I:int) java.io.OutputStream.write(int):void type: VIRTUAL \l0x000f: IGET  (r0 I:java.io.OutputStream) = \l  (r2 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.mOutputStream java.io.OutputStream \l0x0011: ARITH  (r1 I:int) = (r3 I:int) \>\>\> (8 int) \l0x0013: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0015: INVOKE  (r0 I:java.io.OutputStream), (r1 I:int) java.io.OutputStream.write(int):void type: VIRTUAL \l0x0018: IGET  (r0 I:java.io.OutputStream) = \l  (r2 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.mOutputStream java.io.OutputStream \l0x001a: ARITH  (r1 I:int) = (r3 I:int) \>\>\> (16 int) \l0x001c: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x001e: INVOKE  (r0 I:java.io.OutputStream), (r1 I:int) java.io.OutputStream.write(int):void type: VIRTUAL \l0x0021: IGET  (r0 I:java.io.OutputStream) = \l  (r2 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.mOutputStream java.io.OutputStream \l0x0023: ARITH  (r3 I:int) = (r3 I:int) \>\>\> (24 int) \l0x0025: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0027: INVOKE  (r0 I:java.io.OutputStream), (r3 I:int) java.io.OutputStream.write(int):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x002b|0x002b: IGET  (r0 I:java.nio.ByteOrder) = \l  (r2 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.mByteOrder java.nio.ByteOrder \l0x002d: SGET  (r1 I:java.nio.ByteOrder) =  java.nio.ByteOrder.BIG_ENDIAN java.nio.ByteOrder \l}"];
Node_4 [shape=record,label="{4\:\ 0x002f|0x002f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0055 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|0x0031: IGET  (r0 I:java.io.OutputStream) = \l  (r2 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.mOutputStream java.io.OutputStream \l0x0033: ARITH  (r1 I:int) = (r3 I:int) \>\>\> (24 int) \l0x0035: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0037: INVOKE  (r0 I:java.io.OutputStream), (r1 I:int) java.io.OutputStream.write(int):void type: VIRTUAL \l0x003a: IGET  (r0 I:java.io.OutputStream) = \l  (r2 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.mOutputStream java.io.OutputStream \l0x003c: ARITH  (r1 I:int) = (r3 I:int) \>\>\> (16 int) \l0x003e: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0040: INVOKE  (r0 I:java.io.OutputStream), (r1 I:int) java.io.OutputStream.write(int):void type: VIRTUAL \l0x0043: IGET  (r0 I:java.io.OutputStream) = \l  (r2 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.mOutputStream java.io.OutputStream \l0x0045: ARITH  (r1 I:int) = (r3 I:int) \>\>\> (8 int) \l0x0047: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0049: INVOKE  (r0 I:java.io.OutputStream), (r1 I:int) java.io.OutputStream.write(int):void type: VIRTUAL \l0x004c: IGET  (r0 I:java.io.OutputStream) = \l  (r2 I:android.support.media.ExifInterface$ByteOrderedDataOutputStream)\l android.support.media.ExifInterface.ByteOrderedDataOutputStream.mOutputStream java.io.OutputStream \l0x004e: ARITH  (r3 I:int) = (r3 I:int) \>\>\> (0 int) \l0x0050: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0052: INVOKE  (r0 I:java.io.OutputStream), (r3 I:int) java.io.OutputStream.write(int):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0055|0x0055: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.media.ExifInterface.ByteOrderedDataOutputStream.writeInt((r2 'this' I:android.support.media.ExifInterface$ByteOrderedDataOutputStream A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
}

