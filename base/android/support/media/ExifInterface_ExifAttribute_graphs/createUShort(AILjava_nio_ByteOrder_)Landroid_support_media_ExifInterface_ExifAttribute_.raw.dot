digraph "CFG forandroid.support.media.ExifInterface.ExifAttribute.createUShort([ILjava\/nio\/ByteOrder;)Landroid\/support\/media\/ExifInterface$ExifAttribute;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int[]) =  android.support.media.ExifInterface.IFD_FORMAT_BYTES_PER_FORMAT int[] \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0003: AGET  (r0 I:?[int, float]) = (r0 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x0005: ARRAY_LENGTH  (r2 I:int) = (r4 I:?[]) \l0x0006: ARITH  (r0 I:int) = (r0 I:int) * (r2 I:int) \l0x0008: NEW_ARRAY  (r0 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x000a: INVOKE  (r0 I:java.nio.ByteBuffer) = (r0 I:byte[]) java.nio.ByteBuffer.wrap(byte[]):java.nio.ByteBuffer type: STATIC \l0x000e: INVOKE  (r0 I:java.nio.ByteBuffer), (r5 I:java.nio.ByteOrder) java.nio.ByteBuffer.order(java.nio.ByteOrder):java.nio.ByteBuffer type: VIRTUAL \l0x0011: ARRAY_LENGTH  (r5 I:int) = (r4 I:?[]) \l0x0012: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: IF  (r2 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:3:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: AGET  (r3 I:?[int, float]) = (r4 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0017: CAST  (r3 I:short) = (short) (r3 I:int) \l0x0018: INVOKE  (r0 I:java.nio.ByteBuffer), (r3 I:short) java.nio.ByteBuffer.putShort(short):java.nio.ByteBuffer type: VIRTUAL \l0x001b: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: NEW_INSTANCE  (r5 I:android.support.media.ExifInterface$ExifAttribute) =  android.support.media.ExifInterface$ExifAttribute \l0x0020: ARRAY_LENGTH  (r4 I:int) = (r4 I:?[]) \l0x0021: INVOKE  (r0 I:byte[]) = (r0 I:java.nio.ByteBuffer) java.nio.ByteBuffer.array():byte[] type: VIRTUAL \l0x0025: INVOKE  \l  (r5 I:android.support.media.ExifInterface$ExifAttribute)\l  (r1 I:int)\l  (r4 I:int)\l  (r0 I:byte[])\l android.support.media.ExifInterface.ExifAttribute.\<init\>(int, int, byte[]):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: RETURN  (r5 I:android.support.media.ExifInterface$ExifAttribute) \l}"];
MethodNode[shape=record,label="{public static android.support.media.ExifInterface$ExifAttribute android.support.media.ExifInterface.ExifAttribute.createUShort((r4 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.nio.ByteOrder A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
Node_3 -> Node_4;
}

