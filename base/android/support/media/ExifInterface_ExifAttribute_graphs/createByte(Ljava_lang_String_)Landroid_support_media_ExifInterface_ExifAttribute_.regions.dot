digraph "CFG forandroid.support.media.ExifInterface.ExifAttribute.createByte(Ljava\/lang\/String;)Landroid\/support\/media\/ExifInterface$ExifAttribute;" {
subgraph cluster_Region_373836101 {
label = "R(1:(2:(2:8|9)|(2:6|7)))";
node [shape=record,color=blue];
subgraph cluster_Region_138524149 {
label = "R(2:(2:8|9)|(2:6|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_402387688 {
label = "IF [B:1:0x0005, B:3:0x000e, B:5:0x0016] THEN: R(2:8|9) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r5.length() != 1) goto L_0x0029\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|ADDED_TO_REGION\l|if (r5.charAt(0) \< '0') goto L_0x0029\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|ADDED_TO_REGION\l|if (r5.charAt(0) \> '1') goto L_0x0029\l}"];
subgraph cluster_Region_445114007 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0029|byte[] byte[] r5 = r5.getBytes(android.support.media.ExifInterface.ASCII)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|RETURN\l|return new android.support.media.ExifInterface.ExifAttribute(1, r5.length, r5)\l}"];
}
}
subgraph cluster_Region_466503341 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0018|byte[] byte[] r2 = \{(byte) (r5.charAt(0) \- '0')\}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|RETURN\l|return new android.support.media.ExifInterface.ExifAttribute(1, r2.length, r2)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0007}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0010}"];
MethodNode[shape=record,label="{public static android.support.media.ExifInterface$ExifAttribute android.support.media.ExifInterface.ExifAttribute.createByte((r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_8 -> Node_9;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

