digraph "CFG forandroid.support.customtabs.ICustomTabsService.Stub.Proxy.extraCommand(Ljava\/lang\/String;Landroid\/os\/Bundle;)Landroid\/os\/Bundle;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.os.Parcel) =  android.os.Parcel.obtain():android.os.Parcel type: STATIC \l0x0004: INVOKE  (r1 I:android.os.Parcel) =  android.os.Parcel.obtain():android.os.Parcel type: STATIC \l0x0008: CONST_STR  (r3 I:java.lang.String) =  \"android.support.customtabs.ICustomTabsService\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|SYNTHETIC\lSplitter:B:1:0x000a\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x000a\l|0x000a: INVOKE  \l  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)])\l  (r3 I:java.lang.String)\l android.os.Parcel.writeInterfaceToken(java.lang.String):void type: VIRTUAL A[Catch:\{ all \-\> 0x003e \}, TRY_ENTER]\l0x000d: INVOKE  \l  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)])\l  (r7 I:java.lang.String A[D('commandName' java.lang.String)])\l android.os.Parcel.writeString(java.lang.String):void type: VIRTUAL A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('args' android.os.Bundle)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0039 A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x003e \}]\l0x0013: INVOKE  \l  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)])\l  (r3 I:int)\l android.os.Parcel.writeInt(int):void type: VIRTUAL A[Catch:\{ all \-\> 0x003e \}]\l0x0016: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x003e \}]\l0x0017: INVOKE  \l  (r8 I:android.os.Bundle A[D('args' android.os.Bundle)])\l  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)])\l  (r3 I:int)\l android.os.Bundle.writeToParcel(android.os.Parcel, int):void type: VIRTUAL A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IGET  (r3 I:android.os.IBinder) = \l  (r6 I:android.support.customtabs.ICustomTabsService$Stub$Proxy)\l android.support.customtabs.ICustomTabsService.Stub.Proxy.mRemote android.os.IBinder A[Catch:\{ all \-\> 0x003e \}]\l0x001c: CONST  (r4 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x003e \}]\l0x001d: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x003e \}]\l0x001e: INVOKE  \l  (r3 I:android.os.IBinder)\l  (r4 I:int)\l  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)])\l  (r1 I:android.os.Parcel A[D('_reply' android.os.Parcel)])\l  (r5 I:int)\l android.os.IBinder.transact(int, android.os.Parcel, android.os.Parcel, int):boolean type: INTERFACE A[Catch:\{ all \-\> 0x003e \}]\l0x0021: INVOKE  (r1 I:android.os.Parcel A[D('_reply' android.os.Parcel)]) android.os.Parcel.readException():void type: VIRTUAL A[Catch:\{ all \-\> 0x003e \}]\l0x0024: INVOKE  (r3 I:int) = (r1 I:android.os.Parcel A[D('_reply' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0046 A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: SGET  (r3 I:android.os.Parcelable$Creator) =  android.os.Bundle.CREATOR android.os.Parcelable$Creator A[Catch:\{ all \-\> 0x003e \}]\l0x002c: INVOKE  (r2 I:java.lang.Object) = \l  (r3 I:android.os.Parcelable$Creator)\l  (r1 I:android.os.Parcel A[D('_reply' android.os.Parcel)])\l android.os.Parcelable.Creator.createFromParcel(android.os.Parcel):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x003e \}]\l0x0030: CHECK_CAST  (r2 I:android.os.Bundle) = (android.os.Bundle) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003e \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|0x0032: INVOKE  (r1 I:android.os.Parcel A[D('_reply' android.os.Parcel)]) android.os.Parcel.recycle():void type: VIRTUAL \l0x0035: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]) android.os.Parcel.recycle():void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: RETURN  (r2 I:android.os.Bundle A[D('_result' android.os.Bundle)]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|0x0039: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|SYNTHETIC\lSplitter:B:11:0x003a\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x003a\l|0x003a: INVOKE  \l  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)])\l  (r3 I:int)\l android.os.Parcel.writeInt(int):void type: VIRTUAL A[Catch:\{ all \-\> 0x003e \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|ExcHandler: all null\lSplitter:B:1:0x000a\l|0x003e: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|0x003f: INVOKE  (r1 I:android.os.Parcel A[D('_reply' android.os.Parcel)]) android.os.Parcel.recycle():void type: VIRTUAL \l0x0042: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]) android.os.Parcel.recycle():void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0045|0x0045: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0046|0x0046: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public android.os.Bundle android.support.customtabs.ICustomTabsService.Stub.Proxy.extraCommand((r6 'this' I:android.support.customtabs.ICustomTabsService$Stub$Proxy A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.String A[D('commandName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.os.Bundle A[D('args' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0032\-0x0039: r2 '_result' android.os.Bundle\l  0x0004\-0x0047: r0 '_data' android.os.Parcel\l  0x0008\-0x0047: r1 '_reply' android.os.Parcel\l  0x0047\-0x0047: r2 '_result' android.os.Bundle\l  ?\-0x0047: r7 'commandName' java.lang.String\l  ?\-0x0047: r8 'args' android.os.Bundle\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.os.RemoteException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_17;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_14;
Node_12 -> Node_14;
Node_12 -> Node_5;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_8;
}

