digraph "CFG forandroid.support.customtabs.ICustomTabsService.Stub.Proxy.updateVisuals(Landroid\/support\/customtabs\/ICustomTabsCallback;Landroid\/os\/Bundle;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: INVOKE  (r0 I:android.os.Parcel) =  android.os.Parcel.obtain():android.os.Parcel type: STATIC \l0x0006: INVOKE  (r1 I:android.os.Parcel) =  android.os.Parcel.obtain():android.os.Parcel type: STATIC \l0x000a: CONST_STR  (r4 I:java.lang.String) =  \"android.support.customtabs.ICustomTabsService\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|SYNTHETIC\lSplitter:B:1:0x000c\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x000c\l|0x000c: INVOKE  \l  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)])\l  (r4 I:java.lang.String)\l android.os.Parcel.writeInterfaceToken(java.lang.String):void type: VIRTUAL A[Catch:\{ all \-\> 0x0040 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('callback' android.support.customtabs.ICustomTabsCallback)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0039 A[Catch:\{ all \-\> 0x0040 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: INVOKE  (r4 I:android.os.IBinder) = \l  (r8 I:android.support.customtabs.ICustomTabsCallback A[D('callback' android.support.customtabs.ICustomTabsCallback)])\l android.support.customtabs.ICustomTabsCallback.asBinder():android.os.IBinder type: INTERFACE A[Catch:\{ all \-\> 0x0040 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: INVOKE  \l  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)])\l  (r4 I:android.os.IBinder)\l android.os.Parcel.writeStrongBinder(android.os.IBinder):void type: VIRTUAL A[Catch:\{ all \-\> 0x0040 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('bundle' android.os.Bundle)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003b A[Catch:\{ all \-\> 0x0040 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0040 \}]\l0x001b: INVOKE  \l  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)])\l  (r4 I:int)\l android.os.Parcel.writeInt(int):void type: VIRTUAL A[Catch:\{ all \-\> 0x0040 \}]\l0x001e: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0040 \}]\l0x001f: INVOKE  \l  (r9 I:android.os.Bundle A[D('bundle' android.os.Bundle)])\l  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)])\l  (r4 I:int)\l android.os.Bundle.writeToParcel(android.os.Parcel, int):void type: VIRTUAL A[Catch:\{ all \-\> 0x0040 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: IGET  (r4 I:android.os.IBinder) = \l  (r7 I:android.support.customtabs.ICustomTabsService$Stub$Proxy)\l android.support.customtabs.ICustomTabsService.Stub.Proxy.mRemote android.os.IBinder A[Catch:\{ all \-\> 0x0040 \}]\l0x0024: CONST  (r5 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0040 \}]\l0x0025: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0040 \}]\l0x0026: INVOKE  \l  (r4 I:android.os.IBinder)\l  (r5 I:int)\l  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)])\l  (r1 I:android.os.Parcel A[D('_reply' android.os.Parcel)])\l  (r6 I:int)\l android.os.IBinder.transact(int, android.os.Parcel, android.os.Parcel, int):boolean type: INTERFACE A[Catch:\{ all \-\> 0x0040 \}]\l0x0029: INVOKE  (r1 I:android.os.Parcel A[D('_reply' android.os.Parcel)]) android.os.Parcel.readException():void type: VIRTUAL A[Catch:\{ all \-\> 0x0040 \}]\l0x002c: INVOKE  (r4 I:int) = (r1 I:android.os.Parcel A[D('_reply' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL A[Catch:\{ all \-\> 0x0040 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|0x0030: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0048 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|0x0032: INVOKE  (r1 I:android.os.Parcel A[D('_reply' android.os.Parcel)]) android.os.Parcel.recycle():void type: VIRTUAL \l0x0035: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]) android.os.Parcel.recycle():void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|0x0038: RETURN  (r2 I:boolean A[D('_result' boolean)]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0039|0x0039: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|0x003b: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|SYNTHETIC\lSplitter:B:15:0x003c\l}"];
Node_16 [shape=record,label="{16\:\ ?|Splitter:B:15:0x003c\l|0x003c: INVOKE  \l  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)])\l  (r4 I:int)\l android.os.Parcel.writeInt(int):void type: VIRTUAL A[Catch:\{ all \-\> 0x0040 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0040|ExcHandler: all null\lSplitter:B:1:0x000c\l|0x0040: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_19 [shape=record,label="{19\:\ 0x0041|0x0041: INVOKE  (r1 I:android.os.Parcel A[D('_reply' android.os.Parcel)]) android.os.Parcel.recycle():void type: VIRTUAL \l0x0044: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]) android.os.Parcel.recycle():void type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0047|0x0047: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0048|0x0048: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public boolean android.support.customtabs.ICustomTabsService.Stub.Proxy.updateVisuals((r7 'this' I:android.support.customtabs.ICustomTabsService$Stub$Proxy A[IMMUTABLE_TYPE, THIS]), (r8 I:android.support.customtabs.ICustomTabsCallback A[D('callback' android.support.customtabs.ICustomTabsCallback), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.os.Bundle A[D('bundle' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0032\-0x0039: r2 '_result' boolean\l  0x0006\-0x0049: r0 '_data' android.os.Parcel\l  0x000a\-0x0049: r1 '_reply' android.os.Parcel\l  ?\-0x0049: r8 'callback' android.support.customtabs.ICustomTabsCallback\l  ?\-0x0049: r9 'bundle' android.os.Bundle\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.os.RemoteException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_18;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_21;
Node_11 -> Node_12;
Node_13 -> Node_5;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_18;
Node_16 -> Node_18;
Node_16 -> Node_8;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_11;
}

