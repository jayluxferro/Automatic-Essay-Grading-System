digraph "CFG forandroid.support.constraint.solver.ArrayLinkedVariables.getPivotCandidate([ZLandroid\/support\/constraint\/solver\/SolverVariable;)Landroid\/support\/constraint\/solver\/SolverVariable;" {
subgraph cluster_Region_637601768 {
label = "R(3:0|(2:(2:7|(2:16|(1:18)(0)))(0)|19)|20)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r8.mHead\lint r2 = 0\landroid.support.constraint.solver.SolverVariable r3 = null\lfloat r4 = 0.0f\l}"];
subgraph cluster_LoopRegion_511592537 {
label = "LOOP:0: (2:(2:7|(2:16|(1:18)(0)))(0)|19)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|if (r0 != \-1) goto L_0x0009\l}"];
subgraph cluster_Region_1022940507 {
label = "R(2:(2:7|(2:16|(1:18)(0)))(0)|19)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_908148085 {
label = "IF [B:6:0x0013] THEN: R(2:7|(2:16|(1:18)(0))) ELSE: R(0)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0013|if (r8.mArrayValues[r0] \< 0.0f) goto L_0x0015\l}"];
subgraph cluster_Region_414274078 {
label = "R(2:7|(2:16|(1:18)(0)))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0015|android.support.constraint.solver.SolverVariable r5 = r8.mCache.mIndexedVariables[r8.mArrayIndices[r0]]\l}"];
subgraph cluster_IfRegion_588215654 {
label = "IF [B:8:0x001f, B:10:0x0025, B:11:0x0027, B:13:0x002d, B:15:0x0033] THEN: R(2:16|(1:18)(0)) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001f|ADDED_TO_REGION\l|if (r9 == null) goto L_0x0027\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|ADDED_TO_REGION\l|if (r9[r5.f3id] == false) goto L_0x0027\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|ADDED_TO_REGION\l|if (r5 != r10) goto L_0x0029\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|ADDED_TO_REGION\l|if (r5.mType == android.support.constraint.solver.SolverVariable.Type.SLACK) goto L_0x0035\l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|ADDED_TO_REGION\l|if (r5.mType == android.support.constraint.solver.SolverVariable.Type.ERROR) goto L_0x0035\l}"];
subgraph cluster_Region_1654197854 {
label = "R(2:16|(1:18)(0))";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0035|float r6 = r8.mArrayValues[r0]\l}"];
subgraph cluster_IfRegion_834461933 {
label = "IF [B:17:0x003b] THEN: R(1:18) ELSE: R(0)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x003b|if (r6 \< r4) goto L_0x003d\l}"];
subgraph cluster_Region_248102612 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x003d|r3 = r5\lr4 = r6\l}"];
}
subgraph cluster_Region_859970415 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
subgraph cluster_Region_466998022 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_19 [shape=record,label="{19\:\ 0x003f|LOOP_END\lPHI: r3 r4 \l  PHI: (r3v2 android.support.constraint.solver.SolverVariable) = (r3v1 android.support.constraint.solver.SolverVariable), (r3v1 android.support.constraint.solver.SolverVariable), (r3v1 android.support.constraint.solver.SolverVariable), (r3v3 android.support.constraint.solver.SolverVariable), (r3v1 android.support.constraint.solver.SolverVariable), (r3v1 android.support.constraint.solver.SolverVariable) binds: [B:24:0x003f, B:26:0x003f, B:28:0x003f, B:23:0x003f, B:27:0x003f, B:25:0x003f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 float) = (r4v1 float), (r4v1 float), (r4v1 float), (r4v3 float), (r4v1 float), (r4v1 float) binds: [B:24:0x003f, B:26:0x003f, B:28:0x003f, B:23:0x003f, B:27:0x003f, B:25:0x003f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:19:0x003f\l|r0 = r8.mArrayNextIndices[r0]\lr2++\l}"];
}
}
Node_20 [shape=record,label="{20\:\ 0x0046|RETURN\l|return r3\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0006|LOOP_START\lPHI: r0 r2 r3 r4 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:19:0x003f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:19:0x003f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 android.support.constraint.solver.SolverVariable) = (r3v0 android.support.constraint.solver.SolverVariable), (r3v2 android.support.constraint.solver.SolverVariable) binds: [B:0:0x0000, B:19:0x003f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 float) = (r4v0 float), (r4v2 float) binds: [B:0:0x0000, B:19:0x003f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:19:0x003f\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0009}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000b|ADDED_TO_REGION\l|if (r2 \< r8.currentSize) goto L_0x000d\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000d}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0021}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0029}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x002f}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0046|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0046|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x003f|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x003f|SYNTHETIC\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x003f|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x003f|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x003f|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x003f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{android.support.constraint.solver.SolverVariable android.support.constraint.solver.ArrayLinkedVariables.getPivotCandidate((r8v0 'this' android.support.constraint.solver.ArrayLinkedVariables A[IMMUTABLE_TYPE, THIS]), (r9v0 boolean[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 android.support.constraint.solver.SolverVariable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_21[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_24[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_10 -> Node_11;
Node_10 -> Node_25[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_26[style=dashed];
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_15 -> Node_16;
Node_15 -> Node_27[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_28[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_22[style=dashed];
Node_5 -> Node_6;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_21 -> Node_20;
Node_22 -> Node_20;
Node_23 -> Node_19;
Node_24 -> Node_19;
Node_25 -> Node_19;
Node_26 -> Node_19;
Node_27 -> Node_19;
Node_28 -> Node_19;
}

