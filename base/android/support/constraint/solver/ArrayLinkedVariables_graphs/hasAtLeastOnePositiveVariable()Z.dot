digraph "CFG forandroid.support.constraint.solver.ArrayLinkedVariables.hasAtLeastOnePositiveVariable()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r5.mHead\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v1 int) = (r0v0 int), (r0v3 int) binds: [B:0:0x0000, B:8:0x0016] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:8:0x0016] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0004\-\>B:8:0x0016\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r0 == \-1) goto L_0x001d\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007}"];
Node_4 [shape=record,label="{4\:\ 0x0009|if (r2 \>= r5.currentSize) goto L_0x001d\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b}"];
Node_6 [shape=record,label="{6\:\ 0x0012|if ((r5.mArrayValues[r0] \> 0.0f ? 1 : (r5.mArrayValues[r0] == 0.0f ? 0 : \-1)) \<= 0) goto L_0x0016\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|RETURN\l|return true\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|LOOP_END\lLOOP:0: B:1:0x0004\-\>B:8:0x0016\l|r0 = r5.mArrayNextIndices[r0]\lint r2 = r2 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|RETURN\l|return false\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{boolean android.support.constraint.solver.ArrayLinkedVariables.hasAtLeastOnePositiveVariable((r5v0 'this' android.support.constraint.solver.ArrayLinkedVariables A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_10[style=dashed];
Node_8 -> Node_1;
Node_10 -> Node_7;
Node_11 -> Node_9;
Node_12 -> Node_9;
}

