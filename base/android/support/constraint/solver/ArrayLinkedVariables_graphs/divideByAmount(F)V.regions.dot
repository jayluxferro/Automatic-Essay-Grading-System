digraph "CFG forandroid.support.constraint.solver.ArrayLinkedVariables.divideByAmount(F)V" {
subgraph cluster_Region_826522648 {
label = "R(2:0|(1:5))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r4.mHead\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_457413439 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r0 != \-1) goto L_0x0006\l}"];
subgraph cluster_Region_60789908 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000a|LOOP_END\lLOOP:0: B:1:0x0003\-\>B:5:0x000a\l|float[] float[] r2 = r4.mArrayValues\lr2[r0] = r2[r0] \/ r5\lr0 = r4.mArrayNextIndices[r0]\lr1++\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0003|LOOP_START\lPHI: r0 r1 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:5:0x000a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:5:0x000a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:5:0x000a\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0006}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0008|ADDED_TO_REGION\l|if (r1 \< r4.currentSize) goto L_0x000a\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0018|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0018|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void android.support.constraint.solver.ArrayLinkedVariables.divideByAmount((r4v0 'this' android.support.constraint.solver.ArrayLinkedVariables A[IMMUTABLE_TYPE, THIS]), (r5v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_6[style=dashed];
Node_5 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
}

