digraph "CFG forandroid.support.constraint.solver.ArrayLinkedVariables.updateFromRow(Landroid\/support\/constraint\/solver\/ArrayRow;Landroid\/support\/constraint\/solver\/ArrayRow;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = r11.mHead\lr0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|LOOP_START\lPHI: r0 r1 \l  PHI: (r0v1 'counter' int) = (r0v0 'counter' int), (r0v2 'counter' int) binds: [B:0:0x0000, B:13:0x0004] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 'current' int) = (r1v0 'current' int), (r1v2 'current' int) binds: [B:0:0x0000, B:13:0x0004] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0004\-\>B:13:0x0004\l|if (r1 == \-1) goto L_0x005a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r0 \>= r11.currentSize) goto L_0x005a\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a}"];
Node_5 [shape=record,label="{5\:\ 0x0012|if (r11.mArrayIndices[r1] != r13.variable.f3id) goto L_0x0053\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|r7 = r11.mArrayValues[r1]\lremove(r13.variable)\landroid.support.constraint.solver.ArrayLinkedVariables r6 = r13.variables\lint r3 = r6.mHead\lr2 = 0\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|LOOP_START\lPHI: r2 r3 \l  PHI: (r2v1 'definitionCounter' int) = (r2v0 'definitionCounter' int), (r2v2 'definitionCounter' int) binds: [B:6:0x0014, B:10:0x0028] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'definitionCurrent' int) = (r3v0 'definitionCurrent' int), (r3v2 'definitionCurrent' int) binds: [B:6:0x0014, B:10:0x0028] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:7:0x0022\-\>B:10:0x0028\l|if (r3 == \-1) goto L_0x0042\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024}"];
Node_9 [shape=record,label="{9\:\ 0x0026|if (r2 \>= r6.currentSize) goto L_0x0042\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|LOOP_END\lLOOP:1: B:7:0x0022\-\>B:10:0x0028\l|add(r11.mCache.mIndexedVariables[r6.mArrayIndices[r3]], r6.mArrayValues[r3] * r7)\lr3 = r6.mArrayNextIndices[r3]\lint r2 = r2 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|r12.constantValue = r12.constantValue + (r13.constantValue * r7)\lr13.variable.removeClientEquation(r12)\lint r1 = r11.mHead\lr0 = 0\l}"];
Node_12 [shape=record,label="{12\:\ 0x0053|r1 = r11.mArrayNextIndices[r1]\lint r0 = r0 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x0004|LOOP_END\lSYNTHETIC\lPHI: r0 r1 \l  PHI: (r0v2 'counter' int) = (r0v3 'counter' int), (r0v4 'counter' int) binds: [B:17:0x0004, B:16:0x0004] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 'current' int) = (r1v3 'current' int), (r1v4 'current' int) binds: [B:17:0x0004, B:16:0x0004] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0004\-\>B:13:0x0004\l}"];
Node_14 [shape=record,label="{14\:\ 0x005a|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x005a|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0042|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0042|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void android.support.constraint.solver.ArrayLinkedVariables.updateFromRow((r11v0 'this' android.support.constraint.solver.ArrayLinkedVariables A[IMMUTABLE_TYPE, THIS]), (r12v0 'self' android.support.constraint.solver.ArrayRow A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'definition' android.support.constraint.solver.ArrayRow A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_18;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_19;
Node_10 -> Node_7;
Node_11 -> Node_16;
Node_12 -> Node_17;
Node_13 -> Node_1;
Node_14 -> Node_20;
Node_15 -> Node_21;
Node_16 -> Node_13;
Node_17 -> Node_13;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

