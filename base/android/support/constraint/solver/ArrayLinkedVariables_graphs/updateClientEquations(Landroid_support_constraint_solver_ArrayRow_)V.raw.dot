digraph "CFG forandroid.support.constraint.solver.ArrayLinkedVariables.updateClientEquations(Landroid\/support\/constraint\/solver\/ArrayRow;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r1 I:int) = \l  (r4 I:android.support.constraint.solver.ArrayLinkedVariables)\l android.support.constraint.solver.ArrayLinkedVariables.mHead int \l0x0002: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('current' int)]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001e \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r2 I:int) = \l  (r4 I:android.support.constraint.solver.ArrayLinkedVariables)\l android.support.constraint.solver.ArrayLinkedVariables.currentSize int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r0 I:?[int, byte, short, char] A[D('counter' int)]) \>= (r2 I:?[int, byte, short, char])  \-\> B:6:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IGET  (r2 I:android.support.constraint.solver.Cache) = \l  (r4 I:android.support.constraint.solver.ArrayLinkedVariables)\l android.support.constraint.solver.ArrayLinkedVariables.mCache android.support.constraint.solver.Cache \l0x000c: IGET  (r2 I:android.support.constraint.solver.SolverVariable[]) = (r2 I:android.support.constraint.solver.Cache) android.support.constraint.solver.Cache.mIndexedVariables android.support.constraint.solver.SolverVariable[] \l0x000e: IGET  (r3 I:int[]) = \l  (r4 I:android.support.constraint.solver.ArrayLinkedVariables)\l android.support.constraint.solver.ArrayLinkedVariables.mArrayIndices int[] \l0x0010: AGET  (r3 I:?[int, float]) = \l  (r3 I:?[int, float][])\l  (r1 I:?[int, short, byte, char] A[D('current' int)])\l \l0x0012: AGET  (r2 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0014: INVOKE  \l  (r2 I:android.support.constraint.solver.SolverVariable)\l  (r5 I:android.support.constraint.solver.ArrayRow A[D('row' android.support.constraint.solver.ArrayRow)])\l android.support.constraint.solver.SolverVariable.addClientEquation(android.support.constraint.solver.ArrayRow):void type: VIRTUAL \l0x0017: IGET  (r2 I:int[]) = \l  (r4 I:android.support.constraint.solver.ArrayLinkedVariables)\l android.support.constraint.solver.ArrayLinkedVariables.mArrayNextIndices int[] \l0x0019: AGET  (r1 I:?[int, float] A[D('current' int)]) = \l  (r2 I:?[int, float][])\l  (r1 I:?[int, short, byte, char] A[D('current' int)])\l \l0x001b: ARITH  (r0 I:int A[D('counter' int)]) = (r0 I:int A[D('counter' int)]) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.constraint.solver.ArrayLinkedVariables.updateClientEquations((r4 'this' I:android.support.constraint.solver.ArrayLinkedVariables A[IMMUTABLE_TYPE, THIS]), (r5 I:android.support.constraint.solver.ArrayRow A[D('row' android.support.constraint.solver.ArrayRow), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0003\-0x001e: r0 'counter' int\l  0x0002\-0x001e: r1 'current' int\l  ?\-0x001e: r5 'row' android.support.constraint.solver.ArrayRow\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_1;
}

