digraph "CFG forandroid.support.constraint.solver.widgets.ConstraintAnchor.isVerticalAnchor()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int[]) =  android.support.constraint.solver.widgets.ConstraintAnchor.1.$SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type int[] \l0x0002: IGET  (r1 I:android.support.constraint.solver.widgets.ConstraintAnchor$Type) = \l  (r2 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.mType android.support.constraint.solver.widgets.ConstraintAnchor$Type \l0x0004: INVOKE  (r1 I:int) = \l  (r1 I:android.support.constraint.solver.widgets.ConstraintAnchor$Type)\l android.support.constraint.solver.widgets.ConstraintAnchor.Type.ordinal():int type: VIRTUAL \l0x0008: AGET  (r0 I:?[int, float]) = (r0 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6, 7, 8, 9] t:[0x001b, 0x001b, 0x001b, 0x0019, 0x0019, 0x0019, 0x001b, 0x0019, 0x0019] \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: NEW_INSTANCE  (r0 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x000f: IGET  (r1 I:android.support.constraint.solver.widgets.ConstraintAnchor$Type) = \l  (r2 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.mType android.support.constraint.solver.widgets.ConstraintAnchor$Type \l0x0011: INVOKE  (r1 I:java.lang.String) = \l  (r1 I:android.support.constraint.solver.widgets.ConstraintAnchor$Type)\l android.support.constraint.solver.widgets.ConstraintAnchor.Type.name():java.lang.String type: VIRTUAL \l0x0015: INVOKE  (r0 I:java.lang.AssertionError), (r1 I:java.lang.Object) java.lang.AssertionError.\<init\>(java.lang.Object):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: RETURN  (r0 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.constraint.solver.widgets.ConstraintAnchor.isVerticalAnchor((r2 'this' I:android.support.constraint.solver.widgets.ConstraintAnchor A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

