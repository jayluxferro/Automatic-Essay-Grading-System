digraph "CFG forandroid.support.constraint.solver.widgets.ConstraintAnchor.getPriorityLevel()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int[]) =  android.support.constraint.solver.widgets.ConstraintAnchor.1.$SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type int[] \l0x0002: IGET  (r1 I:android.support.constraint.solver.widgets.ConstraintAnchor$Type) = \l  (r3 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.mType android.support.constraint.solver.widgets.ConstraintAnchor$Type \l0x0004: INVOKE  (r1 I:int) = \l  (r1 I:android.support.constraint.solver.widgets.ConstraintAnchor$Type)\l android.support.constraint.solver.widgets.ConstraintAnchor.Type.ordinal():int type: VIRTUAL \l0x0008: AGET  (r0 I:?[int, float]) = (r0 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x000a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6, 7, 8, 9] t:[0x0024, 0x0023, 0x0022, 0x0021, 0x0020, 0x001e, 0x001d, 0x001c, 0x001b] \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: NEW_INSTANCE  (r0 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0011: IGET  (r1 I:android.support.constraint.solver.widgets.ConstraintAnchor$Type) = \l  (r3 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.mType android.support.constraint.solver.widgets.ConstraintAnchor$Type \l0x0013: INVOKE  (r1 I:java.lang.String) = \l  (r1 I:android.support.constraint.solver.widgets.ConstraintAnchor$Type)\l android.support.constraint.solver.widgets.ConstraintAnchor.Type.name():java.lang.String type: VIRTUAL \l0x0017: INVOKE  (r0 I:java.lang.AssertionError), (r1 I:java.lang.Object) java.lang.AssertionError.\<init\>(java.lang.Object):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: RETURN  (r1 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: RETURN  (r1 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: RETURN  (r1 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: RETURN  (r0 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: RETURN  (r2 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: RETURN  (r2 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: RETURN  (r2 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|0x0023: RETURN  (r2 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|0x0024: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{public int android.support.constraint.solver.widgets.ConstraintAnchor.getPriorityLevel((r3 'this' I:android.support.constraint.solver.widgets.ConstraintAnchor A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_5;
Node_1 -> Node_6;
Node_1 -> Node_7;
Node_1 -> Node_9;
Node_1 -> Node_10;
Node_1 -> Node_11;
Node_1 -> Node_12;
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_7 -> Node_8;
}

