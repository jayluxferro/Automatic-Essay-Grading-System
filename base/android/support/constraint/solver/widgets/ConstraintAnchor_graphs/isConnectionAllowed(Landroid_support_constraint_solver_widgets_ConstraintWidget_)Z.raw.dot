digraph "CFG forandroid.support.constraint.solver.widgets.ConstraintAnchor.isConnectionAllowed(Landroid\/support\/constraint\/solver\/widgets\/ConstraintWidget;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.HashSet) =  java.util.HashSet \l0x0002: INVOKE  (r0 I:java.util.HashSet) java.util.HashSet.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r0 I:boolean) = \l  (r3 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l  (r0 I:java.util.HashSet)\l android.support.constraint.solver.widgets.ConstraintAnchor.isConnectionToMe(android.support.constraint.solver.widgets.ConstraintWidget, java.util.HashSet):boolean type: DIRECT \l0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: INVOKE  (r0 I:android.support.constraint.solver.widgets.ConstraintWidget) = \l  (r3 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getOwner():android.support.constraint.solver.widgets.ConstraintWidget type: VIRTUAL \l0x0011: INVOKE  (r0 I:android.support.constraint.solver.widgets.ConstraintWidget) = \l  (r0 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.getParent():android.support.constraint.solver.widgets.ConstraintWidget type: VIRTUAL \l0x0015: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0019 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: RETURN  (r2 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: INVOKE  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.getParent():android.support.constraint.solver.widgets.ConstraintWidget type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0020 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: RETURN  (r2 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.constraint.solver.widgets.ConstraintAnchor.isConnectionAllowed((r3 'this' I:android.support.constraint.solver.widgets.ConstraintAnchor A[IMMUTABLE_TYPE, THIS]), (r4 I:android.support.constraint.solver.widgets.ConstraintWidget A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
}

