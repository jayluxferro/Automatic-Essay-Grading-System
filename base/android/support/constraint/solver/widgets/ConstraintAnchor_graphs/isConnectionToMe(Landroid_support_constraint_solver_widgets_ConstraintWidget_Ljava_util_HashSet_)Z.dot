digraph "CFG forandroid.support.constraint.solver.widgets.ConstraintAnchor.isConnectionToMe(Landroid\/support\/constraint\/solver\/widgets\/ConstraintWidget;Ljava\/util\/HashSet;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r8.contains(r7) == false) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return false\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|r8.add(r7)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|if (r7 != getOwner()) goto L_0x0013\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|RETURN\l|return true\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|java.util.ArrayList r7 = r7.getAnchors()\lint r0 = r7.size()\lr3 = 0\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|LOOP_START\lPHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:6:0x0013, B:15:0x003f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x001c\-\>B:15:0x003f\l|if (r3 \>= r0) goto L_0x0042\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|android.support.constraint.solver.widgets.ConstraintAnchor r4 = r7.get(r3)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|if (r4.isSimilarDimensionConnection(r6) == false) goto L_0x003f\l}"];
Node_10 [shape=record,label="{10\:\ 0x002a}"];
Node_11 [shape=record,label="{11\:\ 0x002e|if (r4.isConnected() == false) goto L_0x003f\l}"];
Node_12 [shape=record,label="{12\:\ 0x0030}"];
Node_13 [shape=record,label="{13\:\ 0x003c|if (isConnectionToMe(r4.getTarget().getOwner(), r8) == false) goto L_0x003f\l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|RETURN\l|return true\l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|LOOP_END\lLOOP:0: B:7:0x001c\-\>B:15:0x003f\l|int r3 = r3 + 1\l}"];
Node_16 [shape=record,label="{16\:\ 0x0042|RETURN\l|return false\l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x003e|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x003f|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x003f|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x003f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private boolean android.support.constraint.solver.widgets.ConstraintAnchor.isConnectionToMe((r6v0 'this' android.support.constraint.solver.widgets.ConstraintAnchor A[IMMUTABLE_TYPE, THIS]), (r7v0 android.support.constraint.solver.widgets.ConstraintWidget A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.util.HashSet\<android.support.constraint.solver.widgets.ConstraintWidget\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/support\/constraint\/solver\/widgets\/ConstraintWidget;, Ljava\/util\/HashSet\<, Landroid\/support\/constraint\/solver\/widgets\/ConstraintWidget;, \>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_17;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_19;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_20;
Node_12 -> Node_13;
Node_13 -> Node_18[style=dashed];
Node_13 -> Node_21;
Node_15 -> Node_7;
Node_17 -> Node_16;
Node_18 -> Node_14;
Node_19 -> Node_15;
Node_20 -> Node_15;
Node_21 -> Node_15;
}

