digraph "CFG forandroid.support.constraint.solver.widgets.ConstraintHorizontalLayout.addToSolver(Landroid\/support\/constraint\/solver\/LinearSystem;I)V" {
subgraph cluster_Region_33315441 {
label = "R(2:(3:2|(3:4|(1:6)(3:8|(1:10)|11)|7)|(3:13|(1:15)|16))|17)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_476030864 {
label = "IF [B:1:0x0006] THEN: R(3:2|(3:4|(1:6)(3:8|(1:10)|11)|7)|(3:13|(1:15)|16)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r14.mChildren.size() != 0) goto L_0x0008\l}"];
subgraph cluster_Region_880597494 {
label = "R(3:2|(3:4|(1:6)(3:8|(1:10)|11)|7)|(3:13|(1:15)|16))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|android.support.constraint.solver.widgets.ConstraintHorizontalLayout r2 = r14\lint r12 = 0\lint int r13 = r14.mChildren.size()\l}"];
subgraph cluster_LoopRegion_1299905675 {
label = "LOOP:0: (3:4|(1:6)(3:8|(1:10)|11)|7)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0010|LOOP_START\lPHI: r2 r12 \l  PHI: (r2v1 android.support.constraint.solver.widgets.ConstraintHorizontalLayout) = (r2v0 android.support.constraint.solver.widgets.ConstraintHorizontalLayout), (r2v2 android.support.constraint.solver.widgets.ConstraintHorizontalLayout) binds: [B:2:0x0008, B:7:0x002a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v1 'i' int) = (r12v0 'i' int), (r12v2 'i' int) binds: [B:2:0x0008, B:7:0x002a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0010\-\>B:7:0x002a\l|if (r12 \< r13) goto L_0x0012\l}"];
subgraph cluster_Region_892374213 {
label = "R(3:4|(1:6)(3:8|(1:10)|11)|7)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012|android.support.constraint.solver.widgets.ConstraintWidget android.support.constraint.solver.widgets.ConstraintWidget r0 = (android.support.constraint.solver.widgets.ConstraintWidget) r14.mChildren.get(r12)\l}"];
subgraph cluster_IfRegion_766262692 {
label = "IF [B:5:0x001a] THEN: R(1:6) ELSE: R(3:8|(1:10)|11)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001a|if (r2 != r14) goto L_0x001c\l}"];
subgraph cluster_Region_1544313323 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001c|r0.connect(android.support.constraint.solver.widgets.ConstraintAnchor.Type.LEFT, (android.support.constraint.solver.widgets.ConstraintWidget) r2, android.support.constraint.solver.widgets.ConstraintAnchor.Type.RIGHT)\lr2.connect(android.support.constraint.solver.widgets.ConstraintAnchor.Type.RIGHT, r0, android.support.constraint.solver.widgets.ConstraintAnchor.Type.LEFT)\l}"];
}
subgraph cluster_Region_250452213 {
label = "R(3:8|(1:10)|11)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x003c|android.support.constraint.solver.widgets.ConstraintAnchor$Strength android.support.constraint.solver.widgets.ConstraintAnchor.Strength r5 = android.support.constraint.solver.widgets.ConstraintAnchor.Strength.STRONG\l}"];
subgraph cluster_IfRegion_90766300 {
label = "IF [B:9:0x0042] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0042|if (r14.mAlignment == android.support.constraint.solver.widgets.ConstraintHorizontalLayout.ContentAlignment.END) goto L_0x0044\l}"];
subgraph cluster_Region_1125030253 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0044|android.support.constraint.solver.widgets.ConstraintAnchor$Strength r5 = android.support.constraint.solver.widgets.ConstraintAnchor.Strength.WEAK\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x0046|PHI: r5 \l  PHI: (r5v4 'strength' android.support.constraint.solver.widgets.ConstraintAnchor$Strength) = (r5v3 'strength' android.support.constraint.solver.widgets.ConstraintAnchor$Strength), (r5v5 'strength' android.support.constraint.solver.widgets.ConstraintAnchor$Strength) binds: [B:9:0x0042, B:10:0x0044] A[DONT_GENERATE, DONT_INLINE]\l|r0.connect(android.support.constraint.solver.widgets.ConstraintAnchor.Type.LEFT, (android.support.constraint.solver.widgets.ConstraintWidget) r2, android.support.constraint.solver.widgets.ConstraintAnchor.Type.LEFT, 0, r5)\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x002a|LOOP_END\lLOOP:0: B:3:0x0010\-\>B:7:0x002a\l|r0.connect(android.support.constraint.solver.widgets.ConstraintAnchor.Type.TOP, (android.support.constraint.solver.widgets.ConstraintWidget) r14, android.support.constraint.solver.widgets.ConstraintAnchor.Type.TOP)\lr0.connect(android.support.constraint.solver.widgets.ConstraintAnchor.Type.BOTTOM, (android.support.constraint.solver.widgets.ConstraintWidget) r14, android.support.constraint.solver.widgets.ConstraintAnchor.Type.BOTTOM)\lr2 = r0\lr12++\l}"];
}
}
subgraph cluster_IfRegion_1066040137 {
label = "IF [B:12:0x004f] THEN: R(3:13|(1:15)|16) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x004f|if (r2 != r14) goto L_0x0051\l}"];
subgraph cluster_Region_1929850881 {
label = "R(3:13|(1:15)|16)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0051|android.support.constraint.solver.widgets.ConstraintAnchor$Strength android.support.constraint.solver.widgets.ConstraintAnchor.Strength r5 = android.support.constraint.solver.widgets.ConstraintAnchor.Strength.STRONG\l}"];
subgraph cluster_IfRegion_314106986 {
label = "IF [B:14:0x0057] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0057|if (r14.mAlignment == android.support.constraint.solver.widgets.ConstraintHorizontalLayout.ContentAlignment.BEGIN) goto L_0x0059\l}"];
subgraph cluster_Region_800260065 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0059|android.support.constraint.solver.widgets.ConstraintAnchor$Strength r5 = android.support.constraint.solver.widgets.ConstraintAnchor.Strength.WEAK\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x005b|PHI: r5 \l  PHI: (r5v1 'strength' android.support.constraint.solver.widgets.ConstraintAnchor$Strength) = (r5v0 'strength' android.support.constraint.solver.widgets.ConstraintAnchor$Strength), (r5v2 'strength' android.support.constraint.solver.widgets.ConstraintAnchor$Strength) binds: [B:14:0x0057, B:15:0x0059] A[DONT_GENERATE, DONT_INLINE]\l|r2.connect(android.support.constraint.solver.widgets.ConstraintAnchor.Type.RIGHT, (android.support.constraint.solver.widgets.ConstraintWidget) r14, android.support.constraint.solver.widgets.ConstraintAnchor.Type.RIGHT, 0, r5)\l}"];
}
}
}
}
Node_17 [shape=record,label="{17\:\ 0x0066|super.addToSolver(r15, r16)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0069}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x004f|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x002a|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x002a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.constraint.solver.widgets.ConstraintHorizontalLayout.addToSolver((r14v0 'this' android.support.constraint.solver.widgets.ConstraintHorizontalLayout A[IMMUTABLE_TYPE, THIS]), (r15v0 'system' android.support.constraint.solver.LinearSystem A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 'group' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r2v0, resolved type: android.support.constraint.solver.widgets.ConstraintHorizontalLayout\}\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r2v1, resolved type: android.support.constraint.solver.widgets.ConstraintHorizontalLayout\}\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r0v1, resolved type: android.support.constraint.solver.widgets.ConstraintWidget\}\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r2v2, resolved type: android.support.constraint.solver.widgets.ConstraintHorizontalLayout\}\lMulti\-variable type inference failed\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_17[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_19[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_6 -> Node_20;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_21;
Node_7 -> Node_3;
Node_12 -> Node_13;
Node_12 -> Node_17[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_0 -> Node_1;
Node_19 -> Node_12;
Node_20 -> Node_7;
Node_21 -> Node_7;
}

