digraph "CFG forandroid.support.constraint.solver.widgets.ConstraintTableLayout.setTableDimensions()V" {
subgraph cluster_Region_1421662115 {
label = "R(5:0|(1:2)|3|(4:(1:7)|8|(1:10)|(1:16)(1:15))(4:(1:19)|20|(1:22)|(1:28)(1:27))|29)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r4.mChildren.size()\lint r1 = 0\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_1178741343 {
label = "LOOP:0: (1:2)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|LOOP_START\lPHI: r1 r2 \l  PHI: (r1v1 int) = (r1v0 int), (r1v13 int) binds: [B:0:0x0000, B:2:0x000a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v3 int) binds: [B:0:0x0000, B:2:0x000a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0008\-\>B:2:0x000a\l|if (r1 \< r0) goto L_0x000a\l}"];
subgraph cluster_Region_519197890 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|LOOP_END\lLOOP:0: B:1:0x0008\-\>B:2:0x000a\l|r2 += ((android.support.constraint.solver.widgets.ConstraintWidget) r4.mChildren.get(r1)).getContainerItemSkip()\lr1++\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x001a|int int r0 = r0 + r2\l}"];
subgraph cluster_IfRegion_1623794758 {
label = "IF [B:4:0x001e] THEN: R(4:(1:7)|8|(1:10)|(1:16)(1:15)) ELSE: R(4:(1:19)|20|(1:22)|(1:28)(1:27))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001e|if (r4.mVerticalGrowth == true) goto L_0x0020\l}"];
subgraph cluster_Region_76338848 {
label = "R(4:(1:7)|8|(1:10)|(1:16)(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_986647381 {
label = "IF [B:6:0x0022] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0022|if (r4.mNumCols == 0) goto L_0x0024\l}"];
subgraph cluster_Region_501142810 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0024|setNumCols(1)\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0027|int int r1 = r0 \/ r4.mNumCols\l}"];
subgraph cluster_IfRegion_918489181 {
label = "IF [B:9:0x002f] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002f|if ((r4.mNumCols * r1) \< r0) goto L_0x0031\l}"];
subgraph cluster_Region_221893412 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0031|r1++\l}"];
}
}
subgraph cluster_IfRegion_1535637565 {
label = "IF [B:12:0x0035, B:14:0x0040] THEN: R(1:16) ELSE: R(1:15)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0035|if (r4.mNumRows != r1) goto L_0x0043\l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|ADDED_TO_REGION\l|if (r4.mVerticalGuidelines.size() != (r4.mNumCols \- 1)) goto L_0x0043\l}"];
subgraph cluster_Region_1530795181 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0043|r4.mNumRows = r1\lsetHorizontalSlices()\l}"];
}
subgraph cluster_Region_866571732 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0042|RETURN\l|return\l}"];
}
}
}
subgraph cluster_Region_1635310599 {
label = "R(4:(1:19)|20|(1:22)|(1:28)(1:27))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_451161330 {
label = "IF [B:18:0x004b] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x004b|if (r4.mNumRows == 0) goto L_0x004d\l}"];
subgraph cluster_Region_1488128344 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x004d|setNumRows(1)\l}"];
}
}
Node_20 [shape=record,label="{20\:\ 0x0050|int int r1 = r0 \/ r4.mNumRows\l}"];
subgraph cluster_IfRegion_1830863022 {
label = "IF [B:21:0x0058] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0058|if ((r4.mNumRows * r1) \< r0) goto L_0x005a\l}"];
subgraph cluster_Region_268116604 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x005a|r1++\l}"];
}
}
subgraph cluster_IfRegion_1095249470 {
label = "IF [B:24:0x005e, B:26:0x0069] THEN: R(1:28) ELSE: R(1:27)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x005e|if (r4.mNumCols != r1) goto L_0x006c\l}"];
Node_26 [shape=record,label="{26\:\ 0x0069|ADDED_TO_REGION\l|if (r4.mHorizontalGuidelines.size() != (r4.mNumRows \- 1)) goto L_0x006c\l}"];
subgraph cluster_Region_1719094004 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x006c|r4.mNumCols = r1\lsetVerticalSlices()\l}"];
}
subgraph cluster_Region_867070289 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x006b|RETURN\l|return\l}"];
}
}
}
}
Node_29 [shape=record,label="{29\:\ 0x0071|setChildrenConnections()\l}"];
}
Node_5 [shape=record,color=red,label="{5\:\ 0x0020}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0033|PHI: r1 \l  PHI: (r1v11 int) = (r1v10 int), (r1v12 int) binds: [B:9:0x002f, B:10:0x0031] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0037}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0049}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x005c|PHI: r1 \l  PHI: (r1v6 int) = (r1v5 int), (r1v7 int) binds: [B:21:0x0058, B:22:0x005a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0060}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0074}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x001a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.constraint.solver.widgets.ConstraintTableLayout.setTableDimensions((r4v0 'this' android.support.constraint.solver.widgets.ConstraintTableLayout A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_31[style=dashed];
Node_2 -> Node_1;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_17[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_16 -> Node_29;
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_23;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_5 -> Node_6;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_17 -> Node_18;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_31 -> Node_3;
}

