digraph "CFG forandroid.support.constraint.solver.widgets.Optimizer.checkVerticalSimpleDependency(Landroid\/support\/constraint\/solver\/widgets\/ConstraintWidgetContainer;Landroid\/support\/constraint\/solver\/LinearSystem;Landroid\/support\/constraint\/solver\/widgets\/ConstraintWidget;)V" {
subgraph cluster_Region_1867225156 {
label = "R(1:(1:2)(1:(3:7|(1:11)|12)(1:(1:(3:36|(1:40)|41)(1:(3:46|(1:50)|51)(1:(3:56|(1:60)|61)(1:(3:66|(1:70)|71)(1:(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))))(1:76))))))(1:(5:21|(1:23)(1:30)|24|(1:28)|29)(1:31))))) | DECL_VAR: float position, int top, int bottom\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_800837730 {
label = "IF [B:1:0x0006] THEN: R(1:2) ELSE: R(1:(3:7|(1:11)|12)(1:(1:(3:36|(1:40)|41)(1:(3:46|(1:50)|51)(1:(3:56|(1:60)|61)(1:(3:66|(1:70)|71)(1:(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))))(1:76))))))(1:(5:21|(1:23)(1:30)|24|(1:28)|29)(1:31))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r19.mVerticalDimensionBehaviour == android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT) goto L_0x0008\l}"];
subgraph cluster_Region_2104662229 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|r19.mVerticalResolution = 1\l}"];
}
subgraph cluster_Region_565067450 {
label = "R(1:(3:7|(1:11)|12)(1:(1:(3:36|(1:40)|41)(1:(3:46|(1:50)|51)(1:(3:56|(1:60)|61)(1:(3:66|(1:70)|71)(1:(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))))(1:76))))))(1:(5:21|(1:23)(1:30)|24|(1:28)|29)(1:31)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_303307635 {
label = "IF [B:4:0x0014, B:6:0x001c] THEN: R(3:7|(1:11)|12) ELSE: R(1:(1:(3:36|(1:40)|41)(1:(3:46|(1:50)|51)(1:(3:56|(1:60)|61)(1:(3:66|(1:70)|71)(1:(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))))(1:76))))))(1:(5:21|(1:23)(1:30)|24|(1:28)|29)(1:31))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0014|if (r17.mVerticalDimensionBehaviour != android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT) goto L_0x0016\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|ADDED_TO_REGION\l|if (r19.mVerticalDimensionBehaviour == android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.MATCH_PARENT) goto L_0x001e\l}"];
subgraph cluster_Region_626515828 {
label = "R(3:7|(1:11)|12)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001e|r19.mTop.mSolverVariable = r18.createObjectVariable(r19.mTop)\lr19.mBottom.mSolverVariable = r18.createObjectVariable(r19.mBottom)\lint int r11 = r19.mTop.mMargin\lint int r1 = r17.getHeight() \- r19.mBottom.mMargin\lr18.addEquality(r19.mTop.mSolverVariable, r11)\lr18.addEquality(r19.mBottom.mSolverVariable, r1)\l}"];
subgraph cluster_IfRegion_1675489683 {
label = "IF [B:8:0x006a, B:10:0x0072] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x006a|ADDED_TO_REGION\l|if (r19.mBaselineDistance \> 0) goto L_0x0074\l}"];
Node_10 [shape=record,label="{10\:\ 0x0072|ADDED_TO_REGION\l|if (r19.getVisibility() == 8) goto L_0x0074\l}"];
subgraph cluster_Region_346222299 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0074|r19.mBaseline.mSolverVariable = r18.createObjectVariable(r19.mBaseline)\lr18.addEquality(r19.mBaseline.mSolverVariable, r19.mBaselineDistance + r11)\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0094|r19.setVerticalDimension(r11, r1)\lr19.mVerticalResolution = 2\l}"];
}
subgraph cluster_Region_176191757 {
label = "R(1:(1:(3:36|(1:40)|41)(1:(3:46|(1:50)|51)(1:(3:56|(1:60)|61)(1:(3:66|(1:70)|71)(1:(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))))(1:76))))))(1:(5:21|(1:23)(1:30)|24|(1:28)|29)(1:31))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1510726921 {
label = "IF [B:14:0x00a6, B:16:0x00ae] THEN: R(1:(3:36|(1:40)|41)(1:(3:46|(1:50)|51)(1:(3:56|(1:60)|61)(1:(3:66|(1:70)|71)(1:(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))))(1:76)))))) ELSE: R(1:(5:21|(1:23)(1:30)|24|(1:28)|29)(1:31)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x00a6|if (r19.mTop.mTarget == null) goto L_0x0183\l}"];
Node_16 [shape=record,label="{16\:\ 0x00ae|ADDED_TO_REGION\l|if (r19.mBottom.mTarget == null) goto L_0x0183\l}"];
subgraph cluster_Region_1760991928 {
label = "R(1:(3:36|(1:40)|41)(1:(3:46|(1:50)|51)(1:(3:56|(1:60)|61)(1:(3:66|(1:70)|71)(1:(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))))(1:76))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1680584540 {
label = "IF [B:33:0x0189, B:35:0x0195] THEN: R(3:36|(1:40)|41) ELSE: R(1:(3:46|(1:50)|51)(1:(3:56|(1:60)|61)(1:(3:66|(1:70)|71)(1:(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))))(1:76)))))";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0189|if (r19.mTop.mTarget != null) goto L_0x018b\l}"];
Node_35 [shape=record,label="{35\:\ 0x0195|ADDED_TO_REGION\l|if (r19.mTop.mTarget.mOwner == r17) goto L_0x0197\l}"];
subgraph cluster_Region_440838333 {
label = "R(3:36|(1:40)|41)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0197|int int r11 = r19.mTop.getMargin()\lint int r1 = r11 + r19.getHeight()\lr19.mTop.mSolverVariable = r18.createObjectVariable(r19.mTop)\lr19.mBottom.mSolverVariable = r18.createObjectVariable(r19.mBottom)\lr18.addEquality(r19.mTop.mSolverVariable, r11)\lr18.addEquality(r19.mBottom.mSolverVariable, r1)\l}"];
subgraph cluster_IfRegion_1844112069 {
label = "IF [B:37:0x01df, B:39:0x01e7] THEN: R(1:40) ELSE: null";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x01df|ADDED_TO_REGION\l|if (r19.mBaselineDistance \> 0) goto L_0x01e9\l}"];
Node_39 [shape=record,label="{39\:\ 0x01e7|ADDED_TO_REGION\l|if (r19.getVisibility() == 8) goto L_0x01e9\l}"];
subgraph cluster_Region_2076462237 {
label = "R(1:40)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x01e9|r19.mBaseline.mSolverVariable = r18.createObjectVariable(r19.mBaseline)\lr18.addEquality(r19.mBaseline.mSolverVariable, r19.mBaselineDistance + r11)\l}"];
}
}
Node_41 [shape=record,label="{41\:\ 0x0209|r19.mVerticalResolution = 2\lr19.setVerticalDimension(r11, r1)\l}"];
}
subgraph cluster_Region_1762496996 {
label = "R(1:(3:46|(1:50)|51)(1:(3:56|(1:60)|61)(1:(3:66|(1:70)|71)(1:(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))))(1:76))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_905110823 {
label = "IF [B:43:0x021b, B:45:0x0227] THEN: R(3:46|(1:50)|51) ELSE: R(1:(3:56|(1:60)|61)(1:(3:66|(1:70)|71)(1:(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))))(1:76)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x021b|if (r19.mBottom.mTarget != null) goto L_0x021d\l}"];
Node_45 [shape=record,label="{45\:\ 0x0227|ADDED_TO_REGION\l|if (r19.mBottom.mTarget.mOwner == r17) goto L_0x0229\l}"];
subgraph cluster_Region_584240572 {
label = "R(3:46|(1:50)|51)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0229|r19.mTop.mSolverVariable = r18.createObjectVariable(r19.mTop)\lr19.mBottom.mSolverVariable = r18.createObjectVariable(r19.mBottom)\lint int r1 = r17.getHeight() \- r19.mBottom.getMargin()\lint int r11 = r1 \- r19.getHeight()\lr18.addEquality(r19.mTop.mSolverVariable, r11)\lr18.addEquality(r19.mBottom.mSolverVariable, r1)\l}"];
subgraph cluster_IfRegion_203091338 {
label = "IF [B:47:0x0277, B:49:0x027f] THEN: R(1:50) ELSE: null";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x0277|ADDED_TO_REGION\l|if (r19.mBaselineDistance \> 0) goto L_0x0281\l}"];
Node_49 [shape=record,label="{49\:\ 0x027f|ADDED_TO_REGION\l|if (r19.getVisibility() == 8) goto L_0x0281\l}"];
subgraph cluster_Region_133391452 {
label = "R(1:50)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x0281|r19.mBaseline.mSolverVariable = r18.createObjectVariable(r19.mBaseline)\lr18.addEquality(r19.mBaseline.mSolverVariable, r19.mBaselineDistance + r11)\l}"];
}
}
Node_51 [shape=record,label="{51\:\ 0x02a1|r19.mVerticalResolution = 2\lr19.setVerticalDimension(r11, r1)\l}"];
}
subgraph cluster_Region_916230670 {
label = "R(1:(3:56|(1:60)|61)(1:(3:66|(1:70)|71)(1:(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))))(1:76)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_857450376 {
label = "IF [B:53:0x02b3, B:55:0x02c0] THEN: R(3:56|(1:60)|61) ELSE: R(1:(3:66|(1:70)|71)(1:(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))))(1:76))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x02b3|if (r19.mTop.mTarget != null) goto L_0x02b5\l}"];
Node_55 [shape=record,label="{55\:\ 0x02c0|ADDED_TO_REGION\l|if (r19.mTop.mTarget.mOwner.mVerticalResolution == 2) goto L_0x02c2\l}"];
subgraph cluster_Region_1078705275 {
label = "R(3:56|(1:60)|61)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x02c2|android.support.constraint.solver.SolverVariable android.support.constraint.solver.SolverVariable r10 = r19.mTop.mTarget.mSolverVariable\lr19.mTop.mSolverVariable = r18.createObjectVariable(r19.mTop)\lr19.mBottom.mSolverVariable = r18.createObjectVariable(r19.mBottom)\lint int r11 = (int) (r10.computedValue + ((float) r19.mTop.getMargin()) + 0.5f)\lint int r1 = r11 + r19.getHeight()\lr18.addEquality(r19.mTop.mSolverVariable, r11)\lr18.addEquality(r19.mBottom.mSolverVariable, r1)\l}"];
subgraph cluster_IfRegion_300066577 {
label = "IF [B:57:0x031a, B:59:0x0322] THEN: R(1:60) ELSE: null";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x031a|ADDED_TO_REGION\l|if (r19.mBaselineDistance \> 0) goto L_0x0324\l}"];
Node_59 [shape=record,label="{59\:\ 0x0322|ADDED_TO_REGION\l|if (r19.getVisibility() == 8) goto L_0x0324\l}"];
subgraph cluster_Region_1656775788 {
label = "R(1:60)";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x0324|r19.mBaseline.mSolverVariable = r18.createObjectVariable(r19.mBaseline)\lr18.addEquality(r19.mBaseline.mSolverVariable, r19.mBaselineDistance + r11)\l}"];
}
}
Node_61 [shape=record,label="{61\:\ 0x0344|r19.mVerticalResolution = 2\lr19.setVerticalDimension(r11, r1)\l}"];
}
subgraph cluster_Region_1246719514 {
label = "R(1:(3:66|(1:70)|71)(1:(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))))(1:76))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_412195263 {
label = "IF [B:63:0x0356, B:65:0x0363] THEN: R(3:66|(1:70)|71) ELSE: R(1:(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))))(1:76)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x0356|if (r19.mBottom.mTarget != null) goto L_0x0358\l}"];
Node_65 [shape=record,label="{65\:\ 0x0363|ADDED_TO_REGION\l|if (r19.mBottom.mTarget.mOwner.mVerticalResolution == 2) goto L_0x0365\l}"];
subgraph cluster_Region_136908671 {
label = "R(3:66|(1:70)|71)";
node [shape=record,color=blue];
Node_66 [shape=record,label="{66\:\ 0x0365|android.support.constraint.solver.SolverVariable android.support.constraint.solver.SolverVariable r10 = r19.mBottom.mTarget.mSolverVariable\lr19.mTop.mSolverVariable = r18.createObjectVariable(r19.mTop)\lr19.mBottom.mSolverVariable = r18.createObjectVariable(r19.mBottom)\lint int r1 = (int) ((r10.computedValue \- ((float) r19.mBottom.getMargin())) + 0.5f)\lint int r11 = r1 \- r19.getHeight()\lr18.addEquality(r19.mTop.mSolverVariable, r11)\lr18.addEquality(r19.mBottom.mSolverVariable, r1)\l}"];
subgraph cluster_IfRegion_1985501890 {
label = "IF [B:67:0x03bd, B:69:0x03c5] THEN: R(1:70) ELSE: null";
node [shape=record,color=blue];
Node_67 [shape=record,label="{67\:\ 0x03bd|ADDED_TO_REGION\l|if (r19.mBaselineDistance \> 0) goto L_0x03c7\l}"];
Node_69 [shape=record,label="{69\:\ 0x03c5|ADDED_TO_REGION\l|if (r19.getVisibility() == 8) goto L_0x03c7\l}"];
subgraph cluster_Region_1150038291 {
label = "R(1:70)";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x03c7|r19.mBaseline.mSolverVariable = r18.createObjectVariable(r19.mBaseline)\lr18.addEquality(r19.mBaseline.mSolverVariable, r19.mBaselineDistance + r11)\l}"];
}
}
Node_71 [shape=record,label="{71\:\ 0x03e7|r19.mVerticalResolution = 2\lr19.setVerticalDimension(r11, r1)\l}"];
}
subgraph cluster_Region_1921429815 {
label = "R(1:(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))))(1:76)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1124609731 {
label = "IF [B:73:0x03f9, B:75:0x0406] THEN: R(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109))))) ELSE: R(1:76) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x03f9|if (r19.mBaseline.mTarget == null) goto L_0x0484\l}"];
Node_75 [shape=record,label="{75\:\ 0x0406|ADDED_TO_REGION\l|if (r19.mBaseline.mTarget.mOwner.mVerticalResolution != 2) goto L_0x0484\l}"];
subgraph cluster_Region_2073797908 {
label = "R(4:78|81|84|(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))))";
node [shape=record,color=blue];
Node_78 [shape=record,label="{78\:\ 0x048a|boolean r6 = r19.mBaseline.mTarget != null\l}"];
Node_81 [shape=record,label="{81\:\ 0x0493|boolean r8 = r19.mTop.mTarget != null\l}"];
Node_84 [shape=record,label="{84\:\ 0x049c|boolean r7 = r19.mBottom.mTarget != null\l}"];
subgraph cluster_Region_1472207740 {
label = "R(1:(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2127778093 {
label = "IF [B:86:0x049f, B:87:0x04a1, B:88:0x04a3] THEN: R(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109))) ELSE: null";
node [shape=record,color=blue];
Node_86 [shape=record,label="{86\:\ 0x049f|PHI: r7 \l  PHI: (r7v1 'hasBottom' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 != true) goto L_0x04a1\l}"];
Node_87 [shape=record,label="{87\:\ 0x04a1|ADDED_TO_REGION\l|if (r8 != true) goto L_0x04a3\l}"];
Node_88 [shape=record,label="{88\:\ 0x04a3|ADDED_TO_REGION\l|if (r7 != true) goto L_0x04a5\l}"];
subgraph cluster_Region_1668990220 {
label = "R(1:(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109)))";
node [shape=record,color=blue];
subgraph cluster_Region_615702365 {
label = "R(2:(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))|(3:104|(1:108)|109))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_651072318 {
label = "IF [B:90:0x04a9] THEN: R(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122))) ELSE: null";
node [shape=record,color=blue];
Node_90 [shape=record,label="{90\:\ 0x04a9|if ((r19 instanceof android.support.constraint.solver.widgets.Guideline) == true) goto L_0x04ab\l}"];
subgraph cluster_Region_925532877 {
label = "R(2:91|(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122)))";
node [shape=record,color=blue];
Node_91 [shape=record,label="{91\:\ 0x04ab|android.support.constraint.solver.widgets.Guideline android.support.constraint.solver.widgets.Guideline r4 = (android.support.constraint.solver.widgets.Guideline) r19\l}"];
subgraph cluster_Region_1895987040 {
label = "R(2:(4:93|(1:95)(1:(1:102)(1:103))|96|123)|(1:122))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1402267452 {
label = "IF [B:92:0x04b3] THEN: R(4:93|(1:95)(1:(1:102)(1:103))|96|123) ELSE: null";
node [shape=record,color=blue];
Node_92 [shape=record,label="{92\:\ 0x04b3|if (r4.getOrientation() == 0) goto L_0x04b5\l}"];
subgraph cluster_Region_825671359 {
label = "R(4:93|(1:95)(1:(1:102)(1:103))|96|123)";
node [shape=record,color=blue];
Node_93 [shape=record,label="{93\:\ 0x04b5|r19.mTop.mSolverVariable = r18.createObjectVariable(r19.mTop)\lr19.mBottom.mSolverVariable = r18.createObjectVariable(r19.mBottom)\l}"];
subgraph cluster_IfRegion_634012092 {
label = "IF [B:94:0x04db] THEN: R(1:95) ELSE: R(1:(1:102)(1:103))";
node [shape=record,color=blue];
Node_94 [shape=record,label="{94\:\ 0x04db|if (r4.getRelativeBegin() != \-1) goto L_0x04dd\l}"];
subgraph cluster_Region_1294611328 {
label = "R(1:95)";
node [shape=record,color=blue];
Node_95 [shape=record,label="{95\:\ 0x04dd|float r9 = (float) r4.getRelativeBegin()\l}"];
}
subgraph cluster_Region_1147510505 {
label = "R(1:(1:102)(1:103)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_779480066 {
label = "IF [B:101:0x0524] THEN: R(1:102) ELSE: R(1:103) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_101 [shape=record,label="{101\:\ 0x0524|if (r4.getRelativeEnd() != \-1) goto L_0x0526\l}"];
subgraph cluster_Region_1521239031 {
label = "R(1:102)";
node [shape=record,color=blue];
Node_102 [shape=record,label="{102\:\ 0x0526|float r9 = (float) (r17.getHeight() \- r4.getRelativeEnd())\l}"];
}
subgraph cluster_Region_765210303 {
label = "R(1:103)";
node [shape=record,color=blue];
Node_103 [shape=record,label="{103\:\ 0x0531|float r9 = ((float) r17.getHeight()) * r4.getRelativePercent()\l}"];
}
}
}
}
Node_96 [shape=record,label="{96\:\ 0x04e2|PHI: r9 \l  PHI: (r9v3 'position' float) = (r9v1 'position' float), (r9v2 'position' float), (r9v4 'position' float) binds: [B:103:0x0531, B:102:0x0526, B:95:0x04dd] A[DONT_GENERATE, DONT_INLINE]\l|int int r13 = (int) (0.5f + r9)\lr18.addEquality(r19.mTop.mSolverVariable, r13)\lr18.addEquality(r19.mBottom.mSolverVariable, r13)\lr19.mVerticalResolution = 2\lr19.mHorizontalResolution = 2\lr19.setVerticalDimension(r13, r13)\lr19.setHorizontalDimension(0, r17.getWidth())\l}"];
Node_123 [shape=record,label="{123\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_1990195471 {
label = "R(1:122)";
node [shape=record,color=blue];
Node_122 [shape=record,label="{122\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
subgraph cluster_Region_722183270 {
label = "R(3:104|(1:108)|109)";
node [shape=record,color=blue];
Node_104 [shape=record,label="{104\:\ 0x053d|r19.mTop.mSolverVariable = r18.createObjectVariable(r19.mTop)\lr19.mBottom.mSolverVariable = r18.createObjectVariable(r19.mBottom)\lint int r11 = r19.getY()\lint int r1 = r11 + r19.getHeight()\lr18.addEquality(r19.mTop.mSolverVariable, r11)\lr18.addEquality(r19.mBottom.mSolverVariable, r1)\l}"];
subgraph cluster_IfRegion_614122369 {
label = "IF [B:105:0x0581, B:107:0x0589] THEN: R(1:108) ELSE: null";
node [shape=record,color=blue];
Node_105 [shape=record,label="{105\:\ 0x0581|ADDED_TO_REGION\l|if (r19.mBaselineDistance \> 0) goto L_0x058b\l}"];
Node_107 [shape=record,label="{107\:\ 0x0589|ADDED_TO_REGION\l|if (r19.getVisibility() == 8) goto L_0x058b\l}"];
subgraph cluster_Region_297744107 {
label = "R(1:108)";
node [shape=record,color=blue];
Node_108 [shape=record,label="{108\:\ 0x058b|r19.mBaseline.mSolverVariable = r18.createObjectVariable(r19.mBaseline)\lr18.addEquality(r19.mBaseline.mSolverVariable, r19.mBaselineDistance + r11)\l}"];
}
}
Node_109 [shape=record,label="{109\:\ 0x05ab|r19.mVerticalResolution = 2\l}"];
}
}
}
}
}
}
subgraph cluster_Region_815939943 {
label = "R(1:76)";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x0408|android.support.constraint.solver.SolverVariable android.support.constraint.solver.SolverVariable r10 = r19.mBaseline.mTarget.mSolverVariable\lr19.mTop.mSolverVariable = r18.createObjectVariable(r19.mTop)\lr19.mBottom.mSolverVariable = r18.createObjectVariable(r19.mBottom)\lint int r11 = (int) ((r10.computedValue \- ((float) r19.mBaselineDistance)) + 0.5f)\lint int r1 = r11 + r19.getHeight()\lr18.addEquality(r19.mTop.mSolverVariable, r11)\lr18.addEquality(r19.mBottom.mSolverVariable, r1)\lr19.mBaseline.mSolverVariable = r18.createObjectVariable(r19.mBaseline)\lr18.addEquality(r19.mBaseline.mSolverVariable, r19.mBaselineDistance + r11)\lr19.mVerticalResolution = 2\lr19.setVerticalDimension(r11, r1)\l}"];
}
}
}
}
}
}
}
}
}
}
}
subgraph cluster_Region_1187055877 {
label = "R(1:(5:21|(1:23)(1:30)|24|(1:28)|29)(1:31)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_784029154 {
label = "IF [B:18:0x00ba, B:20:0x00c6] THEN: R(5:21|(1:23)(1:30)|24|(1:28)|29) ELSE: R(1:31) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x00ba|if (r19.mTop.mTarget.mOwner == r17) goto L_0x00bc\l}"];
Node_20 [shape=record,label="{20\:\ 0x00c6|ADDED_TO_REGION\l|if (r19.mBottom.mTarget.mOwner == r17) goto L_0x00c8\l}"];
subgraph cluster_Region_1339019636 {
label = "R(5:21|(1:23)(1:30)|24|(1:28)|29)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x00c8|int int r12 = r19.mTop.getMargin()\lint int r2 = r19.mBottom.getMargin()\l}"];
subgraph cluster_IfRegion_660965051 {
label = "IF [B:22:0x00e0] THEN: R(1:23) ELSE: R(1:30)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x00e0|if (r17.mVerticalDimensionBehaviour == android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT) goto L_0x00e2\l}"];
subgraph cluster_Region_1401068885 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x00e2|r11 = r12\lint r1 = r11 + r19.getHeight()\l}"];
}
subgraph cluster_Region_2091832536 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0159|int r11 = (int) (((float) r12) + (((float) (((r17.getHeight() \- r12) \- r2) \- r19.getHeight())) * r19.mVerticalBiasPercent) + 0.5f)\lint r1 = r11 + r19.getHeight()\l}"];
}
}
Node_24 [shape=record,label="{24\:\ 0x00e9|PHI: r1 r11 \l  PHI: (r1v8 'bottom' int) = (r1v7 'bottom' int), (r1v9 'bottom' int) binds: [B:30:0x0159, B:23:0x00e2] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v8 'top' int) = (r11v7 'top' int), (r11v9 'top' int) binds: [B:30:0x0159, B:23:0x00e2] A[DONT_GENERATE, DONT_INLINE]\l|r19.mTop.mSolverVariable = r18.createObjectVariable(r19.mTop)\lr19.mBottom.mSolverVariable = r18.createObjectVariable(r19.mBottom)\lr18.addEquality(r19.mTop.mSolverVariable, r11)\lr18.addEquality(r19.mBottom.mSolverVariable, r1)\l}"];
subgraph cluster_IfRegion_1427234589 {
label = "IF [B:25:0x0123, B:27:0x012b] THEN: R(1:28) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0123|ADDED_TO_REGION\l|if (r19.mBaselineDistance \> 0) goto L_0x012d\l}"];
Node_27 [shape=record,label="{27\:\ 0x012b|ADDED_TO_REGION\l|if (r19.getVisibility() == 8) goto L_0x012d\l}"];
subgraph cluster_Region_458653083 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x012d|r19.mBaseline.mSolverVariable = r18.createObjectVariable(r19.mBaseline)\lr18.addEquality(r19.mBaseline.mSolverVariable, r19.mBaselineDistance + r11)\l}"];
}
}
Node_29 [shape=record,label="{29\:\ 0x014d|r19.mVerticalResolution = 2\lr19.setVerticalDimension(r11, r1)\l}"];
}
subgraph cluster_Region_1874214742 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x017c|r19.mVerticalResolution = 1\l}"];
}
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000e}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0016}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x006c}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x00a0}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x00a8}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x00b0}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x00bc}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0125}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0183}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x018b}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x01e1}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0215}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x021d}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x0279}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x02ad}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x02b5}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x031c}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x0350}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x0358}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x03bf}"];
Node_72 [shape=record,color=red,label="{72\:\ 0x03f3}"];
Node_74 [shape=record,color=red,label="{74\:\ 0x03fb}"];
Node_77 [shape=record,color=red,label="{77\:\ 0x0484}"];
Node_79 [shape=record,color=red,label="{79\:\ 0x048c}"];
Node_80 [shape=record,color=red,label="{80\:\ 0x048d|PHI: r6 \l  PHI: (r6v1 'hasBaseline' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_82 [shape=record,color=red,label="{82\:\ 0x0495}"];
Node_83 [shape=record,color=red,label="{83\:\ 0x0496|PHI: r8 \l  PHI: (r8v1 'hasTop' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_85 [shape=record,color=red,label="{85\:\ 0x049e}"];
Node_89 [shape=record,color=red,label="{89\:\ 0x04a5}"];
Node_97 [shape=record,color=red,label="{97\:\ 0x0517}"];
Node_98 [shape=record,color=red,label="{98\:\ 0x051a}"];
Node_99 [shape=record,color=red,label="{99\:\ 0x051d}"];
Node_100 [shape=record,color=red,label="{100\:\ 0x051f}"];
Node_106 [shape=record,color=red,label="{106\:\ 0x0583}"];
Node_110 [shape=record,color=red,label="{110\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_111 [shape=record,color=red,label="{111\:\ ?|SYNTHETIC\l}"];
Node_112 [shape=record,color=red,label="{112\:\ ?|SYNTHETIC\l}"];
Node_113 [shape=record,color=red,label="{113\:\ ?|SYNTHETIC\l}"];
Node_114 [shape=record,color=red,label="{114\:\ ?|SYNTHETIC\l}"];
Node_115 [shape=record,color=red,label="{115\:\ ?|SYNTHETIC\l}"];
Node_116 [shape=record,color=red,label="{116\:\ ?|SYNTHETIC\l}"];
Node_117 [shape=record,color=red,label="{117\:\ ?|SYNTHETIC\l}"];
Node_118 [shape=record,color=red,label="{118\:\ ?|SYNTHETIC\l}"];
Node_119 [shape=record,color=red,label="{119\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_120 [shape=record,color=red,label="{120\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_121 [shape=record,color=red,label="{121\:\ ?|SYNTHETIC\l}"];
Node_124 [shape=record,color=red,label="{124\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static void android.support.constraint.solver.widgets.Optimizer.checkVerticalSimpleDependency((r17v0 'container' android.support.constraint.solver.widgets.ConstraintWidgetContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'system' android.support.constraint.solver.LinearSystem A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'widget' android.support.constraint.solver.widgets.ConstraintWidget A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_110;
Node_4 -> Node_5;
Node_4 -> Node_13[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_13[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_111;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_32;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_32;
Node_33 -> Node_34;
Node_33 -> Node_42[style=dashed];
Node_35 -> Node_36;
Node_35 -> Node_42[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_40;
Node_39 -> Node_40;
Node_39 -> Node_41[style=dashed];
Node_40 -> Node_41;
Node_41 -> Node_114;
Node_43 -> Node_44;
Node_43 -> Node_52[style=dashed];
Node_45 -> Node_46;
Node_45 -> Node_52[style=dashed];
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_50;
Node_49 -> Node_50;
Node_49 -> Node_51[style=dashed];
Node_50 -> Node_51;
Node_51 -> Node_115;
Node_53 -> Node_54;
Node_53 -> Node_62[style=dashed];
Node_55 -> Node_56;
Node_55 -> Node_62[style=dashed];
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_60;
Node_59 -> Node_60;
Node_59 -> Node_61[style=dashed];
Node_60 -> Node_61;
Node_61 -> Node_116;
Node_63 -> Node_64;
Node_63 -> Node_72[style=dashed];
Node_65 -> Node_66;
Node_65 -> Node_72[style=dashed];
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_70;
Node_69 -> Node_70;
Node_69 -> Node_71[style=dashed];
Node_70 -> Node_71;
Node_71 -> Node_117;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_77;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_77;
Node_78 -> Node_79;
Node_78 -> Node_97;
Node_81 -> Node_82;
Node_81 -> Node_98;
Node_84 -> Node_85;
Node_84 -> Node_99;
Node_86 -> Node_87;
Node_86 -> Node_119[style=dashed];
Node_87 -> Node_88;
Node_87 -> Node_120[style=dashed];
Node_88 -> Node_89;
Node_88 -> Node_121[style=dashed];
Node_90 -> Node_91;
Node_90 -> Node_104[style=dashed];
Node_91 -> Node_92;
Node_92 -> Node_93;
Node_92 -> Node_122[style=dashed];
Node_93 -> Node_94;
Node_94 -> Node_95;
Node_94 -> Node_100[style=dashed];
Node_95 -> Node_96;
Node_101 -> Node_102;
Node_101 -> Node_103[style=dashed];
Node_102 -> Node_96;
Node_103 -> Node_96;
Node_96 -> Node_123;
Node_104 -> Node_105;
Node_105 -> Node_106[style=dashed];
Node_105 -> Node_108;
Node_107 -> Node_108;
Node_107 -> Node_109[style=dashed];
Node_108 -> Node_109;
Node_109 -> Node_124;
Node_76 -> Node_118;
Node_18 -> Node_19;
Node_18 -> Node_31[style=dashed];
Node_20 -> Node_21;
Node_20 -> Node_31[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_30[style=dashed];
Node_23 -> Node_24;
Node_30 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_112;
Node_31 -> Node_113;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_9 -> Node_10;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_26 -> Node_27;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_38 -> Node_39;
Node_42 -> Node_43;
Node_44 -> Node_45;
Node_48 -> Node_49;
Node_52 -> Node_53;
Node_54 -> Node_55;
Node_58 -> Node_59;
Node_62 -> Node_63;
Node_64 -> Node_65;
Node_68 -> Node_69;
Node_72 -> Node_73;
Node_74 -> Node_75;
Node_77 -> Node_78;
Node_79 -> Node_80;
Node_80 -> Node_81;
Node_82 -> Node_83;
Node_83 -> Node_84;
Node_85 -> Node_86;
Node_89 -> Node_90;
Node_97 -> Node_80;
Node_98 -> Node_83;
Node_99 -> Node_86;
Node_100 -> Node_101;
Node_106 -> Node_107;
}

