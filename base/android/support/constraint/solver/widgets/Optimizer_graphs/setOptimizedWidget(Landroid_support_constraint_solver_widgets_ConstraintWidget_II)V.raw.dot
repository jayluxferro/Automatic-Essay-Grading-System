digraph "CFG forandroid.support.constraint.solver.widgets.Optimizer.setOptimizedWidget(Landroid\/support\/constraint\/solver\/widgets\/ConstraintWidget;II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r0 I:int) = (r5 I:int) * (2 int) \l0x0002: ARITH  (r1 I:int) = (r0 I:int) + (1 int) \l0x0004: IGET  (r2 I:android.support.constraint.solver.widgets.ConstraintAnchor[]) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mListAnchors android.support.constraint.solver.widgets.ConstraintAnchor[] \l0x0006: AGET  (r2 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0008: INVOKE  (r2 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r2 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l0x000c: INVOKE  (r3 I:android.support.constraint.solver.widgets.ConstraintWidget) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.getParent():android.support.constraint.solver.widgets.ConstraintWidget type: VIRTUAL \l0x0010: IGET  (r3 I:android.support.constraint.solver.widgets.ConstraintAnchor) = \l  (r3 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mLeft android.support.constraint.solver.widgets.ConstraintAnchor \l0x0012: INVOKE  (r3 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r3 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l0x0016: IPUT  \l  (r3 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l  (r2 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l android.support.constraint.solver.widgets.ResolutionAnchor.resolvedTarget android.support.constraint.solver.widgets.ResolutionAnchor \l0x0018: IGET  (r2 I:android.support.constraint.solver.widgets.ConstraintAnchor[]) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mListAnchors android.support.constraint.solver.widgets.ConstraintAnchor[] \l0x001a: AGET  (r2 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x001c: INVOKE  (r2 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r2 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l0x0020: CAST  (r6 I:float) = (float) (r6 I:int) \l0x0021: IPUT  \l  (r6 I:float)\l  (r2 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l android.support.constraint.solver.widgets.ResolutionAnchor.resolvedOffset float \l0x0023: IGET  (r6 I:android.support.constraint.solver.widgets.ConstraintAnchor[]) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mListAnchors android.support.constraint.solver.widgets.ConstraintAnchor[] \l0x0025: AGET  (r6 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0027: INVOKE  (r6 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r6 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l0x002b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x002c: IPUT  \l  (r2 I:int)\l  (r6 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l android.support.constraint.solver.widgets.ResolutionAnchor.state int \l0x002e: IGET  (r6 I:android.support.constraint.solver.widgets.ConstraintAnchor[]) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mListAnchors android.support.constraint.solver.widgets.ConstraintAnchor[] \l0x0030: AGET  (r6 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0032: INVOKE  (r6 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r6 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l0x0036: IGET  (r3 I:android.support.constraint.solver.widgets.ConstraintAnchor[]) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mListAnchors android.support.constraint.solver.widgets.ConstraintAnchor[] \l0x0038: AGET  (r0 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x003a: INVOKE  (r0 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r0 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l0x003e: IPUT  \l  (r0 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l  (r6 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l android.support.constraint.solver.widgets.ResolutionAnchor.resolvedTarget android.support.constraint.solver.widgets.ResolutionAnchor \l0x0040: IGET  (r6 I:android.support.constraint.solver.widgets.ConstraintAnchor[]) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mListAnchors android.support.constraint.solver.widgets.ConstraintAnchor[] \l0x0042: AGET  (r6 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0044: INVOKE  (r6 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r6 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l0x0048: INVOKE  (r5 I:int) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l  (r5 I:int)\l android.support.constraint.solver.widgets.ConstraintWidget.getLength(int):int type: VIRTUAL \l0x004c: CAST  (r5 I:float) = (float) (r5 I:int) \l0x004d: IPUT  \l  (r5 I:float)\l  (r6 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l android.support.constraint.solver.widgets.ResolutionAnchor.resolvedOffset float \l0x004f: IGET  (r4 I:android.support.constraint.solver.widgets.ConstraintAnchor[]) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mListAnchors android.support.constraint.solver.widgets.ConstraintAnchor[] \l0x0051: AGET  (r4 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0053: INVOKE  (r4 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l0x0057: IPUT  \l  (r2 I:int)\l  (r4 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l android.support.constraint.solver.widgets.ResolutionAnchor.state int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0059|0x0059: RETURN   \l}"];
MethodNode[shape=record,label="{static void android.support.constraint.solver.widgets.Optimizer.setOptimizedWidget((r4 I:android.support.constraint.solver.widgets.ConstraintWidget A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

