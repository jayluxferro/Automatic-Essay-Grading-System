digraph "CFG forandroid.support.constraint.solver.widgets.ConstraintWidgetGroup.updateResolvedDimension(Landroid\/support\/constraint\/solver\/widgets\/ConstraintWidget;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r7.mOptimizerMeasurable == false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r7.isFullyResolved() == false) goto L_0x000b\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|r1 = false\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|if (r7.mRight.mTarget == null) goto L_0x0015\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|r0 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|r0 = false\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|PHI: r0 \l  PHI: (r0v4 boolean) = (r0v38 boolean), (r0v39 boolean) binds: [B:8:0x0015, B:7:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L_0x001d\l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|android.support.constraint.solver.widgets.ConstraintAnchor r3 = r7.mRight.mTarget\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|android.support.constraint.solver.widgets.ConstraintAnchor r3 = r7.mLeft.mTarget\l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|PHI: r3 \l  PHI: (r3v0 android.support.constraint.solver.widgets.ConstraintAnchor) = (r3v20 android.support.constraint.solver.widgets.ConstraintAnchor), (r3v22 android.support.constraint.solver.widgets.ConstraintAnchor) binds: [B:11:0x001d, B:10:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == null) goto L_0x004b\l}"];
Node_13 [shape=record,label="{13\:\ 0x0023}"];
Node_14 [shape=record,label="{14\:\ 0x0027|if (r3.mOwner.mOptimizerMeasured != false) goto L_0x002e\l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|updateResolvedDimension(r3.mOwner)\l}"];
Node_16 [shape=record,label="{16\:\ 0x002e}"];
Node_17 [shape=record,label="{17\:\ 0x0032|if (r3.mType != android.support.constraint.solver.widgets.ConstraintAnchor.Type.RIGHT) goto L_0x0040\l}"];
Node_18 [shape=record,label="{18\:\ 0x0034|int r4 = r3.mOwner.f5mX\lint r3 = r3.mOwner.getWidth() + r4\l}"];
Node_19 [shape=record,label="{19\:\ 0x0040}"];
Node_20 [shape=record,label="{20\:\ 0x0044|if (r3.mType != android.support.constraint.solver.widgets.ConstraintAnchor.Type.LEFT) goto L_0x004b\l}"];
Node_21 [shape=record,label="{21\:\ 0x0046|int r3 = r3.mOwner.f5mX\l}"];
Node_22 [shape=record,label="{22\:\ 0x004b|r3 = 0\l}"];
Node_23 [shape=record,label="{23\:\ 0x004c|PHI: r3 \l  PHI: (r3v1 int) = (r3v13 int), (r3v15 int), (r3v18 int) binds: [B:22:0x004b, B:21:0x0046, B:18:0x0034] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L_0x0056\l}"];
Node_24 [shape=record,label="{24\:\ 0x004e|int r3 = r3 \- r7.mRight.getMargin()\l}"];
Node_25 [shape=record,label="{25\:\ 0x0056|int r3 = r3 + (r7.mLeft.getMargin() + r7.getWidth())\l}"];
Node_26 [shape=record,label="{26\:\ 0x0062|PHI: r3 \l  PHI: (r3v2 int) = (r3v11 int), (r3v12 int) binds: [B:25:0x0056, B:24:0x004e] A[DONT_GENERATE, DONT_INLINE]\l|r7.setHorizontalDimension(r3 \- r7.getWidth(), r3)\l}"];
Node_27 [shape=record,label="{27\:\ 0x006f|if (r7.mBaseline.mTarget == null) goto L_0x0095\l}"];
Node_28 [shape=record,label="{28\:\ 0x0071|android.support.constraint.solver.widgets.ConstraintAnchor r0 = r7.mBaseline.mTarget\l}"];
Node_29 [shape=record,label="{29\:\ 0x0079|if (r0.mOwner.mOptimizerMeasured != false) goto L_0x0080\l}"];
Node_30 [shape=record,label="{30\:\ 0x007b|updateResolvedDimension(r0.mOwner)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0080|int r1 = (r0.mOwner.f6mY + r0.mOwner.mBaselineDistance) \- r7.mBaselineDistance\lr7.setVerticalDimension(r1, r7.mHeight + r1)\lr7.mOptimizerMeasured = true\l}"];
Node_32 [shape=record,label="{32\:\ 0x0094|RETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ 0x0095}"];
Node_34 [shape=record,label="{34\:\ 0x0099|if (r7.mBottom.mTarget == null) goto L_0x009c\l}"];
Node_35 [shape=record,label="{35\:\ 0x009b|r1 = true\l}"];
Node_36 [shape=record,label="{36\:\ 0x009c|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v3 boolean) binds: [B:34:0x0099, B:35:0x009b] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L_0x00a3\l}"];
Node_37 [shape=record,label="{37\:\ 0x009e|android.support.constraint.solver.widgets.ConstraintAnchor r0 = r7.mBottom.mTarget\l}"];
Node_38 [shape=record,label="{38\:\ 0x00a3|android.support.constraint.solver.widgets.ConstraintAnchor r0 = r7.mTop.mTarget\l}"];
Node_39 [shape=record,label="{39\:\ 0x00a7|PHI: r0 \l  PHI: (r0v11 android.support.constraint.solver.widgets.ConstraintAnchor) = (r0v23 android.support.constraint.solver.widgets.ConstraintAnchor), (r0v25 android.support.constraint.solver.widgets.ConstraintAnchor) binds: [B:38:0x00a3, B:37:0x009e] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == null) goto L_0x00d0\l}"];
Node_40 [shape=record,label="{40\:\ 0x00a9}"];
Node_41 [shape=record,label="{41\:\ 0x00ad|if (r0.mOwner.mOptimizerMeasured != false) goto L_0x00b4\l}"];
Node_42 [shape=record,label="{42\:\ 0x00af|updateResolvedDimension(r0.mOwner)\l}"];
Node_43 [shape=record,label="{43\:\ 0x00b4}"];
Node_44 [shape=record,label="{44\:\ 0x00b8|if (r0.mType != android.support.constraint.solver.widgets.ConstraintAnchor.Type.BOTTOM) goto L_0x00c6\l}"];
Node_45 [shape=record,label="{45\:\ 0x00ba|int r3 = r0.mOwner.f6mY + r0.mOwner.getHeight()\l}"];
Node_46 [shape=record,label="{46\:\ 0x00c6}"];
Node_47 [shape=record,label="{47\:\ 0x00ca|if (r0.mType != android.support.constraint.solver.widgets.ConstraintAnchor.Type.TOP) goto L_0x00d0\l}"];
Node_48 [shape=record,label="{48\:\ 0x00cc|int r3 = r0.mOwner.f6mY\l}"];
Node_49 [shape=record,label="{49\:\ 0x00d0|PHI: r3 \l  PHI: (r3v3 int) = (r3v2 int), (r3v2 int), (r3v7 int), (r3v10 int) binds: [B:39:0x00a7, B:47:0x00ca, B:48:0x00cc, B:45:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L_0x00da\l}"];
Node_50 [shape=record,label="{50\:\ 0x00d2|int r3 = r3 \- r7.mBottom.getMargin()\l}"];
Node_51 [shape=record,label="{51\:\ 0x00da|int r3 = r3 + (r7.mTop.getMargin() + r7.getHeight())\l}"];
Node_52 [shape=record,label="{52\:\ 0x00e6|PHI: r3 \l  PHI: (r3v4 int) = (r3v5 int), (r3v6 int) binds: [B:51:0x00da, B:50:0x00d2] A[DONT_GENERATE, DONT_INLINE]\l|r7.setVerticalDimension(r3 \- r7.getHeight(), r3)\lr7.mOptimizerMeasured = true\l}"];
Node_53 [shape=record,label="{53\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_54 [shape=record,label="{54\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.constraint.solver.widgets.ConstraintWidgetGroup.updateResolvedDimension((r6v0 'this' android.support.constraint.solver.widgets.ConstraintWidgetGroup A[IMMUTABLE_TYPE, THIS]), (r7v0 android.support.constraint.solver.widgets.ConstraintWidget A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_54;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_22;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_33;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_49;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_49;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53;
}

