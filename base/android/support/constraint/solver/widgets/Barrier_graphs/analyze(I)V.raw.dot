digraph "CFG forandroid.support.constraint.solver.widgets.Barrier.analyze(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r5 I:android.support.constraint.solver.widgets.ConstraintWidget) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mParent android.support.constraint.solver.widgets.ConstraintWidget \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IGET  (r5 I:android.support.constraint.solver.widgets.ConstraintWidget) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mParent android.support.constraint.solver.widgets.ConstraintWidget \l0x0007: CHECK_CAST  (r5 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer) = (android.support.constraint.solver.widgets.ConstraintWidgetContainer) (r5 I:?[OBJECT, ARRAY]) \l0x0009: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000a: INVOKE  (r5 I:boolean) = \l  (r5 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l  (r0 I:int)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.optimizeFor(int):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0011 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: IGET  (r5 I:int) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mBarrierType int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: SWITCH  \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3] t:[0x002c, 0x0025, 0x001e, 0x0017] \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: IGET  (r5 I:android.support.constraint.solver.widgets.ConstraintAnchor) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mBottom android.support.constraint.solver.widgets.ConstraintAnchor \l0x0019: INVOKE  (r5 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r5 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: IGET  (r5 I:android.support.constraint.solver.widgets.ConstraintAnchor) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mTop android.support.constraint.solver.widgets.ConstraintAnchor \l0x0020: INVOKE  (r5 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r5 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: IGET  (r5 I:android.support.constraint.solver.widgets.ConstraintAnchor) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mRight android.support.constraint.solver.widgets.ConstraintAnchor \l0x0027: INVOKE  (r5 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r5 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|0x002c: IGET  (r5 I:android.support.constraint.solver.widgets.ConstraintAnchor) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mLeft android.support.constraint.solver.widgets.ConstraintAnchor \l0x002e: INVOKE  (r5 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r5 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|0x0032: CONST  (r0 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0033: INVOKE  \l  (r5 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l  (r0 I:int)\l android.support.constraint.solver.widgets.ResolutionAnchor.setType(int):void type: VIRTUAL \l0x0036: IGET  (r0 I:int) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mBarrierType int \l0x0038: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0039: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|0x003a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0055 \l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|0x003c: IGET  (r0 I:int) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mBarrierType int \l0x003e: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0042 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0042|0x0042: IGET  (r0 I:android.support.constraint.solver.widgets.ConstraintAnchor) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mLeft android.support.constraint.solver.widgets.ConstraintAnchor \l0x0044: INVOKE  (r0 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r0 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l0x0048: INVOKE  \l  (r0 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l  (r2 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l  (r1 I:float)\l android.support.constraint.solver.widgets.ResolutionAnchor.resolve(android.support.constraint.solver.widgets.ResolutionAnchor, float):void type: VIRTUAL \l0x004b: IGET  (r0 I:android.support.constraint.solver.widgets.ConstraintAnchor) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mRight android.support.constraint.solver.widgets.ConstraintAnchor \l0x004d: INVOKE  (r0 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r0 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l0x0051: INVOKE  \l  (r0 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l  (r2 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l  (r1 I:float)\l android.support.constraint.solver.widgets.ResolutionAnchor.resolve(android.support.constraint.solver.widgets.ResolutionAnchor, float):void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0055|0x0055: IGET  (r0 I:android.support.constraint.solver.widgets.ConstraintAnchor) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mTop android.support.constraint.solver.widgets.ConstraintAnchor \l0x0057: INVOKE  (r0 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r0 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l0x005b: INVOKE  \l  (r0 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l  (r2 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l  (r1 I:float)\l android.support.constraint.solver.widgets.ResolutionAnchor.resolve(android.support.constraint.solver.widgets.ResolutionAnchor, float):void type: VIRTUAL \l0x005e: IGET  (r0 I:android.support.constraint.solver.widgets.ConstraintAnchor) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mBottom android.support.constraint.solver.widgets.ConstraintAnchor \l0x0060: INVOKE  (r0 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r0 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l0x0064: INVOKE  \l  (r0 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l  (r2 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l  (r1 I:float)\l android.support.constraint.solver.widgets.ResolutionAnchor.resolve(android.support.constraint.solver.widgets.ResolutionAnchor, float):void type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0067|0x0067: IGET  (r0 I:java.util.ArrayList\<android.support.constraint.solver.widgets.ResolutionAnchor\>) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mNodes java.util.ArrayList \l0x0069: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.clear():void type: VIRTUAL \l0x006c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x006d|0x006d: IGET  (r1 I:int) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mWidgetsCount int \l}"];
Node_22 [shape=record,label="{22\:\ 0x006f|0x006f: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:38:0x00af \l}"];
Node_23 [shape=record,label="{23\:\ 0x0071|0x0071: IGET  (r1 I:android.support.constraint.solver.widgets.ConstraintWidget[]) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mWidgets android.support.constraint.solver.widgets.ConstraintWidget[] \l0x0073: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0075: IGET  (r3 I:boolean) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mAllowsGoneWidget boolean \l}"];
Node_24 [shape=record,label="{24\:\ 0x0077|0x0077: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0080 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0079|0x0079: INVOKE  (r3 I:boolean) = \l  (r1 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.allowedInBarrier():boolean type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x007d|0x007d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0080 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0080|0x0080: IGET  (r3 I:int) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mBarrierType int \l}"];
Node_29 [shape=record,label="{29\:\ 0x0082|0x0082: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3] t:[0x009c, 0x0095, 0x008e, 0x0087] \l}"];
Node_30 [shape=record,label="{30\:\ 0x0085|0x0085: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0087|0x0087: IGET  (r1 I:android.support.constraint.solver.widgets.ConstraintAnchor) = \l  (r1 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mBottom android.support.constraint.solver.widgets.ConstraintAnchor \l0x0089: INVOKE  (r1 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r1 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l}"];
Node_32 [shape=record,label="{32\:\ 0x008e|0x008e: IGET  (r1 I:android.support.constraint.solver.widgets.ConstraintAnchor) = \l  (r1 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mTop android.support.constraint.solver.widgets.ConstraintAnchor \l0x0090: INVOKE  (r1 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r1 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l}"];
Node_33 [shape=record,label="{33\:\ 0x0095|0x0095: IGET  (r1 I:android.support.constraint.solver.widgets.ConstraintAnchor) = \l  (r1 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mRight android.support.constraint.solver.widgets.ConstraintAnchor \l0x0097: INVOKE  (r1 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r1 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l}"];
Node_34 [shape=record,label="{34\:\ 0x009c|0x009c: IGET  (r1 I:android.support.constraint.solver.widgets.ConstraintAnchor) = \l  (r1 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mLeft android.support.constraint.solver.widgets.ConstraintAnchor \l0x009e: INVOKE  (r1 I:android.support.constraint.solver.widgets.ResolutionAnchor) = \l  (r1 I:android.support.constraint.solver.widgets.ConstraintAnchor)\l android.support.constraint.solver.widgets.ConstraintAnchor.getResolutionNode():android.support.constraint.solver.widgets.ResolutionAnchor type: VIRTUAL \l}"];
Node_35 [shape=record,label="{35\:\ 0x00a2|0x00a2: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x00ac \l}"];
Node_36 [shape=record,label="{36\:\ 0x00a4|0x00a4: IGET  (r3 I:java.util.ArrayList\<android.support.constraint.solver.widgets.ResolutionAnchor\>) = (r4 I:android.support.constraint.solver.widgets.Barrier) android.support.constraint.solver.widgets.Barrier.mNodes java.util.ArrayList \l0x00a6: INVOKE  (r3 I:java.util.ArrayList), (r1 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x00a9: INVOKE  \l  (r1 I:android.support.constraint.solver.widgets.ResolutionAnchor)\l  (r5 I:android.support.constraint.solver.widgets.ResolutionNode)\l android.support.constraint.solver.widgets.ResolutionAnchor.addDependent(android.support.constraint.solver.widgets.ResolutionNode):void type: VIRTUAL \l}"];
Node_37 [shape=record,label="{37\:\ 0x00ac|0x00ac: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_38 [shape=record,label="{38\:\ 0x00af|0x00af: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.constraint.solver.widgets.Barrier.analyze((r4 'this' I:android.support.constraint.solver.widgets.Barrier A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_7 -> Node_10;
Node_7 -> Node_11;
Node_7 -> Node_12;
Node_9 -> Node_13;
Node_10 -> Node_13;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_38;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_28;
Node_26 -> Node_37[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_31;
Node_29 -> Node_32;
Node_29 -> Node_33;
Node_29 -> Node_34;
Node_30 -> Node_35;
Node_31 -> Node_35;
Node_32 -> Node_35;
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_21;
}

