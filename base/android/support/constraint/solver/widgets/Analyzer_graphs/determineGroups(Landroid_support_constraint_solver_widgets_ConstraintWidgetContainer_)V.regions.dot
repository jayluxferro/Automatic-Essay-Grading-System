digraph "CFG forandroid.support.constraint.solver.widgets.Analyzer.determineGroups(Landroid\/support\/constraint\/solver\/widgets\/ConstraintWidgetContainer;)V" {
subgraph cluster_Region_1031231155 {
label = "R(1:(2:(2:2|3)|(13:4|5|9|12|16|(1:19)|20|(2:23|(1:(2:27|28)))|29|(1:32)|(1:34)|(1:36)|37)))";
node [shape=record,color=blue];
subgraph cluster_Region_493692308 {
label = "R(2:(2:2|3)|(13:4|5|9|12|16|(1:19)|20|(2:23|(1:(2:27|28)))|29|(1:32)|(1:34)|(1:36)|37))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2544648 {
label = "IF [B:1:0x0007] THEN: R(2:2|3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0007|if ((r10.getOptimizationLevel() & 32) != 32) goto L_0x0009\l}"];
subgraph cluster_Region_521099916 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|singleGroup(r10)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1386134161 {
label = "R(13:4|5|9|12|16|(1:19)|20|(2:23|(1:(2:27|28)))|29|(1:32)|(1:34)|(1:36)|37)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|r10.mSkipSolver = true\lr10.mGroupsWrapOptimized = false\lr10.mHorizontalWrapOptimized = false\lr10.mVerticalWrapOptimized = false\ljava.util.ArrayList java.util.ArrayList\<android.support.constraint.solver.widgets.ConstraintWidget\> r2 = r10.mChildren\ljava.util.List\<android.support.constraint.solver.widgets.ConstraintWidgetGroup\> java.util.List\<android.support.constraint.solver.widgets.ConstraintWidgetGroup\> r3 = r10.mWidgetGroups\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|boolean r4 = r10.getHorizontalDimensionBehaviour() == android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT\l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|boolean r5 = r10.getVerticalDimensionBehaviour() == android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|PHI: r5 \l  PHI: (r5v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|boolean r6 = r4 \|\| r5\l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|PHI: r6 \l  PHI: (r6v1 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r3.clear()\ljava.util.Iterator r7 = r2.iterator()\l}"];
subgraph cluster_LoopRegion_407520528 {
label = "LOOP:0: (1:19)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0044|if (r7.hasNext() != false) goto L_0x0046\l}"];
subgraph cluster_Region_1828684296 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0046|LOOP_END\lLOOP:0: B:17:0x0040\-\>B:19:0x0046\l|android.support.constraint.solver.widgets.ConstraintWidget r8 = (android.support.constraint.solver.widgets.ConstraintWidget) r7.next()\lr8.mBelongingGroup = null\lr8.mGroupsToSolver = false\lr8.resetResolutionNodes()\l}"];
}
}
Node_20 [shape=record,label="{20\:\ 0x0055|java.util.Iterator r2 = r2.iterator()\l}"];
subgraph cluster_LoopRegion_1515162891 {
label = "LOOP:1: (2:23|(1:(2:27|28)))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x005d|if (r2.hasNext() != false) goto L_0x005f\l}"];
subgraph cluster_Region_1064400884 {
label = "R(2:23|(1:(2:27|28)))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x005f|android.support.constraint.solver.widgets.ConstraintWidget r7 = (android.support.constraint.solver.widgets.ConstraintWidget) r2.next()\l}"];
subgraph cluster_Region_1968822223 {
label = "R(1:(2:27|28))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1777321095 {
label = "IF [B:24:0x0067, B:26:0x006d] THEN: R(2:27|28) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0067|if (r7.mBelongingGroup == null) goto L_0x0069\l}"];
Node_26 [shape=record,label="{26\:\ 0x006d|ADDED_TO_REGION\l|if (determineGroups(r7, r3, r6) != true) goto L_0x006f\l}"];
subgraph cluster_Region_1705440430 {
label = "R(2:27|28)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x006f|singleGroup(r10)\lr10.mSkipSolver = false\l}"];
Node_28 [shape=record,label="{28\:\ 0x0074|RETURN\l|return\l}"];
}
}
}
}
}
Node_29 [shape=record,label="{29\:\ 0x0075|java.util.Iterator r2 = r3.iterator()\lint r6 = 0\lint r7 = 0\l}"];
subgraph cluster_LoopRegion_1126632132 {
label = "LOOP:2: (1:32)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x007f|if (r2.hasNext() != false) goto L_0x0081\l}"];
subgraph cluster_Region_1698806498 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0081|LOOP_END\lLOOP:2: B:30:0x007b\-\>B:32:0x0081\l|android.support.constraint.solver.widgets.ConstraintWidgetGroup r8 = r2.next()\lint r6 = java.lang.Math.max(r6, getMaxDimension(r8, 0))\lint r7 = java.lang.Math.max(r7, getMaxDimension(r8, 1))\l}"];
}
}
subgraph cluster_IfRegion_1814256008 {
label = "IF [B:33:0x0098] THEN: R(1:34) ELSE: null";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0098|if (r4 == true) goto L_0x009a\l}"];
subgraph cluster_Region_1914540337 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x009a|r10.setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.FIXED)\lr10.setWidth(r6)\lr10.mGroupsWrapOptimized = true\lr10.mHorizontalWrapOptimized = true\lr10.mWrapFixedWidth = r6\l}"];
}
}
subgraph cluster_IfRegion_1118620180 {
label = "IF [B:35:0x00a8] THEN: R(1:36) ELSE: null";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x00a8|if (r5 == true) goto L_0x00aa\l}"];
subgraph cluster_Region_67398115 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x00aa|r10.setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.FIXED)\lr10.setHeight(r7)\lr10.mGroupsWrapOptimized = true\lr10.mVerticalWrapOptimized = true\lr10.mWrapFixedHeight = r7\l}"];
}
}
Node_37 [shape=record,label="{37\:\ 0x00b8|setPosition(r3, 0, r10.getWidth())\lsetPosition(r3, 1, r10.getHeight())\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0023}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0025}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0026|PHI: r4 \l  PHI: (r4v1 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002e}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0030}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0033|REMOVE\lADDED_TO_REGION\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0036}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0038}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0040|LOOP_START\lLOOP:0: B:17:0x0040\-\>B:19:0x0046\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0059|LOOP_START\lLOOP:1: B:21:0x0059\-\>B:40:0x0059\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0069}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x007b|LOOP_START\lPHI: r6 r7 \l  PHI: (r6v3 int) = (r6v2 int), (r6v4 int) binds: [B:29:0x0075, B:32:0x0081] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v3 int) = (r7v2 int), (r7v4 int) binds: [B:29:0x0075, B:32:0x0081] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:30:0x007b\-\>B:32:0x0081\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x00c6}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0055|SYNTHETIC\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0059|LOOP_END\lSYNTHETIC\lLOOP:1: B:21:0x0059\-\>B:40:0x0059\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0075|SYNTHETIC\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x006f|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0059|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0059|SYNTHETIC\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0098|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static void android.support.constraint.solver.widgets.Analyzer.determineGroups((r10v0 android.support.constraint.solver.widgets.ConstraintWidgetContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_15;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_18 -> Node_39[style=dashed];
Node_19 -> Node_17;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_22 -> Node_41[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_43[style=dashed];
Node_26 -> Node_42;
Node_26 -> Node_44[style=dashed];
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_31 -> Node_45[style=dashed];
Node_32 -> Node_30;
Node_33 -> Node_34;
Node_33 -> Node_35[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_37[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_0 -> Node_1;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_21 -> Node_22;
Node_25 -> Node_26;
Node_30 -> Node_31;
Node_39 -> Node_20;
Node_40 -> Node_21;
Node_41 -> Node_29;
Node_42 -> Node_27;
Node_43 -> Node_40;
Node_44 -> Node_40;
Node_45 -> Node_33;
}

