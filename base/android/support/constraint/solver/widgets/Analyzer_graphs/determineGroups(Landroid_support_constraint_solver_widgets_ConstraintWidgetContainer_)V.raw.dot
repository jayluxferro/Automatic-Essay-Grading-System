digraph "CFG forandroid.support.constraint.solver.widgets.Analyzer.determineGroups(Landroid\/support\/constraint\/solver\/widgets\/ConstraintWidgetContainer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = \l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.getOptimizationLevel():int type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0006: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (r1 I:?[int, boolean, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: INVOKE  \l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.Analyzer.singleGroup(android.support.constraint.solver.widgets.ConstraintWidgetContainer):void type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000e: IPUT  \l  (r0 I:boolean)\l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mSkipSolver boolean \l0x0010: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0011: IPUT  \l  (r1 I:boolean)\l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mGroupsWrapOptimized boolean \l0x0013: IPUT  \l  (r1 I:boolean)\l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mHorizontalWrapOptimized boolean \l0x0015: IPUT  \l  (r1 I:boolean)\l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mVerticalWrapOptimized boolean \l0x0017: IGET  (r2 I:java.util.ArrayList) = \l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mChildren java.util.ArrayList \l0x0019: IGET  (r3 I:java.util.List\<android.support.constraint.solver.widgets.ConstraintWidgetGroup\>) = \l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mWidgetGroups java.util.List \l0x001b: INVOKE  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) = \l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.getHorizontalDimensionBehaviour():android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour type: VIRTUAL \l0x001f: SGET  (r5 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) =  android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0025 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: INVOKE  (r5 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) = \l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.getVerticalDimensionBehaviour():android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour type: VIRTUAL \l0x002a: SGET  (r6 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) =  android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0030 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0038 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|0x0033: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0036 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0036|0x0036: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0038|0x0038: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0039|0x0039: INVOKE  (r3 I:java.util.List) java.util.List.clear():void type: INTERFACE \l0x003c: INVOKE  (r7 I:java.util.Iterator) = (r2 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x0040|0x0040: INVOKE  (r8 I:boolean) = (r7 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_19 [shape=record,label="{19\:\ 0x0044|0x0044: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0055 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0046|0x0046: INVOKE  (r8 I:java.lang.Object) = (r7 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x004a: CHECK_CAST  (r8 I:android.support.constraint.solver.widgets.ConstraintWidget) = (android.support.constraint.solver.widgets.ConstraintWidget) (r8 I:?[OBJECT, ARRAY]) \l0x004c: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004d: IPUT  \l  (r9 I:android.support.constraint.solver.widgets.ConstraintWidgetGroup)\l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mBelongingGroup android.support.constraint.solver.widgets.ConstraintWidgetGroup \l0x004f: IPUT  \l  (r1 I:boolean)\l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mGroupsToSolver boolean \l0x0051: INVOKE  \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.resetResolutionNodes():void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0055|0x0055: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x0059|0x0059: INVOKE  (r7 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_23 [shape=record,label="{23\:\ 0x005d|0x005d: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0075 \l}"];
Node_24 [shape=record,label="{24\:\ 0x005f|0x005f: INVOKE  (r7 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0063: CHECK_CAST  (r7 I:android.support.constraint.solver.widgets.ConstraintWidget) = (android.support.constraint.solver.widgets.ConstraintWidget) (r7 I:?[OBJECT, ARRAY]) \l0x0065: IGET  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetGroup) = \l  (r7 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mBelongingGroup android.support.constraint.solver.widgets.ConstraintWidgetGroup \l}"];
Node_25 [shape=record,label="{25\:\ 0x0067|0x0067: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0059 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0069|0x0069: INVOKE  (r7 I:boolean) = \l  (r7 I:android.support.constraint.solver.widgets.ConstraintWidget)\l  (r3 I:java.util.List)\l  (r6 I:boolean)\l android.support.constraint.solver.widgets.Analyzer.determineGroups(android.support.constraint.solver.widgets.ConstraintWidget, java.util.List, boolean):boolean type: STATIC \l}"];
Node_27 [shape=record,label="{27\:\ 0x006d|0x006d: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0059 \l}"];
Node_28 [shape=record,label="{28\:\ 0x006f|0x006f: INVOKE  \l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.Analyzer.singleGroup(android.support.constraint.solver.widgets.ConstraintWidgetContainer):void type: STATIC \l0x0072: IPUT  \l  (r1 I:boolean)\l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mSkipSolver boolean \l}"];
Node_29 [shape=record,label="{29\:\ 0x0074|0x0074: RETURN   \l}"];
Node_30 [shape=record,label="{30\:\ 0x0075|0x0075: INVOKE  (r2 I:java.util.Iterator) = (r3 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l0x0079: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007a: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_31 [shape=record,label="{31\:\ 0x007b|0x007b: INVOKE  (r8 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_32 [shape=record,label="{32\:\ 0x007f|0x007f: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0098 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0081|0x0081: INVOKE  (r8 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0085: CHECK_CAST  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetGroup) = (android.support.constraint.solver.widgets.ConstraintWidgetGroup) (r8 I:?[OBJECT, ARRAY]) \l0x0087: INVOKE  (r9 I:int) = \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetGroup)\l  (r1 I:int)\l android.support.constraint.solver.widgets.Analyzer.getMaxDimension(android.support.constraint.solver.widgets.ConstraintWidgetGroup, int):int type: STATIC \l0x008b: INVOKE  (r6 I:int) = (r6 I:int), (r9 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x008f: INVOKE  (r8 I:int) = \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetGroup)\l  (r0 I:int)\l android.support.constraint.solver.widgets.Analyzer.getMaxDimension(android.support.constraint.solver.widgets.ConstraintWidgetGroup, int):int type: STATIC \l0x0093: INVOKE  (r7 I:int) = (r7 I:int), (r8 I:int) java.lang.Math.max(int, int):int type: STATIC \l}"];
Node_34 [shape=record,label="{34\:\ 0x0098|0x0098: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x00a8 \l}"];
Node_35 [shape=record,label="{35\:\ 0x009a|0x009a: SGET  (r2 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) =  android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.FIXED android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l0x009c: INVOKE  \l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l  (r2 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour):void type: VIRTUAL \l0x009f: INVOKE  \l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l  (r6 I:int)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.setWidth(int):void type: VIRTUAL \l0x00a2: IPUT  \l  (r0 I:boolean)\l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mGroupsWrapOptimized boolean \l0x00a4: IPUT  \l  (r0 I:boolean)\l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mHorizontalWrapOptimized boolean \l0x00a6: IPUT  \l  (r6 I:int)\l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mWrapFixedWidth int \l}"];
Node_36 [shape=record,label="{36\:\ 0x00a8|0x00a8: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x00b8 \l}"];
Node_37 [shape=record,label="{37\:\ 0x00aa|0x00aa: SGET  (r2 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) =  android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.FIXED android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l0x00ac: INVOKE  \l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l  (r2 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour):void type: VIRTUAL \l0x00af: INVOKE  \l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l  (r7 I:int)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.setHeight(int):void type: VIRTUAL \l0x00b2: IPUT  \l  (r0 I:boolean)\l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mGroupsWrapOptimized boolean \l0x00b4: IPUT  \l  (r0 I:boolean)\l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mVerticalWrapOptimized boolean \l0x00b6: IPUT  \l  (r7 I:int)\l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mWrapFixedHeight int \l}"];
Node_38 [shape=record,label="{38\:\ 0x00b8|0x00b8: INVOKE  (r2 I:int) = \l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.getWidth():int type: VIRTUAL \l0x00bc: INVOKE  (r3 I:java.util.List), (r1 I:int), (r2 I:int) android.support.constraint.solver.widgets.Analyzer.setPosition(java.util.List, int, int):void type: STATIC \l0x00bf: INVOKE  (r10 I:int) = \l  (r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.getHeight():int type: VIRTUAL \l0x00c3: INVOKE  (r3 I:java.util.List), (r0 I:int), (r10 I:int) android.support.constraint.solver.widgets.Analyzer.setPosition(java.util.List, int, int):void type: STATIC \l}"];
Node_39 [shape=record,label="{39\:\ 0x00c6|0x00c6: RETURN   \l}"];
MethodNode[shape=record,label="{public static void android.support.constraint.solver.widgets.Analyzer.determineGroups((r10 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_15;
Node_13 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_18;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_30;
Node_24 -> Node_25;
Node_25 -> Node_22;
Node_25 -> Node_26[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_22;
Node_27 -> Node_28[style=dashed];
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_31;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_39;
}

