digraph "CFG forandroid.support.constraint.solver.widgets.ConstraintWidget.setFrame(III)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: INVOKE  \l  (r1 I:android.support.constraint.solver.widgets.ConstraintWidget)\l  (r2 I:int)\l  (r3 I:int)\l android.support.constraint.solver.widgets.ConstraintWidget.setHorizontalDimension(int, int):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000c \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: INVOKE  \l  (r1 I:android.support.constraint.solver.widgets.ConstraintWidget)\l  (r2 I:int)\l  (r3 I:int)\l android.support.constraint.solver.widgets.ConstraintWidget.setVerticalDimension(int, int):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IPUT  \l  (r0 I:boolean)\l  (r1 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mOptimizerMeasured boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.constraint.solver.widgets.ConstraintWidget.setFrame((r1 'this' I:android.support.constraint.solver.widgets.ConstraintWidget A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

