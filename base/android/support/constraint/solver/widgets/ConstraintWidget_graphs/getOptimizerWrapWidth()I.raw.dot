digraph "CFG forandroid.support.constraint.solver.widgets.ConstraintWidget.getOptimizerWrapWidth()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mWidth int \l0x0002: IGET  (r1 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour[]) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mListDimensionBehaviors android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour[] \l0x0004: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0007: SGET  (r3 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) =  android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IGET  (r1 I:int) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mMatchConstraintDefaultWidth int \l0x000d: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IGET  (r1 I:int) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mMatchConstraintMinWidth int \l0x0012: INVOKE  (r0 I:int) = (r1 I:int), (r0 I:int) java.lang.Math.max(int, int):int type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IGET  (r0 I:int) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mMatchConstraintMinWidth int \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:8:0x0020 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: IGET  (r0 I:int) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mMatchConstraintMinWidth int \l0x001d: IPUT  \l  (r0 I:int)\l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mWidth int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: IGET  (r1 I:int) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mMatchConstraintMaxWidth int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:14:0x002b \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: IGET  (r1 I:int) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mMatchConstraintMaxWidth int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|0x0027: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:14:0x002b \l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|0x0029: IGET  (r0 I:int) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.mMatchConstraintMaxWidth int \l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|0x002b: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int android.support.constraint.solver.widgets.ConstraintWidget.getOptimizerWrapWidth((r4 'this' I:android.support.constraint.solver.widgets.ConstraintWidget A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
}

