digraph "CFG forandroid.support.constraint.solver.widgets.Guideline.getHead()Landroid\/support\/constraint\/solver\/widgets\/Rectangle;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.constraint.solver.widgets.Rectangle) = (r5 I:android.support.constraint.solver.widgets.Guideline) android.support.constraint.solver.widgets.Guideline.mHead android.support.constraint.solver.widgets.Rectangle \l0x0002: INVOKE  (r1 I:int) = (r5 I:android.support.constraint.solver.widgets.Guideline) android.support.constraint.solver.widgets.Guideline.getDrawX():int type: VIRTUAL \l0x0006: IGET  (r2 I:int) = (r5 I:android.support.constraint.solver.widgets.Guideline) android.support.constraint.solver.widgets.Guideline.mHeadSize int \l0x0008: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x0009: INVOKE  (r2 I:int) = (r5 I:android.support.constraint.solver.widgets.Guideline) android.support.constraint.solver.widgets.Guideline.getDrawY():int type: VIRTUAL \l0x000d: IGET  (r3 I:int) = (r5 I:android.support.constraint.solver.widgets.Guideline) android.support.constraint.solver.widgets.Guideline.mHeadSize int \l0x000f: ARITH  (r3 I:int) = (r3 I:int) * (2 int) \l0x0011: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x0012: IGET  (r3 I:int) = (r5 I:android.support.constraint.solver.widgets.Guideline) android.support.constraint.solver.widgets.Guideline.mHeadSize int \l0x0014: ARITH  (r3 I:int) = (r3 I:int) * (2 int) \l0x0016: IGET  (r4 I:int) = (r5 I:android.support.constraint.solver.widgets.Guideline) android.support.constraint.solver.widgets.Guideline.mHeadSize int \l0x0018: ARITH  (r4 I:int) = (r4 I:int) * (2 int) \l0x001a: INVOKE  \l  (r0 I:android.support.constraint.solver.widgets.Rectangle)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l android.support.constraint.solver.widgets.Rectangle.setBounds(int, int, int, int):void type: VIRTUAL \l0x001d: INVOKE  (r0 I:int) = (r5 I:android.support.constraint.solver.widgets.Guideline) android.support.constraint.solver.widgets.Guideline.getOrientation():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0040 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0023|0x0023: IGET  (r0 I:android.support.constraint.solver.widgets.Rectangle) = (r5 I:android.support.constraint.solver.widgets.Guideline) android.support.constraint.solver.widgets.Guideline.mHead android.support.constraint.solver.widgets.Rectangle \l0x0025: INVOKE  (r1 I:int) = (r5 I:android.support.constraint.solver.widgets.Guideline) android.support.constraint.solver.widgets.Guideline.getDrawX():int type: VIRTUAL \l0x0029: IGET  (r2 I:int) = (r5 I:android.support.constraint.solver.widgets.Guideline) android.support.constraint.solver.widgets.Guideline.mHeadSize int \l0x002b: ARITH  (r2 I:int) = (r2 I:int) * (2 int) \l0x002d: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x002e: INVOKE  (r2 I:int) = (r5 I:android.support.constraint.solver.widgets.Guideline) android.support.constraint.solver.widgets.Guideline.getDrawY():int type: VIRTUAL \l0x0032: IGET  (r3 I:int) = (r5 I:android.support.constraint.solver.widgets.Guideline) android.support.constraint.solver.widgets.Guideline.mHeadSize int \l0x0034: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x0035: IGET  (r3 I:int) = (r5 I:android.support.constraint.solver.widgets.Guideline) android.support.constraint.solver.widgets.Guideline.mHeadSize int \l0x0037: ARITH  (r3 I:int) = (r3 I:int) * (2 int) \l0x0039: IGET  (r4 I:int) = (r5 I:android.support.constraint.solver.widgets.Guideline) android.support.constraint.solver.widgets.Guideline.mHeadSize int \l0x003b: ARITH  (r4 I:int) = (r4 I:int) * (2 int) \l0x003d: INVOKE  \l  (r0 I:android.support.constraint.solver.widgets.Rectangle)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l android.support.constraint.solver.widgets.Rectangle.setBounds(int, int, int, int):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0040|0x0040: IGET  (r0 I:android.support.constraint.solver.widgets.Rectangle) = (r5 I:android.support.constraint.solver.widgets.Guideline) android.support.constraint.solver.widgets.Guideline.mHead android.support.constraint.solver.widgets.Rectangle \l}"];
Node_4 [shape=record,label="{4\:\ 0x0042|0x0042: RETURN  (r0 I:android.support.constraint.solver.widgets.Rectangle) \l}"];
MethodNode[shape=record,label="{public android.support.constraint.solver.widgets.Rectangle android.support.constraint.solver.widgets.Guideline.getHead((r5 'this' I:android.support.constraint.solver.widgets.Guideline A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

