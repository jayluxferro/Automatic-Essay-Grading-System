digraph "CFG forandroid.support.constraint.solver.widgets.ConstraintWidgetContainer.optimizeForDimensions(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour[]) = \l  (r2 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mListDimensionBehaviors android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour[] \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0005: SGET  (r1 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) =  android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r0 I:android.support.constraint.solver.widgets.ResolutionDimension) = \l  (r2 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mResolutionWidth android.support.constraint.solver.widgets.ResolutionDimension \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r0 I:android.support.constraint.solver.widgets.ResolutionDimension) = \l  (r2 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mResolutionWidth android.support.constraint.solver.widgets.ResolutionDimension \l0x000f: INVOKE  \l  (r0 I:android.support.constraint.solver.widgets.ResolutionDimension)\l  (r3 I:int)\l android.support.constraint.solver.widgets.ResolutionDimension.resolve(int):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IGET  (r3 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour[]) = \l  (r2 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mListDimensionBehaviors android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour[] \l0x0014: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0015: AGET  (r3 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0017: SGET  (r0 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) =  android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0024 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: IGET  (r3 I:android.support.constraint.solver.widgets.ResolutionDimension) = \l  (r2 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mResolutionHeight android.support.constraint.solver.widgets.ResolutionDimension \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0024 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: IGET  (r3 I:android.support.constraint.solver.widgets.ResolutionDimension) = \l  (r2 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mResolutionHeight android.support.constraint.solver.widgets.ResolutionDimension \l0x0021: INVOKE  \l  (r3 I:android.support.constraint.solver.widgets.ResolutionDimension)\l  (r4 I:int)\l android.support.constraint.solver.widgets.ResolutionDimension.resolve(int):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.constraint.solver.widgets.ConstraintWidgetContainer.optimizeForDimensions((r2 'this' I:android.support.constraint.solver.widgets.ConstraintWidgetContainer A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
}

