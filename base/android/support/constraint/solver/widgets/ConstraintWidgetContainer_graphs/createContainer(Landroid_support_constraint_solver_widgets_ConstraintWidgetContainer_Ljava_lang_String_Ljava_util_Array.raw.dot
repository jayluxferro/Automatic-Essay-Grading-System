digraph "CFG forandroid.support.constraint.solver.widgets.ConstraintWidgetContainer.createContainer(Landroid\/support\/constraint\/solver\/widgets\/ConstraintWidgetContainer;Ljava\/lang\/String;Ljava\/util\/ArrayList;I)Landroid\/support\/constraint\/solver\/widgets\/ConstraintWidgetContainer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.support.constraint.solver.widgets.Rectangle) = \l  (r10 I:java.util.ArrayList A[D('widgets' java.util.ArrayList\<android.support.constraint.solver.widgets.ConstraintWidget\>)])\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.getBounds(java.util.ArrayList):android.support.constraint.solver.widgets.Rectangle type: STATIC \l0x0004: IGET  (r6 I:int) = \l  (r0 I:android.support.constraint.solver.widgets.Rectangle A[D('bounds' android.support.constraint.solver.widgets.Rectangle)])\l android.support.constraint.solver.widgets.Rectangle.width int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r6 I:int) = \l  (r0 I:android.support.constraint.solver.widgets.Rectangle A[D('bounds' android.support.constraint.solver.widgets.Rectangle)])\l android.support.constraint.solver.widgets.Rectangle.height int \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('container' android.support.constraint.solver.widgets.ConstraintWidgetContainer)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: RETURN  \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer A[D('container' android.support.constraint.solver.widgets.ConstraintWidgetContainer)])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: IF  (r11 I:?[int, byte, short, char] A[D('padding' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:11:0x001e \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: IGET  (r6 I:int) = \l  (r0 I:android.support.constraint.solver.widgets.Rectangle A[D('bounds' android.support.constraint.solver.widgets.Rectangle)])\l android.support.constraint.solver.widgets.Rectangle.x int \l0x0012: IGET  (r7 I:int) = \l  (r0 I:android.support.constraint.solver.widgets.Rectangle A[D('bounds' android.support.constraint.solver.widgets.Rectangle)])\l android.support.constraint.solver.widgets.Rectangle.y int \l0x0014: INVOKE  (r2 I:int) = (r6 I:int), (r7 I:int) java.lang.Math.min(int, int):int type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IF  (r11 I:?[int, byte, short, char] A[D('padding' int)]) \<= (r2 I:?[int, byte, short, char] A[D('maxPadding' int)])  \-\> B:10:0x001b \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('padding' int)]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxPadding' int)])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: INVOKE  \l  (r0 I:android.support.constraint.solver.widgets.Rectangle A[D('bounds' android.support.constraint.solver.widgets.Rectangle)])\l  (r11 I:int A[D('padding' int)])\l  (r11 I:int A[D('padding' int)])\l android.support.constraint.solver.widgets.Rectangle.grow(int, int):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: IGET  (r6 I:int) = \l  (r0 I:android.support.constraint.solver.widgets.Rectangle A[D('bounds' android.support.constraint.solver.widgets.Rectangle)])\l android.support.constraint.solver.widgets.Rectangle.x int \l0x0020: IGET  (r7 I:int) = \l  (r0 I:android.support.constraint.solver.widgets.Rectangle A[D('bounds' android.support.constraint.solver.widgets.Rectangle)])\l android.support.constraint.solver.widgets.Rectangle.y int \l0x0022: INVOKE  \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer A[D('container' android.support.constraint.solver.widgets.ConstraintWidgetContainer)])\l  (r6 I:int)\l  (r7 I:int)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.setOrigin(int, int):void type: VIRTUAL \l0x0025: IGET  (r6 I:int) = \l  (r0 I:android.support.constraint.solver.widgets.Rectangle A[D('bounds' android.support.constraint.solver.widgets.Rectangle)])\l android.support.constraint.solver.widgets.Rectangle.width int \l0x0027: IGET  (r7 I:int) = \l  (r0 I:android.support.constraint.solver.widgets.Rectangle A[D('bounds' android.support.constraint.solver.widgets.Rectangle)])\l android.support.constraint.solver.widgets.Rectangle.height int \l0x0029: INVOKE  \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer A[D('container' android.support.constraint.solver.widgets.ConstraintWidgetContainer)])\l  (r6 I:int)\l  (r7 I:int)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.setDimension(int, int):void type: VIRTUAL \l0x002c: INVOKE  \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer A[D('container' android.support.constraint.solver.widgets.ConstraintWidgetContainer)])\l  (r9 I:java.lang.String A[D('name' java.lang.String)])\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.setDebugName(java.lang.String):void type: VIRTUAL \l0x002f: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0030: INVOKE  (r6 I:java.lang.Object) = \l  (r10 I:java.util.ArrayList A[D('widgets' java.util.ArrayList\<android.support.constraint.solver.widgets.ConstraintWidget\>)])\l  (r6 I:int)\l java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0034: CHECK_CAST  (r6 I:android.support.constraint.solver.widgets.ConstraintWidget) = (android.support.constraint.solver.widgets.ConstraintWidget) (r6 I:?[OBJECT, ARRAY]) \l0x0036: INVOKE  (r3 I:android.support.constraint.solver.widgets.ConstraintWidget) = \l  (r6 I:android.support.constraint.solver.widgets.ConstraintWidget)\l android.support.constraint.solver.widgets.ConstraintWidget.getParent():android.support.constraint.solver.widgets.ConstraintWidget type: VIRTUAL \l0x003a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003b: INVOKE  (r5 I:int) = \l  (r10 I:java.util.ArrayList A[D('widgets' java.util.ArrayList\<android.support.constraint.solver.widgets.ConstraintWidget\>)])\l java.util.ArrayList.size():int type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|0x003f: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r5 I:?[int, byte, short, char] A[D('widgetsSize' int)])  \-\> B:5:0x000d \l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|0x0041: INVOKE  (r4 I:java.lang.Object) = \l  (r10 I:java.util.ArrayList A[D('widgets' java.util.ArrayList\<android.support.constraint.solver.widgets.ConstraintWidget\>)])\l  (r1 I:int A[D('i' int)])\l java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0045: CHECK_CAST  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget) = (android.support.constraint.solver.widgets.ConstraintWidget) (r4 I:?[OBJECT, ARRAY]) \l0x0047: INVOKE  (r6 I:android.support.constraint.solver.widgets.ConstraintWidget) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l android.support.constraint.solver.widgets.ConstraintWidget.getParent():android.support.constraint.solver.widgets.ConstraintWidget type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x004b|0x004b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parent' android.support.constraint.solver.widgets.ConstraintWidget)])  \-\> B:16:0x0050 \l}"];
Node_15 [shape=record,label="{15\:\ 0x004d|0x004d: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0050|0x0050: INVOKE  \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer A[D('container' android.support.constraint.solver.widgets.ConstraintWidgetContainer)])\l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.add(android.support.constraint.solver.widgets.ConstraintWidget):void type: VIRTUAL \l0x0053: INVOKE  (r6 I:int) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l android.support.constraint.solver.widgets.ConstraintWidget.getX():int type: VIRTUAL \l0x0057: IGET  (r7 I:int) = \l  (r0 I:android.support.constraint.solver.widgets.Rectangle A[D('bounds' android.support.constraint.solver.widgets.Rectangle)])\l android.support.constraint.solver.widgets.Rectangle.x int \l0x0059: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x005a: INVOKE  \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l  (r6 I:int)\l android.support.constraint.solver.widgets.ConstraintWidget.setX(int):void type: VIRTUAL \l0x005d: INVOKE  (r6 I:int) = \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l android.support.constraint.solver.widgets.ConstraintWidget.getY():int type: VIRTUAL \l0x0061: IGET  (r7 I:int) = \l  (r0 I:android.support.constraint.solver.widgets.Rectangle A[D('bounds' android.support.constraint.solver.widgets.Rectangle)])\l android.support.constraint.solver.widgets.Rectangle.y int \l0x0063: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x0064: INVOKE  \l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l  (r6 I:int)\l android.support.constraint.solver.widgets.ConstraintWidget.setY(int):void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{public static android.support.constraint.solver.widgets.ConstraintWidgetContainer android.support.constraint.solver.widgets.ConstraintWidgetContainer.createContainer((r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer A[D('container' android.support.constraint.solver.widgets.ConstraintWidgetContainer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.util.ArrayList\<android.support.constraint.solver.widgets.ConstraintWidget\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('padding' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x000d: r8 'container' android.support.constraint.solver.widgets.ConstraintWidgetContainer\l  0x0018\-0x001e: r2 'maxPadding' int\l  0x0004\-0x0067: r0 'bounds' android.support.constraint.solver.widgets.Rectangle\l  0x003b\-0x0067: r1 'i' int\l  0x003a\-0x0067: r3 'parent' android.support.constraint.solver.widgets.ConstraintWidget\l  0x0047\-0x0067: r4 'widget' android.support.constraint.solver.widgets.ConstraintWidget\l  0x003f\-0x0067: r5 'widgetsSize' int\l  0x000e\-0x0067: r8 'container' android.support.constraint.solver.widgets.ConstraintWidgetContainer\l  ?\-0x0067: r9 'name' java.lang.String\l  0x0000\-0x0067: r10 'widgets' java.util.ArrayList\<android.support.constraint.solver.widgets.ConstraintWidget\>\l  ?\-0x0067: r11 'padding' int\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/support\/constraint\/solver\/widgets\/ConstraintWidgetContainer;, Ljava\/lang\/String;, Ljava\/util\/ArrayList, \<, Landroid\/support\/constraint\/solver\/widgets\/ConstraintWidget;, \>;I), Landroid\/support\/constraint\/solver\/widgets\/ConstraintWidgetContainer;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_5;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_12;
Node_16 -> Node_15;
}

