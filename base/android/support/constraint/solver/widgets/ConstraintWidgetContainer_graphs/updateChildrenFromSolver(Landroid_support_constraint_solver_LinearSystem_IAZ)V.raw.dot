digraph "CFG forandroid.support.constraint.solver.widgets.ConstraintWidgetContainer.updateChildrenFromSolver(Landroid\/support\/constraint\/solver\/LinearSystem;I[Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0002: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: APUT  \l  (r10 I:boolean[] A[D('flags' boolean[]), IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l  (r3 I:boolean A[IMMUTABLE_TYPE])\l \l0x0005: INVOKE  \l  (r7 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l  (r8 I:android.support.constraint.solver.LinearSystem A[D('system' android.support.constraint.solver.LinearSystem)])\l  (r9 I:int A[D('group' int)])\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.updateFromSolver(android.support.constraint.solver.LinearSystem, int):void type: VIRTUAL \l0x0008: IGET  (r3 I:java.util.ArrayList) = \l  (r7 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mChildren java.util.ArrayList \l0x000a: INVOKE  (r0 I:int) = (r3 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x000e: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r0 I:?[int, byte, short, char] A[D('count' int)])  \-\> B:13:0x0043 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: IGET  (r3 I:java.util.ArrayList) = \l  (r7 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mChildren java.util.ArrayList \l0x0013: INVOKE  (r2 I:java.lang.Object) = (r3 I:java.util.ArrayList), (r1 I:int A[D('i' int)]) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0017: CHECK_CAST  (r2 I:android.support.constraint.solver.widgets.ConstraintWidget) = (android.support.constraint.solver.widgets.ConstraintWidget) (r2 I:?[OBJECT, ARRAY]) \l0x0019: INVOKE  \l  (r2 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l  (r8 I:android.support.constraint.solver.LinearSystem A[D('system' android.support.constraint.solver.LinearSystem)])\l  (r9 I:int A[D('group' int)])\l android.support.constraint.solver.widgets.ConstraintWidget.updateFromSolver(android.support.constraint.solver.LinearSystem, int):void type: VIRTUAL \l0x001c: IGET  (r3 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) = \l  (r2 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l android.support.constraint.solver.widgets.ConstraintWidget.mHorizontalDimensionBehaviour android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l0x001e: SGET  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) =  android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|0x0020: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002e \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: INVOKE  (r3 I:int) = \l  (r2 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l android.support.constraint.solver.widgets.ConstraintWidget.getWidth():int type: VIRTUAL \l0x0026: INVOKE  (r4 I:int) = \l  (r2 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l android.support.constraint.solver.widgets.ConstraintWidget.getWrapWidth():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|0x002a: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:7:0x002e \l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|0x002c: APUT  \l  (r10 I:boolean[] A[D('flags' boolean[]), IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l  (r6 I:boolean A[IMMUTABLE_TYPE])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|0x002e: IGET  (r3 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) = \l  (r2 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l android.support.constraint.solver.widgets.ConstraintWidget.mVerticalDimensionBehaviour android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l0x0030: SGET  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) =  android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|0x0032: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0040 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: INVOKE  (r3 I:int) = \l  (r2 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l android.support.constraint.solver.widgets.ConstraintWidget.getHeight():int type: VIRTUAL \l0x0038: INVOKE  (r4 I:int) = \l  (r2 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l android.support.constraint.solver.widgets.ConstraintWidget.getWrapHeight():int type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x003c|0x003c: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:12:0x0040 \l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|0x003e: APUT  \l  (r10 I:boolean[] A[D('flags' boolean[]), IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l  (r6 I:boolean A[IMMUTABLE_TYPE])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|0x0040: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|0x0043: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.constraint.solver.widgets.ConstraintWidgetContainer.updateChildrenFromSolver((r7 'this' I:android.support.constraint.solver.widgets.ConstraintWidgetContainer A[IMMUTABLE_TYPE, THIS]), (r8 I:android.support.constraint.solver.LinearSystem A[D('system' android.support.constraint.solver.LinearSystem), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('group' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean[] A[D('flags' boolean[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0019\-0x0043: r2 'widget' android.support.constraint.solver.widgets.ConstraintWidget\l  0x000e\-0x0043: r0 'count' int\l  0x000f\-0x0043: r1 'i' int\l  ?\-0x0043: r8 'system' android.support.constraint.solver.LinearSystem\l  ?\-0x0043: r9 'group' int\l  ?\-0x0043: r10 'flags' boolean[]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_1;
}

