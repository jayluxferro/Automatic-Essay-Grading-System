digraph "CFG forandroid.support.constraint.solver.widgets.ConstraintWidgetContainer.addChildrenToSolver(Landroid\/support\/constraint\/solver\/LinearSystem;I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l  (r9 I:android.support.constraint.solver.LinearSystem A[D('system' android.support.constraint.solver.LinearSystem)])\l  (r10 I:int A[D('group' int)])\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.addToSolver(android.support.constraint.solver.LinearSystem, int):void type: VIRTUAL \l0x0003: IGET  (r6 I:java.util.ArrayList) = \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mChildren java.util.ArrayList \l0x0005: INVOKE  (r0 I:int) = (r6 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0009: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: IGET  (r6 I:int) = \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mOptimizationLevel int \l0x000c: CONST  (r7 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: IGET  (r6 I:int) = \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mOptimizationLevel int \l0x0011: CONST  (r7 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001c \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: INVOKE  (r6 I:boolean) = \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l  (r9 I:android.support.constraint.solver.LinearSystem A[D('system' android.support.constraint.solver.LinearSystem)])\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.optimize(android.support.constraint.solver.LinearSystem):boolean type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001d \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: RETURN  (r6 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: CONST  (r3 I:?[boolean, int, float, short, byte, char] A[D('setMatchParent' boolean)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: IF  (r2 I:?[int, byte, short, char] A[D('i' int)]) \>= (r0 I:?[int, byte, short, char] A[D('count' int)])  \-\> B:29:0x005f \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: IGET  (r6 I:java.util.ArrayList) = \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mChildren java.util.ArrayList \l0x0022: INVOKE  (r5 I:java.lang.Object) = (r6 I:java.util.ArrayList), (r2 I:int A[D('i' int)]) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0026: CHECK_CAST  (r5 I:android.support.constraint.solver.widgets.ConstraintWidget) = (android.support.constraint.solver.widgets.ConstraintWidget) (r5 I:?[OBJECT, ARRAY]) \l0x0028: INSTANCE_OF  (r6 I:boolean) = \l  (r5 I:?[OBJECT, ARRAY] A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l android.support.constraint.solver.widgets.ConstraintWidgetContainer \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0056 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|0x002c: IGET  (r1 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) = \l  (r5 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l android.support.constraint.solver.widgets.ConstraintWidget.mHorizontalDimensionBehaviour android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l0x002e: IGET  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) = \l  (r5 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l android.support.constraint.solver.widgets.ConstraintWidget.mVerticalDimensionBehaviour android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l0x0030: SGET  (r6 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) =  android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('horizontalBehaviour' android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0039 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|0x0034: SGET  (r6 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) =  android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.FIXED android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l0x0036: INVOKE  \l  (r5 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l  (r6 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)\l android.support.constraint.solver.widgets.ConstraintWidget.setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour):void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|0x0039: SGET  (r6 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) =  android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_17 [shape=record,label="{17\:\ 0x003b|0x003b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('verticalBehaviour' android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0042 \l}"];
Node_18 [shape=record,label="{18\:\ 0x003d|0x003d: SGET  (r6 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) =  android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.FIXED android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l0x003f: INVOKE  \l  (r5 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l  (r6 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)\l android.support.constraint.solver.widgets.ConstraintWidget.setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour):void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0042|0x0042: INVOKE  \l  (r5 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l  (r9 I:android.support.constraint.solver.LinearSystem A[D('system' android.support.constraint.solver.LinearSystem)])\l  (r10 I:int A[D('group' int)])\l android.support.constraint.solver.widgets.ConstraintWidget.addToSolver(android.support.constraint.solver.LinearSystem, int):void type: VIRTUAL \l0x0045: SGET  (r6 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) =  android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_20 [shape=record,label="{20\:\ 0x0047|0x0047: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('horizontalBehaviour' android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x004c \l}"];
Node_21 [shape=record,label="{21\:\ 0x0049|0x0049: INVOKE  \l  (r5 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l  (r1 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour A[D('horizontalBehaviour' android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)])\l android.support.constraint.solver.widgets.ConstraintWidget.setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour):void type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x004c|0x004c: SGET  (r6 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) =  android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_23 [shape=record,label="{23\:\ 0x004e|0x004e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('verticalBehaviour' android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0053 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0050|0x0050: INVOKE  \l  (r5 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l  (r4 I:android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour A[D('verticalBehaviour' android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)])\l android.support.constraint.solver.widgets.ConstraintWidget.setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour):void type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x0053|0x0053: ARITH  (r2 I:int A[D('i' int)]) = (r2 I:int A[D('i' int)]) + (1 int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0056|0x0056: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('setMatchParent' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x005b \l}"];
Node_27 [shape=record,label="{27\:\ 0x0058|0x0058: INVOKE  \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l  (r9 I:android.support.constraint.solver.LinearSystem A[D('system' android.support.constraint.solver.LinearSystem)])\l  (r5 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l android.support.constraint.solver.widgets.Optimizer.checkMatchParent(android.support.constraint.solver.widgets.ConstraintWidgetContainer, android.support.constraint.solver.LinearSystem, android.support.constraint.solver.widgets.ConstraintWidget):void type: STATIC \l}"];
Node_28 [shape=record,label="{28\:\ 0x005b|0x005b: INVOKE  \l  (r5 I:android.support.constraint.solver.widgets.ConstraintWidget A[D('widget' android.support.constraint.solver.widgets.ConstraintWidget)])\l  (r9 I:android.support.constraint.solver.LinearSystem A[D('system' android.support.constraint.solver.LinearSystem)])\l  (r10 I:int A[D('group' int)])\l android.support.constraint.solver.widgets.ConstraintWidget.addToSolver(android.support.constraint.solver.LinearSystem, int):void type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x005f|0x005f: IGET  (r6 I:int) = \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mHorizontalChainsSize int \l}"];
Node_30 [shape=record,label="{30\:\ 0x0061|0x0061: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:32:0x0066 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0063|0x0063: INVOKE  \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l  (r9 I:android.support.constraint.solver.LinearSystem A[D('system' android.support.constraint.solver.LinearSystem)])\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.applyHorizontalChain(android.support.constraint.solver.LinearSystem):void type: DIRECT \l}"];
Node_32 [shape=record,label="{32\:\ 0x0066|0x0066: IGET  (r6 I:int) = \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.mVerticalChainsSize int \l}"];
Node_33 [shape=record,label="{33\:\ 0x0068|0x0068: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:35:0x006d \l}"];
Node_34 [shape=record,label="{34\:\ 0x006a|0x006a: INVOKE  \l  (r8 I:android.support.constraint.solver.widgets.ConstraintWidgetContainer)\l  (r9 I:android.support.constraint.solver.LinearSystem A[D('system' android.support.constraint.solver.LinearSystem)])\l android.support.constraint.solver.widgets.ConstraintWidgetContainer.applyVerticalChain(android.support.constraint.solver.LinearSystem):void type: DIRECT \l}"];
Node_35 [shape=record,label="{35\:\ 0x006d|0x006d: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{public boolean android.support.constraint.solver.widgets.ConstraintWidgetContainer.addChildrenToSolver((r8 'this' I:android.support.constraint.solver.widgets.ConstraintWidgetContainer A[IMMUTABLE_TYPE, THIS]), (r9 I:android.support.constraint.solver.LinearSystem A[D('system' android.support.constraint.solver.LinearSystem), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('group' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x002e\-0x0053: r1 'horizontalBehaviour' android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour\l  0x0030\-0x0053: r4 'verticalBehaviour' android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour\l  0x0028\-0x005f: r5 'widget' android.support.constraint.solver.widgets.ConstraintWidget\l  0x0009\-0x006e: r0 'count' int\l  0x001e\-0x006e: r2 'i' int\l  0x000a\-0x006e: r3 'setMatchParent' boolean\l  ?\-0x006e: r9 'system' android.support.constraint.solver.LinearSystem\l  ?\-0x006e: r10 'group' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_29;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_26;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_10;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_25;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_7;
}

