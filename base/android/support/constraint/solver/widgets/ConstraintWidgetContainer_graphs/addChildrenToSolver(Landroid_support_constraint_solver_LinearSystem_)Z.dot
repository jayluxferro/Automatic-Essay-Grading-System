digraph "CFG forandroid.support.constraint.solver.widgets.ConstraintWidgetContainer.addChildrenToSolver(Landroid\/support\/constraint\/solver\/LinearSystem;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|addToSolver(r8)\lint r0 = r7.mChildren.size()\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:18:0x004c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000b\-\>B:18:0x004c\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|if (r2 \>= r0) goto L_0x004f\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|android.support.constraint.solver.widgets.ConstraintWidget r4 = (android.support.constraint.solver.widgets.ConstraintWidget) r7.mChildren.get(r2)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|if ((r4 instanceof android.support.constraint.solver.widgets.ConstraintWidgetContainer) == false) goto L_0x0046\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|r5 = r4.mListDimensionBehaviors[0]\lr3 = r4.mListDimensionBehaviors[1]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|if (r5 != android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT) goto L_0x002b\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|r4.setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.FIXED)\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b}"];
Node_9 [shape=record,label="{9\:\ 0x002d|if (r3 != android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT) goto L_0x0034\l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|r4.setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.FIXED)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|r4.addToSolver(r8)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|if (r5 != android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT) goto L_0x003e\l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|r4.setHorizontalDimensionBehaviour(r5)\l}"];
Node_14 [shape=record,label="{14\:\ 0x003e}"];
Node_15 [shape=record,label="{15\:\ 0x0040|if (r3 != android.support.constraint.solver.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT) goto L_0x004c\l}"];
Node_16 [shape=record,label="{16\:\ 0x0042|r4.setVerticalDimensionBehaviour(r3)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0046|android.support.constraint.solver.widgets.Optimizer.checkMatchParent(r7, r8, r4)\lr4.addToSolver(r8)\l}"];
Node_18 [shape=record,label="{18\:\ 0x004c|LOOP_END\lLOOP:0: B:1:0x000b\-\>B:18:0x004c\l|int r2 = r2 + 1\l}"];
Node_19 [shape=record,label="{19\:\ 0x004f}"];
Node_20 [shape=record,label="{20\:\ 0x0051|if (r7.mHorizontalChainsSize \<= 0) goto L_0x0056\l}"];
Node_21 [shape=record,label="{21\:\ 0x0053|android.support.constraint.solver.widgets.Chain.applyChainConstraints(r7, r8, 0)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0056}"];
Node_23 [shape=record,label="{23\:\ 0x0058|if (r7.mVerticalChainsSize \<= 0) goto L_0x005d\l}"];
Node_24 [shape=record,label="{24\:\ 0x005a|android.support.constraint.solver.widgets.Chain.applyChainConstraints(r7, r8, 1)\l}"];
Node_25 [shape=record,label="{25\:\ 0x005d|RETURN\l|return true\l}"];
Node_26 [shape=record,label="{26\:\ 0x004f|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x004c|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x004c|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x004c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean android.support.constraint.solver.widgets.ConstraintWidgetContainer.addChildrenToSolver((r7v0 'this' android.support.constraint.solver.widgets.ConstraintWidgetContainer A[IMMUTABLE_TYPE, THIS]), (r8v0 android.support.constraint.solver.LinearSystem A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_26;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_17;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_28;
Node_16 -> Node_29;
Node_17 -> Node_27;
Node_18 -> Node_1;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_26 -> Node_19;
Node_27 -> Node_18;
Node_28 -> Node_18;
Node_29 -> Node_18;
}

