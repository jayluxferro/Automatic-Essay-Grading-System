digraph "CFG forandroid.support.constraint.solver.SolverVariable.getUniqueName(Landroid\/support\/constraint\/solver\/SolverVariable$Type;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int) =  android.support.constraint.solver.SolverVariable.uniqueId int \l0x0002: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0004: SPUT  (r0 I:int) android.support.constraint.solver.SolverVariable.uniqueId int \l0x0006: SGET  (r0 I:int[]) =  android.support.constraint.solver.SolverVariable.1.$SwitchMap$android$support$constraint$solver$SolverVariable$Type int[] \l0x0008: INVOKE  (r1 I:int) = \l  (r2 I:android.support.constraint.solver.SolverVariable$Type A[D('type' android.support.constraint.solver.SolverVariable$Type)])\l android.support.constraint.solver.SolverVariable.Type.ordinal():int type: VIRTUAL \l0x000c: AGET  (r0 I:?[int, float]) = (r0 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4] t:[0x0027, 0x003d, 0x0053, 0x0069] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0013: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0016: CONST_STR  (r1 I:java.lang.String) =  \"V\" \l0x0018: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001c: SGET  (r1 I:int) =  android.support.constraint.solver.SolverVariable.uniqueId int \l0x001e: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0022: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0026|0x0026: RETURN  (r0 I:java.lang.String) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0027|0x0027: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0029: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002c: CONST_STR  (r1 I:java.lang.String) =  \"U\" \l0x002e: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0032: SGET  (r1 I:int) =  android.support.constraint.solver.SolverVariable.uniqueId int \l0x0034: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0038: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x003d|0x003d: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003f: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0042: CONST_STR  (r1 I:java.lang.String) =  \"C\" \l0x0044: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0048: SGET  (r1 I:int) =  android.support.constraint.solver.SolverVariable.uniqueId int \l0x004a: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x004e: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0053|0x0053: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0055: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0058: CONST_STR  (r1 I:java.lang.String) =  \"S\" \l0x005a: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005e: SGET  (r1 I:int) =  android.support.constraint.solver.SolverVariable.uniqueId int \l0x0060: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0064: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0069|0x0069: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x006b: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x006e: CONST_STR  (r1 I:java.lang.String) =  \"e\" \l0x0070: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0074: SGET  (r1 I:int) =  android.support.constraint.solver.SolverVariable.uniqueId int \l0x0076: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x007a: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
MethodNode[shape=record,label="{private static java.lang.String android.support.constraint.solver.SolverVariable.getUniqueName((r2 I:android.support.constraint.solver.SolverVariable$Type A[D('type' android.support.constraint.solver.SolverVariable$Type), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x008b: r2 'type' android.support.constraint.solver.SolverVariable$Type\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_5;
Node_1 -> Node_6;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_4 -> Node_3;
Node_5 -> Node_3;
Node_6 -> Node_3;
Node_7 -> Node_3;
}

