digraph "CFG forandroid.support.constraint.solver.SolverVariable.addToRow(Landroid\/support\/constraint\/solver\/ArrayRow;)V" {
subgraph cluster_Region_481943128 {
label = "R(4:0|(1:(1:6)(1:5))|(1:9)|10)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = 0\l}"];
subgraph cluster_LoopRegion_2009952712 {
label = "LOOP:0: (1:(1:6)(1:5))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|if (r0 \< r2.mClientEquationsCount) goto L_0x0005\l}"];
subgraph cluster_Region_791897828 {
label = "R(1:(1:6)(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_752676760 {
label = "IF [B:4:0x0009] THEN: R(1:6) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|if (r2.mClientEquations[r0] != r3) goto L_0x000c\l}"];
subgraph cluster_Region_985166021 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000c|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:6:0x000c\l|r0++\l}"];
}
subgraph cluster_Region_852872405 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000b|RETURN\l|return\l}"];
}
}
}
}
subgraph cluster_IfRegion_980183823 {
label = "IF [B:8:0x0014] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0014|if (r2.mClientEquationsCount \>= r2.mClientEquations.length) goto L_0x0016\l}"];
subgraph cluster_Region_2138332894 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0016|r2.mClientEquations = (android.support.constraint.solver.ArrayRow[]) java.util.Arrays.copyOf(r2.mClientEquations, r2.mClientEquations.length * 2)\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x0025|r2.mClientEquations[r2.mClientEquationsCount] = r3\lr2.mClientEquationsCount++\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v7 int) binds: [B:0:0x0000, B:6:0x000c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:6:0x000c\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0005}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000f}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0031}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x000f|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x000b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final void android.support.constraint.solver.SolverVariable.addToRow((r2v0 'this' android.support.constraint.solver.SolverVariable A[IMMUTABLE_TYPE, THIS]), (r3v0 android.support.constraint.solver.ArrayRow A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_12[style=dashed];
Node_4 -> Node_6;
Node_4 -> Node_13[style=dashed];
Node_6 -> Node_1;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_12 -> Node_7;
Node_13 -> Node_5;
}

