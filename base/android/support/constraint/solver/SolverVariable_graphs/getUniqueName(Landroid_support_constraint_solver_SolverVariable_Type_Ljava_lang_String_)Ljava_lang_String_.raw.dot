digraph "CFG forandroid.support.constraint.solver.SolverVariable.getUniqueName(Landroid\/support\/constraint\/solver\/SolverVariable$Type;Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0014 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0004: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0007: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x000a: SGET  (r2 I:int) =  android.support.constraint.solver.SolverVariable.uniqueErrorId int \l0x000c: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x000f: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: RETURN  (r1 I:java.lang.String) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: SGET  (r2 I:int[]) =  android.support.constraint.solver.SolverVariable.1.$SwitchMap$android$support$constraint$solver$SolverVariable$Type int[] \l0x0016: INVOKE  (r0 I:int) = \l  (r1 I:android.support.constraint.solver.SolverVariable$Type)\l android.support.constraint.solver.SolverVariable.Type.ordinal():int type: VIRTUAL \l0x001a: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5] t:[0x0089, 0x0071, 0x0059, 0x0041, 0x0029] \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: NEW_INSTANCE  (r2 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0021: INVOKE  (r1 I:java.lang.String) = \l  (r1 I:android.support.constraint.solver.SolverVariable$Type)\l android.support.constraint.solver.SolverVariable.Type.name():java.lang.String type: VIRTUAL \l0x0025: INVOKE  (r2 I:java.lang.AssertionError), (r1 I:java.lang.Object) java.lang.AssertionError.\<init\>(java.lang.Object):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002b: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002e: CONST_STR  (r2 I:java.lang.String) =  \"V\" \l0x0030: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0033: SGET  (r2 I:int) =  android.support.constraint.solver.SolverVariable.uniqueId int \l0x0035: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x0037: SPUT  (r2 I:int) android.support.constraint.solver.SolverVariable.uniqueId int \l0x0039: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x003c: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0040|0x0040: RETURN  (r1 I:java.lang.String) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|0x0041: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0043: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0046: CONST_STR  (r2 I:java.lang.String) =  \"e\" \l0x0048: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004b: SGET  (r2 I:int) =  android.support.constraint.solver.SolverVariable.uniqueErrorId int \l0x004d: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x004f: SPUT  (r2 I:int) android.support.constraint.solver.SolverVariable.uniqueErrorId int \l0x0051: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0054: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0058|0x0058: RETURN  (r1 I:java.lang.String) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0059|0x0059: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x005b: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x005e: CONST_STR  (r2 I:java.lang.String) =  \"S\" \l0x0060: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0063: SGET  (r2 I:int) =  android.support.constraint.solver.SolverVariable.uniqueSlackId int \l0x0065: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x0067: SPUT  (r2 I:int) android.support.constraint.solver.SolverVariable.uniqueSlackId int \l0x0069: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x006c: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0070|0x0070: RETURN  (r1 I:java.lang.String) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0071|0x0071: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0073: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0076: CONST_STR  (r2 I:java.lang.String) =  \"C\" \l0x0078: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007b: SGET  (r2 I:int) =  android.support.constraint.solver.SolverVariable.uniqueConstantId int \l0x007d: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x007f: SPUT  (r2 I:int) android.support.constraint.solver.SolverVariable.uniqueConstantId int \l0x0081: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0084: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0088|0x0088: RETURN  (r1 I:java.lang.String) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0089|0x0089: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x008b: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x008e: CONST_STR  (r2 I:java.lang.String) =  \"U\" \l0x0090: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0093: SGET  (r2 I:int) =  android.support.constraint.solver.SolverVariable.uniqueUnrestrictedId int \l0x0095: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x0097: SPUT  (r2 I:int) android.support.constraint.solver.SolverVariable.uniqueUnrestrictedId int \l0x0099: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x009c: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x00a0|0x00a0: RETURN  (r1 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{private static java.lang.String android.support.constraint.solver.SolverVariable.getUniqueName((r1 I:android.support.constraint.solver.SolverVariable$Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_4 -> Node_9;
Node_4 -> Node_11;
Node_4 -> Node_13;
Node_4 -> Node_15;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
}

