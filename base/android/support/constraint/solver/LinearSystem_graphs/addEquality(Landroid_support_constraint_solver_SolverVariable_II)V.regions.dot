digraph "CFG forandroid.support.constraint.solver.LinearSystem.addEquality(Landroid\/support\/constraint\/solver\/SolverVariable;II)V" {
subgraph cluster_Region_1143335830 {
label = "R(2:0|(2:(2:2|(2:(2:4|8)|(2:5|9)))|(1:6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r4.definitionId\l}"];
subgraph cluster_Region_1137720316 {
label = "R(2:(2:2|(2:(2:4|8)|(2:5|9)))|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_733065132 {
label = "IF [B:1:0x0005] THEN: R(2:2|(2:(2:4|8)|(2:5|9))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r4.definitionId != \-1) goto L_0x0007\l}"];
subgraph cluster_Region_596799408 {
label = "R(2:2|(2:(2:4|8)|(2:5|9)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|android.support.constraint.solver.ArrayRow r0 = r3.mRows[r0]\l}"];
subgraph cluster_Region_1523089091 {
label = "R(2:(2:4|8)|(2:5|9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1164893358 {
label = "IF [B:3:0x000d] THEN: R(2:4|8) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000d|if (r0.isSimpleDefinition == true) goto L_0x000f\l}"];
subgraph cluster_Region_788326094 {
label = "R(2:4|8)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|r0.constantValue = (float) r5\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_514057038 {
label = "R(2:5|9)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|android.support.constraint.solver.ArrayRow android.support.constraint.solver.ArrayRow r0 = createRow()\lr0.createRowEquals(r4, r5)\lr0.addError(r3, r6)\laddConstraint(r0)\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
subgraph cluster_Region_2060213511 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0021|android.support.constraint.solver.ArrayRow android.support.constraint.solver.ArrayRow r0 = createRow()\lr0.createRowDefinition(r4, r5)\lr0.addError(r3, r6)\laddConstraint(r0)\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
MethodNode[shape=record,label="{public void android.support.constraint.solver.LinearSystem.addEquality((r3v0 'this' android.support.constraint.solver.LinearSystem A[IMMUTABLE_TYPE, THIS]), (r4v0 android.support.constraint.solver.SolverVariable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_9;
Node_6 -> Node_7;
}

