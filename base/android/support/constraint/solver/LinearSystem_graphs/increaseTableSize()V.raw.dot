digraph "CFG forandroid.support.constraint.solver.LinearSystem.increaseTableSize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r5 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.TABLE_SIZE int \l0x0002: ARITH  (r0 I:int) = (r0 I:int) * (2 int) \l0x0004: IPUT  \l  (r0 I:int)\l  (r5 I:android.support.constraint.solver.LinearSystem)\l android.support.constraint.solver.LinearSystem.TABLE_SIZE int \l0x0006: IGET  (r0 I:android.support.constraint.solver.ArrayRow[]) = (r5 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.mRows android.support.constraint.solver.ArrayRow[] \l0x0008: IGET  (r1 I:int) = (r5 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.TABLE_SIZE int \l0x000a: INVOKE  (r0 I:java.lang.Object[]) = (r0 I:java.lang.Object[]), (r1 I:int) java.util.Arrays.copyOf(java.lang.Object[], int):java.lang.Object[] type: STATIC \l0x000e: CHECK_CAST  (r0 I:android.support.constraint.solver.ArrayRow[]) = (android.support.constraint.solver.ArrayRow[]) (r0 I:?[OBJECT, ARRAY]) \l0x0010: IPUT  \l  (r0 I:android.support.constraint.solver.ArrayRow[])\l  (r5 I:android.support.constraint.solver.LinearSystem)\l android.support.constraint.solver.LinearSystem.mRows android.support.constraint.solver.ArrayRow[] \l0x0012: IGET  (r0 I:android.support.constraint.solver.Cache) = (r5 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.mCache android.support.constraint.solver.Cache \l0x0014: IGET  (r1 I:android.support.constraint.solver.Cache) = (r5 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.mCache android.support.constraint.solver.Cache \l0x0016: IGET  (r1 I:android.support.constraint.solver.SolverVariable[]) = (r1 I:android.support.constraint.solver.Cache) android.support.constraint.solver.Cache.mIndexedVariables android.support.constraint.solver.SolverVariable[] \l0x0018: IGET  (r2 I:int) = (r5 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.TABLE_SIZE int \l0x001a: INVOKE  (r1 I:java.lang.Object[]) = (r1 I:java.lang.Object[]), (r2 I:int) java.util.Arrays.copyOf(java.lang.Object[], int):java.lang.Object[] type: STATIC \l0x001e: CHECK_CAST  (r1 I:android.support.constraint.solver.SolverVariable[]) = (android.support.constraint.solver.SolverVariable[]) (r1 I:?[OBJECT, ARRAY]) \l0x0020: IPUT  \l  (r1 I:android.support.constraint.solver.SolverVariable[])\l  (r0 I:android.support.constraint.solver.Cache)\l android.support.constraint.solver.Cache.mIndexedVariables android.support.constraint.solver.SolverVariable[] \l0x0022: IGET  (r0 I:int) = (r5 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.TABLE_SIZE int \l0x0024: NEW_ARRAY  (r0 I:boolean[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: boolean[] \l0x0026: IPUT  \l  (r0 I:boolean[])\l  (r5 I:android.support.constraint.solver.LinearSystem)\l android.support.constraint.solver.LinearSystem.mAlreadyTestedCandidates boolean[] \l0x0028: IGET  (r0 I:int) = (r5 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.TABLE_SIZE int \l0x002a: IPUT  \l  (r0 I:int)\l  (r5 I:android.support.constraint.solver.LinearSystem)\l android.support.constraint.solver.LinearSystem.mMaxColumns int \l0x002c: IGET  (r0 I:int) = (r5 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.TABLE_SIZE int \l0x002e: IPUT  \l  (r0 I:int)\l  (r5 I:android.support.constraint.solver.LinearSystem)\l android.support.constraint.solver.LinearSystem.mMaxRows int \l0x0030: SGET  (r0 I:android.support.constraint.solver.Metrics) =  android.support.constraint.solver.LinearSystem.sMetrics android.support.constraint.solver.Metrics \l}"];
Node_1 [shape=record,label="{1\:\ 0x0032|0x0032: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0054 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0034|0x0034: SGET  (r0 I:android.support.constraint.solver.Metrics) =  android.support.constraint.solver.LinearSystem.sMetrics android.support.constraint.solver.Metrics \l0x0036: IGET  (r1 I:long) = (r0 I:android.support.constraint.solver.Metrics) android.support.constraint.solver.Metrics.tableSizeIncrease long \l0x0038: CONST  (r3 I:?[long, double]) = (1 ?[long, double]) \l0x003a: ARITH  (r1 I:long) = (r1 I:long) + (r3 I:long) \l0x003b: IPUT  \l  (r1 I:long)\l  (r0 I:android.support.constraint.solver.Metrics)\l android.support.constraint.solver.Metrics.tableSizeIncrease long \l0x003d: SGET  (r0 I:android.support.constraint.solver.Metrics) =  android.support.constraint.solver.LinearSystem.sMetrics android.support.constraint.solver.Metrics \l0x003f: SGET  (r1 I:android.support.constraint.solver.Metrics) =  android.support.constraint.solver.LinearSystem.sMetrics android.support.constraint.solver.Metrics \l0x0041: IGET  (r1 I:long) = (r1 I:android.support.constraint.solver.Metrics) android.support.constraint.solver.Metrics.maxTableSize long \l0x0043: IGET  (r3 I:int) = (r5 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.TABLE_SIZE int \l0x0045: CAST  (r3 I:long) = (long) (r3 I:int) \l0x0046: INVOKE  (r1 I:long) = (r1 I:long), (r3 I:long) java.lang.Math.max(long, long):long type: STATIC \l0x004a: IPUT  \l  (r1 I:long)\l  (r0 I:android.support.constraint.solver.Metrics)\l android.support.constraint.solver.Metrics.maxTableSize long \l0x004c: SGET  (r0 I:android.support.constraint.solver.Metrics) =  android.support.constraint.solver.LinearSystem.sMetrics android.support.constraint.solver.Metrics \l0x004e: SGET  (r1 I:android.support.constraint.solver.Metrics) =  android.support.constraint.solver.LinearSystem.sMetrics android.support.constraint.solver.Metrics \l0x0050: IGET  (r1 I:long) = (r1 I:android.support.constraint.solver.Metrics) android.support.constraint.solver.Metrics.maxTableSize long \l0x0052: IPUT  \l  (r1 I:long)\l  (r0 I:android.support.constraint.solver.Metrics)\l android.support.constraint.solver.Metrics.lastTableSize long \l}"];
Node_3 [shape=record,label="{3\:\ 0x0054|0x0054: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.constraint.solver.LinearSystem.increaseTableSize((r5 'this' I:android.support.constraint.solver.LinearSystem A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

