digraph "CFG forandroid.support.constraint.solver.LinearSystem.acquireSolverVariable(Landroid\/support\/constraint\/solver\/SolverVariable$Type;)Landroid\/support\/constraint\/solver\/SolverVariable;" {
subgraph cluster_Region_1406733938 {
label = "R(5:0|(1:2)(1:8)|(1:5)|6|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.support.constraint.solver.SolverVariable android.support.constraint.solver.SolverVariable r0 = r4.mCache.solverVariablePool.acquire()\l}"];
subgraph cluster_IfRegion_2121781636 {
label = "IF [B:1:0x000a] THEN: R(1:2) ELSE: R(1:8)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r0 == null) goto L_0x000c\l}"];
subgraph cluster_Region_1705366009 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000c|android.support.constraint.solver.SolverVariable r0 = new android.support.constraint.solver.SolverVariable(r5)\l}"];
}
subgraph cluster_Region_851105738 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0034|r0.reset()\lr0.setType(r5)\l}"];
}
}
subgraph cluster_IfRegion_1863643128 {
label = "IF [B:4:0x0015] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0015|if (r4.mPoolVariablesCount \>= POOL_SIZE) goto L_0x0017\l}"];
subgraph cluster_Region_844586527 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0017|POOL_SIZE *= 2\lr4.mPoolVariables = (android.support.constraint.solver.SolverVariable[]) java.util.Arrays.copyOf(r4.mPoolVariables, POOL_SIZE)\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0029|android.support.constraint.solver.SolverVariable[] android.support.constraint.solver.SolverVariable[] r1 = r4.mPoolVariables\lint int r2 = r4.mPoolVariablesCount\lr4.mPoolVariablesCount = r2 + 1\lr1[r2] = r0\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|RETURN\l|return r0\l}"];
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0011|PHI: r0 \l  PHI: (r0v2 'variable' android.support.constraint.solver.SolverVariable) = (r0v1 'variable' android.support.constraint.solver.SolverVariable), (r0v3 'variable' android.support.constraint.solver.SolverVariable) binds: [B:8:0x0034, B:2:0x000c] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{private android.support.constraint.solver.SolverVariable android.support.constraint.solver.LinearSystem.acquireSolverVariable((r4v0 'this' android.support.constraint.solver.LinearSystem A[IMMUTABLE_TYPE, THIS]), (r5v0 'type' android.support.constraint.solver.SolverVariable$Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8[style=dashed];
Node_2 -> Node_3;
Node_8 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_3 -> Node_4;
}

