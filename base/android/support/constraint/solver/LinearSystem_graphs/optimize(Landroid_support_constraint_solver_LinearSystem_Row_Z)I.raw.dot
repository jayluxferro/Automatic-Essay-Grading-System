digraph "CFG forandroid.support.constraint.solver.LinearSystem.optimize(Landroid\/support\/constraint\/solver\/LinearSystem$Row;Z)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r15 I:android.support.constraint.solver.Metrics) =  android.support.constraint.solver.LinearSystem.sMetrics android.support.constraint.solver.Metrics \l0x0002: CONST  (r0 I:?[long, double]) = (1 ?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: SGET  (r15 I:android.support.constraint.solver.Metrics) =  android.support.constraint.solver.LinearSystem.sMetrics android.support.constraint.solver.Metrics \l0x0008: IGET  (r2 I:long) = (r15 I:android.support.constraint.solver.Metrics) android.support.constraint.solver.Metrics.optimize long \l0x000a: ARITH  (r2 I:long) = (r2 I:long) + (r0 I:long) \l0x000b: IPUT  \l  (r2 I:long)\l  (r15 I:android.support.constraint.solver.Metrics)\l android.support.constraint.solver.Metrics.optimize long \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: CONST  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IGET  (r3 I:int) = (r13 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.mNumColumns int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:7:0x001a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IGET  (r3 I:boolean[]) = (r13 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.mAlreadyTestedCandidates boolean[] \l0x0015: APUT  \l  (r3 I:boolean[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l  (r15 I:boolean A[IMMUTABLE_TYPE])\l \l0x0017: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x00bf \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: SGET  (r4 I:android.support.constraint.solver.Metrics) =  android.support.constraint.solver.LinearSystem.sMetrics android.support.constraint.solver.Metrics \l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|0x0020: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0029 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: SGET  (r4 I:android.support.constraint.solver.Metrics) =  android.support.constraint.solver.LinearSystem.sMetrics android.support.constraint.solver.Metrics \l0x0024: IGET  (r5 I:long) = (r4 I:android.support.constraint.solver.Metrics) android.support.constraint.solver.Metrics.iterations long \l0x0026: ARITH  (r5 I:long) = (r5 I:long) + (r0 I:long) \l0x0027: IPUT  \l  (r5 I:long)\l  (r4 I:android.support.constraint.solver.Metrics)\l android.support.constraint.solver.Metrics.iterations long \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l0x002b: IGET  (r4 I:int) = (r13 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.mNumColumns int \l0x002d: ARITH  (r4 I:int) = (r4 I:int) * (2 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: IF  (r3 I:?[int, byte, short, char]) \< (r4 I:?[int, byte, short, char])  \-\> B:15:0x0032 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|0x0031: RETURN  (r3 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0032|0x0032: INVOKE  (r4 I:android.support.constraint.solver.SolverVariable) = (r14 I:android.support.constraint.solver.LinearSystem$Row) android.support.constraint.solver.LinearSystem.Row.getKey():android.support.constraint.solver.SolverVariable type: INTERFACE \l0x0036: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|0x0037: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0043 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0039|0x0039: IGET  (r4 I:boolean[]) = (r13 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.mAlreadyTestedCandidates boolean[] \l0x003b: INVOKE  (r6 I:android.support.constraint.solver.SolverVariable) = (r14 I:android.support.constraint.solver.LinearSystem$Row) android.support.constraint.solver.LinearSystem.Row.getKey():android.support.constraint.solver.SolverVariable type: INTERFACE \l0x003f: IGET  (r6 I:int) = (r6 I:android.support.constraint.solver.SolverVariable) android.support.constraint.solver.SolverVariable.id int \l0x0041: APUT  \l  (r4 I:boolean[] A[IMMUTABLE_TYPE])\l  (r6 I:?[int, short, byte, char])\l  (r5 I:boolean A[IMMUTABLE_TYPE])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0043|0x0043: IGET  (r4 I:boolean[]) = (r13 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.mAlreadyTestedCandidates boolean[] \l0x0045: INVOKE  (r4 I:android.support.constraint.solver.SolverVariable) = \l  (r14 I:android.support.constraint.solver.LinearSystem$Row)\l  (r13 I:android.support.constraint.solver.LinearSystem)\l  (r4 I:boolean[])\l android.support.constraint.solver.LinearSystem.Row.getPivotCandidate(android.support.constraint.solver.LinearSystem, boolean[]):android.support.constraint.solver.SolverVariable type: INTERFACE \l}"];
Node_19 [shape=record,label="{19\:\ 0x0049|0x0049: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x005a \l}"];
Node_20 [shape=record,label="{20\:\ 0x004b|0x004b: IGET  (r6 I:boolean[]) = (r13 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.mAlreadyTestedCandidates boolean[] \l0x004d: IGET  (r7 I:int) = (r4 I:android.support.constraint.solver.SolverVariable) android.support.constraint.solver.SolverVariable.id int \l0x004f: AGET  (r6 I:boolean A[IMMUTABLE_TYPE]) = \l  (r6 I:boolean[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|0x0051: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0054 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0053|0x0053: RETURN  (r3 I:int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0054|0x0054: IGET  (r6 I:boolean[]) = (r13 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.mAlreadyTestedCandidates boolean[] \l0x0056: IGET  (r7 I:int) = (r4 I:android.support.constraint.solver.SolverVariable) android.support.constraint.solver.SolverVariable.id int \l0x0058: APUT  \l  (r6 I:boolean[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l  (r5 I:boolean A[IMMUTABLE_TYPE])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x005a|0x005a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x00bc \l}"];
Node_25 [shape=record,label="{25\:\ 0x005c|0x005c: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (2139095039(0x7f7fffff, float:3.4028235E38) ?[int, float, short, byte, char])\l \l0x005f: CONST  (r7 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0060: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0061: CONST  (r8 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0062: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (2139095039(0x7f7fffff, float:3.4028235E38) ?[int, float, short, byte, char])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x0065|0x0065: IGET  (r10 I:int) = (r13 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.mNumRows int \l}"];
Node_27 [shape=record,label="{27\:\ 0x0067|0x0067: IF  (r6 I:?[int, byte, short, char]) \>= (r10 I:?[int, byte, short, char])  \-\> B:42:0x0099 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0069|0x0069: IGET  (r10 I:android.support.constraint.solver.ArrayRow[]) = (r13 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.mRows android.support.constraint.solver.ArrayRow[] \l0x006b: AGET  (r10 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY][])\l  (r6 I:?[int, short, byte, char])\l \l0x006d: IGET  (r11 I:android.support.constraint.solver.SolverVariable) = (r10 I:android.support.constraint.solver.ArrayRow) android.support.constraint.solver.ArrayRow.variable android.support.constraint.solver.SolverVariable \l0x006f: IGET  (r11 I:android.support.constraint.solver.SolverVariable$Type) = (r11 I:android.support.constraint.solver.SolverVariable) android.support.constraint.solver.SolverVariable.mType android.support.constraint.solver.SolverVariable$Type \l0x0071: SGET  (r12 I:android.support.constraint.solver.SolverVariable$Type) =  android.support.constraint.solver.SolverVariable.Type.UNRESTRICTED android.support.constraint.solver.SolverVariable$Type \l}"];
Node_29 [shape=record,label="{29\:\ 0x0073|0x0073: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0076 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0076|0x0076: IGET  (r11 I:boolean) = (r10 I:android.support.constraint.solver.ArrayRow) android.support.constraint.solver.ArrayRow.isSimpleDefinition boolean \l}"];
Node_32 [shape=record,label="{32\:\ 0x0078|0x0078: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x007b \l}"];
Node_34 [shape=record,label="{34\:\ 0x007b|0x007b: INVOKE  (r11 I:boolean) = \l  (r10 I:android.support.constraint.solver.ArrayRow)\l  (r4 I:android.support.constraint.solver.SolverVariable)\l android.support.constraint.solver.ArrayRow.hasVariable(android.support.constraint.solver.SolverVariable):boolean type: VIRTUAL \l}"];
Node_35 [shape=record,label="{35\:\ 0x007f|0x007f: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0096 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0081|0x0081: IGET  (r11 I:android.support.constraint.solver.ArrayLinkedVariables) = (r10 I:android.support.constraint.solver.ArrayRow) android.support.constraint.solver.ArrayRow.variables android.support.constraint.solver.ArrayLinkedVariables \l0x0083: INVOKE  (r11 I:float) = \l  (r11 I:android.support.constraint.solver.ArrayLinkedVariables)\l  (r4 I:android.support.constraint.solver.SolverVariable)\l android.support.constraint.solver.ArrayLinkedVariables.get(android.support.constraint.solver.SolverVariable):float type: VIRTUAL \l0x0087: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0088: CMP_G  (r12 I:int) = (r11 I:float), (r12 I:float) \l}"];
Node_37 [shape=record,label="{37\:\ 0x008a|0x008a: IF  (r12 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:41:0x0096 \l}"];
Node_38 [shape=record,label="{38\:\ 0x008c|0x008c: IGET  (r10 I:float) = (r10 I:android.support.constraint.solver.ArrayRow) android.support.constraint.solver.ArrayRow.constantValue float \l0x008e: NEG  (r10 I:float) = (r10 I:float) \l0x008f: ARITH  (r10 I:float) = (r10 I:float) \/ (r11 I:float) \l0x0090: CMP_G  (r11 I:int) = (r10 I:float), (r9 I:float) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0092|0x0092: IF  (r11 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:41:0x0096 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0094|0x0094: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0095: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_41 [shape=record,label="{41\:\ 0x0096|0x0096: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0099|0x0099: IF  (r8 I:?[int, byte, short, char]) \<= (r7 I:?[int, byte, short, char])  \-\> B:47:0x00bc \l}"];
Node_43 [shape=record,label="{43\:\ 0x009b|0x009b: IGET  (r5 I:android.support.constraint.solver.ArrayRow[]) = (r13 I:android.support.constraint.solver.LinearSystem) android.support.constraint.solver.LinearSystem.mRows android.support.constraint.solver.ArrayRow[] \l0x009d: AGET  (r5 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r8 I:?[int, short, byte, char]) \l0x009f: IGET  (r6 I:android.support.constraint.solver.SolverVariable) = (r5 I:android.support.constraint.solver.ArrayRow) android.support.constraint.solver.ArrayRow.variable android.support.constraint.solver.SolverVariable \l0x00a1: IPUT  \l  (r7 I:int)\l  (r6 I:android.support.constraint.solver.SolverVariable)\l android.support.constraint.solver.SolverVariable.definitionId int \l0x00a3: SGET  (r6 I:android.support.constraint.solver.Metrics) =  android.support.constraint.solver.LinearSystem.sMetrics android.support.constraint.solver.Metrics \l}"];
Node_44 [shape=record,label="{44\:\ 0x00a5|0x00a5: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x00ae \l}"];
Node_45 [shape=record,label="{45\:\ 0x00a7|0x00a7: SGET  (r6 I:android.support.constraint.solver.Metrics) =  android.support.constraint.solver.LinearSystem.sMetrics android.support.constraint.solver.Metrics \l0x00a9: IGET  (r9 I:long) = (r6 I:android.support.constraint.solver.Metrics) android.support.constraint.solver.Metrics.pivots long \l0x00ab: ARITH  (r9 I:long) = (r9 I:long) + (r0 I:long) \l0x00ac: IPUT  \l  (r9 I:long)\l  (r6 I:android.support.constraint.solver.Metrics)\l android.support.constraint.solver.Metrics.pivots long \l}"];
Node_46 [shape=record,label="{46\:\ 0x00ae|0x00ae: INVOKE  \l  (r5 I:android.support.constraint.solver.ArrayRow)\l  (r4 I:android.support.constraint.solver.SolverVariable)\l android.support.constraint.solver.ArrayRow.pivot(android.support.constraint.solver.SolverVariable):void type: VIRTUAL \l0x00b1: IGET  (r4 I:android.support.constraint.solver.SolverVariable) = (r5 I:android.support.constraint.solver.ArrayRow) android.support.constraint.solver.ArrayRow.variable android.support.constraint.solver.SolverVariable \l0x00b3: IPUT  \l  (r8 I:int)\l  (r4 I:android.support.constraint.solver.SolverVariable)\l android.support.constraint.solver.SolverVariable.definitionId int \l0x00b5: IGET  (r4 I:android.support.constraint.solver.SolverVariable) = (r5 I:android.support.constraint.solver.ArrayRow) android.support.constraint.solver.ArrayRow.variable android.support.constraint.solver.SolverVariable \l0x00b7: INVOKE  \l  (r4 I:android.support.constraint.solver.SolverVariable)\l  (r5 I:android.support.constraint.solver.ArrayRow)\l android.support.constraint.solver.SolverVariable.updateReferencesWithNewDefinition(android.support.constraint.solver.ArrayRow):void type: VIRTUAL \l}"];
Node_47 [shape=record,label="{47\:\ 0x00bc|0x00bc: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x00bf|0x00bf: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{private final int android.support.constraint.solver.LinearSystem.optimize((r13 'this' I:android.support.constraint.solver.LinearSystem A[IMMUTABLE_TYPE, THIS]), (r14 I:android.support.constraint.solver.LinearSystem$Row A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_48;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_47;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_42;
Node_28 -> Node_29;
Node_29 -> Node_31;
Node_29 -> Node_41[style=dashed];
Node_31 -> Node_32;
Node_32 -> Node_34;
Node_32 -> Node_41[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_41;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_41;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_26;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_47;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_8;
Node_47 -> Node_8;
}

