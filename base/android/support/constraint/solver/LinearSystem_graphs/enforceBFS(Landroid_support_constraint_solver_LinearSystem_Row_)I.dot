digraph "CFG forandroid.support.constraint.solver.LinearSystem.enforceBFS(Landroid\/support\/constraint\/solver\/LinearSystem$Row;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r18\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v10 int) binds: [B:0:0x0000, B:8:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:8:0x0021\l|r4 = 0.0f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r2 \>= r0.mNumRows) goto L_0x0024\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
Node_4 [shape=record,label="{4\:\ 0x0012|if (r0.mRows[r2].variable.mType != android.support.constraint.solver.SolverVariable.Type.UNRESTRICTED) goto L_0x0015\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015}"];
Node_6 [shape=record,label="{6\:\ 0x001d|if ((r0.mRows[r2].constantValue \> 0.0f ? 1 : (r0.mRows[r2].constantValue == 0.0f ? 0 : \-1)) \>= 0) goto L_0x0021\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|r2 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|LOOP_END\lLOOP:0: B:1:0x0003\-\>B:8:0x0021\l|int r2 = r2 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|r2 = false\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|PHI: r2 \l  PHI: (r2v3 boolean) = (r2v2 boolean), (r2v11 boolean) binds: [B:9:0x0024, B:7:0x001f] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == false) goto L_0x00db\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|r2 = false\lr3 = 0\l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|LOOP_START\lPHI: r2 r3 r4 \l  PHI: (r2v5 boolean) = (r2v4 boolean), (r2v7 boolean) binds: [B:11:0x0027, B:51:0x00d5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 int) = (r3v1 int), (r3v3 int) binds: [B:11:0x0027, B:51:0x00d5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 float) = (r4v0 float), (r4v3 float) binds: [B:11:0x0027, B:51:0x00d5] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:12:0x0029\-\>B:51:0x00d5\l|if (r2 != false) goto L_0x00d8\l}"];
Node_13 [shape=record,label="{13\:\ 0x002b}"];
Node_14 [shape=record,label="{14\:\ 0x002f|if (sMetrics == null) goto L_0x0038\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|android.support.constraint.solver.Metrics r6 = sMetrics\lr6.bfs = r6.bfs + 1\l}"];
Node_16 [shape=record,label="{16\:\ 0x0038|int r3 = r3 + 1\lr6 = 0\lr10 = \-1\lr11 = \-1\lr12 = Float.MAX_VALUE\lr13 = 0\l}"];
Node_17 [shape=record,label="{17\:\ 0x0045|LOOP_START\lPHI: r4 r6 r10 r11 r12 r13 \l  PHI: (r4v2 float) = (r4v1 float), (r4v12 float) binds: [B:16:0x0038, B:41:0x009d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v3 int) = (r6v2 int), (r6v4 int) binds: [B:16:0x0038, B:41:0x009d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 int) = (r10v0 int), (r10v2 int) binds: [B:16:0x0038, B:41:0x009d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v1 int) = (r11v0 int), (r11v2 int) binds: [B:16:0x0038, B:41:0x009d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v1 float) = (r12v0 float), (r12v2 float) binds: [B:16:0x0038, B:41:0x009d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 int) = (r13v0 int), (r13v2 int) binds: [B:16:0x0038, B:41:0x009d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:17:0x0045\-\>B:41:0x009d\l}"];
Node_18 [shape=record,label="{18\:\ 0x0047|if (r6 \>= r0.mNumRows) goto L_0x00a3\l}"];
Node_19 [shape=record,label="{19\:\ 0x0049|r14 = r0.mRows[r6]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0053|if (r14.variable.mType != android.support.constraint.solver.SolverVariable.Type.UNRESTRICTED) goto L_0x0056\l}"];
Node_21 [shape=record,label="{21\:\ 0x0056}"];
Node_22 [shape=record,label="{22\:\ 0x0058|if (r14.isSimpleDefinition == false) goto L_0x005b\l}"];
Node_23 [shape=record,label="{23\:\ 0x005b}"];
Node_24 [shape=record,label="{24\:\ 0x005f|if ((r14.constantValue \> r4 ? 1 : (r14.constantValue == r4 ? 0 : \-1)) \>= 0) goto L_0x009d\l}"];
Node_25 [shape=record,label="{25\:\ 0x0061|r1 = 1\l}"];
Node_26 [shape=record,label="{26\:\ 0x0062|LOOP_START\lPHI: r1 r4 r10 r11 r12 r13 \l  PHI: (r1v9 int) = (r1v8 int), (r1v10 int) binds: [B:25:0x0061, B:40:0x0097] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v13 float) = (r4v2 float), (r4v14 float) binds: [B:25:0x0061, B:40:0x0097] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v3 int) = (r10v1 int), (r10v4 int) binds: [B:25:0x0061, B:40:0x0097] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v3 int) = (r11v1 int), (r11v4 int) binds: [B:25:0x0061, B:40:0x0097] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v3 float) = (r12v1 float), (r12v4 float) binds: [B:25:0x0061, B:40:0x0097] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v3 int) = (r13v1 int), (r13v4 int) binds: [B:25:0x0061, B:40:0x0097] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:26:0x0062\-\>B:40:0x0097\l}"];
Node_27 [shape=record,label="{27\:\ 0x0064|if (r1 \>= r0.mNumColumns) goto L_0x009d\l}"];
Node_28 [shape=record,label="{28\:\ 0x0066|r15 = r0.mCache.mIndexedVariables[r1]\lfloat r5 = r14.variables.get(r15)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0074|if ((r5 \> r4 ? 1 : (r5 == r4 ? 0 : \-1)) \> 0) goto L_0x0077\l}"];
Node_30 [shape=record,label="{30\:\ 0x0077|r4 = r13\lr13 = r12\lr12 = r11\lr11 = r10\lr10 = 0\l}"];
Node_31 [shape=record,label="{31\:\ 0x007c|LOOP_START\lPHI: r4 r10 r11 r12 r13 \l  PHI: (r4v16 int) = (r4v15 int), (r4v17 int) binds: [B:30:0x0077, B:38:0x0090] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v6 int) = (r10v5 int), (r10v8 int) binds: [B:30:0x0077, B:38:0x0090] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v6 int) = (r11v5 int), (r11v8 int) binds: [B:30:0x0077, B:38:0x0090] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v6 int) = (r12v5 int), (r12v8 int) binds: [B:30:0x0077, B:38:0x0090] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v6 float) = (r13v5 float), (r13v8 float) binds: [B:30:0x0077, B:38:0x0090] A[DONT_GENERATE, DONT_INLINE]\lLOOP:4: B:31:0x007c\-\>B:38:0x0090\l}"];
Node_32 [shape=record,label="{32\:\ 0x007d|if (r10 \>= 7) goto L_0x0093\l}"];
Node_33 [shape=record,label="{33\:\ 0x007f|float r7 = r15.strengthVector[r10] \/ r5\l}"];
Node_34 [shape=record,label="{34\:\ 0x0086|if ((r7 \> r13 ? 1 : (r7 == r13 ? 0 : \-1)) \>= 0) goto L_0x008a\l}"];
Node_35 [shape=record,label="{35\:\ 0x0088|if (r10 == r4) goto L_0x008c\l}"];
Node_36 [shape=record,label="{36\:\ 0x008a|if (r10 \<= r4) goto L_0x0090\l}"];
Node_37 [shape=record,label="{37\:\ 0x008c|r12 = r1\lr11 = r6\lr13 = r7\lr4 = r10\l}"];
Node_38 [shape=record,label="{38\:\ 0x0090|LOOP_END\lPHI: r4 r11 r12 r13 \l  PHI: (r4v17 int) = (r4v18 int), (r4v16 int) binds: [B:69:0x0090, B:70:0x0090] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v8 int) = (r11v9 int), (r11v6 int) binds: [B:69:0x0090, B:70:0x0090] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v8 int) = (r12v9 int), (r12v6 int) binds: [B:69:0x0090, B:70:0x0090] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v8 float) = (r13v9 float), (r13v6 float) binds: [B:69:0x0090, B:70:0x0090] A[DONT_GENERATE, DONT_INLINE]\lLOOP:4: B:31:0x007c\-\>B:38:0x0090\l|int r10 = r10 + 1\l}"];
Node_39 [shape=record,label="{39\:\ 0x0093|r10 = r11\lr11 = r12\lr12 = r13\lr13 = r4\l}"];
Node_40 [shape=record,label="{40\:\ 0x0097|LOOP_END\lPHI: r10 r11 r12 r13 \l  PHI: (r10v4 int) = (r10v3 int), (r10v7 int) binds: [B:67:0x0097, B:66:0x0097] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v4 int) = (r11v3 int), (r11v7 int) binds: [B:67:0x0097, B:66:0x0097] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v4 float) = (r12v3 float), (r12v7 float) binds: [B:67:0x0097, B:66:0x0097] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v4 int) = (r13v3 int), (r13v7 int) binds: [B:67:0x0097, B:66:0x0097] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:26:0x0062\-\>B:40:0x0097\l|int r1 = r1 + 1\lr4 = 0.0f\l}"];
Node_41 [shape=record,label="{41\:\ 0x009d|LOOP_END\lPHI: r10 r11 r12 r13 \l  PHI: (r10v2 int) = (r10v1 int), (r10v1 int), (r10v1 int), (r10v3 int) binds: [B:64:0x009d, B:65:0x009d, B:62:0x009d, B:63:0x009d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v2 int) = (r11v1 int), (r11v1 int), (r11v1 int), (r11v3 int) binds: [B:64:0x009d, B:65:0x009d, B:62:0x009d, B:63:0x009d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v2 float) = (r12v1 float), (r12v1 float), (r12v1 float), (r12v3 float) binds: [B:64:0x009d, B:65:0x009d, B:62:0x009d, B:63:0x009d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v2 int) = (r13v1 int), (r13v1 int), (r13v1 int), (r13v3 int) binds: [B:64:0x009d, B:65:0x009d, B:62:0x009d, B:63:0x009d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:17:0x0045\-\>B:41:0x009d\l|int r6 = r6 + 1\lr4 = 0.0f\l}"];
Node_42 [shape=record,label="{42\:\ 0x00a3|if (r10 == \-1) goto L_0x00cd\l}"];
Node_43 [shape=record,label="{43\:\ 0x00a5|r1 = r0.mRows[r10]\lr1.variable.definitionId = \-1\l}"];
Node_44 [shape=record,label="{44\:\ 0x00af|if (sMetrics == null) goto L_0x00ba\l}"];
Node_45 [shape=record,label="{45\:\ 0x00b1|android.support.constraint.solver.Metrics r4 = sMetrics\lr4.pivots = r4.pivots + 1\l}"];
Node_46 [shape=record,label="{46\:\ 0x00ba|r1.pivot(r0.mCache.mIndexedVariables[r11])\lr1.variable.definitionId = r10\lr1.variable.updateReferencesWithNewDefinition(r1)\l}"];
Node_47 [shape=record,label="{47\:\ 0x00cd|r2 = true\l}"];
Node_48 [shape=record,label="{48\:\ 0x00ce|PHI: r2 \l  PHI: (r2v6 boolean) = (r2v9 boolean), (r2v5 boolean) binds: [B:47:0x00cd, B:46:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_49 [shape=record,label="{49\:\ 0x00d2|if (r3 \<= (r0.mNumColumns \/ 2)) goto L_0x00d5\l}"];
Node_50 [shape=record,label="{50\:\ 0x00d4|r2 = true\l}"];
Node_51 [shape=record,label="{51\:\ 0x00d5|LOOP_END\lPHI: r2 \l  PHI: (r2v7 boolean) = (r2v6 boolean), (r2v8 boolean) binds: [B:60:0x00d5, B:59:0x00d5] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:12:0x0029\-\>B:51:0x00d5\l|r4 = 0.0f\l}"];
Node_52 [shape=record,label="{52\:\ 0x00d8}"];
Node_53 [shape=record,label="{53\:\ 0x00db|SYNTHETIC\lRETURN\lORIG_RETURN\l|return 0\l}"];
Node_54 [shape=record,label="{54\:\ 0x0024|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x001f|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x0021|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x0021|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x00d8|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x00d5|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ 0x00d5|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x00a3|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x009d|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ 0x009d|SYNTHETIC\l}"];
Node_64 [shape=record,label="{64\:\ 0x009d|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x009d|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0097|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x0097|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x0093|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ 0x0090|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x0090|SYNTHETIC\l}"];
Node_71 [shape=record,label="{71\:\ ?|SYNTHETIC\lRETURN\l|return r3\l}"];
MethodNode[shape=record,label="{private int android.support.constraint.solver.LinearSystem.enforceBFS((r18v0 'this' android.support.constraint.solver.LinearSystem A[IMMUTABLE_TYPE, THIS]), (r19v0 android.support.constraint.solver.LinearSystem$Row A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_54;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_57[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_55[style=dashed];
Node_6 -> Node_56;
Node_7 -> Node_10;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_53;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_58;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_61;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_64[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_65[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_62;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_63;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_67[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_68;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_70;
Node_37 -> Node_69;
Node_38 -> Node_31;
Node_39 -> Node_66;
Node_40 -> Node_26;
Node_41 -> Node_17;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_47;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_48;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_60;
Node_50 -> Node_59;
Node_51 -> Node_12;
Node_52 -> Node_71;
Node_54 -> Node_9;
Node_55 -> Node_7;
Node_56 -> Node_8;
Node_57 -> Node_8;
Node_58 -> Node_52;
Node_59 -> Node_51;
Node_60 -> Node_51;
Node_61 -> Node_42;
Node_62 -> Node_41;
Node_63 -> Node_41;
Node_64 -> Node_41;
Node_65 -> Node_41;
Node_66 -> Node_40;
Node_67 -> Node_40;
Node_68 -> Node_39;
Node_69 -> Node_38;
Node_70 -> Node_38;
}

