digraph "CFG forandroid.support.constraint.ConstraintLayout.getViewWidget(Landroid\/view\/View;)Landroid\/support\/constraint\/solver\/widgets\/ConstraintWidget;" {
subgraph cluster_Region_2096971745 {
label = "R(1:(2:(1:2)|(1:(2:(1:4)|(1:6)))))";
node [shape=record,color=blue];
subgraph cluster_Region_689338790 {
label = "R(2:(1:2)|(1:(2:(1:4)|(1:6))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_203597695 {
label = "IF [B:0:0x0000] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r1 == r0) goto L_0x0002\l}"];
subgraph cluster_Region_1493228770 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return r0.mLayoutWidget\l}"];
}
}
subgraph cluster_Region_1276637716 {
label = "R(1:(2:(1:4)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1456896377 {
label = "R(2:(1:4)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1339434371 {
label = "IF [B:3:0x0005] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r1 == null) goto L_0x0007\l}"];
subgraph cluster_Region_284038999 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0007|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1662697484 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return ((android.support.constraint.ConstraintLayout.LayoutParams) r1.getLayoutParams()).widget\l}"];
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0009}"];
MethodNode[shape=record,label="{public final android.support.constraint.solver.widgets.ConstraintWidget android.support.constraint.ConstraintLayout.getViewWidget((r0v0 'this' android.support.constraint.ConstraintLayout A[IMMUTABLE_TYPE, THIS]), (r1v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_1 -> Node_2;
Node_5 -> Node_6;
}

