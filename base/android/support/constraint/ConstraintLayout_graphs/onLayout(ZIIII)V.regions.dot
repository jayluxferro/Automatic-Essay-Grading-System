digraph "CFG forandroid.support.constraint.ConstraintLayout.onLayout(ZIIII)V" {
subgraph cluster_Region_71899471 {
label = "R(4:0|(3:2|(2:11|(1:15))|16)|17|(1:(1:(1:20)))) | DECL_VAR: android.view.View null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r6 = getChildCount()\lboolean boolean r7 = isInEditMode()\lint r8 = 0\lint r9 = 0\l}"];
subgraph cluster_LoopRegion_639733772 {
label = "LOOP:0: (3:2|(2:11|(1:15))|16)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|LOOP_START\lPHI: r9 \l  PHI: (r9v2 int) = (r9v1 int), (r9v3 int) binds: [B:0:0x0000, B:16:0x0057] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:16:0x0057\l|if (r9 \< r6) goto L_0x000c\l}"];
subgraph cluster_Region_710895834 {
label = "R(3:2|(2:11|(1:15))|16)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000c|android.view.View android.view.View r10 = getChildAt(r9)\landroid.support.constraint.ConstraintLayout$LayoutParams android.support.constraint.ConstraintLayout.LayoutParams r0 = (android.support.constraint.ConstraintLayout.LayoutParams) r10.getLayoutParams()\landroid.support.constraint.solver.widgets.ConstraintWidget android.support.constraint.solver.widgets.ConstraintWidget r1 = r0.widget\l}"];
subgraph cluster_IfRegion_38680904 {
label = "IF [B:3:0x001e, B:5:0x0022, B:7:0x0026, B:8:0x0028, B:10:0x002d] THEN: R(2:11|(1:15)) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001e|ADDED_TO_REGION\l|if (r10.getVisibility() != 8) goto L_0x002b\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|ADDED_TO_REGION\l|if (r0.isGuideline == true) goto L_0x002b\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|ADDED_TO_REGION\l|if (r0.isHelper == true) goto L_0x002b\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|ADDED_TO_REGION\l|if (r7 == true) goto L_0x002b\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|ADDED_TO_REGION\l|if (r0.isInPlaceholder == false) goto L_0x0030\l}"];
subgraph cluster_Region_1261788894 {
label = "R(2:11|(1:15))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0030|int int r0 = r1.getDrawX()\lint int r2 = r1.getDrawY()\lint int r3 = r1.getWidth() + r0\lint int r1 = r1.getHeight() + r2\lr10.layout(r0, r2, r3, r1)\l}"];
subgraph cluster_IfRegion_1778979805 {
label = "IF [B:12:0x0047, B:14:0x004f] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0047|ADDED_TO_REGION\l|if ((r10 instanceof android.support.constraint.Placeholder) == true) goto L_0x0049\l}"];
Node_14 [shape=record,label="{14\:\ 0x004f|ADDED_TO_REGION\l|if ((r10 = ((android.support.constraint.Placeholder) r10).getContent()) != null) goto L_0x0051\l}"];
subgraph cluster_Region_1002549246 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0051|r10.setVisibility(0)\lr10.layout(r0, r2, r3, r1)\l}"];
}
}
}
}
Node_16 [shape=record,label="{16\:\ 0x0057|LOOP_END\lLOOP:0: B:1:0x000a\-\>B:16:0x0057\l|r9++\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x005a|int int r6 = r5.mConstraintHelpers.size()\l}"];
subgraph cluster_Region_107110567 {
label = "R(1:(1:(1:20)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1504219296 {
label = "IF [B:18:0x0060] THEN: R(1:(1:20)) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0060|if (r6 \> 0) goto L_0x0062\l}"];
subgraph cluster_Region_2028382165 {
label = "R(1:(1:20))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1276887681 {
label = "LOOP:1: (1:20)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0062|LOOP_START\lPHI: r8 \l  PHI: (r8v2 int) = (r8v1 int), (r8v3 int) binds: [B:18:0x0060, B:20:0x0064] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:19:0x0062\-\>B:20:0x0064\l|if (r8 \< r6) goto L_0x0064\l}"];
subgraph cluster_Region_5515564 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0064|LOOP_END\lLOOP:1: B:19:0x0062\-\>B:20:0x0064\l|r5.mConstraintHelpers.get(r8).updatePostLayout(r5)\lr8++\l}"];
}
}
}
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0020}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0024}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002b}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0049}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x005a|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0057|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0057|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0057|SYNTHETIC\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0057|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0057|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0072|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_29 [shape=record,color=red,label="{29\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void android.support.constraint.ConstraintLayout.onLayout((r5v0 'this' android.support.constraint.ConstraintLayout A[IMMUTABLE_TYPE, THIS]), (r6v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_21[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_8 -> Node_25[style=dashed];
Node_10 -> Node_11;
Node_10 -> Node_26[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_23[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_24[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_1;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_28[style=dashed];
Node_19 -> Node_20;
Node_19 -> Node_27[style=dashed];
Node_20 -> Node_19;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_13 -> Node_14;
Node_21 -> Node_17;
Node_22 -> Node_16;
Node_23 -> Node_16;
Node_24 -> Node_16;
Node_25 -> Node_16;
Node_26 -> Node_16;
Node_27 -> Node_29;
}

