digraph "CFG forandroid.support.constraint.Placeholder.onDraw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r7 I:android.support.constraint.Placeholder) android.support.constraint.Placeholder.isInEditMode():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x006b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (223(0xdf, float:3.12E\-43) ?[int, float, short, byte, char])\l \l0x0008: INVOKE  \l  (r8 I:android.graphics.Canvas)\l  (r0 I:int)\l  (r0 I:int)\l  (r0 I:int)\l android.graphics.Canvas.drawRGB(int, int, int):void type: VIRTUAL \l0x000b: NEW_INSTANCE  (r0 I:android.graphics.Paint) =  android.graphics.Paint \l0x000d: INVOKE  (r0 I:android.graphics.Paint) android.graphics.Paint.\<init\>():void type: DIRECT \l0x0010: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char])\l \l0x0012: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (210(0xd2, float:2.94E\-43) ?[int, float, short, byte, char])\l \l0x0014: INVOKE  \l  (r0 I:android.graphics.Paint)\l  (r1 I:int)\l  (r2 I:int)\l  (r2 I:int)\l  (r2 I:int)\l android.graphics.Paint.setARGB(int, int, int, int):void type: VIRTUAL \l0x0017: SGET  (r1 I:android.graphics.Paint$Align) =  android.graphics.Paint.Align.CENTER android.graphics.Paint$Align \l0x0019: INVOKE  \l  (r0 I:android.graphics.Paint)\l  (r1 I:android.graphics.Paint$Align)\l android.graphics.Paint.setTextAlign(android.graphics.Paint$Align):void type: VIRTUAL \l0x001c: SGET  (r1 I:android.graphics.Typeface) =  android.graphics.Typeface.DEFAULT android.graphics.Typeface \l0x001e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001f: INVOKE  (r1 I:android.graphics.Typeface) = (r1 I:android.graphics.Typeface), (r2 I:int) android.graphics.Typeface.create(android.graphics.Typeface, int):android.graphics.Typeface type: STATIC \l0x0023: INVOKE  \l  (r0 I:android.graphics.Paint)\l  (r1 I:android.graphics.Typeface)\l android.graphics.Paint.setTypeface(android.graphics.Typeface):android.graphics.Typeface type: VIRTUAL \l0x0026: NEW_INSTANCE  (r1 I:android.graphics.Rect) =  android.graphics.Rect \l0x0028: INVOKE  (r1 I:android.graphics.Rect) android.graphics.Rect.\<init\>():void type: DIRECT \l0x002b: INVOKE  \l  (r8 I:android.graphics.Canvas)\l  (r1 I:android.graphics.Rect)\l android.graphics.Canvas.getClipBounds(android.graphics.Rect):boolean type: VIRTUAL \l0x002e: INVOKE  (r3 I:int) = (r1 I:android.graphics.Rect) android.graphics.Rect.height():int type: VIRTUAL \l0x0032: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0033: INVOKE  (r0 I:android.graphics.Paint), (r3 I:float) android.graphics.Paint.setTextSize(float):void type: VIRTUAL \l0x0036: INVOKE  (r3 I:int) = (r1 I:android.graphics.Rect) android.graphics.Rect.height():int type: VIRTUAL \l0x003a: INVOKE  (r4 I:int) = (r1 I:android.graphics.Rect) android.graphics.Rect.width():int type: VIRTUAL \l0x003e: SGET  (r5 I:android.graphics.Paint$Align) =  android.graphics.Paint.Align.LEFT android.graphics.Paint$Align \l0x0040: INVOKE  \l  (r0 I:android.graphics.Paint)\l  (r5 I:android.graphics.Paint$Align)\l android.graphics.Paint.setTextAlign(android.graphics.Paint$Align):void type: VIRTUAL \l0x0043: CONST_STR  (r5 I:java.lang.String) =  \"?\" \l0x0045: INVOKE  (r6 I:int) = (r5 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0049: INVOKE  \l  (r0 I:android.graphics.Paint)\l  (r5 I:java.lang.String)\l  (r2 I:int)\l  (r6 I:int)\l  (r1 I:android.graphics.Rect)\l android.graphics.Paint.getTextBounds(java.lang.String, int, int, android.graphics.Rect):void type: VIRTUAL \l0x004c: CAST  (r2 I:float) = (float) (r4 I:int) \l0x004d: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x004f: ARITH  (r2 I:float) = (r2 I:float) \/ (r4 I:float) \l0x0050: INVOKE  (r6 I:int) = (r1 I:android.graphics.Rect) android.graphics.Rect.width():int type: VIRTUAL \l0x0054: CAST  (r6 I:float) = (float) (r6 I:int) \l0x0055: ARITH  (r6 I:float) = (r6 I:float) \/ (r4 I:float) \l0x0056: ARITH  (r2 I:float) = (r2 I:float) \- (r6 I:float) \l0x0057: IGET  (r6 I:int) = (r1 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0059: CAST  (r6 I:float) = (float) (r6 I:int) \l0x005a: ARITH  (r2 I:float) = (r2 I:float) \- (r6 I:float) \l0x005b: CAST  (r3 I:float) = (float) (r3 I:int) \l0x005c: ARITH  (r3 I:float) = (r3 I:float) \/ (r4 I:float) \l0x005d: INVOKE  (r6 I:int) = (r1 I:android.graphics.Rect) android.graphics.Rect.height():int type: VIRTUAL \l0x0061: CAST  (r6 I:float) = (float) (r6 I:int) \l0x0062: ARITH  (r6 I:float) = (r6 I:float) \/ (r4 I:float) \l0x0063: ARITH  (r3 I:float) = (r3 I:float) + (r6 I:float) \l0x0064: IGET  (r1 I:int) = (r1 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x0066: CAST  (r1 I:float) = (float) (r1 I:int) \l0x0067: ARITH  (r3 I:float) = (r3 I:float) \- (r1 I:float) \l0x0068: INVOKE  \l  (r8 I:android.graphics.Canvas)\l  (r5 I:java.lang.String)\l  (r2 I:float)\l  (r3 I:float)\l  (r0 I:android.graphics.Paint)\l android.graphics.Canvas.drawText(java.lang.String, float, float, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x006b|0x006b: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.constraint.Placeholder.onDraw((r7 'this' I:android.support.constraint.Placeholder A[IMMUTABLE_TYPE, THIS]), (r8 I:android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

