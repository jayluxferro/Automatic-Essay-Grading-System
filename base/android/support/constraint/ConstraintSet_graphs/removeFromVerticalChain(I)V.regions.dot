digraph "CFG forandroid.support.constraint.ConstraintSet.removeFromVerticalChain(I)V" {
subgraph cluster_Region_1414339747 {
label = "R(2:(2:2|(1:(1:7)(1:(1:(1:12)(1:(1:15))))))|16)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1755571581 {
label = "IF [B:1:0x000a] THEN: R(2:2|(1:(1:7)(1:(1:(1:12)(1:(1:15)))))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r9.mConstraints.containsKey(java.lang.Integer.valueOf(r10)) == true) goto L_0x000c\l}"];
subgraph cluster_Region_349458397 {
label = "R(2:2|(1:(1:7)(1:(1:(1:12)(1:(1:15))))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000c|android.support.constraint.ConstraintSet$Constraint android.support.constraint.ConstraintSet.Constraint r0 = r9.mConstraints.get(java.lang.Integer.valueOf(r10))\lint int r7 = r0.topToBottom\lint int r8 = r0.bottomToTop\l}"];
subgraph cluster_IfRegion_252741519 {
label = "IF [B:3:0x001d, B:4:0x001f] THEN: R(1:(1:7)(1:(1:(1:12)(1:(1:15))))) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001d|ADDED_TO_REGION\l|if (r7 == \-1) goto L_0x001f\l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|ADDED_TO_REGION\l|if (r8 == \-1) goto L_0x0057\l}"];
subgraph cluster_Region_1767287484 {
label = "R(1:(1:7)(1:(1:(1:12)(1:(1:15)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_488215598 {
label = "IF [B:5:0x0021, B:6:0x0023] THEN: R(1:7) ELSE: R(1:(1:(1:12)(1:(1:15))))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0021|if (r7 != \-1) goto L_0x0023\l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|ADDED_TO_REGION\l|if (r8 != \-1) goto L_0x0025\l}"];
subgraph cluster_Region_395449237 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0025|r1 = r9\lconnect(r7, 4, r8, 3, 0)\lconnect(r8, 3, r7, 4, 0)\l}"];
}
subgraph cluster_Region_739389492 {
label = "R(1:(1:(1:12)(1:(1:15)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1266522757 {
label = "IF [B:8:0x0036, B:9:0x0038] THEN: R(1:(1:12)(1:(1:15))) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0036|ADDED_TO_REGION\l|if (r7 == \-1) goto L_0x0038\l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|ADDED_TO_REGION\l|if (r8 == \-1) goto L_0x0057\l}"];
subgraph cluster_Region_277256465 {
label = "R(1:(1:12)(1:(1:15)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_52424899 {
label = "IF [B:11:0x003c] THEN: R(1:12) ELSE: R(1:(1:15))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x003c|if (r0.bottomToBottom != \-1) goto L_0x003e\l}"];
subgraph cluster_Region_953502170 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x003e|connect(r7, 4, r0.bottomToBottom, 4, 0)\l}"];
}
subgraph cluster_Region_1744379505 {
label = "R(1:(1:15)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1172958493 {
label = "IF [B:14:0x004b] THEN: R(1:15) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x004b|if (r0.topToTop != \-1) goto L_0x004d\l}"];
subgraph cluster_Region_1945495770 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x004d|connect(r8, 3, r0.topToTop, 3, 0)\l}"];
}
}
}
}
}
}
}
}
}
}
}
}
Node_16 [shape=record,label="{16\:\ 0x0057|clear(r10, 3)\lclear(r10, 4)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x003a}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0049}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x005f}"];
MethodNode[shape=record,label="{public void android.support.constraint.ConstraintSet.removeFromVerticalChain((r9v0 'this' android.support.constraint.ConstraintSet A[IMMUTABLE_TYPE, THIS]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_16[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_16;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_16;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_0 -> Node_1;
Node_10 -> Node_11;
Node_13 -> Node_14;
}

