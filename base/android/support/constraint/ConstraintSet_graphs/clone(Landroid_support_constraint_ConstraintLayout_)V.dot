digraph "CFG forandroid.support.constraint.ConstraintSet.clone(Landroid\/support\/constraint\/ConstraintLayout;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r11.getChildCount()\lr10.mConstraints.clear()\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|LOOP_START\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v3 int) binds: [B:0:0x0000, B:22:0x00c9] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:22:0x00c9\l|if (r1 \>= r0) goto L_0x00d5\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|android.view.View r2 = r11.getChildAt(r1)\landroid.support.constraint.ConstraintLayout$LayoutParams r3 = (android.support.constraint.ConstraintLayout.LayoutParams) r2.getLayoutParams()\lint r4 = r2.getId()\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|if (r4 == \-1) goto L_0x00cd\l}"];
Node_4 [shape=record,label="{4\:\ 0x001d}"];
Node_5 [shape=record,label="{5\:\ 0x0027|if (r10.mConstraints.containsKey(java.lang.Integer.valueOf(r4)) != false) goto L_0x0038\l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|r10.mConstraints.put(java.lang.Integer.valueOf(r4), new android.support.constraint.ConstraintSet.Constraint((android.support.constraint.ConstraintSet.C00351) null))\l}"];
Node_7 [shape=record,label="{7\:\ 0x0038|android.support.constraint.ConstraintSet$Constraint r5 = r10.mConstraints.get(java.lang.Integer.valueOf(r4))\landroid.support.constraint.ConstraintSet.Constraint.access$100(r5, r4, r3)\lr5.visibility = r2.getVisibility()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0051|if (android.os.Build.VERSION.SDK_INT \< 17) goto L_0x00b1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0053|r5.alpha = r2.getAlpha()\lr5.rotation = r2.getRotation()\lr5.rotationX = r2.getRotationX()\lr5.rotationY = r2.getRotationY()\lr5.scaleX = r2.getScaleX()\lr5.scaleY = r2.getScaleY()\lfloat r3 = r2.getPivotX()\lfloat r4 = r2.getPivotY()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0084|if ((((double) r3) \> 0.0d ? 1 : (((double) r3) == 0.0d ? 0 : \-1)) != 0) goto L_0x008b\l}"];
Node_11 [shape=record,label="{11\:\ 0x0086}"];
Node_12 [shape=record,label="{12\:\ 0x0089|if ((((double) r4) \> 0.0d ? 1 : (((double) r4) == 0.0d ? 0 : \-1)) == 0) goto L_0x008f\l}"];
Node_13 [shape=record,label="{13\:\ 0x008b|r5.transformPivotX = r3\lr5.transformPivotY = r4\l}"];
Node_14 [shape=record,label="{14\:\ 0x008f|r5.translationX = r2.getTranslationX()\lr5.translationY = r2.getTranslationY()\l}"];
Node_15 [shape=record,label="{15\:\ 0x009f|if (android.os.Build.VERSION.SDK_INT \< 21) goto L_0x00b1\l}"];
Node_16 [shape=record,label="{16\:\ 0x00a1|r5.translationZ = r2.getTranslationZ()\l}"];
Node_17 [shape=record,label="{17\:\ 0x00a9|if (r5.applyElevation == false) goto L_0x00b1\l}"];
Node_18 [shape=record,label="{18\:\ 0x00ab|r5.elevation = r2.getElevation()\l}"];
Node_19 [shape=record,label="{19\:\ 0x00b1}"];
Node_20 [shape=record,label="{20\:\ 0x00b3|if ((r2 instanceof android.support.constraint.Barrier) == false) goto L_0x00c9\l}"];
Node_21 [shape=record,label="{21\:\ 0x00b5|android.support.constraint.Barrier r2 = (android.support.constraint.Barrier) r2\lr5.mBarrierAllowsGoneWidgets = r2.allowsGoneWidget()\lr5.mReferenceIds = r2.getReferencedIds()\lr5.mBarrierDirection = r2.getType()\l}"];
Node_22 [shape=record,label="{22\:\ 0x00c9|LOOP_END\lLOOP:0: B:1:0x000a\-\>B:22:0x00c9\l|int r1 = r1 + 1\l}"];
Node_23 [shape=record,label="{23\:\ 0x00cd}"];
Node_24 [shape=record,label="{24\:\ 0x00d4|throw new java.lang.RuntimeException(\"All children of ConstraintLayout must have ids to use ConstraintSet\")\l}"];
Node_25 [shape=record,label="{25\:\ 0x00d5|RETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ 0x00d5|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x00cd|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x00c9|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x00c9|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.constraint.ConstraintSet.clone((r10v0 'this' android.support.constraint.ConstraintSet A[IMMUTABLE_TYPE, THIS]), (r11v0 android.support.constraint.ConstraintLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_26;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_27;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_19;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_29;
Node_21 -> Node_28;
Node_22 -> Node_1;
Node_23 -> Node_24;
Node_26 -> Node_25;
Node_27 -> Node_23;
Node_28 -> Node_22;
Node_29 -> Node_22;
}

