digraph "CFG forandroid.support.constraint.ConstraintSet.setMargin(III)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:android.support.constraint.ConstraintSet$Constraint) = (r0 I:android.support.constraint.ConstraintSet), (r1 I:int) android.support.constraint.ConstraintSet.get(int):android.support.constraint.ConstraintSet$Constraint type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6, 7] t:[0x0026, 0x0023, 0x0020, 0x001d, 0x0015, 0x0012, 0x000f] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0009: CONST_STR  (r2 I:java.lang.String) =  \"unknown constraint\" \l0x000b: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IPUT  \l  (r3 I:int)\l  (r1 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.endMargin int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IPUT  \l  (r3 I:int)\l  (r1 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.startMargin int \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0017: CONST_STR  (r2 I:java.lang.String) =  \"baseline does not support margins\" \l0x0019: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: IPUT  \l  (r3 I:int)\l  (r1 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.bottomMargin int \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: IPUT  \l  (r3 I:int)\l  (r1 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.topMargin int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: IPUT  \l  (r3 I:int)\l  (r1 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.rightMargin int \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: IPUT  \l  (r3 I:int)\l  (r1 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.leftMargin int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.constraint.ConstraintSet.setMargin((r0 'this' I:android.support.constraint.ConstraintSet A[IMMUTABLE_TYPE, THIS]), (r1 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_5;
Node_1 -> Node_6;
Node_1 -> Node_8;
Node_1 -> Node_9;
Node_1 -> Node_10;
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_4 -> Node_12;
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_8 -> Node_12;
Node_9 -> Node_12;
Node_10 -> Node_12;
Node_11 -> Node_12;
}

