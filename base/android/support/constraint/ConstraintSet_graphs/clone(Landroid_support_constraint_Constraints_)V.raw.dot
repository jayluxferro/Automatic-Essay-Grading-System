digraph "CFG forandroid.support.constraint.ConstraintSet.clone(Landroid\/support\/constraint\/Constraints;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r10 I:android.support.constraint.Constraints) android.support.constraint.Constraints.getChildCount():int type: VIRTUAL \l0x0004: IGET  (r1 I:java.util.HashMap\<java.lang.Integer, android.support.constraint.ConstraintSet$Constraint\>) = (r9 I:android.support.constraint.ConstraintSet) android.support.constraint.ConstraintSet.mConstraints java.util.HashMap \l0x0006: INVOKE  (r1 I:java.util.HashMap) java.util.HashMap.clear():void type: VIRTUAL \l0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:13:0x005b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r2 I:android.view.View) = (r10 I:android.support.constraint.Constraints), (r1 I:int) android.support.constraint.Constraints.getChildAt(int):android.view.View type: VIRTUAL \l0x0010: INVOKE  (r3 I:android.view.ViewGroup$LayoutParams) = (r2 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0014: CHECK_CAST  (r3 I:android.support.constraint.Constraints$LayoutParams) = (android.support.constraint.Constraints$LayoutParams) (r3 I:?[OBJECT, ARRAY]) \l0x0016: INVOKE  (r4 I:int) = (r2 I:android.view.View) android.view.View.getId():int type: VIRTUAL \l0x001a: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0053 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: IGET  (r5 I:java.util.HashMap\<java.lang.Integer, android.support.constraint.ConstraintSet$Constraint\>) = (r9 I:android.support.constraint.ConstraintSet) android.support.constraint.ConstraintSet.mConstraints java.util.HashMap \l0x001f: INVOKE  (r6 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0023: INVOKE  (r5 I:boolean) = (r5 I:java.util.HashMap), (r6 I:java.lang.Object) java.util.HashMap.containsKey(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|0x0027: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0038 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|0x0029: IGET  (r5 I:java.util.HashMap\<java.lang.Integer, android.support.constraint.ConstraintSet$Constraint\>) = (r9 I:android.support.constraint.ConstraintSet) android.support.constraint.ConstraintSet.mConstraints java.util.HashMap \l0x002b: INVOKE  (r6 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x002f: NEW_INSTANCE  (r7 I:android.support.constraint.ConstraintSet$Constraint) =  android.support.constraint.ConstraintSet$Constraint \l0x0031: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0032: INVOKE  \l  (r7 I:android.support.constraint.ConstraintSet$Constraint)\l  (r8 I:android.support.constraint.ConstraintSet$1)\l android.support.constraint.ConstraintSet.Constraint.\<init\>(android.support.constraint.ConstraintSet$1):void type: DIRECT \l0x0035: INVOKE  \l  (r5 I:java.util.HashMap)\l  (r6 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0038|0x0038: IGET  (r5 I:java.util.HashMap\<java.lang.Integer, android.support.constraint.ConstraintSet$Constraint\>) = (r9 I:android.support.constraint.ConstraintSet) android.support.constraint.ConstraintSet.mConstraints java.util.HashMap \l0x003a: INVOKE  (r6 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x003e: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.util.HashMap), (r6 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0042: CHECK_CAST  (r5 I:android.support.constraint.ConstraintSet$Constraint) = (android.support.constraint.ConstraintSet$Constraint) (r5 I:?[OBJECT, ARRAY]) \l0x0044: INSTANCE_OF  (r6 I:boolean) = (r2 I:?[OBJECT, ARRAY]) android.support.constraint.ConstraintHelper \l}"];
Node_8 [shape=record,label="{8\:\ 0x0046|0x0046: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x004d \l}"];
Node_9 [shape=record,label="{9\:\ 0x0048|0x0048: CHECK_CAST  (r2 I:android.support.constraint.ConstraintHelper) = (android.support.constraint.ConstraintHelper) (r2 I:?[OBJECT, ARRAY]) \l0x004a: INVOKE  \l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l  (r2 I:android.support.constraint.ConstraintHelper)\l  (r4 I:int)\l  (r3 I:android.support.constraint.Constraints$LayoutParams)\l android.support.constraint.ConstraintSet.Constraint.access$200(android.support.constraint.ConstraintSet$Constraint, android.support.constraint.ConstraintHelper, int, android.support.constraint.Constraints$LayoutParams):void type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x004d|0x004d: INVOKE  \l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l  (r4 I:int)\l  (r3 I:android.support.constraint.Constraints$LayoutParams)\l android.support.constraint.ConstraintSet.Constraint.access$300(android.support.constraint.ConstraintSet$Constraint, int, android.support.constraint.Constraints$LayoutParams):void type: STATIC \l0x0050: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0053|0x0053: NEW_INSTANCE  (r10 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0055: CONST_STR  (r0 I:java.lang.String) =  \"All children of ConstraintLayout must have ids to use ConstraintSet\" \l0x0057: INVOKE  (r10 I:java.lang.RuntimeException), (r0 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x005a|0x005a: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x005b|0x005b: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.constraint.ConstraintSet.clone((r9 'this' I:android.support.constraint.ConstraintSet A[IMMUTABLE_TYPE, THIS]), (r10 I:android.support.constraint.Constraints A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12;
}

