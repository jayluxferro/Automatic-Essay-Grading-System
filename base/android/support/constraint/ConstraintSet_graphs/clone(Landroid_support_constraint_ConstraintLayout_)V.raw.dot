digraph "CFG forandroid.support.constraint.ConstraintSet.clone(Landroid\/support\/constraint\/ConstraintLayout;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r11 I:android.support.constraint.ConstraintLayout) android.support.constraint.ConstraintLayout.getChildCount():int type: VIRTUAL \l0x0004: IGET  (r1 I:java.util.HashMap\<java.lang.Integer, android.support.constraint.ConstraintSet$Constraint\>) = (r10 I:android.support.constraint.ConstraintSet) android.support.constraint.ConstraintSet.mConstraints java.util.HashMap \l0x0006: INVOKE  (r1 I:java.util.HashMap) java.util.HashMap.clear():void type: VIRTUAL \l0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:25:0x00d5 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r2 I:android.view.View) = \l  (r11 I:android.support.constraint.ConstraintLayout)\l  (r1 I:int)\l android.support.constraint.ConstraintLayout.getChildAt(int):android.view.View type: VIRTUAL \l0x0010: INVOKE  (r3 I:android.view.ViewGroup$LayoutParams) = (r2 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0014: CHECK_CAST  (r3 I:android.support.constraint.ConstraintLayout$LayoutParams) = (android.support.constraint.ConstraintLayout$LayoutParams) (r3 I:?[OBJECT, ARRAY]) \l0x0016: INVOKE  (r4 I:int) = (r2 I:android.view.View) android.view.View.getId():int type: VIRTUAL \l0x001a: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x00cd \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: IGET  (r5 I:java.util.HashMap\<java.lang.Integer, android.support.constraint.ConstraintSet$Constraint\>) = (r10 I:android.support.constraint.ConstraintSet) android.support.constraint.ConstraintSet.mConstraints java.util.HashMap \l0x001f: INVOKE  (r6 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0023: INVOKE  (r5 I:boolean) = (r5 I:java.util.HashMap), (r6 I:java.lang.Object) java.util.HashMap.containsKey(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|0x0027: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0038 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|0x0029: IGET  (r5 I:java.util.HashMap\<java.lang.Integer, android.support.constraint.ConstraintSet$Constraint\>) = (r10 I:android.support.constraint.ConstraintSet) android.support.constraint.ConstraintSet.mConstraints java.util.HashMap \l0x002b: INVOKE  (r6 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x002f: NEW_INSTANCE  (r7 I:android.support.constraint.ConstraintSet$Constraint) =  android.support.constraint.ConstraintSet$Constraint \l0x0031: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0032: INVOKE  \l  (r7 I:android.support.constraint.ConstraintSet$Constraint)\l  (r8 I:android.support.constraint.ConstraintSet$1)\l android.support.constraint.ConstraintSet.Constraint.\<init\>(android.support.constraint.ConstraintSet$1):void type: DIRECT \l0x0035: INVOKE  \l  (r5 I:java.util.HashMap)\l  (r6 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0038|0x0038: IGET  (r5 I:java.util.HashMap\<java.lang.Integer, android.support.constraint.ConstraintSet$Constraint\>) = (r10 I:android.support.constraint.ConstraintSet) android.support.constraint.ConstraintSet.mConstraints java.util.HashMap \l0x003a: INVOKE  (r6 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x003e: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.util.HashMap), (r6 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0042: CHECK_CAST  (r5 I:android.support.constraint.ConstraintSet$Constraint) = (android.support.constraint.ConstraintSet$Constraint) (r5 I:?[OBJECT, ARRAY]) \l0x0044: INVOKE  \l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l  (r4 I:int)\l  (r3 I:android.support.constraint.ConstraintLayout$LayoutParams)\l android.support.constraint.ConstraintSet.Constraint.access$100(android.support.constraint.ConstraintSet$Constraint, int, android.support.constraint.ConstraintLayout$LayoutParams):void type: STATIC \l0x0047: INVOKE  (r3 I:int) = (r2 I:android.view.View) android.view.View.getVisibility():int type: VIRTUAL \l0x004b: IPUT  \l  (r3 I:int)\l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.visibility int \l0x004d: SGET  (r3 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x004f: CONST  (r4 I:?[int, float, short, byte, char]) = (17 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0051|0x0051: IF  (r3 I:?[int, byte, short, char]) \< (r4 I:?[int, byte, short, char])  \-\> B:19:0x00b1 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0053|0x0053: INVOKE  (r3 I:float) = (r2 I:android.view.View) android.view.View.getAlpha():float type: VIRTUAL \l0x0057: IPUT  \l  (r3 I:float)\l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.alpha float \l0x0059: INVOKE  (r3 I:float) = (r2 I:android.view.View) android.view.View.getRotation():float type: VIRTUAL \l0x005d: IPUT  \l  (r3 I:float)\l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.rotation float \l0x005f: INVOKE  (r3 I:float) = (r2 I:android.view.View) android.view.View.getRotationX():float type: VIRTUAL \l0x0063: IPUT  \l  (r3 I:float)\l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.rotationX float \l0x0065: INVOKE  (r3 I:float) = (r2 I:android.view.View) android.view.View.getRotationY():float type: VIRTUAL \l0x0069: IPUT  \l  (r3 I:float)\l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.rotationY float \l0x006b: INVOKE  (r3 I:float) = (r2 I:android.view.View) android.view.View.getScaleX():float type: VIRTUAL \l0x006f: IPUT  \l  (r3 I:float)\l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.scaleX float \l0x0071: INVOKE  (r3 I:float) = (r2 I:android.view.View) android.view.View.getScaleY():float type: VIRTUAL \l0x0075: IPUT  \l  (r3 I:float)\l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.scaleY float \l0x0077: INVOKE  (r3 I:float) = (r2 I:android.view.View) android.view.View.getPivotX():float type: VIRTUAL \l0x007b: INVOKE  (r4 I:float) = (r2 I:android.view.View) android.view.View.getPivotY():float type: VIRTUAL \l0x007f: CAST  (r6 I:double) = (double) (r3 I:float) \l0x0080: CONST  (r8 I:?[long, double]) = (0 ?[long, double]) \l0x0082: CMP_L  (r6 I:int) = (r6 I:double), (r8 I:double) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0084|0x0084: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x008b \l}"];
Node_11 [shape=record,label="{11\:\ 0x0086|0x0086: CAST  (r6 I:double) = (double) (r4 I:float) \l0x0087: CMP_L  (r6 I:int) = (r6 I:double), (r8 I:double) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0089|0x0089: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x008f \l}"];
Node_13 [shape=record,label="{13\:\ 0x008b|0x008b: IPUT  \l  (r3 I:float)\l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.transformPivotX float \l0x008d: IPUT  \l  (r4 I:float)\l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.transformPivotY float \l}"];
Node_14 [shape=record,label="{14\:\ 0x008f|0x008f: INVOKE  (r3 I:float) = (r2 I:android.view.View) android.view.View.getTranslationX():float type: VIRTUAL \l0x0093: IPUT  \l  (r3 I:float)\l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.translationX float \l0x0095: INVOKE  (r3 I:float) = (r2 I:android.view.View) android.view.View.getTranslationY():float type: VIRTUAL \l0x0099: IPUT  \l  (r3 I:float)\l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.translationY float \l0x009b: SGET  (r3 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x009d: CONST  (r4 I:?[int, float, short, byte, char]) = (21 ?[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x009f|0x009f: IF  (r3 I:?[int, byte, short, char]) \< (r4 I:?[int, byte, short, char])  \-\> B:19:0x00b1 \l}"];
Node_16 [shape=record,label="{16\:\ 0x00a1|0x00a1: INVOKE  (r3 I:float) = (r2 I:android.view.View) android.view.View.getTranslationZ():float type: VIRTUAL \l0x00a5: IPUT  \l  (r3 I:float)\l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.translationZ float \l0x00a7: IGET  (r3 I:boolean) = (r5 I:android.support.constraint.ConstraintSet$Constraint) android.support.constraint.ConstraintSet.Constraint.applyElevation boolean \l}"];
Node_17 [shape=record,label="{17\:\ 0x00a9|0x00a9: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x00b1 \l}"];
Node_18 [shape=record,label="{18\:\ 0x00ab|0x00ab: INVOKE  (r3 I:float) = (r2 I:android.view.View) android.view.View.getElevation():float type: VIRTUAL \l0x00af: IPUT  \l  (r3 I:float)\l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.elevation float \l}"];
Node_19 [shape=record,label="{19\:\ 0x00b1|0x00b1: INSTANCE_OF  (r3 I:boolean) = (r2 I:?[OBJECT, ARRAY]) android.support.constraint.Barrier \l}"];
Node_20 [shape=record,label="{20\:\ 0x00b3|0x00b3: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x00c9 \l}"];
Node_21 [shape=record,label="{21\:\ 0x00b5|0x00b5: CHECK_CAST  (r2 I:android.support.constraint.Barrier) = (android.support.constraint.Barrier) (r2 I:?[OBJECT, ARRAY]) \l0x00b7: INVOKE  (r3 I:boolean) = (r2 I:android.support.constraint.Barrier) android.support.constraint.Barrier.allowsGoneWidget():boolean type: VIRTUAL \l0x00bb: IPUT  \l  (r3 I:boolean)\l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.mBarrierAllowsGoneWidgets boolean \l0x00bd: INVOKE  (r3 I:int[]) = (r2 I:android.support.constraint.Barrier) android.support.constraint.Barrier.getReferencedIds():int[] type: VIRTUAL \l0x00c1: IPUT  \l  (r3 I:int[])\l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.mReferenceIds int[] \l0x00c3: INVOKE  (r2 I:int) = (r2 I:android.support.constraint.Barrier) android.support.constraint.Barrier.getType():int type: VIRTUAL \l0x00c7: IPUT  \l  (r2 I:int)\l  (r5 I:android.support.constraint.ConstraintSet$Constraint)\l android.support.constraint.ConstraintSet.Constraint.mBarrierDirection int \l}"];
Node_22 [shape=record,label="{22\:\ 0x00c9|0x00c9: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x00cd|0x00cd: NEW_INSTANCE  (r11 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x00cf: CONST_STR  (r0 I:java.lang.String) =  \"All children of ConstraintLayout must have ids to use ConstraintSet\" \l0x00d1: INVOKE  (r11 I:java.lang.RuntimeException), (r0 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x00d4|0x00d4: THROW  (r11 I:java.lang.Throwable) \l}"];
Node_25 [shape=record,label="{25\:\ 0x00d5|0x00d5: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.constraint.ConstraintSet.clone((r10 'this' I:android.support.constraint.ConstraintSet A[IMMUTABLE_TYPE, THIS]), (r11 I:android.support.constraint.ConstraintLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_25;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_23;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_19;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_1;
Node_23 -> Node_24;
}

