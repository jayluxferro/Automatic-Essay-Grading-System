digraph "CFG forandroid.support.constraint.ConstraintSet.createVerticalChain(IIII[I[FI)V" {
subgraph cluster_Region_1629834954 {
label = "R(2:0|(1:20)(1:(4:(1:9)|10|(3:13|(1:15)(0)|16)|17)(1:6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int[] r7 = r17\lfloat[] r8 = r18\l}"];
subgraph cluster_IfRegion_520581980 {
label = "IF [B:1:0x0007] THEN: R(1:20) ELSE: R(1:(4:(1:9)|10|(3:13|(1:15)(0)|16)|17)(1:6))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r7.length \< 2) goto L_0x0073\l}"];
subgraph cluster_Region_476335191 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x007a|throw new java.lang.IllegalArgumentException(\"must have 2 or more widgets in a chain\")\l}"];
}
subgraph cluster_Region_2020884875 {
label = "R(1:(4:(1:9)|10|(3:13|(1:15)(0)|16)|17)(1:6)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1572412721 {
label = "IF [B:2:0x0009, B:4:0x000d] THEN: R(4:(1:9)|10|(3:13|(1:15)(0)|16)|17) ELSE: R(1:6) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|if (r8 == null) goto L_0x0018\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|ADDED_TO_REGION\l|if (r8.length == r7.length) goto L_0x0018\l}"];
subgraph cluster_Region_928347682 {
label = "R(4:(1:9)|10|(3:13|(1:15)(0)|16)|17)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_262802310 {
label = "IF [B:8:0x0019] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0019|if (r8 != null) goto L_0x001b\l}"];
subgraph cluster_Region_2085434495 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001b|get(r7[0]).verticalWeight = r8[0]\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x0025|get(r7[0]).verticalChainStyle = r19\lconnect(r7[0], 3, r13, r14, 0)\lint r10 = 1\l}"];
subgraph cluster_LoopRegion_325877255 {
label = "LOOP:0: (3:13|(1:15)(0)|16)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x003c|if (r10 \< r7.length) goto L_0x003e\l}"];
subgraph cluster_Region_103393742 {
label = "R(3:13|(1:15)(0)|16)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x003e|int r0 = r7[r10]\lint int r11 = r10 \- 1\lr0 = r12\lconnect(r7[r10], 3, r7[r11], 4, 0)\lconnect(r7[r11], 4, r7[r10], 3, 0)\l}"];
subgraph cluster_IfRegion_2143735858 {
label = "IF [B:14:0x0056] THEN: R(1:15) ELSE: R(0)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0056|if (r8 != null) goto L_0x0058\l}"];
subgraph cluster_Region_332569528 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0058|get(r7[r10]).verticalWeight = r8[r10]\l}"];
}
subgraph cluster_Region_2032658353 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_16 [shape=record,label="{16\:\ 0x0062|LOOP_END\lLOOP:0: B:11:0x003b\-\>B:16:0x0062\l|r10++\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x0065|connect(r7[r7.length \- 1], 4, r15, r16, 0)\l}"];
}
subgraph cluster_Region_80138380 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0017|throw new java.lang.IllegalArgumentException(\"must have 2 or more widgets in a chain\")\l}"];
}
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x000b}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0010}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0018}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x003b|LOOP_START\lPHI: r10 \l  PHI: (r10v1 int) = (r10v0 int), (r10v2 int) binds: [B:10:0x0025, B:16:0x0062] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:11:0x003b\-\>B:16:0x0062\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0072}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0073}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0065|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0062|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0062|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.constraint.ConstraintSet.createVerticalChain((r12v0 'this' android.support.constraint.ConstraintSet A[IMMUTABLE_TYPE, THIS]), (r13v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 float[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_21[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_23[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_11;
Node_17 -> Node_18;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_11 -> Node_12;
Node_19 -> Node_20;
Node_21 -> Node_17;
Node_22 -> Node_16;
Node_23 -> Node_16;
}

