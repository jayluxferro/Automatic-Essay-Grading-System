digraph "CFG forandroid.support.v4.database.DatabaseUtilsCompat.appendSelectionArgs([Ljava\/lang\/String;[Ljava\/lang\/String;)[Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0016 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: ARRAY_LENGTH  (r0 I:int) = (r3 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0006 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: ARRAY_LENGTH  (r0 I:int) = (r3 I:?[]) \l0x0007: ARRAY_LENGTH  (r1 I:int) = (r4 I:?[]) \l0x0008: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0009: NEW_ARRAY  (r0 I:java.lang.String[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x000b: ARRAY_LENGTH  (r1 I:int) = (r3 I:?[]) \l0x000c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: INVOKE  \l  (r3 I:java.lang.Object)\l  (r2 I:int)\l  (r0 I:java.lang.Object)\l  (r2 I:int)\l  (r1 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0010: ARRAY_LENGTH  (r3 I:int) = (r3 I:?[]) \l0x0011: ARRAY_LENGTH  (r1 I:int) = (r4 I:?[]) \l0x0012: INVOKE  \l  (r4 I:java.lang.Object)\l  (r2 I:int)\l  (r0 I:java.lang.Object)\l  (r3 I:int)\l  (r1 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: RETURN  (r0 I:java.lang.String[]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: RETURN  (r4 I:java.lang.String[]) \l}"];
MethodNode[shape=record,label="{public static java.lang.String[] android.support.v4.database.DatabaseUtilsCompat.appendSelectionArgs((r3 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, java.lang.Deprecated, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_6;
Node_1 -> Node_2;
Node_2 -> Node_4;
Node_2 -> Node_6[style=dashed];
Node_4 -> Node_5;
}

