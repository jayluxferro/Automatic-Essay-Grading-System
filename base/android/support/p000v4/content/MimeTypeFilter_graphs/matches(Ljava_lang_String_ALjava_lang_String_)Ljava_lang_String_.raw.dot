digraph "CFG forandroid.support.v4.content.MimeTypeFilter.matches(Ljava\/lang\/String;[Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:java.lang.String) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: CONST_STR  (r1 I:java.lang.String) =  \"\/\" \l0x0006: INVOKE  (r5 I:java.lang.String[]) = (r5 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.split(java.lang.String):java.lang.String[] type: VIRTUAL \l0x000a: ARRAY_LENGTH  (r1 I:int) = (r6 I:?[]) \l0x000b: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:9:0x0020 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: AGET  (r3 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0010: CONST_STR  (r4 I:java.lang.String) =  \"\/\" \l0x0012: INVOKE  (r4 I:java.lang.String[]) = (r3 I:java.lang.String), (r4 I:java.lang.String) java.lang.String.split(java.lang.String):java.lang.String[] type: VIRTUAL \l0x0016: INVOKE  (r4 I:boolean) = (r5 I:java.lang.String[]), (r4 I:java.lang.String[]) android.support.v4.content.MimeTypeFilter.mimeTypeAgainstFilter(java.lang.String[], java.lang.String[]):boolean type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001d \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: RETURN  (r3 I:java.lang.String) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static java.lang.String android.support.v4.content.MimeTypeFilter.matches((r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_4;
}

