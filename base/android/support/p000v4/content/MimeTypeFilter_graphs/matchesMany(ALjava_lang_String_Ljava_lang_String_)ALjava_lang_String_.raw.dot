digraph "CFG forandroid.support.v4.content.MimeTypeFilter.matchesMany([Ljava\/lang\/String;Ljava\/lang\/String;)[Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: NEW_ARRAY  (r5 I:java.lang.String[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: RETURN  (r5 I:java.lang.String[]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0008: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x000b: CONST_STR  (r2 I:java.lang.String) =  \"\/\" \l0x000d: INVOKE  (r6 I:java.lang.String[]) = (r6 I:java.lang.String), (r2 I:java.lang.String) java.lang.String.split(java.lang.String):java.lang.String[] type: VIRTUAL \l0x0011: ARRAY_LENGTH  (r2 I:int) = (r5 I:?[]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r0 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: AGET  (r3 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0016: CONST_STR  (r4 I:java.lang.String) =  \"\/\" \l0x0018: INVOKE  (r4 I:java.lang.String[]) = (r3 I:java.lang.String), (r4 I:java.lang.String) java.lang.String.split(java.lang.String):java.lang.String[] type: VIRTUAL \l0x001c: INVOKE  (r4 I:boolean) = (r4 I:java.lang.String[]), (r6 I:java.lang.String[]) android.support.v4.content.MimeTypeFilter.mimeTypeAgainstFilter(java.lang.String[], java.lang.String[]):boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0025 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: INVOKE  (r1 I:java.util.ArrayList), (r3 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: INVOKE  (r5 I:int) = (r1 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x002c: NEW_ARRAY  (r5 I:java.lang.String[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x002e: INVOKE  (r5 I:java.lang.Object[]) = (r1 I:java.util.ArrayList), (r5 I:java.lang.Object[]) java.util.ArrayList.toArray(java.lang.Object[]):java.lang.Object[] type: VIRTUAL \l0x0032: CHECK_CAST  (r5 I:java.lang.String[]) = (java.lang.String[]) (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: RETURN  (r5 I:java.lang.String[]) \l}"];
MethodNode[shape=record,label="{public static java.lang.String[] android.support.v4.content.MimeTypeFilter.matchesMany((r5 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_5;
Node_10 -> Node_11;
}

