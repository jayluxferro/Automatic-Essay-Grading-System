digraph "CFG forandroid.support.v4.content.WakefulBroadcastReceiver.completeWakefulIntent(Landroid\/content\/Intent;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r5 = r5.getIntExtra(EXTRA_WAKE_LOCK_ID, 0)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r5 != 0) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|RETURN\l|return false\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|android.util.SparseArray\<android.os.PowerManager$WakeLock\> r0 = sActiveWakeLocks\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|monitor\-enter(r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ ?|android.os.PowerManager$WakeLock r1 = sActiveWakeLocks.get(r5)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|if (r1 == null) goto L_0x0022\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|r1.release()\lsActiveWakeLocks.remove(r5)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|monitor\-exit(r0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|RETURN\l|return true\l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|java.lang.StringBuilder r3 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr3.append(\"No active wake lock id #\")\lr3.append(r5)\landroid.util.Log.w(\"WakefulBroadcastReceiv.\", r3.toString())\l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|monitor\-exit(r0)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0039|RETURN\l|return true\l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|REMOVE\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_15 [shape=record,label="{15\:\ 0x003b|REMOVE\l}"];
Node_16 [shape=record,label="{16\:\ 0x003c|REMOVE\l|throw r5\l}"];
MethodNode[shape=record,label="{public static boolean android.support.v4.content.WakefulBroadcastReceiver.completeWakefulIntent((r5v0 android.content.Intent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

