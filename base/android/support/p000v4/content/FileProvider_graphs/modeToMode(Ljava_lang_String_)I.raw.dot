digraph "CFG forandroid.support.v4.content.FileProvider.modeToMode(Ljava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"r\" \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (268435456(0x10000000, float:2.5243549E\-29) ?[int, float, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: CONST_STR  (r0 I:java.lang.String) =  \"w\" \l0x000d: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0054 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: CONST_STR  (r0 I:java.lang.String) =  \"wt\" \l0x0015: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001c \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: CONST_STR  (r0 I:java.lang.String) =  \"wa\" \l0x001e: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0027 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (704643072(0x2a000000, float:1.1368684E\-13) ?[int, float, short, byte, char])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: CONST_STR  (r0 I:java.lang.String) =  \"rw\" \l0x0029: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|0x002d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0032 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (939524096(0x38000000, float:3.0517578E\-5) ?[int, float, short, byte, char])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: CONST_STR  (r0 I:java.lang.String) =  \"rwt\" \l0x0034: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|0x0038: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x003d \l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|0x003a: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1006632960(0x3c000000, float:0.0078125) ?[int, float, short, byte, char])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x003d|0x003d: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x003f: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0041: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0044: CONST_STR  (r2 I:java.lang.String) =  \"Invalid mode: \" \l0x0046: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0049: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004c: INVOKE  (r3 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0050: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|0x0053: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0054|0x0054: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (738197504(0x2c000000, float:1.8189894E\-12) ?[int, float, short, byte, char])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x0056|0x0056: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{private static int android.support.v4.content.FileProvider.modeToMode((r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_20;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_19;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_19[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_20;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_19 -> Node_20;
}

