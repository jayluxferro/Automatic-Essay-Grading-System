digraph "CFG forandroid.support.v4.content.FileProvider.getPathStrategy(Landroid\/content\/Context;Ljava\/lang\/String;)Landroid\/support\/v4\/content\/FileProvider$PathStrategy;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:java.util.HashMap\<java.lang.String, android.support.v4.content.FileProvider$PathStrategy\>) =  android.support.v4.content.FileProvider.sCache java.util.HashMap \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: SGET  (r1 I:java.util.HashMap\<java.lang.String, android.support.v4.content.FileProvider$PathStrategy\>) =  android.support.v4.content.FileProvider.sCache java.util.HashMap A[Catch:\{ all \-\> 0x002b \}, TRY_ENTER]\l0x0005: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.HashMap), (r3 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x002b \}]\l0x0009: CHECK_CAST  (r1 I:android.support.v4.content.FileProvider$PathStrategy) = (android.support.v4.content.FileProvider$PathStrategy) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002b \}, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0029 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|SYNTHETIC\lSplitter:B:5:0x000d\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x000d\l|0x000d: INVOKE  (r1 I:android.support.v4.content.FileProvider$PathStrategy) = (r2 I:android.content.Context), (r3 I:java.lang.String) android.support.v4.content.FileProvider.parsePathStrategy(android.content.Context, java.lang.String):android.support.v4.content.FileProvider$PathStrategy type: STATIC A[Catch:\{ IOException \-\> 0x0020, XmlPullParserException \-\> 0x0017 \}, TRY_ENTER]\l0x0010: NOP   A[TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|SYNTHETIC\lSplitter:B:7:0x0011\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0011\l|0x0011: SGET  (r2 I:java.util.HashMap\<java.lang.String, android.support.v4.content.FileProvider$PathStrategy\>) =  android.support.v4.content.FileProvider.sCache java.util.HashMap A[Catch:\{ all \-\> 0x002b \}, TRY_ENTER]\l0x0013: INVOKE  \l  (r2 I:java.util.HashMap)\l  (r3 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x002b \}]\l0x0016: GOTO  \-\> 0x0029 A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|ExcHandler: XmlPullParserException null\lSplitter:B:5:0x000d\l|0x0017: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|0x0018: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException A[Catch:\{ all \-\> 0x002b \}]\l0x001a: CONST_STR  (r1 I:java.lang.String) =  \"Failed to parse android.support.FILE_PROVIDER_PATHS meta\-data\" A[Catch:\{ all \-\> 0x002b \}]\l0x001c: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Throwable)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: THROW  (r3 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|ExcHandler: IOException null\lSplitter:B:5:0x000d\l|0x0020: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|0x0021: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException A[Catch:\{ all \-\> 0x002b \}]\l0x0023: CONST_STR  (r1 I:java.lang.String) =  \"Failed to parse android.support.FILE_PROVIDER_PATHS meta\-data\" A[Catch:\{ all \-\> 0x002b \}]\l0x0025: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Throwable)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|0x0028: THROW  (r3 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|0x0029: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x002a|0x002a: RETURN  (r1 I:android.support.v4.content.FileProvider$PathStrategy) A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x002b: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x002c|0x002c: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002b \}, TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x002d|0x002d: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static android.support.v4.content.FileProvider$PathStrategy android.support.v4.content.FileProvider.getPathStrategy((r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_17;
Node_3 -> Node_4;
Node_3 -> Node_17;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_15;
Node_5 -> Node_6;
Node_5 -> Node_12;
Node_5 -> Node_9;
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_17;
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

