digraph "CFG forandroid.support.v4.content.ModernAsyncTask.2.call()Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v4.content.ModernAsyncTask) = (r5 I:android.support.v4.content.ModernAsyncTask$2) android.support.v4.content.ModernAsyncTask.2.this$0 android.support.v4.content.ModernAsyncTask \l0x0002: IGET  (r0 I:java.util.concurrent.atomic.AtomicBoolean) = (r0 I:android.support.v4.content.ModernAsyncTask) android.support.v4.content.ModernAsyncTask.mTaskInvoked java.util.concurrent.atomic.AtomicBoolean \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: INVOKE  \l  (r0 I:java.util.concurrent.atomic.AtomicBoolean)\l  (r1 I:boolean)\l java.util.concurrent.atomic.AtomicBoolean.set(boolean):void type: VIRTUAL \l0x0008: CONST  (r0 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x000a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|SYNTHETIC\lSplitter:B:1:0x000b\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x000b\l|0x000b: INVOKE  (r0 I:int) android.os.Process.setThreadPriority(int):void type: STATIC A[Catch:\{ Throwable \-\> 0x0029 \}, TRY_ENTER]\l0x000e: IGET  (r0 I:android.support.v4.content.ModernAsyncTask) = (r5 I:android.support.v4.content.ModernAsyncTask$2) android.support.v4.content.ModernAsyncTask.2.this$0 android.support.v4.content.ModernAsyncTask A[Catch:\{ Throwable \-\> 0x0029 \}]\l0x0010: IGET  (r3 I:java.lang.Object[]) = (r5 I:android.support.v4.content.ModernAsyncTask$2) android.support.v4.content.ModernAsyncTask.2.mParams java.lang.Object[] A[Catch:\{ Throwable \-\> 0x0029 \}]\l0x0012: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:android.support.v4.content.ModernAsyncTask)\l  (r3 I:java.lang.Object[])\l android.support.v4.content.ModernAsyncTask.doInBackground(java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0029 \}]\l0x0015: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|SYNTHETIC\lSplitter:B:3:0x0016\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0016\l|0x0016: INVOKE   android.os.Binder.flushPendingCommands():void type: STATIC A[Catch:\{ Throwable \-\> 0x0022, all \-\> 0x001f \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: IGET  (r1 I:android.support.v4.content.ModernAsyncTask) = (r5 I:android.support.v4.content.ModernAsyncTask$2) android.support.v4.content.ModernAsyncTask.2.this$0 android.support.v4.content.ModernAsyncTask \l0x001b: INVOKE  \l  (r1 I:android.support.v4.content.ModernAsyncTask)\l  (r0 I:java.lang.Object)\l android.support.v4.content.ModernAsyncTask.postResult(java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: RETURN  (r0 I:Result) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|ExcHandler: all null\lSplitter:B:3:0x0016\l|0x001f: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|ExcHandler: Throwable null\lSplitter:B:3:0x0016\l|0x0022: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0024: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0025: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|ExcHandler: all null\lSplitter:B:14:0x002a\l|0x0027: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|ExcHandler: Throwable null\lSplitter:B:1:0x000b\l|0x0029: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|SYNTHETIC\lSplitter:B:14:0x002a\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x002a\l|0x002a: IGET  (r3 I:android.support.v4.content.ModernAsyncTask) = (r5 I:android.support.v4.content.ModernAsyncTask$2) android.support.v4.content.ModernAsyncTask.2.this$0 android.support.v4.content.ModernAsyncTask A[Catch:\{ all \-\> 0x0027 \}, TRY_ENTER]\l0x002c: IGET  (r3 I:java.util.concurrent.atomic.AtomicBoolean) = (r3 I:android.support.v4.content.ModernAsyncTask) android.support.v4.content.ModernAsyncTask.mCancelled java.util.concurrent.atomic.AtomicBoolean A[Catch:\{ all \-\> 0x0027 \}]\l0x002e: INVOKE  \l  (r3 I:java.util.concurrent.atomic.AtomicBoolean)\l  (r1 I:boolean)\l java.util.concurrent.atomic.AtomicBoolean.set(boolean):void type: VIRTUAL A[Catch:\{ all \-\> 0x0027 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0031|0x0031: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0027 \}, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0032|0x0032: IGET  (r0 I:android.support.v4.content.ModernAsyncTask) = (r5 I:android.support.v4.content.ModernAsyncTask$2) android.support.v4.content.ModernAsyncTask.2.this$0 android.support.v4.content.ModernAsyncTask \l0x0034: INVOKE  \l  (r0 I:android.support.v4.content.ModernAsyncTask)\l  (r2 I:java.lang.Object)\l android.support.v4.content.ModernAsyncTask.postResult(java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|0x0037: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public Result android.support.v4.content.ModernAsyncTask.2.call((r5 'this' I:android.support.v4.content.ModernAsyncTask$2 A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[()TResult;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_9;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_4 -> Node_9;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_14;
Node_11 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

