digraph "CFG forandroid.support.v4.content.FileProvider.SimplePathStrategy.getUriForFile(Ljava\/io\/File;)Landroid\/net\/Uri;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r0 I:java.lang.String) = (r6 I:java.io.File) java.io.File.getCanonicalPath():java.lang.String type: VIRTUAL A[Catch:\{ IOException \-\> 0x00bf \}, TRY_ENTER]\l0x0003: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: IGET  (r1 I:java.util.HashMap\<java.lang.String, java.io.File\>) = \l  (r5 I:android.support.v4.content.FileProvider$SimplePathStrategy)\l android.support.v4.content.FileProvider.SimplePathStrategy.mRoots java.util.HashMap \l0x0007: INVOKE  (r1 I:java.util.Set) = (r1 I:java.util.HashMap) java.util.HashMap.entrySet():java.util.Set type: VIRTUAL \l0x000b: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0043 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0019: CHECK_CAST  (r2 I:java.util.Map$Entry) = (java.util.Map$Entry) (r2 I:?[OBJECT, ARRAY]) \l0x001b: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x001f: CHECK_CAST  (r3 I:java.io.File) = (java.io.File) (r3 I:?[OBJECT, ARRAY]) \l0x0021: INVOKE  (r3 I:java.lang.String) = (r3 I:java.io.File) java.io.File.getPath():java.lang.String type: VIRTUAL \l0x0025: INVOKE  (r4 I:boolean) = (r0 I:java.lang.String), (r3 I:java.lang.String) java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|0x0029: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0041 \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: INVOKE  (r3 I:int) = (r3 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0031: INVOKE  (r4 I:java.lang.Object) = (r6 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x0035: CHECK_CAST  (r4 I:java.io.File) = (java.io.File) (r4 I:?[OBJECT, ARRAY]) \l0x0037: INVOKE  (r4 I:java.lang.String) = (r4 I:java.io.File) java.io.File.getPath():java.lang.String type: VIRTUAL \l0x003b: INVOKE  (r4 I:int) = (r4 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x003f|0x003f: IF  (r3 I:?[int, byte, short, char]) \<= (r4 I:?[int, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|0x0041: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0043|0x0043: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x00a8 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0045|0x0045: INVOKE  (r1 I:java.lang.Object) = (r6 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x0049: CHECK_CAST  (r1 I:java.io.File) = (java.io.File) (r1 I:?[OBJECT, ARRAY]) \l0x004b: INVOKE  (r1 I:java.lang.String) = (r1 I:java.io.File) java.io.File.getPath():java.lang.String type: VIRTUAL \l0x004f: CONST_STR  (r2 I:java.lang.String) =  \"\/\" \l0x0051: INVOKE  (r2 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.String) java.lang.String.endsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0055|0x0055: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0060 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0057|0x0057: INVOKE  (r1 I:int) = (r1 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x005b: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String), (r1 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0060|0x0060: INVOKE  (r1 I:int) = (r1 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0064: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x0066: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String), (r1 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x006a|0x006a: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x006c: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x006f: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x0073: CHECK_CAST  (r6 I:java.lang.String) = (java.lang.String) (r6 I:?[OBJECT, ARRAY]) \l0x0075: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.String) android.net.Uri.encode(java.lang.String):java.lang.String type: STATIC \l0x0079: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007c: CONST  (r6 I:?[int, float, short, byte, char]) = (47 ?[int, float, short, byte, char]) \l0x007e: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0081: CONST_STR  (r6 I:java.lang.String) =  \"\/\" \l0x0083: INVOKE  (r6 I:java.lang.String) = (r0 I:java.lang.String), (r6 I:java.lang.String) android.net.Uri.encode(java.lang.String, java.lang.String):java.lang.String type: STATIC \l0x0087: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008a: INVOKE  (r6 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x008e: NEW_INSTANCE  (r0 I:android.net.Uri$Builder) =  android.net.Uri$Builder \l0x0090: INVOKE  (r0 I:android.net.Uri$Builder) android.net.Uri.Builder.\<init\>():void type: DIRECT \l0x0093: CONST_STR  (r1 I:java.lang.String) =  \"content\" \l0x0095: INVOKE  (r0 I:android.net.Uri$Builder) = (r0 I:android.net.Uri$Builder), (r1 I:java.lang.String) android.net.Uri.Builder.scheme(java.lang.String):android.net.Uri$Builder type: VIRTUAL \l0x0099: IGET  (r1 I:java.lang.String) = \l  (r5 I:android.support.v4.content.FileProvider$SimplePathStrategy)\l android.support.v4.content.FileProvider.SimplePathStrategy.mAuthority java.lang.String \l0x009b: INVOKE  (r0 I:android.net.Uri$Builder) = (r0 I:android.net.Uri$Builder), (r1 I:java.lang.String) android.net.Uri.Builder.authority(java.lang.String):android.net.Uri$Builder type: VIRTUAL \l0x009f: INVOKE  (r6 I:android.net.Uri$Builder) = (r0 I:android.net.Uri$Builder), (r6 I:java.lang.String) android.net.Uri.Builder.encodedPath(java.lang.String):android.net.Uri$Builder type: VIRTUAL \l0x00a3: INVOKE  (r6 I:android.net.Uri) = (r6 I:android.net.Uri$Builder) android.net.Uri.Builder.build():android.net.Uri type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x00a7|0x00a7: RETURN  (r6 I:android.net.Uri) \l}"];
Node_18 [shape=record,label="{18\:\ 0x00a8|0x00a8: NEW_INSTANCE  (r6 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x00aa: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00ac: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00af: CONST_STR  (r2 I:java.lang.String) =  \"Failed to find configured root that contains \" \l0x00b1: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00b4: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00b7: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00bb: INVOKE  \l  (r6 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x00be|0x00be: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x00bf|0x00bf: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x00c1: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00c3: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00c6: CONST_STR  (r2 I:java.lang.String) =  \"Failed to resolve canonical path for \" \l0x00c8: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00cb: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x00ce: INVOKE  (r6 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00d2: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r6 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:0:0x0000\l}"];
Node_22 [shape=record,label="{22\:\ 0x00d5|0x00d5: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public android.net.Uri android.support.v4.content.FileProvider.SimplePathStrategy.getUriForFile((r5 'this' I:android.support.v4.content.FileProvider$SimplePathStrategy A[IMMUTABLE_TYPE, THIS]), (r6 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_21;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_3;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_3;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_3;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_22;
Node_21 -> Node_20;
}

