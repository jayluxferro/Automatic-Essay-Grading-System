digraph "CFG forandroid.support.v4.content.FileProvider.SimplePathStrategy.getFileForUri(Landroid\/net\/Uri;)Ljava\/io\/File;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.String) = (r5 I:android.net.Uri) android.net.Uri.getEncodedPath():java.lang.String type: VIRTUAL \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: CONST  (r2 I:?[int, float, short, byte, char]) = (47 ?[int, float, short, byte, char]) \l0x0007: INVOKE  (r2 I:int) = (r0 I:java.lang.String), (r2 I:int), (r1 I:int) java.lang.String.indexOf(int, int):int type: VIRTUAL \l0x000b: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.String), (r1 I:int), (r2 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x000f: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String) android.net.Uri.decode(java.lang.String):java.lang.String type: STATIC \l0x0013: ARITH  (r2 I:int) = (r2 I:int) + (r1 I:int) \l0x0014: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String), (r2 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL \l0x0018: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String) android.net.Uri.decode(java.lang.String):java.lang.String type: STATIC \l0x001c: IGET  (r1 I:java.util.HashMap\<java.lang.String, java.io.File\>) = \l  (r4 I:android.support.v4.content.FileProvider$SimplePathStrategy)\l android.support.v4.content.FileProvider.SimplePathStrategy.mRoots java.util.HashMap \l0x001e: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.HashMap), (r3 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0022: CHECK_CAST  (r1 I:java.io.File) = (java.io.File) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0024|0x0024: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x005d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0026|0x0026: NEW_INSTANCE  (r5 I:java.io.File) =  java.io.File \l0x0028: INVOKE  \l  (r5 I:java.io.File)\l  (r1 I:java.io.File)\l  (r0 I:java.lang.String)\l java.io.File.\<init\>(java.io.File, java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x002b|SYNTHETIC\lSplitter:B:3:0x002b\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x002b\l|0x002b: INVOKE  (r0 I:java.io.File) = (r5 I:java.io.File) java.io.File.getCanonicalFile():java.io.File type: VIRTUAL A[Catch:\{ IOException \-\> 0x0046 \}, TRY_ENTER]\l0x002e: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x002f|0x002f: INVOKE  (r5 I:java.lang.String) = (r0 I:java.io.File) java.io.File.getPath():java.lang.String type: VIRTUAL \l0x0033: INVOKE  (r1 I:java.lang.String) = (r1 I:java.io.File) java.io.File.getPath():java.lang.String type: VIRTUAL \l0x0037: INVOKE  (r5 I:boolean) = (r5 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x003b|0x003b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x003e \l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|0x003d: RETURN  (r0 I:java.io.File) \l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|0x003e: NEW_INSTANCE  (r5 I:java.lang.SecurityException) =  java.lang.SecurityException \l0x0040: CONST_STR  (r0 I:java.lang.String) =  \"Resolved path jumped beyond configured root\" \l0x0042: INVOKE  (r5 I:java.lang.SecurityException), (r0 I:java.lang.String) java.lang.SecurityException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0045|0x0045: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0046|0x0046: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0048: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004a: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x004d: CONST_STR  (r2 I:java.lang.String) =  \"Failed to resolve canonical path for \" \l0x004f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0052: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0055: INVOKE  (r5 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0059: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:3:0x002b\l}"];
Node_12 [shape=record,label="{12\:\ 0x005c|0x005c: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x005d|0x005d: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x005f: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0061: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0064: CONST_STR  (r2 I:java.lang.String) =  \"Unable to find configured root for \" \l0x0066: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0069: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x006c: INVOKE  (r5 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0070: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x0073|0x0073: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.io.File android.support.v4.content.FileProvider.SimplePathStrategy.getFileForUri((r4 'this' I:android.support.v4.content.FileProvider$SimplePathStrategy A[IMMUTABLE_TYPE, THIS]), (r5 I:android.net.Uri A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_12;
Node_11 -> Node_10;
Node_13 -> Node_14;
}

