digraph "CFG forandroid.support.v4.content.FileProvider.SimplePathStrategy.getUriForFile(Ljava\/io\/File;)Landroid\/net\/Uri;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ IOException \-\> 0x00bf \}\lSplitter:B:0:0x0000\l|java.lang.String r0 = r6.getCanonicalPath()     \/\/ Catch:\{ IOException \-\> 0x00bf \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r6 = null\ljava.util.Iterator r1 = r5.mRoots.entrySet().iterator()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|LOOP_START\lPHI: r6 \l  PHI: (r6v3 java.util.Map$Entry) = (r6v2 java.util.Map$Entry), (r6v14 java.util.Map$Entry) binds: [B:2:0x0004, B:23:0x000f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x000f\-\>B:23:0x000f\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|if (r1.hasNext() == false) goto L_0x0043\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|java.util.Map$Entry r2 = r1.next()\ljava.lang.String r3 = ((java.io.File) r2.getValue()).getPath()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|if (r0.startsWith(r3) == false) goto L_0x000f\l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|if (r6 == null) goto L_0x0041\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d}"];
Node_9 [shape=record,label="{9\:\ 0x003f|if (r3.length() \<= ((java.io.File) r6.getValue()).getPath().length()) goto L_0x000f\l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|r6 = r2\l}"];
Node_11 [shape=record,label="{11\:\ 0x0043|if (r6 == null) goto L_0x00a8\l}"];
Node_12 [shape=record,label="{12\:\ 0x0045|java.lang.String r1 = ((java.io.File) r6.getValue()).getPath()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0055|if (r1.endsWith(\"\/\") == false) goto L_0x0060\l}"];
Node_14 [shape=record,label="{14\:\ 0x0057|java.lang.String r0 = r0.substring(r1.length())\l}"];
Node_15 [shape=record,label="{15\:\ 0x0060|java.lang.String r0 = r0.substring(r1.length() + 1)\l}"];
Node_16 [shape=record,label="{16\:\ 0x006a|PHI: r0 \l  PHI: (r0v3 java.lang.String) = (r0v7 java.lang.String), (r0v8 java.lang.String) binds: [B:15:0x0060, B:14:0x0057] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(android.net.Uri.encode((java.lang.String) r6.getKey()))\lr1.append('\/')\lr1.append(android.net.Uri.encode(r0, \"\/\"))\ljava.lang.String r6 = r1.toString()\l}"];
Node_17 [shape=record,label="{17\:\ 0x00a7|RETURN\l|return new android.net.Uri.Builder().scheme(com.google.firebase.analytics.FirebaseAnalytics.Param.CONTENT).authority(r5.mAuthority).encodedPath(r6).build()\l}"];
Node_18 [shape=record,label="{18\:\ 0x00a8|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Failed to find configured root that contains \")\lr1.append(r0)\l}"];
Node_19 [shape=record,label="{19\:\ 0x00be|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
Node_20 [shape=record,label="{20\:\ 0x00bf|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Failed to resolve canonical path for \")\lr1.append(r6)\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:0:0x0000\l}"];
Node_22 [shape=record,label="{22\:\ 0x00d5|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|LOOP_END\lSYNTHETIC\lPHI: r6 \l  PHI: (r6v14 java.util.Map$Entry) = (r6v3 java.util.Map$Entry), (r6v15 java.util.Map$Entry), (r6v3 java.util.Map$Entry) binds: [B:25:0x000f, B:27:0x000f, B:26:0x000f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x000f\-\>B:23:0x000f\l}"];
Node_24 [shape=record,label="{24\:\ 0x0043|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x000f|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x000f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public android.net.Uri android.support.v4.content.FileProvider.SimplePathStrategy.getUriForFile((r5v0 'this' android.support.v4.content.FileProvider$SimplePathStrategy A[IMMUTABLE_TYPE, THIS]), (r6v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_21;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_24;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_25;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_26;
Node_10 -> Node_27;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_22;
Node_21 -> Node_20;
Node_23 -> Node_3;
Node_24 -> Node_11;
Node_25 -> Node_23;
Node_26 -> Node_23;
Node_27 -> Node_23;
}

