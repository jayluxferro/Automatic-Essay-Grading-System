digraph "CFG forandroid.support.v4.content.res.FontResourcesParserCompat.readFamily(Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/content\/res\/Resources;)Landroid\/support\/v4\/content\/res\/FontResourcesParserCompat$FamilyResourceEntry;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.content.res.TypedArray r0 = r9.obtainAttributes(android.util.Xml.asAttributeSet(r8), android.support.compat.C0031R.styleable.FontFamily)\ljava.lang.String r1 = r0.getString(android.support.compat.C0031R.styleable.FontFamily_fontProviderAuthority)\ljava.lang.String r2 = r0.getString(android.support.compat.C0031R.styleable.FontFamily_fontProviderPackage)\ljava.lang.String r3 = r0.getString(android.support.compat.C0031R.styleable.FontFamily_fontProviderQuery)\lint r4 = r0.getResourceId(android.support.compat.C0031R.styleable.FontFamily_fontProviderCerts, 0)\lint r5 = r0.getInteger(android.support.compat.C0031R.styleable.FontFamily_fontProviderFetchStrategy, 1)\lint r6 = r0.getInteger(android.support.compat.C0031R.styleable.FontFamily_fontProviderFetchTimeout, DEFAULT_TIMEOUT_MILLIS)\lr0.recycle()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0036|if (r1 == null) goto L_0x0055\l}"];
Node_2 [shape=record,label="{2\:\ 0x0038|if (r2 == null) goto L_0x0055\l}"];
Node_3 [shape=record,label="{3\:\ 0x003a|if (r3 == null) goto L_0x0055\l}"];
Node_4 [shape=record,label="{4\:\ 0x003c|LOOP_START\lLOOP:0: B:4:0x003c\-\>B:6:0x0042\l}"];
Node_5 [shape=record,label="{5\:\ 0x0040|if (r8.next() == 3) goto L_0x0046\l}"];
Node_6 [shape=record,label="{6\:\ 0x0042|LOOP_END\lLOOP:0: B:4:0x003c\-\>B:6:0x0042\l|skip(r8)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0046}"];
Node_8 [shape=record,label="{8\:\ 0x0054|RETURN\l|return new android.support.p000v4.content.res.FontResourcesParserCompat.ProviderResourceEntry(new android.support.p000v4.provider.FontRequest(r1, r2, r3, readCerts(r9, r4)), r5, r6)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0055|java.util.ArrayList r1 = new java.util.ArrayList()\l}"];
Node_10 [shape=record,label="{10\:\ 0x005a|LOOP_START\lLOOP:1: B:10:0x005a\-\>B:24:0x005a\l}"];
Node_11 [shape=record,label="{11\:\ 0x005e|if (r8.next() == 3) goto L_0x0080\l}"];
Node_12 [shape=record,label="{12\:\ 0x0060}"];
Node_13 [shape=record,label="{13\:\ 0x0065|if (r8.getEventType() == 2) goto L_0x0068\l}"];
Node_14 [shape=record,label="{14\:\ 0x0068}"];
Node_15 [shape=record,label="{15\:\ 0x0072|if (r8.getName().equals(\"font\") == false) goto L_0x007c\l}"];
Node_16 [shape=record,label="{16\:\ 0x0074|r1.add(readFont(r8, r9))\l}"];
Node_17 [shape=record,label="{17\:\ 0x007c|skip(r8)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0080}"];
Node_19 [shape=record,label="{19\:\ 0x0084|if (r1.isEmpty() == false) goto L_0x0088\l}"];
Node_20 [shape=record,label="{20\:\ 0x0086|RETURN\l|return null\l}"];
Node_21 [shape=record,label="{21\:\ 0x0088}"];
Node_22 [shape=record,label="{22\:\ 0x0099|RETURN\l|return new android.support.p000v4.content.res.FontResourcesParserCompat.FontFamilyFilesResourceEntry((android.support.p000v4.content.res.FontResourcesParserCompat.FontFileResourceEntry[]) r1.toArray(new android.support.p000v4.content.res.FontResourcesParserCompat.FontFileResourceEntry[r1.size()]))\l}"];
Node_23 [shape=record,label="{23\:\ 0x0046|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x005a|LOOP_END\lSYNTHETIC\lLOOP:1: B:10:0x005a\-\>B:24:0x005a\l}"];
Node_25 [shape=record,label="{25\:\ 0x0080|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x005a|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x005a|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x005a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry android.support.v4.content.res.FontResourcesParserCompat.readFamily((r8v0 org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_23;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_25;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_26[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_27;
Node_17 -> Node_28;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_21 -> Node_22;
Node_23 -> Node_7;
Node_24 -> Node_10;
Node_25 -> Node_18;
Node_26 -> Node_24;
Node_27 -> Node_24;
Node_28 -> Node_24;
}

