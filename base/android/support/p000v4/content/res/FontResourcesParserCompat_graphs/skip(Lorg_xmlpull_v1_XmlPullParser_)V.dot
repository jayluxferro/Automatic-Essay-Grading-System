digraph "CFG forandroid.support.v4.content.res.FontResourcesParserCompat.skip(Lorg\/xmlpull\/v1\/XmlPullParser;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = 1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:7:0x0001] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:7:0x0001\l|if (r0 \<= 0) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003}"];
Node_3 [shape=record,label="{3\:\ 0x0007|switch(r2.next()) \{\l    case 2: goto L_0x000e;\l    case 3: goto L_0x000b;\l    default: goto L_0x000a;\l\}\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|int r0 = r0 + \-1\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|int r0 = r0 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0001|LOOP_END\lSYNTHETIC\lPHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v3 int), (r0v4 int) binds: [B:9:0x0001, B:11:0x0001, B:10:0x0001] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:7:0x0001\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0001|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0001|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0001|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void android.support.v4.content.res.FontResourcesParserCompat.skip((r2v0 org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_3 -> Node_9;
Node_4 -> Node_10;
Node_5 -> Node_11;
Node_7 -> Node_1;
Node_8 -> Node_6;
Node_9 -> Node_7;
Node_10 -> Node_7;
Node_11 -> Node_7;
}

