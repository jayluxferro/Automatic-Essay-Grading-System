digraph "CFG forandroid.support.v4.content.res.FontResourcesParserCompat.parse(Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/content\/res\/Resources;)Landroid\/support\/v4\/content\/res\/FontResourcesParserCompat$FamilyResourceEntry;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r3 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l0x0004: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000b \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0012 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: INVOKE  (r3 I:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry) = \l  (r3 I:org.xmlpull.v1.XmlPullParser)\l  (r4 I:android.content.res.Resources)\l android.support.v4.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser, android.content.res.Resources):android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: RETURN  \l  (r3 I:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry)\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: NEW_INSTANCE  (r3 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x0014: CONST_STR  (r4 I:java.lang.String) =  \"No start tag found\" \l0x0016: INVOKE  \l  (r3 I:org.xmlpull.v1.XmlPullParserException)\l  (r4 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry android.support.v4.content.res.FontResourcesParserCompat.parse((r3 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_0[style=dashed];
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

