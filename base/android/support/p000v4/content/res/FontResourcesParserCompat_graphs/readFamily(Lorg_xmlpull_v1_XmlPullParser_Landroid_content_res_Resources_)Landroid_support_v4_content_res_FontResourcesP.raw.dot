digraph "CFG forandroid.support.v4.content.res.FontResourcesParserCompat.readFamily(Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/content\/res\/Resources;)Landroid\/support\/v4\/content\/res\/FontResourcesParserCompat$FamilyResourceEntry;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.util.AttributeSet) = (r8 I:org.xmlpull.v1.XmlPullParser) android.util.Xml.asAttributeSet(org.xmlpull.v1.XmlPullParser):android.util.AttributeSet type: STATIC \l0x0004: SGET  (r1 I:int[]) =  android.support.compat.R.styleable.FontFamily int[] \l0x0006: INVOKE  (r0 I:android.content.res.TypedArray) = \l  (r9 I:android.content.res.Resources)\l  (r0 I:android.util.AttributeSet)\l  (r1 I:int[])\l android.content.res.Resources.obtainAttributes(android.util.AttributeSet, int[]):android.content.res.TypedArray type: VIRTUAL \l0x000a: SGET  (r1 I:int) =  android.support.compat.R.styleable.FontFamily_fontProviderAuthority int \l0x000c: INVOKE  (r1 I:java.lang.String) = (r0 I:android.content.res.TypedArray), (r1 I:int) android.content.res.TypedArray.getString(int):java.lang.String type: VIRTUAL \l0x0010: SGET  (r2 I:int) =  android.support.compat.R.styleable.FontFamily_fontProviderPackage int \l0x0012: INVOKE  (r2 I:java.lang.String) = (r0 I:android.content.res.TypedArray), (r2 I:int) android.content.res.TypedArray.getString(int):java.lang.String type: VIRTUAL \l0x0016: SGET  (r3 I:int) =  android.support.compat.R.styleable.FontFamily_fontProviderQuery int \l0x0018: INVOKE  (r3 I:java.lang.String) = (r0 I:android.content.res.TypedArray), (r3 I:int) android.content.res.TypedArray.getString(int):java.lang.String type: VIRTUAL \l0x001c: SGET  (r4 I:int) =  android.support.compat.R.styleable.FontFamily_fontProviderCerts int \l0x001e: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001f: INVOKE  (r4 I:int) = \l  (r0 I:android.content.res.TypedArray)\l  (r4 I:int)\l  (r5 I:int)\l android.content.res.TypedArray.getResourceId(int, int):int type: VIRTUAL \l0x0023: SGET  (r5 I:int) =  android.support.compat.R.styleable.FontFamily_fontProviderFetchStrategy int \l0x0025: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0026: INVOKE  (r5 I:int) = \l  (r0 I:android.content.res.TypedArray)\l  (r5 I:int)\l  (r6 I:int)\l android.content.res.TypedArray.getInteger(int, int):int type: VIRTUAL \l0x002a: SGET  (r6 I:int) =  android.support.compat.R.styleable.FontFamily_fontProviderFetchTimeout int \l0x002c: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (500(0x1f4, float:7.0E\-43) ?[int, float, short, byte, char])\l \l0x002e: INVOKE  (r6 I:int) = \l  (r0 I:android.content.res.TypedArray)\l  (r6 I:int)\l  (r7 I:int)\l android.content.res.TypedArray.getInteger(int, int):int type: VIRTUAL \l0x0032: INVOKE  (r0 I:android.content.res.TypedArray) android.content.res.TypedArray.recycle():void type: VIRTUAL \l0x0035: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0036|0x0036: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0055 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0038|0x0038: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0055 \l}"];
Node_3 [shape=record,label="{3\:\ 0x003a|0x003a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0055 \l}"];
Node_4 [shape=record,label="{4\:\ 0x003c|0x003c: INVOKE  (r7 I:int) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0040|0x0040: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0046 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0042|0x0042: INVOKE  (r8 I:org.xmlpull.v1.XmlPullParser) android.support.v4.content.res.FontResourcesParserCompat.skip(org.xmlpull.v1.XmlPullParser):void type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0046|0x0046: INVOKE  (r8 I:java.util.List) = (r9 I:android.content.res.Resources), (r4 I:int) android.support.v4.content.res.FontResourcesParserCompat.readCerts(android.content.res.Resources, int):java.util.List type: STATIC \l0x004a: NEW_INSTANCE  (r9 I:android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry) =  android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry \l0x004c: NEW_INSTANCE  (r0 I:android.support.v4.provider.FontRequest) =  android.support.v4.provider.FontRequest \l0x004e: INVOKE  \l  (r0 I:android.support.v4.provider.FontRequest)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r8 I:java.util.List)\l android.support.v4.provider.FontRequest.\<init\>(java.lang.String, java.lang.String, java.lang.String, java.util.List):void type: DIRECT \l0x0051: INVOKE  \l  (r9 I:android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry)\l  (r0 I:android.support.v4.provider.FontRequest)\l  (r5 I:int)\l  (r6 I:int)\l android.support.v4.content.res.FontResourcesParserCompat.ProviderResourceEntry.\<init\>(android.support.v4.provider.FontRequest, int, int):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0054|0x0054: RETURN  \l  (r9 I:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry)\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0055|0x0055: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0057: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x005a|0x005a: INVOKE  (r2 I:int) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x005e|0x005e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0080 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0060|0x0060: INVOKE  (r2 I:int) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getEventType():int type: INTERFACE \l0x0064: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0065|0x0065: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0068 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0068|0x0068: INVOKE  (r2 I:java.lang.String) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE \l0x006c: CONST_STR  (r3 I:java.lang.String) =  \"font\" \l0x006e: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0072|0x0072: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x007c \l}"];
Node_17 [shape=record,label="{17\:\ 0x0074|0x0074: INVOKE  (r2 I:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry) = \l  (r8 I:org.xmlpull.v1.XmlPullParser)\l  (r9 I:android.content.res.Resources)\l android.support.v4.content.res.FontResourcesParserCompat.readFont(org.xmlpull.v1.XmlPullParser, android.content.res.Resources):android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry type: STATIC \l0x0078: INVOKE  (r1 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x007c|0x007c: INVOKE  (r8 I:org.xmlpull.v1.XmlPullParser) android.support.v4.content.res.FontResourcesParserCompat.skip(org.xmlpull.v1.XmlPullParser):void type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x0080|0x0080: INVOKE  (r8 I:boolean) = (r1 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_20 [shape=record,label="{20\:\ 0x0084|0x0084: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0088 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0086|0x0086: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x0087|0x0087: RETURN  \l  (r8 I:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry)\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x0088|0x0088: NEW_INSTANCE  (r8 I:android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry) =  android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry \l0x008a: INVOKE  (r9 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x008e: NEW_ARRAY  (r9 I:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) = (r9 I:int A[IMMUTABLE_TYPE]) type: android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[] \l0x0090: INVOKE  (r9 I:java.lang.Object[]) = (r1 I:java.util.List), (r9 I:java.lang.Object[]) java.util.List.toArray(java.lang.Object[]):java.lang.Object[] type: INTERFACE \l0x0094: CHECK_CAST  (r9 I:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) = (android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) (r9 I:?[OBJECT, ARRAY]) \l0x0096: INVOKE  \l  (r8 I:android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)\l  (r9 I:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[])\l android.support.v4.content.res.FontResourcesParserCompat.FontFamilyFilesResourceEntry.\<init\>(android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[]):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x0099|0x0099: RETURN  \l  (r8 I:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry)\l \l}"];
MethodNode[shape=record,label="{private static android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry android.support.v4.content.res.FontResourcesParserCompat.readFamily((r8 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_10[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_10;
Node_18 -> Node_10;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_23 -> Node_24;
}

