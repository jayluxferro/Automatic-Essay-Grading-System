digraph "CFG forandroid.support.v4.content.res.GradientColorInflaterCompat.createFromXml(Landroid\/content\/res\/Resources;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/content\/res\/Resources$Theme;)Landroid\/graphics\/Shader;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.util.AttributeSet) = (r5 I:org.xmlpull.v1.XmlPullParser) android.util.Xml.asAttributeSet(org.xmlpull.v1.XmlPullParser):android.util.AttributeSet type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: INVOKE  (r1 I:int) = (r5 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l0x0008: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0016 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: INVOKE  (r4 I:android.graphics.Shader) = \l  (r4 I:android.content.res.Resources)\l  (r5 I:org.xmlpull.v1.XmlPullParser)\l  (r0 I:android.util.AttributeSet)\l  (r6 I:android.content.res.Resources$Theme)\l android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):android.graphics.Shader type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|0x0015: RETURN  (r4 I:android.graphics.Shader) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|0x0016: NEW_INSTANCE  (r4 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x0018: CONST_STR  (r5 I:java.lang.String) =  \"No start tag found\" \l0x001a: INVOKE  \l  (r4 I:org.xmlpull.v1.XmlPullParserException)\l  (r5 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{static android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXml((r4 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.content.res.Resources$Theme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_1[style=dashed];
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
}

