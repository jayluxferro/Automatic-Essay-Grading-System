digraph "CFG forandroid.support.v4.content.res.GradientColorInflaterCompat.inflateChildElements(Landroid\/content\/res\/Resources;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/util\/AttributeSet;Landroid\/content\/res\/Resources$Theme;)Landroid\/support\/v4\/content\/res\/GradientColorInflaterCompat$ColorStops;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r9 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getDepth():int type: INTERFACE \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0006: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x0008: CONST  (r3 I:?[int, float, short, byte, char]) = (20 ?[int, float, short, byte, char]) \l0x000a: INVOKE  (r2 I:java.util.ArrayList), (r3 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x000d: NEW_INSTANCE  (r4 I:java.util.ArrayList) =  java.util.ArrayList \l0x000f: INVOKE  (r4 I:java.util.ArrayList), (r3 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: INVOKE  (r3 I:int) = (r9 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x008a \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: INVOKE  (r5 I:int) = (r9 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getDepth():int type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: IF  (r5 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:7:0x0021 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: CONST  (r6 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x008a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: IF  (r5 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:1:0x0012 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: INVOKE  (r3 I:java.lang.String) = (r9 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE \l0x002b: CONST_STR  (r5 I:java.lang.String) =  \"item\" \l0x002d: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0034 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0034|0x0034: SGET  (r3 I:int[]) =  android.support.compat.R.styleable.GradientColorItem int[] \l0x0036: INVOKE  (r3 I:android.content.res.TypedArray) = \l  (r8 I:android.content.res.Resources)\l  (r11 I:android.content.res.Resources$Theme)\l  (r10 I:android.util.AttributeSet)\l  (r3 I:int[])\l android.support.v4.content.res.TypedArrayUtils.obtainAttributes(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray type: STATIC \l0x003a: SGET  (r5 I:int) =  android.support.compat.R.styleable.GradientColorItem_android_color int \l0x003c: INVOKE  (r5 I:boolean) = (r3 I:android.content.res.TypedArray), (r5 I:int) android.content.res.TypedArray.hasValue(int):boolean type: VIRTUAL \l0x0040: SGET  (r6 I:int) =  android.support.compat.R.styleable.GradientColorItem_android_offset int \l0x0042: INVOKE  (r6 I:boolean) = (r3 I:android.content.res.TypedArray), (r6 I:int) android.content.res.TypedArray.hasValue(int):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0046|0x0046: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x006a \l}"];
Node_16 [shape=record,label="{16\:\ 0x0048|0x0048: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x006a \l}"];
Node_17 [shape=record,label="{17\:\ 0x004a|0x004a: SGET  (r5 I:int) =  android.support.compat.R.styleable.GradientColorItem_android_color int \l0x004c: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004d: INVOKE  (r5 I:int) = \l  (r3 I:android.content.res.TypedArray)\l  (r5 I:int)\l  (r6 I:int)\l android.content.res.TypedArray.getColor(int, int):int type: VIRTUAL \l0x0051: SGET  (r6 I:int) =  android.support.compat.R.styleable.GradientColorItem_android_offset int \l0x0053: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0054: INVOKE  (r6 I:float) = \l  (r3 I:android.content.res.TypedArray)\l  (r6 I:int)\l  (r7 I:float)\l android.content.res.TypedArray.getFloat(int, float):float type: VIRTUAL \l0x0058: INVOKE  (r3 I:android.content.res.TypedArray) android.content.res.TypedArray.recycle():void type: VIRTUAL \l0x005b: INVOKE  (r3 I:java.lang.Integer) = (r5 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x005f: INVOKE  (r4 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0062: INVOKE  (r3 I:java.lang.Float) = (r6 I:float) java.lang.Float.valueOf(float):java.lang.Float type: STATIC \l0x0066: INVOKE  (r2 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x006a|0x006a: NEW_INSTANCE  (r8 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x006c: NEW_INSTANCE  (r10 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x006e: INVOKE  (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0071: INVOKE  (r9 I:java.lang.String) = (r9 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getPositionDescription():java.lang.String type: INTERFACE \l0x0075: INVOKE  (r10 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0078: CONST_STR  (r9 I:java.lang.String) =  \": \<item\> tag requires a 'color' attribute and a 'offset' \" \l0x007a: INVOKE  (r10 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007d: CONST_STR  (r9 I:java.lang.String) =  \"attribute!\" \l0x007f: INVOKE  (r10 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0082: INVOKE  (r9 I:java.lang.String) = (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0086: INVOKE  \l  (r8 I:org.xmlpull.v1.XmlPullParserException)\l  (r9 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0089|0x0089: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x008a|0x008a: INVOKE  (r8 I:int) = (r4 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x008e|0x008e: IF  (r8 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:24:0x0096 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0090|0x0090: NEW_INSTANCE  (r8 I:android.support.v4.content.res.GradientColorInflaterCompat$ColorStops) =  android.support.v4.content.res.GradientColorInflaterCompat$ColorStops \l0x0092: INVOKE  \l  (r8 I:android.support.v4.content.res.GradientColorInflaterCompat$ColorStops)\l  (r4 I:java.util.List)\l  (r2 I:java.util.List)\l android.support.v4.content.res.GradientColorInflaterCompat.ColorStops.\<init\>(java.util.List, java.util.List):void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x0095|0x0095: RETURN  \l  (r8 I:android.support.v4.content.res.GradientColorInflaterCompat$ColorStops)\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x0096|0x0096: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x0097|0x0097: RETURN  \l  (r8 I:android.support.v4.content.res.GradientColorInflaterCompat$ColorStops)\l \l}"];
MethodNode[shape=record,label="{private static android.support.v4.content.res.GradientColorInflaterCompat$ColorStops android.support.v4.content.res.GradientColorInflaterCompat.inflateChildElements((r8 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.content.res.Resources$Theme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_20;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_20;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_1[style=dashed];
Node_10 -> Node_1;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_14;
Node_12 -> Node_1[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_1;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_24 -> Node_25;
}

