digraph "CFG forandroid.support.v4.content.res.ResourcesCompat.loadFont(Landroid\/content\/Context;Landroid\/content\/res\/Resources;Landroid\/util\/TypedValue;IILandroid\/support\/v4\/content\/res\/ResourcesCompat$FontCallback;Landroid\/os\/Handler;Z)Landroid\/graphics\/Typeface;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0001: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0003: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0009: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x000b: IGET  (r2 I:java.lang.CharSequence) = (r1 I:android.util.TypedValue) android.util.TypedValue.string java.lang.CharSequence \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x00ab \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: IGET  (r1 I:java.lang.CharSequence) = (r1 I:android.util.TypedValue) android.util.TypedValue.string java.lang.CharSequence \l0x0011: INVOKE  (r11 I:java.lang.String) = (r1 I:java.lang.CharSequence) java.lang.CharSequence.toString():java.lang.String type: INTERFACE \l0x0015: CONST_STR  (r1 I:java.lang.String) =  \"res\/\" \l0x0017: INVOKE  (r1 I:boolean) = (r11 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l0x001b: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001c: CONST  (r13 I:?[int, float, short, byte, char]) = (\-3 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0025 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0024 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: INVOKE  \l  (r9 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r13 I:int)\l  (r10 I:android.os.Handler)\l android.support.v4.content.res.ResourcesCompat.FontCallback.callbackFailAsync(int, android.os.Handler):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: RETURN  (r12 I:android.graphics.Typeface) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: INVOKE  (r1 I:android.graphics.Typeface) = \l  (r15 I:android.content.res.Resources)\l  (r4 I:int)\l  (r5 I:int)\l android.support.v4.graphics.TypefaceCompat.findFromCache(android.content.res.Resources, int, int):android.graphics.Typeface type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0031 \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0030 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: INVOKE  \l  (r9 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r1 I:android.graphics.Typeface)\l  (r10 I:android.os.Handler)\l android.support.v4.content.res.ResourcesCompat.FontCallback.callbackSuccessAsync(android.graphics.Typeface, android.os.Handler):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: RETURN  (r1 I:android.graphics.Typeface) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|SYNTHETIC\lSplitter:B:12:0x0031\l}"];
Node_13 [shape=record,label="{13\:\ ?|Splitter:B:12:0x0031\l|0x0031: INVOKE  (r1 I:java.lang.String) = (r11 I:java.lang.String) java.lang.String.toLowerCase():java.lang.String type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}, TRY_ENTER]\l0x0035: CONST_STR  (r2 I:java.lang.String) =  \".xml\" A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l0x0037: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.String) java.lang.String.endsWith(java.lang.String):boolean type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|0x003b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0065 A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|0x003d: INVOKE  (r1 I:android.content.res.XmlResourceParser) = (r15 I:android.content.res.Resources), (r4 I:int) android.content.res.Resources.getXml(int):android.content.res.XmlResourceParser type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l0x0041: INVOKE  (r2 I:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry) = \l  (r1 I:org.xmlpull.v1.XmlPullParser)\l  (r15 I:android.content.res.Resources)\l android.support.v4.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser, android.content.res.Resources):android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry type: STATIC A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0045|0x0045: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0054 A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0047|0x0047: CONST_STR  (r0 I:java.lang.String) =  \"ResourcesCompat\" A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l0x0049: CONST_STR  (r1 I:java.lang.String) =  \"Failed to find font\-family tag\" A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l0x004b: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x004e|0x004e: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0053 A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0050|0x0050: INVOKE  \l  (r9 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r13 I:int)\l  (r10 I:android.os.Handler)\l android.support.v4.content.res.ResourcesCompat.FontCallback.callbackFailAsync(int, android.os.Handler):void type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0053|0x0053: RETURN  (r12 I:android.graphics.Typeface) A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0054|0x0054: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l0x0055: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l0x0056: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l0x0058: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l0x005a: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l0x005c: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l0x005e: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l0x0060: INVOKE  (r0 I:android.graphics.Typeface) = \l  (r1 I:android.content.Context)\l  (r2 I:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry)\l  (r3 I:android.content.res.Resources)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r7 I:android.os.Handler)\l  (r8 I:boolean)\l android.support.v4.graphics.TypefaceCompat.createFromResourcesFamilyXml(android.content.Context, android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry, android.content.res.Resources, int, int, android.support.v4.content.res.ResourcesCompat$FontCallback, android.os.Handler, boolean):android.graphics.Typeface type: STATIC A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0064|0x0064: RETURN  (r0 I:android.graphics.Typeface) A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0065|0x0065: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l0x0066: INVOKE  (r0 I:android.graphics.Typeface) = \l  (r14 I:android.content.Context)\l  (r15 I:android.content.res.Resources)\l  (r4 I:int)\l  (r11 I:java.lang.String)\l  (r5 I:int)\l android.support.v4.graphics.TypefaceCompat.createFromResourcesFontFile(android.content.Context, android.content.res.Resources, int, java.lang.String, int):android.graphics.Typeface type: STATIC A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x006a|0x006a: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0075 A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x006c|0x006c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0072 A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x006e|0x006e: INVOKE  \l  (r9 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r0 I:android.graphics.Typeface)\l  (r10 I:android.os.Handler)\l android.support.v4.content.res.ResourcesCompat.FontCallback.callbackSuccessAsync(android.graphics.Typeface, android.os.Handler):void type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l0x0071: GOTO  \-\> 0x0075 A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0072|0x0072: INVOKE  \l  (r9 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r13 I:int)\l  (r10 I:android.os.Handler)\l android.support.v4.content.res.ResourcesCompat.FontCallback.callbackFailAsync(int, android.os.Handler):void type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x008e, IOException \-\> 0x0076 \}, TRY_LEAVE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0075|0x0075: RETURN  (r0 I:android.graphics.Typeface) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0076|ExcHandler: IOException null\lSplitter:B:12:0x0031\l|0x0076: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_30 [shape=record,label="{30\:\ 0x0077|0x0077: CONST_STR  (r1 I:java.lang.String) =  \"ResourcesCompat\" \l0x0079: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x007b: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x007e: CONST_STR  (r3 I:java.lang.String) =  \"Failed to read xml resource \" \l0x0080: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0083: INVOKE  (r2 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0086: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x008a: INVOKE  \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_31 [shape=record,label="{31\:\ 0x008e|ExcHandler: XmlPullParserException null\lSplitter:B:12:0x0031\l|0x008e: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_32 [shape=record,label="{32\:\ 0x008f|0x008f: CONST_STR  (r1 I:java.lang.String) =  \"ResourcesCompat\" \l0x0091: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0093: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0096: CONST_STR  (r3 I:java.lang.String) =  \"Failed to parse xml resource \" \l0x0098: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009b: INVOKE  (r2 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009e: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00a2: INVOKE  \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_33 [shape=record,label="{33\:\ 0x00a5|0x00a5: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x00aa \l}"];
Node_34 [shape=record,label="{34\:\ 0x00a7|0x00a7: INVOKE  \l  (r9 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r13 I:int)\l  (r10 I:android.os.Handler)\l android.support.v4.content.res.ResourcesCompat.FontCallback.callbackFailAsync(int, android.os.Handler):void type: VIRTUAL \l}"];
Node_35 [shape=record,label="{35\:\ 0x00aa|0x00aa: RETURN  (r12 I:android.graphics.Typeface) \l}"];
Node_36 [shape=record,label="{36\:\ 0x00ab|0x00ab: NEW_INSTANCE  (r2 I:android.content.res.Resources$NotFoundException) =  android.content.res.Resources$NotFoundException \l0x00ad: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00af: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00b2: CONST_STR  (r5 I:java.lang.String) =  \"Resource \"\" \l0x00b4: INVOKE  (r3 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00b7: INVOKE  (r0 I:java.lang.String) = (r15 I:android.content.res.Resources), (r4 I:int) android.content.res.Resources.getResourceName(int):java.lang.String type: VIRTUAL \l0x00bb: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00be: CONST_STR  (r0 I:java.lang.String) =  \"\" (\" \l0x00c0: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c3: INVOKE  (r0 I:java.lang.String) = (r17 I:int) java.lang.Integer.toHexString(int):java.lang.String type: STATIC \l0x00c7: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00ca: CONST_STR  (r0 I:java.lang.String) =  \") is not a Font: \" \l0x00cc: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00cf: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x00d2: INVOKE  (r0 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00d6: INVOKE  \l  (r2 I:android.content.res.Resources$NotFoundException)\l  (r0 I:java.lang.String)\l android.content.res.Resources.NotFoundException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_37 [shape=record,label="{37\:\ 0x00d9|0x00d9: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static android.graphics.Typeface android.support.v4.content.res.ResourcesCompat.loadFont((r14 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:android.util.TypedValue A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:android.support.v4.content.res.ResourcesCompat$FontCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:android.os.Handler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], , , , , Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_36;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_31;
Node_12 -> Node_29;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_23;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_36 -> Node_37;
}

