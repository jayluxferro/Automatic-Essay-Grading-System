digraph "CFG forandroid.support.v4.content.res.ResourcesCompat.getFont(Landroid\/content\/Context;ILandroid\/support\/v4\/content\/res\/ResourcesCompat$FontCallback;Landroid\/os\/Handler;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r9 I:java.lang.Object) android.support.v4.util.Preconditions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l0x0003: INVOKE  (r0 I:boolean) = (r7 I:android.content.Context) android.content.Context.isRestricted():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CONST  (r7 I:?[int, float, short, byte, char]) = (\-4 ?[int, float, short, byte, char]) \l0x000a: INVOKE  \l  (r9 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r7 I:int)\l  (r10 I:android.os.Handler)\l android.support.v4.content.res.ResourcesCompat.FontCallback.callbackFailAsync(int, android.os.Handler):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: NEW_INSTANCE  (r2 I:android.util.TypedValue) =  android.util.TypedValue \l0x0010: INVOKE  (r2 I:android.util.TypedValue) android.util.TypedValue.\<init\>():void type: DIRECT \l0x0013: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0015: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0016: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0017: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0018: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0019: INVOKE  \l  (r0 I:android.content.Context)\l  (r1 I:int)\l  (r2 I:android.util.TypedValue)\l  (r3 I:int)\l  (r4 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r5 I:android.os.Handler)\l  (r6 I:boolean)\l android.support.v4.content.res.ResourcesCompat.loadFont(android.content.Context, int, android.util.TypedValue, int, android.support.v4.content.res.ResourcesCompat$FontCallback, android.os.Handler, boolean):android.graphics.Typeface type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: RETURN   \l}"];
MethodNode[shape=record,label="{public static void android.support.v4.content.res.ResourcesCompat.getFont((r7 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.support.v4.content.res.ResourcesCompat$FontCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.os.Handler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.FontRes, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.content.res.Resources$NotFoundException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

