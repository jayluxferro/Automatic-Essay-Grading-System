digraph "CFG forandroid.support.v4.content.res.ComplexColorCompat.createFromXml(Landroid\/content\/res\/Resources;ILandroid\/content\/res\/Resources$Theme;)Landroid\/support\/v4\/content\/res\/ComplexColorCompat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r7 I:android.content.res.XmlResourceParser) = (r6 I:android.content.res.Resources), (r7 I:int) android.content.res.Resources.getXml(int):android.content.res.XmlResourceParser type: VIRTUAL \l0x0004: INVOKE  (r0 I:android.util.AttributeSet) = (r7 I:org.xmlpull.v1.XmlPullParser) android.util.Xml.asAttributeSet(org.xmlpull.v1.XmlPullParser):android.util.AttributeSet type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: INVOKE  (r1 I:int) = (r7 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l0x000c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0013 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0013 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0070 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INVOKE  (r1 I:java.lang.String) = (r7 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE \l0x0019: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x001a: INVOKE  (r4 I:int) = (r1 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL \l0x001e: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (89650992(0x557f730, float:1.01546526E\-35) ?[int, float, short, byte, char])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0033 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1191572447(0x4705f3df, float:34291.87) ?[int, float, short, byte, char])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0029 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: CONST_STR  (r2 I:java.lang.String) =  \"selector\" \l0x002b: INVOKE  (r2 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x003c \l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|0x0031: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: CONST_STR  (r4 I:java.lang.String) =  \"gradient\" \l0x0035: INVOKE  (r4 I:boolean) = (r1 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|0x0039: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x003c \l}"];
Node_17 [shape=record,label="{17\:\ 0x003c|0x003c: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x003d|0x003d: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1] t:[0x0067, 0x005e] \l}"];
Node_19 [shape=record,label="{19\:\ 0x0040|0x0040: NEW_INSTANCE  (r6 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x0042: NEW_INSTANCE  (r8 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0044: INVOKE  (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0047: INVOKE  (r7 I:java.lang.String) = (r7 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getPositionDescription():java.lang.String type: INTERFACE \l0x004b: INVOKE  (r8 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004e: CONST_STR  (r7 I:java.lang.String) =  \": unsupported complex color tag \" \l0x0050: INVOKE  (r8 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0053: INVOKE  (r8 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0056: INVOKE  (r7 I:java.lang.String) = (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x005a: INVOKE  \l  (r6 I:org.xmlpull.v1.XmlPullParserException)\l  (r7 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x005d|0x005d: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_21 [shape=record,label="{21\:\ 0x005e|0x005e: INVOKE  (r6 I:android.graphics.Shader) = \l  (r6 I:android.content.res.Resources)\l  (r7 I:org.xmlpull.v1.XmlPullParser)\l  (r0 I:android.util.AttributeSet)\l  (r8 I:android.content.res.Resources$Theme)\l android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):android.graphics.Shader type: STATIC \l0x0062: INVOKE  (r6 I:android.support.v4.content.res.ComplexColorCompat) = (r6 I:android.graphics.Shader) android.support.v4.content.res.ComplexColorCompat.from(android.graphics.Shader):android.support.v4.content.res.ComplexColorCompat type: STATIC \l}"];
Node_22 [shape=record,label="{22\:\ 0x0066|0x0066: RETURN  (r6 I:android.support.v4.content.res.ComplexColorCompat) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0067|0x0067: INVOKE  (r6 I:android.content.res.ColorStateList) = \l  (r6 I:android.content.res.Resources)\l  (r7 I:org.xmlpull.v1.XmlPullParser)\l  (r0 I:android.util.AttributeSet)\l  (r8 I:android.content.res.Resources$Theme)\l android.support.v4.content.res.ColorStateListInflaterCompat.createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):android.content.res.ColorStateList type: STATIC \l0x006b: INVOKE  (r6 I:android.support.v4.content.res.ComplexColorCompat) = (r6 I:android.content.res.ColorStateList) android.support.v4.content.res.ComplexColorCompat.from(android.content.res.ColorStateList):android.support.v4.content.res.ComplexColorCompat type: STATIC \l}"];
Node_24 [shape=record,label="{24\:\ 0x006f|0x006f: RETURN  (r6 I:android.support.v4.content.res.ComplexColorCompat) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0070|0x0070: NEW_INSTANCE  (r6 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x0072: CONST_STR  (r7 I:java.lang.String) =  \"No start tag found\" \l0x0074: INVOKE  \l  (r6 I:org.xmlpull.v1.XmlPullParserException)\l  (r7 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_26 [shape=record,label="{26\:\ 0x0077|0x0077: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static android.support.v4.content.res.ComplexColorCompat android.support.v4.content.res.ComplexColorCompat.createFromXml((r6 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.content.res.Resources$Theme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.ColorRes, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, org.xmlpull.v1.XmlPullParserException]\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_5;
Node_3 -> Node_1[style=dashed];
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_25;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_17[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_21;
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_25 -> Node_26;
}

