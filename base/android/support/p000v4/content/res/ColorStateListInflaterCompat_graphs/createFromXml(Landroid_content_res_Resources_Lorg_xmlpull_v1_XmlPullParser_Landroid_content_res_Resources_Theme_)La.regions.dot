digraph "CFG forandroid.support.v4.content.res.ColorStateListInflaterCompat.createFromXml(Landroid\/content\/res\/Resources;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/content\/res\/Resources$Theme;)Landroid\/content\/res\/ColorStateList;" {
subgraph cluster_Region_849577408 {
label = "R(3:0|(4:1|(1:(2:(1:7)|(1:9)))|1|10)|(0)(0)) | DECL_VAR: int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.util.AttributeSet android.util.AttributeSet r0 = android.util.Xml.asAttributeSet(r5)\l}"];
subgraph cluster_LoopRegion_920946974 {
label = "LOOP:0: (4:1|(1:(2:(1:7)|(1:9)))|1|10)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|LOOP_END\lLOOP:0: B:1:0x0004\-\>B:4:0x000c\l|if (r1 == 1) goto L_0x000f\l}"];
subgraph cluster_Region_1547041235 {
label = "R(4:1|(1:(2:(1:7)|(1:9)))|1|10)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|LOOP_START\lLOOP:0: B:1:0x0004\-\>B:4:0x000c\l|int r1 = r5.next()\l}"];
subgraph cluster_IfRegion_407340935 {
label = "IF [B:2:0x0009, B:4:0x000c] THEN: R(1:(2:(1:7)|(1:9))) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|ADDED_TO_REGION\l|if (r1 == 2) goto L_0x000f\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|LOOP_END\lLOOP:0: B:1:0x0004\-\>B:4:0x000c\l|if (r1 == 1) goto L_0x000f\l}"];
subgraph cluster_Region_243697187 {
label = "R(1:(2:(1:7)|(1:9)))";
node [shape=record,color=blue];
subgraph cluster_Region_1415636674 {
label = "R(2:(1:7)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1586537931 {
label = "IF [B:5:0x000f] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|EDGE_INSN: B:10:0x000f\-\>B:5:0x000f ?: BREAK  \l|if (r1 != 2) goto L_0x0016\l}"];
subgraph cluster_Region_1385336948 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0015|RETURN\l|return createFromXmlInner(r4, r5, r0, r6)\l}"];
}
}
subgraph cluster_Region_1548628875 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001d|throw new org.xmlpull.p030v1.XmlPullParserException(\"No start tag found\")\l}"];
}
}
}
}
Node_1 [shape=record,label="{1\:\ 0x0004|LOOP_START\lLOOP:0: B:1:0x0004\-\>B:4:0x000c\l|int r1 = r5.next()\l}"];
Node_10 [shape=record,label="{10\:\ 0x000f|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:10:0x000f\-\>B:5:0x000f ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_IfRegion_764945579 {
label = "IF [B:5:0x000f] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|EDGE_INSN: B:10:0x000f\-\>B:5:0x000f ?: BREAK  \l|if (r1 != 2) goto L_0x0016\l}"];
subgraph cluster_Region_1433453491 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_1878913184 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x000b}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0011}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0016}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x000f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static android.content.res.ColorStateList android.support.v4.content.res.ColorStateListInflaterCompat.createFromXml((r4v0 android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 android.content.res.Resources$Theme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lAnnotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lRemoved duplicated region for block: B:8:0x0016 \lRemoved duplicated region for block: B:6:0x0011 \lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_4 -> Node_1[style=dashed];
Node_4 -> Node_11;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_4 -> Node_1[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_1 -> Node_2;
Node_10 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_11 -> Node_5;
}

