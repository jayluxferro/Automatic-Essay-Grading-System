digraph "CFG forandroid.support.v4.content.res.ColorStateListInflaterCompat.inflate(Landroid\/content\/res\/Resources;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/util\/AttributeSet;Landroid\/content\/res\/Resources$Theme;)Landroid\/content\/res\/ColorStateList;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0002: INVOKE  (r1 I:int) = (r18 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getDepth():int type: INTERFACE \l0x0006: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x0008: CONST  (r3 I:?[int, float, short, byte, char]) = (20 ?[int, float, short, byte, char]) \l0x000a: NEW_ARRAY  (r3 I:int[][]) = (r3 I:int A[IMMUTABLE_TYPE]) type: int[][] \l0x000c: ARRAY_LENGTH  (r4 I:int) = (r3 I:?[]) \l0x000d: NEW_ARRAY  (r4 I:int[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x000f: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: INVOKE  (r7 I:int) = (r18 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x00b5 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: INVOKE  (r8 I:int) = (r18 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getDepth():int type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: IF  (r8 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:7:0x0020 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: CONST  (r9 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x00b5 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: CONST  (r9 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x00ae \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: IF  (r8 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:37:0x00ae \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: INVOKE  (r7 I:java.lang.String) = (r18 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE \l0x0029: CONST_STR  (r8 I:java.lang.String) =  \"item\" \l0x002b: INVOKE  (r7 I:boolean) = (r7 I:java.lang.String), (r8 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|0x002f: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0033 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|0x0033: SGET  (r7 I:int[]) =  android.support.compat.R.styleable.ColorStateListItem int[] \l0x0035: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0037: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0039: INVOKE  (r7 I:android.content.res.TypedArray) = \l  (r8 I:android.content.res.Resources)\l  (r9 I:android.content.res.Resources$Theme)\l  (r0 I:android.util.AttributeSet)\l  (r7 I:int[])\l android.support.v4.content.res.ColorStateListInflaterCompat.obtainAttributes(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray type: STATIC \l0x003d: SGET  (r10 I:int) =  android.support.compat.R.styleable.ColorStateListItem_android_color int \l0x003f: CONST  (r11 I:?[int, float, short, byte, char]) = \l  (\-65281(0xffffffffffff00ff, float:NaN) ?[int, float, short, byte, char])\l \l0x0042: INVOKE  (r10 I:int) = \l  (r7 I:android.content.res.TypedArray)\l  (r10 I:int)\l  (r11 I:int)\l android.content.res.TypedArray.getColor(int, int):int type: VIRTUAL \l0x0046: CONST  (r11 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0048: SGET  (r12 I:int) =  android.support.compat.R.styleable.ColorStateListItem_android_alpha int \l0x004a: INVOKE  (r12 I:boolean) = (r7 I:android.content.res.TypedArray), (r12 I:int) android.content.res.TypedArray.hasValue(int):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x004e|0x004e: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0057 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0050|0x0050: SGET  (r12 I:int) =  android.support.compat.R.styleable.ColorStateListItem_android_alpha int \l0x0052: INVOKE  (r11 I:float) = \l  (r7 I:android.content.res.TypedArray)\l  (r12 I:int)\l  (r11 I:float)\l android.content.res.TypedArray.getFloat(int, float):float type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0057|0x0057: SGET  (r12 I:int) =  android.support.compat.R.styleable.ColorStateListItem_alpha int \l0x0059: INVOKE  (r12 I:boolean) = (r7 I:android.content.res.TypedArray), (r12 I:int) android.content.res.TypedArray.hasValue(int):boolean type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x005d|0x005d: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0065 \l}"];
Node_18 [shape=record,label="{18\:\ 0x005f|0x005f: SGET  (r12 I:int) =  android.support.compat.R.styleable.ColorStateListItem_alpha int \l0x0061: INVOKE  (r11 I:float) = \l  (r7 I:android.content.res.TypedArray)\l  (r12 I:int)\l  (r11 I:float)\l android.content.res.TypedArray.getFloat(int, float):float type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0065|0x0065: INVOKE  (r7 I:android.content.res.TypedArray) android.content.res.TypedArray.recycle():void type: VIRTUAL \l0x0068: INVOKE  (r7 I:int) = (r19 I:android.util.AttributeSet) android.util.AttributeSet.getAttributeCount():int type: INTERFACE \l0x006c: NEW_ARRAY  (r12 I:int[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x006e: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006f: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x0070|0x0070: IF  (r13 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:33:0x0095 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0072|0x0072: INVOKE  (r15 I:int) = (r0 I:android.util.AttributeSet), (r13 I:int) android.util.AttributeSet.getAttributeNameResource(int):int type: INTERFACE \l0x0076: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (16843173(0x10101a5, float:2.3694738E\-38) ?[int, float, short, byte, char])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x0079|0x0079: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0091 \l}"];
Node_23 [shape=record,label="{23\:\ 0x007b|0x007b: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (16843551(0x101031f, float:2.3695797E\-38) ?[int, float, short, byte, char])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x007e|0x007e: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0091 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0080|0x0080: SGET  (r2 I:int) =  android.support.compat.R.attr.alpha int \l}"];
Node_26 [shape=record,label="{26\:\ 0x0082|0x0082: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0091 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0084|0x0084: ARITH  (r2 I:int) = (r14 I:int) + (1 int) \l0x0086: INVOKE  (r16 I:boolean) = \l  (r0 I:android.util.AttributeSet)\l  (r13 I:int)\l  (r5 I:boolean)\l android.util.AttributeSet.getAttributeBooleanValue(int, boolean):boolean type: INTERFACE \l}"];
Node_28 [shape=record,label="{28\:\ 0x008a|0x008a: IF  (r16 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x008d \l}"];
Node_30 [shape=record,label="{30\:\ 0x008d|0x008d: NEG  (r15 I:int) = (r15 I:int) \l}"];
Node_31 [shape=record,label="{31\:\ 0x008e|0x008e: APUT  \l  (r12 I:?[int, float][])\l  (r14 I:?[int, short, byte, char])\l  (r15 I:?[int, float])\l \l0x0090: MOVE  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_32 [shape=record,label="{32\:\ 0x0091|0x0091: ARITH  (r13 I:int) = (r13 I:int) + (1 int) \l0x0093: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0095|0x0095: INVOKE  (r2 I:int[]) = (r12 I:int[]), (r14 I:int) android.util.StateSet.trimStateSet(int[], int):int[] type: STATIC \l0x0099: INVOKE  (r7 I:int) = (r10 I:int), (r11 I:float) android.support.v4.content.res.ColorStateListInflaterCompat.modulateColorAlpha(int, float):int type: STATIC \l}"];
Node_34 [shape=record,label="{34\:\ 0x009d|0x009d: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x00a0 \l}"];
Node_35 [shape=record,label="{35\:\ 0x009f|0x009f: ARRAY_LENGTH  (r10 I:int) = (r2 I:?[]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x00a0|0x00a0: INVOKE  (r4 I:int[]) = (r4 I:int[]), (r6 I:int), (r7 I:int) android.support.v4.content.res.GrowingArrayUtils.append(int[], int, int):int[] type: STATIC \l0x00a4: INVOKE  (r2 I:java.lang.Object[]) = \l  (r3 I:java.lang.Object[])\l  (r6 I:int)\l  (r2 I:java.lang.Object)\l android.support.v4.content.res.GrowingArrayUtils.append(java.lang.Object[], int, java.lang.Object):java.lang.Object[] type: STATIC \l0x00a8: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x00a9: CHECK_CAST  (r3 I:int[][]) = (int[][]) (r3 I:?[OBJECT, ARRAY]) \l0x00ab: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l}"];
Node_37 [shape=record,label="{37\:\ 0x00ae|0x00ae: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x00b0: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x00b2|0x00b2: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x00b5|0x00b5: NEW_ARRAY  (r0 I:int[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x00b7: NEW_ARRAY  (r1 I:int[][]) = (r6 I:int A[IMMUTABLE_TYPE]) type: int[][] \l0x00b9: INVOKE  \l  (r4 I:java.lang.Object)\l  (r5 I:int)\l  (r0 I:java.lang.Object)\l  (r5 I:int)\l  (r6 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x00bc: INVOKE  \l  (r3 I:java.lang.Object)\l  (r5 I:int)\l  (r1 I:java.lang.Object)\l  (r5 I:int)\l  (r6 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x00bf: NEW_INSTANCE  (r2 I:android.content.res.ColorStateList) =  android.content.res.ColorStateList \l0x00c1: INVOKE  \l  (r2 I:android.content.res.ColorStateList)\l  (r1 I:int[][])\l  (r0 I:int[])\l android.content.res.ColorStateList.\<init\>(int[][], int[]):void type: DIRECT \l}"];
Node_40 [shape=record,label="{40\:\ 0x00c4|0x00c4: RETURN  (r2 I:android.content.res.ColorStateList) \l}"];
MethodNode[shape=record,label="{private static android.content.res.ColorStateList android.support.v4.content.res.ColorStateListInflaterCompat.inflate((r17 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:android.content.res.Resources$Theme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_39;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_39;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_37;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_37;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_37[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_33;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_32;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_32;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_32;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_31[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_20;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_1;
Node_39 -> Node_40;
}

