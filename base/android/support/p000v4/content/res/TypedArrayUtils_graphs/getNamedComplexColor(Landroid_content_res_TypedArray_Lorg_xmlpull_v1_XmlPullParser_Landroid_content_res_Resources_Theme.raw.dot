digraph "CFG forandroid.support.v4.content.res.TypedArrayUtils.getNamedComplexColor(Landroid\/content\/res\/TypedArray;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/content\/res\/Resources$Theme;Ljava\/lang\/String;II)Landroid\/support\/v4\/content\/res\/ComplexColorCompat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:boolean) = \l  (r2 I:org.xmlpull.v1.XmlPullParser)\l  (r4 I:java.lang.String)\l android.support.v4.content.res.TypedArrayUtils.hasAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0031 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: NEW_INSTANCE  (r2 I:android.util.TypedValue) =  android.util.TypedValue \l0x0008: INVOKE  (r2 I:android.util.TypedValue) android.util.TypedValue.\<init\>():void type: DIRECT \l0x000b: INVOKE  \l  (r1 I:android.content.res.TypedArray)\l  (r5 I:int)\l  (r2 I:android.util.TypedValue)\l android.content.res.TypedArray.getValue(int, android.util.TypedValue):boolean type: VIRTUAL \l0x000e: IGET  (r4 I:int) = (r2 I:android.util.TypedValue) android.util.TypedValue.type int \l0x0010: CONST  (r0 I:?[int, float, short, byte, char]) = (28 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r4 I:?[int, byte, short, char]) \< (r0 I:?[int, byte, short, char])  \-\> B:8:0x0021 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: IGET  (r4 I:int) = (r2 I:android.util.TypedValue) android.util.TypedValue.type int \l0x0016: CONST  (r0 I:?[int, float, short, byte, char]) = (31 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IF  (r4 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:8:0x0021 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IGET  (r1 I:int) = (r2 I:android.util.TypedValue) android.util.TypedValue.data int \l0x001c: INVOKE  (r1 I:android.support.v4.content.res.ComplexColorCompat) = (r1 I:int) android.support.v4.content.res.ComplexColorCompat.from(int):android.support.v4.content.res.ComplexColorCompat type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: RETURN  (r1 I:android.support.v4.content.res.ComplexColorCompat) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: INVOKE  (r2 I:android.content.res.Resources) = (r1 I:android.content.res.TypedArray) android.content.res.TypedArray.getResources():android.content.res.Resources type: VIRTUAL \l0x0025: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0026: INVOKE  (r1 I:int) = \l  (r1 I:android.content.res.TypedArray)\l  (r5 I:int)\l  (r4 I:int)\l android.content.res.TypedArray.getResourceId(int, int):int type: VIRTUAL \l0x002a: INVOKE  (r1 I:android.support.v4.content.res.ComplexColorCompat) = \l  (r2 I:android.content.res.Resources)\l  (r1 I:int)\l  (r3 I:android.content.res.Resources$Theme)\l android.support.v4.content.res.ComplexColorCompat.inflate(android.content.res.Resources, int, android.content.res.Resources$Theme):android.support.v4.content.res.ComplexColorCompat type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|0x002e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0031 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|0x0030: RETURN  (r1 I:android.support.v4.content.res.ComplexColorCompat) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|0x0031: INVOKE  (r1 I:android.support.v4.content.res.ComplexColorCompat) = (r6 I:int) android.support.v4.content.res.ComplexColorCompat.from(int):android.support.v4.content.res.ComplexColorCompat type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|0x0035: RETURN  (r1 I:android.support.v4.content.res.ComplexColorCompat) \l}"];
MethodNode[shape=record,label="{public static android.support.v4.content.res.ComplexColorCompat android.support.v4.content.res.TypedArrayUtils.getNamedComplexColor((r1 I:android.content.res.TypedArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.content.res.Resources$Theme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.StyleableRes, \{\}], Annotation[BUILD, android.support.annotation.ColorInt, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12;
}

