digraph "CFG forandroid.support.v4.content.res.GrowingArrayUtils.append([Ljava\/lang\/Object;ILjava\/lang\/Object;)[Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r0 I:int) = (r3 I:int) + (1 int) \l0x0002: ARRAY_LENGTH  (r1 I:int) = (r2 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:3:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: INVOKE  (r0 I:java.lang.Class) = (r2 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x0009: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.Class) java.lang.Class.getComponentType():java.lang.Class type: VIRTUAL \l0x000d: INVOKE  (r1 I:int) = (r3 I:int) android.support.v4.content.res.GrowingArrayUtils.growSize(int):int type: STATIC \l0x0011: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.Class), (r1 I:int) java.lang.reflect.Array.newInstance(java.lang.Class, int):java.lang.Object type: STATIC \l0x0015: CHECK_CAST  (r0 I:java.lang.Object[]) = (java.lang.Object[]) (r0 I:?[OBJECT, ARRAY]) \l0x0017: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0018: INVOKE  \l  (r2 I:java.lang.Object)\l  (r1 I:int)\l  (r0 I:java.lang.Object)\l  (r1 I:int)\l  (r3 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x001b: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: RETURN  (r2 I:T[]) \l}"];
MethodNode[shape=record,label="{public static T[] android.support.v4.content.res.GrowingArrayUtils.append((r2 I:T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>([TT;ITT;)[TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

