digraph "CFG forandroid.support.v4.content.res.GrowingArrayUtils.insert([JIIJ)[J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if ((r3 + 1) \> r2.length) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|java.lang.System.arraycopy(r2, r4, r2, r4 + 1, r3 \- r4)\lr2[r4] = r5\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|RETURN\l|return r2\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|long[] r3 = new long[growSize(r3)]\ljava.lang.System.arraycopy(r2, 0, r3, 0, r4)\lr3[r4] = r5\ljava.lang.System.arraycopy(r2, r4, r3, r4 + 1, r2.length \- r4)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|RETURN\l|return r3\l}"];
MethodNode[shape=record,label="{public static long[] android.support.v4.content.res.GrowingArrayUtils.insert((r2v0 long[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

