digraph "CFG forandroid.support.v4.content.pm.ShortcutInfoCompat.Builder.build()Landroid\/support\/v4\/content\/pm\/ShortcutInfoCompat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v4.content.pm.ShortcutInfoCompat) = \l  (r2 I:android.support.v4.content.pm.ShortcutInfoCompat$Builder)\l android.support.v4.content.pm.ShortcutInfoCompat.Builder.mInfo android.support.v4.content.pm.ShortcutInfoCompat \l0x0002: IGET  (r0 I:java.lang.CharSequence) = (r0 I:android.support.v4.content.pm.ShortcutInfoCompat) android.support.v4.content.pm.ShortcutInfoCompat.mLabel java.lang.CharSequence \l0x0004: INVOKE  (r0 I:boolean) = (r0 I:java.lang.CharSequence) android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r0 I:android.support.v4.content.pm.ShortcutInfoCompat) = \l  (r2 I:android.support.v4.content.pm.ShortcutInfoCompat$Builder)\l android.support.v4.content.pm.ShortcutInfoCompat.Builder.mInfo android.support.v4.content.pm.ShortcutInfoCompat \l0x000c: IGET  (r0 I:android.content.Intent[]) = (r0 I:android.support.v4.content.pm.ShortcutInfoCompat) android.support.v4.content.pm.ShortcutInfoCompat.mIntents android.content.Intent[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IGET  (r0 I:android.support.v4.content.pm.ShortcutInfoCompat) = \l  (r2 I:android.support.v4.content.pm.ShortcutInfoCompat$Builder)\l android.support.v4.content.pm.ShortcutInfoCompat.Builder.mInfo android.support.v4.content.pm.ShortcutInfoCompat \l0x0012: IGET  (r0 I:android.content.Intent[]) = (r0 I:android.support.v4.content.pm.ShortcutInfoCompat) android.support.v4.content.pm.ShortcutInfoCompat.mIntents android.content.Intent[] \l0x0014: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IGET  (r0 I:android.support.v4.content.pm.ShortcutInfoCompat) = \l  (r2 I:android.support.v4.content.pm.ShortcutInfoCompat$Builder)\l android.support.v4.content.pm.ShortcutInfoCompat.Builder.mInfo android.support.v4.content.pm.ShortcutInfoCompat \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: RETURN  (r0 I:android.support.v4.content.pm.ShortcutInfoCompat) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x001c: CONST_STR  (r1 I:java.lang.String) =  \"Shortcut must have an intent\" \l0x001e: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r1 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0024: CONST_STR  (r1 I:java.lang.String) =  \"Shortcut must have a non\-empty label\" \l0x0026: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r1 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public android.support.v4.content.pm.ShortcutInfoCompat android.support.v4.content.pm.ShortcutInfoCompat.Builder.build((r2 'this' I:android.support.v4.content.pm.ShortcutInfoCompat$Builder A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

