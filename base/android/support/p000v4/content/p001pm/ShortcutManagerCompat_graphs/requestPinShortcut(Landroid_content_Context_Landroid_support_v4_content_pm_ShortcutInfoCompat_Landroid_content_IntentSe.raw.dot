digraph "CFG forandroid.support.v4.content.pm.ShortcutManagerCompat.requestPinShortcut(Landroid\/content\/Context;Landroid\/support\/v4\/content\/pm\/ShortcutInfoCompat;Landroid\/content\/IntentSender;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (26 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:4:0x0017 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST_CLASS  (r0 I:java.lang.Class\<android.content.pm.ShortcutManager\>) =  android.content.pm.ShortcutManager.class \l0x0008: INVOKE  (r10 I:java.lang.Object) = (r10 I:android.content.Context), (r0 I:java.lang.Class) android.content.Context.getSystemService(java.lang.Class):java.lang.Object type: VIRTUAL \l0x000c: CHECK_CAST  (r10 I:android.content.pm.ShortcutManager) = (android.content.pm.ShortcutManager) (r10 I:?[OBJECT, ARRAY]) \l0x000e: INVOKE  (r11 I:android.content.pm.ShortcutInfo) = (r11 I:android.support.v4.content.pm.ShortcutInfoCompat) android.support.v4.content.pm.ShortcutInfoCompat.toShortcutInfo():android.content.pm.ShortcutInfo type: VIRTUAL \l0x0012: INVOKE  (r10 I:boolean) = \l  (r10 I:android.content.pm.ShortcutManager)\l  (r11 I:android.content.pm.ShortcutInfo)\l  (r12 I:android.content.IntentSender)\l android.content.pm.ShortcutManager.requestPinShortcut(android.content.pm.ShortcutInfo, android.content.IntentSender):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: RETURN  (r10 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: INVOKE  (r0 I:boolean) = (r10 I:android.content.Context) android.support.v4.content.pm.ShortcutManagerCompat.isRequestPinShortcutSupported(android.content.Context):boolean type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: RETURN  (r10 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: NEW_INSTANCE  (r0 I:android.content.Intent) =  android.content.Intent \l0x0021: CONST_STR  (r1 I:java.lang.String) =  \"com.android.launcher.action.INSTALL_SHORTCUT\" \l0x0023: INVOKE  (r0 I:android.content.Intent), (r1 I:java.lang.String) android.content.Intent.\<init\>(java.lang.String):void type: DIRECT \l0x0026: INVOKE  (r3 I:android.content.Intent) = \l  (r11 I:android.support.v4.content.pm.ShortcutInfoCompat)\l  (r0 I:android.content.Intent)\l android.support.v4.content.pm.ShortcutInfoCompat.addToIntent(android.content.Intent):android.content.Intent type: VIRTUAL \l0x002a: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0031 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: INVOKE  \l  (r10 I:android.content.Context)\l  (r3 I:android.content.Intent)\l android.content.Context.sendBroadcast(android.content.Intent):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: RETURN  (r11 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0032: NEW_INSTANCE  (r5 I:android.support.v4.content.pm.ShortcutManagerCompat$1) =  android.support.v4.content.pm.ShortcutManagerCompat$1 \l0x0034: INVOKE  \l  (r5 I:android.support.v4.content.pm.ShortcutManagerCompat$1)\l  (r12 I:android.content.IntentSender)\l android.support.v4.content.pm.ShortcutManagerCompat.1.\<init\>(android.content.IntentSender):void type: DIRECT \l0x0037: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0038: CONST  (r7 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0039: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003a: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003b: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x003c: INVOKE  \l  (r2 I:android.content.Context)\l  (r3 I:android.content.Intent)\l  (r4 I:java.lang.String)\l  (r5 I:android.content.BroadcastReceiver)\l  (r6 I:android.os.Handler)\l  (r7 I:int)\l  (r8 I:java.lang.String)\l  (r9 I:android.os.Bundle)\l android.content.Context.sendOrderedBroadcast(android.content.Intent, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x003f|0x003f: RETURN  (r11 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean android.support.v4.content.pm.ShortcutManagerCompat.requestPinShortcut((r10 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.support.v4.content.pm.ShortcutInfoCompat A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.content.IntentSender A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
}

