digraph "CFG forandroid.support.v4.print.PrintHelper.loadConstrainedBitmap(Landroid\/net\/Uri;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0066 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:android.content.Context) = (r7 I:android.support.v4.print.PrintHelper) android.support.v4.print.PrintHelper.mContext android.content.Context \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0066 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: NEW_INSTANCE  (r0 I:android.graphics.BitmapFactory$Options) =  android.graphics.BitmapFactory$Options \l0x0008: INVOKE  (r0 I:android.graphics.BitmapFactory$Options) android.graphics.BitmapFactory.Options.\<init\>():void type: DIRECT \l0x000b: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000c: IPUT  \l  (r1 I:boolean)\l  (r0 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.Options.inJustDecodeBounds boolean \l0x000e: INVOKE  \l  (r7 I:android.support.v4.print.PrintHelper)\l  (r8 I:android.net.Uri)\l  (r0 I:android.graphics.BitmapFactory$Options)\l android.support.v4.print.PrintHelper.loadBitmap(android.net.Uri, android.graphics.BitmapFactory$Options):android.graphics.Bitmap type: DIRECT \l0x0011: IGET  (r2 I:int) = (r0 I:android.graphics.BitmapFactory$Options) android.graphics.BitmapFactory.Options.outWidth int \l0x0013: IGET  (r0 I:int) = (r0 I:android.graphics.BitmapFactory$Options) android.graphics.BitmapFactory.Options.outHeight int \l0x0015: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:47:0x0065 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:7:0x001b \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: INVOKE  (r4 I:int) = (r2 I:int), (r0 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x001f: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (3500(0xdac, float:4.905E\-42) ?[int, float, short, byte, char])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: IF  (r4 I:?[int, byte, short, char]) \<= (r6 I:?[int, byte, short, char])  \-\> B:11:0x0029 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: ARITH  (r4 I:int) = (r4 I:int) \>\>\> (1 int) \l0x0026: ARITH  (r5 I:int) = (r5 I:int) \<\< (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:46:0x0064 \l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|0x002b: INVOKE  (r0 I:int) = (r2 I:int), (r0 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x002f: ARITH  (r0 I:int) = (r0 I:int) \/ (r5 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|0x0030: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:15:0x0033 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|0x0033: IGET  (r0 I:java.lang.Object) = (r7 I:android.support.v4.print.PrintHelper) android.support.v4.print.PrintHelper.mLock java.lang.Object \l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|0x0035: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|SYNTHETIC\lSplitter:B:17:0x0036\l}"];
Node_18 [shape=record,label="{18\:\ ?|Splitter:B:17:0x0036\l|0x0036: NEW_INSTANCE  (r2 I:android.graphics.BitmapFactory$Options) =  android.graphics.BitmapFactory$Options A[Catch:\{ all \-\> 0x0061 \}, TRY_ENTER]\l0x0038: INVOKE  (r2 I:android.graphics.BitmapFactory$Options) android.graphics.BitmapFactory.Options.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0061 \}]\l0x003b: IPUT  \l  (r2 I:android.graphics.BitmapFactory$Options)\l  (r7 I:android.support.v4.print.PrintHelper)\l android.support.v4.print.PrintHelper.mDecodeOptions android.graphics.BitmapFactory$Options A[Catch:\{ all \-\> 0x0061 \}]\l0x003d: IGET  (r2 I:android.graphics.BitmapFactory$Options) = (r7 I:android.support.v4.print.PrintHelper) android.support.v4.print.PrintHelper.mDecodeOptions android.graphics.BitmapFactory$Options A[Catch:\{ all \-\> 0x0061 \}]\l0x003f: IPUT  \l  (r1 I:boolean)\l  (r2 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.Options.inMutable boolean A[Catch:\{ all \-\> 0x0061 \}]\l0x0041: IGET  (r1 I:android.graphics.BitmapFactory$Options) = (r7 I:android.support.v4.print.PrintHelper) android.support.v4.print.PrintHelper.mDecodeOptions android.graphics.BitmapFactory$Options A[Catch:\{ all \-\> 0x0061 \}]\l0x0043: IPUT  (r5 I:int), (r1 I:android.graphics.BitmapFactory$Options) android.graphics.BitmapFactory.Options.inSampleSize int A[Catch:\{ all \-\> 0x0061 \}]\l0x0045: IGET  (r1 I:android.graphics.BitmapFactory$Options) = (r7 I:android.support.v4.print.PrintHelper) android.support.v4.print.PrintHelper.mDecodeOptions android.graphics.BitmapFactory$Options A[Catch:\{ all \-\> 0x0061 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0047|0x0047: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0061 \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0048|SYNTHETIC\lSplitter:B:20:0x0048\l}"];
Node_21 [shape=record,label="{21\:\ ?|Splitter:B:20:0x0048\l|0x0048: INVOKE  (r8 I:android.graphics.Bitmap) = \l  (r7 I:android.support.v4.print.PrintHelper)\l  (r8 I:android.net.Uri)\l  (r1 I:android.graphics.BitmapFactory$Options)\l android.support.v4.print.PrintHelper.loadBitmap(android.net.Uri, android.graphics.BitmapFactory$Options):android.graphics.Bitmap type: DIRECT A[Catch:\{ all \-\> 0x0056 \}, TRY_ENTER]\l0x004b: NOP   A[TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x004c|0x004c: IGET  (r0 I:java.lang.Object) = (r7 I:android.support.v4.print.PrintHelper) android.support.v4.print.PrintHelper.mLock java.lang.Object \l}"];
Node_23 [shape=record,label="{23\:\ 0x004e|0x004e: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x004f|SYNTHETIC\lSplitter:B:24:0x004f\l}"];
Node_25 [shape=record,label="{25\:\ ?|Splitter:B:24:0x004f\l|0x004f: IPUT  \l  (r3 I:android.graphics.BitmapFactory$Options)\l  (r7 I:android.support.v4.print.PrintHelper)\l android.support.v4.print.PrintHelper.mDecodeOptions android.graphics.BitmapFactory$Options A[Catch:\{ all \-\> 0x0053 \}, TRY_ENTER]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0051|0x0051: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0052|0x0052: RETURN  (r8 I:android.graphics.Bitmap) A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0053|ExcHandler: all null\lSplitter:B:24:0x004f\l|0x0053: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0054|0x0054: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0053 \}, TRY_LEAVE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0055|0x0055: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0056|ExcHandler: all null\lSplitter:B:20:0x0048\l|0x0056: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_32 [shape=record,label="{32\:\ 0x0057|0x0057: IGET  (r1 I:java.lang.Object) = (r7 I:android.support.v4.print.PrintHelper) android.support.v4.print.PrintHelper.mLock java.lang.Object \l}"];
Node_33 [shape=record,label="{33\:\ 0x0059|0x0059: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x005a|SYNTHETIC\lSplitter:B:34:0x005a\l}"];
Node_35 [shape=record,label="{35\:\ ?|Splitter:B:34:0x005a\l|0x005a: IPUT  \l  (r3 I:android.graphics.BitmapFactory$Options)\l  (r7 I:android.support.v4.print.PrintHelper)\l android.support.v4.print.PrintHelper.mDecodeOptions android.graphics.BitmapFactory$Options A[Catch:\{ all \-\> 0x005e \}, TRY_ENTER]\l}"];
Node_36 [shape=record,label="{36\:\ 0x005c|0x005c: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005e \}, TRY_LEAVE]\l}"];
Node_37 [shape=record,label="{37\:\ 0x005d|0x005d: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_38 [shape=record,label="{38\:\ 0x005e|ExcHandler: all null\lSplitter:B:34:0x005a\l|0x005e: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_39 [shape=record,label="{39\:\ 0x005f|SYNTHETIC\lSplitter:B:39:0x005f\l}"];
Node_40 [shape=record,label="{40\:\ ?|Splitter:B:39:0x005f\l|0x005f: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005e \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0060|0x0060: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0061|ExcHandler: all null\lSplitter:B:17:0x0036\l|0x0061: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_43 [shape=record,label="{43\:\ 0x0062|SYNTHETIC\lSplitter:B:43:0x0062\l}"];
Node_44 [shape=record,label="{44\:\ ?|Splitter:B:43:0x0062\l|0x0062: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0061 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0063|0x0063: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0064|0x0064: RETURN  (r3 I:android.graphics.Bitmap) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0065|0x0065: RETURN  (r3 I:android.graphics.Bitmap) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0066|0x0066: NEW_INSTANCE  (r8 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0068: CONST_STR  (r0 I:java.lang.String) =  \"bad argument to getScaledBitmap\" \l0x006a: INVOKE  \l  (r8 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_49 [shape=record,label="{49\:\ 0x006d|0x006d: THROW  (r8 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{android.graphics.Bitmap android.support.v4.print.PrintHelper.loadConstrainedBitmap((r7 'this' I:android.support.v4.print.PrintHelper A[IMMUTABLE_TYPE, THIS]), (r8 I:android.net.Uri A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.FileNotFoundException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_48;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_48;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_47;
Node_5 -> Node_7;
Node_5 -> Node_47[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_8;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_46;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_46[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_42;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_31;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_34 -> Node_38;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_38;
Node_40 -> Node_41;
Node_40 -> Node_38;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_43 -> Node_42;
Node_44 -> Node_45;
Node_44 -> Node_42;
Node_48 -> Node_49;
}

