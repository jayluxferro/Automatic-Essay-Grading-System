digraph "CFG forandroid.support.v4.print.PrintHelper.convertBitmapForColorMode(Landroid\/graphics\/Bitmap;I)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r5 I:android.graphics.Bitmap) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INVOKE  (r6 I:int) = (r5 I:android.graphics.Bitmap) android.graphics.Bitmap.getWidth():int type: VIRTUAL \l0x0008: INVOKE  (r0 I:int) = (r5 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL \l0x000c: SGET  (r1 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config \l0x000e: INVOKE  (r6 I:android.graphics.Bitmap) = \l  (r6 I:int)\l  (r0 I:int)\l  (r1 I:android.graphics.Bitmap$Config)\l android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap type: STATIC \l0x0012: NEW_INSTANCE  (r0 I:android.graphics.Canvas) =  android.graphics.Canvas \l0x0014: INVOKE  \l  (r0 I:android.graphics.Canvas)\l  (r6 I:android.graphics.Bitmap)\l android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void type: DIRECT \l0x0017: NEW_INSTANCE  (r1 I:android.graphics.Paint) =  android.graphics.Paint \l0x0019: INVOKE  (r1 I:android.graphics.Paint) android.graphics.Paint.\<init\>():void type: DIRECT \l0x001c: NEW_INSTANCE  (r2 I:android.graphics.ColorMatrix) =  android.graphics.ColorMatrix \l0x001e: INVOKE  (r2 I:android.graphics.ColorMatrix) android.graphics.ColorMatrix.\<init\>():void type: DIRECT \l0x0021: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0022: INVOKE  (r2 I:android.graphics.ColorMatrix), (r3 I:float) android.graphics.ColorMatrix.setSaturation(float):void type: VIRTUAL \l0x0025: NEW_INSTANCE  (r4 I:android.graphics.ColorMatrixColorFilter) =  android.graphics.ColorMatrixColorFilter \l0x0027: INVOKE  \l  (r4 I:android.graphics.ColorMatrixColorFilter)\l  (r2 I:android.graphics.ColorMatrix)\l android.graphics.ColorMatrixColorFilter.\<init\>(android.graphics.ColorMatrix):void type: DIRECT \l0x002a: INVOKE  \l  (r1 I:android.graphics.Paint)\l  (r4 I:android.graphics.ColorFilter)\l android.graphics.Paint.setColorFilter(android.graphics.ColorFilter):android.graphics.ColorFilter type: VIRTUAL \l0x002d: INVOKE  \l  (r0 I:android.graphics.Canvas)\l  (r5 I:android.graphics.Bitmap)\l  (r3 I:float)\l  (r3 I:float)\l  (r1 I:android.graphics.Paint)\l android.graphics.Canvas.drawBitmap(android.graphics.Bitmap, float, float, android.graphics.Paint):void type: VIRTUAL \l0x0030: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0031: INVOKE  \l  (r0 I:android.graphics.Canvas)\l  (r5 I:android.graphics.Bitmap)\l android.graphics.Canvas.setBitmap(android.graphics.Bitmap):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0034|0x0034: RETURN  (r6 I:android.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{static android.graphics.Bitmap android.support.v4.print.PrintHelper.convertBitmapForColorMode((r5 I:android.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

