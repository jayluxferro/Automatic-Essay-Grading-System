digraph "CFG forandroid.support.v4.print.PrintHelper.\<init\>(Landroid\/content\/Context;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: IPUT  \l  (r0 I:android.graphics.BitmapFactory$Options)\l  (r1 I:android.support.v4.print.PrintHelper)\l android.support.v4.print.PrintHelper.mDecodeOptions android.graphics.BitmapFactory$Options \l0x0006: NEW_INSTANCE  (r0 I:java.lang.Object) =  java.lang.Object \l0x0008: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x000b: IPUT  \l  (r0 I:java.lang.Object)\l  (r1 I:android.support.v4.print.PrintHelper)\l android.support.v4.print.PrintHelper.mLock java.lang.Object \l0x000d: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000e: IPUT  (r0 I:int), (r1 I:android.support.v4.print.PrintHelper) android.support.v4.print.PrintHelper.mScaleMode int \l0x0010: IPUT  (r0 I:int), (r1 I:android.support.v4.print.PrintHelper) android.support.v4.print.PrintHelper.mColorMode int \l0x0012: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0013: IPUT  (r0 I:int), (r1 I:android.support.v4.print.PrintHelper) android.support.v4.print.PrintHelper.mOrientation int \l0x0015: IPUT  \l  (r2 I:android.content.Context)\l  (r1 I:android.support.v4.print.PrintHelper)\l android.support.v4.print.PrintHelper.mContext android.content.Context \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.print.PrintHelper.\<init\>((r1 'this' I:android.support.v4.print.PrintHelper A[IMMUTABLE_TYPE, THIS]), (r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

