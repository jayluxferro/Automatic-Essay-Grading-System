digraph "CFG forandroid.support.v4.widget.DrawerLayout.ViewDragCallback.onViewPositionChanged(Landroid\/view\/View;IIII)V" {
subgraph cluster_Region_147717542 {
label = "R(4:0|(1:2)(1:3)|4|8) | DECL_VAR: float null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r3 = r1.getWidth()\l}"];
subgraph cluster_IfRegion_1376628135 {
label = "IF [B:1:0x000b] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000b|if (android.support.p000v4.widget.DrawerLayout.this.checkDrawerViewAbsoluteGravity(r1, 3) == true) goto L_0x000d\l}"];
subgraph cluster_Region_1596710755 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000d|float r2 = ((float) (r2 + r3)) \/ ((float) r3)\l}"];
}
subgraph cluster_Region_366457495 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0012|float r2 = ((float) (android.support.p000v4.widget.DrawerLayout.this.getWidth() \- r2)) \/ ((float) r3)\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x001c|PHI: r2 \l  PHI: (r2v1 float) = (r2v7 float), (r2v10 float) binds: [B:3:0x0012, B:2:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|android.support.p000v4.widget.DrawerLayout.this.setDrawerViewOffset(r1, r2)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|PHI: r2 \l  PHI: (r2v3 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r1.setVisibility(r2 == 0.0f ? 4 : 0)\landroid.support.p000v4.widget.DrawerLayout.this.invalidate()\l}"];
}
Node_5 [shape=record,color=red,label="{5\:\ 0x0024}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0026}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0028}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0031}"];
MethodNode[shape=record,label="{public void android.support.v4.widget.DrawerLayout.ViewDragCallback.onViewPositionChanged((r0v0 'this' android.support.v4.widget.DrawerLayout$ViewDragCallback A[IMMUTABLE_TYPE, THIS]), (r1v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_8 -> Node_9;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
}

