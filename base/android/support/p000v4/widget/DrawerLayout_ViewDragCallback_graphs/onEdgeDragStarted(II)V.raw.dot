digraph "CFG forandroid.support.v4.widget.DrawerLayout.ViewDragCallback.onEdgeDragStarted(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (r0 I:?[int, boolean, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r2 I:android.support.v4.widget.DrawerLayout) = \l  (r1 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.this$0 android.support.v4.widget.DrawerLayout \l0x0006: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0007: INVOKE  (r2 I:android.view.View) = (r2 I:android.support.v4.widget.DrawerLayout), (r0 I:int) android.support.v4.widget.DrawerLayout.findDrawerWithGravity(int):android.view.View type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IGET  (r2 I:android.support.v4.widget.DrawerLayout) = \l  (r1 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.this$0 android.support.v4.widget.DrawerLayout \l0x000e: CONST  (r0 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x000f: INVOKE  (r2 I:android.view.View) = (r2 I:android.support.v4.widget.DrawerLayout), (r0 I:int) android.support.v4.widget.DrawerLayout.findDrawerWithGravity(int):android.view.View type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0022 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IGET  (r0 I:android.support.v4.widget.DrawerLayout) = \l  (r1 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.this$0 android.support.v4.widget.DrawerLayout \l0x0017: INVOKE  (r0 I:int) = \l  (r0 I:android.support.v4.widget.DrawerLayout)\l  (r2 I:android.view.View)\l android.support.v4.widget.DrawerLayout.getDrawerLockMode(android.view.View):int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0022 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IGET  (r0 I:android.support.v4.widget.ViewDragHelper) = \l  (r1 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.mDragger android.support.v4.widget.ViewDragHelper \l0x001f: INVOKE  \l  (r0 I:android.support.v4.widget.ViewDragHelper)\l  (r2 I:android.view.View)\l  (r3 I:int)\l android.support.v4.widget.ViewDragHelper.captureChildView(android.view.View, int):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.widget.DrawerLayout.ViewDragCallback.onEdgeDragStarted((r1 'this' I:android.support.v4.widget.DrawerLayout$ViewDragCallback A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
}

