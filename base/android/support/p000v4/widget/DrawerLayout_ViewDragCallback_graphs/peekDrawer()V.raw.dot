digraph "CFG forandroid.support.v4.widget.DrawerLayout.ViewDragCallback.peekDrawer()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v4.widget.ViewDragHelper) = \l  (r6 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.mDragger android.support.v4.widget.ViewDragHelper \l0x0002: INVOKE  (r0 I:int) = (r0 I:android.support.v4.widget.ViewDragHelper) android.support.v4.widget.ViewDragHelper.getEdgeSize():int type: VIRTUAL \l0x0006: IGET  (r1 I:int) = \l  (r6 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.mAbsGravity int \l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000a: CONST  (r4 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0021 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IGET  (r5 I:android.support.v4.widget.DrawerLayout) = \l  (r6 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.this$0 android.support.v4.widget.DrawerLayout \l0x0014: INVOKE  (r4 I:android.view.View) = (r5 I:android.support.v4.widget.DrawerLayout), (r4 I:int) android.support.v4.widget.DrawerLayout.findDrawerWithGravity(int):android.view.View type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: INVOKE  (r2 I:int) = (r4 I:android.view.View) android.view.View.getWidth():int type: VIRTUAL \l0x001e: NEG  (r2 I:int) = (r2 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: IGET  (r2 I:android.support.v4.widget.DrawerLayout) = \l  (r6 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.this$0 android.support.v4.widget.DrawerLayout \l0x0023: CONST  (r4 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0024: INVOKE  (r4 I:android.view.View) = (r2 I:android.support.v4.widget.DrawerLayout), (r4 I:int) android.support.v4.widget.DrawerLayout.findDrawerWithGravity(int):android.view.View type: VIRTUAL \l0x0028: IGET  (r2 I:android.support.v4.widget.DrawerLayout) = \l  (r6 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.this$0 android.support.v4.widget.DrawerLayout \l0x002a: INVOKE  (r2 I:int) = (r2 I:android.support.v4.widget.DrawerLayout) android.support.v4.widget.DrawerLayout.getWidth():int type: VIRTUAL \l0x002e: ARITH  (r2 I:int) = (r2 I:int) \- (r0 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|0x002f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0067 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|0x0031: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0039 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|0x0033: INVOKE  (r0 I:int) = (r4 I:android.view.View) android.view.View.getLeft():int type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|0x0037: IF  (r0 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:17:0x0041 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|0x0039: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0067 \l}"];
Node_15 [shape=record,label="{15\:\ 0x003b|0x003b: INVOKE  (r0 I:int) = (r4 I:android.view.View) android.view.View.getLeft():int type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: IF  (r0 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:20:0x0067 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0041|0x0041: IGET  (r0 I:android.support.v4.widget.DrawerLayout) = \l  (r6 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.this$0 android.support.v4.widget.DrawerLayout \l0x0043: INVOKE  (r0 I:int) = \l  (r0 I:android.support.v4.widget.DrawerLayout)\l  (r4 I:android.view.View)\l android.support.v4.widget.DrawerLayout.getDrawerLockMode(android.view.View):int type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0047|0x0047: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0067 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0049|0x0049: INVOKE  (r0 I:android.view.ViewGroup$LayoutParams) = (r4 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x004d: CHECK_CAST  (r0 I:android.support.v4.widget.DrawerLayout$LayoutParams) = (android.support.v4.widget.DrawerLayout$LayoutParams) (r0 I:?[OBJECT, ARRAY]) \l0x004f: IGET  (r1 I:android.support.v4.widget.ViewDragHelper) = \l  (r6 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.mDragger android.support.v4.widget.ViewDragHelper \l0x0051: INVOKE  (r5 I:int) = (r4 I:android.view.View) android.view.View.getTop():int type: VIRTUAL \l0x0055: INVOKE  \l  (r1 I:android.support.v4.widget.ViewDragHelper)\l  (r4 I:android.view.View)\l  (r2 I:int)\l  (r5 I:int)\l android.support.v4.widget.ViewDragHelper.smoothSlideViewTo(android.view.View, int, int):boolean type: VIRTUAL \l0x0058: IPUT  \l  (r3 I:boolean)\l  (r0 I:android.support.v4.widget.DrawerLayout$LayoutParams)\l android.support.v4.widget.DrawerLayout.LayoutParams.isPeeking boolean \l0x005a: IGET  (r0 I:android.support.v4.widget.DrawerLayout) = \l  (r6 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.this$0 android.support.v4.widget.DrawerLayout \l0x005c: INVOKE  (r0 I:android.support.v4.widget.DrawerLayout) android.support.v4.widget.DrawerLayout.invalidate():void type: VIRTUAL \l0x005f: INVOKE  \l  (r6 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.closeOtherDrawer():void type: DIRECT \l0x0062: IGET  (r0 I:android.support.v4.widget.DrawerLayout) = \l  (r6 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.this$0 android.support.v4.widget.DrawerLayout \l0x0064: INVOKE  (r0 I:android.support.v4.widget.DrawerLayout) android.support.v4.widget.DrawerLayout.cancelChildViewTouch():void type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0067|0x0067: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.v4.widget.DrawerLayout.ViewDragCallback.peekDrawer((r6 'this' I:android.support.v4.widget.DrawerLayout$ViewDragCallback A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_20;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
}

