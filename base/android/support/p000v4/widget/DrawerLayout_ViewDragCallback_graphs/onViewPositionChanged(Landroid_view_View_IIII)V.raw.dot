digraph "CFG forandroid.support.v4.widget.DrawerLayout.ViewDragCallback.onViewPositionChanged(Landroid\/view\/View;IIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:int) = (r1 I:android.view.View) android.view.View.getWidth():int type: VIRTUAL \l0x0004: IGET  (r4 I:android.support.v4.widget.DrawerLayout) = \l  (r0 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.this$0 android.support.v4.widget.DrawerLayout \l0x0006: CONST  (r5 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0007: INVOKE  (r4 I:boolean) = \l  (r4 I:android.support.v4.widget.DrawerLayout)\l  (r1 I:android.view.View)\l  (r5 I:int)\l android.support.v4.widget.DrawerLayout.checkDrawerViewAbsoluteGravity(android.view.View, int):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x000e: CAST  (r2 I:float) = (float) (r2 I:int) \l0x000f: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0010: ARITH  (r2 I:float) = (r2 I:float) \/ (r3 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IGET  (r4 I:android.support.v4.widget.DrawerLayout) = \l  (r0 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.this$0 android.support.v4.widget.DrawerLayout \l0x0014: INVOKE  (r4 I:int) = (r4 I:android.support.v4.widget.DrawerLayout) android.support.v4.widget.DrawerLayout.getWidth():int type: VIRTUAL \l0x0018: ARITH  (r4 I:int) = (r4 I:int) \- (r2 I:int) \l0x0019: CAST  (r2 I:float) = (float) (r4 I:int) \l0x001a: CAST  (r3 I:float) = (float) (r3 I:int) \l0x001b: ARITH  (r2 I:float) = (r2 I:float) \/ (r3 I:float) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: IGET  (r3 I:android.support.v4.widget.DrawerLayout) = \l  (r0 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.this$0 android.support.v4.widget.DrawerLayout \l0x001e: INVOKE  \l  (r3 I:android.support.v4.widget.DrawerLayout)\l  (r1 I:android.view.View)\l  (r2 I:float)\l android.support.v4.widget.DrawerLayout.setDrawerViewOffset(android.view.View, float):void type: VIRTUAL \l0x0021: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0022: CMP_L  (r2 I:int) = (r2 I:float), (r3 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0028 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: INVOKE  (r1 I:android.view.View), (r2 I:int) android.view.View.setVisibility(int):void type: VIRTUAL \l0x002c: IGET  (r1 I:android.support.v4.widget.DrawerLayout) = \l  (r0 I:android.support.v4.widget.DrawerLayout$ViewDragCallback)\l android.support.v4.widget.DrawerLayout.ViewDragCallback.this$0 android.support.v4.widget.DrawerLayout \l0x002e: INVOKE  (r1 I:android.support.v4.widget.DrawerLayout) android.support.v4.widget.DrawerLayout.invalidate():void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.widget.DrawerLayout.ViewDragCallback.onViewPositionChanged((r0 'this' I:android.support.v4.widget.DrawerLayout$ViewDragCallback A[IMMUTABLE_TYPE, THIS]), (r1 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

