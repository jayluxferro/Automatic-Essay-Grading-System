digraph "CFG forandroid.support.v4.widget.CircularProgressDrawable.Ring.drawTriangle(Landroid\/graphics\/Canvas;FFLandroid\/graphics\/RectF;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r7.mShowArrow == false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r7.mArrow != null) goto L_0x0017\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|r7.mArrow = new android.graphics.Path()\lr7.mArrow.setFillType(android.graphics.Path.FillType.EVEN_ODD)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|r7.mArrow.reset()\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|r7.mArrow.moveTo(0.0f, 0.0f)\lr7.mArrow.lineTo(((float) r7.mArrowWidth) * r7.mArrowScale, 0.0f)\lr7.mArrow.lineTo((((float) r7.mArrowWidth) * r7.mArrowScale) \/ 2.0f, ((float) r7.mArrowHeight) * r7.mArrowScale)\landroid.graphics.Path r3 = r7.mArrow\lfloat r0 = (java.lang.Math.min(r11.width(), r11.height()) \/ 2.0f) + r11.centerX()\lr3.offset(r0 \- ((((float) r7.mArrowWidth) * r7.mArrowScale) \/ 2.0f), r11.centerY() + (r7.mStrokeWidth \/ 2.0f))\lr7.mArrow.close()\lr7.mArrowPaint.setColor(r7.mCurrentColor)\lr7.mArrowPaint.setAlpha(r7.mAlpha)\lr8.save()\lr8.rotate(r9 + r10, r11.centerX(), r11.centerY())\lr8.drawPath(r7.mArrow, r7.mArrowPaint)\lr8.restore()\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void android.support.v4.widget.CircularProgressDrawable.Ring.drawTriangle((r7v0 'this' android.support.v4.widget.CircularProgressDrawable$Ring A[IMMUTABLE_TYPE, THIS]), (r8v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 android.graphics.RectF A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

