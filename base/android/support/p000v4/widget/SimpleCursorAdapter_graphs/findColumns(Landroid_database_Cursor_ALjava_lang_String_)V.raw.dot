digraph "CFG forandroid.support.v4.widget.SimpleCursorAdapter.findColumns(Landroid\/database\/Cursor;[Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0020 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: ARRAY_LENGTH  (r0 I:int) = (r6 I:?[]) \l0x0003: IGET  (r1 I:int[]) = (r4 I:android.support.v4.widget.SimpleCursorAdapter) android.support.v4.widget.SimpleCursorAdapter.mFrom int[] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000c \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IGET  (r1 I:int[]) = (r4 I:android.support.v4.widget.SimpleCursorAdapter) android.support.v4.widget.SimpleCursorAdapter.mFrom int[] \l0x0009: ARRAY_LENGTH  (r1 I:int) = (r1 I:?[]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: NEW_ARRAY  (r1 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x000e: IPUT  \l  (r1 I:int[])\l  (r4 I:android.support.v4.widget.SimpleCursorAdapter)\l android.support.v4.widget.SimpleCursorAdapter.mFrom int[] \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:10:0x0023 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: IGET  (r2 I:int[]) = (r4 I:android.support.v4.widget.SimpleCursorAdapter) android.support.v4.widget.SimpleCursorAdapter.mFrom int[] \l0x0015: AGET  (r3 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0017: INVOKE  (r3 I:int) = (r5 I:android.database.Cursor), (r3 I:java.lang.String) android.database.Cursor.getColumnIndexOrThrow(java.lang.String):int type: INTERFACE \l0x001b: APUT  \l  (r2 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x001d: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0021: IPUT  \l  (r5 I:int[])\l  (r4 I:android.support.v4.widget.SimpleCursorAdapter)\l android.support.v4.widget.SimpleCursorAdapter.mFrom int[] \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v4.widget.SimpleCursorAdapter.findColumns((r4 'this' I:android.support.v4.widget.SimpleCursorAdapter A[IMMUTABLE_TYPE, THIS]), (r5 I:android.database.Cursor A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_9;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_7;
Node_9 -> Node_10;
}

