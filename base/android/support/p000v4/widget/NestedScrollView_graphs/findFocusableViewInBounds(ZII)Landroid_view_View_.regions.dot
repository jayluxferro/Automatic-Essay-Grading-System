digraph "CFG forandroid.support.v4.widget.NestedScrollView.findFocusableViewInBounds(ZII)Landroid\/view\/View;" {
subgraph cluster_Region_1340723906 {
label = "R(3:0|(3:2|(2:5|(1:10)(3:11|(1:(1:(0))(0))(1:(1:23)(1:(0)))|25))|26)|27)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.ArrayList java.util.ArrayList r0 = getFocusables(2)\lint int r1 = r0.size()\landroid.view.View r4 = null\lint r3 = 0\lboolean r5 = false\l}"];
subgraph cluster_LoopRegion_647114435 {
label = "LOOP:0: (3:2|(2:5|(1:10)(3:11|(1:(1:(0))(0))(1:(1:23)(1:(0)))|25))|26)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000e|LOOP_START\lPHI: r3 r4 r5 \l  PHI: (r3v2 int) = (r3v1 int), (r3v3 int) binds: [B:0:0x0000, B:26:0x0051] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 android.view.View) = (r4v0 android.view.View), (r4v2 android.view.View) binds: [B:0:0x0000, B:26:0x0051] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 boolean) = (r5v0 boolean), (r5v2 boolean) binds: [B:0:0x0000, B:26:0x0051] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000e\-\>B:26:0x0051\l|if (r3 \< r1) goto L_0x0010\l}"];
subgraph cluster_Region_1102303066 {
label = "R(3:2|(2:5|(1:10)(3:11|(1:(1:(0))(0))(1:(1:23)(1:(0)))|25))|26)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0010|android.view.View android.view.View r6 = (android.view.View) r0.get(r3)\lint int r7 = r6.getTop()\lint int r8 = r6.getBottom()\l}"];
subgraph cluster_IfRegion_1711021986 {
label = "IF [B:3:0x001f, B:4:0x0021] THEN: R(2:5|(1:10)(3:11|(1:(1:(0))(0))(1:(1:23)(1:(0)))|25)) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001f|ADDED_TO_REGION\l|if (r14 \< r8) goto L_0x0021\l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|ADDED_TO_REGION\l|if (r7 \< r15) goto L_0x0023\l}"];
subgraph cluster_Region_1774152695 {
label = "R(2:5|(1:10)(3:11|(1:(1:(0))(0))(1:(1:23)(1:(0)))|25))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0023|boolean r10 = r14 \< r7 && r8 \< r15\l}"];
subgraph cluster_IfRegion_291932526 {
label = "IF [B:9:0x002a] THEN: R(1:10) ELSE: R(3:11|(1:(1:(0))(0))(1:(1:23)(1:(0)))|25)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002a|PHI: r10 \l  PHI: (r10v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == null) goto L_0x002c\l}"];
subgraph cluster_Region_641032029 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002c|r4 = r6\lr5 = r10\l}"];
}
subgraph cluster_Region_2019374135 {
label = "R(3:11|(1:(1:(0))(0))(1:(1:23)(1:(0)))|25)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002f|boolean r7 = (r13 && r7 \< r4.getTop()) \|\| (!r13 && r8 \> r4.getBottom())\l}"];
subgraph cluster_IfRegion_9169913 {
label = "IF [B:19:0x0042] THEN: R(1:(1:(0))(0)) ELSE: R(1:(1:23)(1:(0)))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0042|PHI: r7 \l  PHI: (r7v1 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 == true) goto L_0x0044\l}"];
subgraph cluster_Region_883627694 {
label = "R(1:(1:(0))(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1278714455 {
label = "IF [B:20:0x0044] THEN: R(1:(0)) ELSE: R(0)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0044|if (r10 != false) goto L_0x0046\l}"];
subgraph cluster_Region_588805693 {
label = "R(1:(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_381173953 {
label = "IF [B:21:0x0046] THEN: R(0) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0046|if (r7 == false) goto L_0x0051\l}"];
subgraph cluster_Region_853137931 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_444971483 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_1995948611 {
label = "R(1:(1:23)(1:(0))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_322722827 {
label = "IF [B:22:0x0049] THEN: R(1:23) ELSE: R(1:(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0049|if (r10 == true) goto L_0x004b\l}"];
subgraph cluster_Region_2032375356 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x004b|r4 = r6\lr5 = true\l}"];
}
subgraph cluster_Region_381614910 {
label = "R(1:(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_71987506 {
label = "IF [B:24:0x004e] THEN: R(0) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x004e|if (r7 == false) goto L_0x0051\l}"];
subgraph cluster_Region_1791713888 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
Node_25 [shape=record,label="{25\:\ 0x0050|r4 = r6\l}"];
}
}
}
}
Node_26 [shape=record,label="{26\:\ 0x0051|LOOP_END\lPHI: r4 r5 \l  PHI: (r4v2 android.view.View) = (r4v1 android.view.View), (r4v1 android.view.View), (r4v3 android.view.View), (r4v1 android.view.View), (r4v4 android.view.View), (r4v1 android.view.View), (r4v1 android.view.View), (r4v5 android.view.View) binds: [B:30:0x0051, B:31:0x0051, B:29:0x0051, B:36:0x0051, B:35:0x0051, B:33:0x0051, B:34:0x0051, B:32:0x0051] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 boolean) = (r5v1 boolean), (r5v1 boolean), (r5v1 boolean), (r5v1 boolean), (r5v3 boolean), (r5v1 boolean), (r5v1 boolean), (r5v4 boolean) binds: [B:30:0x0051, B:31:0x0051, B:29:0x0051, B:36:0x0051, B:35:0x0051, B:33:0x0051, B:34:0x0051, B:32:0x0051] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000e\-\>B:26:0x0051\l|r3++\l}"];
}
}
Node_27 [shape=record,label="{27\:\ 0x0054|RETURN\l|return r4\l}"];
}
Node_6 [shape=record,color=red,label="{6\:\ 0x0025|REMOVE\lADDED_TO_REGION\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0027}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0029}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0031}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0035|REMOVE\lADDED_TO_REGION\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0037|REMOVE\lADDED_TO_REGION\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0039}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x003d|REMOVE\lADDED_TO_REGION\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x003f}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0041}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0054|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0051|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0051|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0051|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0051|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0051|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0051|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0051|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0051|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private android.view.View android.support.v4.widget.NestedScrollView.findFocusableViewInBounds((r12v0 'this' android.support.v4.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r13v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_28[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_30[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_31[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_32;
Node_11 -> Node_12;
Node_11 -> Node_14;
Node_19 -> Node_20;
Node_19 -> Node_22[style=dashed];
Node_20 -> Node_21;
Node_20 -> Node_33[style=dashed];
Node_21 -> Node_25[style=dashed];
Node_21 -> Node_34;
Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_35;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_36;
Node_25 -> Node_29;
Node_26 -> Node_1;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_28 -> Node_27;
Node_29 -> Node_26;
Node_30 -> Node_26;
Node_31 -> Node_26;
Node_32 -> Node_26;
Node_33 -> Node_26;
Node_34 -> Node_26;
Node_35 -> Node_26;
Node_36 -> Node_26;
}

