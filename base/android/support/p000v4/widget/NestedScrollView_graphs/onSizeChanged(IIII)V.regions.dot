digraph "CFG forandroid.support.v4.widget.NestedScrollView.onSizeChanged(IIII)V" {
subgraph cluster_Region_837484406 {
label = "R(2:0|(1:(1:5)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super.onSizeChanged(r1, r2, r3, r4)\landroid.view.View android.view.View r1 = findFocus()\l}"];
subgraph cluster_Region_391963463 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1008265869 {
label = "IF [B:1:0x0007, B:2:0x0009, B:4:0x0011] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r1 != null) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|ADDED_TO_REGION\l|if (r0 != r1) goto L_0x000c\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|ADDED_TO_REGION\l|if (isWithinDeltaOfScreen(r1, 0, r4) != false) goto L_0x0013\l}"];
subgraph cluster_Region_1579671305 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|r1.getDrawingRect(r0.mTempRect)\loffsetDescendantRectToMyCoords(r1, r0.mTempRect)\ldoScrollY(computeScrollDeltaToGetChildRectOnScreen(r0.mTempRect))\l}"];
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x000c}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{protected void android.support.v4.widget.NestedScrollView.onSizeChanged((r0v0 'this' android.support.v4.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r1v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8[style=dashed];
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_5 -> Node_6;
Node_3 -> Node_4;
}

