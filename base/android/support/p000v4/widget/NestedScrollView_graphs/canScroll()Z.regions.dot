digraph "CFG forandroid.support.v4.widget.NestedScrollView.canScroll()Z" {
subgraph cluster_Region_416408271 {
label = "R(1:(2:(1:5)|(2:2|(2:(1:4)|(1:6)))))";
node [shape=record,color=blue];
subgraph cluster_Region_475862853 {
label = "R(2:(1:5)|(2:2|(2:(1:4)|(1:6))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_786734665 {
label = "IF [B:1:0x0005] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (getChildCount() \<= 0) goto L_0x002d\l}"];
subgraph cluster_Region_1172735597 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002d|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_331095919 {
label = "R(2:2|(2:(1:4)|(1:6)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|android.view.View android.view.View r0 = getChildAt(0)\landroid.widget.FrameLayout$LayoutParams android.widget.FrameLayout.LayoutParams r2 = (android.widget.FrameLayout.LayoutParams) r0.getLayoutParams()\l}"];
subgraph cluster_Region_1379320708 {
label = "R(2:(1:4)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_203883520 {
label = "IF [B:3:0x0029] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0029|if ((r0.getHeight() + r2.topMargin + r2.bottomMargin) \> ((getHeight() \- getPaddingTop()) \- getPaddingBottom())) goto L_0x002b\l}"];
subgraph cluster_Region_648348088 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x002b|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_750376435 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
MethodNode[shape=record,label="{private boolean android.support.v4.widget.NestedScrollView.canScroll((r4v0 'this' android.support.v4.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_0 -> Node_1;
}

