digraph "CFG forandroid.support.v4.widget.NestedScrollView.pageScroll(I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r5 != 130) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|r2 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|r2 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|PHI: r2 \l  PHI: (r2v1 boolean) = (r2v6 boolean), (r2v7 boolean) binds: [B:3:0x0008, B:2:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|int r3 = getHeight()\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|if (r2 == false) goto L_0x0042\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|android.graphics.Rect r0 = r4.mTempRect\lr0.top = getScrollY() + r3\lint r0 = getChildCount()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|if (r0 \<= 0) goto L_0x0055\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|android.view.View r0 = getChildAt(r0 \- 1)\lint r0 = (r0.getBottom() + ((android.widget.FrameLayout.LayoutParams) r0.getLayoutParams()).bottomMargin) + getPaddingBottom()\l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|if ((r4.mTempRect.top + r3) \<= r0) goto L_0x0055\l}"];
Node_10 [shape=record,label="{10\:\ 0x003c|int r0 = r0 \- r3\lr4.mTempRect.top = r0\l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|android.graphics.Rect r1 = r4.mTempRect\lr1.top = getScrollY() \- r3\l}"];
Node_12 [shape=record,label="{12\:\ 0x004f|if (r4.mTempRect.top \>= 0) goto L_0x0055\l}"];
Node_13 [shape=record,label="{13\:\ 0x0051|r4.mTempRect.top = 0\l}"];
Node_14 [shape=record,label="{14\:\ 0x0055|android.graphics.Rect r0 = r4.mTempRect\lr0.bottom = r4.mTempRect.top + r3\l}"];
Node_15 [shape=record,label="{15\:\ 0x006a|RETURN\l|return scrollAndFocus(r5, r4.mTempRect.top, r4.mTempRect.bottom)\l}"];
MethodNode[shape=record,label="{public boolean android.support.v4.widget.NestedScrollView.pageScroll((r4v0 'this' android.support.v4.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

