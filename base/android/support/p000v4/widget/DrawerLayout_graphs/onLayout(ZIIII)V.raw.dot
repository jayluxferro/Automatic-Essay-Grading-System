digraph "CFG forandroid.support.v4.widget.DrawerLayout.onLayout(ZIIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0001: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0002: IPUT  \l  (r2 I:boolean)\l  (r0 I:android.support.v4.widget.DrawerLayout)\l android.support.v4.widget.DrawerLayout.mInLayout boolean \l0x0004: ARITH  (r3 I:int) = (r19 I:int) \- (r17 I:int) \l0x0006: INVOKE  (r4 I:int) = (r15 I:android.support.v4.widget.DrawerLayout) android.support.v4.widget.DrawerLayout.getChildCount():int type: VIRTUAL \l0x000a: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r6 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:39:0x00d5 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: INVOKE  (r7 I:android.view.View) = (r15 I:android.support.v4.widget.DrawerLayout), (r6 I:int) android.support.v4.widget.DrawerLayout.getChildAt(int):android.view.View type: VIRTUAL \l0x0011: INVOKE  (r8 I:int) = (r7 I:android.view.View) android.view.View.getVisibility():int type: VIRTUAL \l0x0015: CONST  (r9 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001b \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: INVOKE  (r8 I:android.view.ViewGroup$LayoutParams) = (r7 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x001f: CHECK_CAST  (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) = (android.support.v4.widget.DrawerLayout$LayoutParams) (r8 I:?[OBJECT, ARRAY]) \l0x0021: INVOKE  (r9 I:boolean) = \l  (r15 I:android.support.v4.widget.DrawerLayout)\l  (r7 I:android.view.View)\l android.support.v4.widget.DrawerLayout.isContentView(android.view.View):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x003e \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: IGET  (r9 I:int) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.leftMargin int \l0x0029: IGET  (r10 I:int) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.topMargin int \l0x002b: IGET  (r11 I:int) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.leftMargin int \l0x002d: INVOKE  (r12 I:int) = (r7 I:android.view.View) android.view.View.getMeasuredWidth():int type: VIRTUAL \l0x0031: ARITH  (r11 I:int) = (r11 I:int) + (r12 I:int) \l0x0032: IGET  (r8 I:int) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.topMargin int \l0x0034: INVOKE  (r12 I:int) = (r7 I:android.view.View) android.view.View.getMeasuredHeight():int type: VIRTUAL \l0x0038: ARITH  (r8 I:int) = (r8 I:int) + (r12 I:int) \l0x0039: INVOKE  \l  (r7 I:android.view.View)\l  (r9 I:int)\l  (r10 I:int)\l  (r11 I:int)\l  (r8 I:int)\l android.view.View.layout(int, int, int, int):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|0x003e: INVOKE  (r9 I:int) = (r7 I:android.view.View) android.view.View.getMeasuredWidth():int type: VIRTUAL \l0x0042: INVOKE  (r10 I:int) = (r7 I:android.view.View) android.view.View.getMeasuredHeight():int type: VIRTUAL \l0x0046: CONST  (r11 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0047: INVOKE  (r11 I:boolean) = \l  (r15 I:android.support.v4.widget.DrawerLayout)\l  (r7 I:android.view.View)\l  (r11 I:int)\l android.support.v4.widget.DrawerLayout.checkDrawerViewAbsoluteGravity(android.view.View, int):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x004b|0x004b: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x005a \l}"];
Node_10 [shape=record,label="{10\:\ 0x004d|0x004d: NEG  (r11 I:int) = (r9 I:int) \l0x004e: CAST  (r12 I:float) = (float) (r9 I:int) \l0x004f: IGET  (r13 I:float) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.onScreen float \l0x0051: ARITH  (r13 I:float) = (r13 I:float) * (r12 I:float) \l0x0053: CAST  (r13 I:int) = (int) (r13 I:float) \l0x0054: ARITH  (r11 I:int) = (r11 I:int) + (r13 I:int) \l0x0055: ARITH  (r13 I:int) = (r9 I:int) + (r11 I:int) \l0x0057: CAST  (r13 I:float) = (float) (r13 I:int) \l0x0058: ARITH  (r13 I:float) = (r13 I:float) \/ (r12 I:float) \l}"];
Node_11 [shape=record,label="{11\:\ 0x005a|0x005a: CAST  (r11 I:float) = (float) (r9 I:int) \l0x005b: IGET  (r12 I:float) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.onScreen float \l0x005d: ARITH  (r12 I:float) = (r12 I:float) * (r11 I:float) \l0x005f: CAST  (r12 I:int) = (int) (r12 I:float) \l0x0060: ARITH  (r12 I:int) = (r3 I:int) \- (r12 I:int) \l0x0062: ARITH  (r13 I:int) = (r3 I:int) \- (r12 I:int) \l0x0064: CAST  (r13 I:float) = (float) (r13 I:int) \l0x0065: ARITH  (r13 I:float) = (r13 I:float) \/ (r11 I:float) \l0x0066: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0067|0x0067: IGET  (r12 I:float) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.onScreen float \l0x0069: CMP_L  (r12 I:int) = (r13 I:float), (r12 I:float) \l}"];
Node_13 [shape=record,label="{13\:\ 0x006b|0x006b: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x006f \l}"];
Node_14 [shape=record,label="{14\:\ 0x006d|0x006d: CONST  (r12 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x006f|0x006f: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0070|0x0070: IGET  (r14 I:int) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.gravity int \l0x0072: ARITH  (r14 I:?[int, boolean, short, byte, char]) = (r14 I:?[int, boolean, short, byte, char]) & (112(0x70, float:1.57E\-43) ?[int, float, short, byte, char]) \l0x0074: CONST  (r2 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0076|0x0076: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0099 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0078|0x0078: CONST  (r2 I:?[int, float, short, byte, char]) = (80 ?[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x007a|0x007a: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0086 \l}"];
Node_20 [shape=record,label="{20\:\ 0x007c|0x007c: IGET  (r2 I:int) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.topMargin int \l0x007e: ARITH  (r9 I:int) = (r9 I:int) + (r11 I:int) \l0x007f: IGET  (r14 I:int) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.topMargin int \l0x0081: ARITH  (r14 I:int) = (r14 I:int) + (r10 I:int) \l0x0082: INVOKE  \l  (r7 I:android.view.View)\l  (r11 I:int)\l  (r2 I:int)\l  (r9 I:int)\l  (r14 I:int)\l android.view.View.layout(int, int, int, int):void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0086|0x0086: ARITH  (r2 I:int) = (r20 I:int) \- (r18 I:int) \l0x0088: IGET  (r10 I:int) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.bottomMargin int \l0x008a: ARITH  (r10 I:int) = (r2 I:int) \- (r10 I:int) \l0x008c: INVOKE  (r14 I:int) = (r7 I:android.view.View) android.view.View.getMeasuredHeight():int type: VIRTUAL \l0x0090: ARITH  (r10 I:int) = (r10 I:int) \- (r14 I:int) \l0x0091: ARITH  (r9 I:int) = (r9 I:int) + (r11 I:int) \l0x0092: IGET  (r14 I:int) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.bottomMargin int \l0x0094: ARITH  (r2 I:int) = (r2 I:int) \- (r14 I:int) \l0x0095: INVOKE  \l  (r7 I:android.view.View)\l  (r11 I:int)\l  (r10 I:int)\l  (r9 I:int)\l  (r2 I:int)\l android.view.View.layout(int, int, int, int):void type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x0099|0x0099: ARITH  (r2 I:int) = (r20 I:int) \- (r18 I:int) \l0x009b: ARITH  (r14 I:int) = (r2 I:int) \- (r10 I:int) \l0x009d: ARITH  (r14 I:int) = (r14 I:int) \/ (2 int) \l0x009f: IGET  (r5 I:int) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.topMargin int \l}"];
Node_23 [shape=record,label="{23\:\ 0x00a1|0x00a1: IF  (r14 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:25:0x00a6 \l}"];
Node_24 [shape=record,label="{24\:\ 0x00a3|0x00a3: IGET  (r14 I:int) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.topMargin int \l}"];
Node_25 [shape=record,label="{25\:\ 0x00a6|0x00a6: ARITH  (r5 I:int) = (r14 I:int) + (r10 I:int) \l0x00a8: IGET  (r1 I:int) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.bottomMargin int \l0x00aa: ARITH  (r1 I:int) = (r2 I:int) \- (r1 I:int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x00ac|0x00ac: IF  (r5 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:28:0x00b3 \l}"];
Node_27 [shape=record,label="{27\:\ 0x00ae|0x00ae: IGET  (r1 I:int) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.bottomMargin int \l0x00b0: ARITH  (r2 I:int) = (r2 I:int) \- (r1 I:int) \l0x00b1: ARITH  (r14 I:int) = (r2 I:int) \- (r10 I:int) \l}"];
Node_28 [shape=record,label="{28\:\ 0x00b3|0x00b3: ARITH  (r9 I:int) = (r9 I:int) + (r11 I:int) \l0x00b4: ARITH  (r10 I:int) = (r10 I:int) + (r14 I:int) \l0x00b5: INVOKE  \l  (r7 I:android.view.View)\l  (r11 I:int)\l  (r14 I:int)\l  (r9 I:int)\l  (r10 I:int)\l android.view.View.layout(int, int, int, int):void type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x00b8|0x00b8: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00bd \l}"];
Node_30 [shape=record,label="{30\:\ 0x00ba|0x00ba: INVOKE  \l  (r15 I:android.support.v4.widget.DrawerLayout)\l  (r7 I:android.view.View)\l  (r13 I:float)\l android.support.v4.widget.DrawerLayout.setDrawerViewOffset(android.view.View, float):void type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x00bd|0x00bd: IGET  (r1 I:float) = (r8 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.onScreen float \l0x00bf: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00c0: CMP_L  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_32 [shape=record,label="{32\:\ 0x00c2|0x00c2: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:34:0x00c6 \l}"];
Node_33 [shape=record,label="{33\:\ 0x00c4|0x00c4: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_34 [shape=record,label="{34\:\ 0x00c6|0x00c6: CONST  (r5 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x00c7|0x00c7: INVOKE  (r1 I:int) = (r7 I:android.view.View) android.view.View.getVisibility():int type: VIRTUAL \l}"];
Node_36 [shape=record,label="{36\:\ 0x00cb|0x00cb: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x00d0 \l}"];
Node_37 [shape=record,label="{37\:\ 0x00cd|0x00cd: INVOKE  (r7 I:android.view.View), (r5 I:int) android.view.View.setVisibility(int):void type: VIRTUAL \l}"];
Node_38 [shape=record,label="{38\:\ 0x00d0|0x00d0: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l0x00d2: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x00d5|0x00d5: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d6: IPUT  \l  (r1 I:boolean)\l  (r0 I:android.support.v4.widget.DrawerLayout)\l android.support.v4.widget.DrawerLayout.mInLayout boolean \l0x00d8: IPUT  \l  (r1 I:boolean)\l  (r0 I:android.support.v4.widget.DrawerLayout)\l android.support.v4.widget.DrawerLayout.mFirstLayout boolean \l}"];
Node_40 [shape=record,label="{40\:\ 0x00da|0x00da: RETURN   \l}"];
MethodNode[shape=record,label="{protected void android.support.v4.widget.DrawerLayout.onLayout((r15 'this' I:android.support.v4.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r16 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_39;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_38[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_38;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_29;
Node_21 -> Node_29;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_1;
Node_39 -> Node_40;
}

