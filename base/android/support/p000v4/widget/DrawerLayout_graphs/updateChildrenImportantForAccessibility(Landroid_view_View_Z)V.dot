digraph "CFG forandroid.support.v4.widget.DrawerLayout.updateChildrenImportantForAccessibility(Landroid\/view\/View;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = getChildCount()\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:10:0x0020] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0005\-\>B:10:0x0020\l|if (r1 \>= r0) goto L_0x0023\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|android.view.View r2 = getChildAt(r1)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r6 != false) goto L_0x0013\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d}"];
Node_5 [shape=record,label="{5\:\ 0x0011|if (isDrawerView(r2) == false) goto L_0x0017\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|if (r6 == false) goto L_0x001c\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|if (r2 != r5) goto L_0x001c\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|android.support.p000v4.view.ViewCompat.setImportantForAccessibility(r2, 1)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|android.support.p000v4.view.ViewCompat.setImportantForAccessibility(r2, 4)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|LOOP_END\lLOOP:0: B:1:0x0005\-\>B:10:0x0020\l|int r1 = r1 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.v4.widget.DrawerLayout.updateChildrenImportantForAccessibility((r4v0 'this' android.support.v4.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r5v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_14;
Node_9 -> Node_13;
Node_10 -> Node_1;
Node_12 -> Node_11;
Node_13 -> Node_10;
Node_14 -> Node_10;
}

