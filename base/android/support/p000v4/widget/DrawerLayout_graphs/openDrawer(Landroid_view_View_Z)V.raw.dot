digraph "CFG forandroid.support.v4.widget.DrawerLayout.openDrawer(Landroid\/view\/View;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r3 I:android.support.v4.widget.DrawerLayout)\l  (r4 I:android.view.View)\l android.support.v4.widget.DrawerLayout.isDrawerView(android.view.View):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0057 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r0 I:android.view.ViewGroup$LayoutParams) = (r4 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x000a: CHECK_CAST  (r0 I:android.support.v4.widget.DrawerLayout$LayoutParams) = (android.support.v4.widget.DrawerLayout$LayoutParams) (r0 I:?[OBJECT, ARRAY]) \l0x000c: IGET  (r1 I:boolean) = (r3 I:android.support.v4.widget.DrawerLayout) android.support.v4.widget.DrawerLayout.mFirstLayout boolean \l0x000e: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IPUT  \l  (r2 I:float)\l  (r0 I:android.support.v4.widget.DrawerLayout$LayoutParams)\l android.support.v4.widget.DrawerLayout.LayoutParams.onScreen float \l0x0014: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0015: IPUT  \l  (r5 I:int)\l  (r0 I:android.support.v4.widget.DrawerLayout$LayoutParams)\l android.support.v4.widget.DrawerLayout.LayoutParams.openState int \l0x0017: INVOKE  \l  (r3 I:android.support.v4.widget.DrawerLayout)\l  (r4 I:android.view.View)\l  (r5 I:boolean)\l android.support.v4.widget.DrawerLayout.updateChildrenImportantForAccessibility(android.view.View, boolean):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0048 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: IGET  (r5 I:int) = (r0 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.openState int \l0x0020: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) \| (2 ?[int, float, short, byte, char]) \l0x0022: IPUT  \l  (r5 I:int)\l  (r0 I:android.support.v4.widget.DrawerLayout$LayoutParams)\l android.support.v4.widget.DrawerLayout.LayoutParams.openState int \l0x0024: CONST  (r5 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0025: INVOKE  (r5 I:boolean) = \l  (r3 I:android.support.v4.widget.DrawerLayout)\l  (r4 I:android.view.View)\l  (r5 I:int)\l android.support.v4.widget.DrawerLayout.checkDrawerViewAbsoluteGravity(android.view.View, int):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0035 \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: IGET  (r5 I:android.support.v4.widget.ViewDragHelper) = (r3 I:android.support.v4.widget.DrawerLayout) android.support.v4.widget.DrawerLayout.mLeftDragger android.support.v4.widget.ViewDragHelper \l0x002d: INVOKE  (r0 I:int) = (r4 I:android.view.View) android.view.View.getTop():int type: VIRTUAL \l0x0031: INVOKE  \l  (r5 I:android.support.v4.widget.ViewDragHelper)\l  (r4 I:android.view.View)\l  (r1 I:int)\l  (r0 I:int)\l android.support.v4.widget.ViewDragHelper.smoothSlideViewTo(android.view.View, int, int):boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|0x0035: IGET  (r5 I:android.support.v4.widget.ViewDragHelper) = (r3 I:android.support.v4.widget.DrawerLayout) android.support.v4.widget.DrawerLayout.mRightDragger android.support.v4.widget.ViewDragHelper \l0x0037: INVOKE  (r0 I:int) = (r3 I:android.support.v4.widget.DrawerLayout) android.support.v4.widget.DrawerLayout.getWidth():int type: VIRTUAL \l0x003b: INVOKE  (r1 I:int) = (r4 I:android.view.View) android.view.View.getWidth():int type: VIRTUAL \l0x003f: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0040: INVOKE  (r1 I:int) = (r4 I:android.view.View) android.view.View.getTop():int type: VIRTUAL \l0x0044: INVOKE  \l  (r5 I:android.support.v4.widget.ViewDragHelper)\l  (r4 I:android.view.View)\l  (r0 I:int)\l  (r1 I:int)\l android.support.v4.widget.ViewDragHelper.smoothSlideViewTo(android.view.View, int, int):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0048|0x0048: INVOKE  \l  (r3 I:android.support.v4.widget.DrawerLayout)\l  (r4 I:android.view.View)\l  (r2 I:float)\l android.support.v4.widget.DrawerLayout.moveDrawerToOffset(android.view.View, float):void type: VIRTUAL \l0x004b: IGET  (r5 I:int) = (r0 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.gravity int \l0x004d: INVOKE  \l  (r3 I:android.support.v4.widget.DrawerLayout)\l  (r5 I:int)\l  (r1 I:int)\l  (r4 I:android.view.View)\l android.support.v4.widget.DrawerLayout.updateDrawerState(int, int, android.view.View):void type: VIRTUAL \l0x0050: INVOKE  (r4 I:android.view.View), (r1 I:int) android.view.View.setVisibility(int):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0053|0x0053: INVOKE  (r3 I:android.support.v4.widget.DrawerLayout) android.support.v4.widget.DrawerLayout.invalidate():void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0056|0x0056: RETURN   \l}"];
Node_14 [shape=record,label="{14\:\ 0x0057|0x0057: NEW_INSTANCE  (r5 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0059: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x005b: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x005e: CONST_STR  (r1 I:java.lang.String) =  \"View \" \l0x0060: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0063: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0066: CONST_STR  (r4 I:java.lang.String) =  \" is not a sliding drawer\" \l0x0068: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006b: INVOKE  (r4 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x006f: INVOKE  \l  (r5 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0072|0x0072: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.v4.widget.DrawerLayout.openDrawer((r3 'this' I:android.support.v4.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_12;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

