digraph "CFG forandroid.support.v4.widget.DrawerLayout.addFocusables(Ljava\/util\/ArrayList;II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (getDescendantFocusability() != 393216) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|int r0 = getChildCount()\lr1 = 0\lr2 = 0\lr3 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|LOOP_START\lPHI: r2 r3 \l  PHI: (r2v1 int) = (r2v0 int), (r2v5 int) binds: [B:3:0x0009, B:11:0x002c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 boolean) = (r3v0 boolean), (r3v3 boolean) binds: [B:3:0x0009, B:11:0x002c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0010\-\>B:11:0x002c\l|if (r2 \>= r0) goto L_0x002f\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|android.view.View r4 = getChildAt(r2)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|if (isDrawerView(r4) == false) goto L_0x0027\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c}"];
Node_8 [shape=record,label="{8\:\ 0x0020|if (isDrawerOpen(r4) == false) goto L_0x002c\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|r4.addFocusables(r7, r8, r9)\lr3 = true\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|r6.mNonDrawerViews.add(r4)\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|LOOP_END\lPHI: r3 \l  PHI: (r3v3 boolean) = (r3v1 boolean), (r3v1 boolean), (r3v4 boolean) binds: [B:22:0x002c, B:23:0x002c, B:24:0x002c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0010\-\>B:11:0x002c\l|int r2 = r2 + 1\l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|if (r3 != false) goto L_0x004d\l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|int r0 = r6.mNonDrawerViews.size()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|LOOP_START\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v3 int) binds: [B:13:0x0031, B:18:0x004a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:14:0x0037\-\>B:18:0x004a\l|if (r1 \>= r0) goto L_0x004d\l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|android.view.View r2 = r6.mNonDrawerViews.get(r1)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0045|if (r2.getVisibility() != 0) goto L_0x004a\l}"];
Node_17 [shape=record,label="{17\:\ 0x0047|r2.addFocusables(r7, r8, r9)\l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|LOOP_END\lLOOP:1: B:14:0x0037\-\>B:18:0x004a\l|int r1 = r1 + 1\l}"];
Node_19 [shape=record,label="{19\:\ 0x004d|r6.mNonDrawerViews.clear()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0052|RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ 0x002f|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x002c|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x002c|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x002c|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x004d|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x004a|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x004a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v4.widget.DrawerLayout.addFocusables((r6v0 'this' android.support.v4.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r7v0 java.util.ArrayList\<android.view.View\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/ArrayList\<, Landroid\/view\/View;, \>;II)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_21;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_23;
Node_9 -> Node_24;
Node_10 -> Node_22;
Node_11 -> Node_4;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_19;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_25;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_27;
Node_17 -> Node_26;
Node_18 -> Node_14;
Node_19 -> Node_20;
Node_21 -> Node_12;
Node_22 -> Node_11;
Node_23 -> Node_11;
Node_24 -> Node_11;
Node_25 -> Node_19;
Node_26 -> Node_18;
Node_27 -> Node_18;
}

