digraph "CFG forandroid.support.v4.widget.DrawerLayout.getTransformedMotionEvent(Landroid\/view\/MotionEvent;Landroid\/view\/View;)Landroid\/view\/MotionEvent;" {
subgraph cluster_Region_1832119068 {
label = "R(3:0|(2:(1:4)|5)|6)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.view.MotionEvent android.view.MotionEvent r4 = android.view.MotionEvent.obtain(r4)\lr4.offsetLocation((float) (getScrollX() \- r5.getLeft()), (float) (getScrollY() \- r5.getTop()))\landroid.graphics.Matrix android.graphics.Matrix r5 = r5.getMatrix()\l}"];
subgraph cluster_IfRegion_1345005956 {
label = "IF [B:1:0x0023] THEN: R(2:(1:4)|5) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0023|if (r5.isIdentity() == false) goto L_0x0025\l}"];
subgraph cluster_Region_1923066062 {
label = "R(2:(1:4)|5)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_95934621 {
label = "IF [B:3:0x0027] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0027|if (r3.mChildInvertedMatrix == null) goto L_0x0029\l}"];
subgraph cluster_Region_1951665865 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0029|r3.mChildInvertedMatrix = new android.graphics.Matrix()\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0030|r5.invert(r3.mChildInvertedMatrix)\lr4.transform(r3.mChildInvertedMatrix)\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x003a|RETURN\l|return r4\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0025}"];
MethodNode[shape=record,label="{private android.view.MotionEvent android.support.v4.widget.DrawerLayout.getTransformedMotionEvent((r3v0 'this' android.support.v4.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r4v0 android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_2 -> Node_3;
}

