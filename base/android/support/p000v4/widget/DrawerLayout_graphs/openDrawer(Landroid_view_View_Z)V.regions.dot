digraph "CFG forandroid.support.v4.widget.DrawerLayout.openDrawer(Landroid\/view\/View;Z)V" {
subgraph cluster_Region_986319107 {
label = "R(1:(2:(4:2|(1:4)(1:(2:7|(1:9)(1:10))(1:11))|12|13)|(2:14|15)))";
node [shape=record,color=blue];
subgraph cluster_Region_2136739830 {
label = "R(2:(4:2|(1:4)(1:(2:7|(1:9)(1:10))(1:11))|12|13)|(2:14|15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_191289704 {
label = "IF [B:1:0x0004] THEN: R(4:2|(1:4)(1:(2:7|(1:9)(1:10))(1:11))|12|13) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (isDrawerView(r4) == true) goto L_0x0006\l}"];
subgraph cluster_Region_1846804927 {
label = "R(4:2|(1:4)(1:(2:7|(1:9)(1:10))(1:11))|12|13)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|android.support.v4.widget.DrawerLayout$LayoutParams android.support.p000v4.widget.DrawerLayout.LayoutParams r0 = (android.support.p000v4.widget.DrawerLayout.LayoutParams) r4.getLayoutParams()\l}"];
subgraph cluster_IfRegion_775185056 {
label = "IF [B:3:0x0010] THEN: R(1:4) ELSE: R(1:(2:7|(1:9)(1:10))(1:11))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0010|if (r3.mFirstLayout == true) goto L_0x0012\l}"];
subgraph cluster_Region_2106817879 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012|r0.onScreen = 1.0f\lr0.openState = 1\lupdateChildrenImportantForAccessibility(r4, true)\l}"];
}
subgraph cluster_Region_1155331188 {
label = "R(1:(2:7|(1:9)(1:10))(1:11)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1541431462 {
label = "IF [B:6:0x001c] THEN: R(2:7|(1:9)(1:10)) ELSE: R(1:11) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001c|if (r5 == true) goto L_0x001e\l}"];
subgraph cluster_Region_541013825 {
label = "R(2:7|(1:9)(1:10))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001e|r0.openState \|= 2\l}"];
subgraph cluster_IfRegion_1727029035 {
label = "IF [B:8:0x0029] THEN: R(1:9) ELSE: R(1:10)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0029|if (checkDrawerViewAbsoluteGravity(r4, 3) == true) goto L_0x002b\l}"];
subgraph cluster_Region_1801191479 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002b|r3.mLeftDragger.smoothSlideViewTo(r4, 0, r4.getTop())\l}"];
}
subgraph cluster_Region_1216358012 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0035|r3.mRightDragger.smoothSlideViewTo(r4, getWidth() \- r4.getWidth(), r4.getTop())\l}"];
}
}
}
subgraph cluster_Region_1129842025 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0048|moveDrawerToOffset(r4, 1.0f)\lupdateDrawerState(r0.gravity, 0, r4)\lr4.setVisibility(0)\l}"];
}
}
}
}
Node_12 [shape=record,label="{12\:\ 0x0053|invalidate()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0056|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_272468634 {
label = "R(2:14|15)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0057}"];
Node_15 [shape=record,label="{15\:\ 0x0072|throw new java.lang.IllegalArgumentException(\"View \" + r4 + \" is not a sliding drawer\")\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001b}"];
MethodNode[shape=record,label="{public void android.support.v4.widget.DrawerLayout.openDrawer((r3v0 'this' android.support.v4.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r4v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_14[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_6 -> Node_7;
Node_6 -> Node_11[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_0 -> Node_1;
Node_5 -> Node_6;
}

