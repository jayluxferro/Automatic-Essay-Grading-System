digraph "CFG forandroid.support.v4.widget.DrawerLayout.setDrawerElevation(F)V" {
subgraph cluster_Region_685796171 {
label = "R(2:0|(3:3|(1:5)(0)|6))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.mDrawerElevation = r3\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_878377294 {
label = "LOOP:0: (3:3|(1:5)(0)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|if (r3 \< getChildCount()) goto L_0x0009\l}"];
subgraph cluster_Region_314260117 {
label = "R(3:3|(1:5)(0)|6)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|android.view.View android.view.View r0 = getChildAt(r3)\l}"];
subgraph cluster_IfRegion_2001930913 {
label = "IF [B:4:0x0011] THEN: R(1:5) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|if (isDrawerView(r0) == true) goto L_0x0013\l}"];
subgraph cluster_Region_1556254003 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|android.support.p000v4.view.ViewCompat.setElevation(r0, r2.mDrawerElevation)\l}"];
}
subgraph cluster_Region_1322265971 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_6 [shape=record,label="{6\:\ 0x0018|LOOP_END\lLOOP:0: B:1:0x0003\-\>B:6:0x0018\l|r3++\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0003|LOOP_START\lPHI: r3 \l  PHI: (r3v2 int) = (r3v1 int), (r3v3 int) binds: [B:0:0x0000, B:6:0x0018] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:6:0x0018\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001b}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001b|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0018|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0018|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v4.widget.DrawerLayout.setDrawerElevation((r2v0 'this' android.support.v4.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r3v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_8[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_10[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_1;
Node_1 -> Node_2;
Node_8 -> Node_7;
Node_9 -> Node_6;
Node_10 -> Node_6;
}

