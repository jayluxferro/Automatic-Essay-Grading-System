digraph "CFG forandroid.support.v4.widget.DrawerLayout.drawChild(Landroid\/graphics\/Canvas;Landroid\/view\/View;J)Z" {
subgraph cluster_Region_1725849578 {
label = "R(5:0|(3:2|(3:4|(1:(2:16|(1:18)(0))(2:19|(1:21)(0)))|22)|23)(1:24)|25|(1:28)(1:(1:33)(1:(1:38)))|39) | DECL_VAR: int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r14\landroid.graphics.Canvas r1 = r15\landroid.view.View r2 = r16\lint int r3 = getHeight()\lboolean boolean r4 = isContentView(r2)\lint int r5 = getWidth()\lint int r6 = r15.save()\lint r8 = 0\l}"];
subgraph cluster_IfRegion_2087736614 {
label = "IF [B:1:0x0016] THEN: R(3:2|(3:4|(1:(2:16|(1:18)(0))(2:19|(1:21)(0)))|22)|23) ELSE: R(1:24)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0016|if (r4 == true) goto L_0x0018\l}"];
subgraph cluster_Region_1803537027 {
label = "R(3:2|(3:4|(1:(2:16|(1:18)(0))(2:19|(1:21)(0)))|22)|23)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0018|int int r9 = getChildCount()\lr11 = r5\lint r5 = 0\lint r10 = 0\l}"];
subgraph cluster_LoopRegion_756965812 {
label = "LOOP:0: (3:4|(1:(2:16|(1:18)(0))(2:19|(1:21)(0)))|22)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001f|LOOP_START\lPHI: r5 r10 r11 \l  PHI: (r5v9 int) = (r5v8 int), (r5v10 int) binds: [B:2:0x0018, B:22:0x0055] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v6 int) = (r10v5 int), (r10v7 int) binds: [B:2:0x0018, B:22:0x0055] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v3 int) = (r11v2 int), (r11v4 int) binds: [B:2:0x0018, B:22:0x0055] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x001f\-\>B:22:0x0055\l|if (r5 \< r9) goto L_0x0021\l}"];
subgraph cluster_Region_642964032 {
label = "R(3:4|(1:(2:16|(1:18)(0))(2:19|(1:21)(0)))|22)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0021|android.view.View android.view.View r12 = getChildAt(r5)\l}"];
subgraph cluster_IfRegion_205166691 {
label = "IF [B:5:0x0025, B:7:0x002b, B:9:0x0031, B:11:0x0037, B:13:0x003d] THEN: R(1:(2:16|(1:18)(0))(2:19|(1:21)(0))) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0025|ADDED_TO_REGION\l|if (r12 != r2) goto L_0x0027\l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|ADDED_TO_REGION\l|if (r12.getVisibility() == 0) goto L_0x002d\l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|ADDED_TO_REGION\l|if (hasOpaqueBackground(r12) == true) goto L_0x0033\l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|ADDED_TO_REGION\l|if (isDrawerView(r12) == true) goto L_0x0039\l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|ADDED_TO_REGION\l|if (r12.getHeight() \>= r3) goto L_0x0040\l}"];
subgraph cluster_Region_1815280742 {
label = "R(1:(2:16|(1:18)(0))(2:19|(1:21)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1920647990 {
label = "IF [B:15:0x0044] THEN: R(2:16|(1:18)(0)) ELSE: R(2:19|(1:21)(0))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0044|if (checkDrawerViewAbsoluteGravity(r12, 3) == true) goto L_0x0046\l}"];
subgraph cluster_Region_1120573411 {
label = "R(2:16|(1:18)(0))";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0046|int int r12 = r12.getRight()\l}"];
subgraph cluster_IfRegion_750191829 {
label = "IF [B:17:0x004a] THEN: R(1:18) ELSE: R(0)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x004a|if (r12 \> r10) goto L_0x004c\l}"];
subgraph cluster_Region_1341331739 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x004c|r10 = r12\l}"];
}
subgraph cluster_Region_766298376 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_354837856 {
label = "R(2:19|(1:21)(0))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x004e|int int r12 = r12.getLeft()\l}"];
subgraph cluster_IfRegion_27478717 {
label = "IF [B:20:0x0052] THEN: R(1:21) ELSE: R(0)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0052|if (r12 \< r11) goto L_0x0054\l}"];
subgraph cluster_Region_2072906030 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0054|r11 = r12\l}"];
}
subgraph cluster_Region_1448243391 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
Node_22 [shape=record,label="{22\:\ 0x0055|LOOP_END\lPHI: r10 r11 \l  PHI: (r10v7 int) = (r10v6 int), (r10v6 int), (r10v6 int), (r10v6 int), (r10v6 int), (r10v6 int), (r10v6 int), (r10v6 int), (r10v8 int) binds: [B:42:0x0055, B:43:0x0055, B:44:0x0055, B:45:0x0055, B:49:0x0055, B:48:0x0055, B:41:0x0055, B:46:0x0055, B:47:0x0055] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v4 int) = (r11v3 int), (r11v3 int), (r11v3 int), (r11v3 int), (r11v3 int), (r11v3 int), (r11v5 int), (r11v3 int), (r11v3 int) binds: [B:42:0x0055, B:43:0x0055, B:44:0x0055, B:45:0x0055, B:49:0x0055, B:48:0x0055, B:41:0x0055, B:46:0x0055, B:47:0x0055] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x001f\-\>B:22:0x0055\l|r5++\l}"];
}
}
Node_23 [shape=record,label="{23\:\ 0x0058|r15.clipRect(r10, 0, r11, getHeight())\lr8 = r10\l}"];
}
subgraph cluster_Region_676272793 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0061|r11 = r5\l}"];
}
}
Node_25 [shape=record,label="{25\:\ 0x0062|PHI: r8 r11 \l  PHI: (r8v1 int) = (r8v0 int), (r8v11 int) binds: [B:24:0x0061, B:23:0x0058] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v0 int) = (r11v1 int), (r11v3 int) binds: [B:24:0x0061, B:23:0x0058] A[DONT_GENERATE, DONT_INLINE]\l|boolean boolean r9 = super.drawChild(r15, r16, r17)\lr15.restoreToCount(r6)\l}"];
subgraph cluster_IfRegion_609301323 {
label = "IF [B:26:0x006e, B:27:0x0070] THEN: R(1:28) ELSE: R(1:(1:33)(1:(1:38)))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x006e|if (r0.mScrimOpacity \> 0.0f) goto L_0x0070\l}"];
Node_27 [shape=record,label="{27\:\ 0x0070|ADDED_TO_REGION\l|if (r4 != false) goto L_0x0072\l}"];
subgraph cluster_Region_1458086867 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0072|r0.mScrimPaint.setColor((((int) (((float) ((r0.mScrimColor & android.support.p000v4.view.ViewCompat.MEASURED_STATE_MASK) \>\>\> 24)) * r0.mScrimOpacity)) \<\< 24) \| (r0.mScrimColor & android.support.p000v4.view.ViewCompat.MEASURED_SIZE_MASK))\lr15.drawRect((float) r8, 0.0f, (float) r11, (float) getHeight(), r0.mScrimPaint)\l}"];
}
subgraph cluster_Region_1964032245 {
label = "R(1:(1:33)(1:(1:38))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1946643678 {
label = "IF [B:30:0x00a3, B:32:0x00a9] THEN: R(1:33) ELSE: R(1:(1:38)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x00a3|if (r0.mShadowLeftResolved != null) goto L_0x00a5\l}"];
Node_32 [shape=record,label="{32\:\ 0x00a9|ADDED_TO_REGION\l|if (checkDrawerViewAbsoluteGravity(r2, 3) != false) goto L_0x00ab\l}"];
subgraph cluster_Region_1056680835 {
label = "R(1:33)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x00ab|int int r3 = r0.mShadowLeftResolved.getIntrinsicWidth()\lint int r7 = r16.getRight()\lfloat float r5 = java.lang.Math.max(0.0f, java.lang.Math.min(((float) r7) \/ ((float) r0.mLeftDragger.getEdgeSize()), 1.0f))\lr0.mShadowLeftResolved.setBounds(r7, r16.getTop(), r3 + r7, r16.getBottom())\lr0.mShadowLeftResolved.setAlpha((int) (r5 * 255.0f))\lr0.mShadowLeftResolved.draw(r15)\l}"];
}
subgraph cluster_Region_238736381 {
label = "R(1:(1:38)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1757771483 {
label = "IF [B:35:0x00e4, B:37:0x00eb] THEN: R(1:38) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x00e4|ADDED_TO_REGION\l|if (r0.mShadowRightResolved != null) goto L_0x00e6\l}"];
Node_37 [shape=record,label="{37\:\ 0x00eb|ADDED_TO_REGION\l|if (checkDrawerViewAbsoluteGravity(r2, 5) == true) goto L_0x00ed\l}"];
subgraph cluster_Region_1848700686 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x00ed|int int r3 = r0.mShadowRightResolved.getIntrinsicWidth()\lint int r7 = r16.getLeft()\lfloat float r5 = java.lang.Math.max(0.0f, java.lang.Math.min(((float) (getWidth() \- r7)) \/ ((float) r0.mRightDragger.getEdgeSize()), 1.0f))\lr0.mShadowRightResolved.setBounds(r7 \- r3, r16.getTop(), r7, r16.getBottom())\lr0.mShadowRightResolved.setAlpha((int) (r5 * 255.0f))\lr0.mShadowRightResolved.draw(r15)\l}"];
}
}
}
}
}
}
Node_39 [shape=record,label="{39\:\ 0x0129|RETURN\l|return r9\l}"];
}
Node_6 [shape=record,color=red,label="{6\:\ 0x0027}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x002d}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0033}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0039}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0040}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x009d}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x00a5}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x00e2}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x00e6}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0058|SYNTHETIC\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0055|SYNTHETIC\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0055|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0055|SYNTHETIC\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0055|SYNTHETIC\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0055|SYNTHETIC\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x0055|SYNTHETIC\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0055|SYNTHETIC\l}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x0055|SYNTHETIC\l}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x0055|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected boolean android.support.v4.widget.DrawerLayout.drawChild((r14v0 'this' android.support.v4.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r15v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_24[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_40[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_42[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_43[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_44[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_45[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_49[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_19[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_46[style=dashed];
Node_18 -> Node_47;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_48[style=dashed];
Node_21 -> Node_41;
Node_22 -> Node_3;
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_29[style=dashed];
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_39;
Node_30 -> Node_31;
Node_30 -> Node_34[style=dashed];
Node_32 -> Node_33;
Node_32 -> Node_34[style=dashed];
Node_33 -> Node_39;
Node_35 -> Node_36;
Node_35 -> Node_39[style=dashed];
Node_37 -> Node_38;
Node_37 -> Node_39[style=dashed];
Node_38 -> Node_39;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_34 -> Node_35;
Node_36 -> Node_37;
Node_40 -> Node_23;
Node_41 -> Node_22;
Node_42 -> Node_22;
Node_43 -> Node_22;
Node_44 -> Node_22;
Node_45 -> Node_22;
Node_46 -> Node_22;
Node_47 -> Node_22;
Node_48 -> Node_22;
Node_49 -> Node_22;
}

