digraph "CFG forandroid.support.v4.widget.DrawerLayout.onDraw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super.onDraw(r5)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r4.mDrawStatusBarBackground == false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r4.mStatusBarBackground == null) goto L_?\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if (android.os.Build.VERSION.SDK_INT \< 21) goto L_0x001f\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012}"];
Node_7 [shape=record,label="{7\:\ 0x0014|if (r4.mLastInsets == null) goto L_0x001f\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|int r0 = ((android.view.WindowInsets) r4.mLastInsets).getSystemWindowInsetTop()\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|r0 = 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|PHI: r0 \l  PHI: (r0v3 int) = (r0v5 int), (r0v9 int) binds: [B:9:0x001f, B:8:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \<= 0) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|r4.mStatusBarBackground.setBounds(0, 0, getWidth(), r0)\lr4.mStatusBarBackground.draw(r5)\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.v4.widget.DrawerLayout.onDraw((r4v0 'this' android.support.v4.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r5v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
}

