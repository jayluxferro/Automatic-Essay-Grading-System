digraph "CFG forandroid.support.v4.widget.DrawerLayout.onSaveInstanceState()Landroid\/os\/Parcelable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.os.Parcelable) = (r9 I:android.view.ViewGroup) android.view.ViewGroup.onSaveInstanceState():android.os.Parcelable type: SUPER \l0x0004: NEW_INSTANCE  (r1 I:android.support.v4.widget.DrawerLayout$SavedState) =  android.support.v4.widget.DrawerLayout$SavedState \l0x0006: INVOKE  \l  (r1 I:android.support.v4.widget.DrawerLayout$SavedState)\l  (r0 I:android.os.Parcelable)\l android.support.v4.widget.DrawerLayout.SavedState.\<init\>(android.os.Parcelable):void type: DIRECT \l0x0009: INVOKE  (r0 I:int) = (r9 I:android.support.v4.widget.DrawerLayout) android.support.v4.widget.DrawerLayout.getChildCount():int type: VIRTUAL \l0x000d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r3 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:15:0x0036 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: INVOKE  (r4 I:android.view.View) = (r9 I:android.support.v4.widget.DrawerLayout), (r3 I:int) android.support.v4.widget.DrawerLayout.getChildAt(int):android.view.View type: VIRTUAL \l0x0015: INVOKE  (r4 I:android.view.ViewGroup$LayoutParams) = (r4 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0019: CHECK_CAST  (r4 I:android.support.v4.widget.DrawerLayout$LayoutParams) = (android.support.v4.widget.DrawerLayout$LayoutParams) (r4 I:?[OBJECT, ARRAY]) \l0x001b: IGET  (r5 I:int) = (r4 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.openState int \l0x001d: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0022 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: IGET  (r7 I:int) = (r4 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.openState int \l0x0025: CONST  (r8 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0029 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0032 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002f \l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: IGET  (r0 I:int) = (r4 I:android.support.v4.widget.DrawerLayout$LayoutParams) android.support.v4.widget.DrawerLayout.LayoutParams.gravity int \l0x0034: IPUT  \l  (r0 I:int)\l  (r1 I:android.support.v4.widget.DrawerLayout$SavedState)\l android.support.v4.widget.DrawerLayout.SavedState.openDrawerGravity int \l}"];
Node_15 [shape=record,label="{15\:\ 0x0036|0x0036: IGET  (r0 I:int) = (r9 I:android.support.v4.widget.DrawerLayout) android.support.v4.widget.DrawerLayout.mLockModeLeft int \l0x0038: IPUT  \l  (r0 I:int)\l  (r1 I:android.support.v4.widget.DrawerLayout$SavedState)\l android.support.v4.widget.DrawerLayout.SavedState.lockModeLeft int \l0x003a: IGET  (r0 I:int) = (r9 I:android.support.v4.widget.DrawerLayout) android.support.v4.widget.DrawerLayout.mLockModeRight int \l0x003c: IPUT  \l  (r0 I:int)\l  (r1 I:android.support.v4.widget.DrawerLayout$SavedState)\l android.support.v4.widget.DrawerLayout.SavedState.lockModeRight int \l0x003e: IGET  (r0 I:int) = (r9 I:android.support.v4.widget.DrawerLayout) android.support.v4.widget.DrawerLayout.mLockModeStart int \l0x0040: IPUT  \l  (r0 I:int)\l  (r1 I:android.support.v4.widget.DrawerLayout$SavedState)\l android.support.v4.widget.DrawerLayout.SavedState.lockModeStart int \l0x0042: IGET  (r0 I:int) = (r9 I:android.support.v4.widget.DrawerLayout) android.support.v4.widget.DrawerLayout.mLockModeEnd int \l0x0044: IPUT  \l  (r0 I:int)\l  (r1 I:android.support.v4.widget.DrawerLayout$SavedState)\l android.support.v4.widget.DrawerLayout.SavedState.lockModeEnd int \l}"];
Node_16 [shape=record,label="{16\:\ 0x0046|0x0046: RETURN  (r1 I:android.os.Parcelable) \l}"];
MethodNode[shape=record,label="{protected android.os.Parcelable android.support.v4.widget.DrawerLayout.onSaveInstanceState((r9 'this' I:android.support.v4.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_13;
Node_11 -> Node_14[style=dashed];
Node_13 -> Node_1;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

