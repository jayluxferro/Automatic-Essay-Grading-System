digraph "CFG forandroid.support.v4.widget.DrawerLayout.setDrawerTitle(ILjava\/lang\/CharSequence;)V" {
subgraph cluster_Region_1625284763 {
label = "R(2:0|(1:2)(1:(1:5)(0)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r2 = android.support.p000v4.view.GravityCompat.getAbsoluteGravity(r2, android.support.p000v4.view.ViewCompat.getLayoutDirection(r1))\l}"];
subgraph cluster_IfRegion_1806647870 {
label = "IF [B:1:0x0009] THEN: R(1:2) ELSE: R(1:(1:5)(0))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r2 == 3) goto L_0x000b\l}"];
subgraph cluster_Region_397409696 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000b|r1.mTitleLeft = r3\l}"];
}
subgraph cluster_Region_495049826 {
label = "R(1:(1:5)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_168949870 {
label = "IF [B:4:0x000f] THEN: R(1:5) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|if (r2 == 5) goto L_0x0011\l}"];
subgraph cluster_Region_931136952 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|r1.mTitleRight = r3\l}"];
}
subgraph cluster_Region_554369583 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x000e}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v4.widget.DrawerLayout.setDrawerTitle((r1v0 'this' android.support.v4.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_4 -> Node_5;
Node_4 -> Node_8[style=dashed];
Node_5 -> Node_6;
Node_3 -> Node_4;
}

