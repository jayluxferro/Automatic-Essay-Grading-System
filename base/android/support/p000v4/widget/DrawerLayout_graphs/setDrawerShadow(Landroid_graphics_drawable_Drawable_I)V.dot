digraph "CFG forandroid.support.v4.widget.DrawerLayout.setDrawerShadow(Landroid\/graphics\/drawable\/Drawable;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (SET_DRAWER_SHADOW_FROM_ELEVATION == false) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005}"];
Node_4 [shape=record,label="{4\:\ 0x000a|if ((r4 & android.support.p000v4.view.GravityCompat.START) != 8388611) goto L_0x000f\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|r2.mShadowStart = r3\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f}"];
Node_7 [shape=record,label="{7\:\ 0x0014|if ((r4 & android.support.p000v4.view.GravityCompat.END) != 8388613) goto L_0x0019\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|r2.mShadowEnd = r3\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019}"];
Node_10 [shape=record,label="{10\:\ 0x001c|if ((r4 & 3) != 3) goto L_0x0021\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|r2.mShadowLeft = r3\l}"];
Node_12 [shape=record,label="{12\:\ 0x0021}"];
Node_13 [shape=record,label="{13\:\ 0x0023|if ((r4 & 5) != 5) goto L_0x002e\l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|r2.mShadowRight = r3\l}"];
Node_15 [shape=record,label="{15\:\ 0x0027|resolveShadowDrawables()\linvalidate()\l}"];
Node_16 [shape=record,label="{16\:\ 0x002d|RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ 0x002e|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.v4.widget.DrawerLayout.setDrawerShadow((r2v0 'this' android.support.v4.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r3v0 android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

