digraph "CFG forandroid.support.v4.widget.ViewDragHelper.checkTouchSlop(II)Z" {
subgraph cluster_Region_1836480977 {
label = "R(1:(2:(1:2)|(4:4|8|11|(1:(1:(2:(1:20)|(1:27)))(1:(1:28)(1:24)))(1:(1:16)(1:26)))))";
node [shape=record,color=blue];
subgraph cluster_Region_104796623 {
label = "R(2:(1:2)|(4:4|8|11|(1:(1:(2:(1:20)|(1:27)))(1:(1:28)(1:24)))(1:(1:16)(1:26))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1897401208 {
label = "IF [B:1:0x0005] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (isPointerDown(r8) == false) goto L_0x0007\l}"];
subgraph cluster_Region_326159806 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1620753078 {
label = "R(4:4|8|11|(1:(1:(2:(1:20)|(1:27)))(1:(1:28)(1:24)))(1:(1:16)(1:26)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|boolean r0 = (r7 & 1) == 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|boolean r7 = (r7 & 2) == 2\l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|PHI: r7 \l  PHI: (r7v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|float float r3 = r6.mLastMotionX[r8] \- r6.mInitialMotionX[r8]\lfloat float r4 = r6.mLastMotionY[r8] \- r6.mInitialMotionY[r8]\l}"];
subgraph cluster_IfRegion_1150541875 {
label = "IF [B:12:0x0029, B:13:0x002b] THEN: R(1:(1:(2:(1:20)|(1:27)))(1:(1:28)(1:24))) ELSE: R(1:(1:16)(1:26))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0029|if (r0 == false) goto L_0x003f\l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|ADDED_TO_REGION\l|if (r7 == false) goto L_0x003f\l}"];
subgraph cluster_Region_1301714672 {
label = "R(1:(1:(2:(1:20)|(1:27)))(1:(1:28)(1:24)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2127240794 {
label = "IF [B:17:0x003f] THEN: R(1:(2:(1:20)|(1:27))) ELSE: R(1:(1:28)(1:24))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x003f|if (r0 == true) goto L_0x0041\l}"];
subgraph cluster_Region_869881828 {
label = "R(1:(2:(1:20)|(1:27)))";
node [shape=record,color=blue];
subgraph cluster_Region_44816684 {
label = "R(2:(1:20)|(1:27))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_970089915 {
label = "IF [B:19:0x004a] THEN: R(1:20) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x004a|if (java.lang.Math.abs(r3) \> ((float) r6.mTouchSlop)) goto L_0x004c\l}"];
subgraph cluster_Region_396622330 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x004c|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1861995752 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
subgraph cluster_Region_392482980 {
label = "R(1:(1:28)(1:24)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_212349330 {
label = "IF [B:21:0x004e, B:23:0x0059] THEN: R(1:28) ELSE: R(1:24) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x004e|if (r7 == false) goto L_0x005d\l}"];
Node_23 [shape=record,label="{23\:\ 0x0059|ADDED_TO_REGION\l|if (java.lang.Math.abs(r4) \<= ((float) r6.mTouchSlop)) goto L_?\l}"];
subgraph cluster_Region_1264196061 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
subgraph cluster_Region_1128154469 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x005b|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
}
}
}
subgraph cluster_Region_1930579302 {
label = "R(1:(1:16)(1:26)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1654364362 {
label = "IF [B:15:0x003b] THEN: R(1:16) ELSE: R(1:26) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x003b|if (((r3 * r3) + (r4 * r4)) \> ((float) (r6.mTouchSlop * r6.mTouchSlop))) goto L_0x003d\l}"];
subgraph cluster_Region_1111642704 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x003d|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
subgraph cluster_Region_1506619188 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0008}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000d}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000f}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0010|PHI: r0 \l  PHI: (r0v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0014}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0016}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x002d}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0041}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0050}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x005d|RETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{public boolean android.support.v4.widget.ViewDragHelper.checkTouchSlop((r6v0 'this' android.support.v4.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_8 -> Node_9;
Node_8 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_21[style=dashed];
Node_19 -> Node_20;
Node_19 -> Node_27[style=dashed];
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_15 -> Node_16;
Node_15 -> Node_26[style=dashed];
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_14 -> Node_15;
Node_18 -> Node_19;
Node_22 -> Node_23;
}

