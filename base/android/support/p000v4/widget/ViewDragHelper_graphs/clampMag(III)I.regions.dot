digraph "CFG forandroid.support.v4.widget.ViewDragHelper.clampMag(III)I" {
subgraph cluster_Region_324516864 {
label = "R(2:0|(2:(1:2)|(1:(2:(1:4)|(1:6)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = java.lang.Math.abs(r2)\l}"];
subgraph cluster_Region_289557997 {
label = "R(2:(1:2)|(1:(2:(1:4)|(1:6))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2038276660 {
label = "IF [B:1:0x0004] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 \< r3) goto L_0x0006\l}"];
subgraph cluster_Region_1801654232 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_1808156432 {
label = "R(1:(2:(1:4)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1879304775 {
label = "R(2:(1:4)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_990389630 {
label = "IF [B:3:0x0008] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r0 \> r4) goto L_0x000a\l}"];
subgraph cluster_Region_1932393615 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|RETURN\l|return r2 \> 0 ? r4 : \-r4\l}"];
}
}
subgraph cluster_Region_12792061 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000f|RETURN\l|return r2\l}"];
}
}
}
}
}
Node_5 [shape=record,color=red,label="{5\:\ 0x000d}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int android.support.v4.widget.ViewDragHelper.clampMag((r1v0 'this' android.support.v4.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_7;
}

