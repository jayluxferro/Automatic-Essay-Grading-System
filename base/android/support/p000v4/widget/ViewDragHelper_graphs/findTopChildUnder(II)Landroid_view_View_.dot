digraph "CFG forandroid.support.v4.widget.ViewDragHelper.findTopChildUnder(II)Landroid\/view\/View;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r3.mParentView.getChildCount() + \-1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v4 int) binds: [B:0:0x0000, B:11:0x002f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0008\-\>B:11:0x002f\l|if (r0 \< 0) goto L_0x0032\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|android.view.View r1 = r3.mParentView.getChildAt(r3.mCallback.getOrderedChildIndex(r0))\l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|if (r4 \< r1.getLeft()) goto L_0x002f\l}"];
Node_4 [shape=record,label="{4\:\ 0x001c}"];
Node_5 [shape=record,label="{5\:\ 0x0020|if (r4 \>= r1.getRight()) goto L_0x002f\l}"];
Node_6 [shape=record,label="{6\:\ 0x0022}"];
Node_7 [shape=record,label="{7\:\ 0x0026|if (r5 \< r1.getTop()) goto L_0x002f\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028}"];
Node_9 [shape=record,label="{9\:\ 0x002c|if (r5 \>= r1.getBottom()) goto L_0x002f\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|RETURN\l|return r1\l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|LOOP_END\lLOOP:0: B:1:0x0008\-\>B:11:0x002f\l|int r0 = r0 + \-1\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|RETURN\l|return null\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x002e|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x002f|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x002f|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x002f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public android.view.View android.support.v4.widget.ViewDragHelper.findTopChildUnder((r3v0 'this' android.support.v4.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_16;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_17;
Node_8 -> Node_9;
Node_9 -> Node_14[style=dashed];
Node_9 -> Node_18;
Node_11 -> Node_1;
Node_13 -> Node_12;
Node_14 -> Node_10;
Node_15 -> Node_11;
Node_16 -> Node_11;
Node_17 -> Node_11;
Node_18 -> Node_11;
}

