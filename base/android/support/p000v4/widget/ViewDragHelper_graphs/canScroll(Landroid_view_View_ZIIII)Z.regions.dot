digraph "CFG forandroid.support.v4.widget.ViewDragHelper.canScroll(Landroid\/view\/View;ZIIII)Z" {
subgraph cluster_Region_1995329822 {
label = "R(3:0|(2:2|(3:4|(2:12|(1:(1:14)))|15))|(2:(1:21)|(1:30))) | DECL_VAR: int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.view.View r0 = r14\l}"];
subgraph cluster_IfRegion_1046858728 {
label = "IF [B:1:0x0004] THEN: R(2:2|(3:4|(2:12|(1:(1:14)))|15)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if ((r0 instanceof android.view.ViewGroup) == true) goto L_0x0006\l}"];
subgraph cluster_Region_107430141 {
label = "R(2:2|(3:4|(2:12|(1:(1:14)))|15))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|android.view.ViewGroup android.view.ViewGroup r1 = (android.view.ViewGroup) r0\lint int r3 = r14.getScrollX()\lint int r4 = r14.getScrollY()\lint int r5 = r1.getChildCount() \- 1\l}"];
subgraph cluster_LoopRegion_552632209 {
label = "LOOP:0: (3:4|(2:12|(1:(1:14)))|15)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0016|LOOP_START\lPHI: r5 \l  PHI: (r5v2 int) = (r5v1 int), (r5v3 int) binds: [B:2:0x0006, B:15:0x0052] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0016\-\>B:15:0x0052\l|if (r5 \>= 0) goto L_0x0018\l}"];
subgraph cluster_Region_605207600 {
label = "R(3:4|(2:12|(1:(1:14)))|15)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0018|android.view.View android.view.View r7 = r1.getChildAt(r5)\lint int r6 = r18 + r3\l}"];
subgraph cluster_IfRegion_876091857 {
label = "IF [B:5:0x0022, B:7:0x0028, B:9:0x0030, B:11:0x0036] THEN: R(2:12|(1:(1:14))) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0022|ADDED_TO_REGION\l|if (r6 \>= r7.getLeft()) goto L_0x0024\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|ADDED_TO_REGION\l|if (r6 \< r7.getRight()) goto L_0x002a\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|ADDED_TO_REGION\l|if ((r8 = r19 + r4) \>= r7.getTop()) goto L_0x0032\l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|ADDED_TO_REGION\l|if (r8 \< r7.getBottom()) goto L_0x0038\l}"];
subgraph cluster_Region_141132901 {
label = "R(2:12|(1:(1:14)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0038}"];
subgraph cluster_Region_955528779 {
label = "R(1:(1:14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_140822275 {
label = "IF [B:13:0x004f] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x004f|if (canScroll(r7, true, r16, r17, r6 \- r7.getLeft(), r8 \- r7.getTop()) == true) goto L_0x0051\l}"];
subgraph cluster_Region_750189675 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0051|RETURN\l|return true\l}"];
}
}
}
}
}
Node_15 [shape=record,label="{15\:\ 0x0052|LOOP_END\lLOOP:0: B:3:0x0016\-\>B:15:0x0052\l|r5\-\-\l}"];
}
}
}
}
subgraph cluster_Region_638829089 {
label = "R(2:(1:21)|(1:30))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1654468650 {
label = "IF [B:16:0x0055, B:18:0x005e, B:20:0x0067] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0055|if (r15 == false) goto L_0x006a\l}"];
Node_18 [shape=record,label="{18\:\ 0x005e|ADDED_TO_REGION\l|if (r14.canScrollHorizontally(\-r16) == false) goto L_0x0060\l}"];
Node_20 [shape=record,label="{20\:\ 0x0067|ADDED_TO_REGION\l|if (r14.canScrollVertically(\-r17) == false) goto L_0x006a\l}"];
subgraph cluster_Region_2076316764 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x006a|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1619847915 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
}
Node_6 [shape=record,color=red,label="{6\:\ 0x0024}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x002a}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0032}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0057}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0060}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0055|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0051|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0052|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0052|SYNTHETIC\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0052|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0052|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0052|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return true\l}"];
MethodNode[shape=record,label="{protected boolean android.support.v4.widget.ViewDragHelper.canScroll((r13v0 'this' android.support.v4.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r14v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], , , , , \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_16[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_22[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_24[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_25[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_26[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_27[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_23;
Node_13 -> Node_28[style=dashed];
Node_15 -> Node_3;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_18 -> Node_19;
Node_18 -> Node_29[style=dashed];
Node_20 -> Node_21;
Node_20 -> Node_30[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_22 -> Node_16;
Node_23 -> Node_14;
Node_24 -> Node_15;
Node_25 -> Node_15;
Node_26 -> Node_15;
Node_27 -> Node_15;
Node_28 -> Node_15;
}

