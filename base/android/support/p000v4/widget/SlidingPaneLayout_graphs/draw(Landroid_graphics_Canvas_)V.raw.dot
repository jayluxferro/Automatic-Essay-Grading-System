digraph "CFG forandroid.support.v4.widget.SlidingPaneLayout.draw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r7 I:android.view.ViewGroup)\l  (r8 I:android.graphics.Canvas)\l android.view.ViewGroup.draw(android.graphics.Canvas):void type: SUPER \l0x0003: INVOKE  (r0 I:boolean) = (r7 I:android.support.v4.widget.SlidingPaneLayout) android.support.v4.widget.SlidingPaneLayout.isLayoutRtlSupport():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r0 I:android.graphics.drawable.Drawable) = (r7 I:android.support.v4.widget.SlidingPaneLayout) android.support.v4.widget.SlidingPaneLayout.mShadowDrawableRight android.graphics.drawable.Drawable \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IGET  (r0 I:android.graphics.drawable.Drawable) = (r7 I:android.support.v4.widget.SlidingPaneLayout) android.support.v4.widget.SlidingPaneLayout.mShadowDrawableLeft android.graphics.drawable.Drawable \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: INVOKE  (r1 I:int) = (r7 I:android.support.v4.widget.SlidingPaneLayout) android.support.v4.widget.SlidingPaneLayout.getChildCount():int type: VIRTUAL \l0x0012: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r1 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:7:0x001a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INVOKE  (r1 I:android.view.View) = \l  (r7 I:android.support.v4.widget.SlidingPaneLayout)\l  (r2 I:int)\l android.support.v4.widget.SlidingPaneLayout.getChildAt(int):android.view.View type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0048 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0020 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: INVOKE  (r2 I:int) = (r1 I:android.view.View) android.view.View.getTop():int type: VIRTUAL \l0x0024: INVOKE  (r3 I:int) = (r1 I:android.view.View) android.view.View.getBottom():int type: VIRTUAL \l0x0028: INVOKE  (r4 I:int) = (r0 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getIntrinsicWidth():int type: VIRTUAL \l0x002c: INVOKE  (r5 I:boolean) = (r7 I:android.support.v4.widget.SlidingPaneLayout) android.support.v4.widget.SlidingPaneLayout.isLayoutRtlSupport():boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0038 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|0x0032: INVOKE  (r1 I:int) = (r1 I:android.view.View) android.view.View.getRight():int type: VIRTUAL \l0x0036: ARITH  (r4 I:int) = (r4 I:int) + (r1 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0038|0x0038: INVOKE  (r1 I:int) = (r1 I:android.view.View) android.view.View.getLeft():int type: VIRTUAL \l0x003c: ARITH  (r4 I:int) = (r1 I:int) \- (r4 I:int) \l0x003e: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003f: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0040: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0041|0x0041: INVOKE  \l  (r0 I:android.graphics.drawable.Drawable)\l  (r1 I:int)\l  (r2 I:int)\l  (r4 I:int)\l  (r3 I:int)\l android.graphics.drawable.Drawable.setBounds(int, int, int, int):void type: VIRTUAL \l0x0044: INVOKE  \l  (r0 I:android.graphics.drawable.Drawable)\l  (r8 I:android.graphics.Canvas)\l android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0047|0x0047: RETURN   \l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|0x0048: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.widget.SlidingPaneLayout.draw((r7 'this' I:android.support.v4.widget.SlidingPaneLayout A[IMMUTABLE_TYPE, THIS]), (r8 I:android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_11;
Node_9 -> Node_17[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

