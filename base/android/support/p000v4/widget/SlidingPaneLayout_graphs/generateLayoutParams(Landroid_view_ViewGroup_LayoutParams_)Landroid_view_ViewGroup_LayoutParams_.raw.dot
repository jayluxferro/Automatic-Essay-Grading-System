digraph "CFG forandroid.support.v4.widget.SlidingPaneLayout.generateLayoutParams(Landroid\/view\/ViewGroup$LayoutParams;)Landroid\/view\/ViewGroup$LayoutParams;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) android.view.ViewGroup$MarginLayoutParams \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:android.support.v4.widget.SlidingPaneLayout$LayoutParams) =  android.support.v4.widget.SlidingPaneLayout$LayoutParams \l0x0006: CHECK_CAST  (r2 I:android.view.ViewGroup$MarginLayoutParams) = (android.view.ViewGroup$MarginLayoutParams) (r2 I:?[OBJECT, ARRAY]) \l0x0008: INVOKE  \l  (r0 I:android.support.v4.widget.SlidingPaneLayout$LayoutParams)\l  (r2 I:android.view.ViewGroup$MarginLayoutParams)\l android.support.v4.widget.SlidingPaneLayout.LayoutParams.\<init\>(android.view.ViewGroup$MarginLayoutParams):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:android.support.v4.widget.SlidingPaneLayout$LayoutParams) =  android.support.v4.widget.SlidingPaneLayout$LayoutParams \l0x000e: INVOKE  \l  (r0 I:android.support.v4.widget.SlidingPaneLayout$LayoutParams)\l  (r2 I:android.view.ViewGroup$LayoutParams)\l android.support.v4.widget.SlidingPaneLayout.LayoutParams.\<init\>(android.view.ViewGroup$LayoutParams):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: RETURN  (r0 I:android.view.ViewGroup$LayoutParams) \l}"];
MethodNode[shape=record,label="{protected android.view.ViewGroup$LayoutParams android.support.v4.widget.SlidingPaneLayout.generateLayoutParams((r1 'this' I:android.support.v4.widget.SlidingPaneLayout A[IMMUTABLE_TYPE, THIS]), (r2 I:android.view.ViewGroup$LayoutParams A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

