digraph "CFG forandroid.support.v4.widget.SlidingPaneLayout.smoothSlideTo(FI)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r4.mCanSlide != false) goto L_0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|RETURN\l|return false\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|boolean r6 = isLayoutRtlSupport()\landroid.support.v4.widget.SlidingPaneLayout$LayoutParams r1 = (android.support.p000v4.widget.SlidingPaneLayout.LayoutParams) r4.mSlideableView.getLayoutParams()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|if (r6 == false) goto L_0x0032\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|int r6 = getPaddingRight() + r1.rightMargin\lint r1 = r4.mSlideableView.getWidth()\lint r5 = (int) (((float) getWidth()) \- ((((float) r6) + (r5 * ((float) r4.mSlideRange))) + ((float) r1)))\l}"];
Node_6 [shape=record,label="{6\:\ 0x0032|int r5 = (int) (((float) (getPaddingLeft() + r1.leftMargin)) + (r5 * ((float) r4.mSlideRange)))\l}"];
Node_7 [shape=record,label="{7\:\ 0x0041|PHI: r5 \l  PHI: (r5v1 int) = (r5v5 int), (r5v8 int) binds: [B:6:0x0032, B:5:0x0014] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x004f|if (r4.mDragHelper.smoothSlideViewTo(r4.mSlideableView, r5, r4.mSlideableView.getTop()) == false) goto L_0x0059\l}"];
Node_9 [shape=record,label="{9\:\ 0x0051|setAllChildrenVisible()\landroid.support.p000v4.view.ViewCompat.postInvalidateOnAnimation(r4)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0058|RETURN\l|return true\l}"];
Node_11 [shape=record,label="{11\:\ 0x0059|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{boolean android.support.v4.widget.SlidingPaneLayout.smoothSlideTo((r4v0 'this' android.support.v4.widget.SlidingPaneLayout A[IMMUTABLE_TYPE, THIS]), (r5v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
}

