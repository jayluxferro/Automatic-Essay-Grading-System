digraph "CFG forandroid.support.v4.widget.SlidingPaneLayout.dimChildView(Landroid\/view\/View;FI)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.view.ViewGroup$LayoutParams) = (r4 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0004: CHECK_CAST  (r0 I:android.support.v4.widget.SlidingPaneLayout$LayoutParams) = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) (r0 I:?[OBJECT, ARRAY]) \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CMP_L  (r1 I:int) = (r5 I:float), (r1 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:10:0x0044 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0044 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (\-16777216(0xffffffffff000000, float:\-1.7014118E38) ?[int, float, short, byte, char])\l \l0x000f: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (r6 I:?[int, boolean, short, byte, char]) \l0x0010: ARITH  (r1 I:int) = (r1 I:int) \>\>\> (24 int) \l0x0012: CAST  (r1 I:float) = (float) (r1 I:int) \l0x0013: ARITH  (r1 I:float) = (r1 I:float) * (r5 I:float) \l0x0015: CAST  (r5 I:int) = (int) (r1 I:float) \l0x0016: ARITH  (r5 I:int) = (r5 I:int) \<\< (24 int) \l0x0018: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (16777215(0xffffff, float:2.3509886E\-38) ?[int, float, short, byte, char])\l \l0x001b: ARITH  (r6 I:?[int, boolean, short, byte, char]) = (r6 I:?[int, boolean, short, byte, char]) & (r1 I:?[int, boolean, short, byte, char]) \l0x001c: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) \| (r6 I:?[int, boolean, short, byte, char]) \l0x001d: IGET  (r6 I:android.graphics.Paint) = \l  (r0 I:android.support.v4.widget.SlidingPaneLayout$LayoutParams)\l android.support.v4.widget.SlidingPaneLayout.LayoutParams.dimPaint android.graphics.Paint \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0028 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: NEW_INSTANCE  (r6 I:android.graphics.Paint) =  android.graphics.Paint \l0x0023: INVOKE  (r6 I:android.graphics.Paint) android.graphics.Paint.\<init\>():void type: DIRECT \l0x0026: IPUT  \l  (r6 I:android.graphics.Paint)\l  (r0 I:android.support.v4.widget.SlidingPaneLayout$LayoutParams)\l android.support.v4.widget.SlidingPaneLayout.LayoutParams.dimPaint android.graphics.Paint \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: IGET  (r6 I:android.graphics.Paint) = \l  (r0 I:android.support.v4.widget.SlidingPaneLayout$LayoutParams)\l android.support.v4.widget.SlidingPaneLayout.LayoutParams.dimPaint android.graphics.Paint \l0x002a: NEW_INSTANCE  (r1 I:android.graphics.PorterDuffColorFilter) =  android.graphics.PorterDuffColorFilter \l0x002c: SGET  (r2 I:android.graphics.PorterDuff$Mode) =  android.graphics.PorterDuff.Mode.SRC_OVER android.graphics.PorterDuff$Mode \l0x002e: INVOKE  \l  (r1 I:android.graphics.PorterDuffColorFilter)\l  (r5 I:int)\l  (r2 I:android.graphics.PorterDuff$Mode)\l android.graphics.PorterDuffColorFilter.\<init\>(int, android.graphics.PorterDuff$Mode):void type: DIRECT \l0x0031: INVOKE  \l  (r6 I:android.graphics.Paint)\l  (r1 I:android.graphics.ColorFilter)\l android.graphics.Paint.setColorFilter(android.graphics.ColorFilter):android.graphics.ColorFilter type: VIRTUAL \l0x0034: INVOKE  (r5 I:int) = (r4 I:android.view.View) android.view.View.getLayerType():int type: VIRTUAL \l0x0038: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0039|0x0039: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0040 \l}"];
Node_8 [shape=record,label="{8\:\ 0x003b|0x003b: IGET  (r5 I:android.graphics.Paint) = \l  (r0 I:android.support.v4.widget.SlidingPaneLayout$LayoutParams)\l android.support.v4.widget.SlidingPaneLayout.LayoutParams.dimPaint android.graphics.Paint \l0x003d: INVOKE  \l  (r4 I:android.view.View)\l  (r6 I:int)\l  (r5 I:android.graphics.Paint)\l android.view.View.setLayerType(int, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0040|0x0040: INVOKE  \l  (r3 I:android.support.v4.widget.SlidingPaneLayout)\l  (r4 I:android.view.View)\l android.support.v4.widget.SlidingPaneLayout.invalidateChildRegion(android.view.View):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0044|0x0044: INVOKE  (r5 I:int) = (r4 I:android.view.View) android.view.View.getLayerType():int type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0048|0x0048: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0061 \l}"];
Node_12 [shape=record,label="{12\:\ 0x004a|0x004a: IGET  (r5 I:android.graphics.Paint) = \l  (r0 I:android.support.v4.widget.SlidingPaneLayout$LayoutParams)\l android.support.v4.widget.SlidingPaneLayout.LayoutParams.dimPaint android.graphics.Paint \l}"];
Node_13 [shape=record,label="{13\:\ 0x004c|0x004c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0054 \l}"];
Node_14 [shape=record,label="{14\:\ 0x004e|0x004e: IGET  (r5 I:android.graphics.Paint) = \l  (r0 I:android.support.v4.widget.SlidingPaneLayout$LayoutParams)\l android.support.v4.widget.SlidingPaneLayout.LayoutParams.dimPaint android.graphics.Paint \l0x0050: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0051: INVOKE  \l  (r5 I:android.graphics.Paint)\l  (r6 I:android.graphics.ColorFilter)\l android.graphics.Paint.setColorFilter(android.graphics.ColorFilter):android.graphics.ColorFilter type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0054|0x0054: NEW_INSTANCE  (r5 I:android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable) =  android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable \l0x0056: INVOKE  \l  (r5 I:android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable)\l  (r3 I:android.support.v4.widget.SlidingPaneLayout)\l  (r4 I:android.view.View)\l android.support.v4.widget.SlidingPaneLayout.DisableLayerRunnable.\<init\>(android.support.v4.widget.SlidingPaneLayout, android.view.View):void type: DIRECT \l0x0059: IGET  (r4 I:java.util.ArrayList\<android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable\>) = (r3 I:android.support.v4.widget.SlidingPaneLayout) android.support.v4.widget.SlidingPaneLayout.mPostedRunnables java.util.ArrayList \l0x005b: INVOKE  (r4 I:java.util.ArrayList), (r5 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x005e: INVOKE  (r3 I:android.view.View), (r5 I:java.lang.Runnable) android.support.v4.view.ViewCompat.postOnAnimation(android.view.View, java.lang.Runnable):void type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0061|0x0061: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v4.widget.SlidingPaneLayout.dimChildView((r3 'this' I:android.support.v4.widget.SlidingPaneLayout A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

