digraph "CFG forandroid.support.v4.widget.SlidingPaneLayout.onInterceptTouchEvent(Landroid\/view\/MotionEvent;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r7.getActionMasked()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r6.mCanSlide != false) goto L_0x002a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|if (r0 != 0) goto L_0x002a\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b}"];
Node_4 [shape=record,label="{4\:\ 0x000f|if (getChildCount() \<= 1) goto L_0x002a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|android.view.View r1 = getChildAt(1)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|if (r1 == null) goto L_0x002a\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|r6.mPreservedOpenState = r6.mDragHelper.isViewUnder(r1, (int) r7.getX(), (int) r7.getY()) ^ true\l}"];
Node_8 [shape=record,label="{8\:\ 0x002a}"];
Node_9 [shape=record,label="{9\:\ 0x002c|if (r6.mCanSlide == false) goto L_0x00a8\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e}"];
Node_11 [shape=record,label="{11\:\ 0x0030|if (r6.mIsUnableToDrag == false) goto L_0x0036\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|if (r0 == 0) goto L_0x0036\l}"];
Node_13 [shape=record,label="{13\:\ 0x0036}"];
Node_14 [shape=record,label="{14\:\ 0x0038|if (r0 == 3) goto L_0x00a2\l}"];
Node_15 [shape=record,label="{15\:\ 0x003a|if (r0 != 1) goto L_0x003d\l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|if (r0 == 0) goto L_0x0070\l}"];
Node_17 [shape=record,label="{17\:\ 0x003f}"];
Node_18 [shape=record,label="{18\:\ 0x0040|if (r0 == 2) goto L_0x0043\l}"];
Node_19 [shape=record,label="{19\:\ 0x0043|float r0 = r7.getX()\lfloat r1 = r7.getY()\lfloat r0 = java.lang.Math.abs(r0 \- r6.mInitialMotionX)\lfloat r1 = java.lang.Math.abs(r1 \- r6.mInitialMotionY)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0062|if ((r0 \> ((float) r6.mDragHelper.getTouchSlop()) ? 1 : (r0 == ((float) r6.mDragHelper.getTouchSlop()) ? 0 : \-1)) \<= 0) goto L_0x0094\l}"];
Node_21 [shape=record,label="{21\:\ 0x0064}"];
Node_22 [shape=record,label="{22\:\ 0x0066|if ((r1 \> r0 ? 1 : (r1 == r0 ? 0 : \-1)) \<= 0) goto L_0x0094\l}"];
Node_23 [shape=record,label="{23\:\ 0x0068|r6.mDragHelper.cancel()\lr6.mIsUnableToDrag = true\l}"];
Node_24 [shape=record,label="{24\:\ 0x006f|RETURN\l|return false\l}"];
Node_25 [shape=record,label="{25\:\ 0x0070|r6.mIsUnableToDrag = false\lfloat r0 = r7.getX()\lfloat r1 = r7.getY()\lr6.mInitialMotionX = r0\lr6.mInitialMotionY = r1\l}"];
Node_26 [shape=record,label="{26\:\ 0x0088|if (r6.mDragHelper.isViewUnder(r6.mSlideableView, (int) r0, (int) r1) == false) goto L_0x0094\l}"];
Node_27 [shape=record,label="{27\:\ 0x008a}"];
Node_28 [shape=record,label="{28\:\ 0x0090|if (isDimmed(r6.mSlideableView) == false) goto L_0x0094\l}"];
Node_29 [shape=record,label="{29\:\ 0x0092|r0 = true\l}"];
Node_30 [shape=record,label="{30\:\ 0x0094|r0 = false\l}"];
Node_31 [shape=record,label="{31\:\ 0x0095|PHI: r0 \l  PHI: (r0v2 boolean) = (r0v3 boolean), (r0v9 boolean) binds: [B:30:0x0094, B:29:0x0092] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x009b|if (r6.mDragHelper.shouldInterceptTouchEvent(r7) != false) goto L_?\l}"];
Node_33 [shape=record,label="{33\:\ 0x009d|if (r0 == false) goto L_0x00a0\l}"];
Node_34 [shape=record,label="{34\:\ 0x00a0|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_35 [shape=record,label="{35\:\ 0x00a2|r6.mDragHelper.cancel()\l}"];
Node_36 [shape=record,label="{36\:\ 0x00a7|RETURN\l|return false\l}"];
Node_37 [shape=record,label="{37\:\ 0x00a8|r6.mDragHelper.cancel()\l}"];
Node_38 [shape=record,label="{38\:\ 0x00b1|RETURN\l|return super.onInterceptTouchEvent(r7)\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean android.support.v4.widget.SlidingPaneLayout.onInterceptTouchEvent((r6v0 'this' android.support.v4.widget.SlidingPaneLayout A[IMMUTABLE_TYPE, THIS]), (r7v0 android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_37;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_12 -> Node_37[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_35;
Node_15 -> Node_16;
Node_15 -> Node_35[style=dashed];
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_25;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_30[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_30;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_30;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_30;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_39;
Node_33 -> Node_34;
Node_33 -> Node_40[style=dashed];
Node_35 -> Node_36;
Node_37 -> Node_38;
}

