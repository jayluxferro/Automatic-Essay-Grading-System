digraph "CFG forandroid.support.v4.widget.SlidingPaneLayout.onSaveInstanceState()Landroid\/os\/Parcelable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.os.Parcelable) = (r2 I:android.view.ViewGroup) android.view.ViewGroup.onSaveInstanceState():android.os.Parcelable type: SUPER \l0x0004: NEW_INSTANCE  (r1 I:android.support.v4.widget.SlidingPaneLayout$SavedState) =  android.support.v4.widget.SlidingPaneLayout$SavedState \l0x0006: INVOKE  \l  (r1 I:android.support.v4.widget.SlidingPaneLayout$SavedState)\l  (r0 I:android.os.Parcelable)\l android.support.v4.widget.SlidingPaneLayout.SavedState.\<init\>(android.os.Parcelable):void type: DIRECT \l0x0009: INVOKE  (r0 I:boolean) = (r2 I:android.support.v4.widget.SlidingPaneLayout) android.support.v4.widget.SlidingPaneLayout.isSlideable():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: INVOKE  (r0 I:boolean) = (r2 I:android.support.v4.widget.SlidingPaneLayout) android.support.v4.widget.SlidingPaneLayout.isOpen():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IGET  (r0 I:boolean) = (r2 I:android.support.v4.widget.SlidingPaneLayout) android.support.v4.widget.SlidingPaneLayout.mPreservedOpenState boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IPUT  \l  (r0 I:boolean)\l  (r1 I:android.support.v4.widget.SlidingPaneLayout$SavedState)\l android.support.v4.widget.SlidingPaneLayout.SavedState.isOpen boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: RETURN  (r1 I:android.os.Parcelable) \l}"];
MethodNode[shape=record,label="{protected android.os.Parcelable android.support.v4.widget.SlidingPaneLayout.onSaveInstanceState((r2 'this' I:android.support.v4.widget.SlidingPaneLayout A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

