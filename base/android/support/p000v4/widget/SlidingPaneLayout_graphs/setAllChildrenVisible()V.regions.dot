digraph "CFG forandroid.support.v4.widget.SlidingPaneLayout.setAllChildrenVisible()V" {
subgraph cluster_Region_1812749637 {
label = "R(2:0|(3:2|(1:4)(0)|5))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = getChildCount()\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_1898641258 {
label = "LOOP:0: (3:2|(1:4)(0)|5)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:5:0x0016] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:5:0x0016\l|if (r2 \< r0) goto L_0x0008\l}"];
subgraph cluster_Region_444892960 {
label = "R(3:2|(1:4)(0)|5)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|android.view.View android.view.View r3 = getChildAt(r2)\l}"];
subgraph cluster_IfRegion_748064827 {
label = "IF [B:3:0x0011] THEN: R(1:4) ELSE: R(0)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0011|if (r3.getVisibility() == 4) goto L_0x0013\l}"];
subgraph cluster_Region_587077273 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0013|r3.setVisibility(0)\l}"];
}
subgraph cluster_Region_1364180652 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_5 [shape=record,label="{5\:\ 0x0016|LOOP_END\lLOOP:0: B:1:0x0006\-\>B:5:0x0016\l|r2++\l}"];
}
}
}
Node_6 [shape=record,color=red,label="{6\:\ 0x0019}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0019|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0016|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0016|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void android.support.v4.widget.SlidingPaneLayout.setAllChildrenVisible((r6v0 'this' android.support.v4.widget.SlidingPaneLayout A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_9[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_1;
Node_7 -> Node_6;
Node_8 -> Node_5;
Node_9 -> Node_5;
}

