digraph "CFG forandroid.support.v4.widget.SlidingPaneLayout.draw(Landroid\/graphics\/Canvas;)V" {
subgraph cluster_Region_355878462 {
label = "R(4:0|(1:2)(1:3)|5|(1:(3:10|(1:12)(1:13)|14))) | DECL_VAR: android.graphics.drawable.Drawable null, int null, int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super.draw(r8)\l}"];
subgraph cluster_IfRegion_2060727425 {
label = "IF [B:1:0x0007] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0007|if (isLayoutRtlSupport() == true) goto L_0x0009\l}"];
subgraph cluster_Region_446908599 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|android.graphics.drawable.Drawable r0 = r7.mShadowDrawableRight\l}"];
}
subgraph cluster_Region_867344095 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|android.graphics.drawable.Drawable r0 = r7.mShadowDrawableLeft\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0013|android.view.View r1 = getChildCount() \> 1 ? getChildAt(1) : null\l}"];
subgraph cluster_Region_674033117 {
label = "R(1:(3:10|(1:12)(1:13)|14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1575934189 {
label = "IF [B:8:0x001b, B:9:0x001d] THEN: R(3:10|(1:12)(1:13)|14) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001b|PHI: r1 \l  PHI: (r1v1 android.view.View) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != null) goto L_0x001d\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|ADDED_TO_REGION\l|if (r0 != null) goto L_0x0020\l}"];
subgraph cluster_Region_2047734249 {
label = "R(3:10|(1:12)(1:13)|14)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0020|int int r2 = r1.getTop()\lint int r3 = r1.getBottom()\lint int r4 = r0.getIntrinsicWidth()\l}"];
subgraph cluster_IfRegion_393222298 {
label = "IF [B:11:0x0030] THEN: R(1:12) ELSE: R(1:13)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0030|if (isLayoutRtlSupport() == true) goto L_0x0032\l}"];
subgraph cluster_Region_2062285039 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0032|int r1 = r1.getRight()\lint r4 = r4 + r1\l}"];
}
subgraph cluster_Region_1573606970 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0038|int int r1 = r1.getLeft()\lint r6 = r1 \- r4\lr4 = r1\lr1 = r6\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0041|PHI: r1 r4 \l  PHI: (r1v2 int) = (r1v4 int), (r1v5 int) binds: [B:13:0x0038, B:12:0x0032] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v3 int), (r4v4 int) binds: [B:13:0x0038, B:12:0x0032] A[DONT_GENERATE, DONT_INLINE]\l|r0.setBounds(r1, r2, r4, r3)\lr0.draw(r8)\l}"];
}
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x000e|PHI: r0 \l  PHI: (r0v1 android.graphics.drawable.Drawable) = (r0v2 android.graphics.drawable.Drawable), (r0v3 android.graphics.drawable.Drawable) binds: [B:3:0x000c, B:2:0x0009] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0015}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001a}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0047}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v4.widget.SlidingPaneLayout.draw((r7v0 'this' android.support.v4.widget.SlidingPaneLayout A[IMMUTABLE_TYPE, THIS]), (r8v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_16[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_17[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_4 -> Node_5;
Node_6 -> Node_8;
Node_7 -> Node_8;
}

