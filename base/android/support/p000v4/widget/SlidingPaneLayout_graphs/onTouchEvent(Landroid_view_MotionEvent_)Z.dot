digraph "CFG forandroid.support.v4.widget.SlidingPaneLayout.onTouchEvent(Landroid\/view\/MotionEvent;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r5.mCanSlide != false) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0008|RETURN\l|return super.onTouchEvent(r6)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|r5.mDragHelper.processTouchEvent(r6)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|switch(r6.getActionMasked()) \{\l    case 0: goto L_0x0054;\l    case 1: goto L_0x0017;\l    default: goto L_0x0016;\l\}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017}"];
Node_7 [shape=record,label="{7\:\ 0x001d|if (isDimmed(r5.mSlideableView) == false) goto L_0x0060\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|float r1 = r6.getX()\lfloat r6 = r6.getY()\lfloat r2 = r1 \- r5.mInitialMotionX\lfloat r3 = r6 \- r5.mInitialMotionY\lint r4 = r5.mDragHelper.getTouchSlop()\l}"];
Node_9 [shape=record,label="{9\:\ 0x003f|if ((((r2 * r2) + (r3 * r3)) \> ((float) (r4 * r4)) ? 1 : (((r2 * r2) + (r3 * r3)) == ((float) (r4 * r4)) ? 0 : \-1)) \>= 0) goto L_0x0060\l}"];
Node_10 [shape=record,label="{10\:\ 0x0041}"];
Node_11 [shape=record,label="{11\:\ 0x004b|if (r5.mDragHelper.isViewUnder(r5.mSlideableView, (int) r1, (int) r6) == false) goto L_0x0060\l}"];
Node_12 [shape=record,label="{12\:\ 0x004d|closePane(r5.mSlideableView, 0)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0054|float r1 = r6.getX()\lfloat r6 = r6.getY()\lr5.mInitialMotionX = r1\lr5.mInitialMotionY = r6\l}"];
Node_14 [shape=record,label="{14\:\ 0x0060|RETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean android.support.v4.widget.SlidingPaneLayout.onTouchEvent((r5v0 'this' android.support.v4.widget.SlidingPaneLayout A[IMMUTABLE_TYPE, THIS]), (r6v0 android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_13;
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_14;
Node_13 -> Node_14;
}

