digraph "CFG forandroid.support.v4.widget.SwipeRefreshLayout.moveSpinner(F)V" {
subgraph cluster_Region_260549578 {
label = "R(8:0|3|8|(1:10)|(1:13)|(1:16)|(1:(1:23))(1:(1:28))|29)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r11.mProgress.setArrowEnabled(true)\lfloat float r0 = java.lang.Math.min(1.0f, java.lang.Math.abs(r12 \/ r11.mTotalDragDistance))\lfloat float r2 = (((float) java.lang.Math.max(((double) r0) \- 0.4d, 0.0d)) * 5.0f) \/ 3.0f\lfloat float r3 = java.lang.Math.abs(r12) \- r11.mTotalDragDistance\l}"];
Node_3 [shape=record,label="{3\:\ 0x0036|PHI: r4 \l  PHI: (r4v8 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|float float r4 = (float) (r11.mCustomSlingshotDistance \> 0 ? r11.mCustomSlingshotDistance : r11.mUsingCustomStart ? r11.mSpinnerOffsetEnd \- r11.mOriginalOffsetTop : r11.mSpinnerOffsetEnd)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0045|double double r7 = (double) (java.lang.Math.max(0.0f, java.lang.Math.min(r3, r4 * 2.0f) \/ r4) \/ 4.0f)\lfloat float r3 = ((float) (r7 \- java.lang.Math.pow(r7, 2.0d))) * 2.0f\lint int r8 = r11.mOriginalOffsetTop + ((int) ((r4 * r0) + (r4 * r3 * 2.0f)))\l}"];
subgraph cluster_IfRegion_543968584 {
label = "IF [B:9:0x0072] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0072|if (r11.mCircleView.getVisibility() != 0) goto L_0x0074\l}"];
subgraph cluster_Region_1510105547 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0074|r11.mCircleView.setVisibility(0)\l}"];
}
}
subgraph cluster_IfRegion_832093722 {
label = "IF [B:12:0x007c] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x007c|if (r11.mScale == false) goto L_0x007e\l}"];
subgraph cluster_Region_1786890376 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x007e|r11.mCircleView.setScaleX(1.0f)\lr11.mCircleView.setScaleY(1.0f)\l}"];
}
}
subgraph cluster_IfRegion_684052125 {
label = "IF [B:15:0x008a] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x008a|if (r11.mScale == true) goto L_0x008c\l}"];
subgraph cluster_Region_1635843703 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x008c|setAnimationProgress(java.lang.Math.min(1.0f, r12 \/ r11.mTotalDragDistance))\l}"];
}
}
subgraph cluster_IfRegion_354219059 {
label = "IF [B:18:0x009b] THEN: R(1:(1:23)) ELSE: R(1:(1:28))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x009b|if (r12 \< r11.mTotalDragDistance) goto L_0x009d\l}"];
subgraph cluster_Region_1908255632 {
label = "R(1:(1:23))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1997152796 {
label = "IF [B:20:0x00a5, B:22:0x00ad] THEN: R(1:23) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x00a5|ADDED_TO_REGION\l|if (r11.mProgress.getAlpha() \> 76) goto L_0x00a7\l}"];
Node_22 [shape=record,label="{22\:\ 0x00ad|ADDED_TO_REGION\l|if (isAnimationRunning(r11.mAlphaStartAnimation) == false) goto L_0x00af\l}"];
subgraph cluster_Region_287246796 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x00af|startProgressAlphaStartAnimation()\l}"];
}
}
}
subgraph cluster_Region_1674627760 {
label = "R(1:(1:28)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2133662833 {
label = "IF [B:25:0x00bb, B:27:0x00c3] THEN: R(1:28) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x00bb|ADDED_TO_REGION\l|if (r11.mProgress.getAlpha() \< 255) goto L_0x00bd\l}"];
Node_27 [shape=record,label="{27\:\ 0x00c3|ADDED_TO_REGION\l|if (isAnimationRunning(r11.mAlphaMaxAnimation) == false) goto L_0x00c5\l}"];
subgraph cluster_Region_1502731082 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x00c5|startProgressAlphaMaxAnimation()\l}"];
}
}
}
}
Node_29 [shape=record,label="{29\:\ 0x00c8|r11.mProgress.setStartEndTrim(0.0f, java.lang.Math.min(MAX_PROGRESS_ANGLE, r2 * MAX_PROGRESS_ANGLE))\lr11.mProgress.setArrowScale(java.lang.Math.min(1.0f, r2))\lr11.mProgress.setProgressRotation((((r2 * 0.4f) \- 16.0f) + (r3 * 2.0f)) * 0.5f)\lsetTargetOffsetTopAndBottom(r8 \- r11.mCurrentTargetOffsetTop)\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0032}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0034}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0038}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x003a}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x003c}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0042}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x007a}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0088}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0097}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x009d}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x00a7}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x00b3}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x00bd}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x00f9}"];
MethodNode[shape=record,label="{private void android.support.v4.widget.SwipeRefreshLayout.moveSpinner((r11v0 'this' android.support.v4.widget.SwipeRefreshLayout A[IMMUTABLE_TYPE, THIS]), (r12v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_3 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_18 -> Node_24[style=dashed];
Node_20 -> Node_21;
Node_20 -> Node_29[style=dashed];
Node_22 -> Node_23;
Node_22 -> Node_29[style=dashed];
Node_23 -> Node_29;
Node_25 -> Node_26;
Node_25 -> Node_29[style=dashed];
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_3;
Node_7 -> Node_3;
Node_11 -> Node_12;
Node_14 -> Node_15;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_24 -> Node_25;
Node_26 -> Node_27;
}

