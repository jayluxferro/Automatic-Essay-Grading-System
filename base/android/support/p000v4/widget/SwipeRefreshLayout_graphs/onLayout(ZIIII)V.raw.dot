digraph "CFG forandroid.support.v4.widget.SwipeRefreshLayout.onLayout(ZIIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:int) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.getMeasuredWidth():int type: VIRTUAL \l0x0004: INVOKE  (r4 I:int) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.getMeasuredHeight():int type: VIRTUAL \l0x0008: INVOKE  (r5 I:int) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.getChildCount():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IGET  (r5 I:android.view.View) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.mTarget android.view.View \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0016 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: INVOKE  (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.ensureTarget():void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IGET  (r5 I:android.view.View) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.mTarget android.view.View \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001b \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: IGET  (r5 I:android.view.View) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.mTarget android.view.View \l0x001d: INVOKE  (r6 I:int) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.getPaddingLeft():int type: VIRTUAL \l0x0021: INVOKE  (r7 I:int) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.getPaddingTop():int type: VIRTUAL \l0x0025: INVOKE  (r0 I:int) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.getPaddingLeft():int type: VIRTUAL \l0x0029: ARITH  (r0 I:int) = (r3 I:int) \- (r0 I:int) \l0x002b: INVOKE  (r1 I:int) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.getPaddingRight():int type: VIRTUAL \l0x002f: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0030: INVOKE  (r1 I:int) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.getPaddingTop():int type: VIRTUAL \l0x0034: ARITH  (r4 I:int) = (r4 I:int) \- (r1 I:int) \l0x0035: INVOKE  (r1 I:int) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.getPaddingBottom():int type: VIRTUAL \l0x0039: ARITH  (r4 I:int) = (r4 I:int) \- (r1 I:int) \l0x003a: ARITH  (r0 I:int) = (r0 I:int) + (r6 I:int) \l0x003b: ARITH  (r4 I:int) = (r4 I:int) + (r7 I:int) \l0x003c: INVOKE  \l  (r5 I:android.view.View)\l  (r6 I:int)\l  (r7 I:int)\l  (r0 I:int)\l  (r4 I:int)\l android.view.View.layout(int, int, int, int):void type: VIRTUAL \l0x003f: IGET  (r4 I:android.support.v4.widget.CircleImageView) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.mCircleView android.support.v4.widget.CircleImageView \l0x0041: INVOKE  (r4 I:int) = (r4 I:android.support.v4.widget.CircleImageView) android.support.v4.widget.CircleImageView.getMeasuredWidth():int type: VIRTUAL \l0x0045: IGET  (r5 I:android.support.v4.widget.CircleImageView) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.mCircleView android.support.v4.widget.CircleImageView \l0x0047: INVOKE  (r5 I:int) = (r5 I:android.support.v4.widget.CircleImageView) android.support.v4.widget.CircleImageView.getMeasuredHeight():int type: VIRTUAL \l0x004b: IGET  (r6 I:android.support.v4.widget.CircleImageView) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.mCircleView android.support.v4.widget.CircleImageView \l0x004d: ARITH  (r3 I:int) = (r3 I:int) \/ (2 int) \l0x004f: ARITH  (r4 I:int) = (r4 I:int) \/ (2 int) \l0x0051: ARITH  (r7 I:int) = (r3 I:int) \- (r4 I:int) \l0x0053: IGET  (r0 I:int) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.mCurrentTargetOffsetTop int \l0x0055: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x0056: IGET  (r4 I:int) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.mCurrentTargetOffsetTop int \l0x0058: ARITH  (r4 I:int) = (r4 I:int) + (r5 I:int) \l0x0059: INVOKE  \l  (r6 I:android.support.v4.widget.CircleImageView)\l  (r7 I:int)\l  (r0 I:int)\l  (r3 I:int)\l  (r4 I:int)\l android.support.v4.widget.CircleImageView.layout(int, int, int, int):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x005c|0x005c: RETURN   \l}"];
MethodNode[shape=record,label="{protected void android.support.v4.widget.SwipeRefreshLayout.onLayout((r2 'this' I:android.support.v4.widget.SwipeRefreshLayout A[IMMUTABLE_TYPE, THIS]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
}

