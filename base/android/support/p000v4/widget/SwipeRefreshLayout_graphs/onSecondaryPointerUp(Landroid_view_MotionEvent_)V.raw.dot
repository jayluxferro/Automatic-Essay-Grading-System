digraph "CFG forandroid.support.v4.widget.SwipeRefreshLayout.onSecondaryPointerUp(Landroid\/view\/MotionEvent;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r4 I:android.view.MotionEvent) android.view.MotionEvent.getActionIndex():int type: VIRTUAL \l0x0004: INVOKE  (r1 I:int) = (r4 I:android.view.MotionEvent), (r0 I:int) android.view.MotionEvent.getPointerId(int):int type: VIRTUAL \l0x0008: IGET  (r2 I:int) = (r3 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.mActivePointerId int \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0017 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0010 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: INVOKE  (r4 I:int) = (r4 I:android.view.MotionEvent), (r0 I:int) android.view.MotionEvent.getPointerId(int):int type: VIRTUAL \l0x0015: IPUT  \l  (r4 I:int)\l  (r3 I:android.support.v4.widget.SwipeRefreshLayout)\l android.support.v4.widget.SwipeRefreshLayout.mActivePointerId int \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v4.widget.SwipeRefreshLayout.onSecondaryPointerUp((r3 'this' I:android.support.v4.widget.SwipeRefreshLayout A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

