digraph "CFG forandroid.support.v4.widget.SwipeRefreshLayout.moveSpinner(F)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r11.mProgress.setArrowEnabled(true)\lfloat r0 = java.lang.Math.min(1.0f, java.lang.Math.abs(r12 \/ r11.mTotalDragDistance))\lfloat r2 = (((float) java.lang.Math.max(((double) r0) \- 0.4d, 0.0d)) * 5.0f) \/ 3.0f\lfloat r3 = java.lang.Math.abs(r12) \- r11.mTotalDragDistance\l}"];
Node_1 [shape=record,label="{1\:\ 0x0032|if (r11.mCustomSlingshotDistance \<= 0) goto L_0x0038\l}"];
Node_2 [shape=record,label="{2\:\ 0x0034|int r4 = r11.mCustomSlingshotDistance\l}"];
Node_3 [shape=record,label="{3\:\ 0x0036|PHI: r4 \l  PHI: (r4v8 int) = (r4v5 int), (r4v7 int), (r4v14 int) binds: [B:7:0x0042, B:6:0x003c, B:2:0x0034] A[DONT_GENERATE, DONT_INLINE]\l|float r4 = (float) r4\l}"];
Node_4 [shape=record,label="{4\:\ 0x0038}"];
Node_5 [shape=record,label="{5\:\ 0x003a|if (r11.mUsingCustomStart == false) goto L_0x0042\l}"];
Node_6 [shape=record,label="{6\:\ 0x003c|int r4 = r11.mSpinnerOffsetEnd \- r11.mOriginalOffsetTop\l}"];
Node_7 [shape=record,label="{7\:\ 0x0042|int r4 = r11.mSpinnerOffsetEnd\l}"];
Node_8 [shape=record,label="{8\:\ 0x0045|double r7 = (double) (java.lang.Math.max(0.0f, java.lang.Math.min(r3, r4 * 2.0f) \/ r4) \/ 4.0f)\lfloat r3 = ((float) (r7 \- java.lang.Math.pow(r7, 2.0d))) * 2.0f\lfloat r4 = r4 * r0\lint r8 = r11.mOriginalOffsetTop + ((int) (r4 + ((r4 * r3) * 2.0f)))\l}"];
Node_9 [shape=record,label="{9\:\ 0x0072|if (r11.mCircleView.getVisibility() == 0) goto L_0x007a\l}"];
Node_10 [shape=record,label="{10\:\ 0x0074|r11.mCircleView.setVisibility(0)\l}"];
Node_11 [shape=record,label="{11\:\ 0x007a}"];
Node_12 [shape=record,label="{12\:\ 0x007c|if (r11.mScale != false) goto L_0x0088\l}"];
Node_13 [shape=record,label="{13\:\ 0x007e|r11.mCircleView.setScaleX(1.0f)\lr11.mCircleView.setScaleY(1.0f)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0088}"];
Node_15 [shape=record,label="{15\:\ 0x008a|if (r11.mScale == false) goto L_0x0097\l}"];
Node_16 [shape=record,label="{16\:\ 0x008c|setAnimationProgress(java.lang.Math.min(1.0f, r12 \/ r11.mTotalDragDistance))\l}"];
Node_17 [shape=record,label="{17\:\ 0x0097}"];
Node_18 [shape=record,label="{18\:\ 0x009b|if ((r12 \> r11.mTotalDragDistance ? 1 : (r12 == r11.mTotalDragDistance ? 0 : \-1)) \>= 0) goto L_0x00b3\l}"];
Node_19 [shape=record,label="{19\:\ 0x009d}"];
Node_20 [shape=record,label="{20\:\ 0x00a5|if (r11.mProgress.getAlpha() \<= 76) goto L_0x00c8\l}"];
Node_21 [shape=record,label="{21\:\ 0x00a7}"];
Node_22 [shape=record,label="{22\:\ 0x00ad|if (isAnimationRunning(r11.mAlphaStartAnimation) != false) goto L_0x00c8\l}"];
Node_23 [shape=record,label="{23\:\ 0x00af|startProgressAlphaStartAnimation()\l}"];
Node_24 [shape=record,label="{24\:\ 0x00b3}"];
Node_25 [shape=record,label="{25\:\ 0x00bb|if (r11.mProgress.getAlpha() \>= 255) goto L_0x00c8\l}"];
Node_26 [shape=record,label="{26\:\ 0x00bd}"];
Node_27 [shape=record,label="{27\:\ 0x00c3|if (isAnimationRunning(r11.mAlphaMaxAnimation) != false) goto L_0x00c8\l}"];
Node_28 [shape=record,label="{28\:\ 0x00c5|startProgressAlphaMaxAnimation()\l}"];
Node_29 [shape=record,label="{29\:\ 0x00c8|float r0 = r2 * MAX_PROGRESS_ANGLE\lr11.mProgress.setStartEndTrim(0.0f, java.lang.Math.min(MAX_PROGRESS_ANGLE, r0))\lr11.mProgress.setArrowScale(java.lang.Math.min(1.0f, r2))\landroid.support.v4.widget.CircularProgressDrawable r12 = r11.mProgress\lr12.setProgressRotation((((r2 * 0.4f) + \-0.25f) + (r3 * 2.0f)) * 0.5f)\lsetTargetOffsetTopAndBottom(r8 \- r11.mCurrentTargetOffsetTop)\l}"];
Node_30 [shape=record,label="{30\:\ 0x00f9|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.v4.widget.SwipeRefreshLayout.moveSpinner((r11v0 'this' android.support.v4.widget.SwipeRefreshLayout A[IMMUTABLE_TYPE, THIS]), (r12v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_3;
Node_7 -> Node_3;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_29;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_29;
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
}

