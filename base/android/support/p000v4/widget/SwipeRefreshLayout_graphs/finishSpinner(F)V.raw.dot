digraph "CFG forandroid.support.v4.widget.SwipeRefreshLayout.finishSpinner(F)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:float) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.mTotalDragDistance float \l0x0002: CMP_L  (r3 I:int) = (r3 I:float), (r0 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: INVOKE  \l  (r2 I:android.support.v4.widget.SwipeRefreshLayout)\l  (r3 I:boolean)\l  (r3 I:boolean)\l android.support.v4.widget.SwipeRefreshLayout.setRefreshing(boolean, boolean):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: IPUT  \l  (r3 I:boolean)\l  (r2 I:android.support.v4.widget.SwipeRefreshLayout)\l android.support.v4.widget.SwipeRefreshLayout.mRefreshing boolean \l0x000e: IGET  (r0 I:android.support.v4.widget.CircularProgressDrawable) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.mProgress android.support.v4.widget.CircularProgressDrawable \l0x0010: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0011: INVOKE  \l  (r0 I:android.support.v4.widget.CircularProgressDrawable)\l  (r1 I:float)\l  (r1 I:float)\l android.support.v4.widget.CircularProgressDrawable.setStartEndTrim(float, float):void type: VIRTUAL \l0x0014: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0015: IGET  (r1 I:boolean) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.mScale boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: NEW_INSTANCE  (r0 I:android.support.v4.widget.SwipeRefreshLayout$5) =  android.support.v4.widget.SwipeRefreshLayout$5 \l0x001b: INVOKE  \l  (r0 I:android.support.v4.widget.SwipeRefreshLayout$5)\l  (r2 I:android.support.v4.widget.SwipeRefreshLayout)\l android.support.v4.widget.SwipeRefreshLayout.5.\<init\>(android.support.v4.widget.SwipeRefreshLayout):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IGET  (r1 I:int) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.mCurrentTargetOffsetTop int \l0x0020: INVOKE  \l  (r2 I:android.support.v4.widget.SwipeRefreshLayout)\l  (r1 I:int)\l  (r0 I:android.view.animation.Animation$AnimationListener)\l android.support.v4.widget.SwipeRefreshLayout.animateOffsetToStartPosition(int, android.view.animation.Animation$AnimationListener):void type: DIRECT \l0x0023: IGET  (r0 I:android.support.v4.widget.CircularProgressDrawable) = (r2 I:android.support.v4.widget.SwipeRefreshLayout) android.support.v4.widget.SwipeRefreshLayout.mProgress android.support.v4.widget.CircularProgressDrawable \l0x0025: INVOKE  \l  (r0 I:android.support.v4.widget.CircularProgressDrawable)\l  (r3 I:boolean)\l android.support.v4.widget.CircularProgressDrawable.setArrowEnabled(boolean):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v4.widget.SwipeRefreshLayout.finishSpinner((r2 'this' I:android.support.v4.widget.SwipeRefreshLayout A[IMMUTABLE_TYPE, THIS]), (r3 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

