digraph "CFG forandroid.support.v4.widget.SwipeRefreshLayout.setSize(I)V" {
subgraph cluster_Region_1325400927 {
label = "R(1:(1:(3:4|(1:6)(1:7)|8)))";
node [shape=record,color=blue];
subgraph cluster_Region_369601399 {
label = "R(1:(3:4|(1:6)(1:7)|8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_52560485 {
label = "IF [B:0:0x0000, B:2:0x0003] THEN: R(3:4|(1:6)(1:7)|8) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r3 == 0) goto L_0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|ADDED_TO_REGION\l|if (r3 == 1) goto L_0x0006\l}"];
subgraph cluster_Region_2008450794 {
label = "R(3:4|(1:6)(1:7)|8)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0006|android.util.DisplayMetrics android.util.DisplayMetrics r0 = getResources().getDisplayMetrics()\l}"];
subgraph cluster_IfRegion_639003742 {
label = "IF [B:5:0x000e] THEN: R(1:6) ELSE: R(1:7)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r3 == 0) goto L_0x0010\l}"];
subgraph cluster_Region_608109644 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0010|r2.mCircleDiameter = (int) (r0.density * 56.0f)\l}"];
}
subgraph cluster_Region_894230166 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001a|r2.mCircleDiameter = (int) (r0.density * 40.0f)\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0023|r2.mCircleView.setImageDrawable((android.graphics.drawable.Drawable) null)\lr2.mProgress.setStyle(r3)\lr2.mCircleView.setImageDrawable(r2.mProgress)\l}"];
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0005}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0035}"];
MethodNode[shape=record,label="{public void android.support.v4.widget.SwipeRefreshLayout.setSize((r2v0 'this' android.support.v4.widget.SwipeRefreshLayout A[IMMUTABLE_TYPE, THIS]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_1 -> Node_2;
}

