digraph "CFG forandroid.support.v4.widget.SwipeRefreshLayout.setRefreshing(ZZ)V" {
subgraph cluster_Region_1108373886 {
label = "R(1:(2:2|(1:4)(1:5))(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_361540093 {
label = "IF [B:1:0x0002] THEN: R(2:2|(1:4)(1:5)) ELSE: R(0)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1.mRefreshing != r2) goto L_0x0004\l}"];
subgraph cluster_Region_1780237457 {
label = "R(2:2|(1:4)(1:5))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|r1.mNotify = r3\lensureTarget()\lr1.mRefreshing = r2\l}"];
subgraph cluster_IfRegion_1983952977 {
label = "IF [B:3:0x000d] THEN: R(1:4) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000d|if (r1.mRefreshing == true) goto L_0x000f\l}"];
subgraph cluster_Region_932883558 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|animateOffsetToCorrectPosition(r1.mCurrentTargetOffsetTop, r1.mRefreshListener)\l}"];
}
subgraph cluster_Region_1193879593 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0017|startScaleDownAnimation(r1.mRefreshListener)\l}"];
}
}
}
subgraph cluster_Region_1335481489 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.v4.widget.SwipeRefreshLayout.setRefreshing((r1v0 'this' android.support.v4.widget.SwipeRefreshLayout A[IMMUTABLE_TYPE, THIS]), (r2v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_0 -> Node_1;
}

