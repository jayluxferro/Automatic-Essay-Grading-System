digraph "CFG forandroid.support.v4.widget.FocusStrategy.findNextFocusInAbsoluteDirection(Ljava\/lang\/Object;Landroid\/support\/v4\/widget\/FocusStrategy$CollectionAdapter;Landroid\/support\/v4\/widget\/FocusStrategy$BoundsAdapter;Ljava\/lang\/Object;Landroid\/graphics\/Rect;I)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.graphics.Rect r0 = new android.graphics.Rect(r11)\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r12 == 17) goto L_0x003e\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r12 == 33) goto L_0x0034\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r12 == 66) goto L_0x0029\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012}"];
Node_7 [shape=record,label="{7\:\ 0x0014|if (r12 != 130) goto L_0x0021\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|r0.offset(0, \-(r11.height() + 1))\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021}"];
Node_10 [shape=record,label="{10\:\ 0x0028|throw new java.lang.IllegalArgumentException(\"direction must be one of \{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT\}.\")\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|r0.offset(\-(r11.width() + 1), 0)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|r0.offset(0, r11.height() + 1)\l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|r0.offset(r11.width() + 1, 0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0047|r1 = null\lint r3 = r8.size(r7)\landroid.graphics.Rect r4 = new android.graphics.Rect()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0051|LOOP_START\lPHI: r1 r2 \l  PHI: (r1v2 T) = (r1v1 T), (r1v3 T) binds: [B:14:0x0047, B:21:0x0067] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:14:0x0047, B:21:0x0067] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:15:0x0051\-\>B:21:0x0067\l|if (r2 \>= r3) goto L_0x006a\l}"];
Node_16 [shape=record,label="{16\:\ 0x0053|java.lang.Object r5 = r8.get(r7, r2)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0057|if (r5 != r10) goto L_0x005a\l}"];
Node_18 [shape=record,label="{18\:\ 0x005a|r9.obtainBounds(r5, r4)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0061|if (isBetterCandidate(r12, r11, r4, r0) == false) goto L_0x0067\l}"];
Node_20 [shape=record,label="{20\:\ 0x0063|r0.set(r4)\lr1 = r5\l}"];
Node_21 [shape=record,label="{21\:\ 0x0067|LOOP_END\lPHI: r1 \l  PHI: (r1v3 T) = (r1v2 T), (r1v2 T), (r1v4 T) binds: [B:26:0x0067, B:25:0x0067, B:24:0x0067] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:15:0x0051\-\>B:21:0x0067\l|int r2 = r2 + 1\l}"];
Node_22 [shape=record,label="{22\:\ 0x006a|RETURN\l|return r1\l}"];
Node_23 [shape=record,label="{23\:\ 0x006a|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0067|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0067|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0067|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static T android.support.v4.widget.FocusStrategy.findNextFocusInAbsoluteDirection((r7v0 L A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 android.support.v4.widget.FocusStrategy$CollectionAdapter\<L, T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 android.support.v4.widget.FocusStrategy$BoundsAdapter\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], \lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<, L:Ljava\/lang\/Object;, T:, Ljava\/lang\/Object;, \>(T, L;, Landroid\/support\/v4\/widget\/FocusStrategy$CollectionAdapter\<, T, L;, TT;\>;, Landroid\/support\/v4\/widget\/FocusStrategy$BoundsAdapter\<, TT;\>;TT;, Landroid\/graphics\/Rect;, I)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_11 -> Node_14;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_23;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_26[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_24;
Node_21 -> Node_15;
Node_23 -> Node_22;
Node_24 -> Node_21;
Node_25 -> Node_21;
Node_26 -> Node_21;
}

