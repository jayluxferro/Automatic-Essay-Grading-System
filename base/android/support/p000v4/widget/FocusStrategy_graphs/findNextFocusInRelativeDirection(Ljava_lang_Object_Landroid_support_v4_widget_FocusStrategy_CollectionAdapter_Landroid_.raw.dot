digraph "CFG forandroid.support.v4.widget.FocusStrategy.findNextFocusInRelativeDirection(Ljava\/lang\/Object;Landroid\/support\/v4\/widget\/FocusStrategy$CollectionAdapter;Landroid\/support\/v4\/widget\/FocusStrategy$BoundsAdapter;Ljava\/lang\/Object;IZZ)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = \l  (r5 I:android.support.v4.widget.FocusStrategy$CollectionAdapter)\l  (r4 I:java.lang.Object)\l android.support.v4.widget.FocusStrategy.CollectionAdapter.size(java.lang.Object):int type: INTERFACE \l0x0004: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0006: INVOKE  (r1 I:java.util.ArrayList), (r0 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x0009: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:3:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r3 I:java.lang.Object) = \l  (r5 I:android.support.v4.widget.FocusStrategy$CollectionAdapter)\l  (r4 I:java.lang.Object)\l  (r2 I:int)\l android.support.v4.widget.FocusStrategy.CollectionAdapter.get(java.lang.Object, int):java.lang.Object type: INTERFACE \l0x0010: INVOKE  (r1 I:java.util.ArrayList), (r3 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x0013: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: NEW_INSTANCE  (r4 I:android.support.v4.widget.FocusStrategy$SequentialComparator) =  android.support.v4.widget.FocusStrategy$SequentialComparator \l0x0018: INVOKE  \l  (r4 I:android.support.v4.widget.FocusStrategy$SequentialComparator)\l  (r9 I:boolean)\l  (r6 I:android.support.v4.widget.FocusStrategy$BoundsAdapter)\l android.support.v4.widget.FocusStrategy.SequentialComparator.\<init\>(boolean, android.support.v4.widget.FocusStrategy$BoundsAdapter):void type: DIRECT \l0x001b: INVOKE  (r1 I:java.util.List), (r4 I:java.util.Comparator) java.util.Collections.sort(java.util.List, java.util.Comparator):void type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: SWITCH  \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2] t:[0x002e, 0x0029] \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0023: CONST_STR  (r5 I:java.lang.String) =  \"direction must be one of \{FOCUS_FORWARD, FOCUS_BACKWARD\}.\" \l0x0025: INVOKE  \l  (r4 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: INVOKE  (r4 I:java.lang.Object) = \l  (r7 I:java.lang.Object)\l  (r1 I:java.util.ArrayList)\l  (r10 I:boolean)\l android.support.v4.widget.FocusStrategy.getNextFocusable(java.lang.Object, java.util.ArrayList, boolean):java.lang.Object type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: RETURN  (r4 I:T) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|0x002e: INVOKE  (r4 I:java.lang.Object) = \l  (r7 I:java.lang.Object)\l  (r1 I:java.util.ArrayList)\l  (r10 I:boolean)\l android.support.v4.widget.FocusStrategy.getPreviousFocusable(java.lang.Object, java.util.ArrayList, boolean):java.lang.Object type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|0x0032: RETURN  (r4 I:T) \l}"];
MethodNode[shape=record,label="{public static T android.support.v4.widget.FocusStrategy.findNextFocusInRelativeDirection((r4 I:L A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.support.v4.widget.FocusStrategy$CollectionAdapter\<L, T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.support.v4.widget.FocusStrategy$BoundsAdapter\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], , , \lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<, L:Ljava\/lang\/Object;, T:, Ljava\/lang\/Object;, \>(T, L;, Landroid\/support\/v4\/widget\/FocusStrategy$CollectionAdapter\<, T, L;, TT;\>;, Landroid\/support\/v4\/widget\/FocusStrategy$BoundsAdapter\<, TT;\>;TT;IZZ)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_10;
}

