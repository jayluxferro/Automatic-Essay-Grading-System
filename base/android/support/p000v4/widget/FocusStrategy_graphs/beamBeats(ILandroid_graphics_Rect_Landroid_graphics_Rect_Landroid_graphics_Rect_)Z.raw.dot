digraph "CFG forandroid.support.v4.widget.FocusStrategy.beamBeats(ILandroid\/graphics\/Rect;Landroid\/graphics\/Rect;Landroid\/graphics\/Rect;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r3 I:int)\l  (r4 I:android.graphics.Rect)\l  (r5 I:android.graphics.Rect)\l android.support.v4.widget.FocusStrategy.beamsOverlap(int, android.graphics.Rect, android.graphics.Rect):boolean type: STATIC \l0x0004: INVOKE  (r1 I:boolean) = \l  (r3 I:int)\l  (r4 I:android.graphics.Rect)\l  (r6 I:android.graphics.Rect)\l android.support.v4.widget.FocusStrategy.beamsOverlap(int, android.graphics.Rect, android.graphics.Rect):boolean type: STATIC \l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x002d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: INVOKE  (r0 I:boolean) = \l  (r3 I:int)\l  (r4 I:android.graphics.Rect)\l  (r6 I:android.graphics.Rect)\l android.support.v4.widget.FocusStrategy.isToDirectionOf(int, android.graphics.Rect, android.graphics.Rect):boolean type: STATIC \l0x0012: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0016 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: RETURN  (r1 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: CONST  (r0 I:?[int, float, short, byte, char]) = (17 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x002c \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: CONST  (r0 I:?[int, float, short, byte, char]) = (66 ?[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x001f \l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|0x001f: INVOKE  (r5 I:int) = \l  (r3 I:int)\l  (r4 I:android.graphics.Rect)\l  (r5 I:android.graphics.Rect)\l android.support.v4.widget.FocusStrategy.majorAxisDistance(int, android.graphics.Rect, android.graphics.Rect):int type: STATIC \l0x0023: INVOKE  (r3 I:int) = \l  (r3 I:int)\l  (r4 I:android.graphics.Rect)\l  (r6 I:android.graphics.Rect)\l android.support.v4.widget.FocusStrategy.majorAxisDistanceToFarEdge(int, android.graphics.Rect, android.graphics.Rect):int type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|0x0027: IF  (r5 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:15:0x002a \l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|0x002a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x002b|0x002b: RETURN  (r1 I:boolean) \l}"];
Node_17 [shape=record,label="{17\:\ 0x002c|0x002c: RETURN  (r1 I:boolean) \l}"];
Node_18 [shape=record,label="{18\:\ 0x002d|0x002d: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{private static boolean android.support.v4.widget.FocusStrategy.beamBeats((r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_18;
Node_2 -> Node_4;
Node_2 -> Node_18[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_17[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_16[style=dashed];
Node_15 -> Node_16;
}

