digraph "CFG forandroid.support.v4.widget.FocusStrategy.majorAxisDistanceToFarEdgeRaw(ILandroid\/graphics\/Rect;Landroid\/graphics\/Rect;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1 == 17) goto L_0x002a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r1 == 33) goto L_0x0024\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008}"];
Node_5 [shape=record,label="{5\:\ 0x000a|if (r1 == 66) goto L_0x001e\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c}"];
Node_7 [shape=record,label="{7\:\ 0x000e|if (r1 != 130) goto L_0x0016\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010}"];
Node_9 [shape=record,label="{9\:\ 0x0015|RETURN\l|return r3.bottom \- r2.bottom\l}"];
Node_10 [shape=record,label="{10\:\ 0x0016}"];
Node_11 [shape=record,label="{11\:\ 0x001d|throw new java.lang.IllegalArgumentException(\"direction must be one of \{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT\}.\")\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e}"];
Node_13 [shape=record,label="{13\:\ 0x0023|RETURN\l|return r3.right \- r2.right\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024}"];
Node_15 [shape=record,label="{15\:\ 0x0029|RETURN\l|return r2.top \- r3.top\l}"];
Node_16 [shape=record,label="{16\:\ 0x002a}"];
Node_17 [shape=record,label="{17\:\ 0x002f|RETURN\l|return r2.left \- r3.left\l}"];
MethodNode[shape=record,label="{private static int android.support.v4.widget.FocusStrategy.majorAxisDistanceToFarEdgeRaw((r1v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

