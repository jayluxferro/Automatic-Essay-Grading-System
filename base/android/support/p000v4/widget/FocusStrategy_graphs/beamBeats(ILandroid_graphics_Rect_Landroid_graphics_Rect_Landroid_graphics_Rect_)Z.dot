digraph "CFG forandroid.support.v4.widget.FocusStrategy.beamBeats(ILandroid\/graphics\/Rect;Landroid\/graphics\/Rect;Landroid\/graphics\/Rect;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|boolean r0 = beamsOverlap(r3, r4, r5)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if (beamsOverlap(r3, r4, r6) != false) goto L_0x002d\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|if (r0 != false) goto L_0x000e\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e}"];
Node_4 [shape=record,label="{4\:\ 0x0013|if (isToDirectionOf(r3, r4, r6) != false) goto L_0x0016\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|RETURN\l|return true\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016}"];
Node_7 [shape=record,label="{7\:\ 0x0018|if (r3 == 17) goto L_0x002c\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a}"];
Node_9 [shape=record,label="{9\:\ 0x001c|if (r3 != 66) goto L_0x001f\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f}"];
Node_11 [shape=record,label="{11\:\ 0x0027|if (majorAxisDistance(r3, r4, r5) \>= majorAxisDistanceToFarEdge(r3, r4, r6)) goto L_0x002a\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|RETURN\l|return true\l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|RETURN\l|return false\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{private static boolean android.support.v4.widget.FocusStrategy.beamBeats((r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_2 -> Node_14[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_13[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_15[style=dashed];
}

