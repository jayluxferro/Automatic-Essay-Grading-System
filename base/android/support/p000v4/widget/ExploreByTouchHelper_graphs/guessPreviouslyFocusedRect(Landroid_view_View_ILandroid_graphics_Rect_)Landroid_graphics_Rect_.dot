digraph "CFG forandroid.support.v4.widget.ExploreByTouchHelper.guessPreviouslyFocusedRect(Landroid\/view\/View;ILandroid\/graphics\/Rect;)Landroid\/graphics\/Rect;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r4.getWidth()\lint r4 = r4.getHeight()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r5 == 17) goto L_0x002e\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d}"];
Node_3 [shape=record,label="{3\:\ 0x000f|if (r5 == 33) goto L_0x002a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011}"];
Node_5 [shape=record,label="{5\:\ 0x0014|if (r5 == 66) goto L_0x0026\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016}"];
Node_7 [shape=record,label="{7\:\ 0x0018|if (r5 != 130) goto L_0x001e\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|r6.set(0, \-1, r0, \-1)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e}"];
Node_10 [shape=record,label="{10\:\ 0x0025|throw new java.lang.IllegalArgumentException(\"direction must be one of \{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT\}.\")\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|r6.set(\-1, 0, \-1, r4)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|r6.set(0, r4, r0, r4)\l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|r6.set(r0, 0, r0, r4)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|RETURN\l|return r6\l}"];
MethodNode[shape=record,label="{private static android.graphics.Rect android.support.v4.widget.ExploreByTouchHelper.guessPreviouslyFocusedRect((r4v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], , Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_11 -> Node_14;
Node_12 -> Node_14;
Node_13 -> Node_14;
}

