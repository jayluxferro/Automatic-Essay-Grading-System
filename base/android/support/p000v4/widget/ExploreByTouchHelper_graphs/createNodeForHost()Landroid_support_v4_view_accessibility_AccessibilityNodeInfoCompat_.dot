digraph "CFG forandroid.support.v4.widget.ExploreByTouchHelper.createNodeForHost()Landroid\/support\/v4\/view\/accessibility\/AccessibilityNodeInfoCompat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.support.v4.view.accessibility.AccessibilityNodeInfoCompat r0 = android.support.p000v4.view.accessibility.AccessibilityNodeInfoCompat.obtain(r6.mHost)\landroid.support.p000v4.view.ViewCompat.onInitializeAccessibilityNodeInfo(r6.mHost, r0)\ljava.util.ArrayList r1 = new java.util.ArrayList()\lgetVisibleVirtualViews(r1)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|if (r0.getChildCount() \<= 0) goto L_0x0028\l}"];
Node_2 [shape=record,label="{2\:\ 0x0019}"];
Node_3 [shape=record,label="{3\:\ 0x001d|if (r1.size() \> 0) goto L_0x0020\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020}"];
Node_5 [shape=record,label="{5\:\ 0x0027|throw new java.lang.RuntimeException(\"Views cannot have both real and virtual children\")\l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|r2 = 0\lint r3 = r1.size()\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|LOOP_START\lPHI: r2 \l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int) binds: [B:6:0x0028, B:8:0x002f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x002d\-\>B:8:0x002f\l|if (r2 \>= r3) goto L_0x0041\l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|LOOP_END\lLOOP:0: B:7:0x002d\-\>B:8:0x002f\l|r0.addChild(r6.mHost, ((java.lang.Integer) r1.get(r2)).intValue())\lint r2 = r2 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|RETURN\l|return r0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private android.support.v4.view.accessibility.AccessibilityNodeInfoCompat android.support.v4.widget.ExploreByTouchHelper.createNodeForHost((r6v0 'this' android.support.v4.widget.ExploreByTouchHelper A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_7;
Node_10 -> Node_9;
}

