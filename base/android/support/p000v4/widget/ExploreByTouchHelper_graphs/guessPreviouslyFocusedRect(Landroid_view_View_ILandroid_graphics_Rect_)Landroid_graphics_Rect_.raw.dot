digraph "CFG forandroid.support.v4.widget.ExploreByTouchHelper.guessPreviouslyFocusedRect(Landroid\/view\/View;ILandroid\/graphics\/Rect;)Landroid\/graphics\/Rect;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r4 I:android.view.View) android.view.View.getWidth():int type: VIRTUAL \l0x0004: INVOKE  (r4 I:int) = (r4 I:android.view.View) android.view.View.getHeight():int type: VIRTUAL \l0x0008: CONST  (r1 I:?[int, float, short, byte, char]) = (17 ?[int, float, short, byte, char]) \l0x000a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: CONST  (r1 I:?[int, float, short, byte, char]) = (33 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: CONST  (r1 I:?[int, float, short, byte, char]) = (66 ?[int, float, short, byte, char]) \l0x0013: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0026 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (130(0x82, float:1.82E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001e \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: INVOKE  \l  (r6 I:android.graphics.Rect)\l  (r2 I:int)\l  (r3 I:int)\l  (r0 I:int)\l  (r3 I:int)\l android.graphics.Rect.set(int, int, int, int):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0020: CONST_STR  (r5 I:java.lang.String) =  \"direction must be one of \{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT\}.\" \l0x0022: INVOKE  \l  (r4 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: INVOKE  \l  (r6 I:android.graphics.Rect)\l  (r3 I:int)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l android.graphics.Rect.set(int, int, int, int):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: INVOKE  \l  (r6 I:android.graphics.Rect)\l  (r2 I:int)\l  (r4 I:int)\l  (r0 I:int)\l  (r4 I:int)\l android.graphics.Rect.set(int, int, int, int):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|0x002e: INVOKE  \l  (r6 I:android.graphics.Rect)\l  (r0 I:int)\l  (r2 I:int)\l  (r0 I:int)\l  (r4 I:int)\l android.graphics.Rect.set(int, int, int, int):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|0x0031: RETURN  (r6 I:android.graphics.Rect) \l}"];
MethodNode[shape=record,label="{private static android.graphics.Rect android.support.v4.widget.ExploreByTouchHelper.guessPreviouslyFocusedRect((r4 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], , Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_11 -> Node_14;
Node_12 -> Node_14;
Node_13 -> Node_14;
}

