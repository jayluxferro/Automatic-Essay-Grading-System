digraph "CFG forandroid.support.v4.widget.ContentLoadingProgressBar.hide()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0002|SYNTHETIC\lSplitter:B:2:0x0002\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0002\l|0x0002: IPUT  \l  (r0 I:boolean)\l  (r9 I:android.support.v4.widget.ContentLoadingProgressBar)\l android.support.v4.widget.ContentLoadingProgressBar.mDismissed boolean A[Catch:\{ all \-\> 0x0038 \}, TRY_ENTER]\l0x0004: IGET  (r1 I:java.lang.Runnable) = (r9 I:android.support.v4.widget.ContentLoadingProgressBar) android.support.v4.widget.ContentLoadingProgressBar.mDelayedShow java.lang.Runnable A[Catch:\{ all \-\> 0x0038 \}]\l0x0006: INVOKE  \l  (r9 I:android.support.v4.widget.ContentLoadingProgressBar)\l  (r1 I:java.lang.Runnable)\l android.support.v4.widget.ContentLoadingProgressBar.removeCallbacks(java.lang.Runnable):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0038 \}]\l0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0038 \}]\l0x000a: IPUT  \l  (r1 I:boolean)\l  (r9 I:android.support.v4.widget.ContentLoadingProgressBar)\l android.support.v4.widget.ContentLoadingProgressBar.mPostedShow boolean A[Catch:\{ all \-\> 0x0038 \}]\l0x000c: INVOKE  (r1 I:long) =  java.lang.System.currentTimeMillis():long type: STATIC A[Catch:\{ all \-\> 0x0038 \}]\l0x0010: IGET  (r3 I:long) = (r9 I:android.support.v4.widget.ContentLoadingProgressBar) android.support.v4.widget.ContentLoadingProgressBar.mStartTime long A[Catch:\{ all \-\> 0x0038 \}]\l0x0012: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0038 \}]\l0x0013: ARITH  (r1 I:long) = (r1 I:long) \- (r3 I:long) A[Catch:\{ all \-\> 0x0038 \}]\l0x0014: CONST  (r3 I:?[long, double]) = (500(0x1f4, double:2.47E\-321) ?[long, double]) A[Catch:\{ all \-\> 0x0038 \}]\l0x0016: CMP_L  (r5 I:int) = (r1 I:long), (r3 I:long) A[Catch:\{ all \-\> 0x0038 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:11:0x0031 A[Catch:\{ all \-\> 0x0038 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IGET  (r5 I:long) = (r9 I:android.support.v4.widget.ContentLoadingProgressBar) android.support.v4.widget.ContentLoadingProgressBar.mStartTime long A[Catch:\{ all \-\> 0x0038 \}]\l0x001c: CONST  (r7 I:?[long, double]) = (\-1 ?[long, double]) A[Catch:\{ all \-\> 0x0038 \}]\l0x001e: CMP_L  (r5 I:int) = (r5 I:long), (r7 I:long) A[Catch:\{ all \-\> 0x0038 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0023 A[Catch:\{ all \-\> 0x0038 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: GOTO  \-\> 0x0031 A[Catch:\{ all \-\> 0x0038 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: IGET  (r5 I:boolean) = (r9 I:android.support.v4.widget.ContentLoadingProgressBar) android.support.v4.widget.ContentLoadingProgressBar.mPostedHide boolean A[Catch:\{ all \-\> 0x0038 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0036 A[Catch:\{ all \-\> 0x0038 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: IGET  (r5 I:java.lang.Runnable) = (r9 I:android.support.v4.widget.ContentLoadingProgressBar) android.support.v4.widget.ContentLoadingProgressBar.mDelayedHide java.lang.Runnable A[Catch:\{ all \-\> 0x0038 \}]\l0x0029: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0038 \}]\l0x002a: ARITH  (r3 I:long) = (r3 I:long) \- (r1 I:long) A[Catch:\{ all \-\> 0x0038 \}]\l0x002b: INVOKE  \l  (r9 I:android.support.v4.widget.ContentLoadingProgressBar)\l  (r5 I:java.lang.Runnable)\l  (r3 I:long)\l android.support.v4.widget.ContentLoadingProgressBar.postDelayed(java.lang.Runnable, long):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0038 \}]\l0x002e: IPUT  \l  (r0 I:boolean)\l  (r9 I:android.support.v4.widget.ContentLoadingProgressBar)\l android.support.v4.widget.ContentLoadingProgressBar.mPostedHide boolean A[Catch:\{ all \-\> 0x0038 \}]\l0x0030: GOTO  \-\> 0x0036 A[Catch:\{ all \-\> 0x0038 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|0x0031: CONST  (r0 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0038 \}]\l0x0033: INVOKE  \l  (r9 I:android.support.v4.widget.ContentLoadingProgressBar)\l  (r0 I:int)\l android.support.v4.widget.ContentLoadingProgressBar.setVisibility(int):void type: VIRTUAL A[Catch:\{ all \-\> 0x0038 \}, TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|0x0036: MONITOR_EXIT  (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|0x0037: RETURN   \l}"];
Node_14 [shape=record,label="{14\:\ 0x0038|ExcHandler: all null\lSplitter:B:2:0x0002\l|0x0038: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|0x0039: MONITOR_EXIT  (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|0x003a: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void android.support.v4.widget.ContentLoadingProgressBar.hide((r9 'this' I:android.support.v4.widget.ContentLoadingProgressBar A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

