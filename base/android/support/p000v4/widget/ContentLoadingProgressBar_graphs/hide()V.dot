digraph "CFG forandroid.support.v4.widget.ContentLoadingProgressBar.hide()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r9)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001}"];
Node_2 [shape=record,label="{2\:\ 0x0002|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?|r9.mDismissed = true\lremoveCallbacks(r9.mDelayedShow)\lr9.mPostedShow = false\llong r1 = java.lang.System.currentTimeMillis() \- r9.mStartTime\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|if ((r1 \> 500 ? 1 : (r1 == 500 ? 0 : \-1)) \>= 0) goto L_0x0031\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a}"];
Node_6 [shape=record,label="{6\:\ 0x0020|if ((r9.mStartTime \> \-1 ? 1 : (r9.mStartTime == \-1 ? 0 : \-1)) != 0) goto L_0x0023\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022}"];
Node_8 [shape=record,label="{8\:\ 0x0023}"];
Node_9 [shape=record,label="{9\:\ 0x0025|if (r9.mPostedHide != false) goto L_0x0036\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|postDelayed(r9.mDelayedHide, 500 \- r1)\lr9.mPostedHide = true\l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|setVisibility(8)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|monitor\-exit(r9)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ 0x0038|REMOVE\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|REMOVE\l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|REMOVE\l|throw r0\l}"];
MethodNode[shape=record,label="{public synchronized void android.support.v4.widget.ContentLoadingProgressBar.hide((r9v0 'this' android.support.v4.widget.ContentLoadingProgressBar A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

