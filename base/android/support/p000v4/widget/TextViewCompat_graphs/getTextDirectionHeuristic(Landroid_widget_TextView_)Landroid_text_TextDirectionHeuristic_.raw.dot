digraph "CFG forandroid.support.v4.widget.TextViewCompat.getTextDirectionHeuristic(Landroid\/widget\/TextView;)Landroid\/text\/TextDirectionHeuristic;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.text.method.TransformationMethod) = (r4 I:android.widget.TextView) android.widget.TextView.getTransformationMethod():android.text.method.TransformationMethod type: VIRTUAL \l0x0004: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) android.text.method.PasswordTransformationMethod \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: SGET  (r4 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.LTR android.text.TextDirectionHeuristic \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN  (r4 I:android.text.TextDirectionHeuristic) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x000d: CONST  (r1 I:?[int, float, short, byte, char]) = (28 ?[int, float, short, byte, char]) \l0x000f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:17:0x003e \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: INVOKE  (r0 I:int) = (r4 I:android.widget.TextView) android.widget.TextView.getInputType():int type: VIRTUAL \l0x0017: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (15 ?[int, float, short, byte, char]) \l0x0019: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x003e \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: INVOKE  (r4 I:java.util.Locale) = (r4 I:android.widget.TextView) android.widget.TextView.getTextLocale():java.util.Locale type: VIRTUAL \l0x0020: INVOKE  (r4 I:android.icu.text.DecimalFormatSymbols) = (r4 I:java.util.Locale) android.icu.text.DecimalFormatSymbols.getInstance(java.util.Locale):android.icu.text.DecimalFormatSymbols type: STATIC \l0x0024: INVOKE  (r4 I:java.lang.String[]) = (r4 I:android.icu.text.DecimalFormatSymbols) android.icu.text.DecimalFormatSymbols.getDigitStrings():java.lang.String[] type: VIRTUAL \l0x0028: AGET  (r4 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x002a: INVOKE  (r4 I:int) = (r4 I:java.lang.String), (r2 I:int) java.lang.String.codePointAt(int):int type: VIRTUAL \l0x002e: INVOKE  (r4 I:byte) = (r4 I:int) java.lang.Character.getDirectionality(int):byte type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|0x0032: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x003b \l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0038 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|0x0038: SGET  (r4 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.LTR android.text.TextDirectionHeuristic \l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|0x003a: RETURN  (r4 I:android.text.TextDirectionHeuristic) \l}"];
Node_15 [shape=record,label="{15\:\ 0x003b|0x003b: SGET  (r4 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.RTL android.text.TextDirectionHeuristic \l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|0x003d: RETURN  (r4 I:android.text.TextDirectionHeuristic) \l}"];
Node_17 [shape=record,label="{17\:\ 0x003e|0x003e: INVOKE  (r0 I:int) = (r4 I:android.widget.TextView) android.widget.TextView.getLayoutDirection():int type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0042|0x0042: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0045 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0044|0x0044: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0045|0x0045: INVOKE  (r4 I:int) = (r4 I:android.widget.TextView) android.widget.TextView.getTextDirection():int type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0049|0x0049: SWITCH  \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[2, 3, 4, 5, 6, 7] t:[0x0060, 0x005d, 0x005a, 0x0057, 0x0054, 0x0051] \l}"];
Node_22 [shape=record,label="{22\:\ 0x004c|0x004c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0063 \l}"];
Node_23 [shape=record,label="{23\:\ 0x004e|0x004e: SGET  (r4 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.FIRSTSTRONG_RTL android.text.TextDirectionHeuristic \l}"];
Node_24 [shape=record,label="{24\:\ 0x0051|0x0051: SGET  (r4 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.FIRSTSTRONG_RTL android.text.TextDirectionHeuristic \l}"];
Node_25 [shape=record,label="{25\:\ 0x0053|0x0053: RETURN  (r4 I:android.text.TextDirectionHeuristic) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0054|0x0054: SGET  (r4 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.FIRSTSTRONG_LTR android.text.TextDirectionHeuristic \l}"];
Node_27 [shape=record,label="{27\:\ 0x0056|0x0056: RETURN  (r4 I:android.text.TextDirectionHeuristic) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0057|0x0057: SGET  (r4 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.LOCALE android.text.TextDirectionHeuristic \l}"];
Node_29 [shape=record,label="{29\:\ 0x0059|0x0059: RETURN  (r4 I:android.text.TextDirectionHeuristic) \l}"];
Node_30 [shape=record,label="{30\:\ 0x005a|0x005a: SGET  (r4 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.RTL android.text.TextDirectionHeuristic \l}"];
Node_31 [shape=record,label="{31\:\ 0x005c|0x005c: RETURN  (r4 I:android.text.TextDirectionHeuristic) \l}"];
Node_32 [shape=record,label="{32\:\ 0x005d|0x005d: SGET  (r4 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.LTR android.text.TextDirectionHeuristic \l}"];
Node_33 [shape=record,label="{33\:\ 0x005f|0x005f: RETURN  (r4 I:android.text.TextDirectionHeuristic) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0060|0x0060: SGET  (r4 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.ANYRTL_LTR android.text.TextDirectionHeuristic \l}"];
Node_35 [shape=record,label="{35\:\ 0x0062|0x0062: RETURN  (r4 I:android.text.TextDirectionHeuristic) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0063|0x0063: SGET  (r4 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.FIRSTSTRONG_LTR android.text.TextDirectionHeuristic \l}"];
Node_37 [shape=record,label="{37\:\ 0x0065|0x0065: RETURN  (r4 I:android.text.TextDirectionHeuristic) \l}"];
MethodNode[shape=record,label="{private static android.text.TextDirectionHeuristic android.support.v4.widget.TextViewCompat.getTextDirectionHeuristic((r4 I:android.widget.TextView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.RequiresApi, \{value=18\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_17;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_15[style=dashed];
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_24;
Node_21 -> Node_26;
Node_21 -> Node_28;
Node_21 -> Node_30;
Node_21 -> Node_32;
Node_21 -> Node_34;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_36;
Node_23 -> Node_37;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_36 -> Node_37;
}

