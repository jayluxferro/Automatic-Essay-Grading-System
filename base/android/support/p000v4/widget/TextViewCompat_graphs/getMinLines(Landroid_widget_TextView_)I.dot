digraph "CFG forandroid.support.v4.widget.TextViewCompat.getMinLines(Landroid\/widget\/TextView;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 16) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return r2.getMinLines()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (sMinModeFieldFetched != false) goto L_0x001a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|sMinModeField = retrieveField(\"mMinMode\")\lsMinModeFieldFetched = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a}"];
Node_8 [shape=record,label="{8\:\ 0x001c|if (sMinModeField == null) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e}"];
Node_10 [shape=record,label="{10\:\ 0x0024|if (retrieveIntFromField(sMinModeField, r2) != 1) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026}"];
Node_12 [shape=record,label="{12\:\ 0x0028|if (sMinimumFieldFetched != false) goto L_0x0034\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|sMinimumField = retrieveField(\"mMinimum\")\lsMinimumFieldFetched = true\l}"];
Node_14 [shape=record,label="{14\:\ 0x0034}"];
Node_15 [shape=record,label="{15\:\ 0x0036|if (sMinimumField == null) goto L_?\l}"];
Node_16 [shape=record,label="{16\:\ 0x0038}"];
Node_17 [shape=record,label="{17\:\ 0x003e|RETURN\l|return retrieveIntFromField(sMinimumField, r2)\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return \-1\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
MethodNode[shape=record,label="{public static int android.support.v4.widget.TextViewCompat.getMinLines((r2v0 android.widget.TextView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_18;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_19;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
}

