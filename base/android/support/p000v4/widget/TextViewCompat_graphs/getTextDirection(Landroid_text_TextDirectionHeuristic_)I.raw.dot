digraph "CFG forandroid.support.v4.widget.TextViewCompat.getTextDirection(Landroid\/text\/TextDirectionHeuristic;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.FIRSTSTRONG_RTL android.text.TextDirectionHeuristic \l0x0002: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r1 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: SGET  (r0 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.FIRSTSTRONG_LTR android.text.TextDirectionHeuristic \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000b \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: RETURN  (r1 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: SGET  (r0 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.ANYRTL_LTR android.text.TextDirectionHeuristic \l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0011 \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0010|0x0010: RETURN  (r2 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0011|0x0011: SGET  (r0 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.LTR android.text.TextDirectionHeuristic \l}"];
Node_11 [shape=record,label="{11\:\ 0x0013|0x0013: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0017 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0015|0x0015: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0016|0x0016: RETURN  (r2 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0017|0x0017: SGET  (r0 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.RTL android.text.TextDirectionHeuristic \l}"];
Node_15 [shape=record,label="{15\:\ 0x0019|0x0019: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x001d \l}"];
Node_16 [shape=record,label="{16\:\ 0x001b|0x001b: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x001c|0x001c: RETURN  (r2 I:int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x001d|0x001d: SGET  (r0 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.LOCALE android.text.TextDirectionHeuristic \l}"];
Node_19 [shape=record,label="{19\:\ 0x001f|0x001f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0023 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0021|0x0021: CONST  (r2 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0022|0x0022: RETURN  (r2 I:int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0023|0x0023: SGET  (r0 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.FIRSTSTRONG_LTR android.text.TextDirectionHeuristic \l}"];
Node_23 [shape=record,label="{23\:\ 0x0025|0x0025: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0029 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0027|0x0027: CONST  (r2 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0028|0x0028: RETURN  (r2 I:int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0029|0x0029: SGET  (r0 I:android.text.TextDirectionHeuristic) =  android.text.TextDirectionHeuristics.FIRSTSTRONG_RTL android.text.TextDirectionHeuristic \l}"];
Node_27 [shape=record,label="{27\:\ 0x002b|0x002b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x002f \l}"];
Node_28 [shape=record,label="{28\:\ 0x002d|0x002d: CONST  (r2 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x002e|0x002e: RETURN  (r2 I:int) \l}"];
Node_30 [shape=record,label="{30\:\ 0x002f|0x002f: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{private static int android.support.v4.widget.TextViewCompat.getTextDirection((r2 I:android.text.TextDirectionHeuristic A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.RequiresApi, \{value=18\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
}

