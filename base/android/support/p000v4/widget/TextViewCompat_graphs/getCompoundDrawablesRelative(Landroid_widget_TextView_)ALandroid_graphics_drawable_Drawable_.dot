digraph "CFG forandroid.support.v4.widget.TextViewCompat.getCompoundDrawablesRelative(Landroid\/widget\/TextView;)[Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 18) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return r4.getCompoundDrawablesRelative()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b}"];
Node_5 [shape=record,label="{5\:\ 0x000f|if (android.os.Build.VERSION.SDK_INT \< 17) goto L_0x002b\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|r1 = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|if (r4.getLayoutDirection() != 1) goto L_0x001a\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|r1 = false\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|PHI: r1 \l  PHI: (r1v3 boolean) = (r1v2 boolean), (r1v5 boolean) binds: [B:7:0x0017, B:8:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|android.graphics.drawable.Drawable[] r4 = r4.getCompoundDrawables()\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|if (r1 == false) goto L_0x002a\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|r1 = r4[2]\lr3 = r4[0]\lr4[0] = r1\lr4[2] = r3\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|RETURN\l|return r4\l}"];
Node_13 [shape=record,label="{13\:\ 0x002b}"];
Node_14 [shape=record,label="{14\:\ 0x002f|RETURN\l|return r4.getCompoundDrawables()\l}"];
MethodNode[shape=record,label="{public static android.graphics.drawable.Drawable[] android.support.v4.widget.TextViewCompat.getCompoundDrawablesRelative((r4v0 android.widget.TextView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_13 -> Node_14;
}

