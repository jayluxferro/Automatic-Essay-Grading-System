digraph "CFG forandroid.support.v4.widget.TextViewCompat.setLastBaselineToBottomHeight(Landroid\/widget\/TextView;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:int) android.support.v4.util.Preconditions.checkArgumentNonnegative(int):int type: STATIC \l0x0003: INVOKE  (r0 I:android.text.TextPaint) = (r3 I:android.widget.TextView) android.widget.TextView.getPaint():android.text.TextPaint type: VIRTUAL \l0x0007: INVOKE  (r0 I:android.graphics.Paint$FontMetricsInt) = (r0 I:android.text.TextPaint) android.text.TextPaint.getFontMetricsInt():android.graphics.Paint$FontMetricsInt type: VIRTUAL \l0x000b: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x000d: CONST  (r2 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r1 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:6:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: INVOKE  (r1 I:boolean) = (r3 I:android.widget.TextView) android.widget.TextView.getIncludeFontPadding():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IGET  (r0 I:int) = (r0 I:android.graphics.Paint$FontMetricsInt) android.graphics.Paint.FontMetricsInt.descent int \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: IGET  (r0 I:int) = (r0 I:android.graphics.Paint$FontMetricsInt) android.graphics.Paint.FontMetricsInt.bottom int \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: INVOKE  (r1 I:int) = (r0 I:int) java.lang.Math.abs(int):int type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: IF  (r4 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:10:0x0033 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: ARITH  (r4 I:int) = (r4 I:int) \- (r0 I:int) \l0x0024: INVOKE  (r0 I:int) = (r3 I:android.widget.TextView) android.widget.TextView.getPaddingLeft():int type: VIRTUAL \l0x0028: INVOKE  (r1 I:int) = (r3 I:android.widget.TextView) android.widget.TextView.getPaddingTop():int type: VIRTUAL \l0x002c: INVOKE  (r2 I:int) = (r3 I:android.widget.TextView) android.widget.TextView.getPaddingRight():int type: VIRTUAL \l0x0030: INVOKE  \l  (r3 I:android.widget.TextView)\l  (r0 I:int)\l  (r1 I:int)\l  (r2 I:int)\l  (r4 I:int)\l android.widget.TextView.setPadding(int, int, int, int):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|0x0033: RETURN   \l}"];
MethodNode[shape=record,label="{public static void android.support.v4.widget.TextViewCompat.setLastBaselineToBottomHeight((r3 I:android.widget.TextView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Px, \{\}], Annotation[BUILD, android.support.annotation.IntRange, \{from=0\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
}

