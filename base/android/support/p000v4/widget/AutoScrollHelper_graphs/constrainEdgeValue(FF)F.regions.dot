digraph "CFG forandroid.support.v4.widget.AutoScrollHelper.constrainEdgeValue(FF)F" {
subgraph cluster_Region_621834236 {
label = "R(1:(2:(1:2)|(1:4)))";
node [shape=record,color=blue];
subgraph cluster_Region_1040992104 {
label = "R(2:(1:2)|(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_34820341 {
label = "IF [B:1:0x0003] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r5 == 0.0f) goto L_0x0005\l}"];
subgraph cluster_Region_1549056338 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|RETURN\l|return 0.0f\l}"];
}
}
subgraph cluster_Region_2057126571 {
label = "R(1:4)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_645299607 {
label = "Switch: 2, default: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0008|switch(r3.mEdgeType) \{\l    case 0: goto L_0x0013;\l    case 1: goto L_0x0013;\l    case 2: goto L_0x000c;\l    default: goto L_0x000b;\l\}\l}"];
subgraph cluster_Region_1048184148 {
label = "R(2:(1:(2:(1:14)|(1:16)))|1)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1201518048 {
label = "IF [B:10:0x0015] THEN: R(1:(2:(1:14)|(1:16))) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0015|if (r4 \< r5) goto L_0x0017\l}"];
subgraph cluster_Region_1468346274 {
label = "R(1:(2:(1:14)|(1:16)))";
node [shape=record,color=blue];
subgraph cluster_Region_1107978752 {
label = "R(2:(1:14)|(1:16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_750028720 {
label = "IF [B:12:0x001b] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x001b|if (r4 \>= 0.0f) goto L_0x001d\l}"];
subgraph cluster_Region_103548275 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x001f|RETURN\l|return 1.0f \- (r4 \/ r5)\l}"];
}
}
subgraph cluster_Region_2016072235 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0022|RETURN\l|return (!r3.mAnimating \|\| r3.mEdgeType != 1) ? 0.0f : 1.0f\l}"];
}
}
}
}
Node_InsnContainer_1776414020 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1642102479 {
label = "R(2:(1:8)|1)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_117565469 {
label = "IF [B:6:0x000e] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000e|if (r4 \< 0.0f) goto L_0x0010\l}"];
subgraph cluster_Region_697616732 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0012|RETURN\l|return r4 \/ (\-r5)\l}"];
}
}
Node_InsnContainer_1341758183 [shape=record,label="{|break\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0006}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000c}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0010}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0013}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0017}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x001d}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0020}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0024}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0027|REMOVE\lADDED_TO_REGION\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0029}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x002a}"];
MethodNode[shape=record,label="{private float android.support.v4.widget.AutoScrollHelper.constrainEdgeValue((r3v0 'this' android.support.v4.widget.AutoScrollHelper A[IMMUTABLE_TYPE, THIS]), (r4v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_9;
Node_4 -> Node_20;
Node_10 -> Node_11;
Node_10 -> Node_20[style=dashed];
Node_12 -> Node_13;
Node_12 -> Node_15[style=dashed];
Node_16 -> Node_17;
Node_16 -> Node_20;
Node_6 -> Node_7;
Node_6 -> Node_20[style=dashed];
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_20;
}

