digraph "CFG forandroid.support.v4.widget.AutoScrollHelper.computeTargetVelocity(IFFF)F" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:float[]) = (r3 I:android.support.v4.widget.AutoScrollHelper) android.support.v4.widget.AutoScrollHelper.mRelativeEdges float[] \l0x0002: AGET  (r0 I:?[int, float]) = (r0 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x0004: IGET  (r1 I:float[]) = (r3 I:android.support.v4.widget.AutoScrollHelper) android.support.v4.widget.AutoScrollHelper.mMaximumEdges float[] \l0x0006: AGET  (r1 I:?[int, float]) = (r1 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x0008: INVOKE  (r5 I:float) = \l  (r3 I:android.support.v4.widget.AutoScrollHelper)\l  (r0 I:float)\l  (r6 I:float)\l  (r1 I:float)\l  (r5 I:float)\l android.support.v4.widget.AutoScrollHelper.getEdgeValue(float, float, float, float):float type: DIRECT \l0x000c: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: CMP_L  (r0 I:int) = (r5 I:float), (r6 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: RETURN  (r6 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IGET  (r6 I:float[]) = (r3 I:android.support.v4.widget.AutoScrollHelper) android.support.v4.widget.AutoScrollHelper.mRelativeVelocity float[] \l0x0014: AGET  (r6 I:?[int, float]) = (r6 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x0016: IGET  (r1 I:float[]) = (r3 I:android.support.v4.widget.AutoScrollHelper) android.support.v4.widget.AutoScrollHelper.mMinimumVelocity float[] \l0x0018: AGET  (r1 I:?[int, float]) = (r1 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x001a: IGET  (r2 I:float[]) = (r3 I:android.support.v4.widget.AutoScrollHelper) android.support.v4.widget.AutoScrollHelper.mMaximumVelocity float[] \l0x001c: AGET  (r4 I:?[int, float]) = (r2 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x001e: ARITH  (r6 I:float) = (r6 I:float) * (r7 I:float) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x0029 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: ARITH  (r5 I:float) = (r5 I:float) * (r6 I:float) \l0x0024: INVOKE  (r4 I:float) = (r5 I:float), (r1 I:float), (r4 I:float) android.support.v4.widget.AutoScrollHelper.constrain(float, float, float):float type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: RETURN  (r4 I:float) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: NEG  (r5 I:float) = (r5 I:float) \l0x002a: ARITH  (r5 I:float) = (r5 I:float) * (r6 I:float) \l0x002c: INVOKE  (r4 I:float) = (r5 I:float), (r1 I:float), (r4 I:float) android.support.v4.widget.AutoScrollHelper.constrain(float, float, float):float type: STATIC \l0x0030: NEG  (r4 I:float) = (r4 I:float) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: RETURN  (r4 I:float) \l}"];
MethodNode[shape=record,label="{private float android.support.v4.widget.AutoScrollHelper.computeTargetVelocity((r3 'this' I:android.support.v4.widget.AutoScrollHelper A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

