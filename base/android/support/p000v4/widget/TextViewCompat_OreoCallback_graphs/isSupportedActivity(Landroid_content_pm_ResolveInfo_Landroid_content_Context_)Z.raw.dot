digraph "CFG forandroid.support.v4.widget.TextViewCompat.OreoCallback.isSupportedActivity(Landroid\/content\/pm\/ResolveInfo;Landroid\/content\/Context;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.String) = (r5 I:android.content.Context) android.content.Context.getPackageName():java.lang.String type: VIRTUAL \l0x0004: IGET  (r1 I:android.content.pm.ActivityInfo) = (r4 I:android.content.pm.ResolveInfo) android.content.pm.ResolveInfo.activityInfo android.content.pm.ActivityInfo \l0x0006: IGET  (r1 I:java.lang.String) = (r1 I:android.content.pm.ActivityInfo) android.content.pm.ActivityInfo.packageName java.lang.String \l0x0008: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l0x000c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IGET  (r0 I:android.content.pm.ActivityInfo) = (r4 I:android.content.pm.ResolveInfo) android.content.pm.ResolveInfo.activityInfo android.content.pm.ActivityInfo \l0x0012: IGET  (r0 I:boolean) = (r0 I:android.content.pm.ActivityInfo) android.content.pm.ActivityInfo.exported boolean \l0x0014: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: RETURN  (r2 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IGET  (r0 I:android.content.pm.ActivityInfo) = (r4 I:android.content.pm.ResolveInfo) android.content.pm.ResolveInfo.activityInfo android.content.pm.ActivityInfo \l0x001a: IGET  (r0 I:java.lang.String) = (r0 I:android.content.pm.ActivityInfo) android.content.pm.ActivityInfo.permission java.lang.String \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002a \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: IGET  (r4 I:android.content.pm.ActivityInfo) = (r4 I:android.content.pm.ResolveInfo) android.content.pm.ResolveInfo.activityInfo android.content.pm.ActivityInfo \l0x0020: IGET  (r4 I:java.lang.String) = (r4 I:android.content.pm.ActivityInfo) android.content.pm.ActivityInfo.permission java.lang.String \l0x0022: INVOKE  (r4 I:int) = (r5 I:android.content.Context), (r4 I:java.lang.String) android.content.Context.checkSelfPermission(java.lang.String):int type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0029 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean android.support.v4.widget.TextViewCompat.OreoCallback.isSupportedActivity((r3 'this' I:android.support.v4.widget.TextViewCompat$OreoCallback A[IMMUTABLE_TYPE, THIS]), (r4 I:android.content.pm.ResolveInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_12[style=dashed];
Node_11 -> Node_12;
}

