digraph "CFG forandroid.support.v4.widget.CircularProgressDrawable.applyTransformation(FLandroid\/support\/v4\/widget\/CircularProgressDrawable$Ring;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r7.mFinishing == false) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|applyFinishTranslation(r8, r9)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
Node_4 [shape=record,label="{4\:\ 0x000c|if ((r8 \> 1.0f ? 1 : (r8 == 1.0f ? 0 : \-1)) != 0) goto L_0x0010\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r10 == false) goto L_?\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|float r10 = r9.getStartingRotation()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|if ((r8 \> 0.5f ? 1 : (r8 == 0.5f ? 0 : \-1)) \>= 0) goto L_0x0034\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|float r3 = r9.getStartingStartTrim()\landroid.view.animation.Interpolator r4 = MATERIAL_INTERPOLATOR\lr6 = r3\lr3 = ((r4.getInterpolation(r8 \/ 0.5f) * 0.79f) + MIN_PROGRESS_ARC) + r3\lr0 = r6\l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|float r3 = r9.getStartingStartTrim() + 0.79f\landroid.view.animation.Interpolator r5 = MATERIAL_INTERPOLATOR\lfloat r0 = r3 \- (((1.0f \- r5.getInterpolation((r8 \- 0.5f) \/ 0.5f)) * 0.79f) + MIN_PROGRESS_ARC)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|PHI: r0 r3 \l  PHI: (r0v2 float) = (r0v6 float), (r0v12 float) binds: [B:9:0x0034, B:8:0x0020] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 float) = (r3v3 float), (r3v5 float) binds: [B:9:0x0034, B:8:0x0020] A[DONT_GENERATE, DONT_INLINE]\l|float r8 = (r8 + r7.mRotationCount) * GROUP_FULL_ROTATION\lr9.setStartTrim(r0)\lr9.setEndTrim(r3)\lr9.setRotation(r10 + (RING_ROTATION * r8))\lsetRotation(r8)\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void android.support.v4.widget.CircularProgressDrawable.applyTransformation((r7v0 'this' android.support.v4.widget.CircularProgressDrawable A[IMMUTABLE_TYPE, THIS]), (r8v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 android.support.v4.widget.CircularProgressDrawable$Ring A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_12;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

