digraph "CFG forandroid.support.v4.widget.FocusStrategy.SequentialComparator.compare(Ljava\/lang\/Object;Ljava\/lang\/Object;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.graphics.Rect r0 = r4.mTemp1\landroid.graphics.Rect r1 = r4.mTemp2\lr4.mAdapter.obtainBounds(r5, r0)\lr4.mAdapter.obtainBounds(r6, r1)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|if (r0.top \>= r1.top) goto L_0x0016\l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|RETURN\l|return \-1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016}"];
Node_4 [shape=record,label="{4\:\ 0x001b|if (r0.top \<= r1.top) goto L_0x001e\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|RETURN\l|return 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e}"];
Node_7 [shape=record,label="{7\:\ 0x0022|if (r0.left \>= r1.left) goto L_0x002a\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024}"];
Node_9 [shape=record,label="{9\:\ 0x0026|if (r4.mIsLayoutRtl == false) goto L_?\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|SYNTHETIC\lRETURN\lORIG_RETURN\l|return 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a}"];
Node_12 [shape=record,label="{12\:\ 0x002e|if (r0.left \<= r1.left) goto L_0x0037\l}"];
Node_13 [shape=record,label="{13\:\ 0x0030}"];
Node_14 [shape=record,label="{14\:\ 0x0032|if (r4.mIsLayoutRtl == false) goto L_0x0035\l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|SYNTHETIC\lRETURN\lORIG_RETURN\l|return 1\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037}"];
Node_17 [shape=record,label="{17\:\ 0x003b|if (r0.bottom \>= r1.bottom) goto L_0x003e\l}"];
Node_18 [shape=record,label="{18\:\ 0x003d|RETURN\l|return \-1\l}"];
Node_19 [shape=record,label="{19\:\ 0x003e}"];
Node_20 [shape=record,label="{20\:\ 0x0042|if (r0.bottom \<= r1.bottom) goto L_0x0045\l}"];
Node_21 [shape=record,label="{21\:\ 0x0044|RETURN\l|return 1\l}"];
Node_22 [shape=record,label="{22\:\ 0x0045}"];
Node_23 [shape=record,label="{23\:\ 0x0049|if (r0.right \>= r1.right) goto L_0x0051\l}"];
Node_24 [shape=record,label="{24\:\ 0x004b}"];
Node_25 [shape=record,label="{25\:\ 0x004d|if (r4.mIsLayoutRtl == false) goto L_?\l}"];
Node_26 [shape=record,label="{26\:\ 0x004f|SYNTHETIC\lRETURN\lORIG_RETURN\l|return 1\l}"];
Node_27 [shape=record,label="{27\:\ 0x0051}"];
Node_28 [shape=record,label="{28\:\ 0x0055|if (r0.right \<= r1.right) goto L_0x005e\l}"];
Node_29 [shape=record,label="{29\:\ 0x0057}"];
Node_30 [shape=record,label="{30\:\ 0x0059|if (r4.mIsLayoutRtl == false) goto L_0x005c\l}"];
Node_31 [shape=record,label="{31\:\ 0x005c|SYNTHETIC\lRETURN\lORIG_RETURN\l|return 1\l}"];
Node_32 [shape=record,label="{32\:\ 0x005e|RETURN\l|return 0\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
MethodNode[shape=record,label="{public int android.support.v4.widget.FocusStrategy.SequentialComparator.compare((r4v0 'this' android.support.v4.widget.FocusStrategy$SequentialComparator A[IMMUTABLE_TYPE, THIS]), (r5v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;TT;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_33;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_34[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_27;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_35;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_32;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_36[style=dashed];
}

