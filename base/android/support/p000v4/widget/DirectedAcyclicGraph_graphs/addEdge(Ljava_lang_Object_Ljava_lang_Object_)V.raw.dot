digraph "CFG forandroid.support.v4.widget.DirectedAcyclicGraph.addEdge(Ljava\/lang\/Object;Ljava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v4.util.SimpleArrayMap\<T, java.util.ArrayList\<T\>\>) = (r2 I:android.support.v4.widget.DirectedAcyclicGraph) android.support.v4.widget.DirectedAcyclicGraph.mGraph android.support.v4.util.SimpleArrayMap \l0x0002: INVOKE  (r0 I:boolean) = \l  (r0 I:android.support.v4.util.SimpleArrayMap)\l  (r3 I:java.lang.Object)\l android.support.v4.util.SimpleArrayMap.containsKey(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0027 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:android.support.v4.util.SimpleArrayMap\<T, java.util.ArrayList\<T\>\>) = (r2 I:android.support.v4.widget.DirectedAcyclicGraph) android.support.v4.widget.DirectedAcyclicGraph.mGraph android.support.v4.util.SimpleArrayMap \l0x000a: INVOKE  (r0 I:boolean) = \l  (r0 I:android.support.v4.util.SimpleArrayMap)\l  (r4 I:java.lang.Object)\l android.support.v4.util.SimpleArrayMap.containsKey(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0027 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IGET  (r0 I:android.support.v4.util.SimpleArrayMap\<T, java.util.ArrayList\<T\>\>) = (r2 I:android.support.v4.widget.DirectedAcyclicGraph) android.support.v4.widget.DirectedAcyclicGraph.mGraph android.support.v4.util.SimpleArrayMap \l0x0012: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:android.support.v4.util.SimpleArrayMap)\l  (r3 I:java.lang.Object)\l android.support.v4.util.SimpleArrayMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0016: CHECK_CAST  (r0 I:java.util.ArrayList) = (java.util.ArrayList) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0023 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: INVOKE  (r0 I:java.util.ArrayList) = (r2 I:android.support.v4.widget.DirectedAcyclicGraph) android.support.v4.widget.DirectedAcyclicGraph.getEmptyList():java.util.ArrayList type: DIRECT \l0x001e: IGET  (r1 I:android.support.v4.util.SimpleArrayMap\<T, java.util.ArrayList\<T\>\>) = (r2 I:android.support.v4.widget.DirectedAcyclicGraph) android.support.v4.widget.DirectedAcyclicGraph.mGraph android.support.v4.util.SimpleArrayMap \l0x0020: INVOKE  \l  (r1 I:android.support.v4.util.SimpleArrayMap)\l  (r3 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l android.support.v4.util.SimpleArrayMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: INVOKE  (r0 I:java.util.ArrayList), (r4 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0029: CONST_STR  (r4 I:java.lang.String) =  \"All nodes must be present in the graph before being added as an edge\" \l0x002b: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.v4.widget.DirectedAcyclicGraph.addEdge((r2 'this' I:android.support.v4.widget.DirectedAcyclicGraph A[IMMUTABLE_TYPE, THIS]), (r3 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;TT;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
}

