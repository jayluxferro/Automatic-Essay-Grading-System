digraph "CFG forandroid.support.v4.widget.DirectedAcyclicGraph.addEdge(Ljava\/lang\/Object;Ljava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r2.mGraph.containsKey(r3) == false) goto L_0x0027\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r2.mGraph.containsKey(r4) == false) goto L_0x0027\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|java.util.ArrayList r0 = r2.mGraph.get(r3)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r0 != null) goto L_0x0023\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|java.util.ArrayList r0 = getEmptyList()\lr2.mGraph.put(r3, r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|PHI: r0 \l  PHI: (r0v7 java.util.ArrayList) = (r0v6 java.util.ArrayList), (r0v8 java.util.ArrayList) binds: [B:5:0x0018, B:6:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|r0.add(r4)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ 0x0027}"];
Node_10 [shape=record,label="{10\:\ 0x002e|throw new java.lang.IllegalArgumentException(\"All nodes must be present in the graph before being added as an edge\")\l}"];
MethodNode[shape=record,label="{public void android.support.v4.widget.DirectedAcyclicGraph.addEdge((r2v0 'this' android.support.v4.widget.DirectedAcyclicGraph A[IMMUTABLE_TYPE, THIS]), (r3v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;TT;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
}

