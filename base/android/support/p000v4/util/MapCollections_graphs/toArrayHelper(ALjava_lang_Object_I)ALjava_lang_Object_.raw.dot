digraph "CFG forandroid.support.v4.util.MapCollections.toArrayHelper([Ljava\/lang\/Object;I)[Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r3 I:android.support.v4.util.MapCollections) android.support.v4.util.MapCollections.colGetSize():int type: VIRTUAL \l0x0004: ARRAY_LENGTH  (r1 I:int) = (r4 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:3:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r4 I:java.lang.Class) = (r4 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x000b: INVOKE  (r4 I:java.lang.Class) = (r4 I:java.lang.Class) java.lang.Class.getComponentType():java.lang.Class type: VIRTUAL \l0x000f: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.lang.Class), (r0 I:int) java.lang.reflect.Array.newInstance(java.lang.Class, int):java.lang.Object type: STATIC \l0x0013: CHECK_CAST  (r4 I:java.lang.Object[]) = (java.lang.Object[]) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:6:0x0021 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: INVOKE  (r2 I:java.lang.Object) = \l  (r3 I:android.support.v4.util.MapCollections)\l  (r1 I:int)\l  (r5 I:int)\l android.support.v4.util.MapCollections.colGetEntry(int, int):java.lang.Object type: VIRTUAL \l0x001c: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x001e: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: ARRAY_LENGTH  (r5 I:int) = (r4 I:?[]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: IF  (r5 I:?[int, byte, short, char]) \<= (r0 I:?[int, byte, short, char])  \-\> B:9:0x0027 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0025: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: RETURN  (r4 I:T[]) \l}"];
MethodNode[shape=record,label="{public T[] android.support.v4.util.MapCollections.toArrayHelper((r3 'this' I:android.support.v4.util.MapCollections A[IMMUTABLE_TYPE, THIS]), (r4 I:T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>([TT;I)[TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_4;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
}

