digraph "CFG forandroid.support.v4.util.Pools.SimplePool.isInPool(Ljava\/lang\/Object;)Z" {
subgraph cluster_Region_1671914689 {
label = "R(3:0|(1:(2:(1:5)|(1:6)))|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = 0\l}"];
subgraph cluster_LoopRegion_1823776219 {
label = "LOOP:0: (1:(2:(1:5)|(1:6)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r1 \< r3.mPoolSize) goto L_0x0006\l}"];
subgraph cluster_Region_1824518869 {
label = "R(1:(2:(1:5)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1137379862 {
label = "R(2:(1:5)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_77497100 {
label = "IF [B:4:0x000a] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r3.mPool[r1] == r4) goto L_0x000c\l}"];
subgraph cluster_Region_1791503045 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000c|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1050569196 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000e|LOOP_END\lLOOP:0: B:1:0x0002\-\>B:6:0x000e\l|r1++\l}"];
}
}
}
}
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|return false\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:6:0x000e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0002\-\>B:6:0x000e\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0006}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0011|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x000c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private boolean android.support.v4.util.Pools.SimplePool.isInPool((r3v0 'this' android.support.v4.util.Pools$SimplePool A[IMMUTABLE_TYPE, THIS]), (r4v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_8[style=dashed];
Node_4 -> Node_6[style=dashed];
Node_4 -> Node_9;
Node_6 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_8 -> Node_7;
Node_9 -> Node_5;
}

