digraph "CFG forandroid.support.v4.util.CircularArray.addFirst(Ljava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r2 I:android.support.v4.util.CircularArray) android.support.v4.util.CircularArray.mHead int \l0x0002: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l0x0004: IGET  (r1 I:int) = (r2 I:android.support.v4.util.CircularArray) android.support.v4.util.CircularArray.mCapacityBitmask int \l0x0006: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (r1 I:?[int, boolean, short, byte, char]) \l0x0007: IPUT  (r0 I:int), (r2 I:android.support.v4.util.CircularArray) android.support.v4.util.CircularArray.mHead int \l0x0009: IGET  (r0 I:E[]) = (r2 I:android.support.v4.util.CircularArray) android.support.v4.util.CircularArray.mElements java.lang.Object[] \l0x000b: IGET  (r1 I:int) = (r2 I:android.support.v4.util.CircularArray) android.support.v4.util.CircularArray.mHead int \l0x000d: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x000f: IGET  (r3 I:int) = (r2 I:android.support.v4.util.CircularArray) android.support.v4.util.CircularArray.mHead int \l0x0011: IGET  (r0 I:int) = (r2 I:android.support.v4.util.CircularArray) android.support.v4.util.CircularArray.mTail int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: INVOKE  (r2 I:android.support.v4.util.CircularArray) android.support.v4.util.CircularArray.doubleCapacity():void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.util.CircularArray.addFirst((r2 'this' I:android.support.v4.util.CircularArray A[IMMUTABLE_TYPE, THIS]), (r3 I:E A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TE;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

