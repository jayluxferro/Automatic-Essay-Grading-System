digraph "CFG forandroid.support.v4.util.CircularArray.get(I)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:5:0x0013 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:int) = (r2 I:android.support.v4.util.CircularArray) android.support.v4.util.CircularArray.size():int type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r3 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:5:0x0013 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:E[]) = (r2 I:android.support.v4.util.CircularArray) android.support.v4.util.CircularArray.mElements java.lang.Object[] \l0x000a: IGET  (r1 I:int) = (r2 I:android.support.v4.util.CircularArray) android.support.v4.util.CircularArray.mHead int \l0x000c: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int) \l0x000d: IGET  (r3 I:int) = (r2 I:android.support.v4.util.CircularArray) android.support.v4.util.CircularArray.mCapacityBitmask int \l0x000f: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) & (r1 I:?[int, boolean, short, byte, char]) \l0x0010: AGET  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: RETURN  (r3 I:E) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: NEW_INSTANCE  (r3 I:java.lang.ArrayIndexOutOfBoundsException) =  java.lang.ArrayIndexOutOfBoundsException \l0x0015: INVOKE  (r3 I:java.lang.ArrayIndexOutOfBoundsException) java.lang.ArrayIndexOutOfBoundsException.\<init\>():void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public E android.support.v4.util.CircularArray.get((r2 'this' I:android.support.v4.util.CircularArray A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(I)TE;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
}

