digraph "CFG forandroid.support.v4.util.AtomicFile.openRead()Ljava\/io\/FileInputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.io.File) = (r2 I:android.support.v4.util.AtomicFile) android.support.v4.util.AtomicFile.mBackupName java.io.File \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.io.File) java.io.File.exists():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:java.io.File) = (r2 I:android.support.v4.util.AtomicFile) android.support.v4.util.AtomicFile.mBaseName java.io.File \l0x000a: INVOKE  (r0 I:java.io.File) java.io.File.delete():boolean type: VIRTUAL \l0x000d: IGET  (r0 I:java.io.File) = (r2 I:android.support.v4.util.AtomicFile) android.support.v4.util.AtomicFile.mBackupName java.io.File \l0x000f: IGET  (r1 I:java.io.File) = (r2 I:android.support.v4.util.AtomicFile) android.support.v4.util.AtomicFile.mBaseName java.io.File \l0x0011: INVOKE  (r0 I:java.io.File), (r1 I:java.io.File) java.io.File.renameTo(java.io.File):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:java.io.FileInputStream) =  java.io.FileInputStream \l0x0016: IGET  (r1 I:java.io.File) = (r2 I:android.support.v4.util.AtomicFile) android.support.v4.util.AtomicFile.mBaseName java.io.File \l0x0018: INVOKE  (r0 I:java.io.FileInputStream), (r1 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: RETURN  (r0 I:java.io.FileInputStream) \l}"];
MethodNode[shape=record,label="{public java.io.FileInputStream android.support.v4.util.AtomicFile.openRead((r2 'this' I:android.support.v4.util.AtomicFile A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.FileNotFoundException]\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

