digraph "CFG forandroid.support.v4.util.Preconditions.checkArrayElementsNotNull([Ljava\/lang\/Object;Ljava\/lang\/String;)[Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0029 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: ARRAY_LENGTH  (r2 I:int) = (r4 I:?[]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:9:0x0028 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: AGET  (r2 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000e \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: NEW_INSTANCE  (r4 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x0010: SGET  (r2 I:java.util.Locale) =  java.util.Locale.US java.util.Locale \l0x0012: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0013: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0015: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x0017: INVOKE  (r5 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x001b: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001c: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x001e: CONST_STR  (r5 I:java.lang.String) =  \"%s[%d] must not be null\" \l0x0020: INVOKE  (r5 I:java.lang.String) = \l  (r2 I:java.util.Locale)\l  (r5 I:java.lang.String)\l  (r3 I:java.lang.Object[])\l java.lang.String.format(java.util.Locale, java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x0024: INVOKE  \l  (r4 I:java.lang.NullPointerException)\l  (r5 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: RETURN  (r4 I:T[]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: NEW_INSTANCE  (r4 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x002b: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002d: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0030: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0033: CONST_STR  (r5 I:java.lang.String) =  \" must not be null\" \l0x0035: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0038: INVOKE  (r5 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003c: INVOKE  \l  (r4 I:java.lang.NullPointerException)\l  (r5 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|0x003f: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static T[] android.support.v4.util.Preconditions.checkArrayElementsNotNull((r4 I:T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>([TT;, Ljava\/lang\/String;, )[TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_2;
Node_7 -> Node_8;
Node_10 -> Node_11;
}

