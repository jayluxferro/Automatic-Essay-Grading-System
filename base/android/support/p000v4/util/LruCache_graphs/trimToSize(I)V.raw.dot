digraph "CFG forandroid.support.v4.util.LruCache.trimToSize(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:int) = (r4 I:android.support.v4.util.LruCache) android.support.v4.util.LruCache.size int A[Catch:\{ all \-\> 0x0071 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:19:0x0052 A[Catch:\{ all \-\> 0x0071 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IGET  (r0 I:java.util.LinkedHashMap\<K, V\>) = (r4 I:android.support.v4.util.LruCache) android.support.v4.util.LruCache.map java.util.LinkedHashMap A[Catch:\{ all \-\> 0x0071 \}]\l0x0007: INVOKE  (r0 I:boolean) = (r0 I:java.util.LinkedHashMap) java.util.LinkedHashMap.isEmpty():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0071 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0011 A[Catch:\{ all \-\> 0x0071 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: IGET  (r0 I:int) = (r4 I:android.support.v4.util.LruCache) android.support.v4.util.LruCache.size int A[Catch:\{ all \-\> 0x0071 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0052 A[Catch:\{ all \-\> 0x0071 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: IGET  (r0 I:int) = (r4 I:android.support.v4.util.LruCache) android.support.v4.util.LruCache.size int A[Catch:\{ all \-\> 0x0071 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: IF  (r0 I:?[int, byte, short, char]) \<= (r5 I:?[int, byte, short, char])  \-\> B:16:0x0050 A[Catch:\{ all \-\> 0x0071 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|0x0015: IGET  (r0 I:java.util.LinkedHashMap\<K, V\>) = (r4 I:android.support.v4.util.LruCache) android.support.v4.util.LruCache.map java.util.LinkedHashMap A[Catch:\{ all \-\> 0x0071 \}]\l0x0017: INVOKE  (r0 I:boolean) = (r0 I:java.util.LinkedHashMap) java.util.LinkedHashMap.isEmpty():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0071 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001e A[Catch:\{ all \-\> 0x0071 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: GOTO  \-\> 0x0050 A[Catch:\{ all \-\> 0x0071 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|0x001e: IGET  (r0 I:java.util.LinkedHashMap\<K, V\>) = (r4 I:android.support.v4.util.LruCache) android.support.v4.util.LruCache.map java.util.LinkedHashMap A[Catch:\{ all \-\> 0x0071 \}]\l0x0020: INVOKE  (r0 I:java.util.Set) = (r0 I:java.util.LinkedHashMap) java.util.LinkedHashMap.entrySet():java.util.Set type: VIRTUAL A[Catch:\{ all \-\> 0x0071 \}]\l0x0024: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ all \-\> 0x0071 \}]\l0x0028: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0071 \}]\l0x002c: CHECK_CAST  (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0071 \}]\l0x002e: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0071 \}]\l0x0032: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0071 \}]\l0x0036: IGET  (r2 I:java.util.LinkedHashMap\<K, V\>) = (r4 I:android.support.v4.util.LruCache) android.support.v4.util.LruCache.map java.util.LinkedHashMap A[Catch:\{ all \-\> 0x0071 \}]\l0x0038: INVOKE  (r2 I:java.util.LinkedHashMap), (r1 I:java.lang.Object) java.util.LinkedHashMap.remove(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0071 \}]\l0x003b: IGET  (r2 I:int) = (r4 I:android.support.v4.util.LruCache) android.support.v4.util.LruCache.size int A[Catch:\{ all \-\> 0x0071 \}]\l0x003d: INVOKE  (r3 I:int) = \l  (r4 I:android.support.v4.util.LruCache)\l  (r1 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l android.support.v4.util.LruCache.safeSizeOf(java.lang.Object, java.lang.Object):int type: DIRECT A[Catch:\{ all \-\> 0x0071 \}]\l0x0041: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) A[Catch:\{ all \-\> 0x0071 \}]\l0x0042: IPUT  (r2 I:int), (r4 I:android.support.v4.util.LruCache) android.support.v4.util.LruCache.size int A[Catch:\{ all \-\> 0x0071 \}]\l0x0044: IGET  (r2 I:int) = (r4 I:android.support.v4.util.LruCache) android.support.v4.util.LruCache.evictionCount int A[Catch:\{ all \-\> 0x0071 \}]\l0x0046: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0071 \}]\l0x0047: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) A[Catch:\{ all \-\> 0x0071 \}]\l0x0048: IPUT  (r2 I:int), (r4 I:android.support.v4.util.LruCache) android.support.v4.util.LruCache.evictionCount int A[Catch:\{ all \-\> 0x0071 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x004a|0x004a: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0071 \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x004b|0x004b: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004c: INVOKE  \l  (r4 I:android.support.v4.util.LruCache)\l  (r3 I:boolean)\l  (r1 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l android.support.v4.util.LruCache.entryRemoved(boolean, java.lang.Object, java.lang.Object, java.lang.Object):void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0050|SYNTHETIC\lSplitter:B:16:0x0050\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x0050\l|0x0050: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0071 \}, TRY_ENTER]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0051|0x0051: RETURN   A[Catch:\{ all \-\> 0x0071 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0052|0x0052: NEW_INSTANCE  (r5 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException A[Catch:\{ all \-\> 0x0071 \}]\l0x0054: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0071 \}]\l0x0056: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0071 \}]\l0x0059: INVOKE  (r1 I:java.lang.Class) = (r4 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL A[Catch:\{ all \-\> 0x0071 \}]\l0x005d: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Class) java.lang.Class.getName():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0071 \}]\l0x0061: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0071 \}]\l0x0064: CONST_STR  (r1 I:java.lang.String) =  \".sizeOf() is reporting inconsistent results!\" A[Catch:\{ all \-\> 0x0071 \}]\l0x0066: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0071 \}]\l0x0069: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0071 \}]\l0x006d: INVOKE  \l  (r5 I:java.lang.IllegalStateException)\l  (r0 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0071 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0070|0x0070: THROW  (r5 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0071 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0071|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0071: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0071 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0072|0x0072: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0071 \}, TRY_LEAVE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0073|0x0073: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.v4.util.LruCache.trimToSize((r4 'this' I:android.support.v4.util.LruCache A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_19;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_19;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_0;
Node_16 -> Node_17;
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23;
}

