digraph "CFG forandroid.support.v4.util.LruCache.trimToSize(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lLOOP:0: B:0:0x0000\-\>B:15:0x004b\l|monitor\-enter(r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?}"];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r4.size \< 0) goto L_0x0052\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005}"];
Node_5 [shape=record,label="{5\:\ 0x000b|if (r4.map.isEmpty() == false) goto L_0x0011\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d}"];
Node_7 [shape=record,label="{7\:\ 0x000f|if (r4.size != 0) goto L_0x0052\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011}"];
Node_9 [shape=record,label="{9\:\ 0x0013|if (r4.size \<= r5) goto L_0x0050\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015}"];
Node_11 [shape=record,label="{11\:\ 0x001b|if (r4.map.isEmpty() == false) goto L_0x001e\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d}"];
Node_13 [shape=record,label="{13\:\ 0x001e|java.util.Map$Entry r0 = r4.map.entrySet().iterator().next()\ljava.lang.Object r1 = r0.getKey()\ljava.lang.Object r0 = r0.getValue()\lr4.map.remove(r1)\lr4.size = r4.size \- safeSizeOf(r1, r0)\lr4.evictionCount = r4.evictionCount + 1\l}"];
Node_14 [shape=record,label="{14\:\ 0x004a|monitor\-exit(r4)\l}"];
Node_15 [shape=record,label="{15\:\ 0x004b|LOOP_END\lLOOP:0: B:0:0x0000\-\>B:15:0x004b\l|entryRemoved(true, r1, r0, (java.lang.Object) null)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0050|SYNTHETIC\lSplitter:B:16:0x0050\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x0050\l|monitor\-exit(r4)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0051|RETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ 0x0052|java.lang.StringBuilder r0 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr0.append(getClass().getName())\lr0.append(\".sizeOf() is reporting inconsistent results!\")\l}"];
Node_20 [shape=record,label="{20\:\ 0x0070|throw new java.lang.IllegalStateException(r0.toString())\l}"];
Node_21 [shape=record,label="{21\:\ 0x0071|REMOVE\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_22 [shape=record,label="{22\:\ 0x0072|REMOVE\l}"];
Node_23 [shape=record,label="{23\:\ 0x0073|REMOVE\l|throw r5\l}"];
Node_24 [shape=record,label="{24\:\ 0x0052|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0052|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x001d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v4.util.LruCache.trimToSize((r4v0 'this' android.support.v4.util.LruCache A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_24;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_25;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_26[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_0;
Node_16 -> Node_17;
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_24 -> Node_19;
Node_25 -> Node_19;
Node_26 -> Node_12;
}

