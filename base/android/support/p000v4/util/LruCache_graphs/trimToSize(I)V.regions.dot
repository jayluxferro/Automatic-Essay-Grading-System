digraph "CFG forandroid.support.v4.util.LruCache.trimToSize(I)V" {
subgraph cluster_Region_134362303 {
label = "R(1:(2:0|15)) | DECL_VAR: java.lang.Object null, java.lang.Object null\l";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_2008900154 {
label = "LOOP:0: (2:0|15)";
node [shape=record,color=blue];
subgraph cluster_Region_70783024 {
label = "R(2:0|15)";
node [shape=record,color=blue];
subgraph cluster_SynchronizedRegion_498806211 {
label = "Synchronized:R(2:0|(1:(1:19)(1:(1:(2:(1:12)|(1:13)))(0))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lLOOP:0: B:0:0x0000\-\>B:15:0x004b\l}"];
subgraph cluster_Region_615420322 {
label = "R(1:(1:19)(1:(1:(2:(1:12)|(1:13)))(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1024519748 {
label = "IF [B:3:0x0003, B:5:0x000b, B:7:0x000f] THEN: R(1:19) ELSE: R(1:(1:(2:(1:12)|(1:13)))(0))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r4.size \< 0) goto L_0x0052\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|ADDED_TO_REGION\l|if (r4.map.isEmpty() == true) goto L_0x000d\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|ADDED_TO_REGION\l|if (r4.size != 0) goto L_0x0052\l}"];
subgraph cluster_Region_564193134 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0052|EDGE_INSN: B:24:0x0052\-\>B:19:0x0052 ?: BREAK  \lEDGE_INSN: B:25:0x0052\-\>B:19:0x0052 ?: BREAK  \l}"];
}
subgraph cluster_Region_1706103724 {
label = "R(1:(1:(2:(1:12)|(1:13)))(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_893566265 {
label = "IF [B:9:0x0013] THEN: R(1:(2:(1:12)|(1:13))) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0013|if (r4.size \> r5) goto L_0x0015\l}"];
subgraph cluster_Region_253363995 {
label = "R(1:(2:(1:12)|(1:13)))";
node [shape=record,color=blue];
subgraph cluster_Region_690428417 {
label = "R(2:(1:12)|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1155940602 {
label = "IF [B:11:0x001b] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001b|if (r4.map.isEmpty() == true) goto L_0x001d\l}"];
subgraph cluster_Region_1693287978 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x001d|EDGE_INSN: B:12:0x001d\-\>B:16:0x0050 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_1960060210 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x001e|java.util.Map$Entry java.util.Map.Entry r0 = r4.map.entrySet().iterator().next()\ljava.lang.Object r1 = r0.getKey()\ljava.lang.Object r0 = r0.getValue()\lr4.map.remove(r1)\lr4.size \-= safeSizeOf(r1, r0)\lr4.evictionCount++\l}"];
}
}
}
subgraph cluster_Region_999323507 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
Node_15 [shape=record,label="{15\:\ 0x004b|LOOP_END\lLOOP:0: B:0:0x0000\-\>B:15:0x004b\l|entryRemoved(true, r1, r0, (java.lang.Object) null)\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0005}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000d}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0011}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0015}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x004a|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x004a: MONITOR_EXIT  \l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0050|SYNTHETIC\lEDGE_INSN: B:16:0x0050\-\>B:17:? ?: BREAK  \lEDGE_INSN: B:12:0x001d\-\>B:16:0x0050 ?: BREAK  \lSplitter:B:16:0x0050\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|DONT_GENERATE\lEDGE_INSN: B:16:0x0050\-\>B:17:? ?: BREAK  \lSplitter:B:16:0x0050\l|monitor\-exit(\l\/\/ error: 0x0050: MONITOR_EXIT  \l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0051}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0070|throw new java.lang.IllegalStateException(getClass().getName() + \".sizeOf() is reporting inconsistent results!\")\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0071|REMOVE\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0072|REMOVE\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0073|REMOVE\l|throw r5\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0052|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:24:0x0052\-\>B:19:0x0052 ?: BREAK  \l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0052|SYNTHETIC\lEDGE_INSN: B:25:0x0052\-\>B:19:0x0052 ?: BREAK  \l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x001d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v4.util.LruCache.trimToSize((r4v0 'this' android.support.v4.util.LruCache A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCode restructure failed: missing block: B:20:0x0070, code lost:\l    throw new java.lang.IllegalStateException(getClass().getName() + \".sizeOf() is reporting inconsistent results!\");\l\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_24;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_25;
Node_19 -> Node_20;
Node_9 -> Node_10;
Node_9 -> Node_16[style=dashed];
Node_11 -> Node_13[style=dashed];
Node_11 -> Node_26;
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_15 -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_24 -> Node_19;
Node_25 -> Node_19;
Node_26 -> Node_12;
}

