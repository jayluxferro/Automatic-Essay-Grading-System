digraph "CFG forandroid.support.v4.util.LruCache.\<init\>(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:4:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IPUT  (r4 I:int), (r3 I:android.support.v4.util.LruCache) android.support.v4.util.LruCache.maxSize int \l0x0007: NEW_INSTANCE  (r4 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x0009: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1061158912(0x3f400000, float:0.75) ?[int, float, short, byte, char])\l \l0x000c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: INVOKE  \l  (r4 I:java.util.LinkedHashMap)\l  (r0 I:int)\l  (r1 I:float)\l  (r2 I:boolean)\l java.util.LinkedHashMap.\<init\>(int, float, boolean):void type: DIRECT \l0x0010: IPUT  \l  (r4 I:java.util.LinkedHashMap\<K, V\>)\l  (r3 I:android.support.v4.util.LruCache)\l android.support.v4.util.LruCache.map java.util.LinkedHashMap \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0015: CONST_STR  (r0 I:java.lang.String) =  \"maxSize \<= 0\" \l0x0017: INVOKE  \l  (r4 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.v4.util.LruCache.\<init\>((r3 'this' I:android.support.v4.util.LruCache A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

