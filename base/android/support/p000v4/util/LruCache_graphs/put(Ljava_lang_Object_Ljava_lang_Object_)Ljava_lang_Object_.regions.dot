digraph "CFG forandroid.support.v4.util.LruCache.put(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1838633095 {
label = "R(1:(2:(1:17)|(4:4|(1:9)|10|11))) | DECL_VAR: V null\l";
node [shape=record,color=blue];
subgraph cluster_Region_1835795685 {
label = "R(2:(1:17)|(4:4|(1:9)|10|11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_265925158 {
label = "IF [B:0:0x0000, B:1:0x0002] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r4 == null) goto L_0x0035\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|ADDED_TO_REGION\l|if (r5 == null) goto L_0x0035\l}"];
subgraph cluster_Region_204140266 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x003c|throw new java.lang.NullPointerException(\"key == null \|\| value == null\")\l}"];
}
}
subgraph cluster_Region_1242817729 {
label = "R(4:4|(1:9)|10|11)";
node [shape=record,color=blue];
subgraph cluster_SynchronizedRegion_1533973632 {
label = "Synchronized:R(2:2|(2:4|(1:6)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
subgraph cluster_Region_594955959 {
label = "R(2:4|(1:6))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ ?|r3.putCount++\lr3.size += safeSizeOf(r4, r5)\ljava.lang.Object r0 = r3.map.put(r4, r5)\l}"];
subgraph cluster_IfRegion_555915492 {
label = "IF [B:5:0x001a] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001a|if (r0 != null) goto L_0x001c\l}"];
subgraph cluster_Region_1174206829 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001c|r3.size \-= safeSizeOf(r4, r0)\l}"];
}
}
}
}
subgraph cluster_IfRegion_1850826478 {
label = "IF [B:8:0x0026] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0026|if (r0 != null) goto L_0x0028\l}"];
subgraph cluster_Region_2143528549 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0028|entryRemoved(false, r4, r0, r5)\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x002c|trimToSize(r3.maxSize)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|RETURN\l|return r0\l}"];
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0005|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0025|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x0025: MONITOR_EXIT  \l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0032|LOOP_START\lREMOVE\lLOOP:0: B:12:0x0032\-\>B:18:0x0032\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0033|SYNTHETIC\lREMOVE\lSplitter:B:13:0x0033\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|REMOVE\lSplitter:B:13:0x0033\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0034|REMOVE\l|throw r4\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0035}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0032|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:12:0x0032\-\>B:18:0x0032\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0034|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0032|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
MethodNode[shape=record,label="{public final V android.support.v4.util.LruCache.put((r3v0 'this' android.support.v4.util.LruCache A[IMMUTABLE_TYPE, THIS]), (r4v0 K A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 V A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TK;TV;)TV;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_16;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_3 -> Node_4;
Node_3 -> Node_12;
Node_7 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_18;
Node_14 -> Node_19;
Node_14 -> Node_20;
Node_16 -> Node_17;
Node_18 -> Node_12;
Node_19 -> Node_15;
Node_20 -> Node_18;
}

