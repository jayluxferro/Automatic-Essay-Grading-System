digraph "CFG forandroid.support.v4.util.MapCollections.EntrySet.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r6.this$0.colGetSize() \- 1\lr3 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|LOOP_START\lPHI: r0 r3 \l  PHI: (r0v3 int) = (r0v2 int), (r0v4 int) binds: [B:0:0x0000, B:9:0x0028] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:0:0x0000, B:9:0x0028] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:9:0x0028\l|if (r0 \< 0) goto L_0x002d\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|java.lang.Object r4 = r6.this$0.colGetEntry(r0, 0)\ljava.lang.Object r5 = r6.this$0.colGetEntry(r0, 1)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|if (r4 != null) goto L_0x001c\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|r4 = 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|int r4 = r4.hashCode()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|PHI: r4 \l  PHI: (r4v2 int) = (r4v4 int), (r4v5 int) binds: [B:5:0x001c, B:4:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 != null) goto L_0x0024\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|r5 = 0\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|int r5 = r5.hashCode()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|LOOP_END\lPHI: r5 \l  PHI: (r5v2 int) = (r5v3 int), (r5v4 int) binds: [B:12:0x0028, B:13:0x0028] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:9:0x0028\l|int r3 = r3 + (r4 ^ r5)\lint r0 = r0 + \-1\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|RETURN\l|return r3\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int android.support.v4.util.MapCollections.EntrySet.hashCode((r6v0 'this' android.support.v4.util.MapCollections$EntrySet A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_13;
Node_8 -> Node_12;
Node_9 -> Node_1;
Node_11 -> Node_10;
Node_12 -> Node_9;
Node_13 -> Node_9;
}

