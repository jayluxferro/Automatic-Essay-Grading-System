digraph "CFG forandroid.support.v4.util.SimpleArrayMap.ensureCapacity(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r5 I:android.support.v4.util.SimpleArrayMap) android.support.v4.util.SimpleArrayMap.mSize int \l0x0002: IGET  (r1 I:int[]) = (r5 I:android.support.v4.util.SimpleArrayMap) android.support.v4.util.SimpleArrayMap.mHashes int[] \l0x0004: ARRAY_LENGTH  (r1 I:int) = (r1 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r1 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:6:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IGET  (r1 I:int[]) = (r5 I:android.support.v4.util.SimpleArrayMap) android.support.v4.util.SimpleArrayMap.mHashes int[] \l0x0009: IGET  (r2 I:java.lang.Object[]) = (r5 I:android.support.v4.util.SimpleArrayMap) android.support.v4.util.SimpleArrayMap.mArray java.lang.Object[] \l0x000b: INVOKE  (r5 I:android.support.v4.util.SimpleArrayMap), (r6 I:int) android.support.v4.util.SimpleArrayMap.allocArrays(int):void type: DIRECT \l0x000e: IGET  (r6 I:int) = (r5 I:android.support.v4.util.SimpleArrayMap) android.support.v4.util.SimpleArrayMap.mSize int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:5:0x001f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IGET  (r6 I:int[]) = (r5 I:android.support.v4.util.SimpleArrayMap) android.support.v4.util.SimpleArrayMap.mHashes int[] \l0x0014: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0015: INVOKE  \l  (r1 I:java.lang.Object)\l  (r3 I:int)\l  (r6 I:java.lang.Object)\l  (r3 I:int)\l  (r0 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0018: IGET  (r6 I:java.lang.Object[]) = (r5 I:android.support.v4.util.SimpleArrayMap) android.support.v4.util.SimpleArrayMap.mArray java.lang.Object[] \l0x001a: ARITH  (r4 I:int) = (r0 I:int) \<\< (1 int) \l0x001c: INVOKE  \l  (r2 I:java.lang.Object)\l  (r3 I:int)\l  (r6 I:java.lang.Object)\l  (r3 I:int)\l  (r4 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: INVOKE  (r1 I:int[]), (r2 I:java.lang.Object[]), (r0 I:int) android.support.v4.util.SimpleArrayMap.freeArrays(int[], java.lang.Object[], int):void type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: IGET  (r6 I:int) = (r5 I:android.support.v4.util.SimpleArrayMap) android.support.v4.util.SimpleArrayMap.mSize int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0027 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: NEW_INSTANCE  (r6 I:java.util.ConcurrentModificationException) =  java.util.ConcurrentModificationException \l0x0029: INVOKE  (r6 I:java.util.ConcurrentModificationException) java.util.ConcurrentModificationException.\<init\>():void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.v4.util.SimpleArrayMap.ensureCapacity((r5 'this' I:android.support.v4.util.SimpleArrayMap A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
}

