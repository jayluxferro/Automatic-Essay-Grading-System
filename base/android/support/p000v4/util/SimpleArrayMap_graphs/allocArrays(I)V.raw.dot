digraph "CFG forandroid.support.v4.util.SimpleArrayMap.allocArrays(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0003: CONST  (r3 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0032 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: CONST_CLASS  (r3 I:java.lang.Class\<android.support.v4.util.ArrayMap\>) =  android.support.v4.util.ArrayMap.class \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: MONITOR_ENTER  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|SYNTHETIC\lSplitter:B:4:0x000a\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x000a\l|0x000a: SGET  (r4 I:java.lang.Object[]) =  android.support.v4.util.SimpleArrayMap.mTwiceBaseCache java.lang.Object[] A[Catch:\{ all \-\> 0x002f \}, TRY_ENTER]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002d A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: SGET  (r6 I:java.lang.Object[]) =  android.support.v4.util.SimpleArrayMap.mTwiceBaseCache java.lang.Object[] A[Catch:\{ all \-\> 0x002f \}]\l0x0010: IPUT  \l  (r6 I:java.lang.Object[])\l  (r5 I:android.support.v4.util.SimpleArrayMap)\l android.support.v4.util.SimpleArrayMap.mArray java.lang.Object[] A[Catch:\{ all \-\> 0x002f \}]\l0x0012: AGET  (r4 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x002f \}]\l0x0014: CHECK_CAST  (r4 I:java.lang.Object[]) = (java.lang.Object[]) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}]\l0x0016: CHECK_CAST  (r4 I:java.lang.Object[]) = (java.lang.Object[]) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}]\l0x0018: SPUT  (r4 I:java.lang.Object[]) android.support.v4.util.SimpleArrayMap.mTwiceBaseCache java.lang.Object[] A[Catch:\{ all \-\> 0x002f \}]\l0x001a: AGET  (r4 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x002f \}]\l0x001c: CHECK_CAST  (r4 I:int[]) = (int[]) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}]\l0x001e: CHECK_CAST  (r4 I:int[]) = (int[]) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}]\l0x0020: IPUT  (r4 I:int[]), (r5 I:android.support.v4.util.SimpleArrayMap) android.support.v4.util.SimpleArrayMap.mHashes int[] A[Catch:\{ all \-\> 0x002f \}]\l0x0022: APUT  \l  (r6 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x002f \}]\l0x0024: APUT  \l  (r6 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x002f \}]\l0x0026: SGET  (r6 I:int) =  android.support.v4.util.SimpleArrayMap.mTwiceBaseCacheSize int A[Catch:\{ all \-\> 0x002f \}]\l0x0028: ARITH  (r6 I:int) = (r6 I:int) \- (r2 I:int) A[Catch:\{ all \-\> 0x002f \}]\l0x0029: SPUT  (r6 I:int) android.support.v4.util.SimpleArrayMap.mTwiceBaseCacheSize int A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|0x002b: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: RETURN   A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: GOTO  \-\> 0x0060 A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|ExcHandler: all null\lSplitter:B:4:0x000a\l|0x002f: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|0x0030: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|0x0031: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0032|0x0032: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0033|0x0033: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0060 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0035|0x0035: CONST_CLASS  (r3 I:java.lang.Class\<android.support.v4.util.ArrayMap\>) =  android.support.v4.util.ArrayMap.class \l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|0x0037: MONITOR_ENTER  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0038|SYNTHETIC\lSplitter:B:19:0x0038\l}"];
Node_20 [shape=record,label="{20\:\ ?|Splitter:B:19:0x0038\l|0x0038: SGET  (r4 I:java.lang.Object[]) =  android.support.v4.util.SimpleArrayMap.mBaseCache java.lang.Object[] A[Catch:\{ all \-\> 0x005d \}, TRY_ENTER]\l}"];
Node_21 [shape=record,label="{21\:\ 0x003a|0x003a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x005b A[Catch:\{ all \-\> 0x005d \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x003c|0x003c: SGET  (r6 I:java.lang.Object[]) =  android.support.v4.util.SimpleArrayMap.mBaseCache java.lang.Object[] A[Catch:\{ all \-\> 0x005d \}]\l0x003e: IPUT  \l  (r6 I:java.lang.Object[])\l  (r5 I:android.support.v4.util.SimpleArrayMap)\l android.support.v4.util.SimpleArrayMap.mArray java.lang.Object[] A[Catch:\{ all \-\> 0x005d \}]\l0x0040: AGET  (r4 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x005d \}]\l0x0042: CHECK_CAST  (r4 I:java.lang.Object[]) = (java.lang.Object[]) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005d \}]\l0x0044: CHECK_CAST  (r4 I:java.lang.Object[]) = (java.lang.Object[]) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005d \}]\l0x0046: SPUT  (r4 I:java.lang.Object[]) android.support.v4.util.SimpleArrayMap.mBaseCache java.lang.Object[] A[Catch:\{ all \-\> 0x005d \}]\l0x0048: AGET  (r4 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x005d \}]\l0x004a: CHECK_CAST  (r4 I:int[]) = (int[]) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005d \}]\l0x004c: CHECK_CAST  (r4 I:int[]) = (int[]) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005d \}]\l0x004e: IPUT  (r4 I:int[]), (r5 I:android.support.v4.util.SimpleArrayMap) android.support.v4.util.SimpleArrayMap.mHashes int[] A[Catch:\{ all \-\> 0x005d \}]\l0x0050: APUT  \l  (r6 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x005d \}]\l0x0052: APUT  \l  (r6 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x005d \}]\l0x0054: SGET  (r6 I:int) =  android.support.v4.util.SimpleArrayMap.mBaseCacheSize int A[Catch:\{ all \-\> 0x005d \}]\l0x0056: ARITH  (r6 I:int) = (r6 I:int) \- (r2 I:int) A[Catch:\{ all \-\> 0x005d \}]\l0x0057: SPUT  (r6 I:int) android.support.v4.util.SimpleArrayMap.mBaseCacheSize int A[Catch:\{ all \-\> 0x005d \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0059|0x0059: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005d \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x005a|0x005a: RETURN   A[Catch:\{ all \-\> 0x005d \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x005b|0x005b: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005d \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x005c|0x005c: GOTO  \-\> 0x0060 A[Catch:\{ all \-\> 0x005d \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x005d|ExcHandler: all null\lSplitter:B:19:0x0038\l|0x005d: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x005d \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x005e|0x005e: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005d \}, TRY_LEAVE]\l}"];
Node_29 [shape=record,label="{29\:\ 0x005f|0x005f: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0060|0x0060: NEW_ARRAY  (r0 I:int[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0062: IPUT  (r0 I:int[]), (r5 I:android.support.v4.util.SimpleArrayMap) android.support.v4.util.SimpleArrayMap.mHashes int[] \l0x0064: ARITH  (r6 I:int) = (r6 I:int) \<\< (r2 I:int) \l0x0065: NEW_ARRAY  (r6 I:java.lang.Object[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0067: IPUT  \l  (r6 I:java.lang.Object[])\l  (r5 I:android.support.v4.util.SimpleArrayMap)\l android.support.v4.util.SimpleArrayMap.mArray java.lang.Object[] \l}"];
Node_31 [shape=record,label="{31\:\ 0x0069|0x0069: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v4.util.SimpleArrayMap.allocArrays((r5 'this' I:android.support.v4.util.SimpleArrayMap A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_30;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_30;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_30;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_30 -> Node_31;
}

