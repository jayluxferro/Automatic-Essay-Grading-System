digraph "CFG forandroid.support.v4.util.SimpleArrayMap.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int[]) = (r9 I:android.support.v4.util.SimpleArrayMap) android.support.v4.util.SimpleArrayMap.mHashes int[] \l0x0002: IGET  (r1 I:java.lang.Object[]) = (r9 I:android.support.v4.util.SimpleArrayMap) android.support.v4.util.SimpleArrayMap.mArray java.lang.Object[] \l0x0004: IGET  (r2 I:int) = (r9 I:android.support.v4.util.SimpleArrayMap) android.support.v4.util.SimpleArrayMap.mSize int \l0x0006: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000a: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r3 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:7:0x0020 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: AGET  (r7 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r5 I:?[int, short, byte, char]) \l0x000f: AGET  (r8 I:?[int, float]) = (r0 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: INVOKE  (r7 I:int) = (r7 I:java.lang.Object) java.lang.Object.hashCode():int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) ^ (r8 I:?[int, boolean, short, byte, char]) \l0x001a: ARITH  (r6 I:int) = (r6 I:int) + (r7 I:int) \l0x001b: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l0x001d: ARITH  (r5 I:int) = (r5 I:int) + (2 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: RETURN  (r6 I:int) \l}"];
MethodNode[shape=record,label="{public int android.support.v4.util.SimpleArrayMap.hashCode((r9 'this' I:android.support.v4.util.SimpleArrayMap A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

