digraph "CFG forandroid.support.v4.util.ArraySet.append(Ljava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r4 I:android.support.v4.util.ArraySet) android.support.v4.util.ArraySet.mSize int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r1 I:int) = (r5 I:java.lang.Object) java.lang.Object.hashCode():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IGET  (r2 I:int[]) = (r4 I:android.support.v4.util.ArraySet) android.support.v4.util.ArraySet.mHashes int[] \l0x000c: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r0 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:13:0x002a \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:11:0x001d \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IGET  (r2 I:int[]) = (r4 I:android.support.v4.util.ArraySet) android.support.v4.util.ArraySet.mHashes int[] \l0x0013: ARITH  (r3 I:int) = (r0 I:int) + (\-1 int) \l0x0015: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: IF  (r2 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:11:0x001d \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: INVOKE  \l  (r4 I:android.support.v4.util.ArraySet)\l  (r5 I:java.lang.Object)\l android.support.v4.util.ArraySet.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: RETURN   \l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|0x001d: ARITH  (r2 I:int) = (r0 I:int) + (1 int) \l0x001f: IPUT  (r2 I:int), (r4 I:android.support.v4.util.ArraySet) android.support.v4.util.ArraySet.mSize int \l0x0021: IGET  (r2 I:int[]) = (r4 I:android.support.v4.util.ArraySet) android.support.v4.util.ArraySet.mHashes int[] \l0x0023: APUT  \l  (r2 I:?[int, float][])\l  (r0 I:?[int, short, byte, char])\l  (r1 I:?[int, float])\l \l0x0025: IGET  (r1 I:java.lang.Object[]) = (r4 I:android.support.v4.util.ArraySet) android.support.v4.util.ArraySet.mArray java.lang.Object[] \l0x0027: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: RETURN   \l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|0x002a: NEW_INSTANCE  (r5 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x002c: CONST_STR  (r0 I:java.lang.String) =  \"Array is full\" \l0x002e: INVOKE  \l  (r5 I:java.lang.IllegalStateException)\l  (r0 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|0x0031: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.v4.util.ArraySet.append((r4 'this' I:android.support.v4.util.ArraySet A[IMMUTABLE_TYPE, THIS]), (r5 I:E A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.RestrictTo, \{value=[android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP android.support.annotation.RestrictTo$Scope]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TE;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
}

