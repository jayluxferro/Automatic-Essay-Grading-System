digraph "CFG forandroid.support.v4.util.ArraySet.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INSTANCE_OF  (r1 I:boolean) = (r5 I:?[OBJECT, ARRAY]) java.util.Set \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x002c \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: CHECK_CAST  (r5 I:java.util.Set) = (java.util.Set) (r5 I:?[OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:int) = (r4 I:android.support.v4.util.ArraySet) android.support.v4.util.ArraySet.size():int type: VIRTUAL \l0x000f: INVOKE  (r3 I:int) = (r5 I:java.util.Set) java.util.Set.size():int type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0016 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: RETURN  (r2 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|SYNTHETIC\lSplitter:B:9:0x0017\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x0017\l|0x0017: IGET  (r3 I:int) = (r4 I:android.support.v4.util.ArraySet) android.support.v4.util.ArraySet.mSize int A[Catch:\{ NullPointerException \-\> 0x002b, ClassCastException \-\> 0x002a \}, TRY_ENTER]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|0x0019: IF  (r1 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:16:0x0029 A[Catch:\{ NullPointerException \-\> 0x002b, ClassCastException \-\> 0x002a \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|0x001b: INVOKE  (r3 I:java.lang.Object) = (r4 I:android.support.v4.util.ArraySet), (r1 I:int) android.support.v4.util.ArraySet.valueAt(int):java.lang.Object type: VIRTUAL A[Catch:\{ NullPointerException \-\> 0x002b, ClassCastException \-\> 0x002a \}]\l0x001f: INVOKE  (r3 I:boolean) = (r5 I:java.util.Set), (r3 I:java.lang.Object) java.util.Set.contains(java.lang.Object):boolean type: INTERFACE A[Catch:\{ NullPointerException \-\> 0x002b, ClassCastException \-\> 0x002a \}]\l0x0022: NOP   A[TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|0x0023: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0026 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|0x0025: RETURN  (r2 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0026|0x0026: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0029|0x0029: RETURN  (r0 I:boolean) \l}"];
Node_17 [shape=record,label="{17\:\ 0x002a|0x002a: RETURN  (r2 I:boolean) \l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lExcHandler: ClassCastException null\lSplitter:B:9:0x0017\l}"];
Node_19 [shape=record,label="{19\:\ 0x002b|0x002b: RETURN  (r2 I:boolean) \l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lExcHandler: NullPointerException null\lSplitter:B:9:0x0017\l}"];
Node_21 [shape=record,label="{21\:\ 0x002c|0x002c: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.v4.util.ArraySet.equals((r4 'this' I:android.support.v4.util.ArraySet A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_21;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_20;
Node_9 -> Node_18;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_15 -> Node_9;
Node_18 -> Node_17;
Node_20 -> Node_19;
}

