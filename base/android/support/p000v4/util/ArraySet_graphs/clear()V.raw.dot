digraph "CFG forandroid.support.v4.util.ArraySet.clear()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r3 I:android.support.v4.util.ArraySet) android.support.v4.util.ArraySet.mSize int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:int[]) = (r3 I:android.support.v4.util.ArraySet) android.support.v4.util.ArraySet.mHashes int[] \l0x0006: IGET  (r1 I:java.lang.Object[]) = (r3 I:android.support.v4.util.ArraySet) android.support.v4.util.ArraySet.mArray java.lang.Object[] \l0x0008: IGET  (r2 I:int) = (r3 I:android.support.v4.util.ArraySet) android.support.v4.util.ArraySet.mSize int \l0x000a: INVOKE  (r0 I:int[]), (r1 I:java.lang.Object[]), (r2 I:int) android.support.v4.util.ArraySet.freeArrays(int[], java.lang.Object[], int):void type: STATIC \l0x000d: SGET  (r0 I:int[]) =  android.support.v4.util.ArraySet.INT int[] \l0x000f: IPUT  (r0 I:int[]), (r3 I:android.support.v4.util.ArraySet) android.support.v4.util.ArraySet.mHashes int[] \l0x0011: SGET  (r0 I:java.lang.Object[]) =  android.support.v4.util.ArraySet.OBJECT java.lang.Object[] \l0x0013: IPUT  \l  (r0 I:java.lang.Object[])\l  (r3 I:android.support.v4.util.ArraySet)\l android.support.v4.util.ArraySet.mArray java.lang.Object[] \l0x0015: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0016: IPUT  (r0 I:int), (r3 I:android.support.v4.util.ArraySet) android.support.v4.util.ArraySet.mSize int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.util.ArraySet.clear((r3 'this' I:android.support.v4.util.ArraySet A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

