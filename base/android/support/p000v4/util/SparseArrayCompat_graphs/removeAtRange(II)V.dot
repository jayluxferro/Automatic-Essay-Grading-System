digraph "CFG forandroid.support.v4.util.SparseArrayCompat.removeAtRange(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r3 = java.lang.Math.min(r1.mSize, r3 + r2)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:2:0x0009] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:2:0x0009\l|if (r2 \>= r3) goto L_0x000f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|LOOP_END\lLOOP:0: B:1:0x0007\-\>B:2:0x0009\l|removeAt(r2)\lint r2 = r2 + 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v4.util.SparseArrayCompat.removeAtRange((r1v0 'this' android.support.v4.util.SparseArrayCompat A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_1;
Node_4 -> Node_3;
}

