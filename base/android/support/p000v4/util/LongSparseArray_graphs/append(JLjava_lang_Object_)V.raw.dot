digraph "CFG forandroid.support.v4.util.LongSparseArray.append(JLjava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r6 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.mSize int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:long[]) = (r6 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.mKeys long[] \l0x0006: IGET  (r1 I:int) = (r6 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.mSize int \l0x0008: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x000a: AGET  (r1 I:?[long, double]) = (r0 I:?[long, double][]), (r1 I:?[int, short, byte, char]) \l0x000c: CMP_L  (r0 I:int) = (r7 I:long), (r1 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:6:0x0014 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: INVOKE  \l  (r6 I:android.support.v4.util.LongSparseArray)\l  (r7 I:long)\l  (r9 I:java.lang.Object)\l android.support.v4.util.LongSparseArray.put(long, java.lang.Object):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IGET  (r0 I:boolean) = (r6 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.mGarbage boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0022 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IGET  (r0 I:int) = (r6 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.mSize int \l0x001a: IGET  (r1 I:long[]) = (r6 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.mKeys long[] \l0x001c: ARRAY_LENGTH  (r1 I:int) = (r1 I:?[]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:11:0x0022 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: INVOKE  (r6 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.gc():void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: IGET  (r0 I:int) = (r6 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.mSize int \l0x0024: IGET  (r1 I:long[]) = (r6 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.mKeys long[] \l0x0026: ARRAY_LENGTH  (r1 I:int) = (r1 I:?[]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|0x0027: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:14:0x0048 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|0x0029: ARITH  (r1 I:int) = (r0 I:int) + (1 int) \l0x002b: INVOKE  (r1 I:int) = (r1 I:int) android.support.v4.util.ContainerHelpers.idealLongArraySize(int):int type: STATIC \l0x002f: NEW_ARRAY  (r2 I:long[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: long[] \l0x0031: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0033: IGET  (r3 I:long[]) = (r6 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.mKeys long[] \l0x0035: IGET  (r4 I:long[]) = (r6 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.mKeys long[] \l0x0037: ARRAY_LENGTH  (r4 I:int) = (r4 I:?[]) \l0x0038: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0039: INVOKE  \l  (r3 I:java.lang.Object)\l  (r5 I:int)\l  (r2 I:java.lang.Object)\l  (r5 I:int)\l  (r4 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x003c: IGET  (r3 I:java.lang.Object[]) = (r6 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.mValues java.lang.Object[] \l0x003e: IGET  (r4 I:java.lang.Object[]) = (r6 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.mValues java.lang.Object[] \l0x0040: ARRAY_LENGTH  (r4 I:int) = (r4 I:?[]) \l0x0041: INVOKE  \l  (r3 I:java.lang.Object)\l  (r5 I:int)\l  (r1 I:java.lang.Object)\l  (r5 I:int)\l  (r4 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0044: IPUT  \l  (r2 I:long[])\l  (r6 I:android.support.v4.util.LongSparseArray)\l android.support.v4.util.LongSparseArray.mKeys long[] \l0x0046: IPUT  \l  (r1 I:java.lang.Object[])\l  (r6 I:android.support.v4.util.LongSparseArray)\l android.support.v4.util.LongSparseArray.mValues java.lang.Object[] \l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|0x0048: IGET  (r1 I:long[]) = (r6 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.mKeys long[] \l0x004a: APUT  \l  (r1 I:?[long, double][])\l  (r0 I:?[int, short, byte, char])\l  (r7 I:?[long, double])\l \l0x004c: IGET  (r7 I:java.lang.Object[]) = (r6 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.mValues java.lang.Object[] \l0x004e: APUT  \l  (r7 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r9 I:?[OBJECT, ARRAY])\l \l0x0050: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0052: IPUT  (r0 I:int), (r6 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.mSize int \l}"];
Node_15 [shape=record,label="{15\:\ 0x0054|0x0054: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.util.LongSparseArray.append((r6 'this' I:android.support.v4.util.LongSparseArray A[IMMUTABLE_TYPE, THIS]), (r7 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:E A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(JTE;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

