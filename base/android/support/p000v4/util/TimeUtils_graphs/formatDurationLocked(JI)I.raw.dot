digraph "CFG forandroid.support.v4.util.TimeUtils.formatDurationLocked(JI)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[long, double]) = (r17 I:?[long, double]) \l0x0002: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: SGET  (r3 I:char[]) =  android.support.v4.util.TimeUtils.sFormatStr char[] \l0x0006: ARRAY_LENGTH  (r3 I:int) = (r3 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r3 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: NEW_ARRAY  (r3 I:char[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: char[] \l0x000b: SPUT  (r3 I:char[]) android.support.v4.util.TimeUtils.sFormatStr char[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: SGET  (r3 I:char[]) =  android.support.v4.util.TimeUtils.sFormatStr char[] \l0x000f: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x0011: CONST  (r6 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0013: CONST  (r10 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0014: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0015: CMP_L  (r4 I:int) = (r0 I:long), (r4 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: ARITH  (r0 I:int) = (r2 I:int) + (\-1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:8:0x0020 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: APUT  \l  (r3 I:char[] A[IMMUTABLE_TYPE])\l  (r11 I:?[int, short, byte, char])\l  (r6 I:char A[IMMUTABLE_TYPE])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: CONST  (r0 I:?[int, float, short, byte, char]) = (48 ?[int, float, short, byte, char]) \l0x0022: APUT  \l  (r3 I:char[] A[IMMUTABLE_TYPE])\l  (r11 I:?[int, short, byte, char])\l  (r0 I:char A[IMMUTABLE_TYPE])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: RETURN  (r10 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x002a \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: CONST  (r4 I:?[int, float, short, byte, char]) = (43 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: CONST  (r4 I:?[int, float, short, byte, char]) = (45 ?[int, float, short, byte, char]) \l0x002c: NEG  (r0 I:long) = (r0 I:long) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: CONST  (r7 I:?[long, double]) = (1000(0x3e8, double:4.94E\-321) ?[long, double]) \l0x002f: ARITH  (r12 I:long) = (r0 I:long) % (r7 I:long) \l0x0031: CAST  (r12 I:int) = (int) (r12 I:long) \l0x0032: ARITH  (r0 I:long) = (r0 I:long) \/ (r7 I:long) \l0x0033: CAST  (r0 I:double) = (double) (r0 I:long) \l0x0034: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.floor(double):double type: STATIC \l0x0038: CAST  (r0 I:int) = (int) (r0 I:double) \l0x0039: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (86400(0x15180, float:1.21072E\-40) ?[int, float, short, byte, char])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x003c|0x003c: IF  (r0 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:16:0x0044 \l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|0x003e: ARITH  (r5 I:int) = (r0 I:int) \/ (r1 I:int) \l0x0040: ARITH  (r1 I:int) = (r1 I:int) * (r5 I:int) \l0x0042: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0044|0x0044: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0045|0x0045: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (3600(0xe10, float:5.045E\-42) ?[int, float, short, byte, char])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0047|0x0047: IF  (r0 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:20:0x004f \l}"];
Node_19 [shape=record,label="{19\:\ 0x0049|0x0049: ARITH  (r1 I:int) = (r0 I:int) \/ (3600 int) \l0x004b: ARITH  (r7 I:int) = (r1 I:int) * (3600 int) \l0x004d: ARITH  (r0 I:int) = (r0 I:int) \- (r7 I:int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x004f|0x004f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x0050|0x0050: CONST  (r7 I:?[int, float, short, byte, char]) = (60 ?[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0052|0x0052: IF  (r0 I:?[int, byte, short, char]) \<= (r7 I:?[int, byte, short, char])  \-\> B:24:0x005c \l}"];
Node_23 [shape=record,label="{23\:\ 0x0054|0x0054: ARITH  (r7 I:int) = (r0 I:int) \/ (60 int) \l0x0056: ARITH  (r8 I:int) = (r7 I:int) * (60 int) \l0x0058: ARITH  (r0 I:int) = (r0 I:int) \- (r8 I:int) \l0x0059: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005a: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x005c|0x005c: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x005e|0x005e: CONST  (r14 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x005f: CONST  (r15 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0060|0x0060: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0099 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0062|0x0062: INVOKE  (r7 I:int) = (r5 I:int), (r10 I:int), (r11 I:boolean), (r11 I:int) android.support.v4.util.TimeUtils.accumField(int, int, boolean, int):int type: STATIC \l}"];
Node_28 [shape=record,label="{28\:\ 0x0066|0x0066: IF  (r7 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:30:0x006a \l}"];
Node_29 [shape=record,label="{29\:\ 0x0068|0x0068: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x006a|0x006a: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_31 [shape=record,label="{31\:\ 0x006b|0x006b: INVOKE  (r8 I:int) = (r1 I:int), (r10 I:int), (r8 I:boolean), (r15 I:int) android.support.v4.util.TimeUtils.accumField(int, int, boolean, int):int type: STATIC \l0x006f: ARITH  (r7 I:int) = (r7 I:int) + (r8 I:int) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0070|0x0070: IF  (r7 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:34:0x0074 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0072|0x0072: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0074|0x0074: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_35 [shape=record,label="{35\:\ 0x0075|0x0075: INVOKE  (r8 I:int) = (r0 I:int), (r10 I:int), (r8 I:boolean), (r15 I:int) android.support.v4.util.TimeUtils.accumField(int, int, boolean, int):int type: STATIC \l0x0079: ARITH  (r7 I:int) = (r7 I:int) + (r8 I:int) \l}"];
Node_36 [shape=record,label="{36\:\ 0x007a|0x007a: IF  (r7 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:38:0x007e \l}"];
Node_37 [shape=record,label="{37\:\ 0x007c|0x007c: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x007e|0x007e: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_39 [shape=record,label="{39\:\ 0x007f|0x007f: INVOKE  (r8 I:int) = (r13 I:int), (r10 I:int), (r8 I:boolean), (r15 I:int) android.support.v4.util.TimeUtils.accumField(int, int, boolean, int):int type: STATIC \l0x0083: ARITH  (r7 I:int) = (r7 I:int) + (r8 I:int) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0084|0x0084: IF  (r7 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:42:0x0088 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0086|0x0086: CONST  (r8 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0088|0x0088: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_43 [shape=record,label="{43\:\ 0x0089|0x0089: INVOKE  (r8 I:int) = (r12 I:int), (r15 I:int), (r10 I:boolean), (r8 I:int) android.support.v4.util.TimeUtils.accumField(int, int, boolean, int):int type: STATIC \l0x008d: ARITH  (r8 I:int) = (r8 I:int) + (r10 I:int) \l0x008e: ARITH  (r7 I:int) = (r7 I:int) + (r8 I:int) \l0x008f: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_44 [shape=record,label="{44\:\ 0x0090|0x0090: IF  (r7 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:47:0x009a \l}"];
Node_45 [shape=record,label="{45\:\ 0x0092|0x0092: APUT  \l  (r3 I:char[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l  (r6 I:char A[IMMUTABLE_TYPE])\l \l0x0094: ARITH  (r8 I:int) = (r8 I:int) + (1 int) \l0x0096: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0099|0x0099: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_47 [shape=record,label="{47\:\ 0x009a|0x009a: APUT  \l  (r3 I:char[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l  (r4 I:char A[IMMUTABLE_TYPE])\l \l0x009c: ARITH  (r9 I:int) = (r8 I:int) + (1 int) \l}"];
Node_48 [shape=record,label="{48\:\ 0x009e|0x009e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x00a2 \l}"];
Node_49 [shape=record,label="{49\:\ 0x00a0|0x00a0: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x00a2|0x00a2: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_51 [shape=record,label="{51\:\ 0x00a3|0x00a3: CONST  (r6 I:?[int, float, short, byte, char]) = (100 ?[int, float, short, byte, char]) \l0x00a5: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a6: CONST  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a8: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x00a9: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00aa: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ab: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ad: INVOKE  (r7 I:int) = \l  (r4 I:char[])\l  (r5 I:int)\l  (r6 I:char)\l  (r7 I:int)\l  (r8 I:boolean)\l  (r9 I:int)\l android.support.v4.util.TimeUtils.printField(char[], int, char, int, boolean, int):int type: STATIC \l0x00b1: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (104(0x68, float:1.46E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_52 [shape=record,label="{52\:\ 0x00b3|0x00b3: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00b7 \l}"];
Node_53 [shape=record,label="{53\:\ 0x00b5|0x00b5: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x00b7|0x00b7: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_55 [shape=record,label="{55\:\ 0x00b8|0x00b8: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x00bc \l}"];
Node_56 [shape=record,label="{56\:\ 0x00ba|0x00ba: CONST  (r9 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_57 [shape=record,label="{57\:\ 0x00bc|0x00bc: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_58 [shape=record,label="{58\:\ 0x00bd|0x00bd: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x00be: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00bf: INVOKE  (r7 I:int) = \l  (r4 I:char[])\l  (r5 I:int)\l  (r6 I:char)\l  (r7 I:int)\l  (r8 I:boolean)\l  (r9 I:int)\l android.support.v4.util.TimeUtils.printField(char[], int, char, int, boolean, int):int type: STATIC \l0x00c3: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (109(0x6d, float:1.53E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_59 [shape=record,label="{59\:\ 0x00c5|0x00c5: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x00c9 \l}"];
Node_60 [shape=record,label="{60\:\ 0x00c7|0x00c7: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_61 [shape=record,label="{61\:\ 0x00c9|0x00c9: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_62 [shape=record,label="{62\:\ 0x00ca|0x00ca: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x00ce \l}"];
Node_63 [shape=record,label="{63\:\ 0x00cc|0x00cc: CONST  (r9 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_64 [shape=record,label="{64\:\ 0x00ce|0x00ce: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_65 [shape=record,label="{65\:\ 0x00cf|0x00cf: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x00d0: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d1: INVOKE  (r7 I:int) = \l  (r4 I:char[])\l  (r5 I:int)\l  (r6 I:char)\l  (r7 I:int)\l  (r8 I:boolean)\l  (r9 I:int)\l android.support.v4.util.TimeUtils.printField(char[], int, char, int, boolean, int):int type: STATIC \l0x00d5: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (115(0x73, float:1.61E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_66 [shape=record,label="{66\:\ 0x00d7|0x00d7: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x00db \l}"];
Node_67 [shape=record,label="{67\:\ 0x00d9|0x00d9: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_68 [shape=record,label="{68\:\ 0x00db|0x00db: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_69 [shape=record,label="{69\:\ 0x00dc|0x00dc: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x00e0 \l}"];
Node_70 [shape=record,label="{70\:\ 0x00de|0x00de: CONST  (r9 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_71 [shape=record,label="{71\:\ 0x00e0|0x00e0: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_72 [shape=record,label="{72\:\ 0x00e1|0x00e1: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x00e2: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00e3: INVOKE  (r7 I:int) = \l  (r4 I:char[])\l  (r5 I:int)\l  (r6 I:char)\l  (r7 I:int)\l  (r8 I:boolean)\l  (r9 I:int)\l android.support.v4.util.TimeUtils.printField(char[], int, char, int, boolean, int):int type: STATIC \l0x00e7: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (109(0x6d, float:1.53E\-43) ?[int, float, short, byte, char])\l \l0x00e9: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_73 [shape=record,label="{73\:\ 0x00ea|0x00ea: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:76:0x00f0 \l}"];
Node_74 [shape=record,label="{74\:\ 0x00ec|0x00ec: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:76:0x00f0 \l}"];
Node_75 [shape=record,label="{75\:\ 0x00ee|0x00ee: CONST  (r9 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_76 [shape=record,label="{76\:\ 0x00f0|0x00f0: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_77 [shape=record,label="{77\:\ 0x00f1|0x00f1: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x00f2: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00f3: INVOKE  (r0 I:int) = \l  (r4 I:char[])\l  (r5 I:int)\l  (r6 I:char)\l  (r7 I:int)\l  (r8 I:boolean)\l  (r9 I:int)\l android.support.v4.util.TimeUtils.printField(char[], int, char, int, boolean, int):int type: STATIC \l0x00f7: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (115(0x73, float:1.61E\-43) ?[int, float, short, byte, char])\l \l0x00f9: APUT  \l  (r3 I:char[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l  (r1 I:char A[IMMUTABLE_TYPE])\l \l0x00fb: ARITH  (r0 I:int) = (r0 I:int) + (r10 I:int) \l}"];
Node_78 [shape=record,label="{78\:\ 0x00fc|0x00fc: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{private static int android.support.v4.util.TimeUtils.formatDurationLocked((r17 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_6;
Node_8 -> Node_9;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_46;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_47;
Node_45 -> Node_44;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_51;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_58;
Node_57 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_65;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_68;
Node_67 -> Node_69;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_71;
Node_70 -> Node_72;
Node_71 -> Node_72;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_76;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_76;
Node_75 -> Node_77;
Node_76 -> Node_77;
Node_77 -> Node_78;
}

