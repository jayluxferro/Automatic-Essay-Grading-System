digraph "CFG forandroid.support.v4.util.TimeUtils.formatDuration(JLjava\/io\/PrintWriter;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:java.lang.Object) =  android.support.v4.util.TimeUtils.sFormatSync java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: INVOKE  (r2 I:int) = (r2 I:long), (r5 I:int) android.support.v4.util.TimeUtils.formatDurationLocked(long, int):int type: STATIC A[Catch:\{ all \-\> 0x0014 \}, TRY_ENTER]\l0x0007: NEW_INSTANCE  (r3 I:java.lang.String) =  java.lang.String A[Catch:\{ all \-\> 0x0014 \}]\l0x0009: SGET  (r5 I:char[]) =  android.support.v4.util.TimeUtils.sFormatStr char[] A[Catch:\{ all \-\> 0x0014 \}]\l0x000b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0014 \}]\l0x000c: INVOKE  \l  (r3 I:java.lang.String)\l  (r5 I:char[])\l  (r1 I:int)\l  (r2 I:int)\l java.lang.String.\<init\>(char[], int, int):void type: DIRECT A[Catch:\{ all \-\> 0x0014 \}]\l0x000f: INVOKE  (r4 I:java.io.PrintWriter), (r3 I:java.lang.String) java.io.PrintWriter.print(java.lang.String):void type: VIRTUAL A[Catch:\{ all \-\> 0x0014 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0014 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: RETURN   A[Catch:\{ all \-\> 0x0014 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x0014: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0014 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0014 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void android.support.v4.util.TimeUtils.formatDuration((r2 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.io.PrintWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.RestrictTo, \{value=[android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP android.support.annotation.RestrictTo$Scope]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

