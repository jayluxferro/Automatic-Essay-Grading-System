digraph "CFG forandroid.support.v4.graphics.TypefaceCompatApi28Impl.createFromFamiliesWithDefault(Ljava\/lang\/Object;)Landroid\/graphics\/Typeface;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:java.lang.Class) = (r5 I:android.support.v4.graphics.TypefaceCompatApi28Impl) android.support.v4.graphics.TypefaceCompatApi28Impl.mFontFamily java.lang.Class A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}, TRY_ENTER]\l0x0002: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x0003: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.Class), (r1 I:int) java.lang.reflect.Array.newInstance(java.lang.Class, int):java.lang.Object type: STATIC A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x0007: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x0008: INVOKE  \l  (r0 I:java.lang.Object)\l  (r2 I:int)\l  (r6 I:java.lang.Object)\l java.lang.reflect.Array.set(java.lang.Object, int, java.lang.Object):void type: STATIC A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x000b: IGET  (r6 I:java.lang.reflect.Method) = (r5 I:android.support.v4.graphics.TypefaceCompatApi28Impl) android.support.v4.graphics.TypefaceCompatApi28Impl.mCreateFromFamiliesWithDefault java.lang.reflect.Method A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x000d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x000e: CONST  (r4 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x000f: NEW_ARRAY  (r4 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x0011: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x0013: CONST_STR  (r0 I:java.lang.String) =  \"sans\-serif\" A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x0015: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x0017: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x0018: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x0019: INVOKE  (r2 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x001d: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x001f: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x0020: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x0024: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x0026: INVOKE  (r6 I:java.lang.Object) = \l  (r6 I:java.lang.reflect.Method)\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Object[])\l java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}]\l0x002a: CHECK_CAST  (r6 I:android.graphics.Typeface) = (android.graphics.Typeface) (r6 I:?[OBJECT, ARRAY]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x002c|0x002c: RETURN  (r6 I:android.graphics.Typeface) \l}"];
Node_3 [shape=record,label="{3\:\ 0x002d|ExcHandler: IllegalAccessException \| InvocationTargetException null\lSplitter:B:0:0x0000\l|0x002d: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x002e|0x002e: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0030: INVOKE  \l  (r0 I:java.lang.RuntimeException)\l  (r6 I:java.lang.Throwable)\l java.lang.RuntimeException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0033|0x0033: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected android.graphics.Typeface android.support.v4.graphics.TypefaceCompatApi28Impl.createFromFamiliesWithDefault((r5 'this' I:android.support.v4.graphics.TypefaceCompatApi28Impl A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

