digraph "CFG forandroid.support.v4.graphics.ColorUtils.RGBToHSL(III[F)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CAST  (r7 I:float) = (float) (r7 I:int) \l0x0001: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1132396544(0x437f0000, float:255.0) ?[int, float, short, byte, char])\l \l0x0003: ARITH  (r7 I:float) = (r7 I:float) \/ (r0 I:float) \l0x0004: CAST  (r8 I:float) = (float) (r8 I:int) \l0x0005: ARITH  (r8 I:float) = (r8 I:float) \/ (r0 I:float) \l0x0006: CAST  (r9 I:float) = (float) (r9 I:int) \l0x0007: ARITH  (r9 I:float) = (r9 I:float) \/ (r0 I:float) \l0x0008: INVOKE  (r0 I:float) = (r8 I:float), (r9 I:float) java.lang.Math.max(float, float):float type: STATIC \l0x000c: INVOKE  (r0 I:float) = (r7 I:float), (r0 I:float) java.lang.Math.max(float, float):float type: STATIC \l0x0010: INVOKE  (r1 I:float) = (r8 I:float), (r9 I:float) java.lang.Math.min(float, float):float type: STATIC \l0x0014: INVOKE  (r1 I:float) = (r7 I:float), (r1 I:float) java.lang.Math.min(float, float):float type: STATIC \l0x0018: ARITH  (r2 I:float) = (r0 I:float) \- (r1 I:float) \l0x001a: ARITH  (r3 I:float) = (r0 I:float) + (r1 I:float) \l0x001c: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x001e: ARITH  (r3 I:float) = (r3 I:float) \/ (r4 I:float) \l0x001f: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0021: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0022: CMP_L  (r1 I:int) = (r0 I:float), (r1 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0024|0x0024: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0029 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0026|0x0026: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0027: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|0x0029: CMP_L  (r1 I:int) = (r0 I:float), (r7 I:float) \l}"];
Node_4 [shape=record,label="{4\:\ 0x002b|0x002b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0034 \l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|0x002d: ARITH  (r8 I:float) = (r8 I:float) \- (r9 I:float) \l0x002e: ARITH  (r8 I:float) = (r8 I:float) \/ (r2 I:float) \l0x002f: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (1086324736(0x40c00000, float:6.0) ?[int, float, short, byte, char])\l \l0x0031: ARITH  (r8 I:float) = (r8 I:float) % (r7 I:float) \l0x0032: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0034|0x0034: CMP_L  (r0 I:int) = (r0 I:float), (r8 I:float) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0036|0x0036: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003d \l}"];
Node_8 [shape=record,label="{8\:\ 0x0038|0x0038: ARITH  (r9 I:float) = (r9 I:float) \- (r7 I:float) \l0x0039: ARITH  (r9 I:float) = (r9 I:float) \/ (r2 I:float) \l0x003a: ARITH  (r9 I:float) = (r9 I:float) + (r4 I:float) \l0x003b: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|0x003d: ARITH  (r7 I:float) = (r7 I:float) \- (r8 I:float) \l0x003e: ARITH  (r7 I:float) = (r7 I:float) \/ (r2 I:float) \l0x003f: CONST  (r8 I:?[int, float, short, byte, char]) = \l  (1082130432(0x40800000, float:4.0) ?[int, float, short, byte, char])\l \l0x0041: ARITH  (r7 I:float) = (r7 I:float) + (r8 I:float) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0042|0x0042: ARITH  (r4 I:float) = (r4 I:float) * (r3 I:float) \l0x0044: ARITH  (r4 I:float) = (r4 I:float) \- (r5 I:float) \l0x0045: INVOKE  (r8 I:float) = (r4 I:float) java.lang.Math.abs(float):float type: STATIC \l0x0049: ARITH  (r8 I:float) = (r5 I:float) \- (r8 I:float) \l0x004b: ARITH  (r8 I:float) = (r2 I:float) \/ (r8 I:float) \l}"];
Node_11 [shape=record,label="{11\:\ 0x004d|0x004d: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (1114636288(0x42700000, float:60.0) ?[int, float, short, byte, char])\l \l0x004f: ARITH  (r7 I:float) = (r7 I:float) * (r9 I:float) \l0x0051: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (1135869952(0x43b40000, float:360.0) ?[int, float, short, byte, char])\l \l0x0053: ARITH  (r7 I:float) = (r7 I:float) % (r9 I:float) \l0x0054: CMP_G  (r0 I:int) = (r7 I:float), (r6 I:float) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0056|0x0056: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:14:0x0059 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0058|0x0058: ARITH  (r7 I:float) = (r7 I:float) + (r9 I:float) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0059|0x0059: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005a: INVOKE  (r7 I:float) = (r7 I:float), (r6 I:float), (r9 I:float) android.support.v4.graphics.ColorUtils.constrain(float, float, float):float type: STATIC \l0x005e: APUT  \l  (r10 I:?[int, float][])\l  (r0 I:?[int, short, byte, char])\l  (r7 I:?[int, float])\l \l0x0060: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0061: INVOKE  (r8 I:float) = (r8 I:float), (r6 I:float), (r5 I:float) android.support.v4.graphics.ColorUtils.constrain(float, float, float):float type: STATIC \l0x0065: APUT  \l  (r10 I:?[int, float][])\l  (r7 I:?[int, short, byte, char])\l  (r8 I:?[int, float])\l \l0x0067: CONST  (r7 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0068: INVOKE  (r8 I:float) = (r3 I:float), (r6 I:float), (r5 I:float) android.support.v4.graphics.ColorUtils.constrain(float, float, float):float type: STATIC \l0x006c: APUT  \l  (r10 I:?[int, float][])\l  (r7 I:?[int, short, byte, char])\l  (r8 I:?[int, float])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x006e|0x006e: RETURN   \l}"];
MethodNode[shape=record,label="{public static void android.support.v4.graphics.ColorUtils.RGBToHSL((r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:float[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.IntRange, \{from=0, to=255\}], Annotation[BUILD, android.support.annotation.IntRange, \{from=0, to=255\}], Annotation[BUILD, android.support.annotation.IntRange, \{from=0, to=255\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

