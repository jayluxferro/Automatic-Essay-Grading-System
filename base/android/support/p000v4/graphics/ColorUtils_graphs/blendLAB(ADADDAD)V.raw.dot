digraph "CFG forandroid.support.v4.graphics.ColorUtils.blendLAB([D[DD[D)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r11 I:?[]) \l0x0001: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x002c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0006: ARITH  (r0 I:double) = (r0 I:double) \- (r9 I:double) \l0x0007: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: AGET  (r3 I:?[long, double]) = (r7 I:?[long, double][]), (r2 I:?[int, short, byte, char]) \l0x000a: ARITH  (r3 I:double) = (r3 I:double) * (r0 I:double) \l0x000c: AGET  (r5 I:?[long, double]) = (r8 I:?[long, double][]), (r2 I:?[int, short, byte, char]) \l0x000e: ARITH  (r5 I:double) = (r5 I:double) * (r9 I:double) \l0x0010: ARITH  (r3 I:double) = (r3 I:double) + (r5 I:double) \l0x0011: APUT  \l  (r11 I:?[long, double][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[long, double])\l \l0x0013: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0014: AGET  (r3 I:?[long, double]) = (r7 I:?[long, double][]), (r2 I:?[int, short, byte, char]) \l0x0016: ARITH  (r3 I:double) = (r3 I:double) * (r0 I:double) \l0x0018: AGET  (r5 I:?[long, double]) = (r8 I:?[long, double][]), (r2 I:?[int, short, byte, char]) \l0x001a: ARITH  (r5 I:double) = (r5 I:double) * (r9 I:double) \l0x001c: ARITH  (r3 I:double) = (r3 I:double) + (r5 I:double) \l0x001d: APUT  \l  (r11 I:?[long, double][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[long, double])\l \l0x001f: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0020: AGET  (r3 I:?[long, double]) = (r7 I:?[long, double][]), (r2 I:?[int, short, byte, char]) \l0x0022: ARITH  (r3 I:double) = (r3 I:double) * (r0 I:double) \l0x0024: AGET  (r7 I:?[long, double]) = (r8 I:?[long, double][]), (r2 I:?[int, short, byte, char]) \l0x0026: ARITH  (r7 I:double) = (r7 I:double) * (r9 I:double) \l0x0028: ARITH  (r3 I:double) = (r3 I:double) + (r7 I:double) \l0x0029: APUT  \l  (r11 I:?[long, double][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[long, double])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x002b|0x002b: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|0x002c: NEW_INSTANCE  (r7 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x002e: CONST_STR  (r8 I:java.lang.String) =  \"outResult must have a length of 3.\" \l0x0030: INVOKE  \l  (r7 I:java.lang.IllegalArgumentException)\l  (r8 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0033|0x0033: THROW  (r7 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void android.support.v4.graphics.ColorUtils.blendLAB((r7 I:double[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:double[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:double[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.FloatRange, \{from=0.0, to=1.0\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

