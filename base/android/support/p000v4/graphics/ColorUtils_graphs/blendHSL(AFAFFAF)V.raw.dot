digraph "CFG forandroid.support.v4.graphics.ColorUtils.blendHSL([F[FF[F)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r7 I:?[]) \l0x0001: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x002b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0006: ARITH  (r0 I:float) = (r0 I:float) \- (r6 I:float) \l0x0007: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: AGET  (r2 I:?[int, float]) = (r4 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x000a: AGET  (r3 I:?[int, float]) = (r5 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x000c: INVOKE  (r2 I:float) = (r2 I:float), (r3 I:float), (r6 I:float) android.support.v4.graphics.ColorUtils.circularInterpolate(float, float, float):float type: STATIC \l0x0010: APUT  \l  (r7 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x0012: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0013: AGET  (r2 I:?[int, float]) = (r4 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x0015: ARITH  (r2 I:float) = (r2 I:float) * (r0 I:float) \l0x0017: AGET  (r3 I:?[int, float]) = (r5 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x0019: ARITH  (r3 I:float) = (r3 I:float) * (r6 I:float) \l0x001b: ARITH  (r2 I:float) = (r2 I:float) + (r3 I:float) \l0x001c: APUT  \l  (r7 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x001e: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x001f: AGET  (r4 I:?[int, float]) = (r4 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x0021: ARITH  (r4 I:float) = (r4 I:float) * (r0 I:float) \l0x0023: AGET  (r5 I:?[int, float]) = (r5 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x0025: ARITH  (r5 I:float) = (r5 I:float) * (r6 I:float) \l0x0027: ARITH  (r4 I:float) = (r4 I:float) + (r5 I:float) \l0x0028: APUT  \l  (r7 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x002a|0x002a: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x002b|0x002b: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x002d: CONST_STR  (r5 I:java.lang.String) =  \"result must have a length of 3.\" \l0x002f: INVOKE  \l  (r4 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0032|0x0032: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void android.support.v4.graphics.ColorUtils.blendHSL((r4 I:float[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:float[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:float[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.FloatRange, \{from=0.0, to=1.0\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

