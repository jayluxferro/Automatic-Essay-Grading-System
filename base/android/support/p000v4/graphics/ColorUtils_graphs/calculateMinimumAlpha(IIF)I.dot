digraph "CFG forandroid.support.v4.graphics.ColorUtils.calculateMinimumAlpha(IIF)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = 255\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (android.graphics.Color.alpha(r9) != 255) goto L_0x0039\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|double r4 = (double) r10\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|if ((calculateContrast(setAlphaComponent(r8, 255), r9) \> r4 ? 1 : (calculateContrast(setAlphaComponent(r8, 255), r9) == r4 ? 0 : \-1)) \>= 0) goto L_0x0017\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|RETURN\l|return \-1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|r10 = 0\lr0 = 0\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|LOOP_START\lPHI: r0 r1 r10 \l  PHI: (r0v4 int) = (r0v3 int), (r0v5 int) binds: [B:5:0x0017, B:14:0x0035] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:5:0x0017, B:14:0x0035] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v4 int) = (r10v3 int), (r10v5 int) binds: [B:5:0x0017, B:14:0x0035] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0019\-\>B:14:0x0035\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|if (r10 \> 10) goto L_0x0038\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d}"];
Node_9 [shape=record,label="{9\:\ 0x0020|if ((r1 \- r0) \<= 1) goto L_0x0038\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|int r2 = (r0 + r1) \/ 2\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|if ((calculateContrast(setAlphaComponent(r8, r2), r9) \> r4 ? 1 : (calculateContrast(setAlphaComponent(r8, r2), r9) == r4 ? 0 : \-1)) \>= 0) goto L_0x0034\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|r0 = r2\l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|r1 = r2\l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|LOOP_END\lPHI: r0 r1 \l  PHI: (r0v5 int) = (r0v4 int), (r0v6 int) binds: [B:20:0x0035, B:21:0x0035] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 int) = (r1v3 int), (r1v1 int) binds: [B:20:0x0035, B:21:0x0035] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0019\-\>B:14:0x0035\l|int r10 = r10 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|RETURN\l|return r1\l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|java.lang.StringBuilder r10 = new java.lang.StringBuilder()\lr10.append(\"background can not be translucent: #\")\lr10.append(java.lang.Integer.toHexString(r9))\l}"];
Node_17 [shape=record,label="{17\:\ 0x0053|throw new java.lang.IllegalArgumentException(r10.toString())\l}"];
Node_18 [shape=record,label="{18\:\ 0x0038|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0038|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0035|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0035|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static int android.support.v4.graphics.ColorUtils.calculateMinimumAlpha((r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.ColorInt, \{\}], Annotation[BUILD, android.support.annotation.ColorInt, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_19;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_18;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_21;
Node_13 -> Node_20;
Node_14 -> Node_6;
Node_16 -> Node_17;
Node_18 -> Node_15;
Node_19 -> Node_15;
Node_20 -> Node_14;
Node_21 -> Node_14;
}

