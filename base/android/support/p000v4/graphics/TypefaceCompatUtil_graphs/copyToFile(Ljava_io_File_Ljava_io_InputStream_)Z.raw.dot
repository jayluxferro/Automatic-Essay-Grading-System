digraph "CFG forandroid.support.v4.graphics.TypefaceCompatUtil.copyToFile(Ljava\/io\/File;Ljava\/io\/InputStream;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.os.StrictMode$ThreadPolicy) =  android.os.StrictMode.allowThreadDiskWrites():android.os.StrictMode$ThreadPolicy type: STATIC \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|SYNTHETIC\lSplitter:B:1:0x0006\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0006\l|0x0006: NEW_INSTANCE  (r3 I:java.io.FileOutputStream) =  java.io.FileOutputStream A[Catch:\{ IOException \-\> 0x002a \}, TRY_ENTER]\l0x0008: INVOKE  \l  (r3 I:java.io.FileOutputStream)\l  (r5 I:java.io.File)\l  (r1 I:boolean)\l java.io.FileOutputStream.\<init\>(java.io.File, boolean):void type: DIRECT A[Catch:\{ IOException \-\> 0x002a \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (1024(0x400, float:1.435E\-42) ?[int, float, short, byte, char])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|SYNTHETIC\lSplitter:B:4:0x000d\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x000d\l|0x000d: NEW_ARRAY  (r5 I:byte[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: byte[] A[Catch:\{ IOException \-\> 0x0025, all \-\> 0x0022 \}, TRY_ENTER]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: INVOKE  (r2 I:int) = (r6 I:java.io.InputStream), (r5 I:byte[]) java.io.InputStream.read(byte[]):int type: VIRTUAL A[Catch:\{ IOException \-\> 0x0025, all \-\> 0x0022 \}]\l0x0013: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ IOException \-\> 0x0025, all \-\> 0x0022 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001a A[Catch:\{ IOException \-\> 0x0025, all \-\> 0x0022 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: INVOKE  \l  (r3 I:java.io.FileOutputStream)\l  (r5 I:byte[])\l  (r1 I:int)\l  (r2 I:int)\l java.io.FileOutputStream.write(byte[], int, int):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0025, all \-\> 0x0022 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001b: INVOKE  (r3 I:java.io.Closeable) android.support.v4.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):void type: STATIC \l0x001e: INVOKE  (r0 I:android.os.StrictMode$ThreadPolicy) android.os.StrictMode.setThreadPolicy(android.os.StrictMode$ThreadPolicy):void type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: RETURN  (r5 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|ExcHandler: all null\lSplitter:B:4:0x000d\l|0x0022: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|0x0023: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|ExcHandler: IOException null\lSplitter:B:4:0x000d\l|0x0025: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0026|0x0026: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0028|ExcHandler: all null\lSplitter:B:20:0x002d\l|0x0028: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x002a|ExcHandler: IOException null\lSplitter:B:1:0x0006\l|0x002a: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_19 [shape=record,label="{19\:\ 0x002b|0x002b: CONST_STR  (r6 I:java.lang.String) =  \"TypefaceCompatUtil\" \l}"];
Node_20 [shape=record,label="{20\:\ 0x002d|SYNTHETIC\lSplitter:B:20:0x002d\l}"];
Node_21 [shape=record,label="{21\:\ ?|Splitter:B:20:0x002d\l|0x002d: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0028 \}, TRY_ENTER]\l0x002f: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0028 \}]\l0x0032: CONST_STR  (r4 I:java.lang.String) =  \"Error copying resource contents to temp file: \" A[Catch:\{ all \-\> 0x0028 \}]\l0x0034: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0028 \}]\l0x0037: INVOKE  (r5 I:java.lang.String) = (r5 I:java.io.IOException) java.io.IOException.getMessage():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0028 \}]\l0x003b: INVOKE  (r3 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0028 \}]\l0x003e: INVOKE  (r5 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0028 \}]\l0x0042: INVOKE  (r6 I:java.lang.String), (r5 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ all \-\> 0x0028 \}, TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0045|0x0045: INVOKE  (r2 I:java.io.Closeable) android.support.v4.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):void type: STATIC \l0x0048: INVOKE  (r0 I:android.os.StrictMode$ThreadPolicy) android.os.StrictMode.setThreadPolicy(android.os.StrictMode$ThreadPolicy):void type: STATIC \l}"];
Node_23 [shape=record,label="{23\:\ 0x004b|0x004b: RETURN  (r1 I:boolean) \l}"];
Node_24 [shape=record,label="{24\:\ 0x004c|0x004c: INVOKE  (r2 I:java.io.Closeable) android.support.v4.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):void type: STATIC \l0x004f: INVOKE  (r0 I:android.os.StrictMode$ThreadPolicy) android.os.StrictMode.setThreadPolicy(android.os.StrictMode$ThreadPolicy):void type: STATIC \l}"];
Node_25 [shape=record,label="{25\:\ 0x0052|0x0052: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static boolean android.support.v4.graphics.TypefaceCompatUtil.copyToFile((r5 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_18;
Node_2 -> Node_3;
Node_2 -> Node_18;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_14;
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_6;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_24;
Node_14 -> Node_15;
Node_15 -> Node_19;
Node_16 -> Node_24;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_16;
Node_21 -> Node_22;
Node_21 -> Node_16;
Node_22 -> Node_23;
Node_24 -> Node_25;
}

