digraph "CFG forandroid.support.v4.graphics.TypefaceCompatUtil.mmap(Ljava\/io\/File;)Ljava\/nio\/ByteBuffer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: NEW_INSTANCE  (r1 I:java.io.FileInputStream) =  java.io.FileInputStream A[Catch:\{ IOException \-\> 0x0032 \}, TRY_ENTER]\l0x0003: INVOKE  (r1 I:java.io.FileInputStream), (r9 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT A[Catch:\{ IOException \-\> 0x0032 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|SYNTHETIC\lSplitter:B:3:0x0006\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0006\l|0x0006: INVOKE  (r2 I:java.nio.channels.FileChannel) = (r1 I:java.io.FileInputStream) java.io.FileInputStream.getChannel():java.nio.channels.FileChannel type: VIRTUAL A[Catch:\{ Throwable \-\> 0x001d, all \-\> 0x001a \}, TRY_ENTER]\l0x000a: INVOKE  (r6 I:long) = (r2 I:java.nio.channels.FileChannel) java.nio.channels.FileChannel.size():long type: VIRTUAL A[Catch:\{ Throwable \-\> 0x001d, all \-\> 0x001a \}]\l0x000e: SGET  (r3 I:java.nio.channels.FileChannel$MapMode) =  java.nio.channels.FileChannel.MapMode.READ_ONLY java.nio.channels.FileChannel$MapMode A[Catch:\{ Throwable \-\> 0x001d, all \-\> 0x001a \}]\l0x0010: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) A[Catch:\{ Throwable \-\> 0x001d, all \-\> 0x001a \}]\l0x0012: INVOKE  (r9 I:java.nio.MappedByteBuffer) = \l  (r2 I:java.nio.channels.FileChannel)\l  (r3 I:java.nio.channels.FileChannel$MapMode)\l  (r4 I:long)\l  (r6 I:long)\l java.nio.channels.FileChannel.map(java.nio.channels.FileChannel$MapMode, long, long):java.nio.MappedByteBuffer type: VIRTUAL A[Catch:\{ Throwable \-\> 0x001d, all \-\> 0x001a \}]\l0x0015: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|SYNTHETIC\lSplitter:B:5:0x0016\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0016\l|0x0016: INVOKE  (r1 I:java.io.FileInputStream) java.io.FileInputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0032 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: RETURN  (r9 I:java.nio.ByteBuffer) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|ExcHandler: all null\lSplitter:B:3:0x0006\l|0x001a: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|ExcHandler: Throwable null\lSplitter:B:3:0x0006\l|0x001d: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|SYNTHETIC\lSplitter:B:11:0x001e\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x001e\l|0x001e: THROW  (r9 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x001f \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|ExcHandler: all null\lSplitter:B:11:0x001e\l|0x001f: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|0x0020: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0021: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0022: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0023|0x0023: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x002e \l}"];
Node_16 [shape=record,label="{16\:\ 0x0025|SYNTHETIC\lSplitter:B:16:0x0025\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x0025\l|0x0025: INVOKE  (r1 I:java.io.FileInputStream) java.io.FileInputStream.close():void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0029 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0029|ExcHandler: Throwable null\lSplitter:B:16:0x0025\l|0x0029: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_20 [shape=record,label="{20\:\ 0x002a|SYNTHETIC\lSplitter:B:20:0x002a\l}"];
Node_21 [shape=record,label="{21\:\ ?|Splitter:B:20:0x002a\l|0x002a: INVOKE  (r2 I:java.lang.Throwable), (r1 I:java.lang.Throwable) java.lang.Throwable.addSuppressed(java.lang.Throwable):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0032 \}, TRY_ENTER]\l0x002d: GOTO  \-\> 0x0031 A[Catch:\{ IOException \-\> 0x0032 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x002e|0x002e: INVOKE  (r1 I:java.io.FileInputStream) java.io.FileInputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0032 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0031|0x0031: THROW  (r9 I:java.lang.Throwable) A[Catch:\{ IOException \-\> 0x0032 \}, TRY_LEAVE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0032|0x0032: RETURN  (r0 I:java.nio.ByteBuffer) \l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:1:0x0001\l}"];
MethodNode[shape=record,label="{private static java.nio.ByteBuffer android.support.v4.graphics.TypefaceCompatUtil.mmap((r9 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.RequiresApi, \{value=19\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_25;
Node_2 -> Node_3;
Node_2 -> Node_25;
Node_3 -> Node_4;
Node_3 -> Node_10;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_25;
Node_6 -> Node_7;
Node_6 -> Node_25;
Node_8 -> Node_9;
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_16 -> Node_19;
Node_17 -> Node_19;
Node_17 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_25;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_25 -> Node_24;
}

