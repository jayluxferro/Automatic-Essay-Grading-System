digraph "CFG forandroid.support.v4.graphics.TypefaceCompatUtil.copyToDirectBuffer(Landroid\/content\/Context;Landroid\/content\/res\/Resources;I)Ljava\/nio\/ByteBuffer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.io.File r1 = getTempFile(r1)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r1 != null) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|SYNTHETIC\lSplitter:B:3:0x0008\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ all \-\> 0x001a \}\lSplitter:B:3:0x0008\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|if (copyToFile(r1, r2, r3) != false) goto L_0x0012\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|DONT_GENERATE\l|r1.delete()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|return null\l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|SYNTHETIC\lSplitter:B:8:0x0012\l}"];
Node_9 [shape=record,label="{9\:\ ?|Catch:\{ all \-\> 0x001a \}\lSplitter:B:8:0x0012\l|java.nio.ByteBuffer r2 = mmap(r1)     \/\/ Catch:\{ all \-\> 0x001a \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|r1.delete()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|RETURN\l|return r2\l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|ExcHandler:  FINALLY\lSplitter:B:3:0x0008\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_13 [shape=record,label="{13\:\ 0x001b|FINALLY_INSNS\l|r1.delete()\l}"];
Node_14 [shape=record,label="{14\:\ 0x001e|throw r2\l}"];
MethodNode[shape=record,label="{public static java.nio.ByteBuffer android.support.v4.graphics.TypefaceCompatUtil.copyToDirectBuffer((r1v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.RequiresApi, \{value=19\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

