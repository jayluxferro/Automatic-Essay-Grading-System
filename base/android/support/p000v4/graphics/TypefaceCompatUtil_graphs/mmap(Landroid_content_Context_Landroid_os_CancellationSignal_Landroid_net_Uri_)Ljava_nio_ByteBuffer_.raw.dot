digraph "CFG forandroid.support.v4.graphics.TypefaceCompatUtil.mmap(Landroid\/content\/Context;Landroid\/os\/CancellationSignal;Landroid\/net\/Uri;)Ljava\/nio\/ByteBuffer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r8 I:android.content.ContentResolver) = (r8 I:android.content.Context) android.content.Context.getContentResolver():android.content.ContentResolver type: VIRTUAL \l0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST_STR  (r1 I:java.lang.String) =  \"r\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|SYNTHETIC\lSplitter:B:1:0x0007\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0007\l|0x0007: INVOKE  (r8 I:android.os.ParcelFileDescriptor) = \l  (r8 I:android.content.ContentResolver)\l  (r10 I:android.net.Uri)\l  (r1 I:java.lang.String)\l  (r9 I:android.os.CancellationSignal)\l android.content.ContentResolver.openFileDescriptor(android.net.Uri, java.lang.String, android.os.CancellationSignal):android.os.ParcelFileDescriptor type: VIRTUAL A[Catch:\{ IOException \-\> 0x0067 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0013 A[Catch:\{ IOException \-\> 0x0067 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0012 A[Catch:\{ IOException \-\> 0x0067 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: INVOKE  (r8 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0067 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: RETURN  (r0 I:java.nio.ByteBuffer) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|SYNTHETIC\lSplitter:B:7:0x0013\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0013\l|0x0013: NEW_INSTANCE  (r9 I:java.io.FileInputStream) =  java.io.FileInputStream A[Catch:\{ Throwable \-\> 0x0050, all \-\> 0x004d \}, TRY_ENTER]\l0x0015: INVOKE  (r10 I:java.io.FileDescriptor) = (r8 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.getFileDescriptor():java.io.FileDescriptor type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0050, all \-\> 0x004d \}]\l0x0019: INVOKE  \l  (r9 I:java.io.FileInputStream)\l  (r10 I:java.io.FileDescriptor)\l java.io.FileInputStream.\<init\>(java.io.FileDescriptor):void type: DIRECT A[Catch:\{ Throwable \-\> 0x0050, all \-\> 0x004d \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|SYNTHETIC\lSplitter:B:9:0x001c\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x001c\l|0x001c: INVOKE  (r1 I:java.nio.channels.FileChannel) = (r9 I:java.io.FileInputStream) java.io.FileInputStream.getChannel():java.nio.channels.FileChannel type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0038, all \-\> 0x0035 \}, TRY_ENTER]\l0x0020: INVOKE  (r5 I:long) = (r1 I:java.nio.channels.FileChannel) java.nio.channels.FileChannel.size():long type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0038, all \-\> 0x0035 \}]\l0x0024: SGET  (r2 I:java.nio.channels.FileChannel$MapMode) =  java.nio.channels.FileChannel.MapMode.READ_ONLY java.nio.channels.FileChannel$MapMode A[Catch:\{ Throwable \-\> 0x0038, all \-\> 0x0035 \}]\l0x0026: CONST  (r3 I:?[long, double]) = (0 ?[long, double]) A[Catch:\{ Throwable \-\> 0x0038, all \-\> 0x0035 \}]\l0x0028: INVOKE  (r10 I:java.nio.MappedByteBuffer) = \l  (r1 I:java.nio.channels.FileChannel)\l  (r2 I:java.nio.channels.FileChannel$MapMode)\l  (r3 I:long)\l  (r5 I:long)\l java.nio.channels.FileChannel.map(java.nio.channels.FileChannel$MapMode, long, long):java.nio.MappedByteBuffer type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0038, all \-\> 0x0035 \}]\l0x002b: NOP   A[TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|SYNTHETIC\lSplitter:B:11:0x002c\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x002c\l|0x002c: INVOKE  (r9 I:java.io.FileInputStream) java.io.FileInputStream.close():void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0050, all \-\> 0x004d \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0034 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|SYNTHETIC\lSplitter:B:14:0x0031\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x0031\l|0x0031: INVOKE  (r8 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0067 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|0x0034: RETURN  (r10 I:java.nio.ByteBuffer) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0035|ExcHandler: all null\lSplitter:B:9:0x001c\l|0x0035: MOVE_EXCEPTION  (r10 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x0036|0x0036: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0038|ExcHandler: Throwable null\lSplitter:B:9:0x001c\l|0x0038: MOVE_EXCEPTION  (r10 I:?[OBJECT]) =  \l}"];
Node_20 [shape=record,label="{20\:\ 0x0039|SYNTHETIC\lSplitter:B:20:0x0039\l}"];
Node_21 [shape=record,label="{21\:\ ?|Splitter:B:20:0x0039\l|0x0039: THROW  (r10 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x003a \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x003a|ExcHandler: all null\lSplitter:B:20:0x0039\l|0x003a: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_23 [shape=record,label="{23\:\ 0x003b|0x003b: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x003c: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x003d: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x003e|0x003e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0049 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0040|SYNTHETIC\lSplitter:B:25:0x0040\l}"];
Node_26 [shape=record,label="{26\:\ ?|Splitter:B:25:0x0040\l|0x0040: INVOKE  (r9 I:java.io.FileInputStream) java.io.FileInputStream.close():void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0044, all \-\> 0x004d \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0044|ExcHandler: Throwable null\lSplitter:B:25:0x0040\l|0x0044: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_29 [shape=record,label="{29\:\ 0x0045|SYNTHETIC\lSplitter:B:29:0x0045\l}"];
Node_30 [shape=record,label="{30\:\ ?|Splitter:B:29:0x0045\l|0x0045: INVOKE  (r1 I:java.lang.Throwable), (r9 I:java.lang.Throwable) java.lang.Throwable.addSuppressed(java.lang.Throwable):void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0050, all \-\> 0x004d \}, TRY_ENTER]\l0x0048: GOTO  \-\> 0x004c A[Catch:\{ Throwable \-\> 0x0050, all \-\> 0x004d \}]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0049|0x0049: INVOKE  (r9 I:java.io.FileInputStream) java.io.FileInputStream.close():void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0050, all \-\> 0x004d \}]\l}"];
Node_32 [shape=record,label="{32\:\ 0x004c|0x004c: THROW  (r10 I:java.lang.Throwable) A[Catch:\{ Throwable \-\> 0x0050, all \-\> 0x004d \}, TRY_LEAVE]\l}"];
Node_33 [shape=record,label="{33\:\ 0x004d|ExcHandler: all null\lSplitter:B:7:0x0013\l|0x004d: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_34 [shape=record,label="{34\:\ 0x004e|0x004e: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0050|ExcHandler: Throwable null\lSplitter:B:7:0x0013\l|0x0050: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_36 [shape=record,label="{36\:\ 0x0051|SYNTHETIC\lSplitter:B:36:0x0051\l}"];
Node_37 [shape=record,label="{37\:\ ?|Splitter:B:36:0x0051\l|0x0051: THROW  (r9 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0052 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0052|ExcHandler: all null\lSplitter:B:36:0x0051\l|0x0052: MOVE_EXCEPTION  (r10 I:?[OBJECT]) =  \l}"];
Node_39 [shape=record,label="{39\:\ 0x0053|0x0053: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0054: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0055: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0056|0x0056: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x0066 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0058|0x0058: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0063 \l}"];
Node_42 [shape=record,label="{42\:\ 0x005a|SYNTHETIC\lSplitter:B:42:0x005a\l}"];
Node_43 [shape=record,label="{43\:\ ?|Splitter:B:42:0x005a\l|0x005a: INVOKE  (r8 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.close():void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x005e \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_45 [shape=record,label="{45\:\ 0x005e|ExcHandler: Throwable null\lSplitter:B:42:0x005a\l|0x005e: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_46 [shape=record,label="{46\:\ 0x005f|SYNTHETIC\lSplitter:B:46:0x005f\l}"];
Node_47 [shape=record,label="{47\:\ ?|Splitter:B:46:0x005f\l|0x005f: INVOKE  (r10 I:java.lang.Throwable), (r8 I:java.lang.Throwable) java.lang.Throwable.addSuppressed(java.lang.Throwable):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0067 \}, TRY_ENTER]\l0x0062: GOTO  \-\> 0x0066 A[Catch:\{ IOException \-\> 0x0067 \}]\l}"];
Node_48 [shape=record,label="{48\:\ 0x0063|0x0063: INVOKE  (r8 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0067 \}]\l}"];
Node_49 [shape=record,label="{49\:\ 0x0066|0x0066: THROW  (r9 I:java.lang.Throwable) A[Catch:\{ IOException \-\> 0x0067 \}, TRY_LEAVE]\l}"];
Node_50 [shape=record,label="{50\:\ 0x0067|0x0067: RETURN  (r0 I:java.nio.ByteBuffer) \l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:1:0x0007\l}"];
MethodNode[shape=record,label="{public static java.nio.ByteBuffer android.support.v4.graphics.TypefaceCompatUtil.mmap((r8 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.os.CancellationSignal A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.net.Uri A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.RequiresApi, \{value=19\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_51;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_35;
Node_7 -> Node_33;
Node_8 -> Node_9;
Node_8 -> Node_35;
Node_8 -> Node_33;
Node_9 -> Node_10;
Node_9 -> Node_19;
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_35;
Node_11 -> Node_33;
Node_12 -> Node_13;
Node_12 -> Node_35;
Node_12 -> Node_33;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_14 -> Node_51;
Node_15 -> Node_16;
Node_15 -> Node_51;
Node_17 -> Node_18;
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_31;
Node_25 -> Node_26;
Node_25 -> Node_28;
Node_25 -> Node_33;
Node_26 -> Node_28;
Node_26 -> Node_33;
Node_26 -> Node_32;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_35;
Node_29 -> Node_33;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_34 -> Node_40;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_49;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_48;
Node_42 -> Node_43;
Node_42 -> Node_45;
Node_43 -> Node_45;
Node_43 -> Node_49;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_46 -> Node_51;
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_51 -> Node_50;
}

