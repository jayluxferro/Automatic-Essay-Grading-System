digraph "CFG forandroid.support.v4.graphics.TypefaceCompatApi26Impl.addFontFromAssetManager(Landroid\/content\/Context;Ljava\/lang\/Object;Ljava\/lang\/String;III[Landroid\/graphics\/fonts\/FontVariationAxis;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:java.lang.reflect.Method) = (r3 I:android.support.v4.graphics.TypefaceCompatApi26Impl) android.support.v4.graphics.TypefaceCompatApi26Impl.mAddFontFromAssetManager java.lang.reflect.Method A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}, TRY_ENTER]\l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x0004: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x0006: INVOKE  (r4 I:android.content.res.AssetManager) = (r4 I:android.content.Context) android.content.Context.getAssets():android.content.res.AssetManager type: VIRTUAL A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x000a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x000b: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x000d: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x000e: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x0010: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x0011: INVOKE  (r6 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x0015: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x0017: CONST  (r4 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x0018: INVOKE  (r6 I:java.lang.Boolean) = (r2 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x001c: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x001e: CONST  (r4 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x001f: INVOKE  (r6 I:java.lang.Integer) = (r7 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x0023: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x0025: CONST  (r4 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x0026: INVOKE  (r6 I:java.lang.Integer) = (r8 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x002a: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x002c: CONST  (r4 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x002d: INVOKE  (r6 I:java.lang.Integer) = (r9 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x0031: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x0033: CONST  (r4 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x0034: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r10 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x0036: INVOKE  (r4 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Method)\l  (r5 I:java.lang.Object)\l  (r1 I:java.lang.Object[])\l java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x003a: CHECK_CAST  (r4 I:java.lang.Boolean) = (java.lang.Boolean) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x003c: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0041 \}]\l0x003f: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0040|0x0040: RETURN  (r4 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0041|ExcHandler: IllegalAccessException \| InvocationTargetException null\lSplitter:B:0:0x0000\l|0x0041: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x0042|0x0042: NEW_INSTANCE  (r5 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0044: INVOKE  \l  (r5 I:java.lang.RuntimeException)\l  (r4 I:java.lang.Throwable)\l java.lang.RuntimeException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0047|0x0047: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private boolean android.support.v4.graphics.TypefaceCompatApi26Impl.addFontFromAssetManager((r3 'this' I:android.support.v4.graphics.TypefaceCompatApi26Impl A[IMMUTABLE_TYPE, THIS]), (r4 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.graphics.fonts.FontVariationAxis[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , , , , , , Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

