digraph "CFG forandroid.support.v4.graphics.TypefaceCompatApi26Impl.createFromFontInfo(Landroid\/content\/Context;Landroid\/os\/CancellationSignal;[Landroid\/support\/v4\/provider\/FontsContractCompat$FontInfo;I)Landroid\/graphics\/Typeface;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r14 I:?[]) \l0x0001: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0002: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r2 I:android.graphics.Typeface) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r0 I:boolean) = (r11 I:android.support.v4.graphics.TypefaceCompatApi26Impl) android.support.v4.graphics.TypefaceCompatApi26Impl.isFontFamilyPrivateAPIAvailable():boolean type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0064 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: INVOKE  (r14 I:android.support.v4.provider.FontsContractCompat$FontInfo) = \l  (r11 I:android.support.v4.graphics.TypefaceCompatApi26Impl)\l  (r14 I:android.support.v4.provider.FontsContractCompat$FontInfo[])\l  (r15 I:int)\l android.support.v4.graphics.TypefaceCompatApi26Impl.findBestInfo(android.support.v4.provider.FontsContractCompat$FontInfo[], int):android.support.v4.provider.FontsContractCompat$FontInfo type: VIRTUAL \l0x0010: INVOKE  (r12 I:android.content.ContentResolver) = (r12 I:android.content.Context) android.content.Context.getContentResolver():android.content.ContentResolver type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|SYNTHETIC\lSplitter:B:6:0x0014\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0014\l|0x0014: INVOKE  (r15 I:android.net.Uri) = \l  (r14 I:android.support.v4.provider.FontsContractCompat$FontInfo)\l android.support.v4.provider.FontsContractCompat.FontInfo.getUri():android.net.Uri type: VIRTUAL A[Catch:\{ IOException \-\> 0x0063 \}, TRY_ENTER]\l0x0018: CONST_STR  (r0 I:java.lang.String) =  \"r\" A[Catch:\{ IOException \-\> 0x0063 \}]\l0x001a: INVOKE  (r12 I:android.os.ParcelFileDescriptor) = \l  (r12 I:android.content.ContentResolver)\l  (r15 I:android.net.Uri)\l  (r0 I:java.lang.String)\l  (r13 I:android.os.CancellationSignal)\l android.content.ContentResolver.openFileDescriptor(android.net.Uri, java.lang.String, android.os.CancellationSignal):android.os.ParcelFileDescriptor type: VIRTUAL A[Catch:\{ IOException \-\> 0x0063 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0026 A[Catch:\{ IOException \-\> 0x0063 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0025 A[Catch:\{ IOException \-\> 0x0063 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: INVOKE  (r12 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0063 \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: RETURN  (r2 I:android.graphics.Typeface) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|SYNTHETIC\lSplitter:B:12:0x0026\l}"];
Node_13 [shape=record,label="{13\:\ ?|Splitter:B:12:0x0026\l|0x0026: NEW_INSTANCE  (r13 I:android.graphics.Typeface$Builder) =  android.graphics.Typeface$Builder A[Catch:\{ Throwable \-\> 0x004c, all \-\> 0x0049 \}, TRY_ENTER]\l0x0028: INVOKE  (r15 I:java.io.FileDescriptor) = (r12 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.getFileDescriptor():java.io.FileDescriptor type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004c, all \-\> 0x0049 \}]\l0x002c: INVOKE  \l  (r13 I:android.graphics.Typeface$Builder)\l  (r15 I:java.io.FileDescriptor)\l android.graphics.Typeface.Builder.\<init\>(java.io.FileDescriptor):void type: DIRECT A[Catch:\{ Throwable \-\> 0x004c, all \-\> 0x0049 \}]\l0x002f: INVOKE  (r15 I:int) = \l  (r14 I:android.support.v4.provider.FontsContractCompat$FontInfo)\l android.support.v4.provider.FontsContractCompat.FontInfo.getWeight():int type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004c, all \-\> 0x0049 \}]\l0x0033: INVOKE  (r13 I:android.graphics.Typeface$Builder) = (r13 I:android.graphics.Typeface$Builder), (r15 I:int) android.graphics.Typeface.Builder.setWeight(int):android.graphics.Typeface$Builder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004c, all \-\> 0x0049 \}]\l0x0037: INVOKE  (r14 I:boolean) = \l  (r14 I:android.support.v4.provider.FontsContractCompat$FontInfo)\l android.support.v4.provider.FontsContractCompat.FontInfo.isItalic():boolean type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004c, all \-\> 0x0049 \}]\l0x003b: INVOKE  (r13 I:android.graphics.Typeface$Builder) = (r13 I:android.graphics.Typeface$Builder), (r14 I:boolean) android.graphics.Typeface.Builder.setItalic(boolean):android.graphics.Typeface$Builder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004c, all \-\> 0x0049 \}]\l0x003f: INVOKE  (r13 I:android.graphics.Typeface) = (r13 I:android.graphics.Typeface$Builder) android.graphics.Typeface.Builder.build():android.graphics.Typeface type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004c, all \-\> 0x0049 \}]\l0x0042: NOP   A[TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0043|0x0043: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0048 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0045|SYNTHETIC\lSplitter:B:15:0x0045\l}"];
Node_16 [shape=record,label="{16\:\ ?|Splitter:B:15:0x0045\l|0x0045: INVOKE  (r12 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0063 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|0x0048: RETURN  (r13 I:android.graphics.Typeface) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0049|ExcHandler: all null\lSplitter:B:12:0x0026\l|0x0049: MOVE_EXCEPTION  (r13 I:?[OBJECT]) =  \l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|0x004a: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x004c|ExcHandler: Throwable null\lSplitter:B:12:0x0026\l|0x004c: MOVE_EXCEPTION  (r13 I:?[OBJECT]) =  \l}"];
Node_21 [shape=record,label="{21\:\ 0x004d|SYNTHETIC\lSplitter:B:21:0x004d\l}"];
Node_22 [shape=record,label="{22\:\ ?|Splitter:B:21:0x004d\l|0x004d: THROW  (r13 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x004e \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x004e|ExcHandler: all null\lSplitter:B:21:0x004d\l|0x004e: MOVE_EXCEPTION  (r14 I:?[OBJECT]) =  \l}"];
Node_24 [shape=record,label="{24\:\ 0x004f|0x004f: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0050: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0051: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0052|0x0052: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0062 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0054|0x0054: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x005f \l}"];
Node_27 [shape=record,label="{27\:\ 0x0056|SYNTHETIC\lSplitter:B:27:0x0056\l}"];
Node_28 [shape=record,label="{28\:\ ?|Splitter:B:27:0x0056\l|0x0056: INVOKE  (r12 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.close():void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x005a \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x005a|ExcHandler: Throwable null\lSplitter:B:27:0x0056\l|0x005a: MOVE_EXCEPTION  (r12 I:?[OBJECT]) =  \l}"];
Node_31 [shape=record,label="{31\:\ 0x005b|SYNTHETIC\lSplitter:B:31:0x005b\l}"];
Node_32 [shape=record,label="{32\:\ ?|Splitter:B:31:0x005b\l|0x005b: INVOKE  (r14 I:java.lang.Throwable), (r12 I:java.lang.Throwable) java.lang.Throwable.addSuppressed(java.lang.Throwable):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0063 \}, TRY_ENTER]\l0x005e: GOTO  \-\> 0x0062 A[Catch:\{ IOException \-\> 0x0063 \}]\l}"];
Node_33 [shape=record,label="{33\:\ 0x005f|0x005f: INVOKE  (r12 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0063 \}]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0062|0x0062: THROW  (r13 I:java.lang.Throwable) A[Catch:\{ IOException \-\> 0x0063 \}, TRY_LEAVE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0063|0x0063: RETURN  (r2 I:android.graphics.Typeface) \l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:6:0x0014\l}"];
Node_37 [shape=record,label="{37\:\ 0x0064|0x0064: INVOKE  (r12 I:java.util.Map) = \l  (r12 I:android.content.Context)\l  (r14 I:android.support.v4.provider.FontsContractCompat$FontInfo[])\l  (r13 I:android.os.CancellationSignal)\l android.support.v4.provider.FontsContractCompat.prepareFontData(android.content.Context, android.support.v4.provider.FontsContractCompat$FontInfo[], android.os.CancellationSignal):java.util.Map type: STATIC \l0x0068: INVOKE  (r13 I:java.lang.Object) = (r11 I:android.support.v4.graphics.TypefaceCompatApi26Impl) android.support.v4.graphics.TypefaceCompatApi26Impl.newFamily():java.lang.Object type: DIRECT \l0x006c: ARRAY_LENGTH  (r0 I:int) = (r14 I:?[]) \l0x006d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006e: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_38 [shape=record,label="{38\:\ 0x006f|0x006f: IF  (r9 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:48:0x009c \l}"];
Node_39 [shape=record,label="{39\:\ 0x0071|0x0071: AGET  (r4 I:?[OBJECT, ARRAY]) = \l  (r14 I:?[OBJECT, ARRAY][])\l  (r9 I:?[int, short, byte, char])\l \l0x0073: INVOKE  (r5 I:android.net.Uri) = \l  (r4 I:android.support.v4.provider.FontsContractCompat$FontInfo)\l android.support.v4.provider.FontsContractCompat.FontInfo.getUri():android.net.Uri type: VIRTUAL \l0x0077: INVOKE  (r5 I:java.lang.Object) = (r12 I:java.util.Map), (r5 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x007b: CHECK_CAST  (r5 I:java.nio.ByteBuffer) = (java.nio.ByteBuffer) (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x007d|0x007d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0080 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0080|0x0080: INVOKE  (r6 I:int) = \l  (r4 I:android.support.v4.provider.FontsContractCompat$FontInfo)\l android.support.v4.provider.FontsContractCompat.FontInfo.getTtcIndex():int type: VIRTUAL \l0x0084: INVOKE  (r7 I:int) = \l  (r4 I:android.support.v4.provider.FontsContractCompat$FontInfo)\l android.support.v4.provider.FontsContractCompat.FontInfo.getWeight():int type: VIRTUAL \l0x0088: INVOKE  (r8 I:boolean) = \l  (r4 I:android.support.v4.provider.FontsContractCompat$FontInfo)\l android.support.v4.provider.FontsContractCompat.FontInfo.isItalic():boolean type: VIRTUAL \l0x008c: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x008d: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x008e: INVOKE  (r3 I:boolean) = \l  (r3 I:android.support.v4.graphics.TypefaceCompatApi26Impl)\l  (r4 I:java.lang.Object)\l  (r5 I:java.nio.ByteBuffer)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l android.support.v4.graphics.TypefaceCompatApi26Impl.addFontFromBuffer(java.lang.Object, java.nio.ByteBuffer, int, int, int):boolean type: DIRECT \l}"];
Node_43 [shape=record,label="{43\:\ 0x0092|0x0092: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0098 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0094|0x0094: INVOKE  \l  (r11 I:android.support.v4.graphics.TypefaceCompatApi26Impl)\l  (r13 I:java.lang.Object)\l android.support.v4.graphics.TypefaceCompatApi26Impl.abortCreation(java.lang.Object):void type: DIRECT \l}"];
Node_45 [shape=record,label="{45\:\ 0x0097|0x0097: RETURN  (r2 I:android.graphics.Typeface) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0098|0x0098: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0099|0x0099: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l}"];
Node_48 [shape=record,label="{48\:\ 0x009c|0x009c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x00a2 \l}"];
Node_49 [shape=record,label="{49\:\ 0x009e|0x009e: INVOKE  \l  (r11 I:android.support.v4.graphics.TypefaceCompatApi26Impl)\l  (r13 I:java.lang.Object)\l android.support.v4.graphics.TypefaceCompatApi26Impl.abortCreation(java.lang.Object):void type: DIRECT \l}"];
Node_50 [shape=record,label="{50\:\ 0x00a1|0x00a1: RETURN  (r2 I:android.graphics.Typeface) \l}"];
Node_51 [shape=record,label="{51\:\ 0x00a2|0x00a2: INVOKE  (r12 I:boolean) = \l  (r11 I:android.support.v4.graphics.TypefaceCompatApi26Impl)\l  (r13 I:java.lang.Object)\l android.support.v4.graphics.TypefaceCompatApi26Impl.freeze(java.lang.Object):boolean type: DIRECT \l}"];
Node_52 [shape=record,label="{52\:\ 0x00a6|0x00a6: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00a9 \l}"];
Node_53 [shape=record,label="{53\:\ 0x00a8|0x00a8: RETURN  (r2 I:android.graphics.Typeface) \l}"];
Node_54 [shape=record,label="{54\:\ 0x00a9|0x00a9: INVOKE  (r12 I:android.graphics.Typeface) = \l  (r11 I:android.support.v4.graphics.TypefaceCompatApi26Impl)\l  (r13 I:java.lang.Object)\l android.support.v4.graphics.TypefaceCompatApi26Impl.createFromFamiliesWithDefault(java.lang.Object):android.graphics.Typeface type: VIRTUAL \l0x00ad: INVOKE  (r12 I:android.graphics.Typeface) = (r12 I:android.graphics.Typeface), (r15 I:int) android.graphics.Typeface.create(android.graphics.Typeface, int):android.graphics.Typeface type: STATIC \l}"];
Node_55 [shape=record,label="{55\:\ 0x00b1|0x00b1: RETURN  (r12 I:android.graphics.Typeface) \l}"];
MethodNode[shape=record,label="{public android.graphics.Typeface android.support.v4.graphics.TypefaceCompatApi26Impl.createFromFontInfo((r11 'this' I:android.support.v4.graphics.TypefaceCompatApi26Impl A[IMMUTABLE_TYPE, THIS]), (r12 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:android.os.CancellationSignal A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:android.support.v4.provider.FontsContractCompat$FontInfo[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_37;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_36;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_20;
Node_12 -> Node_18;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_15 -> Node_36;
Node_16 -> Node_17;
Node_16 -> Node_36;
Node_18 -> Node_19;
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_34;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_33;
Node_27 -> Node_28;
Node_27 -> Node_30;
Node_28 -> Node_30;
Node_28 -> Node_34;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_36;
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_36 -> Node_35;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_48;
Node_39 -> Node_40;
Node_40 -> Node_42;
Node_40 -> Node_47[style=dashed];
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_46;
Node_44 -> Node_45;
Node_46 -> Node_47;
Node_47 -> Node_38;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_51;
Node_49 -> Node_50;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_54 -> Node_55;
}

