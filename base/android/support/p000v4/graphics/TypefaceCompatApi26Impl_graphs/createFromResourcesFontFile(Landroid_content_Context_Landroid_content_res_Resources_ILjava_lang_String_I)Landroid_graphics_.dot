digraph "CFG forandroid.support.v4.graphics.TypefaceCompatApi26Impl.createFromResourcesFontFile(Landroid\/content\/Context;Landroid\/content\/res\/Resources;ILjava\/lang\/String;I)Landroid\/graphics\/Typeface;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (isFontFamilyPrivateAPIAvailable() != false) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return super.createFromResourcesFontFile(r9, r10, r11, r12, r13)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|java.lang.Object r10 = newFamily()\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|if (addFontFromAssetManager(r9, r10, r12, 0, \-1, \-1, (android.graphics.fonts.FontVariationAxis[]) null) != false) goto L_0x0022\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|abortCreation(r10)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|RETURN\l|return null\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022}"];
Node_9 [shape=record,label="{9\:\ 0x0026|if (freeze(r10) != false) goto L_0x0029\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|RETURN\l|return null\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029}"];
Node_12 [shape=record,label="{12\:\ 0x002d|RETURN\l|return createFromFamiliesWithDefault(r10)\l}"];
MethodNode[shape=record,label="{public android.graphics.Typeface android.support.v4.graphics.TypefaceCompatApi26Impl.createFromResourcesFontFile((r8v0 'this' android.support.v4.graphics.TypefaceCompatApi26Impl A[IMMUTABLE_TYPE, THIS]), (r9v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12;
}

