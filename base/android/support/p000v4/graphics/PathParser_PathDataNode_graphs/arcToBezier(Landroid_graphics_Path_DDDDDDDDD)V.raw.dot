digraph "CFG forandroid.support.v4.graphics.PathParser.PathDataNode.arcToBezier(Landroid\/graphics\/Path;DDDDDDDDD)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[long, double]) = (r60 I:?[long, double]) \l0x0002: CONST  (r6 I:?[long, double]) = \l  (4616189618054758400(0x4010000000000000, double:4.0) ?[long, double])\l \l0x0004: ARITH  (r8 I:double) = (r72 I:double) * (r6 I:double) \l0x0006: CONST  (r10 I:?[long, double]) = \l  (4614256656552045848(0x400921fb54442d18, double:3.141592653589793) ?[long, double])\l \l0x000b: ARITH  (r8 I:double) = (r8 I:double) \/ (r10 I:double) \l0x000c: INVOKE  (r8 I:double) = (r8 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0010: INVOKE  (r8 I:double) = (r8 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x0014: CAST  (r8 I:int) = (int) (r8 I:double) \l0x0015: INVOKE  (r9 I:double) = (r68 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0019: INVOKE  (r11 I:double) = (r68 I:double) java.lang.Math.sin(double):double type: STATIC \l0x001d: INVOKE  (r13 I:double) = (r70 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0021: INVOKE  (r15 I:double) = (r70 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0025: NEG  (r6 I:double) = (r0 I:double) \l0x0026: ARITH  (r18 I:double) = (r6 I:double) * (r9 I:double) \l0x0028: ARITH  (r20 I:double) = (r18 I:double) * (r15 I:double) \l0x002a: ARITH  (r22 I:double) = (r62 I:double) * (r11 I:double) \l0x002c: ARITH  (r24 I:double) = (r22 I:double) * (r13 I:double) \l0x002e: ARITH  (r20 I:double) = (r20 I:double) \- (r24 I:double) \l0x0030: ARITH  (r6 I:double) = (r6 I:double) * (r11 I:double) \l0x0032: ARITH  (r15 I:double) = (r15 I:double) * (r6 I:double) \l0x0034: ARITH  (r2 I:double) = (r62 I:double) * (r9 I:double) \l0x0036: ARITH  (r13 I:double) = (r13 I:double) * (r2 I:double) \l0x0038: ARITH  (r15 I:double) = (r15 I:double) + (r13 I:double) \l0x0039: CAST  (r13 I:double) = (double) (r8 I:int) \l0x003a: ARITH  (r4 I:double) = (r72 I:double) \/ (r13 I:double) \l0x003c: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003d: MOVE  (r26 I:?[long, double]) = (r66 I:?[long, double]) \l0x003f: MOVE  (r28 I:?[long, double]) = (r15 I:?[long, double]) \l0x0041: MOVE  (r24 I:?[long, double]) = (r20 I:?[long, double]) \l0x0043: MOVE  (r20 I:?[long, double]) = (r64 I:?[long, double]) \l0x0045: MOVE  (r14 I:?[long, double]) = (r70 I:?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0047|0x0047: IF  (r13 I:?[int, byte, short, char]) \>= (r8 I:?[int, byte, short, char])  \-\> B:3:0x00ec \l}"];
Node_2 [shape=record,label="{2\:\ 0x0049|0x0049: ARITH  (r30 I:double) = (r14 I:double) + (r4 I:double) \l0x004b: INVOKE  (r32 I:double) = (r30 I:double) java.lang.Math.sin(double):double type: STATIC \l0x004f: INVOKE  (r34 I:double) = (r30 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0053: ARITH  (r36 I:double) = (r0 I:double) * (r9 I:double) \l0x0055: ARITH  (r36 I:double) = (r36 I:double) * (r34 I:double) \l0x0057: ARITH  (r36 I:double) = (r56 I:double) + (r36 I:double) \l0x0059: ARITH  (r38 I:double) = (r22 I:double) * (r32 I:double) \l0x005b: MOVE  (r40 I:?[long, double]) = (r4 I:?[long, double]) \l0x005d: ARITH  (r4 I:double) = (r36 I:double) \- (r38 I:double) \l0x005f: ARITH  (r36 I:double) = (r0 I:double) * (r11 I:double) \l0x0061: ARITH  (r36 I:double) = (r36 I:double) * (r34 I:double) \l0x0063: ARITH  (r36 I:double) = (r58 I:double) + (r36 I:double) \l0x0065: ARITH  (r42 I:double) = (r2 I:double) * (r32 I:double) \l0x0067: ARITH  (r0 I:double) = (r36 I:double) + (r42 I:double) \l0x0069: ARITH  (r36 I:double) = (r18 I:double) * (r32 I:double) \l0x006b: ARITH  (r42 I:double) = (r22 I:double) * (r34 I:double) \l0x006d: ARITH  (r36 I:double) = (r36 I:double) \- (r42 I:double) \l0x006f: ARITH  (r32 I:double) = (r32 I:double) * (r6 I:double) \l0x0071: ARITH  (r34 I:double) = (r34 I:double) * (r2 I:double) \l0x0073: ARITH  (r32 I:double) = (r32 I:double) + (r34 I:double) \l0x0075: ARITH  (r14 I:double) = (r30 I:double) \- (r14 I:double) \l0x0077: CONST  (r34 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x0079: ARITH  (r34 I:double) = (r14 I:double) \/ (r34 I:double) \l0x007b: INVOKE  (r34 I:double) = (r34 I:double) java.lang.Math.tan(double):double type: STATIC \l0x007f: INVOKE  (r14 I:double) = (r14 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0083: CONST  (r42 I:?[long, double]) = \l  (4613937818241073152(0x4008000000000000, double:3.0) ?[long, double])\l \l0x0085: ARITH  (r44 I:double) = (r34 I:double) * (r42 I:double) \l0x0087: ARITH  (r44 I:double) = (r44 I:double) * (r34 I:double) \l0x0089: CONST  (r16 I:?[long, double]) = \l  (4616189618054758400(0x4010000000000000, double:4.0) ?[long, double])\l \l0x008b: ARITH  (r44 I:double) = (r44 I:double) + (r16 I:double) \l0x008d: INVOKE  (r34 I:double) = (r44 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0091: CONST  (r44 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0093: ARITH  (r34 I:double) = (r34 I:double) \- (r44 I:double) \l0x0095: ARITH  (r14 I:double) = (r14 I:double) * (r34 I:double) \l0x0097: ARITH  (r14 I:double) = (r14 I:double) \/ (r42 I:double) \l0x0099: ARITH  (r24 I:double) = (r24 I:double) * (r14 I:double) \l0x009b: MOVE  (r46 I:?[long, double]) = (r2 I:?[long, double]) \l0x009d: ARITH  (r2 I:double) = (r20 I:double) + (r24 I:double) \l0x009f: ARITH  (r28 I:double) = (r28 I:double) * (r14 I:double) \l0x00a1: MOVE  (r48 I:?[long, double]) = (r6 I:?[long, double]) \l0x00a3: ARITH  (r6 I:double) = (r26 I:double) + (r28 I:double) \l0x00a5: ARITH  (r20 I:double) = (r14 I:double) * (r36 I:double) \l0x00a7: MOVE  (r50 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a9: MOVE  (r51 I:?[long, double]) = (r9 I:?[long, double]) \l0x00ab: ARITH  (r8 I:double) = (r4 I:double) \- (r20 I:double) \l0x00ad: ARITH  (r14 I:double) = (r14 I:double) * (r32 I:double) \l0x00af: ARITH  (r14 I:double) = (r0 I:double) \- (r14 I:double) \l0x00b1: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b2: MOVE  (r53 I:?[long, double]) = (r11 I:?[long, double]) \l0x00b4: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r55 I:?[OBJECT, ARRAY]) \l0x00b6: INVOKE  (r11 I:android.graphics.Path), (r10 I:float), (r10 I:float) android.graphics.Path.rLineTo(float, float):void type: VIRTUAL \l0x00b9: CAST  (r2 I:float) = (float) (r2 I:double) \l0x00ba: CAST  (r3 I:float) = (float) (r6 I:double) \l0x00bb: CAST  (r6 I:float) = (float) (r8 I:double) \l0x00bc: CAST  (r7 I:float) = (float) (r14 I:double) \l0x00bd: CAST  (r8 I:float) = (float) (r4 I:double) \l0x00be: CAST  (r9 I:float) = (float) (r0 I:double) \l0x00bf: MOVE  (r62 I:?[OBJECT, ARRAY]) = (r55 I:?[OBJECT, ARRAY]) \l0x00c1: MOVE  (r63 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00c3: MOVE  (r64 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00c5: MOVE  (r65 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00c7: MOVE  (r66 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00c9: MOVE  (r67 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00cb: MOVE  (r68 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00cd: INVOKE  \l  (r62 I:android.graphics.Path)\l  (r63 I:float)\l  (r64 I:float)\l  (r65 I:float)\l  (r66 I:float)\l  (r67 I:float)\l  (r68 I:float)\l android.graphics.Path.cubicTo(float, float, float, float, float, float):void type: VIRTUAL \l0x00d0: ARITH  (r13 I:int) = (r13 I:int) + (1 int) \l0x00d2: MOVE  (r26 I:?[long, double]) = (r0 I:?[long, double]) \l0x00d4: MOVE  (r20 I:?[long, double]) = (r4 I:?[long, double]) \l0x00d6: MOVE  (r14 I:?[long, double]) = (r30 I:?[long, double]) \l0x00d8: MOVE  (r28 I:?[long, double]) = (r32 I:?[long, double]) \l0x00da: MOVE  (r24 I:?[long, double]) = (r36 I:?[long, double]) \l0x00dc: MOVE  (r4 I:?[long, double]) = (r40 I:?[long, double]) \l0x00de: MOVE  (r2 I:?[long, double]) = (r46 I:?[long, double]) \l0x00e0: MOVE  (r6 I:?[long, double]) = (r48 I:?[long, double]) \l0x00e2: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r50 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00e4: MOVE  (r9 I:?[long, double]) = (r51 I:?[long, double]) \l0x00e6: MOVE  (r11 I:?[long, double]) = (r53 I:?[long, double]) \l0x00e8: MOVE  (r0 I:?[long, double]) = (r60 I:?[long, double]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x00ec|0x00ec: RETURN   \l}"];
MethodNode[shape=record,label="{private static void android.support.v4.graphics.PathParser.PathDataNode.arcToBezier((r55 I:android.graphics.Path A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r56 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r58 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r60 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r62 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r64 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r66 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r68 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r70 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r72 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

