digraph "CFG forandroid.support.v4.graphics.PathParser.PathDataNode.drawArc(Landroid\/graphics\/Path;FFFFFFFZZ)V" {
subgraph cluster_Region_1724706022 {
label = "R(2:0|(2:(2:2|3)|(2:4|(2:(2:6|7)|(5:8|(1:10)(1:11)|12|(1:18)|21))))) | DECL_VAR: double null, double null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|float r1 = r42\lfloat r3 = r44\lfloat r0 = r46\lboolean r9 = r50\ldouble double r19 = java.lang.Math.toRadians((double) r48)\ldouble double r4 = java.lang.Math.cos(r19)\ldouble double r10 = java.lang.Math.sin(r19)\ldouble double r13 = (double) r1\ldouble double r15 = r13 * r4\ldouble r25 = r13\ldouble double r13 = (double) r43\ldouble double r6 = (double) r0\ldouble double r15 = (r15 + (r13 * r10)) \/ r6\ldouble r27 = r13\ldouble double r13 = (double) r47\ldouble r29 = ((((double) (\-r1)) * r10) + (r13 * r4)) \/ r13\ldouble double r8 = (double) r45\ldouble double r1 = ((((double) r3) * r4) + (r8 * r10)) \/ r6\ldouble r31 = r6\ldouble double r6 = ((((double) (\-r3)) * r10) + (r8 * r4)) \/ r13\ldouble double r8 = r15 \- r1\ldouble double r17 = r29 \- r6\ldouble double r21 = (r15 + r1) \/ 2.0d\ldouble double r33 = (r29 + r6) \/ 2.0d\ldouble r37 = r10\ldouble double r10 = (r8 * r8) + (r17 * r17)\l}"];
subgraph cluster_Region_2080151931 {
label = "R(2:(2:2|3)|(2:4|(2:(2:6|7)|(5:8|(1:10)(1:11)|12|(1:18)|21))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1126377666 {
label = "IF [B:1:0x0064] THEN: R(2:2|3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0064|if (r10 == 0.0d) goto L_0x0066\l}"];
subgraph cluster_Region_1650015763 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0066|android.util.Log.w(android.support.p000v4.graphics.PathParser.LOGTAG, \" Points are coincident\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x006d|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_296259965 {
label = "R(2:4|(2:(2:6|7)|(5:8|(1:10)(1:11)|12|(1:18)|21)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x006e|double double r35 = (1.0d \/ r10) \- 0.25d\l}"];
subgraph cluster_Region_1937301556 {
label = "R(2:(2:6|7)|(5:8|(1:10)(1:11)|12|(1:18)|21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_76319306 {
label = "IF [B:5:0x0078] THEN: R(2:6|7) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0078|if (r35 \< 0.0d) goto L_0x007a\l}"];
subgraph cluster_Region_121266925 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x007a|android.util.Log.w(android.support.p000v4.graphics.PathParser.LOGTAG, \"Points are too far apart \" + r10)\lfloat float r1 = (float) (java.lang.Math.sqrt(r10) \/ 1.99999d)\ldrawArc(r41, r42, r43, r44, r45, r0 * r1, r47 * r1, r48, r49, r50)\l}"];
Node_7 [shape=record,label="{7\:\ 0x00b4|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_358146083 {
label = "R(5:8|(1:10)(1:11)|12|(1:18)|21)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x00b5|double double r10 = java.lang.Math.sqrt(r35)\ldouble double r8 = r8 * r10\ldouble double r10 = r10 * r17\lboolean r3 = r50\l}"];
subgraph cluster_IfRegion_1132417912 {
label = "IF [B:9:0x00c1] THEN: R(1:10) ELSE: R(1:11)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x00c1|if (r49 == r3) goto L_0x00c3\l}"];
subgraph cluster_Region_384858154 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x00c3|double r21 = r21 \- r10\ldouble r33 = r33 + r8\l}"];
}
subgraph cluster_Region_391781838 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x00c8|double r21 = r21 + r10\ldouble r33 = r33 \- r8\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x00cd|PHI: r21 r33 \l  PHI: (r21v2 double) = (r21v6 double), (r21v7 double) binds: [B:11:0x00c8, B:10:0x00c3] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r33v2 double) = (r33v5 double), (r33v6 double) binds: [B:11:0x00c8, B:10:0x00c3] A[DONT_GENERATE, DONT_INLINE]\l|double double r29 = java.lang.Math.atan2(r29 \- r33, r15 \- r21)\ldouble double r0 = java.lang.Math.atan2(r6 \- r33, r1 \- r21) \- r29\lint int r2 = (r0 \> 0.0d ? 1 : (r0 == 0.0d ? 0 : \-1))\l}"];
subgraph cluster_IfRegion_432015085 {
label = "IF [B:16:0x00e7] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x00e7|PHI: r6 \l  PHI: (r6v7 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 != (r2 \>= 0)) goto L_0x00e9\l}"];
subgraph cluster_Region_1287016401 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x00ee|double r0 = r2 \> 0 ? r0 \- 6.283185307179586d : r0 + 6.283185307179586d\l}"];
}
}
Node_21 [shape=record,label="{21\:\ 0x00f4|PHI: r0 \l  PHI: (r0v5 double) = (r0v4 double), (r0v10 double) binds: [B:16:0x00e7, B:19:0x00f0] A[DONT_GENERATE, DONT_INLINE]\l|double double r21 = r21 * r31\ldouble double r33 = r33 * r13\larcToBezier(r41, (r21 * r4) \- (r33 * r37), (r21 * r37) + (r33 * r4), r31, r13, r25, r27, r19, r29, r0)\l}"];
}
}
}
}
}
Node_13 [shape=record,color=red,label="{13\:\ 0x00e2}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x00e4}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x00e6}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x00e9}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x00f0}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x00f2}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0118}"];
MethodNode[shape=record,label="{private static void android.support.v4.graphics.PathParser.PathDataNode.drawArc((r41v0 android.graphics.Path A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r42v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r43v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r44v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r45v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r46v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r47v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r48v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r49v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r50v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_16 -> Node_17;
Node_16 -> Node_21[style=dashed];
Node_18 -> Node_19;
Node_18 -> Node_20;
Node_21 -> Node_22;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_21;
Node_20 -> Node_21;
}

