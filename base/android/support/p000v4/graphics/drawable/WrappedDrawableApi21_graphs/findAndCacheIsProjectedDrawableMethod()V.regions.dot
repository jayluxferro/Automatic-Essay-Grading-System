digraph "CFG forandroid.support.v4.graphics.drawable.WrappedDrawableApi21.findAndCacheIsProjectedDrawableMethod()V" {
subgraph cluster_Region_501267439 {
label = "R(1:(1:(1:4))(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1930323733 {
label = "IF [B:1:0x0002] THEN: R(1:(1:4)) ELSE: R(0)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (sIsProjectedDrawableMethod == null) goto L_0x0004\l}"];
subgraph cluster_Region_161572033 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_371670163 {
label = "Try: R(1:4) catches: R(2:5|6)";
node [shape=record,color=blue];
subgraph cluster_Region_234930811 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ Exception \-\> 0x0012 \}\lSplitter:B:3:0x0009\l|sIsProjectedDrawableMethod = android.graphics.drawable.Drawable.class.getDeclaredMethod(\"isProjected\", new java.lang.Class[0])     \/\/ Catch:\{ Exception \-\> 0x0012 \}\l}"];
}
subgraph cluster_Region_238434913 {
label = "R(2:5|6) | ExcHandler: Exception (r0v2 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|ExcHandler: Exception (r0v2 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:3:0x0009\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|android.util.Log.w(TAG, \"Failed to retrieve Drawable#isProjected() method\", r0)\l}"];
}
}
}
subgraph cluster_Region_204722186 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_238434913 {
label = "R(2:5|6) | ExcHandler: Exception (r0v2 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|ExcHandler: Exception (r0v2 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:3:0x0009\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|android.util.Log.w(TAG, \"Failed to retrieve Drawable#isProjected() method\", r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0009|SYNTHETIC\lSplitter:B:3:0x0009\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.v4.graphics.drawable.WrappedDrawableApi21.findAndCacheIsProjectedDrawableMethod((r3v0 'this' android.support.v4.graphics.drawable.WrappedDrawableApi21 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_8[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
}

