digraph "CFG forandroid.support.v4.graphics.drawable.WrappedDrawableApi21.findAndCacheIsProjectedDrawableMethod()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:java.lang.reflect.Method) =  android.support.v4.graphics.drawable.WrappedDrawableApi21.sIsProjectedDrawableMethod java.lang.reflect.Method \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST_CLASS  (r0 I:java.lang.Class\<android.graphics.drawable.Drawable\>) =  android.graphics.drawable.Drawable.class \l0x0006: CONST_STR  (r1 I:java.lang.String) =  \"isProjected\" \l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|SYNTHETIC\lSplitter:B:3:0x0009\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0009\l|0x0009: NEW_ARRAY  (r2 I:java.lang.Class[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ Exception \-\> 0x0012 \}, TRY_ENTER]\l0x000b: INVOKE  (r0 I:java.lang.reflect.Method) = \l  (r0 I:java.lang.Class)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Class[])\l java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method type: VIRTUAL A[Catch:\{ Exception \-\> 0x0012 \}]\l0x000f: SPUT  (r0 I:java.lang.reflect.Method) android.support.v4.graphics.drawable.WrappedDrawableApi21.sIsProjectedDrawableMethod java.lang.reflect.Method A[Catch:\{ Exception \-\> 0x0012 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|ExcHandler: Exception null\lSplitter:B:3:0x0009\l|0x0012: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: CONST_STR  (r1 I:java.lang.String) =  \"WrappedDrawableApi21\" \l0x0015: CONST_STR  (r2 I:java.lang.String) =  \"Failed to retrieve Drawable#isProjected() method\" \l0x0017: INVOKE  \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v4.graphics.drawable.WrappedDrawableApi21.findAndCacheIsProjectedDrawableMethod((r3 'this' I:android.support.v4.graphics.drawable.WrappedDrawableApi21 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_6;
Node_4 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

