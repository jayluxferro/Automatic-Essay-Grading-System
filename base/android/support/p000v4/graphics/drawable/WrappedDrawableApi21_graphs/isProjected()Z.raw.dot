digraph "CFG forandroid.support.v4.graphics.drawable.WrappedDrawableApi21.isProjected()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable) = \l  (r4 I:android.support.v4.graphics.drawable.WrappedDrawableApi21)\l android.support.v4.graphics.drawable.WrappedDrawableApi21.mDrawable android.graphics.drawable.Drawable \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: SGET  (r0 I:java.lang.reflect.Method) =  android.support.v4.graphics.drawable.WrappedDrawableApi21.sIsProjectedDrawableMethod java.lang.reflect.Method \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0022 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|SYNTHETIC\lSplitter:B:4:0x0009\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x0009\l|0x0009: SGET  (r0 I:java.lang.reflect.Method) =  android.support.v4.graphics.drawable.WrappedDrawableApi21.sIsProjectedDrawableMethod java.lang.reflect.Method A[Catch:\{ Exception \-\> 0x001a \}, TRY_ENTER]\l0x000b: IGET  (r2 I:android.graphics.drawable.Drawable) = \l  (r4 I:android.support.v4.graphics.drawable.WrappedDrawableApi21)\l android.support.v4.graphics.drawable.WrappedDrawableApi21.mDrawable android.graphics.drawable.Drawable A[Catch:\{ Exception \-\> 0x001a \}]\l0x000d: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ Exception \-\> 0x001a \}]\l0x000f: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Method)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object[])\l java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ Exception \-\> 0x001a \}]\l0x0013: CHECK_CAST  (r0 I:java.lang.Boolean) = (java.lang.Boolean) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x001a \}]\l0x0015: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x001a \}]\l0x0018: NOP   A[TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: RETURN  (r0 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|ExcHandler: Exception null\lSplitter:B:4:0x0009\l|0x001a: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: CONST_STR  (r2 I:java.lang.String) =  \"WrappedDrawableApi21\" \l0x001d: CONST_STR  (r3 I:java.lang.String) =  \"Error calling Drawable#isProjected() method\" \l0x001f: INVOKE  \l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.v4.graphics.drawable.WrappedDrawableApi21.isProjected((r4 'this' I:android.support.v4.graphics.drawable.WrappedDrawableApi21 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

