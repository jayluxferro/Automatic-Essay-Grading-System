digraph "CFG forandroid.support.v4.graphics.drawable.IconCompat.addToShortcutIntent(Landroid\/content\/Intent;Landroid\/graphics\/drawable\/Drawable;Landroid\/content\/Context;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r4 I:android.support.v4.graphics.drawable.IconCompat)\l  (r7 I:android.content.Context)\l android.support.v4.graphics.drawable.IconCompat.checkResource(android.content.Context):void type: VIRTUAL \l0x0003: IGET  (r0 I:int) = (r4 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mType int \l0x0005: CONST  (r1 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0006: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x009c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2] t:[0x008d, 0x0014] \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: NEW_INSTANCE  (r5 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x000e: CONST_STR  (r6 I:java.lang.String) =  \"Icon type not supported for intent shortcuts\" \l0x0010: INVOKE  \l  (r5 I:java.lang.IllegalArgumentException)\l  (r6 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|SYNTHETIC\lSplitter:B:5:0x0014\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0014\l|0x0014: INVOKE  (r0 I:java.lang.String) = (r4 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.getResPackage():java.lang.String type: VIRTUAL A[Catch:\{ NameNotFoundException \-\> 0x0073 \}, TRY_ENTER]\l0x0018: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x0019: INVOKE  (r7 I:android.content.Context) = \l  (r7 I:android.content.Context)\l  (r0 I:java.lang.String)\l  (r1 I:int)\l android.content.Context.createPackageContext(java.lang.String, int):android.content.Context type: VIRTUAL A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002b A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: CONST_STR  (r6 I:java.lang.String) =  \"android.intent.extra.shortcut.ICON_RESOURCE\" A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x0021: IGET  (r0 I:int) = (r4 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mInt1 int A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x0023: INVOKE  (r7 I:android.content.Intent$ShortcutIconResource) = (r7 I:android.content.Context), (r0 I:int) android.content.Intent.ShortcutIconResource.fromContext(android.content.Context, int):android.content.Intent$ShortcutIconResource type: STATIC A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x0027: INVOKE  \l  (r5 I:android.content.Intent)\l  (r6 I:java.lang.String)\l  (r7 I:android.os.Parcelable)\l android.content.Intent.putExtra(java.lang.String, android.os.Parcelable):android.content.Intent type: VIRTUAL A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: RETURN   A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: IGET  (r0 I:int) = (r4 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mInt1 int A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x002d: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r7 I:android.content.Context), (r0 I:int) android.support.v4.content.ContextCompat.getDrawable(android.content.Context, int):android.graphics.drawable.Drawable type: STATIC A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x0031: INVOKE  (r2 I:int) = (r0 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getIntrinsicWidth():int type: VIRTUAL A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:16:0x004d A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|0x0037: INVOKE  (r2 I:int) = (r0 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getIntrinsicHeight():int type: VIRTUAL A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|0x003b: IF  (r2 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:15:0x003e A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|0x003d: GOTO  \-\> 0x004d A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|0x003e: INVOKE  (r7 I:int) = (r0 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getIntrinsicWidth():int type: VIRTUAL A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x0042: INVOKE  (r2 I:int) = (r0 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getIntrinsicHeight():int type: VIRTUAL A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x0046: SGET  (r3 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x0048: INVOKE  (r7 I:android.graphics.Bitmap) = \l  (r7 I:int)\l  (r2 I:int)\l  (r3 I:android.graphics.Bitmap$Config)\l android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap type: STATIC A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x004c: GOTO  \-\> 0x005f A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x004d|0x004d: CONST_STR  (r2 I:java.lang.String) =  \"activity\" A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x004f: INVOKE  (r7 I:java.lang.Object) = (r7 I:android.content.Context), (r2 I:java.lang.String) android.content.Context.getSystemService(java.lang.String):java.lang.Object type: VIRTUAL A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x0053: CHECK_CAST  (r7 I:android.app.ActivityManager) = (android.app.ActivityManager) (r7 I:?[OBJECT, ARRAY]) A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x0055: INVOKE  (r7 I:int) = (r7 I:android.app.ActivityManager) android.app.ActivityManager.getLauncherLargeIconSize():int type: VIRTUAL A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x0059: SGET  (r2 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x005b: INVOKE  (r7 I:android.graphics.Bitmap) = \l  (r7 I:int)\l  (r7 I:int)\l  (r2 I:android.graphics.Bitmap$Config)\l android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap type: STATIC A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x005f|0x005f: INVOKE  (r2 I:int) = (r7 I:android.graphics.Bitmap) android.graphics.Bitmap.getWidth():int type: VIRTUAL A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x0063: INVOKE  (r3 I:int) = (r7 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x0067: INVOKE  \l  (r0 I:android.graphics.drawable.Drawable)\l  (r1 I:int)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:int)\l android.graphics.drawable.Drawable.setBounds(int, int, int, int):void type: VIRTUAL A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x006a: NEW_INSTANCE  (r1 I:android.graphics.Canvas) =  android.graphics.Canvas A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x006c: INVOKE  \l  (r1 I:android.graphics.Canvas)\l  (r7 I:android.graphics.Bitmap)\l android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void type: DIRECT A[Catch:\{ NameNotFoundException \-\> 0x0073 \}]\l0x006f: INVOKE  \l  (r0 I:android.graphics.drawable.Drawable)\l  (r1 I:android.graphics.Canvas)\l android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void type: VIRTUAL A[Catch:\{ NameNotFoundException \-\> 0x0073 \}, TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0073|ExcHandler: NameNotFoundException null\lSplitter:B:5:0x0014\l|0x0073: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_20 [shape=record,label="{20\:\ 0x0074|0x0074: NEW_INSTANCE  (r6 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0076: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0078: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x007b: CONST_STR  (r0 I:java.lang.String) =  \"Can't find package \" \l0x007d: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0080: IGET  (r0 I:java.lang.Object) = (r4 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mObj1 java.lang.Object \l0x0082: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0085: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0089: INVOKE  \l  (r6 I:java.lang.IllegalArgumentException)\l  (r7 I:java.lang.String)\l  (r5 I:java.lang.Throwable)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x008c|0x008c: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_22 [shape=record,label="{22\:\ 0x008d|0x008d: IGET  (r7 I:java.lang.Object) = (r4 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mObj1 java.lang.Object \l0x008f: CHECK_CAST  (r7 I:android.graphics.Bitmap) = (android.graphics.Bitmap) (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0091|0x0091: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x00a4 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0093|0x0093: INVOKE  (r0 I:android.graphics.Bitmap$Config) = (r7 I:android.graphics.Bitmap) android.graphics.Bitmap.getConfig():android.graphics.Bitmap$Config type: VIRTUAL \l0x0097: INVOKE  (r7 I:android.graphics.Bitmap) = \l  (r7 I:android.graphics.Bitmap)\l  (r0 I:android.graphics.Bitmap$Config)\l  (r2 I:boolean)\l android.graphics.Bitmap.copy(android.graphics.Bitmap$Config, boolean):android.graphics.Bitmap type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x009c|0x009c: IGET  (r7 I:java.lang.Object) = (r4 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mObj1 java.lang.Object \l0x009e: CHECK_CAST  (r7 I:android.graphics.Bitmap) = (android.graphics.Bitmap) (r7 I:?[OBJECT, ARRAY]) \l0x00a0: INVOKE  (r7 I:android.graphics.Bitmap) = (r7 I:android.graphics.Bitmap), (r2 I:boolean) android.support.v4.graphics.drawable.IconCompat.createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap, boolean):android.graphics.Bitmap type: STATIC \l}"];
Node_26 [shape=record,label="{26\:\ 0x00a4|0x00a4: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x00bd \l}"];
Node_27 [shape=record,label="{27\:\ 0x00a6|0x00a6: INVOKE  (r0 I:int) = (r7 I:android.graphics.Bitmap) android.graphics.Bitmap.getWidth():int type: VIRTUAL \l0x00aa: INVOKE  (r1 I:int) = (r7 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL \l0x00ae: ARITH  (r2 I:int) = (r0 I:int) \/ (2 int) \l0x00b0: ARITH  (r3 I:int) = (r1 I:int) \/ (2 int) \l0x00b2: INVOKE  \l  (r6 I:android.graphics.drawable.Drawable)\l  (r2 I:int)\l  (r3 I:int)\l  (r0 I:int)\l  (r1 I:int)\l android.graphics.drawable.Drawable.setBounds(int, int, int, int):void type: VIRTUAL \l0x00b5: NEW_INSTANCE  (r0 I:android.graphics.Canvas) =  android.graphics.Canvas \l0x00b7: INVOKE  \l  (r0 I:android.graphics.Canvas)\l  (r7 I:android.graphics.Bitmap)\l android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void type: DIRECT \l0x00ba: INVOKE  \l  (r6 I:android.graphics.drawable.Drawable)\l  (r0 I:android.graphics.Canvas)\l android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x00bd|0x00bd: CONST_STR  (r6 I:java.lang.String) =  \"android.intent.extra.shortcut.ICON\" \l0x00bf: INVOKE  \l  (r5 I:android.content.Intent)\l  (r6 I:java.lang.String)\l  (r7 I:android.os.Parcelable)\l android.content.Intent.putExtra(java.lang.String, android.os.Parcelable):android.content.Intent type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x00c2|0x00c2: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.graphics.drawable.IconCompat.addToShortcutIntent((r4 'this' I:android.support.v4.graphics.drawable.IconCompat A[IMMUTABLE_TYPE, THIS]), (r5 I:android.content.Intent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.RestrictTo, \{value=[android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP android.support.annotation.RestrictTo$Scope]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_25;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_2 -> Node_22;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_19;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_26;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
}

