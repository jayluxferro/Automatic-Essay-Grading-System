digraph "CFG forandroid.support.v4.graphics.drawable.IconCompat.loadDrawableInner(Landroid\/content\/Context;)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r6 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mType int \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5] t:[0x00e0, 0x00a6, 0x0090, 0x001b, 0x0009] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: NEW_INSTANCE  (r0 I:android.graphics.drawable.BitmapDrawable) =  android.graphics.drawable.BitmapDrawable \l0x000b: INVOKE  (r7 I:android.content.res.Resources) = (r7 I:android.content.Context) android.content.Context.getResources():android.content.res.Resources type: VIRTUAL \l0x000f: IGET  (r2 I:java.lang.Object) = (r6 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mObj1 java.lang.Object \l0x0011: CHECK_CAST  (r2 I:android.graphics.Bitmap) = (android.graphics.Bitmap) (r2 I:?[OBJECT, ARRAY]) \l0x0013: INVOKE  (r1 I:android.graphics.Bitmap) = (r2 I:android.graphics.Bitmap), (r1 I:boolean) android.support.v4.graphics.drawable.IconCompat.createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap, boolean):android.graphics.Bitmap type: STATIC \l0x0017: INVOKE  \l  (r0 I:android.graphics.drawable.BitmapDrawable)\l  (r7 I:android.content.res.Resources)\l  (r1 I:android.graphics.Bitmap)\l android.graphics.drawable.BitmapDrawable.\<init\>(android.content.res.Resources, android.graphics.Bitmap):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: IGET  (r0 I:java.lang.Object) = (r6 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mObj1 java.lang.Object \l0x001d: CHECK_CAST  (r0 I:java.lang.String) = (java.lang.String) (r0 I:?[OBJECT, ARRAY]) \l0x001f: INVOKE  (r0 I:android.net.Uri) = (r0 I:java.lang.String) android.net.Uri.parse(java.lang.String):android.net.Uri type: STATIC \l0x0023: INVOKE  (r1 I:java.lang.String) = (r0 I:android.net.Uri) android.net.Uri.getScheme():java.lang.String type: VIRTUAL \l0x0027: CONST_STR  (r3 I:java.lang.String) =  \"content\" \l0x0029: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|0x002d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x005f \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: CONST_STR  (r3 I:java.lang.String) =  \"file\" \l0x0031: INVOKE  (r1 I:boolean) = (r3 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0035|0x0035: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0038 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|SYNTHETIC\lSplitter:B:10:0x0038\l}"];
Node_11 [shape=record,label="{11\:\ ?|Splitter:B:10:0x0038\l|0x0038: NEW_INSTANCE  (r1 I:java.io.FileInputStream) =  java.io.FileInputStream A[Catch:\{ FileNotFoundException \-\> 0x0047 \}, TRY_ENTER]\l0x003a: NEW_INSTANCE  (r3 I:java.io.File) =  java.io.File A[Catch:\{ FileNotFoundException \-\> 0x0047 \}]\l0x003c: IGET  (r4 I:java.lang.Object) = (r6 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mObj1 java.lang.Object A[Catch:\{ FileNotFoundException \-\> 0x0047 \}]\l0x003e: CHECK_CAST  (r4 I:java.lang.String) = (java.lang.String) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ FileNotFoundException \-\> 0x0047 \}]\l0x0040: INVOKE  (r3 I:java.io.File), (r4 I:java.lang.String) java.io.File.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ FileNotFoundException \-\> 0x0047 \}]\l0x0043: INVOKE  (r1 I:java.io.FileInputStream), (r3 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT A[Catch:\{ FileNotFoundException \-\> 0x0047 \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0047|ExcHandler: FileNotFoundException null\lSplitter:B:10:0x0038\l|0x0047: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|0x0048: CONST_STR  (r3 I:java.lang.String) =  \"IconCompat\" \l0x004a: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004c: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x004f: CONST_STR  (r5 I:java.lang.String) =  \"Unable to load image from path: \" \l0x0051: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0054: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0057: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x005b: INVOKE  \l  (r3 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Throwable)\l android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x005f|SYNTHETIC\lSplitter:B:15:0x005f\l}"];
Node_16 [shape=record,label="{16\:\ ?|Splitter:B:15:0x005f\l|0x005f: INVOKE  (r1 I:android.content.ContentResolver) = (r7 I:android.content.Context) android.content.Context.getContentResolver():android.content.ContentResolver type: VIRTUAL A[Catch:\{ Exception \-\> 0x0068 \}, TRY_ENTER]\l0x0063: INVOKE  (r1 I:java.io.InputStream) = \l  (r1 I:android.content.ContentResolver)\l  (r0 I:android.net.Uri)\l android.content.ContentResolver.openInputStream(android.net.Uri):java.io.InputStream type: VIRTUAL A[Catch:\{ Exception \-\> 0x0068 \}]\l0x0066: NOP   A[TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0068|ExcHandler: Exception null\lSplitter:B:15:0x005f\l|0x0068: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_19 [shape=record,label="{19\:\ 0x0069|0x0069: CONST_STR  (r3 I:java.lang.String) =  \"IconCompat\" \l0x006b: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x006d: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0070: CONST_STR  (r5 I:java.lang.String) =  \"Unable to load image from URI: \" \l0x0072: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0075: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0078: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x007c: INVOKE  \l  (r3 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Throwable)\l android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_20 [shape=record,label="{20\:\ 0x007f|0x007f: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0080|0x0080: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x00ee \l}"];
Node_22 [shape=record,label="{22\:\ 0x0082|0x0082: NEW_INSTANCE  (r0 I:android.graphics.drawable.BitmapDrawable) =  android.graphics.drawable.BitmapDrawable \l0x0084: INVOKE  (r7 I:android.content.res.Resources) = (r7 I:android.content.Context) android.content.Context.getResources():android.content.res.Resources type: VIRTUAL \l0x0088: INVOKE  (r1 I:android.graphics.Bitmap) = (r1 I:java.io.InputStream) android.graphics.BitmapFactory.decodeStream(java.io.InputStream):android.graphics.Bitmap type: STATIC \l0x008c: INVOKE  \l  (r0 I:android.graphics.drawable.BitmapDrawable)\l  (r7 I:android.content.res.Resources)\l  (r1 I:android.graphics.Bitmap)\l android.graphics.drawable.BitmapDrawable.\<init\>(android.content.res.Resources, android.graphics.Bitmap):void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x008f|0x008f: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0090|0x0090: NEW_INSTANCE  (r0 I:android.graphics.drawable.BitmapDrawable) =  android.graphics.drawable.BitmapDrawable \l0x0092: INVOKE  (r7 I:android.content.res.Resources) = (r7 I:android.content.Context) android.content.Context.getResources():android.content.res.Resources type: VIRTUAL \l0x0096: IGET  (r1 I:java.lang.Object) = (r6 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mObj1 java.lang.Object \l0x0098: CHECK_CAST  (r1 I:byte[]) = (byte[]) (r1 I:?[OBJECT, ARRAY]) \l0x009a: IGET  (r2 I:int) = (r6 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mInt1 int \l0x009c: IGET  (r3 I:int) = (r6 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mInt2 int \l0x009e: INVOKE  (r1 I:android.graphics.Bitmap) = (r1 I:byte[]), (r2 I:int), (r3 I:int) android.graphics.BitmapFactory.decodeByteArray(byte[], int, int):android.graphics.Bitmap type: STATIC \l0x00a2: INVOKE  \l  (r0 I:android.graphics.drawable.BitmapDrawable)\l  (r7 I:android.content.res.Resources)\l  (r1 I:android.graphics.Bitmap)\l android.graphics.drawable.BitmapDrawable.\<init\>(android.content.res.Resources, android.graphics.Bitmap):void type: DIRECT \l}"];
Node_25 [shape=record,label="{25\:\ 0x00a5|0x00a5: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
Node_26 [shape=record,label="{26\:\ 0x00a6|0x00a6: INVOKE  (r0 I:java.lang.String) = (r6 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.getResPackage():java.lang.String type: VIRTUAL \l0x00aa: INVOKE  (r3 I:boolean) = (r0 I:java.lang.CharSequence) android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_27 [shape=record,label="{27\:\ 0x00ae|0x00ae: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00b4 \l}"];
Node_28 [shape=record,label="{28\:\ 0x00b0|0x00b0: INVOKE  (r0 I:java.lang.String) = (r7 I:android.content.Context) android.content.Context.getPackageName():java.lang.String type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x00b4|0x00b4: INVOKE  (r0 I:android.content.res.Resources) = (r7 I:android.content.Context), (r0 I:java.lang.String) android.support.v4.graphics.drawable.IconCompat.getResources(android.content.Context, java.lang.String):android.content.res.Resources type: STATIC \l}"];
Node_30 [shape=record,label="{30\:\ 0x00b8|SYNTHETIC\lSplitter:B:30:0x00b8\l}"];
Node_31 [shape=record,label="{31\:\ ?|Splitter:B:30:0x00b8\l|0x00b8: IGET  (r3 I:int) = (r6 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mInt1 int A[Catch:\{ RuntimeException \-\> 0x00c3 \}, TRY_ENTER]\l0x00ba: INVOKE  (r7 I:android.content.res.Resources$Theme) = (r7 I:android.content.Context) android.content.Context.getTheme():android.content.res.Resources$Theme type: VIRTUAL A[Catch:\{ RuntimeException \-\> 0x00c3 \}]\l0x00be: INVOKE  (r7 I:android.graphics.drawable.Drawable) = \l  (r0 I:android.content.res.Resources)\l  (r3 I:int)\l  (r7 I:android.content.res.Resources$Theme)\l android.support.v4.content.res.ResourcesCompat.getDrawable(android.content.res.Resources, int, android.content.res.Resources$Theme):android.graphics.drawable.Drawable type: STATIC A[Catch:\{ RuntimeException \-\> 0x00c3 \}]\l0x00c1: NOP   A[TRY_LEAVE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x00c2|0x00c2: RETURN  (r7 I:android.graphics.drawable.Drawable) \l}"];
Node_33 [shape=record,label="{33\:\ 0x00c3|ExcHandler: RuntimeException null\lSplitter:B:30:0x00b8\l|0x00c3: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  \l}"];
Node_34 [shape=record,label="{34\:\ 0x00c4|0x00c4: CONST_STR  (r0 I:java.lang.String) =  \"IconCompat\" \l0x00c6: CONST_STR  (r3 I:java.lang.String) =  \"Unable to load resource 0x%08x from pkg=%s\" \l0x00c8: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x00c9: NEW_ARRAY  (r4 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x00cb: IGET  (r5 I:int) = (r6 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mInt1 int \l0x00cd: INVOKE  (r5 I:java.lang.Integer) = (r5 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x00d1: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x00d3: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00d4: IGET  (r5 I:java.lang.Object) = (r6 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mObj1 java.lang.Object \l0x00d6: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x00d8: INVOKE  (r1 I:java.lang.String) = (r3 I:java.lang.String), (r4 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x00dc: INVOKE  \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r7 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_35 [shape=record,label="{35\:\ 0x00e0|0x00e0: NEW_INSTANCE  (r0 I:android.graphics.drawable.BitmapDrawable) =  android.graphics.drawable.BitmapDrawable \l0x00e2: INVOKE  (r7 I:android.content.res.Resources) = (r7 I:android.content.Context) android.content.Context.getResources():android.content.res.Resources type: VIRTUAL \l0x00e6: IGET  (r1 I:java.lang.Object) = (r6 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mObj1 java.lang.Object \l0x00e8: CHECK_CAST  (r1 I:android.graphics.Bitmap) = (android.graphics.Bitmap) (r1 I:?[OBJECT, ARRAY]) \l0x00ea: INVOKE  \l  (r0 I:android.graphics.drawable.BitmapDrawable)\l  (r7 I:android.content.res.Resources)\l  (r1 I:android.graphics.Bitmap)\l android.graphics.drawable.BitmapDrawable.\<init\>(android.content.res.Resources, android.graphics.Bitmap):void type: DIRECT \l}"];
Node_36 [shape=record,label="{36\:\ 0x00ed|0x00ed: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
Node_37 [shape=record,label="{37\:\ 0x00ee|0x00ee: RETURN  (r2 I:android.graphics.drawable.Drawable) \l}"];
MethodNode[shape=record,label="{private android.graphics.drawable.Drawable android.support.v4.graphics.drawable.IconCompat.loadDrawableInner((r6 'this' I:android.support.v4.graphics.drawable.IconCompat A[IMMUTABLE_TYPE, THIS]), (r7 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_5;
Node_1 -> Node_24;
Node_1 -> Node_26;
Node_1 -> Node_35;
Node_1 -> Node_37;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_15[style=dashed];
Node_10 -> Node_11;
Node_10 -> Node_13;
Node_11 -> Node_13;
Node_11 -> Node_21;
Node_13 -> Node_14;
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_15 -> Node_18;
Node_16 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_37;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_34 -> Node_37;
Node_35 -> Node_36;
}

