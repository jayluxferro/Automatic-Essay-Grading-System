digraph "CFG forandroid.support.v4.graphics.drawable.IconCompat.loadDrawableInner(Landroid\/content\/Context;)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|switch(r6.mType) \{\l    case 1: goto L_0x00e0;\l    case 2: goto L_0x00a6;\l    case 3: goto L_0x0090;\l    case 4: goto L_0x001b;\l    case 5: goto L_0x0009;\l    default: goto L_0x0007;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009}"];
Node_3 [shape=record,label="{3\:\ 0x001a|RETURN\l|return new android.graphics.drawable.BitmapDrawable(r7.getResources(), createLegacyIconFromAdaptiveIcon((android.graphics.Bitmap) r6.mObj1, false))\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|android.net.Uri r0 = android.net.Uri.parse((java.lang.String) r6.mObj1)\ljava.lang.String r1 = r0.getScheme()\l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|if (com.google.firebase.analytics.FirebaseAnalytics.Param.CONTENT.equals(r1) != false) goto L_0x005f\l}"];
Node_6 [shape=record,label="{6\:\ 0x002f}"];
Node_7 [shape=record,label="{7\:\ 0x0035|if (\"file\".equals(r1) == false) goto L_0x0038\l}"];
Node_8 [shape=record,label="{8\:\ 0x0038|SYNTHETIC\lSplitter:B:8:0x0038\l}"];
Node_9 [shape=record,label="{9\:\ ?|Catch:\{ FileNotFoundException \-\> 0x0047 \}\lSplitter:B:8:0x0038\l|java.io.FileInputStream r1 = new java.io.FileInputStream(new java.io.File((java.lang.String) r6.mObj1))     \/\/ Catch:\{ FileNotFoundException \-\> 0x0047 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0047|ExcHandler: FileNotFoundException (r1v16 'e' java.io.FileNotFoundException A[CUSTOM_DECLARE])\lSplitter:B:8:0x0038\l|java.io.FileNotFoundException r1 = move\-exception\l}"];
Node_11 [shape=record,label="{11\:\ 0x0048|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"Unable to load image from path: \")\lr4.append(r0)\landroid.util.Log.w(TAG, r4.toString(), r1)\l}"];
Node_12 [shape=record,label="{12\:\ 0x005f|SYNTHETIC\lSplitter:B:12:0x005f\l}"];
Node_13 [shape=record,label="{13\:\ ?|Catch:\{ Exception \-\> 0x0068 \}\lSplitter:B:12:0x005f\l|java.io.InputStream r1 = r7.getContentResolver().openInputStream(r0)     \/\/ Catch:\{ Exception \-\> 0x0068 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0068|ExcHandler: Exception (r1v12 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:12:0x005f\l|java.lang.Exception r1 = move\-exception\l}"];
Node_15 [shape=record,label="{15\:\ 0x0069|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"Unable to load image from URI: \")\lr4.append(r0)\landroid.util.Log.w(TAG, r4.toString(), r1)\l}"];
Node_16 [shape=record,label="{16\:\ 0x007f|r1 = null\l}"];
Node_17 [shape=record,label="{17\:\ 0x0080|PHI: r1 \l  PHI: (r1v9 java.io.InputStream) = (r1v11 java.io.InputStream), (r1v14 java.io.InputStream), (r1v17 java.io.InputStream) binds: [B:16:0x007f, B:13:?, B:9:?] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == null) goto L_0x00ee\l}"];
Node_18 [shape=record,label="{18\:\ 0x0082}"];
Node_19 [shape=record,label="{19\:\ 0x008f|RETURN\l|return new android.graphics.drawable.BitmapDrawable(r7.getResources(), android.graphics.BitmapFactory.decodeStream(r1))\l}"];
Node_20 [shape=record,label="{20\:\ 0x0090}"];
Node_21 [shape=record,label="{21\:\ 0x00a5|RETURN\l|return new android.graphics.drawable.BitmapDrawable(r7.getResources(), android.graphics.BitmapFactory.decodeByteArray((byte[]) r6.mObj1, r6.mInt1, r6.mInt2))\l}"];
Node_22 [shape=record,label="{22\:\ 0x00a6|java.lang.String r0 = getResPackage()\l}"];
Node_23 [shape=record,label="{23\:\ 0x00ae|if (android.text.TextUtils.isEmpty(r0) == false) goto L_0x00b4\l}"];
Node_24 [shape=record,label="{24\:\ 0x00b0|java.lang.String r0 = r7.getPackageName()\l}"];
Node_25 [shape=record,label="{25\:\ 0x00b4|PHI: r0 \l  PHI: (r0v3 java.lang.String) = (r0v2 java.lang.String), (r0v6 java.lang.String) binds: [B:23:0x00ae, B:24:0x00b0] A[DONT_GENERATE, DONT_INLINE]\l|android.content.res.Resources r0 = getResources(r7, r0)\l}"];
Node_26 [shape=record,label="{26\:\ 0x00b8|SYNTHETIC\lSplitter:B:26:0x00b8\l}"];
Node_27 [shape=record,label="{27\:\ ?|Catch:\{ RuntimeException \-\> 0x00c3 \}\lSplitter:B:26:0x00b8\l}"];
Node_28 [shape=record,label="{28\:\ 0x00c2|RETURN\l|return android.support.p000v4.content.res.ResourcesCompat.getDrawable(r0, r6.mInt1, r7.getTheme())\l}"];
Node_29 [shape=record,label="{29\:\ 0x00c3|ExcHandler: RuntimeException (r7v2 'e' java.lang.RuntimeException A[CUSTOM_DECLARE])\lSplitter:B:26:0x00b8\l|java.lang.RuntimeException r7 = move\-exception\l}"];
Node_30 [shape=record,label="{30\:\ 0x00c4|java.lang.Object[] r4 = new java.lang.Object[]\{java.lang.Integer.valueOf(r6.mInt1), r6.mObj1\}\landroid.util.Log.e(TAG, java.lang.String.format(\"Unable to load resource 0x%08x from pkg=%s\", r4), r7)\l}"];
Node_31 [shape=record,label="{31\:\ 0x00e0}"];
Node_32 [shape=record,label="{32\:\ 0x00ed|RETURN\l|return new android.graphics.drawable.BitmapDrawable(r7.getResources(), (android.graphics.Bitmap) r6.mObj1)\l}"];
Node_33 [shape=record,label="{33\:\ 0x00ee|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{private android.graphics.drawable.Drawable android.support.v4.graphics.drawable.IconCompat.loadDrawableInner((r6v0 'this' android.support.v4.graphics.drawable.IconCompat A[IMMUTABLE_TYPE, THIS]), (r7v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_20;
Node_1 -> Node_22;
Node_1 -> Node_31;
Node_1 -> Node_33;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_12[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_16;
Node_12 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_33;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_30 -> Node_33;
Node_31 -> Node_32;
}

