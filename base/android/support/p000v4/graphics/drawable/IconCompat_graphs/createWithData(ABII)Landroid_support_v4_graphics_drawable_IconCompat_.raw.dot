digraph "CFG forandroid.support.v4.graphics.drawable.IconCompat.createWithData([BII)Landroid\/support\/v4\/graphics\/drawable\/IconCompat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: NEW_INSTANCE  (r0 I:android.support.v4.graphics.drawable.IconCompat) =  android.support.v4.graphics.drawable.IconCompat \l0x0004: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0005: INVOKE  \l  (r0 I:android.support.v4.graphics.drawable.IconCompat)\l  (r1 I:int)\l android.support.v4.graphics.drawable.IconCompat.\<init\>(int):void type: DIRECT \l0x0008: IPUT  \l  (r2 I:java.lang.Object)\l  (r0 I:android.support.v4.graphics.drawable.IconCompat)\l android.support.v4.graphics.drawable.IconCompat.mObj1 java.lang.Object \l0x000a: IPUT  \l  (r3 I:int)\l  (r0 I:android.support.v4.graphics.drawable.IconCompat)\l android.support.v4.graphics.drawable.IconCompat.mInt1 int \l0x000c: IPUT  \l  (r4 I:int)\l  (r0 I:android.support.v4.graphics.drawable.IconCompat)\l android.support.v4.graphics.drawable.IconCompat.mInt2 int \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: RETURN  (r0 I:android.support.v4.graphics.drawable.IconCompat) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0011: CONST_STR  (r3 I:java.lang.String) =  \"Data must not be null.\" \l0x0013: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static android.support.v4.graphics.drawable.IconCompat android.support.v4.graphics.drawable.IconCompat.createWithData((r2 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

