digraph "CFG forandroid.support.v4.graphics.drawable.IconCompat.toBundle()Landroid\/os\/Bundle;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.os.Bundle r0 = new android.os.Bundle()\lint r1 = r3.mType\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r1 == \-1) goto L_0x0033\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|switch(r1) \{\l    case 1: goto L_0x0029;\l    case 2: goto L_0x001f;\l    case 3: goto L_0x0015;\l    case 4: goto L_0x001f;\l    case 5: goto L_0x0029;\l    default: goto L_0x000d;\l\}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d}"];
Node_4 [shape=record,label="{4\:\ 0x0014|throw new java.lang.IllegalArgumentException(\"Invalid icon\")\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|r0.putByteArray(EXTRA_OBJ, (byte[]) r3.mObj1)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|r0.putString(EXTRA_OBJ, (java.lang.String) r3.mObj1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|r0.putParcelable(EXTRA_OBJ, (android.graphics.Bitmap) r3.mObj1)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0033|r0.putParcelable(EXTRA_OBJ, (android.os.Parcelable) r3.mObj1)\l}"];
Node_9 [shape=record,label="{9\:\ 0x003c|r0.putInt(\"type\", r3.mType)\lr0.putInt(EXTRA_INT1, r3.mInt1)\lr0.putInt(EXTRA_INT2, r3.mInt2)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0053|if (r3.mTintList == null) goto L_0x005c\l}"];
Node_11 [shape=record,label="{11\:\ 0x0055|r0.putParcelable(EXTRA_TINT_LIST, r3.mTintList)\l}"];
Node_12 [shape=record,label="{12\:\ 0x005c}"];
Node_13 [shape=record,label="{13\:\ 0x0060|if (r3.mTintMode == DEFAULT_TINT_MODE) goto L_0x006d\l}"];
Node_14 [shape=record,label="{14\:\ 0x0062|r0.putString(EXTRA_TINT_MODE, r3.mTintMode.name())\l}"];
Node_15 [shape=record,label="{15\:\ 0x006d|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public android.os.Bundle android.support.v4.graphics.drawable.IconCompat.toBundle((r3v0 'this' android.support.v4.graphics.drawable.IconCompat A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_2 -> Node_6;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_5 -> Node_9;
Node_6 -> Node_9;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
}

