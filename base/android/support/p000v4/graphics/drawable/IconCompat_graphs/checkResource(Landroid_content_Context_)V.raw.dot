digraph "CFG forandroid.support.v4.graphics.drawable.IconCompat.checkResource(Landroid\/content\/Context;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r7 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mType int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0061 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r0 I:java.lang.Object) = (r7 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mObj1 java.lang.Object \l0x0007: CHECK_CAST  (r0 I:java.lang.String) = (java.lang.String) (r0 I:?[OBJECT, ARRAY]) \l0x0009: CONST_STR  (r1 I:java.lang.String) =  \":\" \l0x000b: INVOKE  (r1 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.CharSequence) java.lang.String.contains(java.lang.CharSequence):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: CONST_STR  (r1 I:java.lang.String) =  \":\" \l0x0014: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0015: INVOKE  (r1 I:java.lang.String[]) = \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r2 I:int)\l java.lang.String.split(java.lang.String, int):java.lang.String[] type: VIRTUAL \l0x0019: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001a: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x001c: CONST_STR  (r4 I:java.lang.String) =  \"\/\" \l0x001e: INVOKE  (r4 I:java.lang.String[]) = \l  (r1 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r2 I:int)\l java.lang.String.split(java.lang.String, int):java.lang.String[] type: VIRTUAL \l0x0022: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: AGET  (r4 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r5 I:?[int, short, byte, char]) \l0x0025: CONST_STR  (r6 I:java.lang.String) =  \"\/\" \l0x0027: INVOKE  (r1 I:java.lang.String[]) = \l  (r1 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r2 I:int)\l java.lang.String.split(java.lang.String, int):java.lang.String[] type: VIRTUAL \l0x002b: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x002d: CONST_STR  (r3 I:java.lang.String) =  \":\" \l0x002f: INVOKE  (r0 I:java.lang.String[]) = \l  (r0 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r2 I:int)\l java.lang.String.split(java.lang.String, int):java.lang.String[] type: VIRTUAL \l0x0033: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r5 I:?[int, short, byte, char]) \l0x0035: INVOKE  (r8 I:android.content.res.Resources) = (r8 I:android.content.Context), (r0 I:java.lang.String) android.support.v4.graphics.drawable.IconCompat.getResources(android.content.Context, java.lang.String):android.content.res.Resources type: STATIC \l0x0039: INVOKE  (r8 I:int) = \l  (r8 I:android.content.res.Resources)\l  (r1 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r0 I:java.lang.String)\l android.content.res.Resources.getIdentifier(java.lang.String, java.lang.String, java.lang.String):int type: VIRTUAL \l0x003d: IGET  (r2 I:int) = (r7 I:android.support.v4.graphics.drawable.IconCompat) android.support.v4.graphics.drawable.IconCompat.mInt1 int \l}"];
Node_6 [shape=record,label="{6\:\ 0x003f|0x003f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0061 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0041|0x0041: CONST_STR  (r2 I:java.lang.String) =  \"IconCompat\" \l0x0043: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0045: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0048: CONST_STR  (r4 I:java.lang.String) =  \"Id has changed for \" \l0x004a: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004d: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0050: CONST_STR  (r0 I:java.lang.String) =  \"\/\" \l0x0052: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0055: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0058: INVOKE  (r0 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x005c: INVOKE  (r2 I:java.lang.String), (r0 I:java.lang.String) android.util.Log.i(java.lang.String, java.lang.String):int type: STATIC \l0x005f: IPUT  \l  (r8 I:int)\l  (r7 I:android.support.v4.graphics.drawable.IconCompat)\l android.support.v4.graphics.drawable.IconCompat.mInt1 int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0061|0x0061: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.graphics.drawable.IconCompat.checkResource((r7 'this' I:android.support.v4.graphics.drawable.IconCompat A[IMMUTABLE_TYPE, THIS]), (r8 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.RestrictTo, \{value=[android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP android.support.annotation.RestrictTo$Scope]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
}

