digraph "CFG forandroid.support.v4.graphics.drawable.WrappedDrawableApi14.updateTint([I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r4 I:android.support.v4.graphics.drawable.WrappedDrawableApi14)\l android.support.v4.graphics.drawable.WrappedDrawableApi14.isCompatTintEnabled():boolean type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState) = \l  (r4 I:android.support.v4.graphics.drawable.WrappedDrawableApi14)\l android.support.v4.graphics.drawable.WrappedDrawableApi14.mState android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState \l0x000a: IGET  (r0 I:android.content.res.ColorStateList) = \l  (r0 I:android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState)\l android.support.v4.graphics.drawable.WrappedDrawableApi14.DrawableWrapperState.mTint android.content.res.ColorStateList \l0x000c: IGET  (r2 I:android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState) = \l  (r4 I:android.support.v4.graphics.drawable.WrappedDrawableApi14)\l android.support.v4.graphics.drawable.WrappedDrawableApi14.mState android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState \l0x000e: IGET  (r2 I:android.graphics.PorterDuff$Mode) = \l  (r2 I:android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState)\l android.support.v4.graphics.drawable.WrappedDrawableApi14.DrawableWrapperState.mTintMode android.graphics.PorterDuff$Mode \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0033 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0033 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: INVOKE  (r3 I:int) = (r0 I:android.content.res.ColorStateList) android.content.res.ColorStateList.getDefaultColor():int type: VIRTUAL \l0x0018: INVOKE  (r5 I:int) = \l  (r0 I:android.content.res.ColorStateList)\l  (r5 I:int[])\l  (r3 I:int)\l android.content.res.ColorStateList.getColorForState(int[], int):int type: VIRTUAL \l0x001c: IGET  (r0 I:boolean) = \l  (r4 I:android.support.v4.graphics.drawable.WrappedDrawableApi14)\l android.support.v4.graphics.drawable.WrappedDrawableApi14.mColorFilterSet boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0028 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: IGET  (r0 I:int) = \l  (r4 I:android.support.v4.graphics.drawable.WrappedDrawableApi14)\l android.support.v4.graphics.drawable.WrappedDrawableApi14.mCurrentColor int \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0028 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: IGET  (r0 I:android.graphics.PorterDuff$Mode) = \l  (r4 I:android.support.v4.graphics.drawable.WrappedDrawableApi14)\l android.support.v4.graphics.drawable.WrappedDrawableApi14.mCurrentMode android.graphics.PorterDuff$Mode \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0038 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: INVOKE  \l  (r4 I:android.support.v4.graphics.drawable.WrappedDrawableApi14)\l  (r5 I:int)\l  (r2 I:android.graphics.PorterDuff$Mode)\l android.support.v4.graphics.drawable.WrappedDrawableApi14.setColorFilter(int, android.graphics.PorterDuff$Mode):void type: VIRTUAL \l0x002b: IPUT  \l  (r5 I:int)\l  (r4 I:android.support.v4.graphics.drawable.WrappedDrawableApi14)\l android.support.v4.graphics.drawable.WrappedDrawableApi14.mCurrentColor int \l0x002d: IPUT  \l  (r2 I:android.graphics.PorterDuff$Mode)\l  (r4 I:android.support.v4.graphics.drawable.WrappedDrawableApi14)\l android.support.v4.graphics.drawable.WrappedDrawableApi14.mCurrentMode android.graphics.PorterDuff$Mode \l0x002f: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0030: IPUT  \l  (r5 I:boolean)\l  (r4 I:android.support.v4.graphics.drawable.WrappedDrawableApi14)\l android.support.v4.graphics.drawable.WrappedDrawableApi14.mColorFilterSet boolean \l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|0x0032: RETURN  (r5 I:boolean) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: IPUT  \l  (r1 I:boolean)\l  (r4 I:android.support.v4.graphics.drawable.WrappedDrawableApi14)\l android.support.v4.graphics.drawable.WrappedDrawableApi14.mColorFilterSet boolean \l0x0035: INVOKE  \l  (r4 I:android.support.v4.graphics.drawable.WrappedDrawableApi14)\l android.support.v4.graphics.drawable.WrappedDrawableApi14.clearColorFilter():void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|0x0038: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean android.support.v4.graphics.drawable.WrappedDrawableApi14.updateTint((r4 'this' I:android.support.v4.graphics.drawable.WrappedDrawableApi14 A[IMMUTABLE_TYPE, THIS]), (r5 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

