digraph "CFG forandroid.support.v4.graphics.drawable.WrappedDrawableApi14.mutate()Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.mMutated != false) goto L_0x0030\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if (super.mutate() != r2) goto L_0x0030\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|r2.mState = mutateConstantState()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|if (r2.mDrawable == null) goto L_0x0019\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|r2.mDrawable.mutate()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019}"];
Node_8 [shape=record,label="{8\:\ 0x001b|if (r2.mState == null) goto L_0x002d\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState r0 = r2.mState\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|if (r2.mDrawable == null) goto L_0x002a\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|android.graphics.drawable.Drawable$ConstantState r1 = r2.mDrawable.getConstantState()\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|r1 = null\l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|PHI: r1 \l  PHI: (r1v1 android.graphics.drawable.Drawable$ConstantState) = (r1v2 android.graphics.drawable.Drawable$ConstantState), (r1v4 android.graphics.drawable.Drawable$ConstantState) binds: [B:12:0x002a, B:11:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|r0.mDrawableState = r1\l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|r2.mMutated = true\l}"];
Node_15 [shape=record,label="{15\:\ 0x0030|RETURN\l|return r2\l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable android.support.v4.graphics.drawable.WrappedDrawableApi14.mutate((r2v0 'this' android.support.v4.graphics.drawable.WrappedDrawableApi14 A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

