digraph "CFG forandroid.support.v4.graphics.drawable.WrappedDrawableApi14.updateTint([I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (isCompatTintEnabled() != false) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return false\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|android.content.res.ColorStateList r0 = r4.mState.mTint\landroid.graphics.PorterDuff$Mode r2 = r4.mState.mTintMode\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|if (r0 == null) goto L_0x0033\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|if (r2 == null) goto L_0x0033\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|int r5 = r0.getColorForState(r5, r0.getDefaultColor())\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|if (r4.mColorFilterSet == false) goto L_0x0028\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020}"];
Node_9 [shape=record,label="{9\:\ 0x0022|if (r5 != r4.mCurrentColor) goto L_0x0028\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024}"];
Node_11 [shape=record,label="{11\:\ 0x0026|if (r2 == r4.mCurrentMode) goto L_0x0038\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|setColorFilter(r5, r2)\lr4.mCurrentColor = r5\lr4.mCurrentMode = r2\lr4.mColorFilterSet = true\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|RETURN\l|return true\l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|r4.mColorFilterSet = false\lclearColorFilter()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{private boolean android.support.v4.graphics.drawable.WrappedDrawableApi14.updateTint((r4v0 'this' android.support.v4.graphics.drawable.WrappedDrawableApi14 A[IMMUTABLE_TYPE, THIS]), (r5v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

