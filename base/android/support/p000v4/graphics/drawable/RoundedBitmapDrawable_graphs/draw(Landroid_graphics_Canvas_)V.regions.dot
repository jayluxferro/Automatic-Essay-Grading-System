digraph "CFG forandroid.support.v4.graphics.drawable.RoundedBitmapDrawable.draw(Landroid\/graphics\/Canvas;)V" {
subgraph cluster_Region_474256421 {
label = "R(2:0|(2:3|(1:5)(1:6))(0))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.graphics.Bitmap android.graphics.Bitmap r0 = r4.mBitmap\l}"];
subgraph cluster_IfRegion_1575024616 {
label = "IF [B:1:0x0002] THEN: R(2:3|(1:5)(1:6)) ELSE: R(0)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r0 != null) goto L_0x0005\l}"];
subgraph cluster_Region_1433861192 {
label = "R(2:3|(1:5)(1:6))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0005|updateDstRect()\l}"];
subgraph cluster_IfRegion_2132061357 {
label = "IF [B:4:0x000e] THEN: R(1:5) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|if (r4.mPaint.getShader() == null) goto L_0x0010\l}"];
subgraph cluster_Region_1109768865 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|r5.drawBitmap(r0, (android.graphics.Rect) null, r4.mDstRect, r4.mPaint)\l}"];
}
subgraph cluster_Region_1916691614 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0019|r5.drawRoundRect(r4.mDstRectF, r4.mCornerRadius, r4.mCornerRadius, r4.mPaint)\l}"];
}
}
}
subgraph cluster_Region_636054991 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v4.graphics.drawable.RoundedBitmapDrawable.draw((r4v0 'this' android.support.v4.graphics.drawable.RoundedBitmapDrawable A[IMMUTABLE_TYPE, THIS]), (r5v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
}

