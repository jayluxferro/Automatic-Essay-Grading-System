digraph "CFG forandroid.support.v4.graphics.TypefaceCompatBaseImpl.createFromResourcesFontFile(Landroid\/content\/Context;Landroid\/content\/res\/Resources;ILjava\/lang\/String;I)Landroid\/graphics\/Typeface;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.io.File) = (r1 I:android.content.Context) android.support.v4.graphics.TypefaceCompatUtil.getTempFile(android.content.Context):java.io.File type: STATIC \l0x0004: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r4 I:android.graphics.Typeface) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|SYNTHETIC\lSplitter:B:3:0x0008\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0008\l|0x0008: INVOKE  (r2 I:boolean) = \l  (r1 I:java.io.File)\l  (r2 I:android.content.res.Resources)\l  (r3 I:int)\l android.support.v4.graphics.TypefaceCompatUtil.copyToFile(java.io.File, android.content.res.Resources, int):boolean type: STATIC A[Catch:\{ RuntimeException \-\> 0x0023, all \-\> 0x001e \}, TRY_ENTER]\l0x000b: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0012 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: INVOKE  (r1 I:java.io.File) java.io.File.delete():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: RETURN  (r4 I:android.graphics.Typeface) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|SYNTHETIC\lSplitter:B:8:0x0012\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0012\l|0x0012: INVOKE  (r2 I:java.lang.String) = (r1 I:java.io.File) java.io.File.getPath():java.lang.String type: VIRTUAL A[Catch:\{ RuntimeException \-\> 0x0023, all \-\> 0x001e \}, TRY_ENTER]\l0x0016: INVOKE  (r2 I:android.graphics.Typeface) = (r2 I:java.lang.String) android.graphics.Typeface.createFromFile(java.lang.String):android.graphics.Typeface type: STATIC A[Catch:\{ RuntimeException \-\> 0x0023, all \-\> 0x001e \}]\l0x0019: NOP   A[TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: INVOKE  (r1 I:java.io.File) java.io.File.delete():boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|0x001d: RETURN  (r2 I:android.graphics.Typeface) \l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|ExcHandler: all null\lSplitter:B:3:0x0008\l|0x001e: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|0x001f: INVOKE  (r1 I:java.io.File) java.io.File.delete():boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0022|0x0022: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0023|0x0023: INVOKE  (r1 I:java.io.File) java.io.File.delete():boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lExcHandler: RuntimeException null\lSplitter:B:3:0x0008\l}"];
Node_17 [shape=record,label="{17\:\ 0x0026|0x0026: RETURN  (r4 I:android.graphics.Typeface) \l}"];
MethodNode[shape=record,label="{public android.graphics.Typeface android.support.v4.graphics.TypefaceCompatBaseImpl.createFromResourcesFontFile((r0 'this' I:android.support.v4.graphics.TypefaceCompatBaseImpl A[IMMUTABLE_TYPE, THIS]), (r1 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_16;
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_16;
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_17;
Node_16 -> Node_15;
}

