digraph "CFG forandroid.support.v4.graphics.TypefaceCompatApi21Impl.createFromFontInfo(Landroid\/content\/Context;Landroid\/os\/CancellationSignal;[Landroid\/support\/v4\/provider\/FontsContractCompat$FontInfo;I)Landroid\/graphics\/Typeface;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r7 I:?[]) \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r1 I:android.graphics.Typeface) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r7 I:android.support.v4.provider.FontsContractCompat$FontInfo) = \l  (r4 I:android.support.v4.graphics.TypefaceCompatApi21Impl)\l  (r7 I:android.support.v4.provider.FontsContractCompat$FontInfo[])\l  (r8 I:int)\l android.support.v4.graphics.TypefaceCompatApi21Impl.findBestInfo(android.support.v4.provider.FontsContractCompat$FontInfo[], int):android.support.v4.provider.FontsContractCompat$FontInfo type: VIRTUAL \l0x000a: INVOKE  (r8 I:android.content.ContentResolver) = (r5 I:android.content.Context) android.content.Context.getContentResolver():android.content.ContentResolver type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|SYNTHETIC\lSplitter:B:4:0x000e\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x000e\l|0x000e: INVOKE  (r7 I:android.net.Uri) = \l  (r7 I:android.support.v4.provider.FontsContractCompat$FontInfo)\l android.support.v4.provider.FontsContractCompat.FontInfo.getUri():android.net.Uri type: VIRTUAL A[Catch:\{ IOException \-\> 0x0077 \}, TRY_ENTER]\l0x0012: CONST_STR  (r0 I:java.lang.String) =  \"r\" A[Catch:\{ IOException \-\> 0x0077 \}]\l0x0014: INVOKE  (r6 I:android.os.ParcelFileDescriptor) = \l  (r8 I:android.content.ContentResolver)\l  (r7 I:android.net.Uri)\l  (r0 I:java.lang.String)\l  (r6 I:android.os.CancellationSignal)\l android.content.ContentResolver.openFileDescriptor(android.net.Uri, java.lang.String, android.os.CancellationSignal):android.os.ParcelFileDescriptor type: VIRTUAL A[Catch:\{ IOException \-\> 0x0077 \}]\l0x0017: NOP   A[TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|SYNTHETIC\lSplitter:B:6:0x0018\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0018\l|0x0018: INVOKE  (r7 I:java.io.File) = \l  (r4 I:android.support.v4.graphics.TypefaceCompatApi21Impl)\l  (r6 I:android.os.ParcelFileDescriptor)\l android.support.v4.graphics.TypefaceCompatApi21Impl.getFile(android.os.ParcelFileDescriptor):java.io.File type: DIRECT A[Catch:\{ Throwable \-\> 0x0060, all \-\> 0x005d \}, TRY_ENTER]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x002f A[Catch:\{ Throwable \-\> 0x0060, all \-\> 0x005d \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: INVOKE  (r8 I:boolean) = (r7 I:java.io.File) java.io.File.canRead():boolean type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0060, all \-\> 0x005d \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0025 A[Catch:\{ Throwable \-\> 0x0060, all \-\> 0x005d \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|0x0024: GOTO  \-\> 0x002f A[Catch:\{ Throwable \-\> 0x0060, all \-\> 0x005d \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|0x0025: INVOKE  (r5 I:android.graphics.Typeface) = (r7 I:java.io.File) android.graphics.Typeface.createFromFile(java.io.File):android.graphics.Typeface type: STATIC A[Catch:\{ Throwable \-\> 0x0060, all \-\> 0x005d \}]\l0x0028: NOP   A[TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|0x0029: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x002e \l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|SYNTHETIC\lSplitter:B:14:0x002b\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x002b\l|0x002b: INVOKE  (r6 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0077 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x002e|0x002e: RETURN  (r5 I:android.graphics.Typeface) \l}"];
Node_17 [shape=record,label="{17\:\ 0x002f|SYNTHETIC\lSplitter:B:17:0x002f\l}"];
Node_18 [shape=record,label="{18\:\ ?|Splitter:B:17:0x002f\l|0x002f: NEW_INSTANCE  (r7 I:java.io.FileInputStream) =  java.io.FileInputStream A[Catch:\{ Throwable \-\> 0x0060, all \-\> 0x005d \}, TRY_ENTER]\l0x0031: INVOKE  (r8 I:java.io.FileDescriptor) = (r6 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.getFileDescriptor():java.io.FileDescriptor type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0060, all \-\> 0x005d \}]\l0x0035: INVOKE  \l  (r7 I:java.io.FileInputStream)\l  (r8 I:java.io.FileDescriptor)\l java.io.FileInputStream.\<init\>(java.io.FileDescriptor):void type: DIRECT A[Catch:\{ Throwable \-\> 0x0060, all \-\> 0x005d \}, TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0038|SYNTHETIC\lSplitter:B:19:0x0038\l}"];
Node_20 [shape=record,label="{20\:\ ?|Splitter:B:19:0x0038\l|0x0038: INVOKE  (r5 I:android.graphics.Typeface) = \l  (r4 I:android.support.v4.graphics.TypefaceCompatBaseImpl)\l  (r5 I:android.content.Context)\l  (r7 I:java.io.InputStream)\l android.support.v4.graphics.TypefaceCompatBaseImpl.createFromInputStream(android.content.Context, java.io.InputStream):android.graphics.Typeface type: SUPER A[Catch:\{ Throwable \-\> 0x0048, all \-\> 0x0045 \}, TRY_ENTER]\l0x003b: NOP   A[TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x003c|SYNTHETIC\lSplitter:B:21:0x003c\l}"];
Node_22 [shape=record,label="{22\:\ ?|Splitter:B:21:0x003c\l|0x003c: INVOKE  (r7 I:java.io.FileInputStream) java.io.FileInputStream.close():void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0060, all \-\> 0x005d \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x003f|0x003f: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0044 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0041|SYNTHETIC\lSplitter:B:24:0x0041\l}"];
Node_25 [shape=record,label="{25\:\ ?|Splitter:B:24:0x0041\l|0x0041: INVOKE  (r6 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0077 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0044|0x0044: RETURN  (r5 I:android.graphics.Typeface) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0045|ExcHandler: all null\lSplitter:B:19:0x0038\l|0x0045: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_28 [shape=record,label="{28\:\ 0x0046|0x0046: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0048|ExcHandler: Throwable null\lSplitter:B:19:0x0038\l|0x0048: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_30 [shape=record,label="{30\:\ 0x0049|SYNTHETIC\lSplitter:B:30:0x0049\l}"];
Node_31 [shape=record,label="{31\:\ ?|Splitter:B:30:0x0049\l|0x0049: THROW  (r5 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x004a \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x004a|ExcHandler: all null\lSplitter:B:30:0x0049\l|0x004a: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_33 [shape=record,label="{33\:\ 0x004b|0x004b: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x004c: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x004d: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x004e|0x004e: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0059 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0050|SYNTHETIC\lSplitter:B:35:0x0050\l}"];
Node_36 [shape=record,label="{36\:\ ?|Splitter:B:35:0x0050\l|0x0050: INVOKE  (r7 I:java.io.FileInputStream) java.io.FileInputStream.close():void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0054, all \-\> 0x005d \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0054|ExcHandler: Throwable null\lSplitter:B:35:0x0050\l|0x0054: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  \l}"];
Node_39 [shape=record,label="{39\:\ 0x0055|SYNTHETIC\lSplitter:B:39:0x0055\l}"];
Node_40 [shape=record,label="{40\:\ ?|Splitter:B:39:0x0055\l|0x0055: INVOKE  (r8 I:java.lang.Throwable), (r7 I:java.lang.Throwable) java.lang.Throwable.addSuppressed(java.lang.Throwable):void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0060, all \-\> 0x005d \}, TRY_ENTER]\l0x0058: GOTO  \-\> 0x005c A[Catch:\{ Throwable \-\> 0x0060, all \-\> 0x005d \}]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0059|0x0059: INVOKE  (r7 I:java.io.FileInputStream) java.io.FileInputStream.close():void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0060, all \-\> 0x005d \}]\l}"];
Node_42 [shape=record,label="{42\:\ 0x005c|0x005c: THROW  (r5 I:java.lang.Throwable) A[Catch:\{ Throwable \-\> 0x0060, all \-\> 0x005d \}, TRY_LEAVE]\l}"];
Node_43 [shape=record,label="{43\:\ 0x005d|ExcHandler: all null\lSplitter:B:6:0x0018\l|0x005d: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_44 [shape=record,label="{44\:\ 0x005e|0x005e: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0060|ExcHandler: Throwable null\lSplitter:B:6:0x0018\l|0x0060: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_46 [shape=record,label="{46\:\ 0x0061|SYNTHETIC\lSplitter:B:46:0x0061\l}"];
Node_47 [shape=record,label="{47\:\ ?|Splitter:B:46:0x0061\l|0x0061: THROW  (r5 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0062 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_48 [shape=record,label="{48\:\ 0x0062|ExcHandler: all null\lSplitter:B:46:0x0061\l|0x0062: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  \l}"];
Node_49 [shape=record,label="{49\:\ 0x0063|0x0063: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0064: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x0065: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0066|0x0066: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0076 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0068|0x0068: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0073 \l}"];
Node_52 [shape=record,label="{52\:\ 0x006a|SYNTHETIC\lSplitter:B:52:0x006a\l}"];
Node_53 [shape=record,label="{53\:\ ?|Splitter:B:52:0x006a\l|0x006a: INVOKE  (r6 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.close():void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x006e \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_55 [shape=record,label="{55\:\ 0x006e|ExcHandler: Throwable null\lSplitter:B:52:0x006a\l|0x006e: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_56 [shape=record,label="{56\:\ 0x006f|SYNTHETIC\lSplitter:B:56:0x006f\l}"];
Node_57 [shape=record,label="{57\:\ ?|Splitter:B:56:0x006f\l|0x006f: INVOKE  (r7 I:java.lang.Throwable), (r6 I:java.lang.Throwable) java.lang.Throwable.addSuppressed(java.lang.Throwable):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0077 \}, TRY_ENTER]\l0x0072: GOTO  \-\> 0x0076 A[Catch:\{ IOException \-\> 0x0077 \}]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0073|0x0073: INVOKE  (r6 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0077 \}]\l}"];
Node_59 [shape=record,label="{59\:\ 0x0076|0x0076: THROW  (r5 I:java.lang.Throwable) A[Catch:\{ IOException \-\> 0x0077 \}, TRY_LEAVE]\l}"];
Node_60 [shape=record,label="{60\:\ 0x0077|0x0077: RETURN  (r1 I:android.graphics.Typeface) \l}"];
Node_61 [shape=record,label="{61\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:4:0x000e\l}"];
MethodNode[shape=record,label="{public android.graphics.Typeface android.support.v4.graphics.TypefaceCompatApi21Impl.createFromFontInfo((r4 'this' I:android.support.v4.graphics.TypefaceCompatApi21Impl A[IMMUTABLE_TYPE, THIS]), (r5 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.os.CancellationSignal A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.support.v4.provider.FontsContractCompat$FontInfo[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , , Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_61;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_45;
Node_6 -> Node_43;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_14 -> Node_61;
Node_15 -> Node_16;
Node_15 -> Node_61;
Node_17 -> Node_18;
Node_17 -> Node_45;
Node_17 -> Node_43;
Node_18 -> Node_19;
Node_18 -> Node_45;
Node_18 -> Node_43;
Node_19 -> Node_20;
Node_19 -> Node_29;
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_45;
Node_21 -> Node_43;
Node_22 -> Node_23;
Node_22 -> Node_45;
Node_22 -> Node_43;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_24 -> Node_61;
Node_25 -> Node_26;
Node_25 -> Node_61;
Node_27 -> Node_28;
Node_28 -> Node_34;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_41;
Node_35 -> Node_36;
Node_35 -> Node_38;
Node_35 -> Node_43;
Node_36 -> Node_38;
Node_36 -> Node_43;
Node_36 -> Node_42;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_45;
Node_39 -> Node_43;
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_43 -> Node_44;
Node_44 -> Node_50;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_46 -> Node_48;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_59;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_58;
Node_52 -> Node_53;
Node_52 -> Node_55;
Node_53 -> Node_55;
Node_53 -> Node_59;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_56 -> Node_61;
Node_57 -> Node_59;
Node_58 -> Node_59;
Node_61 -> Node_60;
}

