digraph "CFG forandroid.support.v4.graphics.PaintCompat.hasGlyph(Landroid\/graphics\/Paint;Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (23 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r8 I:boolean) = (r8 I:android.graphics.Paint), (r9 I:java.lang.String) android.graphics.Paint.hasGlyph(java.lang.String):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN  (r8 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: INVOKE  (r0 I:int) = (r9 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x000f: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0010: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001e \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: INVOKE  (r3 I:char) = (r9 I:java.lang.String), (r2 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x0017: INVOKE  (r3 I:boolean) = (r3 I:char) java.lang.Character.isWhitespace(char):boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001e \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: RETURN  (r1 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: CONST_STR  (r3 I:java.lang.String) =  \"󟿽\" \l0x0020: INVOKE  (r3 I:float) = (r8 I:android.graphics.Paint), (r3 I:java.lang.String) android.graphics.Paint.measureText(java.lang.String):float type: VIRTUAL \l0x0024: CONST_STR  (r4 I:java.lang.String) =  \"m\" \l0x0026: INVOKE  (r4 I:float) = (r8 I:android.graphics.Paint), (r4 I:java.lang.String) android.graphics.Paint.measureText(java.lang.String):float type: VIRTUAL \l0x002a: INVOKE  (r5 I:float) = (r8 I:android.graphics.Paint), (r9 I:java.lang.String) android.graphics.Paint.measureText(java.lang.String):float type: VIRTUAL \l0x002e: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: CMP_L  (r7 I:int) = (r5 I:float), (r6 I:float) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0034 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: RETURN  (r2 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: INVOKE  (r7 I:int) = (r9 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0038: INVOKE  (r7 I:int) = (r9 I:java.lang.String), (r2 I:int), (r7 I:int) java.lang.String.codePointCount(int, int):int type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|0x003c: IF  (r7 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:23:0x005f \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|0x003e: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x0040: ARITH  (r4 I:float) = (r4 I:float) * (r7 I:float) \l0x0042: CMP_L  (r4 I:int) = (r5 I:float), (r4 I:float) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|0x0044: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:17:0x0047 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0046|0x0046: RETURN  (r2 I:boolean) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0047|0x0047: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0048|0x0048: IF  (r4 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:20:0x005a \l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|0x004a: INVOKE  (r7 I:int) = (r9 I:java.lang.String), (r4 I:int) java.lang.String.codePointAt(int):int type: VIRTUAL \l0x004e: INVOKE  (r7 I:int) = (r7 I:int) java.lang.Character.charCount(int):int type: STATIC \l0x0052: ARITH  (r7 I:int) = (r7 I:int) + (r4 I:int) \l0x0053: INVOKE  (r4 I:float) = \l  (r8 I:android.graphics.Paint)\l  (r9 I:java.lang.String)\l  (r4 I:int)\l  (r7 I:int)\l android.graphics.Paint.measureText(java.lang.String, int, int):float type: VIRTUAL \l0x0057: ARITH  (r6 I:float) = (r6 I:float) + (r4 I:float) \l0x0058: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x005a|0x005a: CMP_L  (r4 I:int) = (r5 I:float), (r6 I:float) \l}"];
Node_21 [shape=record,label="{21\:\ 0x005c|0x005c: IF  (r4 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:23:0x005f \l}"];
Node_22 [shape=record,label="{22\:\ 0x005e|0x005e: RETURN  (r2 I:boolean) \l}"];
Node_23 [shape=record,label="{23\:\ 0x005f|0x005f: CMP_L  (r3 I:int) = (r5 I:float), (r3 I:float) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0061|0x0061: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0064 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0063|0x0063: RETURN  (r1 I:boolean) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0064|0x0064: INVOKE  (r3 I:android.support.v4.util.Pair) =  android.support.v4.graphics.PaintCompat.obtainEmptyRects():android.support.v4.util.Pair type: STATIC \l0x0068: CONST_STR  (r4 I:java.lang.String) =  \"󟿽\" \l0x006a: CONST_STR  (r5 I:java.lang.String) =  \"󟿽\" \l0x006c: INVOKE  (r5 I:int) = (r5 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0070: IGET  (r6 I:F) = (r3 I:android.support.v4.util.Pair) android.support.v4.util.Pair.first java.lang.Object \l0x0072: CHECK_CAST  (r6 I:android.graphics.Rect) = (android.graphics.Rect) (r6 I:?[OBJECT, ARRAY]) \l0x0074: INVOKE  \l  (r8 I:android.graphics.Paint)\l  (r4 I:java.lang.String)\l  (r2 I:int)\l  (r5 I:int)\l  (r6 I:android.graphics.Rect)\l android.graphics.Paint.getTextBounds(java.lang.String, int, int, android.graphics.Rect):void type: VIRTUAL \l0x0077: IGET  (r4 I:S) = (r3 I:android.support.v4.util.Pair) android.support.v4.util.Pair.second java.lang.Object \l0x0079: CHECK_CAST  (r4 I:android.graphics.Rect) = (android.graphics.Rect) (r4 I:?[OBJECT, ARRAY]) \l0x007b: INVOKE  \l  (r8 I:android.graphics.Paint)\l  (r9 I:java.lang.String)\l  (r2 I:int)\l  (r0 I:int)\l  (r4 I:android.graphics.Rect)\l android.graphics.Paint.getTextBounds(java.lang.String, int, int, android.graphics.Rect):void type: VIRTUAL \l0x007e: IGET  (r8 I:F) = (r3 I:android.support.v4.util.Pair) android.support.v4.util.Pair.first java.lang.Object \l0x0080: CHECK_CAST  (r8 I:android.graphics.Rect) = (android.graphics.Rect) (r8 I:?[OBJECT, ARRAY]) \l0x0082: IGET  (r9 I:S) = (r3 I:android.support.v4.util.Pair) android.support.v4.util.Pair.second java.lang.Object \l0x0084: INVOKE  (r8 I:boolean) = (r8 I:android.graphics.Rect), (r9 I:java.lang.Object) android.graphics.Rect.equals(java.lang.Object):boolean type: VIRTUAL \l0x0088: ARITH  (r8 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char]) ^ (r1 I:?[int, boolean, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0089|0x0089: RETURN  (r8 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean android.support.v4.graphics.PaintCompat.hasGlyph((r8 I:android.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_23;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_18;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_26 -> Node_27;
}

