digraph "CFG forandroid.support.v4.graphics.TypefaceCompat.createFromResourcesFamilyXml(Landroid\/content\/Context;Landroid\/support\/v4\/content\/res\/FontResourcesParserCompat$FamilyResourceEntry;Landroid\/content\/res\/Resources;IILandroid\/support\/v4\/content\/res\/ResourcesCompat$FontCallback;Landroid\/os\/Handler;Z)Landroid\/graphics\/Typeface;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r4 I:boolean) = (r8 I:?[OBJECT, ARRAY]) android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0005: CHECK_CAST  (r0 I:android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry) = (android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry) (r0 I:?[OBJECT, ARRAY]) \l0x0007: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0013 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: INVOKE  (r6 I:int) = \l  (r0 I:android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry)\l android.support.v4.content.res.FontResourcesParserCompat.ProviderResourceEntry.getFetchStrategy():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0016 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0016 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|0x0016: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001e \l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|0x0018: INVOKE  (r1 I:int) = \l  (r0 I:android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry)\l android.support.v4.content.res.FontResourcesParserCompat.ProviderResourceEntry.getTimeout():int type: VIRTUAL \l0x001c: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x001f: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: INVOKE  (r1 I:android.support.v4.provider.FontRequest) = \l  (r0 I:android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry)\l android.support.v4.content.res.FontResourcesParserCompat.ProviderResourceEntry.getRequest():android.support.v4.provider.FontRequest type: VIRTUAL \l0x0024: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0025: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0026: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0027: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0028: INVOKE  (r0 I:android.graphics.Typeface) = \l  (r0 I:android.content.Context)\l  (r1 I:android.support.v4.provider.FontRequest)\l  (r2 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r3 I:android.os.Handler)\l  (r4 I:boolean)\l  (r5 I:int)\l  (r6 I:int)\l android.support.v4.provider.FontsContractCompat.getFontSync(android.content.Context, android.support.v4.provider.FontRequest, android.support.v4.content.res.ResourcesCompat$FontCallback, android.os.Handler, boolean, int, int):android.graphics.Typeface type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: SGET  (r1 I:android.support.v4.graphics.TypefaceCompatBaseImpl) =  android.support.v4.graphics.TypefaceCompat.sTypefaceCompatImpl android.support.v4.graphics.TypefaceCompatBaseImpl \l0x002f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0030: CHECK_CAST  (r0 I:android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry) = (android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry) (r0 I:?[OBJECT, ARRAY]) \l0x0032: INVOKE  (r0 I:android.graphics.Typeface) = \l  (r1 I:android.support.v4.graphics.TypefaceCompatBaseImpl)\l  (r7 I:android.content.Context)\l  (r0 I:android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)\l  (r9 I:android.content.res.Resources)\l  (r11 I:int)\l android.support.v4.graphics.TypefaceCompatBaseImpl.createFromFontFamilyFilesResourceEntry(android.content.Context, android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry, android.content.res.Resources, int):android.graphics.Typeface type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|0x0036: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0042 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|0x0038: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x003e \l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|0x003a: INVOKE  \l  (r12 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r0 I:android.graphics.Typeface)\l  (r13 I:android.os.Handler)\l android.support.v4.content.res.ResourcesCompat.FontCallback.callbackSuccessAsync(android.graphics.Typeface, android.os.Handler):void type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x003e|0x003e: CONST  (r1 I:?[int, float, short, byte, char]) = (\-3 ?[int, float, short, byte, char]) \l0x003f: INVOKE  \l  (r12 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r1 I:int)\l  (r13 I:android.os.Handler)\l android.support.v4.content.res.ResourcesCompat.FontCallback.callbackFailAsync(int, android.os.Handler):void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0042|0x0042: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004d \l}"];
Node_19 [shape=record,label="{19\:\ 0x0044|0x0044: SGET  (r1 I:android.support.v4.util.LruCache\<java.lang.String, android.graphics.Typeface\>) =  android.support.v4.graphics.TypefaceCompat.sTypefaceCache android.support.v4.util.LruCache \l0x0046: INVOKE  (r2 I:java.lang.String) = \l  (r9 I:android.content.res.Resources)\l  (r10 I:int)\l  (r11 I:int)\l android.support.v4.graphics.TypefaceCompat.createResourceUid(android.content.res.Resources, int, int):java.lang.String type: STATIC \l0x004a: INVOKE  \l  (r1 I:android.support.v4.util.LruCache)\l  (r2 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l android.support.v4.util.LruCache.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x004d|0x004d: RETURN  (r0 I:android.graphics.Typeface) \l}"];
MethodNode[shape=record,label="{public static android.graphics.Typeface android.support.v4.graphics.TypefaceCompat.createFromResourcesFamilyXml((r7 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.support.v4.content.res.ResourcesCompat$FontCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:android.os.Handler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], , , Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], \lAnnotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_9;
Node_7 -> Node_9;
Node_7 -> Node_6[style=dashed];
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_18;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
}

