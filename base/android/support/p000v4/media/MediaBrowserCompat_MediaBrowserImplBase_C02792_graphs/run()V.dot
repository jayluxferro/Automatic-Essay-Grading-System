digraph "CFG forandroid.support.v4.media.MediaBrowserCompat.MediaBrowserImplBase.2.run()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r5.this$0.mCallbacksMessenger == null) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|SYNTHETIC\lSplitter:B:2:0x0006\l}"];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ RemoteException \-\> 0x0031 \}\lSplitter:B:2:0x0006\l|r5.this$0.mServiceBinderWrapper.disconnect(r5.this$0.mCallbacksMessenger)     \/\/ Catch:\{ RemoteException \-\> 0x0031 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|int r1 = r5.this$0.mState\lr5.this$0.forceCloseConnection()\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|if (r1 == 0) goto L_0x0020\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|r5.this$0.mState = r1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020}"];
Node_8 [shape=record,label="{8\:\ 0x0022|if (android.support.p000v4.media.MediaBrowserCompat.DEBUG == false) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|android.util.Log.d(android.support.p000v4.media.MediaBrowserCompat.TAG, \"disconnect...\")\lr5.this$0.dump()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|ExcHandler: RemoteException (e android.os.RemoteException)\lSplitter:B:2:0x0006\l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|android.util.Log.w(android.support.p000v4.media.MediaBrowserCompat.TAG, new java.lang.StringBuilder().append(\"RemoteException during connect for \").append(r5.this$0.mServiceComponent).toString())\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.v4.media.MediaBrowserCompat.MediaBrowserImplBase.2.run((r5v0 'this' android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$2 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_4;
}

