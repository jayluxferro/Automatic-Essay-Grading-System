digraph "CFG forandroid.support.v4.media.MediaBrowserServiceCompat.ServiceCallbacksCompat.onConnect(Ljava\/lang\/String;Landroid\/support\/v4\/media\/session\/MediaSessionCompat$Token;Landroid\/os\/Bundle;)V" {
subgraph cluster_Region_1847782821 {
label = "R(2:(1:1)|2)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_445359754 {
label = "IF [B:0:0x0000] THEN: R(1:1) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 == null) goto L_0x0002\l}"];
subgraph cluster_Region_831517170 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|android.os.Bundle r5 = new android.os.Bundle()\l}"];
}
}
Node_2 [shape=record,label="{2\:\ 0x0007|PHI: r5 \l  PHI: (r5v1 android.os.Bundle) = (r5v0 android.os.Bundle), (r5v2 android.os.Bundle) binds: [B:0:0x0000, B:1:0x0002] A[DONT_GENERATE, DONT_INLINE]\l|r5.putInt(android.support.p000v4.media.MediaBrowserProtocol.EXTRA_SERVICE_VERSION, 2)\landroid.os.Bundle android.os.Bundle r0 = new android.os.Bundle()\lr0.putString(android.support.p000v4.media.MediaBrowserProtocol.DATA_MEDIA_ITEM_ID, r3)\lr0.putParcelable(android.support.p000v4.media.MediaBrowserProtocol.DATA_MEDIA_SESSION_TOKEN, r4)\lr0.putBundle(android.support.p000v4.media.MediaBrowserProtocol.DATA_ROOT_HINTS, r5)\lsendRequest(1, r0)\l}"];
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0025}"];
MethodNode[shape=record,label="{public void android.support.v4.media.MediaBrowserServiceCompat.ServiceCallbacksCompat.onConnect((r2v0 'this' android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacksCompat A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.support.v4.media.session.MediaSessionCompat$Token A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.os.RemoteException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2[style=dashed];
Node_1 -> Node_2;
Node_2 -> Node_3;
}

