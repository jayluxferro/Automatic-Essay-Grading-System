digraph "CFG forandroid.support.v4.media.MediaBrowserServiceCompat.MediaBrowserServiceImplBase.notifyChildrenChangedOnHandler(Landroid\/support\/v4\/media\/MediaBrowserServiceCompat$ConnectionRecord;Ljava\/lang\/String;Landroid\/os\/Bundle;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.HashMap\<java.lang.String, java.util.List\<android.support.v4.util.Pair\<android.os.IBinder, android.os.Bundle\>\>\>) = \l  (r4 I:android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord)\l android.support.v4.media.MediaBrowserServiceCompat.ConnectionRecord.subscriptions java.util.HashMap \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.HashMap), (r5 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:java.util.List) = (java.util.List) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0018: CHECK_CAST  (r1 I:android.support.v4.util.Pair) = (android.support.v4.util.Pair) (r1 I:?[OBJECT, ARRAY]) \l0x001a: IGET  (r2 I:S) = (r1 I:android.support.v4.util.Pair) android.support.v4.util.Pair.second java.lang.Object \l0x001c: CHECK_CAST  (r2 I:android.os.Bundle) = (android.os.Bundle) (r2 I:?[OBJECT, ARRAY]) \l0x001e: INVOKE  (r2 I:boolean) = (r6 I:android.os.Bundle), (r2 I:android.os.Bundle) android.support.v4.media.MediaBrowserCompatUtils.hasDuplicatedItems(android.os.Bundle, android.os.Bundle):boolean type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IGET  (r2 I:android.support.v4.media.MediaBrowserServiceCompat) = \l  (r3 I:android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase)\l android.support.v4.media.MediaBrowserServiceCompat.MediaBrowserServiceImplBase.this$0 android.support.v4.media.MediaBrowserServiceCompat \l0x0026: IGET  (r1 I:S) = (r1 I:android.support.v4.util.Pair) android.support.v4.util.Pair.second java.lang.Object \l0x0028: CHECK_CAST  (r1 I:android.os.Bundle) = (android.os.Bundle) (r1 I:?[OBJECT, ARRAY]) \l0x002a: INVOKE  \l  (r2 I:android.support.v4.media.MediaBrowserServiceCompat)\l  (r5 I:java.lang.String)\l  (r4 I:android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord)\l  (r1 I:android.os.Bundle)\l  (r6 I:android.os.Bundle)\l android.support.v4.media.MediaBrowserServiceCompat.performLoadChildren(java.lang.String, android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord, android.os.Bundle, android.os.Bundle):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.v4.media.MediaBrowserServiceCompat.MediaBrowserServiceImplBase.notifyChildrenChangedOnHandler((r3 'this' I:android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase A[IMMUTABLE_TYPE, THIS]), (r4 I:android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_3;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_3;
}

