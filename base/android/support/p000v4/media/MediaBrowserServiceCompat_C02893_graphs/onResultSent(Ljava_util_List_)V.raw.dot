digraph "CFG forandroid.support.v4.media.MediaBrowserServiceCompat.3.onResultSent(Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r1 I:int) = (r4 I:android.support.v4.media.MediaBrowserServiceCompat$3) android.support.v4.media.MediaBrowserServiceCompat.3.getFlags():int type: VIRTUAL \l0x0005: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (4 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('items' java.util.List\<android.support.v4.media.MediaBrowserCompat$MediaItem\>)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0013 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r1 I:android.support.v4.os.ResultReceiver) = (r4 I:android.support.v4.media.MediaBrowserServiceCompat$3) android.support.v4.media.MediaBrowserServiceCompat.3.val$receiver android.support.v4.os.ResultReceiver \l0x000d: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x000e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000f: INVOKE  \l  (r1 I:android.support.v4.os.ResultReceiver)\l  (r2 I:int)\l  (r3 I:android.os.Bundle)\l android.support.v4.os.ResultReceiver.send(int, android.os.Bundle):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: NEW_INSTANCE  (r0 I:android.os.Bundle) =  android.os.Bundle \l0x0015: INVOKE  (r0 I:android.os.Bundle) android.os.Bundle.\<init\>():void type: DIRECT \l0x0018: CONST_STR  (r2 I:java.lang.String) =  \"search_results\" \l0x001a: NEW_ARRAY  (r1 I:android.support.v4.media.MediaBrowserCompat$MediaItem[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: android.support.v4.media.MediaBrowserCompat$MediaItem[] \l0x001c: INVOKE  (r1 I:java.lang.Object[]) = \l  (r5 I:java.util.List A[D('items' java.util.List\<android.support.v4.media.MediaBrowserCompat$MediaItem\>)])\l  (r1 I:java.lang.Object[])\l java.util.List.toArray(java.lang.Object[]):java.lang.Object[] type: INTERFACE \l0x0020: CHECK_CAST  (r1 I:android.os.Parcelable[]) = (android.os.Parcelable[]) (r1 I:?[OBJECT, ARRAY]) \l0x0022: INVOKE  \l  (r0 I:android.os.Bundle A[D('bundle' android.os.Bundle)])\l  (r2 I:java.lang.String)\l  (r1 I:android.os.Parcelable[])\l android.os.Bundle.putParcelableArray(java.lang.String, android.os.Parcelable[]):void type: VIRTUAL \l0x0025: IGET  (r1 I:android.support.v4.os.ResultReceiver) = (r4 I:android.support.v4.media.MediaBrowserServiceCompat$3) android.support.v4.media.MediaBrowserServiceCompat.3.val$receiver android.support.v4.os.ResultReceiver \l0x0027: INVOKE  \l  (r1 I:android.support.v4.os.ResultReceiver)\l  (r3 I:int)\l  (r0 I:android.os.Bundle A[D('bundle' android.os.Bundle)])\l android.support.v4.os.ResultReceiver.send(int, android.os.Bundle):void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{void android.support.v4.media.MediaBrowserServiceCompat.3.onResultSent((r4 'this' I:android.support.v4.media.MediaBrowserServiceCompat$3 A[IMMUTABLE_TYPE, THIS]), (r5 I:java.util.List\<android.support.v4.media.MediaBrowserCompat$MediaItem\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0018\-0x002a: r0 'bundle' android.os.Bundle\l  0x0000\-0x002a: r5 'items' java.util.List\<android.support.v4.media.MediaBrowserCompat$MediaItem\>\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List, \<, Landroid\/support\/v4\/media\/MediaBrowserCompat$MediaItem;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_4;
}

