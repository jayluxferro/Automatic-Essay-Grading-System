digraph "CFG forandroid.support.v4.media.MediaMetadataCompat.Builder.putBitmap(Ljava\/lang\/String;Landroid\/graphics\/Bitmap;)Landroid\/support\/v4\/media\/MediaMetadataCompat$Builder;" {
subgraph cluster_Region_1449147785 {
label = "R(1:(2:(2:6|7)|(2:4|5)))";
node [shape=record,color=blue];
subgraph cluster_Region_751840239 {
label = "R(2:(2:6|7)|(2:4|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1078281779 {
label = "IF [B:1:0x0006, B:3:0x0015] THEN: R(2:6|7) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (android.support.p000v4.media.MediaMetadataCompat.METADATA_KEYS_TYPE.containsKey(r3) == false) goto L_0x0034\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|ADDED_TO_REGION\l|if (android.support.p000v4.media.MediaMetadataCompat.METADATA_KEYS_TYPE.get(r3).intValue() == 2) goto L_0x0034\l}"];
subgraph cluster_Region_1972207507 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0034|r2.mBundle.putParcelable(r3, r4)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0039|RETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_584489182 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0018}"];
Node_5 [shape=record,label="{5\:\ 0x0033|throw new java.lang.IllegalArgumentException(\"The \" + r3 + \" key cannot be used to put a Bitmap\")\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
MethodNode[shape=record,label="{public android.support.v4.media.MediaMetadataCompat$Builder android.support.v4.media.MediaMetadataCompat.Builder.putBitmap((r2v0 'this' android.support.v4.media.MediaMetadataCompat$Builder A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_6 -> Node_7;
Node_4 -> Node_5;
Node_0 -> Node_1;
Node_2 -> Node_3;
}

