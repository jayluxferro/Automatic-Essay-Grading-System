digraph "CFG forandroid.support.v4.media.MediaMetadataCompat.Builder.putBitmap(Ljava\/lang\/String;Landroid\/graphics\/Bitmap;)Landroid\/support\/v4\/media\/MediaMetadataCompat$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:android.support.v4.util.ArrayMap\<java.lang.String, java.lang.Integer\>) =  android.support.v4.media.MediaMetadataCompat.METADATA_KEYS_TYPE android.support.v4.util.ArrayMap \l0x0002: INVOKE  (r0 I:boolean) = \l  (r0 I:android.support.v4.util.ArrayMap)\l  (r3 I:java.lang.Object)\l android.support.v4.util.ArrayMap.containsKey(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0034 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: SGET  (r0 I:android.support.v4.util.ArrayMap\<java.lang.String, java.lang.Integer\>) =  android.support.v4.media.MediaMetadataCompat.METADATA_KEYS_TYPE android.support.v4.util.ArrayMap \l0x000a: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:android.support.v4.util.ArrayMap)\l  (r3 I:java.lang.Object)\l android.support.v4.util.ArrayMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x000e: CHECK_CAST  (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:?[OBJECT, ARRAY]) \l0x0010: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0014: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x001a: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001c: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001f: CONST_STR  (r1 I:java.lang.String) =  \"The \" \l0x0021: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0024: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0027: CONST_STR  (r3 I:java.lang.String) =  \" key cannot be used to put a Bitmap\" \l0x0029: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002c: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0030: INVOKE  \l  (r4 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0033|0x0033: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|0x0034: IGET  (r0 I:android.os.Bundle) = (r2 I:android.support.v4.media.MediaMetadataCompat$Builder) android.support.v4.media.MediaMetadataCompat.Builder.mBundle android.os.Bundle \l0x0036: INVOKE  \l  (r0 I:android.os.Bundle)\l  (r3 I:java.lang.String)\l  (r4 I:android.os.Parcelable)\l android.os.Bundle.putParcelable(java.lang.String, android.os.Parcelable):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: RETURN  (r2 I:android.support.v4.media.MediaMetadataCompat$Builder) \l}"];
MethodNode[shape=record,label="{public android.support.v4.media.MediaMetadataCompat$Builder android.support.v4.media.MediaMetadataCompat.Builder.putBitmap((r2 'this' I:android.support.v4.media.MediaMetadataCompat$Builder A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_7[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
}

