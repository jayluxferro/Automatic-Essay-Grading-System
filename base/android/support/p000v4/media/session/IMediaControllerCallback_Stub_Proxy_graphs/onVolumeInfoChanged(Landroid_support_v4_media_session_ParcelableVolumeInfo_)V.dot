digraph "CFG forandroid.support.v4.media.session.IMediaControllerCallback.Stub.Proxy.onVolumeInfoChanged(Landroid\/support\/v4\/media\/session\/ParcelableVolumeInfo;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.os.Parcel r0 = android.os.Parcel.obtain()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|SYNTHETIC\lSplitter:B:1:0x0006\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x0023 \}\lSplitter:B:1:0x0006\l|r0.writeInterfaceToken(android.support.p000v4.media.session.IMediaControllerCallback.Stub.DESCRIPTOR)     \/\/ Catch:\{ all \-\> 0x0023 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|Catch:\{ all \-\> 0x0023 \}\l|if (r5 == null) goto L_0x0014     \/\/ Catch:\{ all \-\> 0x0023 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|Catch:\{ all \-\> 0x0023 \}\l|r0.writeInt(1)     \/\/ Catch:\{ all \-\> 0x0023 \}\lr5.writeToParcel(r0, 0)     \/\/ Catch:\{ all \-\> 0x0023 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|Catch:\{ all \-\> 0x0023 \}\l|r0.writeInt(0)     \/\/ Catch:\{ all \-\> 0x0023 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|Catch:\{ all \-\> 0x0023 \}\l|r4.mRemote.transact(8, r0, (android.os.Parcel) null, 1)     \/\/ Catch:\{ all \-\> 0x0023 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|DONT_GENERATE\l|r0.recycle()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|ExcHandler:  FINALLY\lSplitter:B:1:0x0006\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|FINALLY_INSNS\l|r0.recycle()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|throw r5\l}"];
MethodNode[shape=record,label="{public void android.support.v4.media.session.IMediaControllerCallback.Stub.Proxy.onVolumeInfoChanged((r4v0 'this' android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy A[IMMUTABLE_TYPE, THIS]), (r5v0 android.support.v4.media.session.ParcelableVolumeInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.os.RemoteException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

