digraph "CFG forandroid.support.v4.media.session.MediaControllerCompat.Callback.StubCompat.onVolumeInfoChanged(Landroid\/support\/v4\/media\/session\/ParcelableVolumeInfo;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.ref.WeakReference\<android.support.v4.media.session.MediaControllerCompat$Callback\>) = \l  (r9 I:android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat)\l android.support.v4.media.session.MediaControllerCompat.Callback.StubCompat.mCallback java.lang.ref.WeakReference \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:android.support.v4.media.session.MediaControllerCompat$Callback) = (android.support.v4.media.session.MediaControllerCompat$Callback) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0023 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: NEW_INSTANCE  (r8 I:android.support.v4.media.session.MediaControllerCompat$PlaybackInfo) =  android.support.v4.media.session.MediaControllerCompat$PlaybackInfo \l0x000f: IGET  (r3 I:int) = \l  (r10 I:android.support.v4.media.session.ParcelableVolumeInfo)\l android.support.v4.media.session.ParcelableVolumeInfo.volumeType int \l0x0011: IGET  (r4 I:int) = \l  (r10 I:android.support.v4.media.session.ParcelableVolumeInfo)\l android.support.v4.media.session.ParcelableVolumeInfo.audioStream int \l0x0013: IGET  (r5 I:int) = \l  (r10 I:android.support.v4.media.session.ParcelableVolumeInfo)\l android.support.v4.media.session.ParcelableVolumeInfo.controlType int \l0x0015: IGET  (r6 I:int) = \l  (r10 I:android.support.v4.media.session.ParcelableVolumeInfo)\l android.support.v4.media.session.ParcelableVolumeInfo.maxVolume int \l0x0017: IGET  (r7 I:int) = \l  (r10 I:android.support.v4.media.session.ParcelableVolumeInfo)\l android.support.v4.media.session.ParcelableVolumeInfo.currentVolume int \l0x0019: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x001a: INVOKE  \l  (r2 I:android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l android.support.v4.media.session.MediaControllerCompat.PlaybackInfo.\<init\>(int, int, int, int, int):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: CONST  (r10 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0020: INVOKE  \l  (r0 I:android.support.v4.media.session.MediaControllerCompat$Callback)\l  (r10 I:int)\l  (r8 I:java.lang.Object)\l  (r1 I:android.os.Bundle)\l android.support.v4.media.session.MediaControllerCompat.Callback.postToHandler(int, java.lang.Object, android.os.Bundle):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.media.session.MediaControllerCompat.Callback.StubCompat.onVolumeInfoChanged((r9 'this' I:android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat A[IMMUTABLE_TYPE, THIS]), (r10 I:android.support.v4.media.session.ParcelableVolumeInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.os.RemoteException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

