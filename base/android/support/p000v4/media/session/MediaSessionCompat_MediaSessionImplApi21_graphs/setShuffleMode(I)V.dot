digraph "CFG forandroid.support.v4.media.session.MediaSessionCompat.MediaSessionImplApi21.setShuffleMode(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.mShuffleMode == r3) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r2.mShuffleMode = r3\lint r0 = r2.mExtraControllerCallbacks.beginBroadcast() + \-1\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|LOOP_START\lPHI: r0 \l  PHI: (r0v4 int) = (r0v3 int), (r0v5 int) binds: [B:2:0x0004, B:7:0x001b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x000e\-\>B:7:0x001b\l|if (r0 \< 0) goto L_0x001e\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010}"];
Node_5 [shape=record,label="{5\:\ 0x0018|SYNTHETIC\lSplitter:B:5:0x0018\l}"];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ RemoteException \-\> 0x001b \}\lSplitter:B:5:0x0018\l|r2.mExtraControllerCallbacks.getBroadcastItem(r0).onShuffleModeChanged(r3)     \/\/ Catch:\{ RemoteException \-\> 0x001b \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|LOOP_END\lLOOP:0: B:3:0x000e\-\>B:7:0x001b\l|int r0 = r0 + \-1\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lExcHandler: RemoteException (unused android.os.RemoteException)\lSplitter:B:5:0x0018\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|r2.mExtraControllerCallbacks.finishBroadcast()\l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.v4.media.session.MediaSessionCompat.MediaSessionImplApi21.setShuffleMode((r2v0 'this' android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 A[IMMUTABLE_TYPE, THIS]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_8;
Node_6 -> Node_11;
Node_7 -> Node_3;
Node_8 -> Node_7;
Node_9 -> Node_12;
Node_10 -> Node_9;
Node_11 -> Node_7;
}

