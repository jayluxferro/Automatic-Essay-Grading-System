digraph "CFG forandroid.support.v4.media.session.MediaControllerCompat.MediaControllerImplBase.addQueueItem(Landroid\/support\/v4\/media\/MediaDescriptionCompat;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ RemoteException \-\> 0x001d \}\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|Catch:\{ RemoteException \-\> 0x001d \}\l|if (((r4.mBinder.getFlags() & 4) \> 0 ? 1 : ((r4.mBinder.getFlags() & 4) == 0 ? 0 : \-1)) == 0) goto L_0x0015     \/\/ Catch:\{ RemoteException \-\> 0x001d \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|Catch:\{ RemoteException \-\> 0x001d \}\l|r4.mBinder.addQueueItemAt(r5, r6)     \/\/ Catch:\{ RemoteException \-\> 0x001d \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|Catch:\{ RemoteException \-\> 0x001d \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|Catch:\{ RemoteException \-\> 0x001d \}\l|throw new java.lang.UnsupportedOperationException(\"This session doesn't support queue management operations\")     \/\/ Catch:\{ RemoteException \-\> 0x001d \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|ExcHandler: RemoteException (r5v1 'e' android.os.RemoteException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|android.os.RemoteException r5 = move\-exception\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|android.util.Log.e(android.support.p000v4.media.session.MediaControllerCompat.TAG, \"Dead object in addQueueItemAt.\", r5)\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.v4.media.session.MediaControllerCompat.MediaControllerImplBase.addQueueItem((r4v0 'this' android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase A[IMMUTABLE_TYPE, THIS]), (r5v0 android.support.v4.media.MediaDescriptionCompat A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_6;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

