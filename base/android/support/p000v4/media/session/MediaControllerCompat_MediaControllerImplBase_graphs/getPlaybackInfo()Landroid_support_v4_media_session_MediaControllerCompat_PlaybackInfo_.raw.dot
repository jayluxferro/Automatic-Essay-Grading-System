digraph "CFG forandroid.support.v4.media.session.MediaControllerCompat.MediaControllerImplBase.getPlaybackInfo()Landroid\/support\/v4\/media\/session\/MediaControllerCompat$PlaybackInfo;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:android.support.v4.media.session.IMediaSession) = \l  (r8 I:android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase)\l android.support.v4.media.session.MediaControllerCompat.MediaControllerImplBase.mBinder android.support.v4.media.session.IMediaSession A[Catch:\{ RemoteException \-\> 0x0017 \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:android.support.v4.media.session.ParcelableVolumeInfo) = (r0 I:android.support.v4.media.session.IMediaSession) android.support.v4.media.session.IMediaSession.getVolumeAttributes():android.support.v4.media.session.ParcelableVolumeInfo type: INTERFACE A[Catch:\{ RemoteException \-\> 0x0017 \}]\l0x0006: NEW_INSTANCE  (r7 I:android.support.v4.media.session.MediaControllerCompat$PlaybackInfo) =  android.support.v4.media.session.MediaControllerCompat$PlaybackInfo A[Catch:\{ RemoteException \-\> 0x0017 \}]\l0x0008: IGET  (r2 I:int) = \l  (r0 I:android.support.v4.media.session.ParcelableVolumeInfo)\l android.support.v4.media.session.ParcelableVolumeInfo.volumeType int A[Catch:\{ RemoteException \-\> 0x0017 \}]\l0x000a: IGET  (r3 I:int) = \l  (r0 I:android.support.v4.media.session.ParcelableVolumeInfo)\l android.support.v4.media.session.ParcelableVolumeInfo.audioStream int A[Catch:\{ RemoteException \-\> 0x0017 \}]\l0x000c: IGET  (r4 I:int) = \l  (r0 I:android.support.v4.media.session.ParcelableVolumeInfo)\l android.support.v4.media.session.ParcelableVolumeInfo.controlType int A[Catch:\{ RemoteException \-\> 0x0017 \}]\l0x000e: IGET  (r5 I:int) = \l  (r0 I:android.support.v4.media.session.ParcelableVolumeInfo)\l android.support.v4.media.session.ParcelableVolumeInfo.maxVolume int A[Catch:\{ RemoteException \-\> 0x0017 \}]\l0x0010: IGET  (r6 I:int) = \l  (r0 I:android.support.v4.media.session.ParcelableVolumeInfo)\l android.support.v4.media.session.ParcelableVolumeInfo.currentVolume int A[Catch:\{ RemoteException \-\> 0x0017 \}]\l0x0012: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) A[Catch:\{ RemoteException \-\> 0x0017 \}]\l0x0013: INVOKE  \l  (r1 I:android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l android.support.v4.media.session.MediaControllerCompat.PlaybackInfo.\<init\>(int, int, int, int, int):void type: DIRECT A[Catch:\{ RemoteException \-\> 0x0017 \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: RETURN  \l  (r7 I:android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|ExcHandler: RemoteException null\lSplitter:B:0:0x0000\l|0x0017: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: CONST_STR  (r1 I:java.lang.String) =  \"MediaControllerCompat\" \l0x001a: CONST_STR  (r2 I:java.lang.String) =  \"Dead object in getPlaybackInfo.\" \l0x001c: INVOKE  \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l0x001f: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: RETURN  \l  (r0 I:android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)\l \l}"];
MethodNode[shape=record,label="{public android.support.v4.media.session.MediaControllerCompat$PlaybackInfo android.support.v4.media.session.MediaControllerCompat.MediaControllerImplBase.getPlaybackInfo((r8 'this' I:android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

