digraph "CFG forandroid.support.v4.media.session.MediaControllerCompat.MediaControllerImplBase.addQueueItem(Landroid\/support\/v4\/media\/MediaDescriptionCompat;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:android.support.v4.media.session.IMediaSession) = \l  (r4 I:android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase)\l android.support.v4.media.session.MediaControllerCompat.MediaControllerImplBase.mBinder android.support.v4.media.session.IMediaSession A[Catch:\{ RemoteException \-\> 0x001d \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:long) = (r0 I:android.support.v4.media.session.IMediaSession) android.support.v4.media.session.IMediaSession.getFlags():long type: INTERFACE A[Catch:\{ RemoteException \-\> 0x001d \}]\l0x0006: CONST  (r2 I:?[long, double]) = (4 ?[long, double]) A[Catch:\{ RemoteException \-\> 0x001d \}]\l0x0008: ARITH  (r0 I:long) = (r0 I:long) & (r2 I:long) A[Catch:\{ RemoteException \-\> 0x001d \}]\l0x0009: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) A[Catch:\{ RemoteException \-\> 0x001d \}]\l0x000b: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) A[Catch:\{ RemoteException \-\> 0x001d \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0015 A[Catch:\{ RemoteException \-\> 0x001d \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IGET  (r0 I:android.support.v4.media.session.IMediaSession) = \l  (r4 I:android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase)\l android.support.v4.media.session.MediaControllerCompat.MediaControllerImplBase.mBinder android.support.v4.media.session.IMediaSession A[Catch:\{ RemoteException \-\> 0x001d \}]\l0x0011: INVOKE  \l  (r0 I:android.support.v4.media.session.IMediaSession)\l  (r5 I:android.support.v4.media.MediaDescriptionCompat)\l android.support.v4.media.session.IMediaSession.addQueueItem(android.support.v4.media.MediaDescriptionCompat):void type: INTERFACE A[Catch:\{ RemoteException \-\> 0x001d \}]\l0x0014: GOTO  \-\> 0x0025 A[Catch:\{ RemoteException \-\> 0x001d \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: NEW_INSTANCE  (r5 I:java.lang.UnsupportedOperationException) =  java.lang.UnsupportedOperationException A[Catch:\{ RemoteException \-\> 0x001d \}]\l0x0017: CONST_STR  (r0 I:java.lang.String) =  \"This session doesn't support queue management operations\" A[Catch:\{ RemoteException \-\> 0x001d \}]\l0x0019: INVOKE  \l  (r5 I:java.lang.UnsupportedOperationException)\l  (r0 I:java.lang.String)\l java.lang.UnsupportedOperationException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ RemoteException \-\> 0x001d \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: THROW  (r5 I:java.lang.Throwable) A[Catch:\{ RemoteException \-\> 0x001d \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|ExcHandler: RemoteException null\lSplitter:B:0:0x0000\l|0x001d: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: CONST_STR  (r0 I:java.lang.String) =  \"MediaControllerCompat\" \l0x0020: CONST_STR  (r1 I:java.lang.String) =  \"Dead object in addQueueItem.\" \l0x0022: INVOKE  \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r5 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.media.session.MediaControllerCompat.MediaControllerImplBase.addQueueItem((r4 'this' I:android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase A[IMMUTABLE_TYPE, THIS]), (r5 I:android.support.v4.media.MediaDescriptionCompat A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_6;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

