digraph "CFG forandroid.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.setFlags(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Object) = \l  (r1 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mLock java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: IPUT  \l  (r2 I:int)\l  (r1 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mFlags int A[Catch:\{ all \-\> 0x000a \}, TRY_ENTER]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x000a \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: INVOKE  \l  (r1 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.update():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x000a: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x000b|SYNTHETIC\lSplitter:B:8:0x000b\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x000b\l|0x000b: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x000a \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x000c|0x000c: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.setFlags((r1 'this' I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_7;
Node_9 -> Node_10;
Node_9 -> Node_7;
}

