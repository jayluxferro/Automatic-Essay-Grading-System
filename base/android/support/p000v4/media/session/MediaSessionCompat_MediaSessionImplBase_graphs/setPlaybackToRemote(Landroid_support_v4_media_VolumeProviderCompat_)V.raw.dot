digraph "CFG forandroid.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.setPlaybackToRemote(Landroid\/support\/v4\/media\/VolumeProviderCompat;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0036 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:android.support.v4.media.VolumeProviderCompat) = \l  (r7 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mVolumeProvider android.support.v4.media.VolumeProviderCompat \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000c \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r0 I:android.support.v4.media.VolumeProviderCompat) = \l  (r7 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mVolumeProvider android.support.v4.media.VolumeProviderCompat \l0x0008: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: INVOKE  \l  (r0 I:android.support.v4.media.VolumeProviderCompat)\l  (r1 I:android.support.v4.media.VolumeProviderCompat$Callback)\l android.support.v4.media.VolumeProviderCompat.setCallback(android.support.v4.media.VolumeProviderCompat$Callback):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000d: IPUT  \l  (r0 I:int)\l  (r7 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mVolumeType int \l0x000f: IPUT  \l  (r8 I:android.support.v4.media.VolumeProviderCompat)\l  (r7 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mVolumeProvider android.support.v4.media.VolumeProviderCompat \l0x0011: NEW_INSTANCE  (r0 I:android.support.v4.media.session.ParcelableVolumeInfo) =  android.support.v4.media.session.ParcelableVolumeInfo \l0x0013: IGET  (r2 I:int) = \l  (r7 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mVolumeType int \l0x0015: IGET  (r3 I:int) = \l  (r7 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mLocalStream int \l0x0017: IGET  (r1 I:android.support.v4.media.VolumeProviderCompat) = \l  (r7 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mVolumeProvider android.support.v4.media.VolumeProviderCompat \l0x0019: INVOKE  (r4 I:int) = (r1 I:android.support.v4.media.VolumeProviderCompat) android.support.v4.media.VolumeProviderCompat.getVolumeControl():int type: VIRTUAL \l0x001d: IGET  (r1 I:android.support.v4.media.VolumeProviderCompat) = \l  (r7 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mVolumeProvider android.support.v4.media.VolumeProviderCompat \l0x001f: INVOKE  (r5 I:int) = (r1 I:android.support.v4.media.VolumeProviderCompat) android.support.v4.media.VolumeProviderCompat.getMaxVolume():int type: VIRTUAL \l0x0023: IGET  (r1 I:android.support.v4.media.VolumeProviderCompat) = \l  (r7 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mVolumeProvider android.support.v4.media.VolumeProviderCompat \l0x0025: INVOKE  (r6 I:int) = (r1 I:android.support.v4.media.VolumeProviderCompat) android.support.v4.media.VolumeProviderCompat.getCurrentVolume():int type: VIRTUAL \l0x0029: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x002a: INVOKE  \l  (r1 I:android.support.v4.media.session.ParcelableVolumeInfo)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l android.support.v4.media.session.ParcelableVolumeInfo.\<init\>(int, int, int, int, int):void type: DIRECT \l0x002d: INVOKE  \l  (r7 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l  (r0 I:android.support.v4.media.session.ParcelableVolumeInfo)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo):void type: VIRTUAL \l0x0030: IGET  (r0 I:android.support.v4.media.VolumeProviderCompat$Callback) = \l  (r7 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mVolumeCallback android.support.v4.media.VolumeProviderCompat$Callback \l0x0032: INVOKE  \l  (r8 I:android.support.v4.media.VolumeProviderCompat)\l  (r0 I:android.support.v4.media.VolumeProviderCompat$Callback)\l android.support.v4.media.VolumeProviderCompat.setCallback(android.support.v4.media.VolumeProviderCompat$Callback):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0035|0x0035: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|0x0036: NEW_INSTANCE  (r8 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0038: CONST_STR  (r0 I:java.lang.String) =  \"volumeProvider may not be null\" \l0x003a: INVOKE  \l  (r8 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|0x003d: THROW  (r8 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.setPlaybackToRemote((r7 'this' I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase A[IMMUTABLE_TYPE, THIS]), (r8 I:android.support.v4.media.VolumeProviderCompat A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_6;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

