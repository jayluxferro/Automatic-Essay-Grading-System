digraph "CFG forandroid.support.v4.media.session.MediaControllerCompat.getSessionToken2Bundle()Landroid\/os\/Bundle;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v4.media.session.MediaSessionCompat$Token) = \l  (r1 I:android.support.v4.media.session.MediaControllerCompat)\l android.support.v4.media.session.MediaControllerCompat.mToken android.support.v4.media.session.MediaSessionCompat$Token \l0x0002: INVOKE  (r0 I:android.os.Bundle) = \l  (r0 I:android.support.v4.media.session.MediaSessionCompat$Token)\l android.support.v4.media.session.MediaSessionCompat.Token.getSessionToken2Bundle():android.os.Bundle type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: RETURN  (r0 I:android.os.Bundle) \l}"];
MethodNode[shape=record,label="{public android.os.Bundle android.support.v4.media.session.MediaControllerCompat.getSessionToken2Bundle((r1 'this' I:android.support.v4.media.session.MediaControllerCompat A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.RestrictTo, \{value=[android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP android.support.annotation.RestrictTo$Scope]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

