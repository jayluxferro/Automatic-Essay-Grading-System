digraph "CFG forandroid.support.v4.media.session.PlaybackStateCompat.CustomAction.Builder.\<init\>(Ljava\/lang\/String;Ljava\/lang\/CharSequence;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: INVOKE  (r0 I:boolean) = (r2 I:java.lang.CharSequence) android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: INVOKE  (r0 I:boolean) = (r3 I:java.lang.CharSequence) android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0020 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IPUT  \l  (r2 I:java.lang.String)\l  (r1 I:android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder)\l android.support.v4.media.session.PlaybackStateCompat.CustomAction.Builder.mAction java.lang.String \l0x0013: IPUT  \l  (r3 I:java.lang.CharSequence)\l  (r1 I:android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder)\l android.support.v4.media.session.PlaybackStateCompat.CustomAction.Builder.mName java.lang.CharSequence \l0x0015: IPUT  \l  (r4 I:int)\l  (r1 I:android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder)\l android.support.v4.media.session.PlaybackStateCompat.CustomAction.Builder.mIcon int \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x001a: CONST_STR  (r3 I:java.lang.String) =  \"You must specify an icon resource id to build a CustomAction.\" \l0x001c: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0022: CONST_STR  (r3 I:java.lang.String) =  \"You must specify a name to build a CustomAction.\" \l0x0024: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x002a: CONST_STR  (r3 I:java.lang.String) =  \"You must specify an action to build a CustomAction.\" \l0x002c: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.v4.media.session.PlaybackStateCompat.CustomAction.Builder.\<init\>((r1 'this' I:android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

