digraph "CFG forandroid.support.v4.media.session.MediaControllerCompat.Callback.StubApi21.onMetadataChanged(Ljava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.ref.WeakReference\<android.support.v4.media.session.MediaControllerCompat$Callback\>) = \l  (r1 I:android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21)\l android.support.v4.media.session.MediaControllerCompat.Callback.StubApi21.mCallback java.lang.ref.WeakReference \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:android.support.v4.media.session.MediaControllerCompat$Callback) = (android.support.v4.media.session.MediaControllerCompat$Callback) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  (r2 I:android.support.v4.media.MediaMetadataCompat) = (r2 I:java.lang.Object) android.support.v4.media.MediaMetadataCompat.fromMediaMetadata(java.lang.Object):android.support.v4.media.MediaMetadataCompat type: STATIC \l0x000e: INVOKE  \l  (r0 I:android.support.v4.media.session.MediaControllerCompat$Callback)\l  (r2 I:android.support.v4.media.MediaMetadataCompat)\l android.support.v4.media.session.MediaControllerCompat.Callback.onMetadataChanged(android.support.v4.media.MediaMetadataCompat):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.media.session.MediaControllerCompat.Callback.StubApi21.onMetadataChanged((r1 'this' I:android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

