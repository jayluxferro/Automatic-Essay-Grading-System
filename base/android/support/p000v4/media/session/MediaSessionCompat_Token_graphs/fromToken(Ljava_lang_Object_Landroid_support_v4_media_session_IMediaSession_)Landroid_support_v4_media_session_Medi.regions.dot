digraph "CFG forandroid.support.v4.media.session.MediaSessionCompat.Token.fromToken(Ljava\/lang\/Object;Landroid\/support\/v4\/media\/session\/IMediaSession;)Landroid\/support\/v4\/media\/session\/MediaSessionCompat$Token;" {
subgraph cluster_Region_1673299092 {
label = "R(1:(2:(1:6)|(1:4)))";
node [shape=record,color=blue];
subgraph cluster_Region_878918480 {
label = "R(2:(1:6)|(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2087543849 {
label = "IF [B:0:0x0000, B:2:0x0006] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r2 == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|ADDED_TO_REGION\l|if (android.os.Build.VERSION.SDK_INT \< 21) goto L_?\l}"];
subgraph cluster_Region_1721174146 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1636346080 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|RETURN\l|return new android.support.p000v4.media.session.MediaSessionCompat.Token(android.support.p000v4.media.session.MediaSessionCompatApi21.verifyToken(r2), r3)\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0008}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return null\l}"];
MethodNode[shape=record,label="{public static android.support.v4.media.session.MediaSessionCompat$Token android.support.v4.media.session.MediaSessionCompat.Token.fromToken((r2v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 android.support.v4.media.session.IMediaSession A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.RestrictTo, \{value=[android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP android.support.annotation.RestrictTo$Scope]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

