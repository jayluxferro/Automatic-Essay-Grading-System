digraph "CFG forandroid.support.v4.media.session.IMediaSession.Stub.Proxy.sendMediaButton(Landroid\/view\/KeyEvent;)Z" {
subgraph cluster_Region_1127691731 {
label = "R(2:0|(5:2|(1:4)(1:5)|6|(1:8)|10))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.os.Parcel android.os.Parcel r0 = android.os.Parcel.obtain()\landroid.os.Parcel android.os.Parcel r1 = android.os.Parcel.obtain()\l}"];
subgraph cluster_TryCatchRegion_907689141 {
label = "Try: R(5:2|(1:4)(1:5)|6|(1:8)|10) finally: R(3:11|12|13)";
node [shape=record,color=blue];
subgraph cluster_Region_609322660 {
label = "R(5:2|(1:4)(1:5)|6|(1:8)|10)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x0033 \}\lSplitter:B:1:0x000a\l|r0.writeInterfaceToken(android.support.p000v4.media.session.IMediaSession.Stub.DESCRIPTOR)     \/\/ Catch:\{ all \-\> 0x0033 \}\lboolean r2 = true     \/\/ Catch:\{ all \-\> 0x0033 \}\l}"];
subgraph cluster_IfRegion_1287704013 {
label = "IF [B:3:0x000f] THEN: R(1:4) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000f|Catch:\{ all \-\> 0x0033 \}\l|if (r6 != null) goto L_0x0011     \/\/ Catch:\{ all \-\> 0x0033 \}\l}"];
subgraph cluster_Region_1147724494 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|Catch:\{ all \-\> 0x0033 \}\l|r0.writeInt(1)     \/\/ Catch:\{ all \-\> 0x0033 \}\lr6.writeToParcel(r0, 0)     \/\/ Catch:\{ all \-\> 0x0033 \}\l}"];
}
subgraph cluster_Region_1954705516 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0018|Catch:\{ all \-\> 0x0033 \}\l|r0.writeInt(0)     \/\/ Catch:\{ all \-\> 0x0033 \}\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x001b|Catch:\{ all \-\> 0x0033 \}\l|r5.mRemote.transact(2, r0, r1, 0)     \/\/ Catch:\{ all \-\> 0x0033 \}\lr1.readException()     \/\/ Catch:\{ all \-\> 0x0033 \}\l}"];
subgraph cluster_IfRegion_640522588 {
label = "IF [B:7:0x0028] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0028|if (r1.readInt() == 0) goto L_0x002b\l}"];
subgraph cluster_Region_626028997 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002b|r2 = false\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x0032|RETURN\l|return r2\l}"];
}
subgraph cluster_Region_249645698 {
label = "R(3:11|12|13) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0033|ExcHandler:  FINALLY\lSplitter:B:1:0x000a\l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|FINALLY_INSNS\l|r1.recycle()\lr0.recycle()\l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|throw r6\l}"];
}
}
}
subgraph cluster_Region_249645698 {
label = "R(3:11|12|13) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0033|ExcHandler:  FINALLY\lSplitter:B:1:0x000a\l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|FINALLY_INSNS\l|r1.recycle()\lr0.recycle()\l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|throw r6\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000a|SYNTHETIC\lSplitter:B:1:0x000a\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002c|DONT_GENERATE\lPHI: r2 \l  PHI: (r2v2 boolean) = (r2v1 boolean), (r2v3 boolean) binds: [B:7:0x0028, B:8:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|r1.recycle()\lr0.recycle()\l}"];
MethodNode[shape=record,label="{public boolean android.support.v4.media.session.IMediaSession.Stub.Proxy.sendMediaButton((r5v0 'this' android.support.v4.media.session.IMediaSession$Stub$Proxy A[IMMUTABLE_TYPE, THIS]), (r6v0 android.view.KeyEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.os.RemoteException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_1 -> Node_2;
Node_1 -> Node_11;
Node_9 -> Node_10;
}

