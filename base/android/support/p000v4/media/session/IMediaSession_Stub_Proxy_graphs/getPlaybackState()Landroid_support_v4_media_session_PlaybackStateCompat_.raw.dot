digraph "CFG forandroid.support.v4.media.session.IMediaSession.Stub.Proxy.getPlaybackState()Landroid\/support\/v4\/media\/session\/PlaybackStateCompat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.os.Parcel) =  android.os.Parcel.obtain():android.os.Parcel type: STATIC \l0x0004: INVOKE  (r1 I:android.os.Parcel) =  android.os.Parcel.obtain():android.os.Parcel type: STATIC \l0x0008: CONST_STR  (r2 I:java.lang.String) =  \"android.support.v4.media.session.IMediaSession\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|SYNTHETIC\lSplitter:B:1:0x000a\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x000a\l|0x000a: INVOKE  (r0 I:android.os.Parcel), (r2 I:java.lang.String) android.os.Parcel.writeInterfaceToken(java.lang.String):void type: VIRTUAL A[Catch:\{ all \-\> 0x002f \}, TRY_ENTER]\l0x000d: IGET  (r2 I:android.os.IBinder) = \l  (r5 I:android.support.v4.media.session.IMediaSession$Stub$Proxy)\l android.support.v4.media.session.IMediaSession.Stub.Proxy.mRemote android.os.IBinder A[Catch:\{ all \-\> 0x002f \}]\l0x000f: CONST  (r3 I:?[int, float, short, byte, char]) = (28 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x002f \}]\l0x0011: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x002f \}]\l0x0012: INVOKE  \l  (r2 I:android.os.IBinder)\l  (r3 I:int)\l  (r0 I:android.os.Parcel)\l  (r1 I:android.os.Parcel)\l  (r4 I:int)\l android.os.IBinder.transact(int, android.os.Parcel, android.os.Parcel, int):boolean type: INTERFACE A[Catch:\{ all \-\> 0x002f \}]\l0x0015: INVOKE  (r1 I:android.os.Parcel) android.os.Parcel.readException():void type: VIRTUAL A[Catch:\{ all \-\> 0x002f \}]\l0x0018: INVOKE  (r2 I:int) = (r1 I:android.os.Parcel) android.os.Parcel.readInt():int type: VIRTUAL A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0027 A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: SGET  (r2 I:android.os.Parcelable$Creator\<android.support.v4.media.session.PlaybackStateCompat\>) =  android.support.v4.media.session.PlaybackStateCompat.CREATOR android.os.Parcelable$Creator A[Catch:\{ all \-\> 0x002f \}]\l0x0020: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:android.os.Parcelable$Creator)\l  (r1 I:android.os.Parcel)\l android.os.Parcelable.Creator.createFromParcel(android.os.Parcel):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x002f \}]\l0x0024: CHECK_CAST  (r2 I:android.support.v4.media.session.PlaybackStateCompat) = (android.support.v4.media.session.PlaybackStateCompat) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: INVOKE  (r1 I:android.os.Parcel) android.os.Parcel.recycle():void type: VIRTUAL \l0x002b: INVOKE  (r0 I:android.os.Parcel) android.os.Parcel.recycle():void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: RETURN  (r2 I:android.support.v4.media.session.PlaybackStateCompat) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|ExcHandler: all null\lSplitter:B:1:0x000a\l|0x002f: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|0x0030: INVOKE  (r1 I:android.os.Parcel) android.os.Parcel.recycle():void type: VIRTUAL \l0x0033: INVOKE  (r0 I:android.os.Parcel) android.os.Parcel.recycle():void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|0x0036: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public android.support.v4.media.session.PlaybackStateCompat android.support.v4.media.session.IMediaSession.Stub.Proxy.getPlaybackState((r5 'this' I:android.support.v4.media.session.IMediaSession$Stub$Proxy A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.os.RemoteException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

