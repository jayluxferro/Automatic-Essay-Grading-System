digraph "CFG forandroid.support.v4.media.session.MediaControllerCompat.MediaControllerImplApi21.addQueueItem(Landroid\/support\/v4\/media\/MediaDescriptionCompat;I)V" {
subgraph cluster_Region_1721802929 {
label = "R(1:(2:(2:2|3)|(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_1216776670 {
label = "R(2:(2:2|3)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1091326536 {
label = "IF [B:1:0x000b] THEN: R(2:2|3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000b|if ((getFlags() & 4) != 0) goto L_0x000d\l}"];
subgraph cluster_Region_699577557 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000d|android.os.Bundle android.os.Bundle r0 = new android.os.Bundle()\lr0.putParcelable(android.support.p000v4.media.session.MediaControllerCompat.COMMAND_ARGUMENT_MEDIA_DESCRIPTION, r5)\lr0.putInt(android.support.p000v4.media.session.MediaControllerCompat.COMMAND_ARGUMENT_INDEX, r6)\lsendCommand(android.support.p000v4.media.session.MediaControllerCompat.COMMAND_ADD_QUEUE_ITEM_AT, r0, (android.os.ResultReceiver) null)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1669586056 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002a|throw new java.lang.UnsupportedOperationException(\"This session doesn't support queue management operations\")\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0023}"];
MethodNode[shape=record,label="{public void android.support.v4.media.session.MediaControllerCompat.MediaControllerImplApi21.addQueueItem((r4v0 'this' android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 A[IMMUTABLE_TYPE, THIS]), (r5v0 android.support.v4.media.MediaDescriptionCompat A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_0 -> Node_1;
Node_4 -> Node_5;
}

