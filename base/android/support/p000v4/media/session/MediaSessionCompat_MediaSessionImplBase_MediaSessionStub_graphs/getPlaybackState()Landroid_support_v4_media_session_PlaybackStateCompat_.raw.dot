digraph "CFG forandroid.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.MediaSessionStub.getPlaybackState()Landroid\/support\/v4\/media\/session\/PlaybackStateCompat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) = \l  (r3 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.MediaSessionStub.this$0 android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase \l0x0002: IGET  (r0 I:java.lang.Object) = \l  (r0 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mLock java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|SYNTHETIC\lSplitter:B:2:0x0005\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0005\l|0x0005: IGET  (r1 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) = \l  (r3 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.MediaSessionStub.this$0 android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase A[Catch:\{ all \-\> 0x0013 \}, TRY_ENTER]\l0x0007: IGET  (r1 I:android.support.v4.media.session.PlaybackStateCompat) = \l  (r1 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mState android.support.v4.media.session.PlaybackStateCompat A[Catch:\{ all \-\> 0x0013 \}]\l0x0009: IGET  (r2 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) = \l  (r3 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.MediaSessionStub.this$0 android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase A[Catch:\{ all \-\> 0x0013 \}]\l0x000b: IGET  (r2 I:android.support.v4.media.MediaMetadataCompat) = \l  (r2 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mMetadata android.support.v4.media.MediaMetadataCompat A[Catch:\{ all \-\> 0x0013 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0013 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: INVOKE  (r0 I:android.support.v4.media.session.PlaybackStateCompat) = \l  (r1 I:android.support.v4.media.session.PlaybackStateCompat)\l  (r2 I:android.support.v4.media.MediaMetadataCompat)\l android.support.v4.media.session.MediaSessionCompat.getStateWithUpdatedPosition(android.support.v4.media.session.PlaybackStateCompat, android.support.v4.media.MediaMetadataCompat):android.support.v4.media.session.PlaybackStateCompat type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: RETURN  (r0 I:android.support.v4.media.session.PlaybackStateCompat) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|ExcHandler: all null\lSplitter:B:2:0x0005\l|0x0013: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|SYNTHETIC\lSplitter:B:8:0x0014\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0014\l|0x0014: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0013 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|0x0015: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public android.support.v4.media.session.PlaybackStateCompat android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.MediaSessionStub.getPlaybackState((r3 'this' I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_7;
Node_9 -> Node_10;
Node_9 -> Node_7;
}

