digraph "CFG forandroid.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.MediaSessionStub.getPlaybackState()Landroid\/support\/v4\/media\/session\/PlaybackStateCompat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.Object r0 = r3.this$0.mLock\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|monitor\-enter(r0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?|android.support.v4.media.session.PlaybackStateCompat r1 = r3.this$0.mState\landroid.support.v4.media.MediaMetadataCompat r2 = r3.this$0.mMetadata\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|monitor\-exit(r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e}"];
Node_6 [shape=record,label="{6\:\ 0x0012|RETURN\l|return android.support.p000v4.media.session.MediaSessionCompat.getStateWithUpdatedPosition(r1, r2)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|LOOP_START\lREMOVE\lLOOP:0: B:7:0x0013\-\>B:11:0x0013\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|SYNTHETIC\lREMOVE\lSplitter:B:8:0x0014\l}"];
Node_9 [shape=record,label="{9\:\ ?|REMOVE\lSplitter:B:8:0x0014\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|REMOVE\l|throw r1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0013|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:7:0x0013\-\>B:11:0x0013\l}"];
Node_12 [shape=record,label="{12\:\ 0x0015|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_13 [shape=record,label="{13\:\ 0x0013|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
MethodNode[shape=record,label="{public android.support.v4.media.session.PlaybackStateCompat android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.MediaSessionStub.getPlaybackState((r3v0 'this' android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_11;
Node_9 -> Node_12;
Node_9 -> Node_13;
Node_11 -> Node_7;
Node_12 -> Node_10;
Node_13 -> Node_11;
}

