digraph "CFG forandroid.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.MediaSessionStub.getVolumeAttributes()Landroid\/support\/v4\/media\/session\/ParcelableVolumeInfo;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) = \l  (r8 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.MediaSessionStub.this$0 android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase \l0x0002: IGET  (r0 I:java.lang.Object) = \l  (r0 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mLock java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|SYNTHETIC\lSplitter:B:2:0x0005\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0005\l|0x0005: IGET  (r1 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) = \l  (r8 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.MediaSessionStub.this$0 android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase A[Catch:\{ all \-\> 0x003f \}, TRY_ENTER]\l0x0007: IGET  (r3 I:int) = \l  (r1 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mVolumeType int A[Catch:\{ all \-\> 0x003f \}]\l0x0009: IGET  (r1 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) = \l  (r8 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.MediaSessionStub.this$0 android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase A[Catch:\{ all \-\> 0x003f \}]\l0x000b: IGET  (r4 I:int) = \l  (r1 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mLocalStream int A[Catch:\{ all \-\> 0x003f \}]\l0x000d: IGET  (r1 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) = \l  (r8 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.MediaSessionStub.this$0 android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase A[Catch:\{ all \-\> 0x003f \}]\l0x000f: IGET  (r1 I:android.support.v4.media.VolumeProviderCompat) = \l  (r1 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mVolumeProvider android.support.v4.media.VolumeProviderCompat A[Catch:\{ all \-\> 0x003f \}]\l0x0011: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0024 A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: INVOKE  (r2 I:int) = (r1 I:android.support.v4.media.VolumeProviderCompat) android.support.v4.media.VolumeProviderCompat.getVolumeControl():int type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l0x0018: INVOKE  (r5 I:int) = (r1 I:android.support.v4.media.VolumeProviderCompat) android.support.v4.media.VolumeProviderCompat.getMaxVolume():int type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l0x001c: INVOKE  (r1 I:int) = (r1 I:android.support.v4.media.VolumeProviderCompat) android.support.v4.media.VolumeProviderCompat.getCurrentVolume():int type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l0x0020: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x003f \}]\l0x0021: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x003f \}]\l0x0022: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x003f \}]\l0x0023: GOTO  \-\> 0x0037 A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: IGET  (r1 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) = \l  (r8 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.MediaSessionStub.this$0 android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase A[Catch:\{ all \-\> 0x003f \}]\l0x0026: IGET  (r1 I:android.media.AudioManager) = \l  (r1 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mAudioManager android.media.AudioManager A[Catch:\{ all \-\> 0x003f \}]\l0x0028: INVOKE  (r1 I:int) = (r1 I:android.media.AudioManager), (r4 I:int) android.media.AudioManager.getStreamMaxVolume(int):int type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l0x002c: IGET  (r5 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) = \l  (r8 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.MediaSessionStub.this$0 android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase A[Catch:\{ all \-\> 0x003f \}]\l0x002e: IGET  (r5 I:android.media.AudioManager) = \l  (r5 I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)\l android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.mAudioManager android.media.AudioManager A[Catch:\{ all \-\> 0x003f \}]\l0x0030: INVOKE  (r5 I:int) = (r5 I:android.media.AudioManager), (r4 I:int) android.media.AudioManager.getStreamVolume(int):int type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l0x0034: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x003f \}]\l0x0035: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x003f \}]\l0x0036: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|0x0037: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003f \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0038|0x0038: NEW_INSTANCE  (r0 I:android.support.v4.media.session.ParcelableVolumeInfo) =  android.support.v4.media.session.ParcelableVolumeInfo \l0x003a: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x003b: INVOKE  \l  (r2 I:android.support.v4.media.session.ParcelableVolumeInfo)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l android.support.v4.media.session.ParcelableVolumeInfo.\<init\>(int, int, int, int, int):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x003e|0x003e: RETURN  \l  (r0 I:android.support.v4.media.session.ParcelableVolumeInfo)\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|ExcHandler: all null\lSplitter:B:2:0x0005\l|0x003f: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|SYNTHETIC\lSplitter:B:11:0x0040\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x0040\l|0x0040: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003f \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|0x0041: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public android.support.v4.media.session.ParcelableVolumeInfo android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase.MediaSessionStub.getVolumeAttributes((r8 'this' I:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_10;
Node_12 -> Node_13;
Node_12 -> Node_10;
}

