digraph "CFG forandroid.support.v4.media.session.PlaybackStateCompat.Builder.build()Landroid\/support\/v4\/media\/session\/PlaybackStateCompat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0002: NEW_INSTANCE  (r18 I:android.support.v4.media.session.PlaybackStateCompat) =  android.support.v4.media.session.PlaybackStateCompat \l0x0004: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0006: IGET  (r2 I:int) = \l  (r0 I:android.support.v4.media.session.PlaybackStateCompat$Builder)\l android.support.v4.media.session.PlaybackStateCompat.Builder.mState int \l0x0008: IGET  (r3 I:long) = \l  (r0 I:android.support.v4.media.session.PlaybackStateCompat$Builder)\l android.support.v4.media.session.PlaybackStateCompat.Builder.mPosition long \l0x000a: IGET  (r5 I:long) = \l  (r0 I:android.support.v4.media.session.PlaybackStateCompat$Builder)\l android.support.v4.media.session.PlaybackStateCompat.Builder.mBufferedPosition long \l0x000c: IGET  (r7 I:float) = \l  (r0 I:android.support.v4.media.session.PlaybackStateCompat$Builder)\l android.support.v4.media.session.PlaybackStateCompat.Builder.mRate float \l0x000e: IGET  (r8 I:long) = \l  (r0 I:android.support.v4.media.session.PlaybackStateCompat$Builder)\l android.support.v4.media.session.PlaybackStateCompat.Builder.mActions long \l0x0010: IGET  (r10 I:int) = \l  (r0 I:android.support.v4.media.session.PlaybackStateCompat$Builder)\l android.support.v4.media.session.PlaybackStateCompat.Builder.mErrorCode int \l0x0012: IGET  (r11 I:java.lang.CharSequence) = \l  (r0 I:android.support.v4.media.session.PlaybackStateCompat$Builder)\l android.support.v4.media.session.PlaybackStateCompat.Builder.mErrorMessage java.lang.CharSequence \l0x0014: IGET  (r12 I:long) = \l  (r0 I:android.support.v4.media.session.PlaybackStateCompat$Builder)\l android.support.v4.media.session.PlaybackStateCompat.Builder.mUpdateTime long \l0x0016: IGET  (r14 I:java.util.List\<android.support.v4.media.session.PlaybackStateCompat$CustomAction\>) = \l  (r0 I:android.support.v4.media.session.PlaybackStateCompat$Builder)\l android.support.v4.media.session.PlaybackStateCompat.Builder.mCustomActions java.util.List \l0x0018: MOVE  (r19 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x001a: MOVE  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001c: IGET  (r1 I:long) = \l  (r0 I:android.support.v4.media.session.PlaybackStateCompat$Builder)\l android.support.v4.media.session.PlaybackStateCompat.Builder.mActiveItemId long \l0x001e: MOVE  (r15 I:?[long, double]) = (r1 I:?[long, double]) \l0x001f: IGET  (r1 I:android.os.Bundle) = \l  (r0 I:android.support.v4.media.session.PlaybackStateCompat$Builder)\l android.support.v4.media.session.PlaybackStateCompat.Builder.mExtras android.os.Bundle \l0x0021: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0023: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0025: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0027: INVOKE  \l  (r1 I:android.support.v4.media.session.PlaybackStateCompat)\l  (r2 I:int)\l  (r3 I:long)\l  (r5 I:long)\l  (r7 I:float)\l  (r8 I:long)\l  (r10 I:int)\l  (r11 I:java.lang.CharSequence)\l  (r12 I:long)\l  (r14 I:java.util.List)\l  (r15 I:long)\l  (r17 I:android.os.Bundle)\l android.support.v4.media.session.PlaybackStateCompat.\<init\>(int, long, long, float, long, int, java.lang.CharSequence, long, java.util.List, long, android.os.Bundle):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x002a|0x002a: RETURN  \l  (r18 I:android.support.v4.media.session.PlaybackStateCompat)\l \l}"];
MethodNode[shape=record,label="{public android.support.v4.media.session.PlaybackStateCompat android.support.v4.media.session.PlaybackStateCompat.Builder.build((r21 'this' I:android.support.v4.media.session.PlaybackStateCompat$Builder A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

