digraph "CFG forandroid.support.v4.media.session.PlaybackStateCompatApi21.newInstance(IJJFJLjava\/lang\/CharSequence;JLjava\/util\/List;J)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r7 I:android.media.session.PlaybackState$Builder) =  android.media.session.PlaybackState$Builder \l0x0002: INVOKE  (r7 I:android.media.session.PlaybackState$Builder) android.media.session.PlaybackState.Builder.\<init\>():void type: DIRECT \l0x0005: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0006: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: MOVE  (r2 I:?[long, double]) = (r9 I:?[long, double]) \l0x0008: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: MOVE  (r5 I:?[long, double]) = (r17 I:?[long, double]) \l0x000b: INVOKE  \l  (r0 I:android.media.session.PlaybackState$Builder)\l  (r1 I:int)\l  (r2 I:long)\l  (r4 I:float)\l  (r5 I:long)\l android.media.session.PlaybackState.Builder.setState(int, long, float, long):android.media.session.PlaybackState$Builder type: VIRTUAL \l0x000e: MOVE  (r0 I:?[long, double]) = (r11 I:?[long, double]) \l0x000f: INVOKE  \l  (r7 I:android.media.session.PlaybackState$Builder)\l  (r11 I:long)\l android.media.session.PlaybackState.Builder.setBufferedPosition(long):android.media.session.PlaybackState$Builder type: VIRTUAL \l0x0012: MOVE  (r0 I:?[long, double]) = (r14 I:?[long, double]) \l0x0013: INVOKE  \l  (r7 I:android.media.session.PlaybackState$Builder)\l  (r14 I:long)\l android.media.session.PlaybackState.Builder.setActions(long):android.media.session.PlaybackState$Builder type: VIRTUAL \l0x0016: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0018: INVOKE  \l  (r7 I:android.media.session.PlaybackState$Builder)\l  (r0 I:java.lang.CharSequence)\l android.media.session.PlaybackState.Builder.setErrorMessage(java.lang.CharSequence):android.media.session.PlaybackState$Builder type: VIRTUAL \l0x001b: INVOKE  (r0 I:java.util.Iterator) = (r19 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x001f|0x001f: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0023|0x0023: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x002f \l}"];
Node_3 [shape=record,label="{3\:\ 0x0025|0x0025: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0029: CHECK_CAST  (r1 I:android.media.session.PlaybackState$CustomAction) = (android.media.session.PlaybackState$CustomAction) (r1 I:?[OBJECT, ARRAY]) \l0x002b: INVOKE  \l  (r7 I:android.media.session.PlaybackState$Builder)\l  (r1 I:android.media.session.PlaybackState$CustomAction)\l android.media.session.PlaybackState.Builder.addCustomAction(android.media.session.PlaybackState$CustomAction):android.media.session.PlaybackState$Builder type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x002f|0x002f: MOVE  (r1 I:?[long, double]) = (r20 I:?[long, double]) \l0x0031: INVOKE  \l  (r7 I:android.media.session.PlaybackState$Builder)\l  (r1 I:long)\l android.media.session.PlaybackState.Builder.setActiveQueueItemId(long):android.media.session.PlaybackState$Builder type: VIRTUAL \l0x0034: INVOKE  (r0 I:android.media.session.PlaybackState) = (r7 I:android.media.session.PlaybackState$Builder) android.media.session.PlaybackState.Builder.build():android.media.session.PlaybackState type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0038|0x0038: RETURN  (r0 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public static java.lang.Object android.support.v4.media.session.PlaybackStateCompatApi21.newInstance((r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:java.util.List\<java.lang.Object\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(IJJFJ, Ljava\/lang\/CharSequence;, J, Ljava\/util\/List\<, Ljava\/lang\/Object;, \>;J), Ljava\/lang\/Object;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

