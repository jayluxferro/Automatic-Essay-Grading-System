digraph "CFG forandroid.support.v4.media.session.MediaControllerCompatApi21.PlaybackInfo.toLegacyStreamType(Landroid\/media\/AudioAttributes;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r3 I:android.media.AudioAttributes) android.media.AudioAttributes.getFlags():int type: VIRTUAL \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (r1 I:?[int, boolean, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST  (r3 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: RETURN  (r3 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r0 I:int) = (r3 I:android.media.AudioAttributes) android.media.AudioAttributes.getFlags():int type: VIRTUAL \l0x000e: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x000f: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (r2 I:?[int, boolean, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0014 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: CONST  (r3 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: RETURN  (r3 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: INVOKE  (r3 I:int) = (r3 I:android.media.AudioAttributes) android.media.AudioAttributes.getUsage():int type: VIRTUAL \l0x0018: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] t:[0x0028, 0x0026, 0x0023, 0x0022, 0x0020, 0x001e, 0x0020, 0x0020, 0x0020, 0x0020, 0x0028, 0x0028, 0x001d, 0x0028] \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: RETURN  (r0 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|0x001d: RETURN  (r1 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|0x001e: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|0x001f: RETURN  (r3 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|0x0020: CONST  (r3 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0021|0x0021: RETURN  (r3 I:int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0022|0x0022: RETURN  (r2 I:int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0023|0x0023: CONST  (r3 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0025|0x0025: RETURN  (r3 I:int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0026|0x0026: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x0027|0x0027: RETURN  (r3 I:int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0028|0x0028: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{private static int android.support.v4.media.session.MediaControllerCompatApi21.PlaybackInfo.toLegacyStreamType((r3 I:android.media.AudioAttributes A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_9 -> Node_12;
Node_9 -> Node_14;
Node_9 -> Node_16;
Node_9 -> Node_17;
Node_9 -> Node_19;
Node_9 -> Node_21;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_17 -> Node_18;
Node_19 -> Node_20;
}

