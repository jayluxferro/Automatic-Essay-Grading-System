digraph "CFG forandroid.support.v4.media.session.MediaControllerCompat.TransportControlsApi21.playFromUri(Landroid\/net\/Uri;Landroid\/os\/Bundle;)V" {
subgraph cluster_Region_1473611384 {
label = "R(1:(2:(1:6)|(1:3)))";
node [shape=record,color=blue];
subgraph cluster_Region_158864639 {
label = "R(2:(1:6)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1691895004 {
label = "IF [B:0:0x0000, B:2:0x0008] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r3 == null) goto L_0x001f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|ADDED_TO_REGION\l|if (android.net.Uri.EMPTY.equals(r3) == true) goto L_0x001f\l}"];
subgraph cluster_Region_1905089587 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0026|throw new java.lang.IllegalArgumentException(\"You must specify a non\-empty Uri for playFromUri.\")\l}"];
}
}
subgraph cluster_Region_121319232 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|android.os.Bundle android.os.Bundle r0 = new android.os.Bundle()\lr0.putParcelable(android.support.p000v4.media.session.MediaSessionCompat.ACTION_ARGUMENT_URI, r3)\lr0.putBundle(android.support.p000v4.media.session.MediaSessionCompat.ACTION_ARGUMENT_EXTRAS, r4)\lsendCustomAction(android.support.p000v4.media.session.MediaSessionCompat.ACTION_PLAY_FROM_URI, r0)\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x001e}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001f}"];
MethodNode[shape=record,label="{public void android.support.v4.media.session.MediaControllerCompat.TransportControlsApi21.playFromUri((r2v0 'this' android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21 A[IMMUTABLE_TYPE, THIS]), (r3v0 android.net.Uri A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_1 -> Node_2;
Node_5 -> Node_6;
}

