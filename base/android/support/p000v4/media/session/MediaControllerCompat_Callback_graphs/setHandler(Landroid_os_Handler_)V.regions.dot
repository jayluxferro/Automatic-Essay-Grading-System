digraph "CFG forandroid.support.v4.media.session.MediaControllerCompat.Callback.setHandler(Landroid\/os\/Handler;)V" {
subgraph cluster_Region_1071335271 {
label = "R(1:(1:4)(1:(1:3)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1973037746 {
label = "IF [B:0:0x0000] THEN: R(1:4) ELSE: R(1:(1:3)(0))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r2 != null) goto L_0x0014\l}"];
subgraph cluster_Region_1691549376 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0014|r1.mHandler = new android.support.p000v4.media.session.MediaControllerCompat.Callback.MessageHandler(r2.getLooper())\lr1.mHandler.mRegistered = true\l}"];
}
subgraph cluster_Region_491270146 {
label = "R(1:(1:3)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2018360499 {
label = "IF [B:2:0x0004] THEN: R(1:3) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r1.mHandler != null) goto L_0x0006\l}"];
subgraph cluster_Region_1546045106 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|r1.mHandler.mRegistered = false\lr1.mHandler.removeCallbacksAndMessages((java.lang.Object) null)\lr1.mHandler = null\l}"];
}
subgraph cluster_Region_795936520 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void android.support.v4.media.session.MediaControllerCompat.Callback.setHandler((r1v0 'this' android.support.v4.media.session.MediaControllerCompat$Callback A[IMMUTABLE_TYPE, THIS]), (r2v0 android.os.Handler A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_4 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_6[style=dashed];
Node_3 -> Node_7;
Node_1 -> Node_2;
}

