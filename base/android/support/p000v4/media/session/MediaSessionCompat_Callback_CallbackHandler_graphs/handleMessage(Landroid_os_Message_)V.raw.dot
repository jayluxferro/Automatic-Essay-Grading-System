digraph "CFG forandroid.support.v4.media.session.MediaSessionCompat.Callback.CallbackHandler.handleMessage(Landroid\/os\/Message;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r3 I:android.os.Message) android.os.Message.what int \l0x0002: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r0 I:android.support.v4.media.session.MediaSessionCompat$Callback) = \l  (r2 I:android.support.v4.media.session.MediaSessionCompat$Callback$CallbackHandler)\l android.support.v4.media.session.MediaSessionCompat.Callback.CallbackHandler.this$0 android.support.v4.media.session.MediaSessionCompat$Callback \l0x0007: IGET  (r3 I:java.lang.Object) = (r3 I:android.os.Message) android.os.Message.obj java.lang.Object \l0x0009: CHECK_CAST  (r3 I:android.support.v4.media.MediaSessionManager$RemoteUserInfo) = (android.support.v4.media.MediaSessionManager$RemoteUserInfo) (r3 I:?[OBJECT, ARRAY]) \l0x000b: INVOKE  \l  (r0 I:android.support.v4.media.session.MediaSessionCompat$Callback)\l  (r3 I:android.support.v4.media.MediaSessionManager$RemoteUserInfo)\l android.support.v4.media.session.MediaSessionCompat.Callback.handleMediaPlayPauseKeySingleTapIfPending(android.support.v4.media.MediaSessionManager$RemoteUserInfo):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.media.session.MediaSessionCompat.Callback.CallbackHandler.handleMessage((r2 'this' I:android.support.v4.media.session.MediaSessionCompat$Callback$CallbackHandler A[IMMUTABLE_TYPE, THIS]), (r3 I:android.os.Message A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

