digraph "CFG forandroid.support.v4.media.MediaBrowserServiceCompatApi26.\<clinit\>()V" {
subgraph cluster_Region_8681356 {
label = "R(1:(1:2))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_232331844 {
label = "Try: R(1:2) catches: R(2:3|4)";
node [shape=record,color=blue];
subgraph cluster_Region_897108267 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ NoSuchFieldException \-\> 0x0011 \}\lSplitter:B:1:0x0004\l|sResultFlags = android.service.media.MediaBrowserService.Result.class.getDeclaredField(\"mFlags\")     \/\/ Catch:\{ NoSuchFieldException \-\> 0x0011 \}\lsResultFlags.setAccessible(true)     \/\/ Catch:\{ NoSuchFieldException \-\> 0x0011 \}\l}"];
}
subgraph cluster_Region_818854220 {
label = "R(2:3|4) | ExcHandler: NoSuchFieldException (r0v1 'e' java.lang.NoSuchFieldException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0011|ExcHandler: NoSuchFieldException (r0v1 'e' java.lang.NoSuchFieldException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0004\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|android.util.Log.w(TAG, r0)\l}"];
}
}
}
subgraph cluster_Region_818854220 {
label = "R(2:3|4) | ExcHandler: NoSuchFieldException (r0v1 'e' java.lang.NoSuchFieldException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0011|ExcHandler: NoSuchFieldException (r0v1 'e' java.lang.NoSuchFieldException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0004\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|android.util.Log.w(TAG, r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0004|SYNTHETIC\lSplitter:B:1:0x0004\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static void android.support.v4.media.MediaBrowserServiceCompatApi26.\<clinit\>() }"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
}

