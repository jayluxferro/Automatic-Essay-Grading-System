digraph "CFG forandroid.support.v4.media.MediaMetadataCompat.getBitmap(Ljava\/lang\/String;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:android.os.Bundle) = (r2 I:android.support.v4.media.MediaMetadataCompat) android.support.v4.media.MediaMetadataCompat.mBundle android.os.Bundle A[Catch:\{ Exception \-\> 0x0009 \}, TRY_ENTER]\l0x0002: INVOKE  (r3 I:android.os.Parcelable) = (r0 I:android.os.Bundle), (r3 I:java.lang.String) android.os.Bundle.getParcelable(java.lang.String):android.os.Parcelable type: VIRTUAL A[Catch:\{ Exception \-\> 0x0009 \}]\l0x0006: CHECK_CAST  (r3 I:android.graphics.Bitmap) = (android.graphics.Bitmap) (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x0009 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|ExcHandler: Exception null\lSplitter:B:0:0x0000\l|0x0009: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: CONST_STR  (r0 I:java.lang.String) =  \"MediaMetadata\" \l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"Failed to retrieve a key as Bitmap.\" \l0x000e: INVOKE  \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r3 I:java.lang.Throwable)\l android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l0x0011: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: RETURN  (r3 I:android.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{public android.graphics.Bitmap android.support.v4.media.MediaMetadataCompat.getBitmap((r2 'this' I:android.support.v4.media.MediaMetadataCompat A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_3;
Node_1 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

