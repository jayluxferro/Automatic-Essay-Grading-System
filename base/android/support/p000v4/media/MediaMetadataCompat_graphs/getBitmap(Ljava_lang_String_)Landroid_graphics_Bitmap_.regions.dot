digraph "CFG forandroid.support.v4.media.MediaMetadataCompat.getBitmap(Ljava\/lang\/String;)Landroid\/graphics\/Bitmap;" {
subgraph cluster_Region_139911862 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1792173389 {
label = "Try: R(1:5) catches: R(3:2|3|4)";
node [shape=record,color=blue];
subgraph cluster_Region_1206294666 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\l|return (android.graphics.Bitmap) r2.mBundle.getParcelable(r3)\l}"];
}
subgraph cluster_Region_1876582413 {
label = "R(3:2|3|4) | ExcHandler: Exception (r3v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|ExcHandler: Exception (r3v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|android.util.Log.w(TAG, \"Failed to retrieve a key as Bitmap.\", r3)\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
}
}
subgraph cluster_Region_1876582413 {
label = "R(3:2|3|4) | ExcHandler: Exception (r3v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|ExcHandler: Exception (r3v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|android.util.Log.w(TAG, \"Failed to retrieve a key as Bitmap.\", r3)\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|Catch:\{ Exception \-\> 0x0009 \}\lSplitter:B:0:0x0000\l}"];
MethodNode[shape=record,label="{public android.graphics.Bitmap android.support.v4.media.MediaMetadataCompat.getBitmap((r2v0 'this' android.support.v4.media.MediaMetadataCompat A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_0 -> Node_1;
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_1 -> Node_5;
}

