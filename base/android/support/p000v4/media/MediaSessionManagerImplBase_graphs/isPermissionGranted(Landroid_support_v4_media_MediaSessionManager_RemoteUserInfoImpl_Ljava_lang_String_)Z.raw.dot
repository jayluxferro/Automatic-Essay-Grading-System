digraph "CFG forandroid.support.v4.media.MediaSessionManagerImplBase.isPermissionGranted(Landroid\/support\/v4\/media\/MediaSessionManager$RemoteUserInfoImpl;Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = \l  (r5 I:android.support.v4.media.MediaSessionManager$RemoteUserInfoImpl)\l android.support.v4.media.MediaSessionManager.RemoteUserInfoImpl.getPid():int type: INTERFACE \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:6:0x001a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:android.content.Context) = (r4 I:android.support.v4.media.MediaSessionManagerImplBase) android.support.v4.media.MediaSessionManagerImplBase.mContext android.content.Context \l0x000a: INVOKE  (r0 I:android.content.pm.PackageManager) = (r0 I:android.content.Context) android.content.Context.getPackageManager():android.content.pm.PackageManager type: VIRTUAL \l0x000e: INVOKE  (r5 I:java.lang.String) = \l  (r5 I:android.support.v4.media.MediaSessionManager$RemoteUserInfoImpl)\l android.support.v4.media.MediaSessionManager.RemoteUserInfoImpl.getPackageName():java.lang.String type: INTERFACE \l0x0012: INVOKE  (r5 I:int) = \l  (r0 I:android.content.pm.PackageManager)\l  (r6 I:java.lang.String)\l  (r5 I:java.lang.String)\l android.content.pm.PackageManager.checkPermission(java.lang.String, java.lang.String):int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: RETURN  (r1 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IGET  (r0 I:android.content.Context) = (r4 I:android.support.v4.media.MediaSessionManagerImplBase) android.support.v4.media.MediaSessionManagerImplBase.mContext android.content.Context \l0x001c: INVOKE  (r3 I:int) = \l  (r5 I:android.support.v4.media.MediaSessionManager$RemoteUserInfoImpl)\l android.support.v4.media.MediaSessionManager.RemoteUserInfoImpl.getPid():int type: INTERFACE \l0x0020: INVOKE  (r5 I:int) = \l  (r5 I:android.support.v4.media.MediaSessionManager$RemoteUserInfoImpl)\l android.support.v4.media.MediaSessionManager.RemoteUserInfoImpl.getUid():int type: INTERFACE \l0x0024: INVOKE  (r5 I:int) = \l  (r0 I:android.content.Context)\l  (r6 I:java.lang.String)\l  (r3 I:int)\l  (r5 I:int)\l android.content.Context.checkPermission(java.lang.String, int, int):int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002b \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean android.support.v4.media.MediaSessionManagerImplBase.isPermissionGranted((r4 'this' I:android.support.v4.media.MediaSessionManagerImplBase A[IMMUTABLE_TYPE, THIS]), (r5 I:android.support.v4.media.MediaSessionManager$RemoteUserInfoImpl A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
}

