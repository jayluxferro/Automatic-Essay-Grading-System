digraph "CFG forandroid.support.v4.media.MediaBrowserCompat.MediaBrowserImplApi26.subscribe(Ljava\/lang\/String;Landroid\/os\/Bundle;Landroid\/support\/v4\/media\/MediaBrowserCompat$SubscriptionCallback;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.mServiceBinderWrapper == null) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r2.mServiceVersion \>= 2) goto L_0x000a\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|super.subscribe(r3, r4, r5)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r4 != null) goto L_0x0018\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|android.support.p000v4.media.MediaBrowserCompatApi21.subscribe(r2.mBrowserObj, r3, r5.mSubscriptionCallbackObj)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|android.support.p000v4.media.MediaBrowserCompatApi26.subscribe(r2.mBrowserObj, r3, r4, r5.mSubscriptionCallbackObj)\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.v4.media.MediaBrowserCompat.MediaBrowserImplApi26.subscribe((r2v0 'this' android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi26 A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 android.support.v4.media.MediaBrowserCompat$SubscriptionCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_10;
Node_7 -> Node_8;
}

