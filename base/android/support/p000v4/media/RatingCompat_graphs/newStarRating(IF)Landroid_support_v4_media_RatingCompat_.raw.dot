digraph "CFG forandroid.support.v4.media.RatingCompat.newStarRating(IF)Landroid\/support\/v4\/media\/RatingCompat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[3, 4, 5] t:[0x0026, 0x0023, 0x0020] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST_STR  (r4 I:java.lang.String) =  \"Rating\" \l0x0006: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0008: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000b: CONST_STR  (r2 I:java.lang.String) =  \"Invalid rating style (\" \l0x000d: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0010: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0013: CONST_STR  (r3 I:java.lang.String) =  \") for a star rating\" \l0x0015: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0018: INVOKE  (r3 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x001c: INVOKE  (r4 I:java.lang.String), (r3 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: RETURN  (r0 I:android.support.v4.media.RatingCompat) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1084227584(0x40a00000, float:5.0) ?[int, float, short, byte, char])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1082130432(0x40800000, float:4.0) ?[int, float, short, byte, char])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1077936128(0x40400000, float:3.0) ?[int, float, short, byte, char])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0029: CMP_G  (r2 I:int) = (r4 I:float), (r2 I:float) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|0x002b: IF  (r2 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:14:0x0038 \l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: CMP_L  (r1 I:int) = (r4 I:float), (r1 I:float) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|0x002f: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x0032 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|0x0032: NEW_INSTANCE  (r0 I:android.support.v4.media.RatingCompat) =  android.support.v4.media.RatingCompat \l0x0034: INVOKE  \l  (r0 I:android.support.v4.media.RatingCompat)\l  (r3 I:int)\l  (r4 I:float)\l android.support.v4.media.RatingCompat.\<init\>(int, float):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|0x0037: RETURN  (r0 I:android.support.v4.media.RatingCompat) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0038|0x0038: CONST_STR  (r3 I:java.lang.String) =  \"Rating\" \l0x003a: CONST_STR  (r4 I:java.lang.String) =  \"Trying to set out of range star\-based rating\" \l0x003c: INVOKE  (r3 I:java.lang.String), (r4 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|0x003f: RETURN  (r0 I:android.support.v4.media.RatingCompat) \l}"];
MethodNode[shape=record,label="{public static android.support.v4.media.RatingCompat android.support.v4.media.RatingCompat.newStarRating((r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_5;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_4 -> Node_7;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_14[style=dashed];
Node_12 -> Node_13;
Node_14 -> Node_15;
}

