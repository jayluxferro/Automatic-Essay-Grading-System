digraph "CFG forandroid.support.v4.media.RatingCompat.newStarRating(IF)Landroid\/support\/v4\/media\/RatingCompat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|switch(r3) \{\l    case 3: goto L_0x0026;\l    case 4: goto L_0x0023;\l    case 5: goto L_0x0020;\l    default: goto L_0x0004;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Invalid rating style (\")\lr1.append(r3)\lr1.append(\") for a star rating\")\landroid.util.Log.e(TAG, r1.toString())\l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|RETURN\l|return null\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|r1 = 5.0f\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|r1 = 4.0f\l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|r1 = 3.0f\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|PHI: r1 \l  PHI: (r1v0 float) = (r1v2 float), (r1v3 float), (r1v4 float) binds: [B:6:0x0026, B:5:0x0023, B:4:0x0020] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|if ((r4 \> 0.0f ? 1 : (r4 == 0.0f ? 0 : \-1)) \< 0) goto L_0x0038\l}"];
Node_9 [shape=record,label="{9\:\ 0x002d}"];
Node_10 [shape=record,label="{10\:\ 0x002f|if ((r4 \> r1 ? 1 : (r4 == r1 ? 0 : \-1)) \<= 0) goto L_0x0032\l}"];
Node_11 [shape=record,label="{11\:\ 0x0032}"];
Node_12 [shape=record,label="{12\:\ 0x0037|RETURN\l|return new android.support.p000v4.media.RatingCompat(r3, r4)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|android.util.Log.e(TAG, \"Trying to set out of range star\-based rating\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public static android.support.v4.media.RatingCompat android.support.v4.media.RatingCompat.newStarRating((r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_5;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_4 -> Node_7;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_13 -> Node_14;
}

