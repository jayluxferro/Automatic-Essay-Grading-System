digraph "CFG forandroid.support.v4.media.MediaBrowserServiceCompat.setSessionToken(Landroid\/support\/v4\/media\/session\/MediaSessionCompat$Token;)V" {
subgraph cluster_Region_1477780000 {
label = "R(1:(1:8)(1:(1:3)(1:6)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_226241964 {
label = "IF [B:0:0x0000] THEN: R(1:8) ELSE: R(1:(1:3)(1:6))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r2 == null) goto L_0x0016\l}"];
subgraph cluster_Region_947641 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001d|throw new java.lang.IllegalArgumentException(\"Session token may not be null.\")\l}"];
}
subgraph cluster_Region_1751575093 {
label = "R(1:(1:3)(1:6)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_429113659 {
label = "IF [B:2:0x0004] THEN: R(1:3) ELSE: R(1:6) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r1.mSession == null) goto L_0x0006\l}"];
subgraph cluster_Region_1970179816 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|r1.mSession = r2\lr1.mImpl.setSessionToken(r2)\l}"];
}
subgraph cluster_Region_104767041 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|throw new java.lang.IllegalStateException(\"The session token has already been set.\")\l}"];
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000d}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000e}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0016}"];
MethodNode[shape=record,label="{public void android.support.v4.media.MediaBrowserServiceCompat.setSessionToken((r1v0 'this' android.support.v4.media.MediaBrowserServiceCompat A[IMMUTABLE_TYPE, THIS]), (r2v0 android.support.v4.media.session.MediaSessionCompat$Token A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_7;
Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_1 -> Node_2;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

