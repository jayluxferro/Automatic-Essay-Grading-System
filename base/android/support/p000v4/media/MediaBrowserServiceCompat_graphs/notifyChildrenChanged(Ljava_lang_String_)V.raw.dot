digraph "CFG forandroid.support.v4.media.MediaBrowserServiceCompat.notifyChildrenChanged(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImpl) = (r2 I:android.support.v4.media.MediaBrowserServiceCompat) android.support.v4.media.MediaBrowserServiceCompat.mImpl android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImpl \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: INVOKE  \l  (r0 I:android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImpl)\l  (r3 I:java.lang.String)\l  (r1 I:android.os.Bundle)\l android.support.v4.media.MediaBrowserServiceCompat.MediaBrowserServiceImpl.notifyChildrenChanged(java.lang.String, android.os.Bundle):void type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"parentId cannot be null in notifyChildrenChanged\" \l0x000d: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.v4.media.MediaBrowserServiceCompat.notifyChildrenChanged((r2 'this' I:android.support.v4.media.MediaBrowserServiceCompat A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

