digraph "CFG forandroid.support.v4.media.MediaBrowserCompat.MediaBrowserImplBase.isCurrent(Landroid\/os\/Messenger;Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r2.mCallbacksMessenger != r3) goto L_0x000f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r2.mState == 0) goto L_0x000f\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009}"];
Node_5 [shape=record,label="{5\:\ 0x000b|if (r2.mState != 1) goto L_0x000e\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|RETURN\l|return true\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f}"];
Node_8 [shape=record,label="{8\:\ 0x0011|if (r2.mState == 0) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013}"];
Node_10 [shape=record,label="{10\:\ 0x0015|if (r2.mState == 1) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(r4)\lr0.append(\" for \")\lr0.append(r2.mServiceComponent)\lr0.append(\" with mCallbacksMessenger=\")\lr0.append(r2.mCallbacksMessenger)\lr0.append(\" this=\")\lr0.append(r2)\landroid.util.Log.i(android.support.p000v4.media.MediaBrowserCompat.TAG, r0.toString())\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{private boolean android.support.v4.media.MediaBrowserCompat.MediaBrowserImplBase.isCurrent((r2v0 'this' android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase A[IMMUTABLE_TYPE, THIS]), (r3v0 android.os.Messenger A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
}

