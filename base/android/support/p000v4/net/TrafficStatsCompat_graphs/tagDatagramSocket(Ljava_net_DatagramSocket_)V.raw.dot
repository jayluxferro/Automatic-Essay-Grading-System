digraph "CFG forandroid.support.v4.net.TrafficStatsCompat.tagDatagramSocket(Ljava\/net\/DatagramSocket;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (24 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r3 I:java.net.DatagramSocket) android.net.TrafficStats.tagDatagramSocket(java.net.DatagramSocket):void type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: INVOKE  (r0 I:android.os.ParcelFileDescriptor) = (r3 I:java.net.DatagramSocket) android.os.ParcelFileDescriptor.fromDatagramSocket(java.net.DatagramSocket):android.os.ParcelFileDescriptor type: STATIC \l0x000e: NEW_INSTANCE  (r1 I:android.support.v4.net.DatagramSocketWrapper) =  android.support.v4.net.DatagramSocketWrapper \l0x0010: INVOKE  (r2 I:java.io.FileDescriptor) = (r0 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.getFileDescriptor():java.io.FileDescriptor type: VIRTUAL \l0x0014: INVOKE  \l  (r1 I:android.support.v4.net.DatagramSocketWrapper)\l  (r3 I:java.net.DatagramSocket)\l  (r2 I:java.io.FileDescriptor)\l android.support.v4.net.DatagramSocketWrapper.\<init\>(java.net.DatagramSocket, java.io.FileDescriptor):void type: DIRECT \l0x0017: INVOKE  (r1 I:java.net.Socket) android.net.TrafficStats.tagSocket(java.net.Socket):void type: STATIC \l0x001a: INVOKE  (r0 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.detachFd():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: RETURN   \l}"];
MethodNode[shape=record,label="{public static void android.support.v4.net.TrafficStatsCompat.tagDatagramSocket((r3 I:java.net.DatagramSocket A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.net.SocketException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

