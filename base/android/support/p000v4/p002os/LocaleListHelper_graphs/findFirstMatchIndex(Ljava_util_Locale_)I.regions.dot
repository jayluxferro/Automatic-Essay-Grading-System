digraph "CFG forandroid.support.v4.os.LocaleListHelper.findFirstMatchIndex(Ljava\/util\/Locale;)I" {
subgraph cluster_Region_1211152334 {
label = "R(3:0|(1:(2:(1:5)|(1:6)))|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = 0\l}"];
subgraph cluster_LoopRegion_1333953427 {
label = "LOOP:0: (1:(2:(1:5)|(1:6)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r0 \< r2.mList.length) goto L_0x0006\l}"];
subgraph cluster_Region_191829722 {
label = "R(1:(2:(1:5)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1325946290 {
label = "R(2:(1:5)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_959225333 {
label = "IF [B:4:0x000e] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|if (matchScore(r3, r2.mList[r0]) \> 0) goto L_0x0010\l}"];
subgraph cluster_Region_1961874393 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_1023507883 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0011|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:6:0x0011\l|r0++\l}"];
}
}
}
}
Node_7 [shape=record,label="{7\:\ 0x0014|RETURN\l|return Integer.MAX_VALUE\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:6:0x0011] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:6:0x0011\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0006}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0014|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0010|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int android.support.v4.os.LocaleListHelper.findFirstMatchIndex((r2v0 'this' android.support.v4.os.LocaleListHelper A[IMMUTABLE_TYPE, THIS]), (r3v0 java.util.Locale A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_8[style=dashed];
Node_4 -> Node_6[style=dashed];
Node_4 -> Node_9;
Node_6 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_8 -> Node_7;
Node_9 -> Node_5;
}

