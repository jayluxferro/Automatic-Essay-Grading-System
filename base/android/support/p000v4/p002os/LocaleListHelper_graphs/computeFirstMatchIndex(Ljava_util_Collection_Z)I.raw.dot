digraph "CFG forandroid.support.v4.os.LocaleListHelper.computeFirstMatchIndex(Ljava\/util\/Collection;Z)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Locale[]) = (r3 I:android.support.v4.os.LocaleListHelper) android.support.v4.os.LocaleListHelper.mList java.util.Locale[] \l0x0002: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l0x0003: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r1 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:java.util.Locale[]) = (r3 I:android.support.v4.os.LocaleListHelper) android.support.v4.os.LocaleListHelper.mList java.util.Locale[] \l0x000a: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: RETURN  (r4 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0020 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|0x0014: SGET  (r5 I:java.util.Locale) =  android.support.v4.os.LocaleListHelper.EN_LATN java.util.Locale \l0x0016: INVOKE  (r5 I:int) = \l  (r3 I:android.support.v4.os.LocaleListHelper)\l  (r5 I:java.util.Locale)\l android.support.v4.os.LocaleListHelper.findFirstMatchIndex(java.util.Locale):int type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x001d \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: RETURN  (r1 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: IF  (r5 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:14:0x0020 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|0x0020: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0023|0x0023: INVOKE  (r4 I:java.util.Iterator) = (r4 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_16 [shape=record,label="{16\:\ 0x0027|0x0027: INVOKE  (r2 I:boolean) = (r4 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|0x002b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0042 \l}"];
Node_18 [shape=record,label="{18\:\ 0x002d|0x002d: INVOKE  (r2 I:java.lang.Object) = (r4 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0031: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x0033: INVOKE  (r2 I:java.util.Locale) = (r2 I:java.lang.String) android.support.v4.os.LocaleHelper.forLanguageTag(java.lang.String):java.util.Locale type: STATIC \l0x0037: INVOKE  (r2 I:int) = \l  (r3 I:android.support.v4.os.LocaleListHelper)\l  (r2 I:java.util.Locale)\l android.support.v4.os.LocaleListHelper.findFirstMatchIndex(java.util.Locale):int type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x003b|0x003b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x003e \l}"];
Node_20 [shape=record,label="{20\:\ 0x003d|0x003d: RETURN  (r1 I:int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x003e|0x003e: IF  (r2 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:16:0x0027 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0040|0x0040: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x0042|0x0042: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0045 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0044|0x0044: RETURN  (r1 I:int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0045|0x0045: RETURN  (r5 I:int) \l}"];
MethodNode[shape=record,label="{private int android.support.v4.os.LocaleListHelper.computeFirstMatchIndex((r3 'this' I:android.support.v4.os.LocaleListHelper A[IMMUTABLE_TYPE, THIS]), (r4 I:java.util.Collection\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Collection\<, Ljava\/lang\/String;, \>;Z)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_12 -> Node_14;
Node_12 -> Node_15[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_21 -> Node_16;
Node_21 -> Node_22[style=dashed];
Node_22 -> Node_16;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
}

