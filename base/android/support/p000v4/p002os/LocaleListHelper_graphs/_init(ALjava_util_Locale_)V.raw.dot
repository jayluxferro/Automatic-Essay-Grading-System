digraph "CFG forandroid.support.v4.os.LocaleListHelper.\<init\>([Ljava\/util\/Locale;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: ARRAY_LENGTH  (r0 I:int) = (r7 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: SGET  (r7 I:java.util.Locale[]) =  android.support.v4.os.LocaleListHelper.sEmptyList java.util.Locale[] \l0x0008: IPUT  \l  (r7 I:java.util.Locale[])\l  (r6 I:android.support.v4.os.LocaleListHelper)\l android.support.v4.os.LocaleListHelper.mList java.util.Locale[] \l0x000a: CONST_STR  (r7 I:java.lang.String) =  \"\" \l0x000c: IPUT  \l  (r7 I:java.lang.String)\l  (r6 I:android.support.v4.os.LocaleListHelper)\l android.support.v4.os.LocaleListHelper.mStringRepresentation java.lang.String \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: ARRAY_LENGTH  (r0 I:int) = (r7 I:?[]) \l0x0011: NEW_ARRAY  (r0 I:java.util.Locale[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.util.Locale[] \l0x0013: NEW_INSTANCE  (r1 I:java.util.HashSet) =  java.util.HashSet \l0x0015: INVOKE  (r1 I:java.util.HashSet) java.util.HashSet.\<init\>():void type: DIRECT \l0x0018: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001a: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: ARRAY_LENGTH  (r4 I:int) = (r7 I:?[]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:18:0x0082 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: AGET  (r4 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0066 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: INVOKE  (r5 I:boolean) = (r1 I:java.util.HashSet), (r4 I:java.lang.Object) java.util.HashSet.contains(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x004a \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.Locale) java.util.Locale.clone():java.lang.Object type: VIRTUAL \l0x002f: CHECK_CAST  (r4 I:java.util.Locale) = (java.util.Locale) (r4 I:?[OBJECT, ARRAY]) \l0x0031: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x0033: INVOKE  (r5 I:java.lang.String) = (r4 I:java.util.Locale) android.support.v4.os.LocaleHelper.toLanguageTag(java.util.Locale):java.lang.String type: STATIC \l0x0037: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003a: ARRAY_LENGTH  (r5 I:int) = (r7 I:?[]) \l0x003b: ARITH  (r5 I:int) = (r5 I:int) + (\-1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x003d|0x003d: IF  (r3 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:13:0x0044 \l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|0x003f: CONST  (r5 I:?[int, float, short, byte, char]) = (44 ?[int, float, short, byte, char]) \l0x0041: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|0x0044: INVOKE  (r1 I:java.util.HashSet), (r4 I:java.lang.Object) java.util.HashSet.add(java.lang.Object):boolean type: VIRTUAL \l0x0047: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x004a|0x004a: NEW_INSTANCE  (r7 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x004c: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004e: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0051: CONST_STR  (r1 I:java.lang.String) =  \"list[\" \l0x0053: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0056: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0059: CONST_STR  (r1 I:java.lang.String) =  \"] is a repetition\" \l0x005b: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005e: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0062: INVOKE  \l  (r7 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0065|0x0065: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0066|0x0066: NEW_INSTANCE  (r7 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x0068: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x006a: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x006d: CONST_STR  (r1 I:java.lang.String) =  \"list[\" \l0x006f: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0072: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0075: CONST_STR  (r1 I:java.lang.String) =  \"] is null\" \l0x0077: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007a: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x007e: INVOKE  \l  (r7 I:java.lang.NullPointerException)\l  (r0 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0081|0x0081: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0082|0x0082: IPUT  \l  (r0 I:java.util.Locale[])\l  (r6 I:android.support.v4.os.LocaleListHelper)\l android.support.v4.os.LocaleListHelper.mList java.util.Locale[] \l0x0084: INVOKE  (r7 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0088: IPUT  \l  (r7 I:java.lang.String)\l  (r6 I:android.support.v4.os.LocaleListHelper)\l android.support.v4.os.LocaleListHelper.mStringRepresentation java.lang.String \l}"];
Node_19 [shape=record,label="{19\:\ 0x008a|0x008a: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.v4.os.LocaleListHelper.\<init\>((r6 'this' I:android.support.v4.os.LocaleListHelper A[IMMUTABLE_TYPE, THIS]), (r7 I:java.util.Locale[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.RestrictTo, \{value=[android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP android.support.annotation.RestrictTo$Scope]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_19;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_18;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_16;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_4;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_18 -> Node_19;
}

