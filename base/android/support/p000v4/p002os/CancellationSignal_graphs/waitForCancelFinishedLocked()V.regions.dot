digraph "CFG forandroid.support.v4.os.CancellationSignal.waitForCancelFinishedLocked()V" {
subgraph cluster_Region_510439905 {
label = "R(1:(1:(1:3)))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1503640128 {
label = "LOOP:0: (1:(1:3))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1.mCancelInProgress != false) goto L_0x0004\l}"];
subgraph cluster_Region_817455594 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_960937848 {
label = "Try: R(1:3) catches: R(0)";
node [shape=record,color=blue];
subgraph cluster_Region_1113518600 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ InterruptedException \-\> 0x0008 \}\lSplitter:B:2:0x0004\l|wait()     \/\/ Catch:\{ InterruptedException \-\> 0x0008 \}\l}"];
}
subgraph cluster_Region_1723272633 {
label = "R(0) | ExcHandler: InterruptedException (unused java.lang.InterruptedException)\l";
node [shape=record,color=blue];
}
}
}
}
}
subgraph cluster_Region_1723272633 {
label = "R(0) | ExcHandler: InterruptedException (unused java.lang.InterruptedException)\l";
node [shape=record,color=blue];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lLOOP:0: B:0:0x0000\-\>B:6:0x0000\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004|SYNTHETIC\lSplitter:B:2:0x0004\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\lExcHandler: InterruptedException (unused java.lang.InterruptedException)\lSplitter:B:2:0x0004\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000a}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0000|LOOP_END\lSYNTHETIC\lLOOP:0: B:0:0x0000\-\>B:6:0x0000\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000a|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0000|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.v4.os.CancellationSignal.waitForCancelFinishedLocked((r1v0 'this' android.support.v4.os.CancellationSignal A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_8;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_4 -> Node_6;
Node_6 -> Node_0;
Node_7 -> Node_5;
Node_8 -> Node_6;
}

