digraph "CFG forandroid.support.v4.os.LocaleHelper.forLanguageTag(Ljava\/lang\/String;)Ljava\/util\/Locale;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\-\" \l0x0002: INVOKE  (r0 I:boolean) = (r5 I:java.lang.String), (r0 I:java.lang.CharSequence) java.lang.String.contains(java.lang.CharSequence):boolean type: VIRTUAL \l0x0006: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0007: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0008: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0039 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: CONST_STR  (r0 I:java.lang.String) =  \"\-\" \l0x000e: INVOKE  (r0 I:java.lang.String[]) = \l  (r5 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r1 I:int)\l java.lang.String.split(java.lang.String, int):java.lang.String[] type: VIRTUAL \l0x0012: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IF  (r1 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:6:0x0021 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: NEW_INSTANCE  (r5 I:java.util.Locale) =  java.util.Locale \l0x0017: AGET  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0019: AGET  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x001b: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x001d: INVOKE  \l  (r5 I:java.util.Locale)\l  (r1 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.String)\l java.util.Locale.\<init\>(java.lang.String, java.lang.String, java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: RETURN  (r5 I:java.util.Locale) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: IF  (r1 I:?[int, byte, short, char]) \<= (r4 I:?[int, byte, short, char])  \-\> B:10:0x002e \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: NEW_INSTANCE  (r5 I:java.util.Locale) =  java.util.Locale \l0x0026: AGET  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0028: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x002a: INVOKE  \l  (r5 I:java.util.Locale)\l  (r1 I:java.lang.String)\l  (r0 I:java.lang.String)\l java.util.Locale.\<init\>(java.lang.String, java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: RETURN  (r5 I:java.util.Locale) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|0x002f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x006e \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: NEW_INSTANCE  (r5 I:java.util.Locale) =  java.util.Locale \l0x0033: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0035: INVOKE  (r5 I:java.util.Locale), (r0 I:java.lang.String) java.util.Locale.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|0x0038: RETURN  (r5 I:java.util.Locale) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|0x0039: CONST_STR  (r0 I:java.lang.String) =  \"_\" \l0x003b: INVOKE  (r0 I:boolean) = (r5 I:java.lang.String), (r0 I:java.lang.CharSequence) java.lang.String.contains(java.lang.CharSequence):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|0x003f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x008a \l}"];
Node_16 [shape=record,label="{16\:\ 0x0041|0x0041: CONST_STR  (r0 I:java.lang.String) =  \"_\" \l0x0043: INVOKE  (r0 I:java.lang.String[]) = \l  (r5 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r1 I:int)\l java.lang.String.split(java.lang.String, int):java.lang.String[] type: VIRTUAL \l0x0047: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|0x0048: IF  (r1 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:20:0x0056 \l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|0x004a: NEW_INSTANCE  (r5 I:java.util.Locale) =  java.util.Locale \l0x004c: AGET  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x004e: AGET  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x0050: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0052: INVOKE  \l  (r5 I:java.util.Locale)\l  (r1 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.String)\l java.util.Locale.\<init\>(java.lang.String, java.lang.String, java.lang.String):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0055|0x0055: RETURN  (r5 I:java.util.Locale) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0056|0x0056: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0057|0x0057: IF  (r1 I:?[int, byte, short, char]) \<= (r4 I:?[int, byte, short, char])  \-\> B:24:0x0063 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0059|0x0059: NEW_INSTANCE  (r5 I:java.util.Locale) =  java.util.Locale \l0x005b: AGET  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x005d: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x005f: INVOKE  \l  (r5 I:java.util.Locale)\l  (r1 I:java.lang.String)\l  (r0 I:java.lang.String)\l java.util.Locale.\<init\>(java.lang.String, java.lang.String):void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x0062|0x0062: RETURN  (r5 I:java.util.Locale) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0063|0x0063: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0064|0x0064: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x006e \l}"];
Node_26 [shape=record,label="{26\:\ 0x0066|0x0066: NEW_INSTANCE  (r5 I:java.util.Locale) =  java.util.Locale \l0x0068: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x006a: INVOKE  (r5 I:java.util.Locale), (r0 I:java.lang.String) java.util.Locale.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_27 [shape=record,label="{27\:\ 0x006d|0x006d: RETURN  (r5 I:java.util.Locale) \l}"];
Node_28 [shape=record,label="{28\:\ 0x006e|0x006e: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0070: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0072: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0075: CONST_STR  (r2 I:java.lang.String) =  \"Can not parse language tag: [\" \l0x0077: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007a: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007d: CONST_STR  (r5 I:java.lang.String) =  \"]\" \l0x007f: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0082: INVOKE  (r5 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0086: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_29 [shape=record,label="{29\:\ 0x0089|0x0089: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_30 [shape=record,label="{30\:\ 0x008a|0x008a: NEW_INSTANCE  (r0 I:java.util.Locale) =  java.util.Locale \l0x008c: INVOKE  (r0 I:java.util.Locale), (r5 I:java.lang.String) java.util.Locale.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_31 [shape=record,label="{31\:\ 0x008f|0x008f: RETURN  (r0 I:java.util.Locale) \l}"];
MethodNode[shape=record,label="{static java.util.Locale android.support.v4.os.LocaleHelper.forLanguageTag((r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_28;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_30;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_30 -> Node_31;
}

