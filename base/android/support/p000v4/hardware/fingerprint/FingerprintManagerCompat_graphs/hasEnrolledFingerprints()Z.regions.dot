digraph "CFG forandroid.support.v4.hardware.fingerprint.FingerprintManagerCompat.hasEnrolledFingerprints()Z" {
subgraph cluster_Region_989782838 {
label = "R(1:(2:(1:9)|(1:6))) | DECL_VAR: android.hardware.fingerprint.FingerprintManager null\l";
node [shape=record,color=blue];
subgraph cluster_Region_1902435723 {
label = "R(2:(1:9)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1725850475 {
label = "IF [B:1:0x0005, B:3:0x000d, B:5:0x0013] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (android.os.Build.VERSION.SDK_INT \< 23) goto L_0x0017\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|ADDED_TO_REGION\l|if ((r0 = getFingerprintManagerOrNull(r3.mContext)) == null) goto L_?\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|ADDED_TO_REGION\l|if (r0.hasEnrolledFingerprints() == false) goto L_?\l}"];
subgraph cluster_Region_1647631901 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_798910014 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0007}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000f}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0017|RETURN\lADDED_TO_REGION\l|return false\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{public boolean android.support.v4.hardware.fingerprint.FingerprintManagerCompat.hasEnrolledFingerprints((r3v0 'this' android.support.v4.hardware.fingerprint.FingerprintManagerCompat A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.support.annotation.RequiresPermission, \{value=android.permission.USE_FINGERPRINT\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

