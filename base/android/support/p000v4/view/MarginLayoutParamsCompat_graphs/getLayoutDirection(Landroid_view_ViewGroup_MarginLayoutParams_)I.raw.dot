digraph "CFG forandroid.support.v4.view.MarginLayoutParamsCompat.getLayoutDirection(Landroid\/view\/ViewGroup$MarginLayoutParams;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST  (r2 I:?[int, float, short, byte, char]) = (17 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r3 I:int) = (r3 I:android.view.ViewGroup$MarginLayoutParams) android.view.ViewGroup.MarginLayoutParams.getLayoutDirection():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0013 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0013 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{public static int android.support.v4.view.MarginLayoutParamsCompat.getLayoutDirection((r3 I:android.view.ViewGroup$MarginLayoutParams A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
}

