digraph "CFG forandroid.support.v4.view.AsyncLayoutInflater.InflateThread.enqueue(Landroid\/support\/v4\/view\/AsyncLayoutInflater$InflateRequest;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:java.util.concurrent.ArrayBlockingQueue\<android.support.v4.view.AsyncLayoutInflater$InflateRequest\>) = \l  (r2 I:android.support.v4.view.AsyncLayoutInflater$InflateThread)\l android.support.v4.view.AsyncLayoutInflater.InflateThread.mQueue java.util.concurrent.ArrayBlockingQueue A[Catch:\{ InterruptedException \-\> 0x0006 \}, TRY_ENTER]\l0x0002: INVOKE  \l  (r0 I:java.util.concurrent.ArrayBlockingQueue)\l  (r3 I:java.lang.Object)\l java.util.concurrent.ArrayBlockingQueue.put(java.lang.Object):void type: VIRTUAL A[Catch:\{ InterruptedException \-\> 0x0006 \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|ExcHandler: InterruptedException null\lSplitter:B:0:0x0000\l|0x0006: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0009: CONST_STR  (r1 I:java.lang.String) =  \"Failed to enqueue async inflate request\" \l0x000b: INVOKE  \l  (r0 I:java.lang.RuntimeException)\l  (r1 I:java.lang.String)\l  (r3 I:java.lang.Throwable)\l java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.v4.view.AsyncLayoutInflater.InflateThread.enqueue((r2 'this' I:android.support.v4.view.AsyncLayoutInflater$InflateThread A[IMMUTABLE_TYPE, THIS]), (r3 I:android.support.v4.view.AsyncLayoutInflater$InflateRequest A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

