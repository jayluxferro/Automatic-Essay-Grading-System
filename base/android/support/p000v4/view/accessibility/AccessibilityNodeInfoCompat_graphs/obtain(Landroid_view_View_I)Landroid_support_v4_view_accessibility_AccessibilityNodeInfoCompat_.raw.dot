digraph "CFG forandroid.support.v4.view.accessibility.AccessibilityNodeInfoCompat.obtain(Landroid\/view\/View;I)Landroid\/support\/v4\/view\/accessibility\/AccessibilityNodeInfoCompat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r2 I:android.view.accessibility.AccessibilityNodeInfo) = (r2 I:android.view.View), (r3 I:int) android.view.accessibility.AccessibilityNodeInfo.obtain(android.view.View, int):android.view.accessibility.AccessibilityNodeInfo type: STATIC \l0x000a: INVOKE  (r2 I:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) = (r2 I:java.lang.Object) android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.wrapNonNullInstance(java.lang.Object):android.support.v4.view.accessibility.AccessibilityNodeInfoCompat type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: RETURN  \l  (r2 I:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: RETURN  \l  (r2 I:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)\l \l}"];
MethodNode[shape=record,label="{public static android.support.v4.view.accessibility.AccessibilityNodeInfoCompat android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.obtain((r2 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

