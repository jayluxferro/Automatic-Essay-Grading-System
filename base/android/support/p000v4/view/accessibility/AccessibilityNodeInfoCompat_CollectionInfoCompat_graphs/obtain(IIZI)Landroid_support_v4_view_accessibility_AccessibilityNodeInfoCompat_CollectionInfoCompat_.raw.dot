digraph "CFG forandroid.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat.obtain(IIZI)Landroid\/support\/v4\/view\/accessibility\/AccessibilityNodeInfoCompat$CollectionInfoCompat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (21 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:4:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: NEW_INSTANCE  (r0 I:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat) =  android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat \l0x0008: INVOKE  (r2 I:android.view.accessibility.AccessibilityNodeInfo$CollectionInfo) = (r2 I:int), (r3 I:int), (r4 I:boolean), (r5 I:int) android.view.accessibility.AccessibilityNodeInfo.CollectionInfo.obtain(int, int, boolean, int):android.view.accessibility.AccessibilityNodeInfo$CollectionInfo type: STATIC \l0x000c: INVOKE  \l  (r0 I:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat)\l  (r2 I:java.lang.Object)\l android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat.\<init\>(java.lang.Object):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: RETURN  \l  (r0 I:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat)\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: SGET  (r5 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0012: CONST  (r0 I:?[int, float, short, byte, char]) = (19 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r5 I:?[int, byte, short, char]) \< (r0 I:?[int, byte, short, char])  \-\> B:8:0x0020 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: NEW_INSTANCE  (r5 I:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat) =  android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat \l0x0018: INVOKE  (r2 I:android.view.accessibility.AccessibilityNodeInfo$CollectionInfo) = (r2 I:int), (r3 I:int), (r4 I:boolean) android.view.accessibility.AccessibilityNodeInfo.CollectionInfo.obtain(int, int, boolean):android.view.accessibility.AccessibilityNodeInfo$CollectionInfo type: STATIC \l0x001c: INVOKE  \l  (r5 I:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat)\l  (r2 I:java.lang.Object)\l android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat.\<init\>(java.lang.Object):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: RETURN  \l  (r5 I:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat)\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: NEW_INSTANCE  (r2 I:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat) =  android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat \l0x0022: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: INVOKE  \l  (r2 I:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat)\l  (r3 I:java.lang.Object)\l android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat.\<init\>(java.lang.Object):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: RETURN  \l  (r2 I:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat)\l \l}"];
MethodNode[shape=record,label="{public static android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat.obtain((r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

