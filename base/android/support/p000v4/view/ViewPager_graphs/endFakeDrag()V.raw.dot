digraph "CFG forandroid.support.v4.view.ViewPager.endFakeDrag()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r6 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.mFakeDragging boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0047 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:android.support.v4.view.PagerAdapter) = (r6 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.mAdapter android.support.v4.view.PagerAdapter \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0040 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r0 I:android.view.VelocityTracker) = (r6 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.mVelocityTracker android.view.VelocityTracker \l0x000a: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1000(0x3e8, float:1.401E\-42) ?[int, float, short, byte, char])\l \l0x000c: IGET  (r2 I:int) = (r6 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.mMaximumVelocity int \l0x000e: CAST  (r2 I:float) = (float) (r2 I:int) \l0x000f: INVOKE  \l  (r0 I:android.view.VelocityTracker)\l  (r1 I:int)\l  (r2 I:float)\l android.view.VelocityTracker.computeCurrentVelocity(int, float):void type: VIRTUAL \l0x0012: IGET  (r1 I:int) = (r6 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.mActivePointerId int \l0x0014: INVOKE  (r0 I:float) = (r0 I:android.view.VelocityTracker), (r1 I:int) android.view.VelocityTracker.getXVelocity(int):float type: VIRTUAL \l0x0018: CAST  (r0 I:int) = (int) (r0 I:float) \l0x0019: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001a: IPUT  (r1 I:boolean), (r6 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.mPopulatePending boolean \l0x001c: INVOKE  (r2 I:int) = (r6 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.getClientWidth():int type: DIRECT \l0x0020: INVOKE  (r3 I:int) = (r6 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.getScrollX():int type: VIRTUAL \l0x0024: INVOKE  (r4 I:android.support.v4.view.ViewPager$ItemInfo) = (r6 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.infoForCurrentScrollPosition():android.support.v4.view.ViewPager$ItemInfo type: DIRECT \l0x0028: IGET  (r5 I:int) = (r4 I:android.support.v4.view.ViewPager$ItemInfo) android.support.v4.view.ViewPager.ItemInfo.position int \l0x002a: CAST  (r3 I:float) = (float) (r3 I:int) \l0x002b: CAST  (r2 I:float) = (float) (r2 I:int) \l0x002c: ARITH  (r3 I:float) = (r3 I:float) \/ (r2 I:float) \l0x002d: IGET  (r2 I:float) = (r4 I:android.support.v4.view.ViewPager$ItemInfo) android.support.v4.view.ViewPager.ItemInfo.offset float \l0x002f: ARITH  (r3 I:float) = (r3 I:float) \- (r2 I:float) \l0x0030: IGET  (r2 I:float) = (r4 I:android.support.v4.view.ViewPager$ItemInfo) android.support.v4.view.ViewPager.ItemInfo.widthFactor float \l0x0032: ARITH  (r3 I:float) = (r3 I:float) \/ (r2 I:float) \l0x0033: IGET  (r2 I:float) = (r6 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.mLastMotionX float \l0x0035: IGET  (r4 I:float) = (r6 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.mInitialMotionX float \l0x0037: ARITH  (r2 I:float) = (r2 I:float) \- (r4 I:float) \l0x0038: CAST  (r2 I:int) = (int) (r2 I:float) \l0x0039: INVOKE  (r2 I:int) = \l  (r6 I:android.support.v4.view.ViewPager)\l  (r5 I:int)\l  (r3 I:float)\l  (r0 I:int)\l  (r2 I:int)\l android.support.v4.view.ViewPager.determineTargetPage(int, float, int, int):int type: DIRECT \l0x003d: INVOKE  \l  (r6 I:android.support.v4.view.ViewPager)\l  (r2 I:int)\l  (r1 I:boolean)\l  (r1 I:boolean)\l  (r0 I:int)\l android.support.v4.view.ViewPager.setCurrentItemInternal(int, boolean, boolean, int):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0040|0x0040: INVOKE  (r6 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.endDrag():void type: DIRECT \l0x0043: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0044: IPUT  (r0 I:boolean), (r6 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.mFakeDragging boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x0046|0x0046: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0047|0x0047: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0049: CONST_STR  (r1 I:java.lang.String) =  \"No fake drag in progress. Call beginFakeDrag first.\" \l0x004b: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x004e|0x004e: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.v4.view.ViewPager.endFakeDrag((r6 'this' I:android.support.v4.view.ViewPager A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

