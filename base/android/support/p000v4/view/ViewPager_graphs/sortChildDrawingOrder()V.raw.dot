digraph "CFG forandroid.support.v4.view.ViewPager.sortChildDrawingOrder()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r4 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.mDrawingOrder int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:java.util.ArrayList\<android.view.View\>) = (r4 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.mDrawingOrderedChildren java.util.ArrayList \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x000a: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x000d: IPUT  \l  (r0 I:java.util.ArrayList\<android.view.View\>)\l  (r4 I:android.support.v4.view.ViewPager)\l android.support.v4.view.ViewPager.mDrawingOrderedChildren java.util.ArrayList \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IGET  (r0 I:java.util.ArrayList\<android.view.View\>) = (r4 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.mDrawingOrderedChildren java.util.ArrayList \l0x0012: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.clear():void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INVOKE  (r0 I:int) = (r4 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.getChildCount():int type: VIRTUAL \l0x0019: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:9:0x0028 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: INVOKE  (r2 I:android.view.View) = (r4 I:android.support.v4.view.ViewPager), (r1 I:int) android.support.v4.view.ViewPager.getChildAt(int):android.view.View type: VIRTUAL \l0x0020: IGET  (r3 I:java.util.ArrayList\<android.view.View\>) = (r4 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.mDrawingOrderedChildren java.util.ArrayList \l0x0022: INVOKE  (r3 I:java.util.ArrayList), (r2 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x0025: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: IGET  (r0 I:java.util.ArrayList\<android.view.View\>) = (r4 I:android.support.v4.view.ViewPager) android.support.v4.view.ViewPager.mDrawingOrderedChildren java.util.ArrayList \l0x002a: SGET  (r1 I:android.support.v4.view.ViewPager$ViewPositionComparator) =  android.support.v4.view.ViewPager.sPositionComparator android.support.v4.view.ViewPager$ViewPositionComparator \l0x002c: INVOKE  (r0 I:java.util.List), (r1 I:java.util.Comparator) java.util.Collections.sort(java.util.List, java.util.Comparator):void type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|0x002f: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v4.view.ViewPager.sortChildDrawingOrder((r4 'this' I:android.support.v4.view.ViewPager A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_7;
Node_9 -> Node_10;
}

