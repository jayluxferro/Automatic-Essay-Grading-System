digraph "CFG forandroid.support.v4.view.ViewPager.smoothScrollTo(III)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (getChildCount() != 0) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|setScrollingCacheEnabled(false)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r9.mScroller == null) goto L_0x001a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010}"];
Node_7 [shape=record,label="{7\:\ 0x0016|if (r9.mScroller.isFinished() != false) goto L_0x001a\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|r0 = true\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|r0 = false\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|PHI: r0 \l  PHI: (r0v2 boolean) = (r0v18 boolean), (r0v21 boolean) binds: [B:9:0x001a, B:8:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L_0x0037\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d}"];
Node_12 [shape=record,label="{12\:\ 0x001f|if (r9.mIsScrollStarted == false) goto L_0x0028\l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|int r0 = r9.mScroller.getCurrX()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|int r0 = r9.mScroller.getStartX()\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|PHI: r0 \l  PHI: (r0v13 int) = (r0v15 int), (r0v17 int) binds: [B:14:0x0028, B:13:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|r9.mScroller.abortAnimation()\lsetScrollingCacheEnabled(false)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|int r0 = getScrollX()\l}"];
Node_17 [shape=record,label="{17\:\ 0x003b|PHI: r0 \l  PHI: (r0v3 int) = (r0v11 int), (r0v13 int) binds: [B:16:0x0037, B:15:0x002e] A[DONT_GENERATE, DONT_INLINE]\l|r4 = r0\lint r5 = getScrollY()\lint r6 = r10 \- r4\lint r7 = r11 \- r5\l}"];
Node_18 [shape=record,label="{18\:\ 0x0044|if (r6 != 0) goto L_0x0052\l}"];
Node_19 [shape=record,label="{19\:\ 0x0046|if (r7 != 0) goto L_0x0052\l}"];
Node_20 [shape=record,label="{20\:\ 0x0048|completeScroll(false)\lpopulate()\lsetScrollState(0)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|RETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ 0x0052|setScrollingCacheEnabled(true)\lsetScrollState(2)\lint r10 = getClientWidth()\lint r11 = r10 \/ 2\lfloat r10 = (float) r10\lfloat r11 = (float) r11\lfloat r11 = r11 + (distanceInfluenceForSnapDuration(java.lang.Math.min(1.0f, (((float) java.lang.Math.abs(r6)) * 1.0f) \/ r10)) * r11)\lint r12 = java.lang.Math.abs(r12)\l}"];
Node_23 [shape=record,label="{23\:\ 0x007a|if (r12 \<= 0) goto L_0x008d\l}"];
Node_24 [shape=record,label="{24\:\ 0x007c|int r10 = java.lang.Math.round(java.lang.Math.abs(r11 \/ ((float) r12)) * 1000.0f) * 4\l}"];
Node_25 [shape=record,label="{25\:\ 0x008d|float r10 = r10 * r9.mAdapter.getPageWidth(r9.mCurItem)\lint r10 = (int) (((((float) java.lang.Math.abs(r6)) \/ (r10 + ((float) r9.mPageMargin))) + 1.0f) * 100.0f)\l}"];
Node_26 [shape=record,label="{26\:\ 0x00a7|PHI: r10 \l  PHI: (r10v4 int) = (r10v8 int), (r10v11 int) binds: [B:25:0x008d, B:24:0x007c] A[DONT_GENERATE, DONT_INLINE]\l|int r8 = java.lang.Math.min(r10, 600)\lr9.mIsScrollStarted = false\lr9.mScroller.startScroll(r4, r5, r6, r7, r8)\landroid.support.p000v4.view.ViewCompat.postInvalidateOnAnimation(r9)\l}"];
Node_27 [shape=record,label="{27\:\ 0x00b7|RETURN\l|return\l}"];
MethodNode[shape=record,label="{void android.support.v4.view.ViewPager.smoothScrollTo((r9v0 'this' android.support.v4.view.ViewPager A[IMMUTABLE_TYPE, THIS]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
}

