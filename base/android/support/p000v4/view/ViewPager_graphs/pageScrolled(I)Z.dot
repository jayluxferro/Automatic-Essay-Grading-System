digraph "CFG forandroid.support.v4.view.ViewPager.pageScrolled(I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r6.mItems.size() != 0) goto L_0x0021\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r6.mFirstLayout == false) goto L_0x000e\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|RETURN\l|return false\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|r6.mCalledSuper = false\lonPageScrolled(0, 0.0f, 0)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|if (r6.mCalledSuper == false) goto L_0x0019\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|RETURN\l|return false\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019}"];
Node_9 [shape=record,label="{9\:\ 0x0020|throw new java.lang.IllegalStateException(\"onPageScrolled did not call superclass implementation\")\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|android.support.v4.view.ViewPager$ItemInfo r0 = infoForCurrentScrollPosition()\lint r2 = getClientWidth()\lint r3 = r6.mPageMargin + r2\lfloat r2 = (float) r2\lfloat r4 = ((float) r6.mPageMargin) \/ r2\lint r5 = r0.position\lfloat r7 = ((((float) r7) \/ r2) \- r0.offset) \/ (r0.widthFactor + r4)\lr6.mCalledSuper = false\lonPageScrolled(r5, r7, (int) (((float) r3) * r7))\l}"];
Node_11 [shape=record,label="{11\:\ 0x0047|if (r6.mCalledSuper == false) goto L_0x004b\l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|RETURN\l|return true\l}"];
Node_13 [shape=record,label="{13\:\ 0x004b}"];
Node_14 [shape=record,label="{14\:\ 0x0052|throw new java.lang.IllegalStateException(\"onPageScrolled did not call superclass implementation\")\l}"];
MethodNode[shape=record,label="{private boolean android.support.v4.view.ViewPager.pageScrolled((r6v0 'this' android.support.v4.view.ViewPager A[IMMUTABLE_TYPE, THIS]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_14;
}

