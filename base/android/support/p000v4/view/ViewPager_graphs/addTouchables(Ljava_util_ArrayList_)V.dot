digraph "CFG forandroid.support.v4.view.ViewPager.addTouchables(Ljava\/util\/ArrayList;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:10:0x0020] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:10:0x0020\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r0 \>= getChildCount()) goto L_0x0023\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|android.view.View r1 = getChildAt(r0)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|if (r1.getVisibility() != 0) goto L_0x0020\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|android.support.v4.view.ViewPager$ItemInfo r2 = infoForChild(r1)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|if (r2 == null) goto L_0x0020\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017}"];
Node_8 [shape=record,label="{8\:\ 0x001b|if (r2.position != r4.mCurItem) goto L_0x0020\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|r1.addTouchables(r5)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:10:0x0020\l|int r0 = r0 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0020|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0020|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v4.view.ViewPager.addTouchables((r4v0 'this' android.support.v4.view.ViewPager A[IMMUTABLE_TYPE, THIS]), (r5v0 java.util.ArrayList\<android.view.View\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/ArrayList\<, Landroid\/view\/View;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_12;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_13;
Node_10 -> Node_1;
Node_12 -> Node_11;
Node_13 -> Node_10;
Node_14 -> Node_10;
Node_15 -> Node_10;
Node_16 -> Node_10;
}

