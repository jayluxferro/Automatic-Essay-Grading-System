digraph "CFG forandroid.support.v4.view.KeyEventDispatcher.dialogSuperDispatchKeyEventPre28(Landroid\/app\/Dialog;Landroid\/view\/KeyEvent;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.content.DialogInterface$OnKeyListener r0 = getDialogKeyListenerPre28(r3)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r0 == null) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007}"];
Node_3 [shape=record,label="{3\:\ 0x000f|if (r0.onKey(r3, r4.getKeyCode(), r4) == false) goto L_0x0012\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|RETURN\l|return true\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|android.view.Window r0 = r3.getWindow()\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|if (r0.superDispatchKeyEvent(r4) == false) goto L_0x001d\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|RETURN\l|return true\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|android.view.View r0 = r0.getDecorView()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|if (android.support.p000v4.view.ViewCompat.dispatchUnhandledKeyEventBeforeCallback(r0, r4) == false) goto L_0x0028\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|RETURN\l|return true\l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|if (r0 == null) goto L_0x002f\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|android.view.KeyEvent$DispatcherState r0 = r0.getKeyDispatcherState()\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|r0 = null\l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|PHI: r0 \l  PHI: (r0v3 android.view.KeyEvent$DispatcherState) = (r0v4 android.view.KeyEvent$DispatcherState), (r0v5 android.view.KeyEvent$DispatcherState) binds: [B:13:0x002f, B:12:0x002a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|RETURN\l|return r4.dispatch(r3, r0, r3)\l}"];
MethodNode[shape=record,label="{private static boolean android.support.v4.view.KeyEventDispatcher.dialogSuperDispatchKeyEventPre28((r3v0 android.app.Dialog A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.view.KeyEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

