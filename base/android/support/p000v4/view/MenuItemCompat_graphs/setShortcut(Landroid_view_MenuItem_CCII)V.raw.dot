digraph "CFG forandroid.support.v4.view.MenuItemCompat.setShortcut(Landroid\/view\/MenuItem;CCII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) android.support.v4.internal.view.SupportMenuItem \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CHECK_CAST  (r2 I:android.support.v4.internal.view.SupportMenuItem) = (android.support.v4.internal.view.SupportMenuItem) (r2 I:?[OBJECT, ARRAY]) \l0x0006: INVOKE  \l  (r2 I:android.support.v4.internal.view.SupportMenuItem)\l  (r3 I:char)\l  (r4 I:char)\l  (r5 I:int)\l  (r6 I:int)\l android.support.v4.internal.view.SupportMenuItem.setShortcut(char, char, int, int):android.view.MenuItem type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x000c: CONST  (r1 I:?[int, float, short, byte, char]) = (26 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: INVOKE  \l  (r2 I:android.view.MenuItem)\l  (r3 I:char)\l  (r4 I:char)\l  (r5 I:int)\l  (r6 I:int)\l android.view.MenuItem.setShortcut(char, char, int, int):android.view.MenuItem type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: RETURN   \l}"];
MethodNode[shape=record,label="{public static void android.support.v4.view.MenuItemCompat.setShortcut((r2 I:android.view.MenuItem A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:char A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:char A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
}

