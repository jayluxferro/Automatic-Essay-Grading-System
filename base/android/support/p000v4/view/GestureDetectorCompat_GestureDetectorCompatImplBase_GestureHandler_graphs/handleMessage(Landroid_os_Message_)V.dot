digraph "CFG forandroid.support.v4.view.GestureDetectorCompat.GestureDetectorCompatImplBase.GestureHandler.handleMessage(Landroid\/os\/Message;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|switch(r4.what) \{\l    case 1: goto L_0x0040;\l    case 2: goto L_0x003a;\l    case 3: goto L_0x001c;\l    default: goto L_0x0005;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Unknown message \")\lr1.append(r4)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|throw new java.lang.RuntimeException(r1.toString())\l}"];
Node_4 [shape=record,label="{4\:\ 0x001c}"];
Node_5 [shape=record,label="{5\:\ 0x0020|if (r3.this$0.mDoubleTapListener == null) goto L_?\l}"];
Node_6 [shape=record,label="{6\:\ 0x0022}"];
Node_7 [shape=record,label="{7\:\ 0x0026|if (r3.this$0.mStillDown != false) goto L_0x0034\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|r3.this$0.mDoubleTapListener.onSingleTapConfirmed(r3.this$0.mCurrentDownEvent)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|r3.this$0.mDeferConfirmSingleTap = true\l}"];
Node_10 [shape=record,label="{10\:\ 0x003a|r3.this$0.dispatchLongPress()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|r3.this$0.mListener.onShowPress(r3.this$0.mCurrentDownEvent)\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.v4.view.GestureDetectorCompat.GestureDetectorCompatImplBase.GestureHandler.handleMessage((r3v0 'this' android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler A[IMMUTABLE_TYPE, THIS]), (r4v0 android.os.Message A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_10;
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_14;
Node_9 -> Node_15;
Node_10 -> Node_16;
Node_11 -> Node_12;
}

