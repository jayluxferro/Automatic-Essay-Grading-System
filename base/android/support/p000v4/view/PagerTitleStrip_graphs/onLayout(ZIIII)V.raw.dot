digraph "CFG forandroid.support.v4.view.PagerTitleStrip.onLayout(ZIIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r1 I:android.support.v4.view.ViewPager) = (r0 I:android.support.v4.view.PagerTitleStrip) android.support.v4.view.PagerTitleStrip.mPager android.support.v4.view.ViewPager \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r1 I:float) = (r0 I:android.support.v4.view.PagerTitleStrip) android.support.v4.view.PagerTitleStrip.mLastKnownPositionOffset float \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CMP_L  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r1 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:5:0x000d \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IGET  (r2 I:float) = (r0 I:android.support.v4.view.PagerTitleStrip) android.support.v4.view.PagerTitleStrip.mLastKnownPositionOffset float \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IGET  (r1 I:int) = (r0 I:android.support.v4.view.PagerTitleStrip) android.support.v4.view.PagerTitleStrip.mLastKnownCurrentPage int \l0x000f: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0010: INVOKE  \l  (r0 I:android.support.v4.view.PagerTitleStrip)\l  (r1 I:int)\l  (r2 I:float)\l  (r3 I:boolean)\l android.support.v4.view.PagerTitleStrip.updateTextPositions(int, float, boolean):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: RETURN   \l}"];
MethodNode[shape=record,label="{protected void android.support.v4.view.PagerTitleStrip.onLayout((r0 'this' I:android.support.v4.view.PagerTitleStrip A[IMMUTABLE_TYPE, THIS]), (r1 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

