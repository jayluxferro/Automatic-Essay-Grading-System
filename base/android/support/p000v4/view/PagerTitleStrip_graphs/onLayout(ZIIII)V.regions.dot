digraph "CFG forandroid.support.v4.view.PagerTitleStrip.onLayout(ZIIII)V" {
subgraph cluster_Region_897191991 {
label = "R(1:(1:(3:2|(1:4)|5)))";
node [shape=record,color=blue];
subgraph cluster_Region_1922370775 {
label = "R(1:(3:2|(1:4)|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1231587944 {
label = "IF [B:1:0x0002] THEN: R(3:2|(1:4)|5) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r0.mPager != null) goto L_0x0004\l}"];
subgraph cluster_Region_1660401570 {
label = "R(3:2|(1:4)|5)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|float r2 = 0.0f\l}"];
subgraph cluster_IfRegion_1920901603 {
label = "IF [B:3:0x0009] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r0.mLastKnownPositionOffset \>= 0.0f) goto L_0x000b\l}"];
subgraph cluster_Region_1638479674 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|float r2 = r0.mLastKnownPositionOffset\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x000d|PHI: r2 \l  PHI: (r2v2 float) = (r2v1 float), (r2v3 float) binds: [B:3:0x0009, B:4:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|updateTextPositions(r0.mLastKnownCurrentPage, r2, true)\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void android.support.v4.view.PagerTitleStrip.onLayout((r0v0 'this' android.support.v4.view.PagerTitleStrip A[IMMUTABLE_TYPE, THIS]), (r1v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_0 -> Node_1;
}

