digraph "CFG forandroid.support.v4.view.ViewCompat.dispatchFinishTemporaryDetach(Landroid\/view\/View;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 24) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|r2.dispatchFinishTemporaryDetach()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a}"];
Node_4 [shape=record,label="{4\:\ 0x000c|if (sTempDetachBound != false) goto L_0x0011\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|bindTempDetach()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011}"];
Node_7 [shape=record,label="{7\:\ 0x0013|if (sDispatchFinishTemporaryDetach == null) goto L_0x0027\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|SYNTHETIC\lSplitter:B:8:0x0015\l}"];
Node_9 [shape=record,label="{9\:\ ?|Catch:\{ Exception \-\> 0x001e \}\lSplitter:B:8:0x0015\l|sDispatchFinishTemporaryDetach.invoke(r2, new java.lang.Object[0])     \/\/ Catch:\{ Exception \-\> 0x001e \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|ExcHandler: Exception (r2v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:8:0x0015\l|java.lang.Exception r2 = move\-exception\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|android.util.Log.d(TAG, \"Error calling dispatchFinishTemporaryDetach\", r2)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|r2.onFinishTemporaryDetach()\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public static void android.support.v4.view.ViewCompat.dispatchFinishTemporaryDetach((r2v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_15;
Node_12 -> Node_13;
}

