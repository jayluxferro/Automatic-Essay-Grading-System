digraph "CFG forandroid.support.v4.view.ViewCompat.setTransitionName(Landroid\/view\/View;Ljava\/lang\/String;)V" {
subgraph cluster_Region_540634427 {
label = "R(1:(2:(2:2|8)|(2:(1:5)|6)))";
node [shape=record,color=blue];
subgraph cluster_Region_922803282 {
label = "R(2:(2:2|8)|(2:(1:5)|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_3909884 {
label = "IF [B:1:0x0004] THEN: R(2:2|8) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 21) goto L_0x0006\l}"];
subgraph cluster_Region_286808003 {
label = "R(2:2|8)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|r2.setTransitionName(r3)\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_2057543790 {
label = "R(2:(1:5)|6)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1274020132 {
label = "IF [B:4:0x000c] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|if (sTransitionNameMap == null) goto L_0x000e\l}"];
subgraph cluster_Region_374418670 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|sTransitionNameMap = new java.util.WeakHashMap\<\>()\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0015|sTransitionNameMap.put(r2, r3)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000a}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
MethodNode[shape=record,label="{public static void android.support.v4.view.ViewCompat.setTransitionName((r2v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_3 -> Node_4;
}

