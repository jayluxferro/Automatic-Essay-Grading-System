digraph "CFG forandroid.support.v4.view.ViewCompat.dispatchStartTemporaryDetach(Landroid\/view\/View;)V" {
subgraph cluster_Region_508666367 {
label = "R(1:(2:(2:2|14)|(2:(1:5)|(1:(1:9))(1:12))))";
node [shape=record,color=blue];
subgraph cluster_Region_1861757728 {
label = "R(2:(2:2|14)|(2:(1:5)|(1:(1:9))(1:12)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_944652699 {
label = "IF [B:1:0x0004] THEN: R(2:2|14) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 24) goto L_0x0006\l}"];
subgraph cluster_Region_211601424 {
label = "R(2:2|14)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|r2.dispatchStartTemporaryDetach()\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_533843493 {
label = "R(2:(1:5)|(1:(1:9))(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_811550676 {
label = "IF [B:4:0x000c] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|if (sTempDetachBound == false) goto L_0x000e\l}"];
subgraph cluster_Region_2060950237 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|bindTempDetach()\l}"];
}
}
subgraph cluster_IfRegion_283185631 {
label = "IF [B:7:0x0013] THEN: R(1:(1:9)) ELSE: R(1:12)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0013|if (sDispatchStartTemporaryDetach != null) goto L_0x0015\l}"];
subgraph cluster_Region_30430464 {
label = "R(1:(1:9))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1266402057 {
label = "Try: R(1:9) catches: R(2:10|11)";
node [shape=record,color=blue];
subgraph cluster_Region_222083529 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ ?|Catch:\{ Exception \-\> 0x001e \}\lSplitter:B:8:0x0015\l|sDispatchStartTemporaryDetach.invoke(r2, new java.lang.Object[0])     \/\/ Catch:\{ Exception \-\> 0x001e \}\l}"];
}
subgraph cluster_Region_357252696 {
label = "R(2:10|11) | ExcHandler: Exception (r2v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001e|ExcHandler: Exception (r2v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:8:0x0015\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|android.util.Log.d(TAG, \"Error calling dispatchStartTemporaryDetach\", r2)\l}"];
}
}
}
subgraph cluster_Region_372248996 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0027|r2.onStartTemporaryDetach()\l}"];
}
}
}
}
}
subgraph cluster_Region_357252696 {
label = "R(2:10|11) | ExcHandler: Exception (r2v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001e|ExcHandler: Exception (r2v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:8:0x0015\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|android.util.Log.d(TAG, \"Error calling dispatchStartTemporaryDetach\", r2)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000a}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0011}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0015|SYNTHETIC\lSplitter:B:8:0x0015\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static void android.support.v4.view.ViewCompat.dispatchStartTemporaryDetach((r2v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_14;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_12[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_15;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_10;
}

