digraph "CFG forandroid.support.v4.view.ViewCompat.offsetTopAndBottom(Landroid\/view\/View;I)V" {
subgraph cluster_Region_1467871166 {
label = "R(1:(1:2)(1:(4:5|(1:7)|8|(1:(1:12)))(1:13)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1191068944 {
label = "IF [B:1:0x0004] THEN: R(1:2) ELSE: R(1:(4:5|(1:7)|8|(1:(1:12)))(1:13))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 23) goto L_0x0006\l}"];
subgraph cluster_Region_839203589 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|r6.offsetTopAndBottom(r7)\l}"];
}
subgraph cluster_Region_1381472557 {
label = "R(1:(4:5|(1:7)|8|(1:(1:12)))(1:13)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1785699526 {
label = "IF [B:4:0x000e] THEN: R(4:5|(1:7)|8|(1:(1:12))) ELSE: R(1:13) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|if (android.os.Build.VERSION.SDK_INT \>= 21) goto L_0x0010\l}"];
subgraph cluster_Region_914215873 {
label = "R(4:5|(1:7)|8|(1:(1:12)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|android.graphics.Rect android.graphics.Rect r0 = getEmptyTempRect()\lboolean r1 = false\landroid.view.ViewParent android.view.ViewParent r2 = r6.getParent()\l}"];
subgraph cluster_IfRegion_1554899853 {
label = "IF [B:6:0x001b] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001b|if ((r2 instanceof android.view.View) == true) goto L_0x001d\l}"];
subgraph cluster_Region_1006778204 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001d|android.view.View android.view.View r1 = (android.view.View) r2\lr0.set(r1.getLeft(), r1.getTop(), r1.getRight(), r1.getBottom())\lr1 = !r0.intersects(r6.getLeft(), r6.getTop(), r6.getRight(), r6.getBottom())\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0049|PHI: r1 \l  PHI: (r1v3 boolean) = (r1v2 boolean), (r1v10 boolean) binds: [B:6:0x001b, B:7:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|compatOffsetTopAndBottom(r6, r7)\l}"];
subgraph cluster_Region_1586336350 {
label = "R(1:(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_698145228 {
label = "IF [B:9:0x004c, B:11:0x0062] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x004c|if (r1 != false) goto L_0x004e\l}"];
Node_11 [shape=record,label="{11\:\ 0x0062|ADDED_TO_REGION\l|if (r0.intersect(r6.getLeft(), r6.getTop(), r6.getRight(), r6.getBottom()) != false) goto L_0x0064\l}"];
subgraph cluster_Region_76991237 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0064|((android.view.View) r2).invalidate(r0)\l}"];
}
}
}
}
subgraph cluster_Region_1170950041 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x006a|compatOffsetTopAndBottom(r6, r7)\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000a}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x004e}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static void android.support.v4.view.ViewCompat.offsetTopAndBottom((r6v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_15;
Node_4 -> Node_5;
Node_4 -> Node_13[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_16[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_17[style=dashed];
Node_12 -> Node_18;
Node_13 -> Node_14;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_10 -> Node_11;
}

