digraph "CFG forandroid.support.v4.view.PagerTabStrip.setBackgroundColor(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:android.support.v4.view.PagerTitleStrip), (r2 I:int) android.support.v4.view.PagerTitleStrip.setBackgroundColor(int):void type: SUPER \l0x0003: IGET  (r0 I:boolean) = (r1 I:android.support.v4.view.PagerTabStrip) android.support.v4.view.PagerTabStrip.mDrawFullUnderlineSet boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (\-16777216(0xffffffffff000000, float:\-1.7014118E38) ?[int, float, short, byte, char])\l \l0x0009: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (r0 I:?[int, boolean, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IPUT  \l  (r2 I:boolean)\l  (r1 I:android.support.v4.view.PagerTabStrip)\l android.support.v4.view.PagerTabStrip.mDrawFullUnderline boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.view.PagerTabStrip.setBackgroundColor((r1 'this' I:android.support.v4.view.PagerTabStrip A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.ColorInt, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

