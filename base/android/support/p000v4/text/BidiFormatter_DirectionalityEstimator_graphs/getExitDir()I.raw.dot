digraph "CFG forandroid.support.v4.text.BidiFormatter.DirectionalityEstimator.getExitDir()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = \l  (r6 I:android.support.v4.text.BidiFormatter$DirectionalityEstimator)\l android.support.v4.text.BidiFormatter.DirectionalityEstimator.length int \l0x0002: IPUT  \l  (r0 I:int)\l  (r6 I:android.support.v4.text.BidiFormatter$DirectionalityEstimator)\l android.support.v4.text.BidiFormatter.DirectionalityEstimator.charIndex int \l0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IGET  (r3 I:int) = \l  (r6 I:android.support.v4.text.BidiFormatter$DirectionalityEstimator)\l android.support.v4.text.BidiFormatter.DirectionalityEstimator.charIndex int \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:25:0x003a \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: INVOKE  (r3 I:byte) = \l  (r6 I:android.support.v4.text.BidiFormatter$DirectionalityEstimator)\l android.support.v4.text.BidiFormatter.DirectionalityEstimator.dirTypeBackward():byte type: VIRTUAL \l0x000f: CONST  (r4 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0007 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0014: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2] t:[0x0033, 0x002d, 0x002d] \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[14, 15, 16, 17, 18] t:[0x0027, 0x0027, 0x0021, 0x0021, 0x001e] \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0007 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0024 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|0x0023: RETURN  (r4 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|0x0024: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0027|0x0027: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x002a \l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|0x0029: RETURN  (r5 I:int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x002a|0x002a: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x002d|0x002d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0030 \l}"];
Node_18 [shape=record,label="{18\:\ 0x002f|0x002f: RETURN  (r4 I:int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0030|0x0030: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0007 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0033|0x0033: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0036 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0035|0x0035: RETURN  (r5 I:int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0036|0x0036: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0007 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0038|0x0038: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x003a|0x003a: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{int android.support.v4.text.BidiFormatter.DirectionalityEstimator.getExitDir((r6 'this' I:android.support.v4.text.BidiFormatter$DirectionalityEstimator A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_25;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_17;
Node_6 -> Node_21;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_7 -> Node_11;
Node_7 -> Node_14;
Node_8 -> Node_1;
Node_8 -> Node_24[style=dashed];
Node_10 -> Node_1;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_1;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_16 -> Node_1;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_19 -> Node_1;
Node_19 -> Node_24[style=dashed];
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_23 -> Node_1;
Node_23 -> Node_24[style=dashed];
Node_24 -> Node_1;
}

