digraph "CFG forandroid.support.v4.text.TextDirectionHeuristicsCompat.AnyStrong.checkRtl(Ljava\/lang\/CharSequence;II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r7 = r7 + r6\lr1 = false\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|LOOP_START\lPHI: r1 r6 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v2 boolean) binds: [B:0:0x0000, B:11:0x0021] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 int) = (r6v0 int), (r6v2 int) binds: [B:0:0x0000, B:11:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:11:0x0021\l|if (r6 \>= r7) goto L_0x0024\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x0012|switch(android.support.p000v4.text.TextDirectionHeuristicsCompat.isRtlText(java.lang.Character.getDirectionality(r5.charAt(r6)))) \{\l    case 0: goto L_0x001b;\l    case 1: goto L_0x0016;\l    default: goto L_0x0015;\l\}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016}"];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r4.mLookForRtl != false) goto L_0x0020\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|RETURN\l|return 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b}"];
Node_8 [shape=record,label="{8\:\ 0x001d|if (r4.mLookForRtl == false) goto L_0x0020\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|RETURN\l|return 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|r1 = true\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|LOOP_END\lPHI: r1 \l  PHI: (r1v2 boolean) = (r1v1 boolean), (r1v3 boolean) binds: [B:20:0x0021, B:19:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:11:0x0021\l|int r6 = r6 + 1\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|if (r1 == false) goto L_0x0029\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026}"];
Node_14 [shape=record,label="{14\:\ 0x0028|RETURN\l|return r4.mLookForRtl ? 1 : 0\l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|RETURN\l|return 2\l}"];
Node_16 [shape=record,label="{16\:\ 0x0024|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x001a|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x001f|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0021|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0021|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int android.support.v4.text.TextDirectionHeuristicsCompat.AnyStrong.checkRtl((r4v0 'this' android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_3 -> Node_20;
Node_4 -> Node_5;
Node_5 -> Node_10;
Node_5 -> Node_17[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_18[style=dashed];
Node_10 -> Node_19;
Node_11 -> Node_1;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_16 -> Node_12;
Node_17 -> Node_6;
Node_18 -> Node_9;
Node_19 -> Node_11;
Node_20 -> Node_11;
}

