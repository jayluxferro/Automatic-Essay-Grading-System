digraph "CFG forandroid.support.v4.text.BidiFormatter.unicodeWrap(Ljava\/lang\/CharSequence;Landroid\/support\/v4\/text\/TextDirectionHeuristicCompat;Z)Ljava\/lang\/CharSequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r3 I:java.lang.CharSequence) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: INVOKE  (r1 I:int) = (r3 I:java.lang.CharSequence) java.lang.CharSequence.length():int type: INTERFACE \l0x0009: INVOKE  (r4 I:boolean) = \l  (r4 I:android.support.v4.text.TextDirectionHeuristicCompat)\l  (r3 I:java.lang.CharSequence)\l  (r0 I:int)\l  (r1 I:int)\l android.support.v4.text.TextDirectionHeuristicCompat.isRtl(java.lang.CharSequence, int, int):boolean type: INTERFACE \l0x000d: NEW_INSTANCE  (r0 I:android.text.SpannableStringBuilder) =  android.text.SpannableStringBuilder \l0x000f: INVOKE  (r0 I:android.text.SpannableStringBuilder) android.text.SpannableStringBuilder.\<init\>():void type: DIRECT \l0x0012: INVOKE  (r1 I:boolean) = (r2 I:android.support.v4.text.BidiFormatter) android.support.v4.text.BidiFormatter.getStereoReset():boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: SGET  (r1 I:android.support.v4.text.TextDirectionHeuristicCompat) =  android.support.v4.text.TextDirectionHeuristicsCompat.RTL android.support.v4.text.TextDirectionHeuristicCompat \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: SGET  (r1 I:android.support.v4.text.TextDirectionHeuristicCompat) =  android.support.v4.text.TextDirectionHeuristicsCompat.LTR android.support.v4.text.TextDirectionHeuristicCompat \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: INVOKE  (r1 I:java.lang.String) = \l  (r2 I:android.support.v4.text.BidiFormatter)\l  (r3 I:java.lang.CharSequence)\l  (r1 I:android.support.v4.text.TextDirectionHeuristicCompat)\l android.support.v4.text.BidiFormatter.markBefore(java.lang.CharSequence, android.support.v4.text.TextDirectionHeuristicCompat):java.lang.String type: DIRECT \l0x0025: INVOKE  \l  (r0 I:android.text.SpannableStringBuilder)\l  (r1 I:java.lang.CharSequence)\l android.text.SpannableStringBuilder.append(java.lang.CharSequence):android.text.SpannableStringBuilder type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: IGET  (r1 I:boolean) = (r2 I:android.support.v4.text.BidiFormatter) android.support.v4.text.BidiFormatter.mIsRtlContext boolean \l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x003f \l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|0x002c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0031 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|0x002e: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (8235(0x202b, float:1.154E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|0x0031: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (8234(0x202a, float:1.1538E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|0x0033: INVOKE  (r0 I:android.text.SpannableStringBuilder), (r1 I:char) android.text.SpannableStringBuilder.append(char):android.text.SpannableStringBuilder type: VIRTUAL \l0x0036: INVOKE  \l  (r0 I:android.text.SpannableStringBuilder)\l  (r3 I:java.lang.CharSequence)\l android.text.SpannableStringBuilder.append(java.lang.CharSequence):android.text.SpannableStringBuilder type: VIRTUAL \l0x0039: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (8236(0x202c, float:1.1541E\-41) ?[int, float, short, byte, char])\l \l0x003b: INVOKE  (r0 I:android.text.SpannableStringBuilder), (r1 I:char) android.text.SpannableStringBuilder.append(char):android.text.SpannableStringBuilder type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: INVOKE  \l  (r0 I:android.text.SpannableStringBuilder)\l  (r3 I:java.lang.CharSequence)\l android.text.SpannableStringBuilder.append(java.lang.CharSequence):android.text.SpannableStringBuilder type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|0x0042: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0052 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0044|0x0044: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0049 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0046|0x0046: SGET  (r4 I:android.support.v4.text.TextDirectionHeuristicCompat) =  android.support.v4.text.TextDirectionHeuristicsCompat.RTL android.support.v4.text.TextDirectionHeuristicCompat \l}"];
Node_20 [shape=record,label="{20\:\ 0x0049|0x0049: SGET  (r4 I:android.support.v4.text.TextDirectionHeuristicCompat) =  android.support.v4.text.TextDirectionHeuristicsCompat.LTR android.support.v4.text.TextDirectionHeuristicCompat \l}"];
Node_21 [shape=record,label="{21\:\ 0x004b|0x004b: INVOKE  (r3 I:java.lang.String) = \l  (r2 I:android.support.v4.text.BidiFormatter)\l  (r3 I:java.lang.CharSequence)\l  (r4 I:android.support.v4.text.TextDirectionHeuristicCompat)\l android.support.v4.text.BidiFormatter.markAfter(java.lang.CharSequence, android.support.v4.text.TextDirectionHeuristicCompat):java.lang.String type: DIRECT \l0x004f: INVOKE  \l  (r0 I:android.text.SpannableStringBuilder)\l  (r3 I:java.lang.CharSequence)\l android.text.SpannableStringBuilder.append(java.lang.CharSequence):android.text.SpannableStringBuilder type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x0052|0x0052: RETURN  (r0 I:java.lang.CharSequence) \l}"];
MethodNode[shape=record,label="{public java.lang.CharSequence android.support.v4.text.BidiFormatter.unicodeWrap((r2 'this' I:android.support.v4.text.BidiFormatter A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.support.v4.text.TextDirectionHeuristicCompat A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
}

