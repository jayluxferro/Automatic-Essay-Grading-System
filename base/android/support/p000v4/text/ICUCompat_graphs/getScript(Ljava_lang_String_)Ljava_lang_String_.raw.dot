digraph "CFG forandroid.support.v4.text.ICUCompat.getScript(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: SGET  (r1 I:java.lang.reflect.Method) =  android.support.v4.text.ICUCompat.sGetScriptMethod java.lang.reflect.Method A[Catch:\{ IllegalAccessException \-\> 0x001b, InvocationTargetException \-\> 0x0014 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0021 A[Catch:\{ IllegalAccessException \-\> 0x001b, InvocationTargetException \-\> 0x0014 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \-\> 0x001b, InvocationTargetException \-\> 0x0014 \}]\l0x0006: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ IllegalAccessException \-\> 0x001b, InvocationTargetException \-\> 0x0014 \}]\l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \-\> 0x001b, InvocationTargetException \-\> 0x0014 \}]\l0x0009: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \-\> 0x001b, InvocationTargetException \-\> 0x0014 \}]\l0x000b: SGET  (r3 I:java.lang.reflect.Method) =  android.support.v4.text.ICUCompat.sGetScriptMethod java.lang.reflect.Method A[Catch:\{ IllegalAccessException \-\> 0x001b, InvocationTargetException \-\> 0x0014 \}]\l0x000d: INVOKE  (r3 I:java.lang.Object) = \l  (r3 I:java.lang.reflect.Method)\l  (r0 I:java.lang.Object)\l  (r1 I:java.lang.Object[])\l java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x001b, InvocationTargetException \-\> 0x0014 \}]\l0x0011: CHECK_CAST  (r3 I:java.lang.String) = (java.lang.String) (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ IllegalAccessException \-\> 0x001b, InvocationTargetException \-\> 0x0014 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: RETURN  (r3 I:java.lang.String) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|ExcHandler: InvocationTargetException null\lSplitter:B:1:0x0001\l|0x0014: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: CONST_STR  (r1 I:java.lang.String) =  \"ICUCompat\" \l0x0017: INVOKE  (r1 I:java.lang.String), (r3 I:java.lang.Throwable) android.util.Log.w(java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|ExcHandler: IllegalAccessException null\lSplitter:B:1:0x0001\l|0x001b: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: CONST_STR  (r1 I:java.lang.String) =  \"ICUCompat\" \l0x001e: INVOKE  (r1 I:java.lang.String), (r3 I:java.lang.Throwable) android.util.Log.w(java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{private static java.lang.String android.support.v4.text.ICUCompat.getScript((r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

