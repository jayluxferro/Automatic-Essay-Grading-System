digraph "CFG forandroid.support.v4.text.TextUtilsCompat.getLayoutDirectionFromLocale(Ljava\/util\/Locale;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 17) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return android.text.TextUtils.getLayoutDirectionFromLocale(r2)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r2 == null) goto L_?\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d}"];
Node_6 [shape=record,label="{6\:\ 0x0013|if (r2.equals(ROOT) != false) goto L_?\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|java.lang.String r0 = android.support.p000v4.text.ICUCompat.maximizeAndGetScript(r2)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|if (r0 != null) goto L_0x0020\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b}"];
Node_10 [shape=record,label="{10\:\ 0x001f|RETURN\l|return getLayoutDirectionFromFirstChar(r2)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020}"];
Node_12 [shape=record,label="{12\:\ 0x0026|if (r0.equalsIgnoreCase(ARAB_SCRIPT_SUBTAG) != false) goto L_?\l}"];
Node_13 [shape=record,label="{13\:\ 0x0028}"];
Node_14 [shape=record,label="{14\:\ 0x002e|if (r0.equalsIgnoreCase(HEBR_SCRIPT_SUBTAG) == false) goto L_?\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return 1\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return 1\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return 0\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return 0\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return 0\l}"];
MethodNode[shape=record,label="{public static int android.support.v4.text.TextUtilsCompat.getLayoutDirectionFromLocale((r2v0 java.util.Locale A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_17;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_18;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_16[style=dashed];
Node_14 -> Node_19;
}

