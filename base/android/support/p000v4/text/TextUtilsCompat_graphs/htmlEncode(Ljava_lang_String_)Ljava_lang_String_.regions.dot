digraph "CFG forandroid.support.v4.text.TextUtilsCompat.htmlEncode(Ljava\/lang\/String;)Ljava\/lang\/String;" {
subgraph cluster_Region_252902470 {
label = "R(1:(2:(1:3)|(3:4|(3:7|(1:19)(1:(1:18)(1:(1:13)(1:17)))|20)|22)))";
node [shape=record,color=blue];
subgraph cluster_Region_841098476 {
label = "R(2:(1:3)|(3:4|(3:7|(1:19)(1:(1:18)(1:(1:13)(1:17)))|20)|22))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_425805455 {
label = "IF [B:1:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 17) goto L_0x0006\l}"];
subgraph cluster_Region_515424359 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return android.text.TextUtils.htmlEncode(r4)\l}"];
}
}
subgraph cluster_Region_904753461 {
label = "R(3:4|(3:7|(1:19)(1:(1:18)(1:(1:13)(1:17)))|20)|22)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|java.lang.StringBuilder java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_1462736835 {
label = "LOOP:0: (3:7|(1:19)(1:(1:18)(1:(1:13)(1:17)))|20)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|if (r1 \< r4.length()) goto L_0x0017\l}"];
subgraph cluster_Region_1536269562 {
label = "R(3:7|(1:19)(1:(1:18)(1:(1:13)(1:17)))|20)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0017|char char r2 = r4.charAt(r1)\l}"];
subgraph cluster_IfRegion_630480650 {
label = "IF [B:8:0x001d] THEN: R(1:19) ELSE: R(1:(1:18)(1:(1:13)(1:17)))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001d|if (r2 == '\"') goto L_0x0046\l}"];
subgraph cluster_Region_509015693 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0046|r0.append(\"&quot;\")\l}"];
}
subgraph cluster_Region_114356026 {
label = "R(1:(1:18)(1:(1:13)(1:17))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1792230594 {
label = "IF [B:10:0x0021] THEN: R(1:18) ELSE: R(1:(1:13)(1:17)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0021|if (r2 == '\<') goto L_0x0040\l}"];
subgraph cluster_Region_26434475 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0040|r0.append(\"&lt;\")\l}"];
}
subgraph cluster_Region_628534856 {
label = "R(1:(1:13)(1:17)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1105807316 {
label = "IF [B:12:0x0025] THEN: R(1:13) ELSE: R(1:17) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0025|if (r2 != '\>') goto L_0x0027\l}"];
subgraph cluster_Region_909168983 {
label = "R(1:13)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_373847391 {
label = "Switch: 2, default: R(2:14|1)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0027|switch(r2) \{\l    case 38: goto L_0x0034;\l    case 39: goto L_0x002e;\l    default: goto L_0x002a;\l\}\l}"];
subgraph cluster_Region_1020752265 {
label = "R(2:16|1)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0034|r0.append(\"&amp;\")\l}"];
Node_InsnContainer_1859355662 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1659755519 {
label = "R(2:15|1)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002e|r0.append(\"&#39;\")\l}"];
Node_InsnContainer_1878724561 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1260829617 {
label = "R(2:14|1)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002a|r0.append(r2)\l}"];
Node_InsnContainer_2146429064 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_1349775229 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x003a|r0.append(\"&gt;\")\l}"];
}
}
}
}
}
}
Node_20 [shape=record,label="{20\:\ 0x004b|LOOP_END\lLOOP:0: B:5:0x0011\-\>B:20:0x004b\l|r1++\l}"];
}
}
Node_22 [shape=record,label="{22\:\ 0x0052|RETURN\l|return r0.toString()\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0011|LOOP_START\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v3 int) binds: [B:4:0x000b, B:20:0x004b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0011\-\>B:20:0x004b\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001f}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0023}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x004e}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x004e|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x004b|SYNTHETIC\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x004b|SYNTHETIC\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x004b|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x004b|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x004b|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x004b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static java.lang.String android.support.v4.text.TextUtilsCompat.htmlEncode((r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_23[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_19;
Node_19 -> Node_24;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_18;
Node_18 -> Node_29;
Node_12 -> Node_13;
Node_12 -> Node_17[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_13 -> Node_16;
Node_16 -> Node_27;
Node_15 -> Node_26;
Node_14 -> Node_25;
Node_17 -> Node_28;
Node_20 -> Node_5;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_21 -> Node_22;
Node_23 -> Node_21;
Node_24 -> Node_20;
Node_25 -> Node_20;
Node_26 -> Node_20;
Node_27 -> Node_20;
Node_28 -> Node_20;
Node_29 -> Node_20;
}

