digraph "CFG forandroid.support.v4.text.util.LinkifyCompat.addLinks(Landroid\/text\/Spannable;Ljava\/util\/regex\/Pattern;Ljava\/lang\/String;[Ljava\/lang\/String;Landroid\/text\/util\/Linkify$MatchFilter;Landroid\/text\/util\/Linkify$TransformFilter;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) =  android.support.v4.text.util.LinkifyCompat.shouldAddLinksFallbackToFramework():boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r5 I:boolean) = \l  (r5 I:android.text.Spannable)\l  (r6 I:java.util.regex.Pattern)\l  (r7 I:java.lang.String)\l  (r8 I:java.lang.String[])\l  (r9 I:android.text.util.Linkify$MatchFilter)\l  (r10 I:android.text.util.Linkify$TransformFilter)\l android.text.util.Linkify.addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter):boolean type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN  (r5 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: CONST_STR  (r7 I:java.lang.String) =  \"\" \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0015 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: ARRAY_LENGTH  (r1 I:int) = (r8 I:?[]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:11:0x0017 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|0x0015: SGET  (r8 I:java.lang.String[]) =  android.support.v4.text.util.LinkifyCompat.EMPTY_STRING java.lang.String[] \l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|0x0017: ARRAY_LENGTH  (r1 I:int) = (r8 I:?[]) \l0x0018: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x0019: NEW_ARRAY  (r1 I:java.lang.String[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x001b: SGET  (r2 I:java.util.Locale) =  java.util.Locale.ROOT java.util.Locale \l0x001d: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.String), (r2 I:java.util.Locale) java.lang.String.toLowerCase(java.util.Locale):java.lang.String type: VIRTUAL \l0x0021: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0022: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r7 I:?[OBJECT, ARRAY])\l \l0x0024: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|0x0025: ARRAY_LENGTH  (r3 I:int) = (r8 I:?[]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|0x0026: IF  (r7 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:19:0x003a \l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|0x0028: AGET  (r3 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY][]), (r7 I:?[int, short, byte, char]) \l0x002a: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|0x002c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0031 \l}"];
Node_16 [shape=record,label="{16\:\ 0x002e|0x002e: CONST_STR  (r3 I:java.lang.String) =  \"\" \l}"];
Node_17 [shape=record,label="{17\:\ 0x0031|0x0031: SGET  (r4 I:java.util.Locale) =  java.util.Locale.ROOT java.util.Locale \l0x0033: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String), (r4 I:java.util.Locale) java.lang.String.toLowerCase(java.util.Locale):java.lang.String type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|0x0037: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x003a|0x003a: INVOKE  (r6 I:java.util.regex.Matcher) = \l  (r6 I:java.util.regex.Pattern)\l  (r5 I:java.lang.CharSequence)\l java.util.regex.Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher type: VIRTUAL \l0x003e: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x003f|0x003f: INVOKE  (r8 I:boolean) = (r6 I:java.util.regex.Matcher) java.util.regex.Matcher.find():boolean type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0043|0x0043: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0064 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0045|0x0045: INVOKE  (r8 I:int) = (r6 I:java.util.regex.Matcher) java.util.regex.Matcher.start():int type: VIRTUAL \l0x0049: INVOKE  (r3 I:int) = (r6 I:java.util.regex.Matcher) java.util.regex.Matcher.end():int type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x004d|0x004d: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0054 \l}"];
Node_24 [shape=record,label="{24\:\ 0x004f|0x004f: INVOKE  (r4 I:boolean) = \l  (r9 I:android.text.util.Linkify$MatchFilter)\l  (r5 I:java.lang.CharSequence)\l  (r8 I:int)\l  (r3 I:int)\l android.text.util.Linkify.MatchFilter.acceptMatch(java.lang.CharSequence, int, int):boolean type: INTERFACE \l}"];
Node_25 [shape=record,label="{25\:\ 0x0054|0x0054: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0055|0x0055: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x003f \l}"];
Node_27 [shape=record,label="{27\:\ 0x0057|0x0057: INVOKE  (r7 I:java.lang.String) = (r6 I:java.util.regex.Matcher), (r2 I:int) java.util.regex.Matcher.group(int):java.lang.String type: VIRTUAL \l0x005b: INVOKE  (r7 I:java.lang.String) = \l  (r7 I:java.lang.String)\l  (r1 I:java.lang.String[])\l  (r6 I:java.util.regex.Matcher)\l  (r10 I:android.text.util.Linkify$TransformFilter)\l android.support.v4.text.util.LinkifyCompat.makeUrl(java.lang.String, java.lang.String[], java.util.regex.Matcher, android.text.util.Linkify$TransformFilter):java.lang.String type: STATIC \l0x005f: INVOKE  \l  (r7 I:java.lang.String)\l  (r8 I:int)\l  (r3 I:int)\l  (r5 I:android.text.Spannable)\l android.support.v4.text.util.LinkifyCompat.applyLink(java.lang.String, int, int, android.text.Spannable):void type: STATIC \l0x0062: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0064|0x0064: RETURN  (r7 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean android.support.v4.text.util.LinkifyCompat.addLinks((r5 I:android.text.Spannable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.regex.Pattern A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.text.util.Linkify$MatchFilter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.text.util.Linkify$TransformFilter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[BUILD, android.annotation.SuppressLint, \{value=[NewApi]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_28;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_20;
Node_26 -> Node_27[style=dashed];
Node_27 -> Node_20;
}

