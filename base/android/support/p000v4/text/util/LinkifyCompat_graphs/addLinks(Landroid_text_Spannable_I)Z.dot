digraph "CFG forandroid.support.v4.text.util.LinkifyCompat.addLinks(Landroid\/text\/Spannable;I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (shouldAddLinksFallbackToFramework() == false) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return android.text.util.Linkify.addLinks(r10, r11)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b}"];
Node_5 [shape=record,label="{5\:\ 0x000c|if (r11 != 0) goto L_0x000f\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|RETURN\l|return false\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|android.text.style.URLSpan[] r1 = (android.text.style.URLSpan[]) r10.getSpans(0, r10.length(), android.text.style.URLSpan.class)\lint r2 = r1.length \- 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|LOOP_START\lPHI: r2 \l  PHI: (r2v3 int) = (r2v2 int), (r2v9 int) binds: [B:7:0x000f, B:9:0x0020] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x001e\-\>B:9:0x0020\l|if (r2 \< 0) goto L_0x0028\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|LOOP_END\lLOOP:0: B:8:0x001e\-\>B:9:0x0020\l|r10.removeSpan(r1[r2])\lint r2 = r2 + \-1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028}"];
Node_11 [shape=record,label="{11\:\ 0x002a|if ((r11 & 4) == 0) goto L_0x0030\l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|android.text.util.Linkify.addLinks(r10, 4)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|java.util.ArrayList r1 = new java.util.ArrayList()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|if ((r11 & 1) == 0) goto L_0x004d\l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|r4 = r1\lr5 = r10\lgatherLinks(r4, r5, android.support.p000v4.util.PatternsCompat.AUTOLINK_WEB_URL, new java.lang.String[]\{\"http:\/\/\", \"https:\/\/\", \"rtsp:\/\/\"\}, android.text.util.Linkify.sUrlMatchFilter, (android.text.util.Linkify.TransformFilter) null)\l}"];
Node_16 [shape=record,label="{16\:\ 0x004d}"];
Node_17 [shape=record,label="{17\:\ 0x004f|if ((r11 & 2) == 0) goto L_0x0060\l}"];
Node_18 [shape=record,label="{18\:\ 0x0051|r4 = r1\lr5 = r10\lgatherLinks(r4, r5, android.support.p000v4.util.PatternsCompat.AUTOLINK_EMAIL_ADDRESS, new java.lang.String[]\{\"mailto:\"\}, (android.text.util.Linkify.MatchFilter) null, (android.text.util.Linkify.TransformFilter) null)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0060}"];
Node_20 [shape=record,label="{20\:\ 0x0062|if ((r11 & 8) == 0) goto L_0x0067\l}"];
Node_21 [shape=record,label="{21\:\ 0x0064|gatherMapLinks(r1, r10)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0067|pruneOverlaps(r1, r10)\l}"];
Node_23 [shape=record,label="{23\:\ 0x006e|if (r1.size() != 0) goto L_0x0071\l}"];
Node_24 [shape=record,label="{24\:\ 0x0070|RETURN\l|return false\l}"];
Node_25 [shape=record,label="{25\:\ 0x0071|java.util.Iterator r11 = r1.iterator()\l}"];
Node_26 [shape=record,label="{26\:\ 0x0075|LOOP_START\lLOOP:1: B:26:0x0075\-\>B:33:0x0075\l}"];
Node_27 [shape=record,label="{27\:\ 0x0079|if (r11.hasNext() == false) goto L_0x008f\l}"];
Node_28 [shape=record,label="{28\:\ 0x007b|android.support.v4.text.util.LinkifyCompat$LinkSpec r0 = (android.support.p000v4.text.util.LinkifyCompat.LinkSpec) r11.next()\l}"];
Node_29 [shape=record,label="{29\:\ 0x0083|if (r0.frameworkAddedSpan != null) goto L_0x0075\l}"];
Node_30 [shape=record,label="{30\:\ 0x0085|applyLink(r0.url, r0.start, r0.end, r10)\l}"];
Node_31 [shape=record,label="{31\:\ 0x008f|RETURN\l|return true\l}"];
Node_32 [shape=record,label="{32\:\ 0x0028|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0075|LOOP_END\lSYNTHETIC\lLOOP:1: B:26:0x0075\-\>B:33:0x0075\l}"];
Node_34 [shape=record,label="{34\:\ 0x008f|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0075|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0075|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static boolean android.support.v4.text.util.LinkifyCompat.addLinks((r10v0 android.text.Spannable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_32;
Node_9 -> Node_8;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_34;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_35;
Node_30 -> Node_36;
Node_32 -> Node_10;
Node_33 -> Node_26;
Node_34 -> Node_31;
Node_35 -> Node_33;
Node_36 -> Node_33;
}

