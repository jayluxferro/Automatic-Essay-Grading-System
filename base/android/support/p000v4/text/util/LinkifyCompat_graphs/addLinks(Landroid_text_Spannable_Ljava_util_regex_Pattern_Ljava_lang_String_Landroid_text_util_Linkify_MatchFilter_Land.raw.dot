digraph "CFG forandroid.support.v4.text.util.LinkifyCompat.addLinks(Landroid\/text\/Spannable;Ljava\/util\/regex\/Pattern;Ljava\/lang\/String;Landroid\/text\/util\/Linkify$MatchFilter;Landroid\/text\/util\/Linkify$TransformFilter;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) =  android.support.v4.text.util.LinkifyCompat.shouldAddLinksFallbackToFramework():boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r6 I:boolean) = \l  (r6 I:android.text.Spannable)\l  (r7 I:java.util.regex.Pattern)\l  (r8 I:java.lang.String)\l  (r9 I:android.text.util.Linkify$MatchFilter)\l  (r10 I:android.text.util.Linkify$TransformFilter)\l android.text.util.Linkify.addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String, android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter):boolean type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN  (r6 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x000d: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x000e: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x000f: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0010: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0011: INVOKE  (r6 I:boolean) = \l  (r0 I:android.text.Spannable)\l  (r1 I:java.util.regex.Pattern)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String[])\l  (r4 I:android.text.util.Linkify$MatchFilter)\l  (r5 I:android.text.util.Linkify$TransformFilter)\l android.support.v4.text.util.LinkifyCompat.addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter):boolean type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: RETURN  (r6 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean android.support.v4.text.util.LinkifyCompat.addLinks((r6 I:android.text.Spannable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.regex.Pattern A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.text.util.Linkify$MatchFilter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.text.util.Linkify$TransformFilter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

