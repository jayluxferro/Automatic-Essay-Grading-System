digraph "CFG forandroid.support.v4.text.util.LinkifyCompat.makeUrl(Ljava\/lang\/String;[Ljava\/lang\/String;Ljava\/util\/regex\/Matcher;Landroid\/text\/util\/Linkify$TransformFilter;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0006 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r7 I:java.lang.String) = \l  (r10 I:android.text.util.Linkify$TransformFilter)\l  (r9 I:java.util.regex.Matcher)\l  (r7 I:java.lang.String)\l android.text.util.Linkify.TransformFilter.transformUrl(java.util.regex.Matcher, java.lang.String):java.lang.String type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: ARRAY_LENGTH  (r0 I:int) = (r8 I:?[]) \l0x0009: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r10 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:11:0x004f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r8 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char])\l \l0x0010: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0011: AGET  (r0 I:?[OBJECT, ARRAY]) = \l  (r8 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char])\l \l0x0013: INVOKE  (r5 I:int) = (r0 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0017: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0018: INVOKE  (r0 I:boolean) = \l  (r0 I:java.lang.String)\l  (r1 I:boolean)\l  (r2 I:int)\l  (r3 I:java.lang.String)\l  (r4 I:int)\l  (r5 I:int)\l java.lang.String.regionMatches(boolean, int, java.lang.String, int, int):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x004c \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0020: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r8 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char])\l \l0x0022: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: AGET  (r0 I:?[OBJECT, ARRAY]) = \l  (r8 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char])\l \l0x0025: INVOKE  (r5 I:int) = (r0 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0029: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x002a: INVOKE  (r0 I:boolean) = \l  (r0 I:java.lang.String)\l  (r1 I:boolean)\l  (r2 I:int)\l  (r3 I:java.lang.String)\l  (r4 I:int)\l  (r5 I:int)\l java.lang.String.regionMatches(boolean, int, java.lang.String, int, int):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0050 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0032: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0035: AGET  (r1 I:?[OBJECT, ARRAY]) = \l  (r8 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char])\l \l0x0037: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003a: AGET  (r10 I:?[OBJECT, ARRAY]) = \l  (r8 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char])\l \l0x003c: INVOKE  (r10 I:int) = (r10 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0040: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.String), (r10 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL \l0x0044: INVOKE  (r0 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0047: INVOKE  (r7 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x004c|0x004c: ARITH  (r10 I:int) = (r10 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x004f|0x004f: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0050|0x0050: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0066 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0052|0x0052: ARRAY_LENGTH  (r10 I:int) = (r8 I:?[]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0053|0x0053: IF  (r10 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:16:0x0066 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0055|0x0055: NEW_INSTANCE  (r10 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0057: INVOKE  (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x005a: AGET  (r8 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY][]), (r9 I:?[int, short, byte, char]) \l0x005c: INVOKE  (r10 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005f: INVOKE  (r10 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0062: INVOKE  (r7 I:java.lang.String) = (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0066|0x0066: RETURN  (r7 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{private static java.lang.String android.support.v4.text.util.LinkifyCompat.makeUrl((r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.util.regex.Matcher A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.text.util.Linkify$TransformFilter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], , Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_12;
Node_10 -> Node_3;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
}

