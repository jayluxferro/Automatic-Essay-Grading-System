digraph "CFG forandroid.support.v4.text.util.LinkifyCompat.addLinks(Landroid\/widget\/TextView;I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (shouldAddLinksFallbackToFramework() == false) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return android.text.util.Linkify.addLinks(r4, r5)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b}"];
Node_5 [shape=record,label="{5\:\ 0x000c|if (r5 != 0) goto L_0x000f\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|RETURN\l|return false\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|java.lang.CharSequence r1 = r4.getText()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|if ((r1 instanceof android.text.Spannable) == false) goto L_0x0025\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018}"];
Node_10 [shape=record,label="{10\:\ 0x001e|if (addLinks((android.text.Spannable) r1, r5) == false) goto L_0x0024\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|addLinkMovementMethod(r4)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|RETURN\l|return true\l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|RETURN\l|return false\l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|android.text.SpannableString r1 = android.text.SpannableString.valueOf(r1)\l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|if (addLinks((android.text.Spannable) r1, r5) == false) goto L_0x0036\l}"];
Node_16 [shape=record,label="{16\:\ 0x002f|addLinkMovementMethod(r4)\lr4.setText(r1)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0035|RETURN\l|return true\l}"];
Node_18 [shape=record,label="{18\:\ 0x0036|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static boolean android.support.v4.text.util.LinkifyCompat.addLinks((r4v0 android.widget.TextView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
}

