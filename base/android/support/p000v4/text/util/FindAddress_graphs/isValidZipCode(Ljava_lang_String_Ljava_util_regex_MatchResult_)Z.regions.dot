digraph "CFG forandroid.support.v4.text.util.FindAddress.isValidZipCode(Ljava\/lang\/String;Ljava\/util\/regex\/MatchResult;)Z" {
subgraph cluster_Region_1842355741 {
label = "R(1:(2:(1:2)|(3:3|(1:(2:(1:15)|(2:5|(2:(2:7|1)|(1:8)))))|(2:(1:17)|(1:13)))))";
node [shape=record,color=blue];
subgraph cluster_Region_102295602 {
label = "R(2:(1:2)|(3:3|(1:(2:(1:15)|(2:5|(2:(2:7|1)|(1:8)))))|(2:(1:17)|(1:13))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_908051211 {
label = "IF [B:1:0x0001] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r4 == null) goto L_0x0003\l}"];
subgraph cluster_Region_459956453 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1314991540 {
label = "R(3:3|(1:(2:(1:15)|(2:5|(2:(2:7|1)|(1:8)))))|(2:(1:17)|(1:13)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0004|int int r1 = r4.groupCount()\l}"];
subgraph cluster_LoopRegion_1982313827 {
label = "LOOP:0: (1:(2:(1:15)|(2:5|(2:(2:7|1)|(1:8)))))";
node [shape=record,color=blue];
subgraph cluster_Region_926915309 {
label = "R(1:(2:(1:15)|(2:5|(2:(2:7|1)|(1:8)))))";
node [shape=record,color=blue];
subgraph cluster_Region_2138046618 {
label = "R(2:(1:15)|(2:5|(2:(2:7|1)|(1:8))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1389950715 {
label = "IF [B:4:0x0008] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0008|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v5 int) binds: [B:3:0x0004, B:8:0x0014] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0008\-\>B:8:0x0014\l|if (r1 \<= 0) goto L_0x0016\l}"];
subgraph cluster_Region_928328409 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0016|SYNTHETIC\lEDGE_INSN: B:15:0x0016\-\>B:9:0x0016 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_353594777 {
label = "R(2:5|(2:(2:7|1)|(1:8)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000a|int int r2 = r1 \- 1\l}"];
subgraph cluster_Region_2089946621 {
label = "R(2:(2:7|1)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_181637182 {
label = "IF [B:6:0x0010] THEN: R(2:7|1) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0010|if (r4.group(r1) != null) goto L_0x0012\l}"];
subgraph cluster_Region_1260030117 {
label = "R(2:7|1)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0012|EDGE_INSN: B:7:0x0012\-\>B:9:0x0016 ?: BREAK  \l|r1 = r2\l}"];
Node_InsnContainer_934353008 [shape=record,label="{|break\l}"];
}
}
subgraph cluster_Region_1998281581 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0014|LOOP_END\lLOOP:0: B:4:0x0008\-\>B:8:0x0014\l|r1 = r2\l}"];
}
}
}
}
}
}
subgraph cluster_Region_1211804364 {
label = "R(2:(1:17)|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_658403898 {
label = "IF [B:10:0x0020, B:12:0x002a] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0020|if (sZipCodeRe.matcher(r3).matches() == false) goto L_?\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|ADDED_TO_REGION\l|if (sStateZipCodeRanges[r1].matches(r3) == false) goto L_?\l}"];
subgraph cluster_Region_1453802224 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_985022524 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x002c|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0016|EDGE_INSN: B:7:0x0012\-\>B:9:0x0016 ?: BREAK  \lEDGE_INSN: B:15:0x0016\-\>B:9:0x0016 ?: BREAK  \lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v4 int) binds: [B:15:0x0016, B:7:0x0012] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0022}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0012|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{private static boolean android.support.v4.text.util.FindAddress.isValidZipCode((r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.util.regex.MatchResult A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_15;
Node_15 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_8[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_9;
Node_8 -> Node_4;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_0 -> Node_1;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_14 -> Node_7;
}

