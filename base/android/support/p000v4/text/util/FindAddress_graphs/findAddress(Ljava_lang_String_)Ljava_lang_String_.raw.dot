digraph "CFG forandroid.support.v4.text.util.FindAddress.findAddress(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:java.util.regex.Pattern) =  android.support.v4.text.util.FindAddress.sHouseNumberRe java.util.regex.Pattern \l0x0002: INVOKE  (r0 I:java.util.regex.Matcher) = \l  (r0 I:java.util.regex.Pattern)\l  (r4 I:java.lang.CharSequence)\l java.util.regex.Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher type: VIRTUAL \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: INVOKE  (r2 I:boolean) = (r0 I:java.util.regex.Matcher), (r2 I:int) java.util.regex.Matcher.find(int):boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002e \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: INVOKE  (r2 I:java.lang.String) = (r0 I:java.util.regex.Matcher), (r1 I:int) java.util.regex.Matcher.group(int):java.lang.String type: VIRTUAL \l0x0012: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String) android.support.v4.text.util.FindAddress.checkHouseNumber(java.lang.String):boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0029 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: INVOKE  (r2 I:int) = (r0 I:java.util.regex.Matcher) java.util.regex.Matcher.start():int type: VIRTUAL \l0x001c: INVOKE  (r3 I:int) = (r4 I:java.lang.String), (r0 I:java.util.regex.MatchResult) android.support.v4.text.util.FindAddress.attemptMatch(java.lang.String, java.util.regex.MatchResult):int type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:9:0x0027 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String), (r2 I:int), (r3 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: RETURN  (r4 I:java.lang.String) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: NEG  (r2 I:int) = (r3 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: INVOKE  (r2 I:int) = (r0 I:java.util.regex.Matcher) java.util.regex.Matcher.end():int type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: RETURN  (r4 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{static java.lang.String android.support.v4.text.util.FindAddress.findAddress((r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_1;
Node_10 -> Node_1;
Node_11 -> Node_12;
}

