digraph "CFG forandroid.support.v4.text.PrecomputedTextCompat.Params.Builder.\<init\>(Landroid\/text\/TextPaint;)V" {
subgraph cluster_Region_2119420622 {
label = "R(3:0|(1:2)(1:3)|(1:6)(1:7))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.mPaint = r2\l}"];
subgraph cluster_IfRegion_1159289723 {
label = "IF [B:1:0x0009] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0009|if (android.os.Build.VERSION.SDK_INT \>= 23) goto L_0x000b\l}"];
subgraph cluster_Region_1229492039 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000b|r1.mBreakStrategy = 1\lr1.mHyphenationFrequency = 1\l}"];
}
subgraph cluster_Region_1164954805 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0011|r1.mHyphenationFrequency = 0\lr1.mBreakStrategy = 0\l}"];
}
}
subgraph cluster_IfRegion_621439852 {
label = "IF [B:5:0x001a] THEN: R(1:6) ELSE: R(1:7)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001a|if (android.os.Build.VERSION.SDK_INT \>= 18) goto L_0x001c\l}"];
subgraph cluster_Region_709312053 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001c|r1.mTextDir = android.text.TextDirectionHeuristics.FIRSTSTRONG_LTR\l}"];
}
subgraph cluster_Region_662224525 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0021|r1.mTextDir = null\l}"];
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0016}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v4.text.PrecomputedTextCompat.Params.Builder.\<init\>((r1v0 'this' android.support.v4.text.PrecomputedTextCompat$Params$Builder A[IMMUTABLE_TYPE, THIS]), (r2v0 android.text.TextPaint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_4 -> Node_5;
}

