digraph "CFG forandroid.support.v4.text.PrecomputedTextCompat.create(Ljava\/lang\/CharSequence;Landroid\/support\/v4\/text\/PrecomputedTextCompat$Params;)Landroid\/support\/v4\/text\/PrecomputedTextCompat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r11 I:java.lang.Object) android.support.v4.util.Preconditions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l0x0003: INVOKE  (r12 I:java.lang.Object) android.support.v4.util.Preconditions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l0x0006: CONST_STR  (r0 I:java.lang.String) =  \"PrecomputedText\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|SYNTHETIC\lSplitter:B:1:0x0008\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0008\l|0x0008: INVOKE  (r0 I:java.lang.String) android.support.v4.os.TraceCompat.beginSection(java.lang.String):void type: STATIC A[Catch:\{ all \-\> 0x00b4 \}, TRY_ENTER]\l0x000b: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int A[Catch:\{ all \-\> 0x00b4 \}]\l0x000d: CONST  (r1 I:?[int, float, short, byte, char]) = (28 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:9:0x0024 A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IGET  (r0 I:android.text.PrecomputedText$Params) = \l  (r12 I:android.support.v4.text.PrecomputedTextCompat$Params)\l android.support.v4.text.PrecomputedTextCompat.Params.mWrapped android.text.PrecomputedText$Params A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0024 A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: NEW_INSTANCE  (r0 I:android.support.v4.text.PrecomputedTextCompat) =  android.support.v4.text.PrecomputedTextCompat A[Catch:\{ all \-\> 0x00b4 \}]\l0x0017: IGET  (r1 I:android.text.PrecomputedText$Params) = \l  (r12 I:android.support.v4.text.PrecomputedTextCompat$Params)\l android.support.v4.text.PrecomputedTextCompat.Params.mWrapped android.text.PrecomputedText$Params A[Catch:\{ all \-\> 0x00b4 \}]\l0x0019: INVOKE  (r11 I:android.text.PrecomputedText) = \l  (r11 I:java.lang.CharSequence)\l  (r1 I:android.text.PrecomputedText$Params)\l android.text.PrecomputedText.create(java.lang.CharSequence, android.text.PrecomputedText$Params):android.text.PrecomputedText type: STATIC A[Catch:\{ all \-\> 0x00b4 \}]\l0x001d: INVOKE  \l  (r0 I:android.support.v4.text.PrecomputedTextCompat)\l  (r11 I:android.text.PrecomputedText)\l  (r12 I:android.support.v4.text.PrecomputedTextCompat$Params)\l android.support.v4.text.PrecomputedTextCompat.\<init\>(android.text.PrecomputedText, android.support.v4.text.PrecomputedTextCompat$Params):void type: DIRECT A[Catch:\{ all \-\> 0x00b4 \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: INVOKE   android.support.v4.os.TraceCompat.endSection():void type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: RETURN  (r0 I:android.support.v4.text.PrecomputedTextCompat) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|SYNTHETIC\lSplitter:B:9:0x0024\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x0024\l|0x0024: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList A[Catch:\{ all \-\> 0x00b4 \}, TRY_ENTER]\l0x0026: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x00b4 \}]\l0x0029: INVOKE  (r1 I:int) = (r11 I:java.lang.CharSequence) java.lang.CharSequence.length():int type: INTERFACE A[Catch:\{ all \-\> 0x00b4 \}]\l0x002d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x00b4 \}]\l0x002e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|0x002f: IF  (r3 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:17:0x0045 A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: CONST  (r4 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x00b4 \}]\l0x0033: INVOKE  (r3 I:int) = \l  (r11 I:java.lang.CharSequence)\l  (r4 I:char)\l  (r3 I:int)\l  (r1 I:int)\l android.text.TextUtils.indexOf(java.lang.CharSequence, char, int, int):int type: STATIC A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|0x0037: IF  (r3 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:15:0x003b A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|0x0039: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x00b4 \}]\l0x003a: GOTO  \-\> 0x003d A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x003b|0x003b: ARITH  (r3 I:int) = (r3 I:int) + (1 int) A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|0x003d: INVOKE  (r4 I:java.lang.Integer) = (r3 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ all \-\> 0x00b4 \}]\l0x0041: INVOKE  (r0 I:java.util.ArrayList), (r4 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x00b4 \}]\l0x0044: GOTO  \-\> 0x002f A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0045|0x0045: INVOKE  (r1 I:int) = (r0 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL A[Catch:\{ all \-\> 0x00b4 \}]\l0x0049: NEW_ARRAY  (r1 I:int[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: int[] A[Catch:\{ all \-\> 0x00b4 \}]\l0x004b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x004c|0x004c: INVOKE  (r4 I:int) = (r0 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0050|0x0050: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:21:0x0061 A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0052|0x0052: INVOKE  (r4 I:java.lang.Object) = (r0 I:java.util.ArrayList), (r3 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x00b4 \}]\l0x0056: CHECK_CAST  (r4 I:java.lang.Integer) = (java.lang.Integer) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x00b4 \}]\l0x0058: INVOKE  (r4 I:int) = (r4 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL A[Catch:\{ all \-\> 0x00b4 \}]\l0x005c: APUT  \l  (r1 I:?[int, float][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l A[Catch:\{ all \-\> 0x00b4 \}]\l0x005e: ARITH  (r3 I:int) = (r3 I:int) + (1 int) A[Catch:\{ all \-\> 0x00b4 \}]\l0x0060: GOTO  \-\> 0x004c A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0061|0x0061: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int A[Catch:\{ all \-\> 0x00b4 \}]\l0x0063: CONST  (r3 I:?[int, float, short, byte, char]) = (23 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0065|0x0065: IF  (r0 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:24:0x0092 A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0067|0x0067: INVOKE  (r0 I:int) = (r11 I:java.lang.CharSequence) java.lang.CharSequence.length():int type: INTERFACE A[Catch:\{ all \-\> 0x00b4 \}]\l0x006b: INVOKE  (r3 I:android.text.TextPaint) = \l  (r12 I:android.support.v4.text.PrecomputedTextCompat$Params)\l android.support.v4.text.PrecomputedTextCompat.Params.getTextPaint():android.text.TextPaint type: VIRTUAL A[Catch:\{ all \-\> 0x00b4 \}]\l0x006f: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l A[Catch:\{ all \-\> 0x00b4 \}]\l0x0072: INVOKE  (r0 I:android.text.StaticLayout$Builder) = \l  (r11 I:java.lang.CharSequence)\l  (r2 I:int)\l  (r0 I:int)\l  (r3 I:android.text.TextPaint)\l  (r4 I:int)\l android.text.StaticLayout.Builder.obtain(java.lang.CharSequence, int, int, android.text.TextPaint, int):android.text.StaticLayout$Builder type: STATIC A[Catch:\{ all \-\> 0x00b4 \}]\l0x0076: INVOKE  (r2 I:int) = \l  (r12 I:android.support.v4.text.PrecomputedTextCompat$Params)\l android.support.v4.text.PrecomputedTextCompat.Params.getBreakStrategy():int type: VIRTUAL A[Catch:\{ all \-\> 0x00b4 \}]\l0x007a: INVOKE  (r0 I:android.text.StaticLayout$Builder) = (r0 I:android.text.StaticLayout$Builder), (r2 I:int) android.text.StaticLayout.Builder.setBreakStrategy(int):android.text.StaticLayout$Builder type: VIRTUAL A[Catch:\{ all \-\> 0x00b4 \}]\l0x007e: INVOKE  (r2 I:int) = \l  (r12 I:android.support.v4.text.PrecomputedTextCompat$Params)\l android.support.v4.text.PrecomputedTextCompat.Params.getHyphenationFrequency():int type: VIRTUAL A[Catch:\{ all \-\> 0x00b4 \}]\l0x0082: INVOKE  (r0 I:android.text.StaticLayout$Builder) = (r0 I:android.text.StaticLayout$Builder), (r2 I:int) android.text.StaticLayout.Builder.setHyphenationFrequency(int):android.text.StaticLayout$Builder type: VIRTUAL A[Catch:\{ all \-\> 0x00b4 \}]\l0x0086: INVOKE  (r2 I:android.text.TextDirectionHeuristic) = \l  (r12 I:android.support.v4.text.PrecomputedTextCompat$Params)\l android.support.v4.text.PrecomputedTextCompat.Params.getTextDirection():android.text.TextDirectionHeuristic type: VIRTUAL A[Catch:\{ all \-\> 0x00b4 \}]\l0x008a: INVOKE  (r0 I:android.text.StaticLayout$Builder) = \l  (r0 I:android.text.StaticLayout$Builder)\l  (r2 I:android.text.TextDirectionHeuristic)\l android.text.StaticLayout.Builder.setTextDirection(android.text.TextDirectionHeuristic):android.text.StaticLayout$Builder type: VIRTUAL A[Catch:\{ all \-\> 0x00b4 \}]\l0x008e: INVOKE  (r0 I:android.text.StaticLayout$Builder) android.text.StaticLayout.Builder.build():android.text.StaticLayout type: VIRTUAL A[Catch:\{ all \-\> 0x00b4 \}]\l0x0091: GOTO  \-\> 0x00ab A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0092|0x0092: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int A[Catch:\{ all \-\> 0x00b4 \}]\l0x0094: CONST  (r2 I:?[int, float, short, byte, char]) = (21 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0096|0x0096: IF  (r0 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:27:0x00ab A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0098|0x0098: NEW_INSTANCE  (r3 I:android.text.StaticLayout) =  android.text.StaticLayout A[Catch:\{ all \-\> 0x00b4 \}]\l0x009a: INVOKE  (r5 I:android.text.TextPaint) = \l  (r12 I:android.support.v4.text.PrecomputedTextCompat$Params)\l android.support.v4.text.PrecomputedTextCompat.Params.getTextPaint():android.text.TextPaint type: VIRTUAL A[Catch:\{ all \-\> 0x00b4 \}]\l0x009e: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l A[Catch:\{ all \-\> 0x00b4 \}]\l0x00a1: SGET  (r7 I:android.text.Layout$Alignment) =  android.text.Layout.Alignment.ALIGN_NORMAL android.text.Layout$Alignment A[Catch:\{ all \-\> 0x00b4 \}]\l0x00a3: CONST  (r8 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l A[Catch:\{ all \-\> 0x00b4 \}]\l0x00a5: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x00b4 \}]\l0x00a6: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x00b4 \}]\l0x00a7: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x00b4 \}]\l0x00a8: INVOKE  \l  (r3 I:android.text.StaticLayout)\l  (r4 I:java.lang.CharSequence)\l  (r5 I:android.text.TextPaint)\l  (r6 I:int)\l  (r7 I:android.text.Layout$Alignment)\l  (r8 I:float)\l  (r9 I:float)\l  (r10 I:boolean)\l android.text.StaticLayout.\<init\>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean):void type: DIRECT A[Catch:\{ all \-\> 0x00b4 \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x00ab|0x00ab: NEW_INSTANCE  (r0 I:android.support.v4.text.PrecomputedTextCompat) =  android.support.v4.text.PrecomputedTextCompat A[Catch:\{ all \-\> 0x00b4 \}]\l0x00ad: INVOKE  \l  (r0 I:android.support.v4.text.PrecomputedTextCompat)\l  (r11 I:java.lang.CharSequence)\l  (r12 I:android.support.v4.text.PrecomputedTextCompat$Params)\l  (r1 I:int[])\l android.support.v4.text.PrecomputedTextCompat.\<init\>(java.lang.CharSequence, android.support.v4.text.PrecomputedTextCompat$Params, int[]):void type: DIRECT A[Catch:\{ all \-\> 0x00b4 \}, TRY_LEAVE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x00b0|0x00b0: INVOKE   android.support.v4.os.TraceCompat.endSection():void type: STATIC \l}"];
Node_29 [shape=record,label="{29\:\ 0x00b3|0x00b3: RETURN  (r0 I:android.support.v4.text.PrecomputedTextCompat) \l}"];
Node_30 [shape=record,label="{30\:\ 0x00b4|ExcHandler: all null\lSplitter:B:1:0x0008\l|0x00b4: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_31 [shape=record,label="{31\:\ 0x00b5|0x00b5: INVOKE   android.support.v4.os.TraceCompat.endSection():void type: STATIC \l}"];
Node_32 [shape=record,label="{32\:\ 0x00b8|0x00b8: THROW  (r11 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static android.support.v4.text.PrecomputedTextCompat android.support.v4.text.PrecomputedTextCompat.create((r11 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.support.v4.text.PrecomputedTextCompat$Params A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_30;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_30;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_11;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_18;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_27;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_31 -> Node_32;
}

