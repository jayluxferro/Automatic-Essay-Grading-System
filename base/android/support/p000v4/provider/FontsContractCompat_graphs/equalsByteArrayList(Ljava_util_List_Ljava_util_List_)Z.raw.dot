digraph "CFG forandroid.support.v4.provider.FontsContractCompat.equalsByteArrayList(Ljava\/util\/List;Ljava\/util\/List;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r4 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0004: INVOKE  (r1 I:int) = (r5 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: RETURN  (r2 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r1 I:int) = (r4 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:10:0x0029 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: INVOKE  (r1 I:java.lang.Object) = (r4 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0017: CHECK_CAST  (r1 I:byte[]) = (byte[]) (r1 I:?[OBJECT, ARRAY]) \l0x0019: INVOKE  (r3 I:java.lang.Object) = (r5 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x001d: CHECK_CAST  (r3 I:byte[]) = (byte[]) (r3 I:?[OBJECT, ARRAY]) \l0x001f: INVOKE  (r1 I:boolean) = (r1 I:byte[]), (r3 I:byte[]) java.util.Arrays.equals(byte[], byte[]):boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0026 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: RETURN  (r2 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: RETURN  (r4 I:boolean) \l}"];
MethodNode[shape=record,label="{private static boolean android.support.v4.provider.FontsContractCompat.equalsByteArrayList((r4 I:java.util.List\<byte[]\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.util.List\<byte[]\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, [B\>;, Ljava\/util\/List\<, [B\>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_4;
Node_10 -> Node_11;
}

