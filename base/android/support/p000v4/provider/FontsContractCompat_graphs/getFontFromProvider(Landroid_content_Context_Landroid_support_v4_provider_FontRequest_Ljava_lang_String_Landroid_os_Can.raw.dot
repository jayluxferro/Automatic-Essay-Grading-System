digraph "CFG forandroid.support.v4.provider.FontsContractCompat.getFontFromProvider(Landroid\/content\/Context;Landroid\/support\/v4\/provider\/FontRequest;Ljava\/lang\/String;Landroid\/os\/CancellationSignal;)[Landroid\/support\/v4\/provider\/FontsContractCompat$FontInfo;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0002: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0004: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0007: NEW_INSTANCE  (r2 I:android.net.Uri$Builder) =  android.net.Uri$Builder \l0x0009: INVOKE  (r2 I:android.net.Uri$Builder) android.net.Uri.Builder.\<init\>():void type: DIRECT \l0x000c: CONST_STR  (r3 I:java.lang.String) =  \"content\" \l0x000e: INVOKE  (r2 I:android.net.Uri$Builder) = (r2 I:android.net.Uri$Builder), (r3 I:java.lang.String) android.net.Uri.Builder.scheme(java.lang.String):android.net.Uri$Builder type: VIRTUAL \l0x0012: INVOKE  (r2 I:android.net.Uri$Builder) = (r2 I:android.net.Uri$Builder), (r0 I:java.lang.String) android.net.Uri.Builder.authority(java.lang.String):android.net.Uri$Builder type: VIRTUAL \l0x0016: INVOKE  (r2 I:android.net.Uri) = (r2 I:android.net.Uri$Builder) android.net.Uri.Builder.build():android.net.Uri type: VIRTUAL \l0x001a: NEW_INSTANCE  (r3 I:android.net.Uri$Builder) =  android.net.Uri$Builder \l0x001c: INVOKE  (r3 I:android.net.Uri$Builder) android.net.Uri.Builder.\<init\>():void type: DIRECT \l0x001f: CONST_STR  (r4 I:java.lang.String) =  \"content\" \l0x0021: INVOKE  (r3 I:android.net.Uri$Builder) = (r3 I:android.net.Uri$Builder), (r4 I:java.lang.String) android.net.Uri.Builder.scheme(java.lang.String):android.net.Uri$Builder type: VIRTUAL \l0x0025: INVOKE  (r0 I:android.net.Uri$Builder) = (r3 I:android.net.Uri$Builder), (r0 I:java.lang.String) android.net.Uri.Builder.authority(java.lang.String):android.net.Uri$Builder type: VIRTUAL \l0x0029: CONST_STR  (r3 I:java.lang.String) =  \"file\" \l0x002b: INVOKE  (r0 I:android.net.Uri$Builder) = (r0 I:android.net.Uri$Builder), (r3 I:java.lang.String) android.net.Uri.Builder.appendPath(java.lang.String):android.net.Uri$Builder type: VIRTUAL \l0x002f: INVOKE  (r0 I:android.net.Uri) = (r0 I:android.net.Uri$Builder) android.net.Uri.Builder.build():android.net.Uri type: VIRTUAL \l0x0033: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0034|SYNTHETIC\lSplitter:B:1:0x0034\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0034\l|0x0034: SGET  (r3 I:int) =  android.os.Build.VERSION.SDK_INT int A[Catch:\{ all \-\> 0x0123 \}, TRY_ENTER]\l0x0036: CONST  (r4 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0123 \}]\l0x0038: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0123 \}]\l0x0039: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x003a|0x003a: IF  (r3 I:?[int, byte, short, char]) \<= (r4 I:?[int, byte, short, char])  \-\> B:6:0x0066 A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x003c|0x003c: INVOKE  (r3 I:android.content.ContentResolver) = (r20 I:android.content.Context) android.content.Context.getContentResolver():android.content.ContentResolver type: VIRTUAL A[Catch:\{ all \-\> 0x0123 \}]\l0x0040: CONST_STR  (r13 I:java.lang.String) =  \"_id\" A[Catch:\{ all \-\> 0x0123 \}]\l0x0042: CONST_STR  (r14 I:java.lang.String) =  \"file_id\" A[Catch:\{ all \-\> 0x0123 \}]\l0x0044: CONST_STR  (r15 I:java.lang.String) =  \"font_ttc_index\" A[Catch:\{ all \-\> 0x0123 \}]\l0x0046: CONST_STR  (r16 I:java.lang.String) =  \"font_variation_settings\" A[Catch:\{ all \-\> 0x0123 \}]\l0x0048: CONST_STR  (r17 I:java.lang.String) =  \"font_weight\" A[Catch:\{ all \-\> 0x0123 \}]\l0x004a: CONST_STR  (r18 I:java.lang.String) =  \"font_italic\" A[Catch:\{ all \-\> 0x0123 \}]\l0x004c: CONST_STR  (r19 I:java.lang.String) =  \"result_code\" A[Catch:\{ all \-\> 0x0123 \}]\l0x004e: FILLED_NEW_ARRAY  (r5 I:java.lang.String[]) = \l  (r13 I:java.lang.String)\l  (r14 I:java.lang.String)\l  (r15 I:java.lang.String)\l  (r16 I:java.lang.String)\l  (r17 I:java.lang.String)\l  (r18 I:java.lang.String)\l  (r19 I:java.lang.String)\l elemType: java.lang.String A[Catch:\{ all \-\> 0x0123 \}]\l0x0052: CONST_STR  (r6 I:java.lang.String) =  \"query = ?\" A[Catch:\{ all \-\> 0x0123 \}]\l0x0054: NEW_ARRAY  (r7 I:java.lang.String[]) = (r11 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] A[Catch:\{ all \-\> 0x0123 \}]\l0x0056: INVOKE  (r4 I:java.lang.String) = (r21 I:android.support.v4.provider.FontRequest) android.support.v4.provider.FontRequest.getQuery():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0123 \}]\l0x005a: APUT  \l  (r7 I:?[OBJECT, ARRAY][])\l  (r12 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0123 \}]\l0x005c: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0123 \}]\l0x005d: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0123 \}]\l0x005e: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0123 \}]\l0x0060: INVOKE  (r3 I:android.database.Cursor) = \l  (r3 I:android.content.ContentResolver)\l  (r4 I:android.net.Uri)\l  (r5 I:java.lang.String[])\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String[])\l  (r8 I:java.lang.String)\l  (r9 I:android.os.CancellationSignal)\l android.content.ContentResolver.query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.os.CancellationSignal):android.database.Cursor type: VIRTUAL A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0064|0x0064: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0123 \}]\l0x0065: GOTO  \-\> 0x008d A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0066|0x0066: INVOKE  (r3 I:android.content.ContentResolver) = (r20 I:android.content.Context) android.content.Context.getContentResolver():android.content.ContentResolver type: VIRTUAL A[Catch:\{ all \-\> 0x0123 \}]\l0x006a: CONST_STR  (r13 I:java.lang.String) =  \"_id\" A[Catch:\{ all \-\> 0x0123 \}]\l0x006c: CONST_STR  (r14 I:java.lang.String) =  \"file_id\" A[Catch:\{ all \-\> 0x0123 \}]\l0x006e: CONST_STR  (r15 I:java.lang.String) =  \"font_ttc_index\" A[Catch:\{ all \-\> 0x0123 \}]\l0x0070: CONST_STR  (r16 I:java.lang.String) =  \"font_variation_settings\" A[Catch:\{ all \-\> 0x0123 \}]\l0x0072: CONST_STR  (r17 I:java.lang.String) =  \"font_weight\" A[Catch:\{ all \-\> 0x0123 \}]\l0x0074: CONST_STR  (r18 I:java.lang.String) =  \"font_italic\" A[Catch:\{ all \-\> 0x0123 \}]\l0x0076: CONST_STR  (r19 I:java.lang.String) =  \"result_code\" A[Catch:\{ all \-\> 0x0123 \}]\l0x0078: FILLED_NEW_ARRAY  (r5 I:java.lang.String[]) = \l  (r13 I:java.lang.String)\l  (r14 I:java.lang.String)\l  (r15 I:java.lang.String)\l  (r16 I:java.lang.String)\l  (r17 I:java.lang.String)\l  (r18 I:java.lang.String)\l  (r19 I:java.lang.String)\l elemType: java.lang.String A[Catch:\{ all \-\> 0x0123 \}]\l0x007c: CONST_STR  (r6 I:java.lang.String) =  \"query = ?\" A[Catch:\{ all \-\> 0x0123 \}]\l0x007e: NEW_ARRAY  (r7 I:java.lang.String[]) = (r11 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] A[Catch:\{ all \-\> 0x0123 \}]\l0x0080: INVOKE  (r4 I:java.lang.String) = (r21 I:android.support.v4.provider.FontRequest) android.support.v4.provider.FontRequest.getQuery():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0123 \}]\l0x0084: APUT  \l  (r7 I:?[OBJECT, ARRAY][])\l  (r12 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0123 \}]\l0x0086: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0123 \}]\l0x0087: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0123 \}]\l0x0088: INVOKE  (r3 I:android.database.Cursor) = \l  (r3 I:android.content.ContentResolver)\l  (r4 I:android.net.Uri)\l  (r5 I:java.lang.String[])\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String[])\l  (r8 I:java.lang.String)\l android.content.ContentResolver.query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String):android.database.Cursor type: VIRTUAL A[Catch:\{ all \-\> 0x0123 \}]\l0x008c: GOTO  \-\> 0x0064 A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x008d|0x008d: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0115 A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x008f|0x008f: INVOKE  (r3 I:int) = (r10 I:android.database.Cursor) android.database.Cursor.getCount():int type: INTERFACE A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0093|0x0093: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:35:0x0115 A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0095|0x0095: CONST_STR  (r1 I:java.lang.String) =  \"result_code\" A[Catch:\{ all \-\> 0x0123 \}]\l0x0097: INVOKE  (r1 I:int) = (r10 I:android.database.Cursor), (r1 I:java.lang.String) android.database.Cursor.getColumnIndex(java.lang.String):int type: INTERFACE A[Catch:\{ all \-\> 0x0123 \}]\l0x009b: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList A[Catch:\{ all \-\> 0x0123 \}]\l0x009d: INVOKE  (r3 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0123 \}]\l0x00a0: CONST_STR  (r4 I:java.lang.String) =  \"_id\" A[Catch:\{ all \-\> 0x0123 \}]\l0x00a2: INVOKE  (r4 I:int) = (r10 I:android.database.Cursor), (r4 I:java.lang.String) android.database.Cursor.getColumnIndex(java.lang.String):int type: INTERFACE A[Catch:\{ all \-\> 0x0123 \}]\l0x00a6: CONST_STR  (r5 I:java.lang.String) =  \"file_id\" A[Catch:\{ all \-\> 0x0123 \}]\l0x00a8: INVOKE  (r5 I:int) = (r10 I:android.database.Cursor), (r5 I:java.lang.String) android.database.Cursor.getColumnIndex(java.lang.String):int type: INTERFACE A[Catch:\{ all \-\> 0x0123 \}]\l0x00ac: CONST_STR  (r6 I:java.lang.String) =  \"font_ttc_index\" A[Catch:\{ all \-\> 0x0123 \}]\l0x00ae: INVOKE  (r6 I:int) = (r10 I:android.database.Cursor), (r6 I:java.lang.String) android.database.Cursor.getColumnIndex(java.lang.String):int type: INTERFACE A[Catch:\{ all \-\> 0x0123 \}]\l0x00b2: CONST_STR  (r7 I:java.lang.String) =  \"font_weight\" A[Catch:\{ all \-\> 0x0123 \}]\l0x00b4: INVOKE  (r7 I:int) = (r10 I:android.database.Cursor), (r7 I:java.lang.String) android.database.Cursor.getColumnIndex(java.lang.String):int type: INTERFACE A[Catch:\{ all \-\> 0x0123 \}]\l0x00b8: CONST_STR  (r8 I:java.lang.String) =  \"font_italic\" A[Catch:\{ all \-\> 0x0123 \}]\l0x00ba: INVOKE  (r8 I:int) = (r10 I:android.database.Cursor), (r8 I:java.lang.String) android.database.Cursor.getColumnIndex(java.lang.String):int type: INTERFACE A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x00be|0x00be: INVOKE  (r9 I:boolean) = (r10 I:android.database.Cursor) android.database.Cursor.moveToNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x00c2|0x00c2: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0114 A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x00c4|0x00c4: CONST  (r9 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x00c5|0x00c5: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x00ce A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x00c7|0x00c7: INVOKE  (r13 I:int) = (r10 I:android.database.Cursor), (r1 I:int) android.database.Cursor.getInt(int):int type: INTERFACE A[Catch:\{ all \-\> 0x0123 \}]\l0x00cb: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0123 \}]\l0x00cd: GOTO  \-\> 0x00d0 A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x00ce|0x00ce: CONST  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x00d0|0x00d0: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x00d9 A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x00d2|0x00d2: INVOKE  (r13 I:int) = (r10 I:android.database.Cursor), (r6 I:int) android.database.Cursor.getInt(int):int type: INTERFACE A[Catch:\{ all \-\> 0x0123 \}]\l0x00d6: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0123 \}]\l0x00d8: GOTO  \-\> 0x00db A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x00d9|0x00d9: CONST  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x00db|0x00db: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x00e7 A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x00dd|0x00dd: INVOKE  (r13 I:long) = (r10 I:android.database.Cursor), (r4 I:int) android.database.Cursor.getLong(int):long type: INTERFACE A[Catch:\{ all \-\> 0x0123 \}]\l0x00e1: INVOKE  (r13 I:android.net.Uri) = (r2 I:android.net.Uri), (r13 I:long) android.content.ContentUris.withAppendedId(android.net.Uri, long):android.net.Uri type: STATIC A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x00e5|0x00e5: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0123 \}]\l0x00e6: GOTO  \-\> 0x00f0 A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x00e7|0x00e7: INVOKE  (r13 I:long) = (r10 I:android.database.Cursor), (r5 I:int) android.database.Cursor.getLong(int):long type: INTERFACE A[Catch:\{ all \-\> 0x0123 \}]\l0x00eb: INVOKE  (r13 I:android.net.Uri) = (r0 I:android.net.Uri), (r13 I:long) android.content.ContentUris.withAppendedId(android.net.Uri, long):android.net.Uri type: STATIC A[Catch:\{ all \-\> 0x0123 \}]\l0x00ef: GOTO  \-\> 0x00e5 A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x00f0|0x00f0: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x00f9 A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x00f2|0x00f2: INVOKE  (r13 I:int) = (r10 I:android.database.Cursor), (r7 I:int) android.database.Cursor.getInt(int):int type: INTERFACE A[Catch:\{ all \-\> 0x0123 \}]\l0x00f6: MOVE  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0123 \}]\l0x00f8: GOTO  \-\> 0x00fd A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x00f9|0x00f9: CONST  (r13 I:?[int, float, short, byte, char]) = \l  (400(0x190, float:5.6E\-43) ?[int, float, short, byte, char])\l A[Catch:\{ all \-\> 0x0123 \}]\l0x00fb: CONST  (r17 I:?[int, float, short, byte, char]) = \l  (400(0x190, float:5.6E\-43) ?[int, float, short, byte, char])\l A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x00fd|0x00fd: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0108 A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x00ff|0x00ff: INVOKE  (r9 I:int) = (r10 I:android.database.Cursor), (r8 I:int) android.database.Cursor.getInt(int):int type: INTERFACE A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0103|0x0103: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0108 A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0105|0x0105: CONST  (r18 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0123 \}]\l0x0107: GOTO  \-\> 0x010a A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0108|0x0108: CONST  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0123 \}]\l}"];
Node_32 [shape=record,label="{32\:\ 0x010a|0x010a: NEW_INSTANCE  (r9 I:android.support.v4.provider.FontsContractCompat$FontInfo) =  android.support.v4.provider.FontsContractCompat$FontInfo A[Catch:\{ all \-\> 0x0123 \}]\l0x010c: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0123 \}]\l0x010d: INVOKE  \l  (r14 I:android.support.v4.provider.FontsContractCompat$FontInfo)\l  (r15 I:android.net.Uri)\l  (r16 I:int)\l  (r17 I:int)\l  (r18 I:boolean)\l  (r19 I:int)\l android.support.v4.provider.FontsContractCompat.FontInfo.\<init\>(android.net.Uri, int, int, boolean, int):void type: DIRECT A[Catch:\{ all \-\> 0x0123 \}]\l0x0110: INVOKE  (r3 I:java.util.ArrayList), (r9 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0123 \}, TRY_LEAVE]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0114|0x0114: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0115|0x0115: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x011a \l}"];
Node_36 [shape=record,label="{36\:\ 0x0117|0x0117: INVOKE  (r10 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_37 [shape=record,label="{37\:\ 0x011a|0x011a: NEW_ARRAY  (r0 I:android.support.v4.provider.FontsContractCompat$FontInfo[]) = (r12 I:int A[IMMUTABLE_TYPE]) type: android.support.v4.provider.FontsContractCompat$FontInfo[] \l0x011c: INVOKE  (r0 I:java.lang.Object[]) = (r1 I:java.util.ArrayList), (r0 I:java.lang.Object[]) java.util.ArrayList.toArray(java.lang.Object[]):java.lang.Object[] type: VIRTUAL \l0x0120: CHECK_CAST  (r0 I:android.support.v4.provider.FontsContractCompat$FontInfo[]) = (android.support.v4.provider.FontsContractCompat$FontInfo[]) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0122|0x0122: RETURN  \l  (r0 I:android.support.v4.provider.FontsContractCompat$FontInfo[])\l \l}"];
Node_39 [shape=record,label="{39\:\ 0x0123|ExcHandler: all null\lSplitter:B:1:0x0034\l|0x0123: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_40 [shape=record,label="{40\:\ 0x0124|0x0124: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0129 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0126|0x0126: INVOKE  (r10 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_42 [shape=record,label="{42\:\ 0x0129|0x0129: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{static android.support.v4.provider.FontsContractCompat$FontInfo[] android.support.v4.provider.FontsContractCompat.getFontFromProvider((r20 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:android.support.v4.provider.FontRequest A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:android.os.CancellationSignal A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.VisibleForTesting, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_39;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_6 -> Node_5;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_35;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_35;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_34;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_24;
Node_23 -> Node_22;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_11;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
}

