digraph "CFG forandroid.support.v4.provider.FontsContractCompat.getFontSync(Landroid\/content\/Context;Landroid\/support\/v4\/provider\/FontRequest;Landroid\/support\/v4\/content\/res\/ResourcesCompat$FontCallback;Landroid\/os\/Handler;ZII)Landroid\/graphics\/Typeface;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0002: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r1 I:java.lang.String) = (r3 I:android.support.v4.provider.FontRequest) android.support.v4.provider.FontRequest.getIdentifier():java.lang.String type: VIRTUAL \l0x0009: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"\-\" \l0x000e: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0011: INVOKE  (r0 I:java.lang.StringBuilder), (r8 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0014: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0018: SGET  (r1 I:android.support.v4.util.LruCache\<java.lang.String, android.graphics.Typeface\>) =  android.support.v4.provider.FontsContractCompat.sTypefaceCache android.support.v4.util.LruCache \l0x001a: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:android.support.v4.util.LruCache)\l  (r0 I:java.lang.Object)\l android.support.v4.util.LruCache.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x001e: CHECK_CAST  (r1 I:android.graphics.Typeface) = (android.graphics.Typeface) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0020|0x0020: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0022|0x0022: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0027 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|0x0024: INVOKE  \l  (r4 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r1 I:android.graphics.Typeface)\l android.support.v4.content.res.ResourcesCompat.FontCallback.onFontRetrieved(android.graphics.Typeface):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0027|0x0027: RETURN  (r1 I:android.graphics.Typeface) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0028|0x0028: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0045 \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0045 \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: INVOKE  (r2 I:android.support.v4.provider.FontsContractCompat$TypefaceResult) = \l  (r2 I:android.content.Context)\l  (r3 I:android.support.v4.provider.FontRequest)\l  (r8 I:int)\l android.support.v4.provider.FontsContractCompat.getFontInternal(android.content.Context, android.support.v4.provider.FontRequest, int):android.support.v4.provider.FontsContractCompat$TypefaceResult type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0042 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|0x0033: IGET  (r3 I:int) = \l  (r2 I:android.support.v4.provider.FontsContractCompat$TypefaceResult)\l android.support.v4.provider.FontsContractCompat.TypefaceResult.mResult int \l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x003d \l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|0x0037: IGET  (r3 I:android.graphics.Typeface) = \l  (r2 I:android.support.v4.provider.FontsContractCompat$TypefaceResult)\l android.support.v4.provider.FontsContractCompat.TypefaceResult.mTypeface android.graphics.Typeface \l0x0039: INVOKE  \l  (r4 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r3 I:android.graphics.Typeface)\l  (r5 I:android.os.Handler)\l android.support.v4.content.res.ResourcesCompat.FontCallback.callbackSuccessAsync(android.graphics.Typeface, android.os.Handler):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: IGET  (r3 I:int) = \l  (r2 I:android.support.v4.provider.FontsContractCompat$TypefaceResult)\l android.support.v4.provider.FontsContractCompat.TypefaceResult.mResult int \l0x003f: INVOKE  \l  (r4 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r3 I:int)\l  (r5 I:android.os.Handler)\l android.support.v4.content.res.ResourcesCompat.FontCallback.callbackFailAsync(int, android.os.Handler):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|0x0042: IGET  (r2 I:android.graphics.Typeface) = \l  (r2 I:android.support.v4.provider.FontsContractCompat$TypefaceResult)\l android.support.v4.provider.FontsContractCompat.TypefaceResult.mTypeface android.graphics.Typeface \l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|0x0044: RETURN  (r2 I:android.graphics.Typeface) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0045|0x0045: NEW_INSTANCE  (r1 I:android.support.v4.provider.FontsContractCompat$1) =  android.support.v4.provider.FontsContractCompat$1 \l0x0047: INVOKE  \l  (r1 I:android.support.v4.provider.FontsContractCompat$1)\l  (r2 I:android.content.Context)\l  (r3 I:android.support.v4.provider.FontRequest)\l  (r8 I:int)\l  (r0 I:java.lang.String)\l android.support.v4.provider.FontsContractCompat.1.\<init\>(android.content.Context, android.support.v4.provider.FontRequest, int, java.lang.String):void type: DIRECT \l0x004a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x004b|0x004b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0059 \l}"];
Node_18 [shape=record,label="{18\:\ 0x004d|SYNTHETIC\lSplitter:B:18:0x004d\l}"];
Node_19 [shape=record,label="{19\:\ ?|Splitter:B:18:0x004d\l|0x004d: SGET  (r3 I:android.support.v4.provider.SelfDestructiveThread) =  android.support.v4.provider.FontsContractCompat.sBackgroundThread android.support.v4.provider.SelfDestructiveThread A[Catch:\{ InterruptedException \-\> 0x0058 \}, TRY_ENTER]\l0x004f: INVOKE  (r3 I:java.lang.Object) = \l  (r3 I:android.support.v4.provider.SelfDestructiveThread)\l  (r1 I:java.util.concurrent.Callable)\l  (r7 I:int)\l android.support.v4.provider.SelfDestructiveThread.postAndWait(java.util.concurrent.Callable, int):java.lang.Object type: VIRTUAL A[Catch:\{ InterruptedException \-\> 0x0058 \}]\l0x0053: CHECK_CAST  (r3 I:android.support.v4.provider.FontsContractCompat$TypefaceResult) = (android.support.v4.provider.FontsContractCompat$TypefaceResult) (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ InterruptedException \-\> 0x0058 \}]\l0x0055: IGET  (r3 I:android.graphics.Typeface) = \l  (r3 I:android.support.v4.provider.FontsContractCompat$TypefaceResult)\l android.support.v4.provider.FontsContractCompat.TypefaceResult.mTypeface android.graphics.Typeface A[Catch:\{ InterruptedException \-\> 0x0058 \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0057|0x0057: RETURN  (r3 I:android.graphics.Typeface) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0058|0x0058: RETURN  (r2 I:android.graphics.Typeface) \l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lExcHandler: InterruptedException null\lSplitter:B:18:0x004d\l}"];
Node_23 [shape=record,label="{23\:\ 0x0059|0x0059: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x005d \l}"];
Node_24 [shape=record,label="{24\:\ 0x005b|0x005b: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x005d|0x005d: NEW_INSTANCE  (r3 I:android.support.v4.provider.FontsContractCompat$2) =  android.support.v4.provider.FontsContractCompat$2 \l0x005f: INVOKE  \l  (r3 I:android.support.v4.provider.FontsContractCompat$2)\l  (r4 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r5 I:android.os.Handler)\l android.support.v4.provider.FontsContractCompat.2.\<init\>(android.support.v4.content.res.ResourcesCompat$FontCallback, android.os.Handler):void type: DIRECT \l}"];
Node_26 [shape=record,label="{26\:\ 0x0062|0x0062: SGET  (r4 I:java.lang.Object) =  android.support.v4.provider.FontsContractCompat.sLock java.lang.Object \l}"];
Node_27 [shape=record,label="{27\:\ 0x0064|0x0064: MONITOR_ENTER  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0065|SYNTHETIC\lSplitter:B:28:0x0065\l}"];
Node_29 [shape=record,label="{29\:\ ?|Splitter:B:28:0x0065\l|0x0065: SGET  (r5 I:android.support.v4.util.SimpleArrayMap\<java.lang.String, java.util.ArrayList\<android.support.v4.provider.SelfDestructiveThread$ReplyCallback\<android.support.v4.provider.FontsContractCompat$TypefaceResult\>\>\>) =  android.support.v4.provider.FontsContractCompat.sPendingReplies android.support.v4.util.SimpleArrayMap A[Catch:\{ all \-\> 0x0097 \}, TRY_ENTER]\l0x0067: INVOKE  (r5 I:boolean) = \l  (r5 I:android.support.v4.util.SimpleArrayMap)\l  (r0 I:java.lang.Object)\l android.support.v4.util.SimpleArrayMap.containsKey(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0097 \}]\l}"];
Node_30 [shape=record,label="{30\:\ 0x006b|0x006b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x007c A[Catch:\{ all \-\> 0x0097 \}]\l}"];
Node_31 [shape=record,label="{31\:\ 0x006d|0x006d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x007a A[Catch:\{ all \-\> 0x0097 \}]\l}"];
Node_32 [shape=record,label="{32\:\ 0x006f|0x006f: SGET  (r5 I:android.support.v4.util.SimpleArrayMap\<java.lang.String, java.util.ArrayList\<android.support.v4.provider.SelfDestructiveThread$ReplyCallback\<android.support.v4.provider.FontsContractCompat$TypefaceResult\>\>\>) =  android.support.v4.provider.FontsContractCompat.sPendingReplies android.support.v4.util.SimpleArrayMap A[Catch:\{ all \-\> 0x0097 \}]\l0x0071: INVOKE  (r5 I:java.lang.Object) = \l  (r5 I:android.support.v4.util.SimpleArrayMap)\l  (r0 I:java.lang.Object)\l android.support.v4.util.SimpleArrayMap.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0097 \}]\l0x0075: CHECK_CAST  (r5 I:java.util.ArrayList) = (java.util.ArrayList) (r5 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0097 \}]\l0x0077: INVOKE  (r5 I:java.util.ArrayList), (r3 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0097 \}]\l}"];
Node_33 [shape=record,label="{33\:\ 0x007a|0x007a: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0097 \}]\l}"];
Node_34 [shape=record,label="{34\:\ 0x007b|0x007b: RETURN  (r2 I:android.graphics.Typeface) A[Catch:\{ all \-\> 0x0097 \}]\l}"];
Node_35 [shape=record,label="{35\:\ 0x007c|0x007c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x008b A[Catch:\{ all \-\> 0x0097 \}]\l}"];
Node_36 [shape=record,label="{36\:\ 0x007e|0x007e: NEW_INSTANCE  (r5 I:java.util.ArrayList) =  java.util.ArrayList A[Catch:\{ all \-\> 0x0097 \}]\l0x0080: INVOKE  (r5 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0097 \}]\l0x0083: INVOKE  (r5 I:java.util.ArrayList), (r3 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0097 \}]\l0x0086: SGET  (r3 I:android.support.v4.util.SimpleArrayMap\<java.lang.String, java.util.ArrayList\<android.support.v4.provider.SelfDestructiveThread$ReplyCallback\<android.support.v4.provider.FontsContractCompat$TypefaceResult\>\>\>) =  android.support.v4.provider.FontsContractCompat.sPendingReplies android.support.v4.util.SimpleArrayMap A[Catch:\{ all \-\> 0x0097 \}]\l0x0088: INVOKE  \l  (r3 I:android.support.v4.util.SimpleArrayMap)\l  (r0 I:java.lang.Object)\l  (r5 I:java.lang.Object)\l android.support.v4.util.SimpleArrayMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0097 \}]\l}"];
Node_37 [shape=record,label="{37\:\ 0x008b|0x008b: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0097 \}, TRY_LEAVE]\l}"];
Node_38 [shape=record,label="{38\:\ 0x008c|0x008c: SGET  (r3 I:android.support.v4.provider.SelfDestructiveThread) =  android.support.v4.provider.FontsContractCompat.sBackgroundThread android.support.v4.provider.SelfDestructiveThread \l0x008e: NEW_INSTANCE  (r4 I:android.support.v4.provider.FontsContractCompat$3) =  android.support.v4.provider.FontsContractCompat$3 \l0x0090: INVOKE  \l  (r4 I:android.support.v4.provider.FontsContractCompat$3)\l  (r0 I:java.lang.String)\l android.support.v4.provider.FontsContractCompat.3.\<init\>(java.lang.String):void type: DIRECT \l0x0093: INVOKE  \l  (r3 I:android.support.v4.provider.SelfDestructiveThread)\l  (r1 I:java.util.concurrent.Callable)\l  (r4 I:android.support.v4.provider.SelfDestructiveThread$ReplyCallback)\l android.support.v4.provider.SelfDestructiveThread.postAndReply(java.util.concurrent.Callable, android.support.v4.provider.SelfDestructiveThread$ReplyCallback):void type: VIRTUAL \l}"];
Node_39 [shape=record,label="{39\:\ 0x0096|0x0096: RETURN  (r2 I:android.graphics.Typeface) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0097|ExcHandler: all null\lSplitter:B:28:0x0065\l|0x0097: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_41 [shape=record,label="{41\:\ 0x0098|SYNTHETIC\lSplitter:B:41:0x0098\l}"];
Node_42 [shape=record,label="{42\:\ ?|Splitter:B:41:0x0098\l|0x0098: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0097 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0099|0x0099: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static android.graphics.Typeface android.support.v4.provider.FontsContractCompat.getFontSync((r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.support.v4.provider.FontRequest A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.support.v4.content.res.ResourcesCompat$FontCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.os.Handler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , , Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], , , \lAnnotation[BUILD, android.support.annotation.RestrictTo, \{value=[android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP android.support.annotation.RestrictTo$Scope]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_16;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_16;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_19 -> Node_22;
Node_22 -> Node_21;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_40;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_35;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_41 -> Node_40;
Node_42 -> Node_43;
Node_42 -> Node_40;
}

