digraph "CFG forandroid.support.v4.provider.FontsContractCompat.getFontInternal(Landroid\/content\/Context;Landroid\/support\/v4\/provider\/FontRequest;I)Landroid\/support\/v4\/provider\/FontsContractCompat$TypefaceResult;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r4 I:android.support.v4.provider.FontsContractCompat$FontFamilyResult) = \l  (r3 I:android.content.Context)\l  (r0 I:android.os.CancellationSignal)\l  (r4 I:android.support.v4.provider.FontRequest)\l android.support.v4.provider.FontsContractCompat.fetchFonts(android.content.Context, android.os.CancellationSignal, android.support.v4.provider.FontRequest):android.support.v4.provider.FontsContractCompat$FontFamilyResult type: STATIC A[Catch:\{ NameNotFoundException \-\> 0x002b \}, TRY_ENTER]\l0x0004: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: INVOKE  (r1 I:int) = \l  (r4 I:android.support.v4.provider.FontsContractCompat$FontFamilyResult)\l android.support.v4.provider.FontsContractCompat.FontFamilyResult.getStatusCode():int type: VIRTUAL \l0x0009: CONST  (r2 I:?[int, float, short, byte, char]) = (\-3 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001d \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: INVOKE  (r4 I:android.support.v4.provider.FontsContractCompat$FontInfo[]) = \l  (r4 I:android.support.v4.provider.FontsContractCompat$FontFamilyResult)\l android.support.v4.provider.FontsContractCompat.FontFamilyResult.getFonts():android.support.v4.provider.FontsContractCompat$FontInfo[] type: VIRTUAL \l0x0010: INVOKE  (r3 I:android.graphics.Typeface) = \l  (r3 I:android.content.Context)\l  (r0 I:android.os.CancellationSignal)\l  (r4 I:android.support.v4.provider.FontsContractCompat$FontInfo[])\l  (r5 I:int)\l android.support.v4.graphics.TypefaceCompat.createFromFontInfo(android.content.Context, android.os.CancellationSignal, android.support.v4.provider.FontsContractCompat$FontInfo[], int):android.graphics.Typeface type: STATIC \l0x0014: NEW_INSTANCE  (r4 I:android.support.v4.provider.FontsContractCompat$TypefaceResult) =  android.support.v4.provider.FontsContractCompat$TypefaceResult \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0019 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: INVOKE  \l  (r4 I:android.support.v4.provider.FontsContractCompat$TypefaceResult)\l  (r3 I:android.graphics.Typeface)\l  (r2 I:int)\l android.support.v4.provider.FontsContractCompat.TypefaceResult.\<init\>(android.graphics.Typeface, int):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: RETURN  \l  (r4 I:android.support.v4.provider.FontsContractCompat$TypefaceResult)\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: INVOKE  (r3 I:int) = \l  (r4 I:android.support.v4.provider.FontsContractCompat$FontFamilyResult)\l android.support.v4.provider.FontsContractCompat.FontFamilyResult.getStatusCode():int type: VIRTUAL \l0x0021: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0025 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: CONST  (r2 I:?[int, float, short, byte, char]) = (\-2 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|0x0025: NEW_INSTANCE  (r3 I:android.support.v4.provider.FontsContractCompat$TypefaceResult) =  android.support.v4.provider.FontsContractCompat$TypefaceResult \l0x0027: INVOKE  \l  (r3 I:android.support.v4.provider.FontsContractCompat$TypefaceResult)\l  (r0 I:android.graphics.Typeface)\l  (r2 I:int)\l android.support.v4.provider.FontsContractCompat.TypefaceResult.\<init\>(android.graphics.Typeface, int):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|0x002a: RETURN  \l  (r3 I:android.support.v4.provider.FontsContractCompat$TypefaceResult)\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|0x002b: NEW_INSTANCE  (r3 I:android.support.v4.provider.FontsContractCompat$TypefaceResult) =  android.support.v4.provider.FontsContractCompat$TypefaceResult \l0x002d: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x002e: INVOKE  \l  (r3 I:android.support.v4.provider.FontsContractCompat$TypefaceResult)\l  (r0 I:android.graphics.Typeface)\l  (r4 I:int)\l android.support.v4.provider.FontsContractCompat.TypefaceResult.\<init\>(android.graphics.Typeface, int):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lExcHandler: NameNotFoundException null\lSplitter:B:1:0x0001\l}"];
Node_17 [shape=record,label="{17\:\ 0x0031|0x0031: RETURN  \l  (r3 I:android.support.v4.provider.FontsContractCompat$TypefaceResult)\l \l}"];
MethodNode[shape=record,label="{static android.support.v4.provider.FontsContractCompat$TypefaceResult android.support.v4.provider.FontsContractCompat.getFontInternal((r3 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.support.v4.provider.FontRequest A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_17;
Node_16 -> Node_15;
}

