digraph "CFG forandroid.support.v4.provider.FontsContractCompat.5.compare([B[B)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r1 I:int) = (r4 I:?[] A[D('l' byte[])]) \l0x0001: ARRAY_LENGTH  (r2 I:int) = (r5 I:?[] A[D('r' byte[])]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: ARRAY_LENGTH  (r1 I:int) = (r4 I:?[] A[D('l' byte[])]) \l0x0005: ARRAY_LENGTH  (r2 I:int) = (r5 I:?[] A[D('r' byte[])]) \l0x0006: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: RETURN  (r1 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: ARRAY_LENGTH  (r1 I:int) = (r4 I:?[] A[D('l' byte[])]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r1 I:?[int, byte, short, char])  \-\> B:11:0x001b \l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|0x000c: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r4 I:byte[] A[D('l' byte[]), IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l0x000e: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r5 I:byte[] A[D('r' byte[]), IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0018 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r4 I:byte[] A[D('l' byte[]), IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0014: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r5 I:byte[] A[D('r' byte[]), IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0016: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|0x0018: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public int android.support.v4.provider.FontsContractCompat.5.compare((r3 'this' I:android.support.v4.provider.FontsContractCompat$5 A[IMMUTABLE_TYPE, THIS]), (r4 I:byte[] A[D('l' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:byte[] A[D('r' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0009\-0x001c: r0 'i' int\l  ?\-0x001c: r4 'l' byte[]\l  ?\-0x001c: r5 'r' byte[]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_3;
Node_10 -> Node_5;
Node_11 -> Node_3;
}

