digraph "CFG forandroid.support.v4.provider.RawDocumentFile.listFiles()[Landroid\/support\/v4\/provider\/DocumentFile;" {
subgraph cluster_Region_1241237090 {
label = "R(3:0|(2:2|(1:4))|6)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.ArrayList java.util.ArrayList r0 = new java.util.ArrayList()\ljava.io.File[] java.io.File[] r1 = r6.mFile.listFiles()\l}"];
subgraph cluster_IfRegion_1650127121 {
label = "IF [B:1:0x000b] THEN: R(2:2|(1:4)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r1 != null) goto L_0x000d\l}"];
subgraph cluster_Region_379205818 {
label = "R(2:2|(1:4))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000d|int int r2 = r1.length\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_980764362 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000f|LOOP_START\lPHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:2:0x000d, B:4:0x0011] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x000f\-\>B:4:0x0011\l|if (r3 \< r2) goto L_0x0011\l}"];
subgraph cluster_Region_1478448089 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|LOOP_END\lLOOP:0: B:3:0x000f\-\>B:4:0x0011\l|r0.add(new android.support.p000v4.provider.RawDocumentFile(r6, r4))\lr3++\l}"];
}
}
}
}
Node_6 [shape=record,label="{6\:\ 0x002a|RETURN\l|return (android.support.p000v4.provider.DocumentFile[]) r0.toArray(new android.support.p000v4.provider.DocumentFile[r0.size()])\l}"];
}
Node_5 [shape=record,color=red,label="{5\:\ 0x001e}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public android.support.v4.provider.DocumentFile[] android.support.v4.provider.RawDocumentFile.listFiles((r6v0 'this' android.support.v4.provider.RawDocumentFile A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_3;
Node_5 -> Node_6;
Node_7 -> Node_5;
}

