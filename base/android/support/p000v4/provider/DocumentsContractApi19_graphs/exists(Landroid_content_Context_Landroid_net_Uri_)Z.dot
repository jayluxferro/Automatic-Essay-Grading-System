digraph "CFG forandroid.support.v4.provider.DocumentsContractApi19.exists(Landroid\/content\/Context;Landroid\/net\/Uri;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.content.ContentResolver r0 = r7.getContentResolver()\lr7 = false\lr6 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|SYNTHETIC\lSplitter:B:1:0x0008\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Exception \-\> 0x0027 \}\lSplitter:B:1:0x0008\l|r1 = r8     \/\/ Catch:\{ Exception \-\> 0x0027 \}\landroid.database.Cursor r8 = r0.query(r1, new java.lang.String[]\{\"document_id\"\}, (java.lang.String) null, (java.lang.String[]) null, (java.lang.String) null)     \/\/ Catch:\{ Exception \-\> 0x0027 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|SYNTHETIC\lSplitter:B:3:0x0014\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ Exception \-\> 0x0022, all \-\> 0x001f \}\lSplitter:B:3:0x0014\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r8.getCount() \<= 0) goto L_0x001b\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|r7 = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|PHI: r7 \l  PHI: (r7v5 boolean) = (r7v1 boolean), (r7v6 boolean) binds: [B:5:0x0018, B:6:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|closeQuietly(r8)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|RETURN\l|return r7\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:3:0x0014\l|java.lang.Throwable r7 = th\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|r6 = r8\l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:3:0x0014\l|java.lang.Exception r0 = e\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|r6 = r8\l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:16:0x002a\l|java.lang.Throwable r7 = th\l}"];
Node_14 [shape=record,label="{14\:\ 0x0027|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:1:0x0008\l|java.lang.Exception r0 = e\l}"];
Node_15 [shape=record,label="{15\:\ 0x0028|PHI: r0 r6 \l  PHI: (r0v1 'e' java.lang.Exception) = (r0v3 'e' java.lang.Exception), (r0v4 'e' java.lang.Exception) binds: [B:14:0x0027, B:12:0x0023] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v2 android.database.Cursor) = (r6v0 android.database.Cursor), (r6v3 android.database.Cursor) binds: [B:14:0x0027, B:12:0x0023] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x002a|SYNTHETIC\lSplitter:B:16:0x002a\l}"];
Node_17 [shape=record,label="{17\:\ ?|Catch:\{ all \-\> 0x0025 \}\lSplitter:B:16:0x002a\l|java.lang.StringBuilder r1 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x0025 \}\lr1.append(\"Failed query: \")     \/\/ Catch:\{ all \-\> 0x0025 \}\lr1.append(r0)     \/\/ Catch:\{ all \-\> 0x0025 \}\landroid.util.Log.w(TAG, r1.toString())     \/\/ Catch:\{ all \-\> 0x0025 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x003e|closeQuietly(r6)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0041|RETURN\l|return false\l}"];
Node_20 [shape=record,label="{20\:\ 0x0042|PHI: r6 r7 \l  PHI: (r6v1 android.database.Cursor) = (r6v2 android.database.Cursor), (r6v4 android.database.Cursor) binds: [B:13:0x0025, B:10:0x0020] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v2 'th' java.lang.Throwable) = (r7v3 'th' java.lang.Throwable), (r7v4 'th' java.lang.Throwable) binds: [B:13:0x0025, B:10:0x0020] A[DONT_GENERATE, DONT_INLINE]\l|closeQuietly(r6)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0045|throw r7\l}"];
MethodNode[shape=record,label="{public static boolean android.support.v4.provider.DocumentsContractApi19.exists((r7v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 android.net.Uri A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_11;
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_20;
Node_11 -> Node_12;
Node_12 -> Node_15;
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_13;
Node_17 -> Node_18;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_20 -> Node_21;
}

