digraph "CFG forandroid.support.v4.provider.DocumentsContractApi19.canWrite(Landroid\/content\/Context;Landroid\/net\/Uri;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r4.checkCallingOrSelfUriPermission(r5, 2) == 0) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|RETURN\l|return false\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|java.lang.String r1 = getRawType(r4, r5)\lint r4 = queryForInt(r4, r5, \"flags\", 0)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|if (android.text.TextUtils.isEmpty(r1) == false) goto L_0x001a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|RETURN\l|return false\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a}"];
Node_7 [shape=record,label="{7\:\ 0x001d|if ((r4 & 4) == 0) goto L_0x0020\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|RETURN\l|return true\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020}"];
Node_10 [shape=record,label="{10\:\ 0x0026|if (\"vnd.android.document\/directory\".equals(r1) == false) goto L_0x002d\l}"];
Node_11 [shape=record,label="{11\:\ 0x0028}"];
Node_12 [shape=record,label="{12\:\ 0x002a|if ((r4 & 8) == 0) goto L_0x002d\l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|RETURN\l|return true\l}"];
Node_14 [shape=record,label="{14\:\ 0x002d}"];
Node_15 [shape=record,label="{15\:\ 0x0031|if (android.text.TextUtils.isEmpty(r1) != false) goto L_0x0037\l}"];
Node_16 [shape=record,label="{16\:\ 0x0033}"];
Node_17 [shape=record,label="{17\:\ 0x0034|if ((r4 & 2) == 0) goto L_0x0037\l}"];
Node_18 [shape=record,label="{18\:\ 0x0036|RETURN\l|return true\l}"];
Node_19 [shape=record,label="{19\:\ 0x0037|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static boolean android.support.v4.provider.DocumentsContractApi19.canWrite((r4v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 android.net.Uri A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
}

