digraph "CFG forandroid.support.v4.provider.SelfDestructiveThread.3.run()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:java.util.concurrent.atomic.AtomicReference) = (r2 I:android.support.v4.provider.SelfDestructiveThread$3) android.support.v4.provider.SelfDestructiveThread.3.val$holder java.util.concurrent.atomic.AtomicReference A[Catch:\{ Exception \-\> 0x0028 \}, TRY_ENTER]\l0x0002: IGET  (r1 I:java.util.concurrent.Callable) = (r2 I:android.support.v4.provider.SelfDestructiveThread$3) android.support.v4.provider.SelfDestructiveThread.3.val$callable java.util.concurrent.Callable A[Catch:\{ Exception \-\> 0x0028 \}]\l0x0004: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.concurrent.Callable) java.util.concurrent.Callable.call():java.lang.Object type: INTERFACE A[Catch:\{ Exception \-\> 0x0028 \}]\l0x0008: INVOKE  \l  (r0 I:java.util.concurrent.atomic.AtomicReference)\l  (r1 I:java.lang.Object)\l java.util.concurrent.atomic.AtomicReference.set(java.lang.Object):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x0028 \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IGET  (r0 I:java.util.concurrent.locks.ReentrantLock) = (r2 I:android.support.v4.provider.SelfDestructiveThread$3) android.support.v4.provider.SelfDestructiveThread.3.val$lock java.util.concurrent.locks.ReentrantLock \l0x000d: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantLock) java.util.concurrent.locks.ReentrantLock.lock():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|SYNTHETIC\lSplitter:B:3:0x0010\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0010\l|0x0010: IGET  (r0 I:java.util.concurrent.atomic.AtomicBoolean) = (r2 I:android.support.v4.provider.SelfDestructiveThread$3) android.support.v4.provider.SelfDestructiveThread.3.val$running java.util.concurrent.atomic.AtomicBoolean A[Catch:\{ all \-\> 0x0021 \}, TRY_ENTER]\l0x0012: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0021 \}]\l0x0013: INVOKE  \l  (r0 I:java.util.concurrent.atomic.AtomicBoolean)\l  (r1 I:boolean)\l java.util.concurrent.atomic.AtomicBoolean.set(boolean):void type: VIRTUAL A[Catch:\{ all \-\> 0x0021 \}]\l0x0016: IGET  (r0 I:java.util.concurrent.locks.Condition) = (r2 I:android.support.v4.provider.SelfDestructiveThread$3) android.support.v4.provider.SelfDestructiveThread.3.val$cond java.util.concurrent.locks.Condition A[Catch:\{ all \-\> 0x0021 \}]\l0x0018: INVOKE  (r0 I:java.util.concurrent.locks.Condition) java.util.concurrent.locks.Condition.signal():void type: INTERFACE A[Catch:\{ all \-\> 0x0021 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: IGET  (r0 I:java.util.concurrent.locks.ReentrantLock) = (r2 I:android.support.v4.provider.SelfDestructiveThread$3) android.support.v4.provider.SelfDestructiveThread.3.val$lock java.util.concurrent.locks.ReentrantLock \l0x001d: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantLock) java.util.concurrent.locks.ReentrantLock.unlock():void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|ExcHandler: all null\lSplitter:B:3:0x0010\l|0x0021: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: IGET  (r1 I:java.util.concurrent.locks.ReentrantLock) = (r2 I:android.support.v4.provider.SelfDestructiveThread$3) android.support.v4.provider.SelfDestructiveThread.3.val$lock java.util.concurrent.locks.ReentrantLock \l0x0024: INVOKE  (r1 I:java.util.concurrent.locks.ReentrantLock) java.util.concurrent.locks.ReentrantLock.unlock():void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|ExcHandler: Exception null\lSplitter:B:0:0x0000\l|0x0028: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
MethodNode[shape=record,label="{public void android.support.v4.provider.SelfDestructiveThread.3.run((r2 'this' I:android.support.v4.provider.SelfDestructiveThread$3 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_2;
}

