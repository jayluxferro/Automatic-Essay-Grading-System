digraph "CFG forandroid.support.v4.provider.SelfDestructiveThread.postAndWait(Ljava\/util\/concurrent\/Callable;I)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.concurrent.locks.ReentrantLock r7 = new java.util.concurrent.locks.ReentrantLock()\ljava.util.concurrent.locks.Condition r8 = r7.newCondition()\ljava.util.concurrent.atomic.AtomicReference r9 = new java.util.concurrent.atomic.AtomicReference()\ljava.util.concurrent.atomic.AtomicBoolean r10 = new java.util.concurrent.atomic.AtomicBoolean(true)\lr2 = r9\lr3 = r13\lr4 = r7\lr5 = r10\lr6 = r8\lpost(new android.support.p000v4.provider.SelfDestructiveThread.C03563(r12))\lr7.lock()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0026|SYNTHETIC\lSplitter:B:1:0x0026\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x005d \}\lSplitter:B:1:0x0026\l}"];
Node_3 [shape=record,label="{3\:\ 0x002a|Catch:\{ all \-\> 0x005d \}\l|if (r10.get() != false) goto L_0x0034     \/\/ Catch:\{ all \-\> 0x005d \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|Catch:\{ all \-\> 0x005d \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0030|DONT_GENERATE\l|r7.unlock()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0033|RETURN\l|return r9.get()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|SYNTHETIC\lSplitter:B:7:0x0034\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ all \-\> 0x005d \}\lSplitter:B:7:0x0034\l|long r13 = java.util.concurrent.TimeUnit.MILLISECONDS.toNanos((long) r14)     \/\/ Catch:\{ all \-\> 0x005d \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x003b|LOOP_START\lSYNTHETIC\lPHI: r13 \l  PHI: (r13v5 long) = (r13v4 long), (r13v6 long) binds: [B:8:?, B:19:0x0052] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:9:0x003b\lLOOP:0: B:9:0x003b\-\>B:19:0x0052\l}"];
Node_10 [shape=record,label="{10\:\ ?|Catch:\{ InterruptedException \-\> 0x0040 \}\lSplitter:B:9:0x003b\l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|r13 = r8.awaitNanos(r13)     \/\/ Catch:\{ InterruptedException \-\> 0x0040 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|SYNTHETIC\lPHI: r13 \l  PHI: (r13v6 long) = (r13v5 long), (r13v9 long) binds: [B:9:0x003b, B:11:0x003f] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:12:0x0040\l}"];
Node_13 [shape=record,label="{13\:\ ?|Catch:\{ all \-\> 0x005d \}\lSplitter:B:12:0x0040\l}"];
Node_14 [shape=record,label="{14\:\ 0x0044|Catch:\{ all \-\> 0x005d \}\l|if (r10.get() != false) goto L_0x004e     \/\/ Catch:\{ all \-\> 0x005d \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0046|Catch:\{ all \-\> 0x005d \}\l|java.lang.Object r13 = r9.get()     \/\/ Catch:\{ all \-\> 0x005d \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x004a|r7.unlock()\l}"];
Node_17 [shape=record,label="{17\:\ 0x004d|RETURN\l|return r13\l}"];
Node_18 [shape=record,label="{18\:\ 0x004e}"];
Node_19 [shape=record,label="{19\:\ 0x0052|LOOP_END\lLOOP:0: B:9:0x003b\-\>B:19:0x0052\l|if ((r13 \> 0 ? 1 : (r13 == 0 ? 0 : \-1)) \<= 0) goto L_0x0055\l}"];
Node_20 [shape=record,label="{20\:\ 0x0055|SYNTHETIC\lSplitter:B:20:0x0055\l}"];
Node_21 [shape=record,label="{21\:\ ?|Catch:\{ all \-\> 0x005d \}\lSplitter:B:20:0x0055\l}"];
Node_22 [shape=record,label="{22\:\ 0x005c|Catch:\{ all \-\> 0x005d \}\l|throw new java.lang.InterruptedException(\"timeout\")     \/\/ Catch:\{ all \-\> 0x005d \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x005d|ExcHandler:  FINALLY\lSplitter:B:1:0x0026\l|java.lang.Throwable r13 = move\-exception\l}"];
Node_24 [shape=record,label="{24\:\ 0x005e|FINALLY_INSNS\l|r7.unlock()\l}"];
Node_25 [shape=record,label="{25\:\ 0x0061|throw r13\l}"];
Node_26 [shape=record,label="{26\:\ 0x0046|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public T android.support.v4.provider.SelfDestructiveThread.postAndWait((r12v0 'this' android.support.v4.provider.SelfDestructiveThread A[IMMUTABLE_TYPE, THIS]), (r13v0 java.util.concurrent.Callable\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.InterruptedException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/util\/concurrent\/Callable\<, TT;\>;I)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_23;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_23;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_23;
Node_13 -> Node_14;
Node_14 -> Node_18;
Node_14 -> Node_26[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_9[style=dashed];
Node_20 -> Node_21;
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_26 -> Node_15;
}

