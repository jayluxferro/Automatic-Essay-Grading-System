digraph "CFG forandroid.support.v4.provider.SelfDestructiveThread.post(Ljava\/lang\/Runnable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Object) = (r5 I:android.support.v4.provider.SelfDestructiveThread) android.support.v4.provider.SelfDestructiveThread.mLock java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: IGET  (r1 I:android.os.HandlerThread) = (r5 I:android.support.v4.provider.SelfDestructiveThread) android.support.v4.provider.SelfDestructiveThread.mThread android.os.HandlerThread A[Catch:\{ all \-\> 0x003f \}, TRY_ENTER]\l0x0005: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x002c A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: NEW_INSTANCE  (r1 I:android.os.HandlerThread) =  android.os.HandlerThread A[Catch:\{ all \-\> 0x003f \}]\l0x000a: IGET  (r3 I:java.lang.String) = (r5 I:android.support.v4.provider.SelfDestructiveThread) android.support.v4.provider.SelfDestructiveThread.mThreadName java.lang.String A[Catch:\{ all \-\> 0x003f \}]\l0x000c: IGET  (r4 I:int) = (r5 I:android.support.v4.provider.SelfDestructiveThread) android.support.v4.provider.SelfDestructiveThread.mPriority int A[Catch:\{ all \-\> 0x003f \}]\l0x000e: INVOKE  \l  (r1 I:android.os.HandlerThread)\l  (r3 I:java.lang.String)\l  (r4 I:int)\l android.os.HandlerThread.\<init\>(java.lang.String, int):void type: DIRECT A[Catch:\{ all \-\> 0x003f \}]\l0x0011: IPUT  \l  (r1 I:android.os.HandlerThread)\l  (r5 I:android.support.v4.provider.SelfDestructiveThread)\l android.support.v4.provider.SelfDestructiveThread.mThread android.os.HandlerThread A[Catch:\{ all \-\> 0x003f \}]\l0x0013: IGET  (r1 I:android.os.HandlerThread) = (r5 I:android.support.v4.provider.SelfDestructiveThread) android.support.v4.provider.SelfDestructiveThread.mThread android.os.HandlerThread A[Catch:\{ all \-\> 0x003f \}]\l0x0015: INVOKE  (r1 I:android.os.HandlerThread) android.os.HandlerThread.start():void type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l0x0018: NEW_INSTANCE  (r1 I:android.os.Handler) =  android.os.Handler A[Catch:\{ all \-\> 0x003f \}]\l0x001a: IGET  (r3 I:android.os.HandlerThread) = (r5 I:android.support.v4.provider.SelfDestructiveThread) android.support.v4.provider.SelfDestructiveThread.mThread android.os.HandlerThread A[Catch:\{ all \-\> 0x003f \}]\l0x001c: INVOKE  (r3 I:android.os.Looper) = (r3 I:android.os.HandlerThread) android.os.HandlerThread.getLooper():android.os.Looper type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l0x0020: IGET  (r4 I:android.os.Handler$Callback) = (r5 I:android.support.v4.provider.SelfDestructiveThread) android.support.v4.provider.SelfDestructiveThread.mCallback android.os.Handler$Callback A[Catch:\{ all \-\> 0x003f \}]\l0x0022: INVOKE  \l  (r1 I:android.os.Handler)\l  (r3 I:android.os.Looper)\l  (r4 I:android.os.Handler$Callback)\l android.os.Handler.\<init\>(android.os.Looper, android.os.Handler$Callback):void type: DIRECT A[Catch:\{ all \-\> 0x003f \}]\l0x0025: IPUT  \l  (r1 I:android.os.Handler)\l  (r5 I:android.support.v4.provider.SelfDestructiveThread)\l android.support.v4.provider.SelfDestructiveThread.mHandler android.os.Handler A[Catch:\{ all \-\> 0x003f \}]\l0x0027: IGET  (r1 I:int) = (r5 I:android.support.v4.provider.SelfDestructiveThread) android.support.v4.provider.SelfDestructiveThread.mGeneration int A[Catch:\{ all \-\> 0x003f \}]\l0x0029: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) A[Catch:\{ all \-\> 0x003f \}]\l0x002a: IPUT  \l  (r1 I:int)\l  (r5 I:android.support.v4.provider.SelfDestructiveThread)\l android.support.v4.provider.SelfDestructiveThread.mGeneration int A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|0x002c: IGET  (r1 I:android.os.Handler) = (r5 I:android.support.v4.provider.SelfDestructiveThread) android.support.v4.provider.SelfDestructiveThread.mHandler android.os.Handler A[Catch:\{ all \-\> 0x003f \}]\l0x002e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x003f \}]\l0x002f: INVOKE  (r1 I:android.os.Handler), (r3 I:int) android.os.Handler.removeMessages(int):void type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l0x0032: IGET  (r1 I:android.os.Handler) = (r5 I:android.support.v4.provider.SelfDestructiveThread) android.support.v4.provider.SelfDestructiveThread.mHandler android.os.Handler A[Catch:\{ all \-\> 0x003f \}]\l0x0034: IGET  (r3 I:android.os.Handler) = (r5 I:android.support.v4.provider.SelfDestructiveThread) android.support.v4.provider.SelfDestructiveThread.mHandler android.os.Handler A[Catch:\{ all \-\> 0x003f \}]\l0x0036: INVOKE  (r6 I:android.os.Message) = \l  (r3 I:android.os.Handler)\l  (r2 I:int)\l  (r6 I:java.lang.Object)\l android.os.Handler.obtainMessage(int, java.lang.Object):android.os.Message type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l0x003a: INVOKE  (r1 I:android.os.Handler), (r6 I:android.os.Message) android.os.Handler.sendMessage(android.os.Message):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|0x003d: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|0x003e: RETURN   A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x003f|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x003f: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|0x0040: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003f \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0041|0x0041: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void android.support.v4.provider.SelfDestructiveThread.post((r5 'this' I:android.support.v4.provider.SelfDestructiveThread A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.Runnable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

