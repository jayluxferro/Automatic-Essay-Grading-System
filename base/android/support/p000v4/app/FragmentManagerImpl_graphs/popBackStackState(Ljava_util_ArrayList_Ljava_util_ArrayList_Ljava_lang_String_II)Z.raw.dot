digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.popBackStackState(Ljava\/util\/ArrayList;Ljava\/util\/ArrayList;Ljava\/lang\/String;II)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\>) = (r5 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mBackStack java.util.ArrayList \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002b \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: IF  (r9 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:12:0x002b \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r10 I:?[int, boolean, short, byte, char]) & (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002b \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: IGET  (r8 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\>) = (r5 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mBackStack java.util.ArrayList \l0x0011: INVOKE  (r8 I:int) = (r8 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0015: ARITH  (r8 I:int) = (r8 I:int) \- (r0 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|0x0016: IF  (r8 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:11:0x0019 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|0x0018: RETURN  (r1 I:boolean) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|0x0019: IGET  (r9 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\>) = (r5 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mBackStack java.util.ArrayList \l0x001b: INVOKE  (r8 I:java.lang.Object) = (r9 I:java.util.ArrayList), (r8 I:int) java.util.ArrayList.remove(int):java.lang.Object type: VIRTUAL \l0x001f: INVOKE  (r6 I:java.util.ArrayList), (r8 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x0022: INVOKE  (r6 I:java.lang.Boolean) = (r0 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l0x0026: INVOKE  (r7 I:java.util.ArrayList), (r6 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|0x002b: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0033 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: IF  (r9 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:15:0x0030 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0030|0x0030: CONST  (r8 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0031: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0033|0x0033: IGET  (r2 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\>) = (r5 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mBackStack java.util.ArrayList \l0x0035: INVOKE  (r2 I:int) = (r2 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0039: ARITH  (r2 I:int) = (r2 I:int) \- (r0 I:int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x003a|0x003a: IF  (r2 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:28:0x005b \l}"];
Node_18 [shape=record,label="{18\:\ 0x003c|0x003c: IGET  (r3 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\>) = (r5 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mBackStack java.util.ArrayList \l0x003e: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.ArrayList), (r2 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0042: CHECK_CAST  (r3 I:android.support.v4.app.BackStackRecord) = (android.support.v4.app.BackStackRecord) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0044|0x0044: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0051 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0046|0x0046: INVOKE  (r4 I:java.lang.String) = (r3 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.getName():java.lang.String type: VIRTUAL \l0x004a: INVOKE  (r4 I:boolean) = (r8 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x004e|0x004e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0051 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0051|0x0051: IF  (r9 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:27:0x0058 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0053|0x0053: IGET  (r3 I:int) = (r3 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mIndex int \l}"];
Node_25 [shape=record,label="{25\:\ 0x0055|0x0055: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0058 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0058|0x0058: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l}"];
Node_28 [shape=record,label="{28\:\ 0x005b|0x005b: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:30:0x005e \l}"];
Node_29 [shape=record,label="{29\:\ 0x005d|0x005d: RETURN  (r1 I:boolean) \l}"];
Node_30 [shape=record,label="{30\:\ 0x005e|0x005e: ARITH  (r10 I:?[int, boolean, short, byte, char]) = (r10 I:?[int, boolean, short, byte, char]) & (r0 I:?[int, boolean, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x005f|0x005f: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0082 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0061|0x0061: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0063|0x0063: IF  (r2 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:42:0x0082 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0065|0x0065: IGET  (r10 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\>) = (r5 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mBackStack java.util.ArrayList \l0x0067: INVOKE  (r10 I:java.lang.Object) = (r10 I:java.util.ArrayList), (r2 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x006b: CHECK_CAST  (r10 I:android.support.v4.app.BackStackRecord) = (android.support.v4.app.BackStackRecord) (r10 I:?[OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x006d|0x006d: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0079 \l}"];
Node_36 [shape=record,label="{36\:\ 0x006f|0x006f: INVOKE  (r3 I:java.lang.String) = (r10 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.getName():java.lang.String type: VIRTUAL \l0x0073: INVOKE  (r3 I:boolean) = (r8 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_37 [shape=record,label="{37\:\ 0x0077|0x0077: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x007f \l}"];
Node_38 [shape=record,label="{38\:\ 0x0079|0x0079: IF  (r9 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:42:0x0082 \l}"];
Node_39 [shape=record,label="{39\:\ 0x007b|0x007b: IGET  (r10 I:int) = (r10 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mIndex int \l}"];
Node_40 [shape=record,label="{40\:\ 0x007d|0x007d: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0082 \l}"];
Node_41 [shape=record,label="{41\:\ 0x007f|0x007f: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0082|0x0082: IGET  (r8 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\>) = (r5 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mBackStack java.util.ArrayList \l0x0084: INVOKE  (r8 I:int) = (r8 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0088: ARITH  (r8 I:int) = (r8 I:int) \- (r0 I:int) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0089|0x0089: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x008c \l}"];
Node_44 [shape=record,label="{44\:\ 0x008b|0x008b: RETURN  (r1 I:boolean) \l}"];
Node_45 [shape=record,label="{45\:\ 0x008c|0x008c: IGET  (r8 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\>) = (r5 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mBackStack java.util.ArrayList \l0x008e: INVOKE  (r8 I:int) = (r8 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0092: ARITH  (r8 I:int) = (r8 I:int) \- (r0 I:int) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0093|0x0093: IF  (r8 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:48:0x00a8 \l}"];
Node_47 [shape=record,label="{47\:\ 0x0095|0x0095: IGET  (r9 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\>) = (r5 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mBackStack java.util.ArrayList \l0x0097: INVOKE  (r9 I:java.lang.Object) = (r9 I:java.util.ArrayList), (r8 I:int) java.util.ArrayList.remove(int):java.lang.Object type: VIRTUAL \l0x009b: INVOKE  (r6 I:java.util.ArrayList), (r9 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x009e: INVOKE  (r9 I:java.lang.Boolean) = (r0 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l0x00a2: INVOKE  (r7 I:java.util.ArrayList), (r9 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x00a5: ARITH  (r8 I:int) = (r8 I:int) + (\-1 int) \l}"];
Node_48 [shape=record,label="{48\:\ 0x00a8|0x00a8: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean android.support.v4.app.FragmentManagerImpl.popBackStackState((r5 'this' I:android.support.v4.app.FragmentManagerImpl A[IMMUTABLE_TYPE, THIS]), (r6 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.ArrayList\<java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/ArrayList\<, Landroid\/support\/v4\/app\/BackStackRecord;, \>;, Ljava\/util\/ArrayList\<, Ljava\/lang\/Boolean;, \>;, Ljava\/lang\/String;, II)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_48;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_15;
Node_13 -> Node_16[style=dashed];
Node_15 -> Node_42;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_28;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_28[style=dashed];
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_27;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_25 -> Node_28[style=dashed];
Node_27 -> Node_17;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_42;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_42;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_38;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_41;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_42;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_33;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_46;
}

