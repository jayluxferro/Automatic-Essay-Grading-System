digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.removeRedundantOperationsAndExecute(Ljava\/util\/ArrayList;Ljava\/util\/ArrayList;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x006e \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:boolean) = (r5 I:java.util.ArrayList) java.util.ArrayList.isEmpty():boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0009 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0066 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: INVOKE  (r0 I:int) = (r5 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x000f: INVOKE  (r1 I:int) = (r6 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0066 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: INVOKE  \l  (r4 I:android.support.v4.app.FragmentManagerImpl)\l  (r5 I:java.util.ArrayList)\l  (r6 I:java.util.ArrayList)\l android.support.v4.app.FragmentManagerImpl.executePostponedTransaction(java.util.ArrayList, java.util.ArrayList):void type: DIRECT \l0x0018: INVOKE  (r0 I:int) = (r5 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x001c: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:23:0x0060 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: INVOKE  (r3 I:java.lang.Object) = (r5 I:java.util.ArrayList), (r1 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0024: CHECK_CAST  (r3 I:android.support.v4.app.BackStackRecord) = (android.support.v4.app.BackStackRecord) (r3 I:?[OBJECT, ARRAY]) \l0x0026: IGET  (r3 I:boolean) = (r3 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mReorderingAllowed boolean \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x005d \l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002f \l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|0x002c: INVOKE  \l  (r4 I:android.support.v4.app.FragmentManagerImpl)\l  (r5 I:java.util.ArrayList)\l  (r6 I:java.util.ArrayList)\l  (r2 I:int)\l  (r1 I:int)\l android.support.v4.app.FragmentManagerImpl.executeOpsTogether(java.util.ArrayList, java.util.ArrayList, int, int):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: ARITH  (r2 I:int) = (r1 I:int) + (1 int) \l0x0031: INVOKE  (r3 I:java.lang.Object) = (r6 I:java.util.ArrayList), (r1 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0035: CHECK_CAST  (r3 I:java.lang.Boolean) = (java.lang.Boolean) (r3 I:?[OBJECT, ARRAY]) \l0x0037: INVOKE  (r3 I:boolean) = (r3 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|0x003b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0058 \l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|0x003d: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:21:0x0058 \l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: INVOKE  (r3 I:java.lang.Object) = (r6 I:java.util.ArrayList), (r2 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0043: CHECK_CAST  (r3 I:java.lang.Boolean) = (java.lang.Boolean) (r3 I:?[OBJECT, ARRAY]) \l0x0045: INVOKE  (r3 I:boolean) = (r3 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0049|0x0049: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0058 \l}"];
Node_18 [shape=record,label="{18\:\ 0x004b|0x004b: INVOKE  (r3 I:java.lang.Object) = (r5 I:java.util.ArrayList), (r2 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x004f: CHECK_CAST  (r3 I:android.support.v4.app.BackStackRecord) = (android.support.v4.app.BackStackRecord) (r3 I:?[OBJECT, ARRAY]) \l0x0051: IGET  (r3 I:boolean) = (r3 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mReorderingAllowed boolean \l}"];
Node_19 [shape=record,label="{19\:\ 0x0053|0x0053: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0058 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0055|0x0055: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0058|0x0058: INVOKE  \l  (r4 I:android.support.v4.app.FragmentManagerImpl)\l  (r5 I:java.util.ArrayList)\l  (r6 I:java.util.ArrayList)\l  (r1 I:int)\l  (r2 I:int)\l android.support.v4.app.FragmentManagerImpl.executeOpsTogether(java.util.ArrayList, java.util.ArrayList, int, int):void type: DIRECT \l0x005b: ARITH  (r1 I:int) = (r2 I:int) + (\-1 int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x005d|0x005d: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0060|0x0060: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0065 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0062|0x0062: INVOKE  \l  (r4 I:android.support.v4.app.FragmentManagerImpl)\l  (r5 I:java.util.ArrayList)\l  (r6 I:java.util.ArrayList)\l  (r2 I:int)\l  (r0 I:int)\l android.support.v4.app.FragmentManagerImpl.executeOpsTogether(java.util.ArrayList, java.util.ArrayList, int, int):void type: DIRECT \l}"];
Node_25 [shape=record,label="{25\:\ 0x0065|0x0065: RETURN   \l}"];
Node_26 [shape=record,label="{26\:\ 0x0066|0x0066: NEW_INSTANCE  (r5 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0068: CONST_STR  (r6 I:java.lang.String) =  \"Internal error with the back stack records\" \l0x006a: INVOKE  \l  (r5 I:java.lang.IllegalStateException)\l  (r6 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_27 [shape=record,label="{27\:\ 0x006d|0x006d: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ 0x006e|0x006e: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v4.app.FragmentManagerImpl.removeRedundantOperationsAndExecute((r4 'this' I:android.support.v4.app.FragmentManagerImpl A[IMMUTABLE_TYPE, THIS]), (r5 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.ArrayList\<java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/ArrayList\<, Landroid\/support\/v4\/app\/BackStackRecord;, \>;, Ljava\/util\/ArrayList\<, Ljava\/lang\/Boolean;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_28;
Node_1 -> Node_2;
Node_2 -> Node_4;
Node_2 -> Node_28[style=dashed];
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_26;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_26;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_23;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_22;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_21;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_15;
Node_21 -> Node_22;
Node_22 -> Node_8;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_26 -> Node_27;
}

