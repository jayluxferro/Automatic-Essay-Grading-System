digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.moveToState(IZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v4.app.FragmentHostCallback) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mHost android.support.v4.app.FragmentHostCallback \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: NEW_INSTANCE  (r4 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0009: CONST_STR  (r5 I:java.lang.String) =  \"No activity\" \l0x000b: INVOKE  \l  (r4 I:java.lang.IllegalStateException)\l  (r5 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0016 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IGET  (r5 I:int) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mCurState int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0016 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|0x0016: IPUT  \l  (r4 I:int)\l  (r3 I:android.support.v4.app.FragmentManagerImpl)\l android.support.v4.app.FragmentManagerImpl.mCurState int \l0x0018: IGET  (r4 I:android.util.SparseArray\<android.support.v4.app.Fragment\>) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mActive android.util.SparseArray \l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|0x001a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0070 \l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|0x001c: IGET  (r4 I:java.util.ArrayList\<android.support.v4.app.Fragment\>) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mAdded java.util.ArrayList \l0x001e: INVOKE  (r4 I:int) = (r4 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0022: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|0x0024: IF  (r0 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:15:0x0034 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0026|0x0026: IGET  (r1 I:java.util.ArrayList\<android.support.v4.app.Fragment\>) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mAdded java.util.ArrayList \l0x0028: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.ArrayList), (r0 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x002c: CHECK_CAST  (r1 I:android.support.v4.app.Fragment) = (android.support.v4.app.Fragment) (r1 I:?[OBJECT, ARRAY]) \l0x002e: INVOKE  \l  (r3 I:android.support.v4.app.FragmentManagerImpl)\l  (r1 I:android.support.v4.app.Fragment)\l android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(android.support.v4.app.Fragment):void type: VIRTUAL \l0x0031: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|0x0034: IGET  (r4 I:android.util.SparseArray\<android.support.v4.app.Fragment\>) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mActive android.util.SparseArray \l0x0036: INVOKE  (r4 I:int) = (r4 I:android.util.SparseArray) android.util.SparseArray.size():int type: VIRTUAL \l0x003a: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x003b|0x003b: IF  (r0 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:27:0x0059 \l}"];
Node_17 [shape=record,label="{17\:\ 0x003d|0x003d: IGET  (r1 I:android.util.SparseArray\<android.support.v4.app.Fragment\>) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mActive android.util.SparseArray \l0x003f: INVOKE  (r1 I:java.lang.Object) = (r1 I:android.util.SparseArray), (r0 I:int) android.util.SparseArray.valueAt(int):java.lang.Object type: VIRTUAL \l0x0043: CHECK_CAST  (r1 I:android.support.v4.app.Fragment) = (android.support.v4.app.Fragment) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0045|0x0045: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0056 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0047|0x0047: IGET  (r2 I:boolean) = (r1 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.mRemoving boolean \l}"];
Node_20 [shape=record,label="{20\:\ 0x0049|0x0049: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x004f \l}"];
Node_21 [shape=record,label="{21\:\ 0x004b|0x004b: IGET  (r2 I:boolean) = (r1 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.mDetached boolean \l}"];
Node_22 [shape=record,label="{22\:\ 0x004d|0x004d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0056 \l}"];
Node_23 [shape=record,label="{23\:\ 0x004f|0x004f: IGET  (r2 I:boolean) = (r1 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.mIsNewlyAdded boolean \l}"];
Node_24 [shape=record,label="{24\:\ 0x0051|0x0051: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0056 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0053|0x0053: INVOKE  \l  (r3 I:android.support.v4.app.FragmentManagerImpl)\l  (r1 I:android.support.v4.app.Fragment)\l android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(android.support.v4.app.Fragment):void type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0056|0x0056: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0059|0x0059: INVOKE  (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.startPendingDeferredFragments():void type: VIRTUAL \l0x005c: IGET  (r4 I:boolean) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mNeedMenuInvalidate boolean \l}"];
Node_28 [shape=record,label="{28\:\ 0x005e|0x005e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0070 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0060|0x0060: IGET  (r4 I:android.support.v4.app.FragmentHostCallback) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mHost android.support.v4.app.FragmentHostCallback \l}"];
Node_30 [shape=record,label="{30\:\ 0x0062|0x0062: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0070 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0064|0x0064: IGET  (r4 I:int) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mCurState int \l0x0066: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0067|0x0067: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0070 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0069|0x0069: IGET  (r4 I:android.support.v4.app.FragmentHostCallback) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mHost android.support.v4.app.FragmentHostCallback \l0x006b: INVOKE  (r4 I:android.support.v4.app.FragmentHostCallback) android.support.v4.app.FragmentHostCallback.onSupportInvalidateOptionsMenu():void type: VIRTUAL \l0x006e: IPUT  \l  (r5 I:boolean)\l  (r3 I:android.support.v4.app.FragmentManagerImpl)\l android.support.v4.app.FragmentManagerImpl.mNeedMenuInvalidate boolean \l}"];
Node_34 [shape=record,label="{34\:\ 0x0070|0x0070: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.v4.app.FragmentManagerImpl.moveToState((r3 'this' I:android.support.v4.app.FragmentManagerImpl A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_4;
Node_2 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_34;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_13;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_27;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_26;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_16;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_34;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
}

