digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.dispatchLowMemory()V" {
subgraph cluster_Region_1432723665 {
label = "R(2:0|(3:3|(1:5)(0)|6))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = 0\l}"];
subgraph cluster_LoopRegion_1928466366 {
label = "LOOP:0: (3:3|(1:5)(0)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|if (r0 \< r2.mAdded.size()) goto L_0x0009\l}"];
subgraph cluster_Region_1445502901 {
label = "R(3:3|(1:5)(0)|6)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|android.support.v4.app.Fragment android.support.p000v4.app.Fragment r1 = r2.mAdded.get(r0)\l}"];
subgraph cluster_IfRegion_1435155687 {
label = "IF [B:4:0x0011] THEN: R(1:5) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|if (r1 != null) goto L_0x0013\l}"];
subgraph cluster_Region_764538287 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|r1.performLowMemory()\l}"];
}
subgraph cluster_Region_1815063021 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_6 [shape=record,label="{6\:\ 0x0016|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:6:0x0016\l|r0++\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:6:0x0016] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:6:0x0016\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0019}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0019|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0016|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0016|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v4.app.FragmentManagerImpl.dispatchLowMemory((r2v0 'this' android.support.v4.app.FragmentManagerImpl A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_8[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_10[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_1;
Node_1 -> Node_2;
Node_8 -> Node_7;
Node_9 -> Node_6;
Node_10 -> Node_6;
}

