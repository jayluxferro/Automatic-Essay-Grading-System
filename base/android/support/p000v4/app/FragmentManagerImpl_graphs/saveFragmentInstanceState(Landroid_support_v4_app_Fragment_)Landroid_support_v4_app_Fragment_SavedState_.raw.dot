digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.saveFragmentInstanceState(Landroid\/support\/v4\/app\/Fragment;)Landroid\/support\/v4\/app\/Fragment$SavedState;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r4 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.mIndex int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0006: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0008: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000b: CONST_STR  (r2 I:java.lang.String) =  \"Fragment \" \l0x000d: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0010: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0013: CONST_STR  (r2 I:java.lang.String) =  \" is not currently in the FragmentManager\" \l0x0015: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0018: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x001c: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l0x001f: INVOKE  \l  (r3 I:android.support.v4.app.FragmentManagerImpl)\l  (r0 I:java.lang.RuntimeException)\l android.support.v4.app.FragmentManagerImpl.throwException(java.lang.RuntimeException):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|0x0022: IGET  (r0 I:int) = (r4 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.mState int \l0x0024: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:9:0x0033 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|0x0027: INVOKE  (r4 I:android.os.Bundle) = \l  (r3 I:android.support.v4.app.FragmentManagerImpl)\l  (r4 I:android.support.v4.app.Fragment)\l android.support.v4.app.FragmentManagerImpl.saveFragmentBasicState(android.support.v4.app.Fragment):android.os.Bundle type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|0x002b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0032 \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: NEW_INSTANCE  (r1 I:android.support.v4.app.Fragment$SavedState) =  android.support.v4.app.Fragment$SavedState \l0x002f: INVOKE  \l  (r1 I:android.support.v4.app.Fragment$SavedState)\l  (r4 I:android.os.Bundle)\l android.support.v4.app.Fragment.SavedState.\<init\>(android.os.Bundle):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|0x0032: RETURN  (r1 I:android.support.v4.app.Fragment$SavedState) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|0x0033: RETURN  (r1 I:android.support.v4.app.Fragment$SavedState) \l}"];
MethodNode[shape=record,label="{public android.support.v4.app.Fragment$SavedState android.support.v4.app.FragmentManagerImpl.saveFragmentInstanceState((r3 'this' I:android.support.v4.app.FragmentManagerImpl A[IMMUTABLE_TYPE, THIS]), (r4 I:android.support.v4.app.Fragment A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
}

