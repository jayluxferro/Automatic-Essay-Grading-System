digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.removeRedundantOperationsAndExecute(Ljava\/util\/ArrayList;Ljava\/util\/ArrayList;)V" {
subgraph cluster_Region_1386417159 {
label = "R(1:(1:(1:(2:(1:25)|(3:6|(2:(4:(1:11)|12|(1:(1:19))|20)(0)|21)|(1:(1:23)))))))";
node [shape=record,color=blue];
subgraph cluster_Region_1533579555 {
label = "R(1:(1:(2:(1:25)|(3:6|(2:(4:(1:11)|12|(1:(1:19))|20)(0)|21)|(1:(1:23))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_460989537 {
label = "IF [B:0:0x0000, B:2:0x0006] THEN: R(1:(2:(1:25)|(3:6|(2:(4:(1:11)|12|(1:(1:19))|20)(0)|21)|(1:(1:23))))) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 != null) goto L_0x0002\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|ADDED_TO_REGION\l|if (r5.isEmpty() != true) goto L_0x0009\l}"];
subgraph cluster_Region_498079798 {
label = "R(1:(2:(1:25)|(3:6|(2:(4:(1:11)|12|(1:(1:19))|20)(0)|21)|(1:(1:23)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1463418035 {
label = "R(2:(1:25)|(3:6|(2:(4:(1:11)|12|(1:(1:19))|20)(0)|21)|(1:(1:23))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1221037822 {
label = "IF [B:3:0x0009, B:5:0x0013] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r6 == null) goto L_0x0066\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|ADDED_TO_REGION\l|if (r5.size() != r6.size()) goto L_0x0066\l}"];
subgraph cluster_Region_47506091 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x006d|throw new java.lang.IllegalStateException(\"Internal error with the back stack records\")\l}"];
}
}
subgraph cluster_Region_867302031 {
label = "R(3:6|(2:(4:(1:11)|12|(1:(1:19))|20)(0)|21)|(1:(1:23)))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|executePostponedTransaction(r5, r6)\lint int r0 = r5.size()\lint r1 = 0\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_1676094226 {
label = "LOOP:0: (2:(4:(1:11)|12|(1:(1:19))|20)(0)|21)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001e|LOOP_START\lPHI: r1 r2 \l  PHI: (r1v2 int) = (r1v1 int), (r1v4 int) binds: [B:6:0x0015, B:21:0x005d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:6:0x0015, B:21:0x005d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x001e\-\>B:21:0x005d\l|if (r1 \< r0) goto L_0x0020\l}"];
subgraph cluster_Region_1833864376 {
label = "R(2:(4:(1:11)|12|(1:(1:19))|20)(0)|21)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_961294321 {
label = "IF [B:9:0x0028] THEN: R(4:(1:11)|12|(1:(1:19))|20) ELSE: R(0)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0028|if (r5.get(r1).mReorderingAllowed != true) goto L_0x002a\l}"];
subgraph cluster_Region_568511754 {
label = "R(4:(1:11)|12|(1:(1:19))|20)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1392200338 {
label = "IF [B:10:0x002a] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002a|if (r2 != r1) goto L_0x002c\l}"];
subgraph cluster_Region_1271478073 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002c|executeOpsTogether(r5, r6, r2, r1)\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x002f|int r2 = r1 + 1\l}"];
subgraph cluster_IfRegion_2096380375 {
label = "IF [B:13:0x003b] THEN: R(1:(1:19)) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x003b|if (r6.get(r1).booleanValue() == true) goto L_0x003d\l}"];
subgraph cluster_Region_532163439 {
label = "R(1:(1:19))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1086428215 {
label = "LOOP:1: (1:19)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x003d|LOOP_START\lPHI: r2 \l  PHI: (r2v5 int) = (r2v3 int), (r2v6 int) binds: [B:13:0x003b, B:19:0x0055] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:14:0x003d\-\>B:19:0x0055\l|if (r2 \< r0) goto L_0x003f\l}"];
subgraph cluster_Region_606052895 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0055|LOOP_END\lLOOP:1: B:14:0x003d\-\>B:19:0x0055\l|r2++\l}"];
}
}
}
}
Node_20 [shape=record,label="{20\:\ 0x0058|PHI: r2 \l  PHI: (r2v4 int) = (r2v3 int), (r2v5 int), (r2v5 int), (r2v5 int) binds: [B:13:0x003b, B:31:0x0058, B:30:0x0058, B:29:0x0058] A[DONT_GENERATE, DONT_INLINE]\l|executeOpsTogether(r5, r6, r1, r2)\lint r1 = r2 \- 1\l}"];
}
subgraph cluster_Region_125599823 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_21 [shape=record,label="{21\:\ 0x005d|LOOP_END\lPHI: r1 r2 \l  PHI: (r1v3 int) = (r1v2 int), (r1v5 int) binds: [B:28:0x005d, B:27:0x005d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 int) = (r2v1 int), (r2v4 int) binds: [B:28:0x005d, B:27:0x005d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x001e\-\>B:21:0x005d\l|r1++\l}"];
}
}
subgraph cluster_Region_1933073952 {
label = "R(1:(1:23))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_192051335 {
label = "IF [B:22:0x0060] THEN: R(1:23) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0060|if (r2 != r0) goto L_0x0062\l}"];
subgraph cluster_Region_933990116 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0062|executeOpsTogether(r5, r6, r2, r0)\l}"];
}
}
}
}
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000b}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0020}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x003f}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0049|ADDED_TO_REGION\l|if (r6.get(r2).booleanValue() != false) goto L_0x004b\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x004b}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0053|ADDED_TO_REGION\l|if (r5.get(r2).mReorderingAllowed == false) goto L_0x0055\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0066}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0060|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x005d|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x005d|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0058|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0058|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0058|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_32 [shape=record,color=red,label="{32\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_33 [shape=record,color=red,label="{33\:\ ?|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
Node_35 [shape=record,color=red,label="{35\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.v4.app.FragmentManagerImpl.removeRedundantOperationsAndExecute((r4v0 'this' android.support.v4.app.FragmentManagerImpl A[IMMUTABLE_TYPE, THIS]), (r5v0 java.util.ArrayList\<android.support.v4.app.BackStackRecord\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.util.ArrayList\<java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/ArrayList\<, Landroid\/support\/v4\/app\/BackStackRecord;, \>;, Ljava\/util\/ArrayList\<, Ljava\/lang\/Boolean;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_34[style=dashed];
Node_2 -> Node_3;
Node_2 -> Node_35[style=dashed];
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_24;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_24;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_26[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_28[style=dashed];
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_20[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_31[style=dashed];
Node_19 -> Node_14;
Node_20 -> Node_27;
Node_21 -> Node_7;
Node_22 -> Node_23;
Node_22 -> Node_33[style=dashed];
Node_23 -> Node_32;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_8 -> Node_9;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_30[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_29[style=dashed];
Node_24 -> Node_25;
Node_26 -> Node_22;
Node_27 -> Node_21;
Node_28 -> Node_21;
Node_29 -> Node_20;
Node_30 -> Node_20;
Node_31 -> Node_20;
}

