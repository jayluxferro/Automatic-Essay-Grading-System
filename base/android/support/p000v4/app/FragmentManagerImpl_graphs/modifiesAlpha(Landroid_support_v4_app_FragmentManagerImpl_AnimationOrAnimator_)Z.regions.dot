digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.modifiesAlpha(Landroid\/support\/v4\/app\/FragmentManagerImpl$AnimationOrAnimator;)Z" {
subgraph cluster_Region_797087907 {
label = "R(1:(2:(1:2)|(1:(2:(1:14)|(3:5|(1:(2:(1:10)|(1:11)))|12)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1823382264 {
label = "R(2:(1:2)|(1:(2:(1:14)|(3:5|(1:(2:(1:10)|(1:11)))|12))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1833753181 {
label = "IF [B:1:0x0005] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if ((r4.animation instanceof android.view.animation.AlphaAnimation) == true) goto L_0x0007\l}"];
subgraph cluster_Region_1820167568 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1468094268 {
label = "R(1:(2:(1:14)|(3:5|(1:(2:(1:10)|(1:11)))|12)))";
node [shape=record,color=blue];
subgraph cluster_Region_1331723886 {
label = "R(2:(1:14)|(3:5|(1:(2:(1:10)|(1:11)))|12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1156959213 {
label = "IF [B:4:0x000c] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|if ((r4.animation instanceof android.view.animation.AnimationSet) != true) goto L_0x002b\l}"];
subgraph cluster_Region_1155846126 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0031|RETURN\l|return modifiesAlpha(r4.animator)\l}"];
}
}
subgraph cluster_Region_1935389753 {
label = "R(3:5|(1:(2:(1:10)|(1:11)))|12)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|java.util.List java.util.List\<android.view.animation.Animation\> r4 = ((android.view.animation.AnimationSet) r4.animation).getAnimations()\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_236302954 {
label = "LOOP:0: (1:(2:(1:10)|(1:11)))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001c|if (r2 \< r4.size()) goto L_0x001e\l}"];
subgraph cluster_Region_427907321 {
label = "R(1:(2:(1:10)|(1:11)))";
node [shape=record,color=blue];
subgraph cluster_Region_1440667305 {
label = "R(2:(1:10)|(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1629653646 {
label = "IF [B:9:0x0024] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0024|if ((r4.get(r2) instanceof android.view.animation.AlphaAnimation) == true) goto L_0x0026\l}"];
subgraph cluster_Region_1058985308 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0026|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1155038674 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0027|LOOP_END\lLOOP:0: B:6:0x0018\-\>B:11:0x0027\l|r2++\l}"];
}
}
}
}
Node_12 [shape=record,label="{12\:\ 0x002a|RETURN\l|return false\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0008}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0018|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:5:0x000e, B:11:0x0027] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0018\-\>B:11:0x0027\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001e}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x002b}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0026|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x002a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static boolean android.support.v4.app.FragmentManagerImpl.modifiesAlpha((r4v0 android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_16[style=dashed];
Node_9 -> Node_11[style=dashed];
Node_9 -> Node_15;
Node_11 -> Node_6;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_13 -> Node_14;
Node_15 -> Node_10;
Node_16 -> Node_12;
}

