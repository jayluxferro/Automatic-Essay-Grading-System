digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.setPrimaryNavigationFragment(Landroid\/support\/v4\/app\/Fragment;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0036 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:android.util.SparseArray\<android.support.v4.app.Fragment\>) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mActive android.util.SparseArray \l0x0004: IGET  (r1 I:int) = (r4 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.mIndex int \l0x0006: INVOKE  (r0 I:java.lang.Object) = (r0 I:android.util.SparseArray), (r1 I:int) android.util.SparseArray.get(int):java.lang.Object type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0017 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IGET  (r0 I:android.support.v4.app.FragmentHostCallback) = (r4 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.mHost android.support.v4.app.FragmentHostCallback \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0036 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: INVOKE  (r0 I:android.support.v4.app.FragmentManager) = (r4 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.getFragmentManager():android.support.v4.app.FragmentManager type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0017 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0019: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001b: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001e: CONST_STR  (r2 I:java.lang.String) =  \"Fragment \" \l0x0020: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0023: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0026: CONST_STR  (r4 I:java.lang.String) =  \" is not an active fragment of FragmentManager \" \l0x0028: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002b: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x002e: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0032: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|0x0035: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: IPUT  \l  (r4 I:android.support.v4.app.Fragment)\l  (r3 I:android.support.v4.app.FragmentManagerImpl)\l android.support.v4.app.FragmentManagerImpl.mPrimaryNav android.support.v4.app.Fragment \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.app.FragmentManagerImpl.setPrimaryNavigationFragment((r3 'this' I:android.support.v4.app.FragmentManagerImpl A[IMMUTABLE_TYPE, THIS]), (r4 I:android.support.v4.app.Fragment A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_10[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_11;
}

