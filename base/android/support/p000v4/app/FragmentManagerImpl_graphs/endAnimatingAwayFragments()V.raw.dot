digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.endAnimatingAwayFragments()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.util.SparseArray\<android.support.v4.app.Fragment\>) = (r9 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mActive android.util.SparseArray \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IGET  (r0 I:android.util.SparseArray\<android.support.v4.app.Fragment\>) = (r9 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mActive android.util.SparseArray \l0x0009: INVOKE  (r0 I:int) = (r0 I:android.util.SparseArray) android.util.SparseArray.size():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:17:0x0050 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IGET  (r2 I:android.util.SparseArray\<android.support.v4.app.Fragment\>) = (r9 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mActive android.util.SparseArray \l0x0011: INVOKE  (r2 I:java.lang.Object) = (r2 I:android.util.SparseArray), (r1 I:int) android.util.SparseArray.valueAt(int):java.lang.Object type: VIRTUAL \l0x0015: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0016: CHECK_CAST  (r4 I:android.support.v4.app.Fragment) = (android.support.v4.app.Fragment) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x004d \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: INVOKE  (r2 I:android.view.View) = (r4 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.getAnimatingAway():android.view.View type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0040 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: INVOKE  (r5 I:int) = (r4 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.getStateAfterAnimating():int type: VIRTUAL \l0x0024: INVOKE  (r2 I:android.view.View) = (r4 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.getAnimatingAway():android.view.View type: VIRTUAL \l0x0028: INVOKE  (r3 I:android.view.animation.Animation) = (r2 I:android.view.View) android.view.View.getAnimation():android.view.animation.Animation type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0034 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: INVOKE  (r3 I:android.view.animation.Animation) android.view.animation.Animation.cancel():void type: VIRTUAL \l0x0031: INVOKE  (r2 I:android.view.View) android.view.View.clearAnimation():void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0035: INVOKE  \l  (r4 I:android.support.v4.app.Fragment)\l  (r2 I:android.view.View)\l android.support.v4.app.Fragment.setAnimatingAway(android.view.View):void type: VIRTUAL \l0x0038: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0039: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003a: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003b: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x003c: INVOKE  \l  (r3 I:android.support.v4.app.FragmentManagerImpl)\l  (r4 I:android.support.v4.app.Fragment)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:boolean)\l android.support.v4.app.FragmentManagerImpl.moveToState(android.support.v4.app.Fragment, int, int, int, boolean):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|0x0040: INVOKE  (r2 I:android.animation.Animator) = (r4 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.getAnimator():android.animation.Animator type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0044|0x0044: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x004d \l}"];
Node_15 [shape=record,label="{15\:\ 0x0046|0x0046: INVOKE  (r2 I:android.animation.Animator) = (r4 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.getAnimator():android.animation.Animator type: VIRTUAL \l0x004a: INVOKE  (r2 I:android.animation.Animator) android.animation.Animator.end():void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x004d|0x004d: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0050|0x0050: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v4.app.FragmentManagerImpl.endAnimatingAwayFragments((r9 'this' I:android.support.v4.app.FragmentManagerImpl A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_17;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_16;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_4;
}

