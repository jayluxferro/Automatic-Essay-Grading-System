digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.makeFadeAnimation(Landroid\/content\/Context;FF)Landroid\/support\/v4\/app\/FragmentManagerImpl$AnimationOrAnimator;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:android.view.animation.AlphaAnimation) =  android.view.animation.AlphaAnimation \l0x0002: INVOKE  \l  (r0 I:android.view.animation.AlphaAnimation)\l  (r1 I:float)\l  (r2 I:float)\l android.view.animation.AlphaAnimation.\<init\>(float, float):void type: DIRECT \l0x0005: SGET  (r1 I:android.view.animation.Interpolator) =  android.support.v4.app.FragmentManagerImpl.DECELERATE_CUBIC android.view.animation.Interpolator \l0x0007: INVOKE  \l  (r0 I:android.view.animation.AlphaAnimation)\l  (r1 I:android.view.animation.Interpolator)\l android.view.animation.AlphaAnimation.setInterpolator(android.view.animation.Interpolator):void type: VIRTUAL \l0x000a: CONST  (r1 I:?[long, double]) = (220(0xdc, double:1.087E\-321) ?[long, double]) \l0x000c: INVOKE  (r0 I:android.view.animation.AlphaAnimation), (r1 I:long) android.view.animation.AlphaAnimation.setDuration(long):void type: VIRTUAL \l0x000f: NEW_INSTANCE  (r1 I:android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator) =  android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator \l0x0011: INVOKE  \l  (r1 I:android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator)\l  (r0 I:android.view.animation.Animation)\l android.support.v4.app.FragmentManagerImpl.AnimationOrAnimator.\<init\>(android.view.animation.Animation):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: RETURN  \l  (r1 I:android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator)\l \l}"];
MethodNode[shape=record,label="{static android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator android.support.v4.app.FragmentManagerImpl.makeFadeAnimation((r0 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

