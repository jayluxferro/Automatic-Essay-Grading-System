digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.setBackStackIndex(ILandroid\/support\/v4\/app\/BackStackRecord;)V" {
subgraph cluster_Region_1123791064 {
label = "R(1:0)";
node [shape=record,color=blue];
subgraph cluster_SynchronizedRegion_441911549 {
label = "Synchronized:R(2:0|(3:(1:4)|5|(2:(1:9)|10)(3:(4:12|(1:14)|(1:17)(0)|18)|(1:21)|22)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
subgraph cluster_Region_850667667 {
label = "R(3:(1:4)|5|(2:(1:9)|10)(3:(4:12|(1:14)|(1:17)(0)|18)|(1:21)|22))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1227493859 {
label = "IF [B:3:0x0003] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r4.mBackStackIndices == null) goto L_0x0005\l}"];
subgraph cluster_Region_1632026427 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|r4.mBackStackIndices = new java.util.ArrayList\<\>()\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x000c|int int r0 = r4.mBackStackIndices.size()\l}"];
subgraph cluster_IfRegion_1424879439 {
label = "IF [B:6:0x0012] THEN: R(2:(1:9)|10) ELSE: R(3:(4:12|(1:14)|(1:17)(0)|18)|(1:21)|22)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0012|if (r5 \< r0) goto L_0x0014\l}"];
subgraph cluster_Region_2124721851 {
label = "R(2:(1:9)|10)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1544966514 {
label = "IF [B:8:0x0016] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0016|if (DEBUG == true) goto L_0x0018\l}"];
subgraph cluster_Region_1160439322 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0018|android.util.Log.v(TAG, \"Setting back stack index \" + r5 + \" to \" + r6)\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x0036|r4.mBackStackIndices.set(r5, r6)\l}"];
}
subgraph cluster_Region_289486563 {
label = "R(3:(4:12|(1:14)|(1:17)(0)|18)|(1:21)|22)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_561943728 {
label = "LOOP:0: (4:12|(1:14)|(1:17)(0)|18)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x003c|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v6 int) binds: [B:6:0x0012, B:18:0x0069] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:11:0x003c\-\>B:18:0x0069\l|if (r0 \< r5) goto L_0x003e\l}"];
subgraph cluster_Region_861856127 {
label = "R(4:12|(1:14)|(1:17)(0)|18)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x003e|r4.mBackStackIndices.add((java.lang.Object) null)\l}"];
subgraph cluster_IfRegion_1254851334 {
label = "IF [B:13:0x0046] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0046|if (r4.mAvailBackStackIndices == null) goto L_0x0048\l}"];
subgraph cluster_Region_607700716 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0048|r4.mAvailBackStackIndices = new java.util.ArrayList\<\>()\l}"];
}
}
subgraph cluster_IfRegion_909180487 {
label = "IF [B:16:0x0051] THEN: R(1:17) ELSE: R(0)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0051|if (DEBUG == true) goto L_0x0053\l}"];
subgraph cluster_Region_849199292 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0053|android.util.Log.v(TAG, \"Adding available back stack index \" + r0)\l}"];
}
subgraph cluster_Region_777924684 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_18 [shape=record,label="{18\:\ 0x0069|LOOP_END\lLOOP:0: B:11:0x003c\-\>B:18:0x0069\l|r4.mAvailBackStackIndices.add(java.lang.Integer.valueOf(r0))\lr0++\l}"];
}
}
subgraph cluster_IfRegion_941315378 {
label = "IF [B:20:0x0077] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0077|if (DEBUG == true) goto L_0x0079\l}"];
subgraph cluster_Region_1517742971 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0079|android.util.Log.v(TAG, \"Adding back stack index \" + r5 + \" with \" + r6)\l}"];
}
}
Node_22 [shape=record,label="{22\:\ 0x0097|r4.mBackStackIndices.add(r6)\l}"];
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0014}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x004f}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0075}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x009c|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x009c: MONITOR_EXIT  \l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x009d}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x009e|REMOVE\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x009f|REMOVE\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x00a0|REMOVE\l|throw r5\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0075|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0069|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0069|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v4.app.FragmentManagerImpl.setBackStackIndex((r4v0 'this' android.support.v4.app.FragmentManagerImpl A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 android.support.v4.app.BackStackRecord A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_11[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_23;
Node_11 -> Node_12;
Node_11 -> Node_28[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_30[style=dashed];
Node_17 -> Node_29;
Node_18 -> Node_11;
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_1 -> Node_2;
Node_1 -> Node_25;
Node_2 -> Node_3;
Node_7 -> Node_8;
Node_15 -> Node_16;
Node_19 -> Node_20;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_28 -> Node_19;
Node_29 -> Node_18;
Node_30 -> Node_18;
}

