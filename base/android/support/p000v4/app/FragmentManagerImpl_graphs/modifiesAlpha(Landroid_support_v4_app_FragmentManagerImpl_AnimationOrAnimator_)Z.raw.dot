digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.modifiesAlpha(Landroid\/support\/v4\/app\/FragmentManagerImpl$AnimationOrAnimator;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.view.animation.Animation) = \l  (r4 I:android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator)\l android.support.v4.app.FragmentManagerImpl.AnimationOrAnimator.animation android.view.animation.Animation \l0x0002: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) android.view.animation.AlphaAnimation \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:android.view.animation.Animation) = \l  (r4 I:android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator)\l android.support.v4.app.FragmentManagerImpl.AnimationOrAnimator.animation android.view.animation.Animation \l0x000a: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) android.view.animation.AnimationSet \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002b \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IGET  (r4 I:android.view.animation.Animation) = \l  (r4 I:android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator)\l android.support.v4.app.FragmentManagerImpl.AnimationOrAnimator.animation android.view.animation.Animation \l0x0010: CHECK_CAST  (r4 I:android.view.animation.AnimationSet) = (android.view.animation.AnimationSet) (r4 I:?[OBJECT, ARRAY]) \l0x0012: INVOKE  (r4 I:java.util.List) = (r4 I:android.view.animation.AnimationSet) android.view.animation.AnimationSet.getAnimations():java.util.List type: VIRTUAL \l0x0016: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0017: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: INVOKE  (r3 I:int) = (r4 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:12:0x002a \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: INVOKE  (r3 I:java.lang.Object) = (r4 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0022: INSTANCE_OF  (r3 I:boolean) = (r3 I:?[OBJECT, ARRAY]) android.view.animation.AlphaAnimation \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0027 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: RETURN  (r1 I:boolean) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: RETURN  (r0 I:boolean) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: IGET  (r4 I:android.animation.Animator) = \l  (r4 I:android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator)\l android.support.v4.app.FragmentManagerImpl.AnimationOrAnimator.animator android.animation.Animator \l0x002d: INVOKE  (r4 I:boolean) = (r4 I:android.animation.Animator) android.support.v4.app.FragmentManagerImpl.modifiesAlpha(android.animation.Animator):boolean type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|0x0031: RETURN  (r4 I:boolean) \l}"];
MethodNode[shape=record,label="{static boolean android.support.v4.app.FragmentManagerImpl.modifiesAlpha((r4 I:android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_6;
Node_13 -> Node_14;
}

