digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.unregisterFragmentLifecycleCallbacks(Landroid\/support\/v4\/app\/FragmentManager$FragmentLifecycleCallbacks;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.concurrent.CopyOnWriteArrayList\<android.support.v4.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder\> r0 = r4.mLifecycleCallbacks\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|monitor\-enter(r0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|r1 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|SYNTHETIC\l}"];
Node_4 [shape=record,label="{4\:\ ?|int r2 = r4.mLifecycleCallbacks.size()\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:4:?, B:9:0x001e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x000a\-\>B:9:0x001e\l|if (r1 \>= r2) goto L_0x0021\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c}"];
Node_7 [shape=record,label="{7\:\ 0x0016|if (r4.mLifecycleCallbacks.get(r1).mCallback != r5) goto L_0x001e\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|r4.mLifecycleCallbacks.remove(r1)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|LOOP_END\lLOOP:0: B:5:0x000a\-\>B:9:0x001e\l|int r1 = r1 + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|monitor\-exit(r0)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|REMOVE\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|REMOVE\l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|REMOVE\l|throw r5\l}"];
Node_15 [shape=record,label="{15\:\ 0x0018|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0021|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v4.app.FragmentManagerImpl.unregisterFragmentLifecycleCallbacks((r4v0 'this' android.support.v4.app.FragmentManagerImpl A[IMMUTABLE_TYPE, THIS]), (r5v0 android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_16;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_15[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_5;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_8;
Node_16 -> Node_10;
}

