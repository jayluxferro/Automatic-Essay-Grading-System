digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.setBackStackIndex(ILandroid\/support\/v4\/app\/BackStackRecord;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?}"];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r4.mBackStackIndices != null) goto L_0x000c\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|r4.mBackStackIndices = new java.util.ArrayList\<\>()\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|int r0 = r4.mBackStackIndices.size()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|if (r5 \>= r0) goto L_0x003c\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014}"];
Node_8 [shape=record,label="{8\:\ 0x0016|if (DEBUG == false) goto L_0x0036\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|java.lang.StringBuilder r1 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr1.append(\"Setting back stack index \")\lr1.append(r5)\lr1.append(\" to \")\lr1.append(r6)\landroid.util.Log.v(TAG, r1.toString())\l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|r4.mBackStackIndices.set(r5, r6)\l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v6 int) binds: [B:6:0x0012, B:18:0x0069] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:11:0x003c\-\>B:18:0x0069\l|if (r0 \>= r5) goto L_0x0075\l}"];
Node_12 [shape=record,label="{12\:\ 0x003e|r4.mBackStackIndices.add((java.lang.Object) null)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|if (r4.mAvailBackStackIndices != null) goto L_0x004f\l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|r4.mAvailBackStackIndices = new java.util.ArrayList\<\>()\l}"];
Node_15 [shape=record,label="{15\:\ 0x004f}"];
Node_16 [shape=record,label="{16\:\ 0x0051|if (DEBUG == false) goto L_0x0069\l}"];
Node_17 [shape=record,label="{17\:\ 0x0053|java.lang.StringBuilder r2 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr2.append(\"Adding available back stack index \")\lr2.append(r0)\landroid.util.Log.v(TAG, r2.toString())\l}"];
Node_18 [shape=record,label="{18\:\ 0x0069|LOOP_END\lLOOP:0: B:11:0x003c\-\>B:18:0x0069\l|r4.mAvailBackStackIndices.add(java.lang.Integer.valueOf(r0))\lint r0 = r0 + 1\l}"];
Node_19 [shape=record,label="{19\:\ 0x0075}"];
Node_20 [shape=record,label="{20\:\ 0x0077|if (DEBUG == false) goto L_0x0097\l}"];
Node_21 [shape=record,label="{21\:\ 0x0079|java.lang.StringBuilder r1 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr1.append(\"Adding back stack index \")\lr1.append(r5)\lr1.append(\" with \")\lr1.append(r6)\landroid.util.Log.v(TAG, r1.toString())\l}"];
Node_22 [shape=record,label="{22\:\ 0x0097|r4.mBackStackIndices.add(r6)\l}"];
Node_23 [shape=record,label="{23\:\ 0x009c|monitor\-exit(r4)\l}"];
Node_24 [shape=record,label="{24\:\ 0x009d|RETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ 0x009e|REMOVE\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_26 [shape=record,label="{26\:\ 0x009f|REMOVE\l}"];
Node_27 [shape=record,label="{27\:\ 0x00a0|REMOVE\l|throw r5\l}"];
Node_28 [shape=record,label="{28\:\ 0x0075|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0069|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0069|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v4.app.FragmentManagerImpl.setBackStackIndex((r4v0 'this' android.support.v4.app.FragmentManagerImpl A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 android.support.v4.app.BackStackRecord A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_25;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_23;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_28;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_30;
Node_17 -> Node_29;
Node_18 -> Node_11;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_28 -> Node_19;
Node_29 -> Node_18;
Node_30 -> Node_18;
}

