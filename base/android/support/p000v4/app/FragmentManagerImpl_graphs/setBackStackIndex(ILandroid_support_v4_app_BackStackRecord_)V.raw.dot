digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.setBackStackIndex(ILandroid\/support\/v4\/app\/BackStackRecord;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\>) = (r4 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mBackStackIndices java.util.ArrayList A[Catch:\{ all \-\> 0x009e \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000c A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList A[Catch:\{ all \-\> 0x009e \}]\l0x0007: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x009e \}]\l0x000a: IPUT  \l  (r0 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\>)\l  (r4 I:android.support.v4.app.FragmentManagerImpl)\l android.support.v4.app.FragmentManagerImpl.mBackStackIndices java.util.ArrayList A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IGET  (r0 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\>) = (r4 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mBackStackIndices java.util.ArrayList A[Catch:\{ all \-\> 0x009e \}]\l0x000e: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IF  (r5 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:11:0x003c A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: SGET  (r0 I:boolean) =  android.support.v4.app.FragmentManagerImpl.DEBUG boolean A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0036 A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: CONST_STR  (r0 I:java.lang.String) =  \"FragmentManager\" A[Catch:\{ all \-\> 0x009e \}]\l0x001a: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x009e \}]\l0x001c: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x009e \}]\l0x001f: CONST_STR  (r2 I:java.lang.String) =  \"Setting back stack index \" A[Catch:\{ all \-\> 0x009e \}]\l0x0021: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l0x0024: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l0x0027: CONST_STR  (r2 I:java.lang.String) =  \" to \" A[Catch:\{ all \-\> 0x009e \}]\l0x0029: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l0x002c: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l0x002f: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l0x0033: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.v(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: IGET  (r0 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\>) = (r4 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mBackStackIndices java.util.ArrayList A[Catch:\{ all \-\> 0x009e \}]\l0x0038: INVOKE  \l  (r0 I:java.util.ArrayList)\l  (r5 I:int)\l  (r6 I:java.lang.Object)\l java.util.ArrayList.set(int, java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l0x003b: GOTO  \-\> 0x009c A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|0x003c: IF  (r0 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:19:0x0075 A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x003e|0x003e: IGET  (r1 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\>) = (r4 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mBackStackIndices java.util.ArrayList A[Catch:\{ all \-\> 0x009e \}]\l0x0040: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x009e \}]\l0x0041: INVOKE  (r1 I:java.util.ArrayList), (r2 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l0x0044: IGET  (r1 I:java.util.ArrayList\<java.lang.Integer\>) = (r4 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mAvailBackStackIndices java.util.ArrayList A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|0x0046: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x004f A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|0x0048: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList A[Catch:\{ all \-\> 0x009e \}]\l0x004a: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x009e \}]\l0x004d: IPUT  \l  (r1 I:java.util.ArrayList\<java.lang.Integer\>)\l  (r4 I:android.support.v4.app.FragmentManagerImpl)\l android.support.v4.app.FragmentManagerImpl.mAvailBackStackIndices java.util.ArrayList A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|0x004f: SGET  (r1 I:boolean) =  android.support.v4.app.FragmentManagerImpl.DEBUG boolean A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0051|0x0051: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0069 A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0053|0x0053: CONST_STR  (r1 I:java.lang.String) =  \"FragmentManager\" A[Catch:\{ all \-\> 0x009e \}]\l0x0055: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x009e \}]\l0x0057: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x009e \}]\l0x005a: CONST_STR  (r3 I:java.lang.String) =  \"Adding available back stack index \" A[Catch:\{ all \-\> 0x009e \}]\l0x005c: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l0x005f: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l0x0062: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l0x0066: INVOKE  (r1 I:java.lang.String), (r2 I:java.lang.String) android.util.Log.v(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0069|0x0069: IGET  (r1 I:java.util.ArrayList\<java.lang.Integer\>) = (r4 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mAvailBackStackIndices java.util.ArrayList A[Catch:\{ all \-\> 0x009e \}]\l0x006b: INVOKE  (r2 I:java.lang.Integer) = (r0 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ all \-\> 0x009e \}]\l0x006f: INVOKE  (r1 I:java.util.ArrayList), (r2 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l0x0072: ARITH  (r0 I:int) = (r0 I:int) + (1 int) A[Catch:\{ all \-\> 0x009e \}]\l0x0074: GOTO  \-\> 0x003c A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0075|0x0075: SGET  (r0 I:boolean) =  android.support.v4.app.FragmentManagerImpl.DEBUG boolean A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0077|0x0077: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0097 A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0079|0x0079: CONST_STR  (r0 I:java.lang.String) =  \"FragmentManager\" A[Catch:\{ all \-\> 0x009e \}]\l0x007b: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x009e \}]\l0x007d: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x009e \}]\l0x0080: CONST_STR  (r2 I:java.lang.String) =  \"Adding back stack index \" A[Catch:\{ all \-\> 0x009e \}]\l0x0082: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l0x0085: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l0x0088: CONST_STR  (r5 I:java.lang.String) =  \" with \" A[Catch:\{ all \-\> 0x009e \}]\l0x008a: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l0x008d: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l0x0090: INVOKE  (r5 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l0x0094: INVOKE  (r0 I:java.lang.String), (r5 I:java.lang.String) android.util.Log.v(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0097|0x0097: IGET  (r5 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\>) = (r4 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mBackStackIndices java.util.ArrayList A[Catch:\{ all \-\> 0x009e \}]\l0x0099: INVOKE  (r5 I:java.util.ArrayList), (r6 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x009c|0x009c: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x009d|0x009d: RETURN   A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x009e|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x009e: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x009e \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x009f|0x009f: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x009e \}, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x00a0|0x00a0: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.v4.app.FragmentManagerImpl.setBackStackIndex((r4 'this' I:android.support.v4.app.FragmentManagerImpl A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.support.v4.app.BackStackRecord A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_25;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_23;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27;
}

