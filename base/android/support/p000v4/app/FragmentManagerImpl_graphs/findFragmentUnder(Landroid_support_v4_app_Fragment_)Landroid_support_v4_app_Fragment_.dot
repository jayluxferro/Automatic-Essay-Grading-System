digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.findFragmentUnder(Landroid\/support\/v4\/app\/Fragment;)Landroid\/support\/v4\/app\/Fragment;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.view.ViewGroup r0 = r5.mContainer\landroid.view.View r1 = r5.mView\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r0 == null) goto L_0x0029\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|if (r1 != null) goto L_0x000a\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|int r5 = r4.mAdded.indexOf(r5) + \-1\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|LOOP_START\lPHI: r5 \l  PHI: (r5v3 int) = (r5v2 int), (r5v4 int) binds: [B:3:0x000a, B:10:0x0025] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0012\-\>B:10:0x0025\l|if (r5 \< 0) goto L_0x0028\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|android.support.v4.app.Fragment r1 = r4.mAdded.get(r5)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|if (r1.mContainer != r0) goto L_0x0025\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020}"];
Node_8 [shape=record,label="{8\:\ 0x0022|if (r1.mView == null) goto L_0x0025\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|RETURN\l|return r1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|LOOP_END\lLOOP:0: B:4:0x0012\-\>B:10:0x0025\l|int r5 = r5 + \-1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|RETURN\l|return null\l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|RETURN\l|return null\l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0025|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private android.support.v4.app.Fragment android.support.v4.app.FragmentManagerImpl.findFragmentUnder((r4v0 'this' android.support.v4.app.FragmentManagerImpl A[IMMUTABLE_TYPE, THIS]), (r5v0 android.support.v4.app.Fragment A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_2 -> Node_12[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_14[style=dashed];
Node_8 -> Node_16;
Node_10 -> Node_4;
Node_13 -> Node_11;
Node_14 -> Node_9;
Node_15 -> Node_10;
Node_16 -> Node_10;
}

