digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.generateOpsForPendingActions(Ljava\/util\/ArrayList;Ljava\/util\/ArrayList;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:java.util.ArrayList\<android.support.v4.app.FragmentManagerImpl$OpGenerator\>) = (r4 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mPendingActions java.util.ArrayList A[Catch:\{ all \-\> 0x003c \}, TRY_ENTER]\l0x0003: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x003a A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IGET  (r0 I:java.util.ArrayList\<android.support.v4.app.FragmentManagerImpl$OpGenerator\>) = (r4 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mPendingActions java.util.ArrayList A[Catch:\{ all \-\> 0x003c \}]\l0x0008: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000f A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: GOTO  \-\> 0x003a A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: IGET  (r0 I:java.util.ArrayList\<android.support.v4.app.FragmentManagerImpl$OpGenerator\>) = (r4 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mPendingActions java.util.ArrayList A[Catch:\{ all \-\> 0x003c \}]\l0x0011: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL A[Catch:\{ all \-\> 0x003c \}]\l0x0015: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:10:0x0028 A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: IGET  (r3 I:java.util.ArrayList\<android.support.v4.app.FragmentManagerImpl$OpGenerator\>) = (r4 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mPendingActions java.util.ArrayList A[Catch:\{ all \-\> 0x003c \}]\l0x001a: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.ArrayList), (r1 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x003c \}]\l0x001e: CHECK_CAST  (r3 I:android.support.v4.app.FragmentManagerImpl$OpGenerator) = (android.support.v4.app.FragmentManagerImpl$OpGenerator) (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003c \}]\l0x0020: INVOKE  (r3 I:boolean) = \l  (r3 I:android.support.v4.app.FragmentManagerImpl$OpGenerator)\l  (r5 I:java.util.ArrayList)\l  (r6 I:java.util.ArrayList)\l android.support.v4.app.FragmentManagerImpl.OpGenerator.generateOps(java.util.ArrayList, java.util.ArrayList):boolean type: INTERFACE A[Catch:\{ all \-\> 0x003c \}]\l0x0024: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) \| (r3 I:?[int, boolean, short, byte, char]) A[Catch:\{ all \-\> 0x003c \}]\l0x0025: ARITH  (r1 I:int) = (r1 I:int) + (1 int) A[Catch:\{ all \-\> 0x003c \}]\l0x0027: GOTO  \-\> 0x0016 A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: IGET  (r5 I:java.util.ArrayList\<android.support.v4.app.FragmentManagerImpl$OpGenerator\>) = (r4 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mPendingActions java.util.ArrayList A[Catch:\{ all \-\> 0x003c \}]\l0x002a: INVOKE  (r5 I:java.util.ArrayList) java.util.ArrayList.clear():void type: VIRTUAL A[Catch:\{ all \-\> 0x003c \}]\l0x002d: IGET  (r5 I:android.support.v4.app.FragmentHostCallback) = (r4 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mHost android.support.v4.app.FragmentHostCallback A[Catch:\{ all \-\> 0x003c \}]\l0x002f: INVOKE  (r5 I:android.os.Handler) = (r5 I:android.support.v4.app.FragmentHostCallback) android.support.v4.app.FragmentHostCallback.getHandler():android.os.Handler type: VIRTUAL A[Catch:\{ all \-\> 0x003c \}]\l0x0033: IGET  (r6 I:java.lang.Runnable) = (r4 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mExecCommit java.lang.Runnable A[Catch:\{ all \-\> 0x003c \}]\l0x0035: INVOKE  (r5 I:android.os.Handler), (r6 I:java.lang.Runnable) android.os.Handler.removeCallbacks(java.lang.Runnable):void type: VIRTUAL A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|0x0039: RETURN  (r2 I:boolean) A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|0x003a: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|0x003b: RETURN  (r1 I:boolean) A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x003c: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|0x003d: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003c \}, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x003e|0x003e: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private boolean android.support.v4.app.FragmentManagerImpl.generateOpsForPendingActions((r4 'this' I:android.support.v4.app.FragmentManagerImpl A[IMMUTABLE_TYPE, THIS]), (r5 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.ArrayList\<java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/ArrayList\<, Landroid\/support\/v4\/app\/BackStackRecord;, \>;, Ljava\/util\/ArrayList\<, Ljava\/lang\/Boolean;, \>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_8;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

