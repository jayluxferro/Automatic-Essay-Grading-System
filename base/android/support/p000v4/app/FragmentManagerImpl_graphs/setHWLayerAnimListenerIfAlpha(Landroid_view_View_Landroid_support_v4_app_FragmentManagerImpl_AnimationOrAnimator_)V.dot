digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.setHWLayerAnimListenerIfAlpha(Landroid\/view\/View;Landroid\/support\/v4\/app\/FragmentManagerImpl$AnimationOrAnimator;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r3 == null) goto L_?\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4 != null) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if (shouldRunOnHWLayer(r3, r4) == false) goto L_?\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b}"];
Node_5 [shape=record,label="{5\:\ 0x000d|if (r4.animator == null) goto L_0x001a\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|r4.animator.addListener(new android.support.p000v4.app.FragmentManagerImpl.AnimatorOnHWLayerIfNeededListener(r3))\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|android.view.animation.Animation$AnimationListener r0 = getAnimationListener(r4.animation)\lr3.setLayerType(2, (android.graphics.Paint) null)\lr4.animation.setAnimationListener(new android.support.p000v4.app.FragmentManagerImpl.AnimateOnHWLayerIfNeededListener(r3, r0))\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private static void android.support.v4.app.FragmentManagerImpl.setHWLayerAnimListenerIfAlpha((r3v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_11;
Node_1 -> Node_2;
Node_1 -> Node_12[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_10;
Node_7 -> Node_8;
}

