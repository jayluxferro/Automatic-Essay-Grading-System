digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.modifiesAlpha(Landroid\/animation\/Animator;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INSTANCE_OF  (r1 I:boolean) = (r5 I:?[OBJECT, ARRAY]) android.animation.ValueAnimator \l0x0006: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0025 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: CHECK_CAST  (r5 I:android.animation.ValueAnimator) = (android.animation.ValueAnimator) (r5 I:?[OBJECT, ARRAY]) \l0x000b: INVOKE  (r5 I:android.animation.PropertyValuesHolder[]) = (r5 I:android.animation.ValueAnimator) android.animation.ValueAnimator.getValues():android.animation.PropertyValuesHolder[] type: VIRTUAL \l0x000f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: ARRAY_LENGTH  (r3 I:int) = (r5 I:?[]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IF  (r1 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:21:0x0046 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: CONST_STR  (r3 I:java.lang.String) =  \"alpha\" \l0x0015: AGET  (r4 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0017: INVOKE  (r4 I:java.lang.String) = (r4 I:android.animation.PropertyValuesHolder) android.animation.PropertyValuesHolder.getPropertyName():java.lang.String type: VIRTUAL \l0x001b: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0022 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: RETURN  (r2 I:boolean) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|0x0025: INSTANCE_OF  (r1 I:boolean) = (r5 I:?[OBJECT, ARRAY]) android.animation.AnimatorSet \l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|0x0027: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0046 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|0x0029: CHECK_CAST  (r5 I:android.animation.AnimatorSet) = (android.animation.AnimatorSet) (r5 I:?[OBJECT, ARRAY]) \l0x002b: INVOKE  (r5 I:java.util.ArrayList) = (r5 I:android.animation.AnimatorSet) android.animation.AnimatorSet.getChildAnimations():java.util.ArrayList type: VIRTUAL \l0x002f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0030|0x0030: INVOKE  (r3 I:int) = (r5 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|0x0034: IF  (r1 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:21:0x0046 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|0x0036: INVOKE  (r3 I:java.lang.Object) = (r5 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x003a: CHECK_CAST  (r3 I:android.animation.Animator) = (android.animation.Animator) (r3 I:?[OBJECT, ARRAY]) \l0x003c: INVOKE  (r3 I:boolean) = (r3 I:android.animation.Animator) android.support.v4.app.FragmentManagerImpl.modifiesAlpha(android.animation.Animator):boolean type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x0040|0x0040: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0043 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0042|0x0042: RETURN  (r2 I:boolean) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0043|0x0043: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0046|0x0046: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{static boolean android.support.v4.app.FragmentManagerImpl.modifiesAlpha((r5 I:android.animation.Animator A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_6;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_21;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_20 -> Node_15;
}

