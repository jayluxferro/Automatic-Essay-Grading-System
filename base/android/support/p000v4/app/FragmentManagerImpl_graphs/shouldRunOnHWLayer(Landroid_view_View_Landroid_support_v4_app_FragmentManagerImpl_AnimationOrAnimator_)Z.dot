digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.shouldRunOnHWLayer(Landroid\/view\/View;Landroid\/support\/v4\/app\/FragmentManagerImpl$AnimationOrAnimator;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r3 == null) goto L_0x0020\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|if (r4 != null) goto L_0x0006\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006}"];
Node_4 [shape=record,label="{4\:\ 0x000a|if (android.os.Build.VERSION.SDK_INT \< 19) goto L_?\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c}"];
Node_6 [shape=record,label="{6\:\ 0x0010|if (r3.getLayerType() != 0) goto L_?\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012}"];
Node_8 [shape=record,label="{8\:\ 0x0016|if (android.support.p000v4.view.ViewCompat.hasOverlappingRendering(r3) == false) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018}"];
Node_10 [shape=record,label="{10\:\ 0x001c|if (modifiesAlpha(r4) == false) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|RETURN\l|return false\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{static boolean android.support.v4.app.FragmentManagerImpl.shouldRunOnHWLayer((r3v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_2 -> Node_12[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
}

