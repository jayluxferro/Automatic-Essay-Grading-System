digraph "CFG forandroid.support.v4.app.FragmentManagerImpl.findFragmentByTag(Ljava\/lang\/String;)Landroid\/support\/v4\/app\/Fragment;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0022 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:java.util.ArrayList\<android.support.v4.app.Fragment\>) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mAdded java.util.ArrayList \l0x0004: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0008: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:9:0x0022 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IGET  (r1 I:java.util.ArrayList\<android.support.v4.app.Fragment\>) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mAdded java.util.ArrayList \l0x000e: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.ArrayList), (r0 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0012: CHECK_CAST  (r1 I:android.support.v4.app.Fragment) = (android.support.v4.app.Fragment) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IGET  (r2 I:java.lang.String) = (r1 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.mTag java.lang.String \l0x0018: INVOKE  (r2 I:boolean) = (r4 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: RETURN  (r1 I:android.support.v4.app.Fragment) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: IGET  (r0 I:android.util.SparseArray\<android.support.v4.app.Fragment\>) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mActive android.util.SparseArray \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0048 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0048 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: IGET  (r0 I:android.util.SparseArray\<android.support.v4.app.Fragment\>) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mActive android.util.SparseArray \l0x002a: INVOKE  (r0 I:int) = (r0 I:android.util.SparseArray) android.util.SparseArray.size():int type: VIRTUAL \l0x002e: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|0x0030: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:20:0x0048 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: IGET  (r1 I:android.util.SparseArray\<android.support.v4.app.Fragment\>) = (r3 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.mActive android.util.SparseArray \l0x0034: INVOKE  (r1 I:java.lang.Object) = (r1 I:android.util.SparseArray), (r0 I:int) android.util.SparseArray.valueAt(int):java.lang.Object type: VIRTUAL \l0x0038: CHECK_CAST  (r1 I:android.support.v4.app.Fragment) = (android.support.v4.app.Fragment) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x003a|0x003a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0045 \l}"];
Node_16 [shape=record,label="{16\:\ 0x003c|0x003c: IGET  (r2 I:java.lang.String) = (r1 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.mTag java.lang.String \l0x003e: INVOKE  (r2 I:boolean) = (r4 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|0x0042: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0045 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0044|0x0044: RETURN  (r1 I:android.support.v4.app.Fragment) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0045|0x0045: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0048|0x0048: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x0049|0x0049: RETURN  (r4 I:android.support.v4.app.Fragment) \l}"];
MethodNode[shape=record,label="{public android.support.v4.app.Fragment android.support.v4.app.FragmentManagerImpl.findFragmentByTag((r3 'this' I:android.support.v4.app.FragmentManagerImpl A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_9;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_2;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_20;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_20;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_19 -> Node_13;
Node_20 -> Node_21;
}

