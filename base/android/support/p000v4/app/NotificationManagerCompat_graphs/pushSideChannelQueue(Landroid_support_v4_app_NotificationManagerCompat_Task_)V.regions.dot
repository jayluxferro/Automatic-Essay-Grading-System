digraph "CFG forandroid.support.v4.app.NotificationManagerCompat.pushSideChannelQueue(Landroid\/support\/v4\/app\/NotificationManagerCompat$Task;)V" {
subgraph cluster_Region_336353980 {
label = "R(2:0|2)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
subgraph cluster_SynchronizedRegion_2105459902 {
label = "Synchronized:R(2:1|(2:(1:5)|6))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
subgraph cluster_Region_2034301013 {
label = "R(2:(1:5)|6)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1107798348 {
label = "IF [B:4:0x0005] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|if (sSideChannelManager == null) goto L_0x0007\l}"];
subgraph cluster_Region_883474954 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0007|sSideChannelManager = new android.support.p000v4.app.NotificationManagerCompat.SideChannelManager(r3.mContext.getApplicationContext())\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0014|sSideChannelManager.queueTask(r4)\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,color=red,label="{3\:\ ?}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0019|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x0019: MONITOR_EXIT  \l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001a}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001b|REMOVE\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001c|REMOVE\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001d|REMOVE\l|throw r4\l}"];
MethodNode[shape=record,label="{private void android.support.v4.app.NotificationManagerCompat.pushSideChannelQueue((r3v0 'this' android.support.v4.app.NotificationManagerCompat A[IMMUTABLE_TYPE, THIS]), (r4v0 android.support.v4.app.NotificationManagerCompat$Task A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

