digraph "CFG forandroid.support.v4.app.LoaderManagerImpl.LoaderInfo.setCallback(Landroid\/arch\/lifecycle\/LifecycleOwner;Landroid\/support\/v4\/app\/LoaderManager$LoaderCallbacks;)Landroid\/support\/v4\/content\/Loader;" {
subgraph cluster_Region_1728231593 {
label = "R(4:0|(1:2)|3|4)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.support.v4.app.LoaderManagerImpl$LoaderObserver android.support.p000v4.app.LoaderManagerImpl.LoaderObserver\<D\> r0 = new android.support.p000v4.app.LoaderManagerImpl.LoaderObserver\<\>(r2.mLoader, r4)\lobserve(r3, r0)\l}"];
subgraph cluster_IfRegion_1198348135 {
label = "IF [B:1:0x000c] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000c|if (r2.mObserver != null) goto L_0x000e\l}"];
subgraph cluster_Region_730202246 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000e|removeObserver(r2.mObserver)\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0013|r2.mLifecycleOwner = r3\lr2.mObserver = r0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|RETURN\l|return r2.mLoader\l}"];
}
MethodNode[shape=record,label="{android.support.v4.content.Loader\<D\> android.support.v4.app.LoaderManagerImpl.LoaderInfo.setCallback((r2v0 'this' android.support.v4.app.LoaderManagerImpl$LoaderInfo A[IMMUTABLE_TYPE, THIS]), (r3v0 android.arch.lifecycle.LifecycleOwner A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.support.v4.app.LoaderManager$LoaderCallbacks\<D\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.MainThread, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/arch\/lifecycle\/LifecycleOwner;, Landroid\/support\/v4\/app\/LoaderManager$LoaderCallbacks\<, TD;\>;), Landroid\/support\/v4\/content\/Loader\<, TD;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
}

