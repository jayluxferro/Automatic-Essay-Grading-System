digraph "CFG forandroid.support.v4.app.INotificationSideChannel.Stub.onTransact(ILandroid\/os\/Parcel;Landroid\/os\/Parcel;I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1598968902(0x5f4e5446, float:1.4867585E19) ?[int, float, short, byte, char])\l \l0x0003: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0055 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3] t:[0x0030, 0x001b, 0x000e] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: INVOKE  (r3 I:boolean) = \l  (r2 I:android.os.Binder)\l  (r3 I:int)\l  (r4 I:android.os.Parcel)\l  (r5 I:android.os.Parcel)\l  (r6 I:int)\l android.os.Binder.onTransact(int, android.os.Parcel, android.os.Parcel, int):boolean type: SUPER \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: RETURN  (r3 I:boolean) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: CONST_STR  (r3 I:java.lang.String) =  \"android.support.v4.app.INotificationSideChannel\" \l0x0010: INVOKE  (r4 I:android.os.Parcel), (r3 I:java.lang.String) android.os.Parcel.enforceInterface(java.lang.String):void type: VIRTUAL \l0x0013: INVOKE  (r3 I:java.lang.String) = (r4 I:android.os.Parcel) android.os.Parcel.readString():java.lang.String type: VIRTUAL \l0x0017: INVOKE  \l  (r2 I:android.support.v4.app.INotificationSideChannel$Stub)\l  (r3 I:java.lang.String)\l android.support.v4.app.INotificationSideChannel.Stub.cancelAll(java.lang.String):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: RETURN  (r1 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: CONST_STR  (r3 I:java.lang.String) =  \"android.support.v4.app.INotificationSideChannel\" \l0x001d: INVOKE  (r4 I:android.os.Parcel), (r3 I:java.lang.String) android.os.Parcel.enforceInterface(java.lang.String):void type: VIRTUAL \l0x0020: INVOKE  (r3 I:java.lang.String) = (r4 I:android.os.Parcel) android.os.Parcel.readString():java.lang.String type: VIRTUAL \l0x0024: INVOKE  (r5 I:int) = (r4 I:android.os.Parcel) android.os.Parcel.readInt():int type: VIRTUAL \l0x0028: INVOKE  (r4 I:java.lang.String) = (r4 I:android.os.Parcel) android.os.Parcel.readString():java.lang.String type: VIRTUAL \l0x002c: INVOKE  \l  (r2 I:android.support.v4.app.INotificationSideChannel$Stub)\l  (r3 I:java.lang.String)\l  (r5 I:int)\l  (r4 I:java.lang.String)\l android.support.v4.app.INotificationSideChannel.Stub.cancel(java.lang.String, int, java.lang.String):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: RETURN  (r1 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: CONST_STR  (r3 I:java.lang.String) =  \"android.support.v4.app.INotificationSideChannel\" \l0x0032: INVOKE  (r4 I:android.os.Parcel), (r3 I:java.lang.String) android.os.Parcel.enforceInterface(java.lang.String):void type: VIRTUAL \l0x0035: INVOKE  (r3 I:java.lang.String) = (r4 I:android.os.Parcel) android.os.Parcel.readString():java.lang.String type: VIRTUAL \l0x0039: INVOKE  (r5 I:int) = (r4 I:android.os.Parcel) android.os.Parcel.readInt():int type: VIRTUAL \l0x003d: INVOKE  (r6 I:java.lang.String) = (r4 I:android.os.Parcel) android.os.Parcel.readString():java.lang.String type: VIRTUAL \l0x0041: INVOKE  (r0 I:int) = (r4 I:android.os.Parcel) android.os.Parcel.readInt():int type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0045|0x0045: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0050 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0047|0x0047: SGET  (r0 I:android.os.Parcelable$Creator) =  android.app.Notification.CREATOR android.os.Parcelable$Creator \l0x0049: INVOKE  (r4 I:java.lang.Object) = \l  (r0 I:android.os.Parcelable$Creator)\l  (r4 I:android.os.Parcel)\l android.os.Parcelable.Creator.createFromParcel(android.os.Parcel):java.lang.Object type: INTERFACE \l0x004d: CHECK_CAST  (r4 I:android.app.Notification) = (android.app.Notification) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0050|0x0050: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0051|0x0051: INVOKE  \l  (r2 I:android.support.v4.app.INotificationSideChannel$Stub)\l  (r3 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:java.lang.String)\l  (r4 I:android.app.Notification)\l android.support.v4.app.INotificationSideChannel.Stub.notify(java.lang.String, int, java.lang.String, android.app.Notification):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0054|0x0054: RETURN  (r1 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0055|0x0055: CONST_STR  (r3 I:java.lang.String) =  \"android.support.v4.app.INotificationSideChannel\" \l0x0057: INVOKE  (r5 I:android.os.Parcel), (r3 I:java.lang.String) android.os.Parcel.writeString(java.lang.String):void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x005a|0x005a: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.v4.app.INotificationSideChannel.Stub.onTransact((r2 'this' I:android.support.v4.app.INotificationSideChannel$Stub A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.os.RemoteException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_2 -> Node_7;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
}

