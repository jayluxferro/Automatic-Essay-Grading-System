digraph "CFG forandroid.support.v4.app.ActivityCompat.1.run()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r5 I:java.lang.String[]) = (r8 I:android.support.v4.app.ActivityCompat$1) android.support.v4.app.ActivityCompat.1.val$permissions java.lang.String[] \l0x0002: ARRAY_LENGTH  (r5 I:int) = (r5 I:?[]) \l0x0003: NEW_ARRAY  (r0 I:int[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0005: IGET  (r5 I:android.app.Activity) = (r8 I:android.support.v4.app.ActivityCompat$1) android.support.v4.app.ActivityCompat.1.val$activity android.app.Activity \l0x0007: INVOKE  (r2 I:android.content.pm.PackageManager) = (r5 I:android.app.Activity) android.app.Activity.getPackageManager():android.content.pm.PackageManager type: VIRTUAL \l0x000b: IGET  (r5 I:android.app.Activity) = (r8 I:android.support.v4.app.ActivityCompat$1) android.support.v4.app.ActivityCompat.1.val$activity android.app.Activity \l0x000d: INVOKE  (r3 I:java.lang.String) = (r5 I:android.app.Activity) android.app.Activity.getPackageName():java.lang.String type: VIRTUAL \l0x0011: IGET  (r5 I:java.lang.String[]) = (r8 I:android.support.v4.app.ActivityCompat$1) android.support.v4.app.ActivityCompat.1.val$permissions java.lang.String[] \l0x0013: ARRAY_LENGTH  (r4 I:int) = (r5 I:?[]) \l0x0014: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r4 I:?[int, byte, short, char] A[D('permissionCount' int)])  \-\> B:3:0x0024 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: IGET  (r5 I:java.lang.String[]) = (r8 I:android.support.v4.app.ActivityCompat$1) android.support.v4.app.ActivityCompat.1.val$permissions java.lang.String[] \l0x0019: AGET  (r5 I:?[OBJECT, ARRAY]) = \l  (r5 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char] A[D('i' int)])\l \l0x001b: INVOKE  (r5 I:int) = \l  (r2 I:android.content.pm.PackageManager A[D('packageManager' android.content.pm.PackageManager)])\l  (r5 I:java.lang.String)\l  (r3 I:java.lang.String A[D('packageName' java.lang.String)])\l android.content.pm.PackageManager.checkPermission(java.lang.String, java.lang.String):int type: VIRTUAL \l0x001f: APUT  \l  (r0 I:?[int, float][] A[D('grantResults' int[])])\l  (r1 I:?[int, short, byte, char] A[D('i' int)])\l  (r5 I:?[int, float])\l \l0x0021: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|0x0024: IGET  (r5 I:android.app.Activity) = (r8 I:android.support.v4.app.ActivityCompat$1) android.support.v4.app.ActivityCompat.1.val$activity android.app.Activity \l0x0026: CHECK_CAST  (r5 I:android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback) = (android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback) (r5 I:?[OBJECT, ARRAY]) \l0x0028: IGET  (r6 I:int) = (r8 I:android.support.v4.app.ActivityCompat$1) android.support.v4.app.ActivityCompat.1.val$requestCode int \l0x002a: IGET  (r7 I:java.lang.String[]) = (r8 I:android.support.v4.app.ActivityCompat$1) android.support.v4.app.ActivityCompat.1.val$permissions java.lang.String[] \l0x002c: INVOKE  \l  (r5 I:android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback)\l  (r6 I:int)\l  (r7 I:java.lang.String[])\l  (r0 I:int[] A[D('grantResults' int[])])\l android.support.v4.app.ActivityCompat.OnRequestPermissionsResultCallback.onRequestPermissionsResult(int, java.lang.String[], int[]):void type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x002f|0x002f: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.app.ActivityCompat.1.run((r8 'this' I:android.support.v4.app.ActivityCompat$1 A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x0005\-0x002f: r0 'grantResults' int[]\l  0x0015\-0x002f: r1 'i' int\l  0x000b\-0x002f: r2 'packageManager' android.content.pm.PackageManager\l  0x0011\-0x002f: r3 'packageName' java.lang.String\l  0x0014\-0x002f: r4 'permissionCount' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
Node_3 -> Node_4;
}

