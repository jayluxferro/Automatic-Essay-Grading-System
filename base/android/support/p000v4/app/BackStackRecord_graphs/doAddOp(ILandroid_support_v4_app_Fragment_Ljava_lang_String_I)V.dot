digraph "CFG forandroid.support.v4.app.BackStackRecord.doAddOp(ILandroid\/support\/v4\/app\/Fragment;Ljava\/lang\/String;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.Class r0 = r5.getClass()\lint r1 = r0.getModifiers()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if (r0.isAnonymousClass() != false) goto L_0x00c7\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e}"];
Node_3 [shape=record,label="{3\:\ 0x0012|if (java.lang.reflect.Modifier.isPublic(r1) == false) goto L_0x00c7\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014}"];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r0.isMemberClass() == false) goto L_0x0020\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a}"];
Node_7 [shape=record,label="{7\:\ 0x001e|if (java.lang.reflect.Modifier.isStatic(r1) == false) goto L_0x00c7\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|r5.mFragmentManager = r3.mManager\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|if (r6 == null) goto L_0x005e\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026}"];
Node_11 [shape=record,label="{11\:\ 0x0028|if (r5.mTag == null) goto L_0x005c\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a}"];
Node_13 [shape=record,label="{13\:\ 0x0030|if (r6.equals(r5.mTag) == false) goto L_0x0033\l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|java.lang.StringBuilder r7 = new java.lang.StringBuilder()\lr7.append(\"Can't change tag of fragment \")\lr7.append(r5)\lr7.append(\": was \")\lr7.append(r5.mTag)\lr7.append(\" now \")\lr7.append(r6)\l}"];
Node_15 [shape=record,label="{15\:\ 0x005b|throw new java.lang.IllegalStateException(r7.toString())\l}"];
Node_16 [shape=record,label="{16\:\ 0x005c|r5.mTag = r6\l}"];
Node_17 [shape=record,label="{17\:\ 0x005e|if (r4 == 0) goto L_0x00be\l}"];
Node_18 [shape=record,label="{18\:\ 0x0060}"];
Node_19 [shape=record,label="{19\:\ 0x0061|if (r4 == \-1) goto L_0x009a\l}"];
Node_20 [shape=record,label="{20\:\ 0x0063}"];
Node_21 [shape=record,label="{21\:\ 0x0065|if (r5.mFragmentId == 0) goto L_0x0095\l}"];
Node_22 [shape=record,label="{22\:\ 0x0067}"];
Node_23 [shape=record,label="{23\:\ 0x0069|if (r5.mFragmentId != r4) goto L_0x006c\l}"];
Node_24 [shape=record,label="{24\:\ 0x006c|java.lang.StringBuilder r7 = new java.lang.StringBuilder()\lr7.append(\"Can't change container ID of fragment \")\lr7.append(r5)\lr7.append(\": was \")\lr7.append(r5.mFragmentId)\lr7.append(\" now \")\lr7.append(r4)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0094|throw new java.lang.IllegalStateException(r7.toString())\l}"];
Node_26 [shape=record,label="{26\:\ 0x0095|r5.mFragmentId = r4\lr5.mContainerId = r4\l}"];
Node_27 [shape=record,label="{27\:\ 0x009a|java.lang.StringBuilder r7 = new java.lang.StringBuilder()\lr7.append(\"Can't add fragment \")\lr7.append(r5)\lr7.append(\" with tag \")\lr7.append(r6)\lr7.append(\" to container view with no id\")\l}"];
Node_28 [shape=record,label="{28\:\ 0x00bd|throw new java.lang.IllegalArgumentException(r7.toString())\l}"];
Node_29 [shape=record,label="{29\:\ 0x00be|addOp(new android.support.p000v4.app.BackStackRecord.C0237Op(r7, r5))\l}"];
Node_30 [shape=record,label="{30\:\ 0x00c6|RETURN\l|return\l}"];
Node_31 [shape=record,label="{31\:\ 0x00c7|java.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(\"Fragment \")\lr5.append(r0.getCanonicalName())\lr5.append(\" must be a public static class to be  properly recreated from\")\lr5.append(\" instance state.\")\l}"];
Node_32 [shape=record,label="{32\:\ 0x00eb|throw new java.lang.IllegalStateException(r5.toString())\l}"];
MethodNode[shape=record,label="{private void android.support.v4.app.BackStackRecord.doAddOp((r3v0 'this' android.support.v4.app.BackStackRecord A[IMMUTABLE_TYPE, THIS]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 android.support.v4.app.Fragment A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , , Annotation[BUILD, android.support.annotation.Nullable, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_31;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_31;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_31;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_16[style=dashed];
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_29;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_26[style=dashed];
Node_24 -> Node_25;
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_31 -> Node_32;
}

