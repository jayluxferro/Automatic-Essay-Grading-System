digraph "CFG forandroid.support.v4.app.BackStackRecord.bumpBackStackNesting(I)V" {
subgraph cluster_Region_766267136 {
label = "R(1:(1:(3:(1:5)|6|(3:8|(2:10|(1:12)(0))(0)|13))))";
node [shape=record,color=blue];
subgraph cluster_Region_120049726 {
label = "R(1:(3:(1:5)|6|(3:8|(2:10|(1:12)(0))(0)|13)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_876935563 {
label = "IF [B:1:0x0002] THEN: R(3:(1:5)|6|(3:8|(2:10|(1:12)(0))(0)|13)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r6.mAddToBackStack != false) goto L_0x0005\l}"];
subgraph cluster_Region_1027290346 {
label = "R(3:(1:5)|6|(3:8|(2:10|(1:12)(0))(0)|13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1723886502 {
label = "IF [B:4:0x0007] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0007|if (android.support.p000v4.app.FragmentManagerImpl.DEBUG == true) goto L_0x0009\l}"];
subgraph cluster_Region_693894193 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0009|android.util.Log.v(TAG, \"Bump nesting in \" + r6 + \" by \" + r7)\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0027|int int r0 = r6.mOps.size()\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_2130852749 {
label = "LOOP:0: (3:8|(2:10|(1:12)(0))(0)|13)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002e|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:6:0x0027, B:13:0x006b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x002e\-\>B:13:0x006b\l|if (r1 \< r0) goto L_0x0030\l}"];
subgraph cluster_Region_1154673209 {
label = "R(3:8|(2:10|(1:12)(0))(0)|13)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0030|android.support.v4.app.BackStackRecord$Op android.support.p000v4.app.BackStackRecord.C0237Op r2 = r6.mOps.get(r1)\l}"];
subgraph cluster_IfRegion_120751166 {
label = "IF [B:9:0x003a] THEN: R(2:10|(1:12)(0)) ELSE: R(0)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x003a|if (r2.fragment != null) goto L_0x003c\l}"];
subgraph cluster_Region_1665825878 {
label = "R(2:10|(1:12)(0))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x003c|r2.fragment.mBackStackNesting += r7\l}"];
subgraph cluster_IfRegion_281313028 {
label = "IF [B:11:0x0045] THEN: R(1:12) ELSE: R(0)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0045|if (android.support.p000v4.app.FragmentManagerImpl.DEBUG == true) goto L_0x0047\l}"];
subgraph cluster_Region_226160097 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0047|android.util.Log.v(TAG, \"Bump nesting of \" + r2.fragment + \" to \" + r2.fragment.mBackStackNesting)\l}"];
}
subgraph cluster_Region_64967734 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_1713865392 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_13 [shape=record,label="{13\:\ 0x006b|LOOP_END\lLOOP:0: B:7:0x002e\-\>B:13:0x006b\l|r1++\l}"];
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0005}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x006e}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x006e|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x006b|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x006b|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x006b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void android.support.v4.app.BackStackRecord.bumpBackStackNesting((r6v0 'this' android.support.v4.app.BackStackRecord A[IMMUTABLE_TYPE, THIS]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_15[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_17[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_18[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_7;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_15 -> Node_14;
Node_16 -> Node_13;
Node_17 -> Node_13;
Node_18 -> Node_13;
}

