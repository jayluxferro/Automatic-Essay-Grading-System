digraph "CFG forandroid.support.v4.app.BackStackRecord.commitInternal(Z)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r3 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mCommitted boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x004e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: SGET  (r0 I:boolean) =  android.support.v4.app.FragmentManagerImpl.DEBUG boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0033 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: CONST_STR  (r0 I:java.lang.String) =  \"FragmentManager\" \l0x000a: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000c: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000f: CONST_STR  (r2 I:java.lang.String) =  \"Commit: \" \l0x0011: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0014: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0017: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x001b: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.v(java.lang.String, java.lang.String):int type: STATIC \l0x001e: NEW_INSTANCE  (r0 I:android.support.v4.util.LogWriter) =  android.support.v4.util.LogWriter \l0x0020: CONST_STR  (r1 I:java.lang.String) =  \"FragmentManager\" \l0x0022: INVOKE  \l  (r0 I:android.support.v4.util.LogWriter)\l  (r1 I:java.lang.String)\l android.support.v4.util.LogWriter.\<init\>(java.lang.String):void type: DIRECT \l0x0025: NEW_INSTANCE  (r1 I:java.io.PrintWriter) =  java.io.PrintWriter \l0x0027: INVOKE  (r1 I:java.io.PrintWriter), (r0 I:java.io.Writer) java.io.PrintWriter.\<init\>(java.io.Writer):void type: DIRECT \l0x002a: CONST_STR  (r0 I:java.lang.String) =  \"  \" \l0x002c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002d: INVOKE  \l  (r3 I:android.support.v4.app.BackStackRecord)\l  (r0 I:java.lang.String)\l  (r2 I:java.io.FileDescriptor)\l  (r1 I:java.io.PrintWriter)\l  (r2 I:java.lang.String[])\l android.support.v4.app.BackStackRecord.dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[]):void type: VIRTUAL \l0x0030: INVOKE  (r1 I:java.io.PrintWriter) java.io.PrintWriter.close():void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0033|0x0033: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0034: IPUT  \l  (r0 I:boolean)\l  (r3 I:android.support.v4.app.BackStackRecord)\l android.support.v4.app.BackStackRecord.mCommitted boolean \l0x0036: IGET  (r0 I:boolean) = (r3 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mAddToBackStack boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x0038|0x0038: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0043 \l}"];
Node_7 [shape=record,label="{7\:\ 0x003a|0x003a: IGET  (r0 I:android.support.v4.app.FragmentManagerImpl) = (r3 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mManager android.support.v4.app.FragmentManagerImpl \l0x003c: INVOKE  (r0 I:int) = \l  (r0 I:android.support.v4.app.FragmentManagerImpl)\l  (r3 I:android.support.v4.app.BackStackRecord)\l android.support.v4.app.FragmentManagerImpl.allocBackStackIndex(android.support.v4.app.BackStackRecord):int type: VIRTUAL \l0x0040: IPUT  (r0 I:int), (r3 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mIndex int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0043|0x0043: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0044: IPUT  (r0 I:int), (r3 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mIndex int \l}"];
Node_9 [shape=record,label="{9\:\ 0x0046|0x0046: IGET  (r0 I:android.support.v4.app.FragmentManagerImpl) = (r3 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mManager android.support.v4.app.FragmentManagerImpl \l0x0048: INVOKE  \l  (r0 I:android.support.v4.app.FragmentManagerImpl)\l  (r3 I:android.support.v4.app.FragmentManagerImpl$OpGenerator)\l  (r4 I:boolean)\l android.support.v4.app.FragmentManagerImpl.enqueueAction(android.support.v4.app.FragmentManagerImpl$OpGenerator, boolean):void type: VIRTUAL \l0x004b: IGET  (r4 I:int) = (r3 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mIndex int \l}"];
Node_10 [shape=record,label="{10\:\ 0x004d|0x004d: RETURN  (r4 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x004e|0x004e: NEW_INSTANCE  (r4 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0050: CONST_STR  (r0 I:java.lang.String) =  \"commit already called\" \l0x0052: INVOKE  \l  (r4 I:java.lang.IllegalStateException)\l  (r0 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0055|0x0055: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{int android.support.v4.app.BackStackRecord.commitInternal((r3 'this' I:android.support.v4.app.BackStackRecord A[IMMUTABLE_TYPE, THIS]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

