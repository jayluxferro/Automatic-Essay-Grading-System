digraph "CFG forandroid.support.v4.app.NotificationCompat.Builder.addExtras(Landroid\/os\/Bundle;)Landroid\/support\/v4\/app\/NotificationCompat$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0013 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:android.os.Bundle) = (r1 I:android.support.v4.app.NotificationCompat$Builder) android.support.v4.app.NotificationCompat.Builder.mExtras android.os.Bundle \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: NEW_INSTANCE  (r0 I:android.os.Bundle) =  android.os.Bundle \l0x0008: INVOKE  (r0 I:android.os.Bundle), (r2 I:android.os.Bundle) android.os.Bundle.\<init\>(android.os.Bundle):void type: DIRECT \l0x000b: IPUT  \l  (r0 I:android.os.Bundle)\l  (r1 I:android.support.v4.app.NotificationCompat$Builder)\l android.support.v4.app.NotificationCompat.Builder.mExtras android.os.Bundle \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IGET  (r0 I:android.os.Bundle) = (r1 I:android.support.v4.app.NotificationCompat$Builder) android.support.v4.app.NotificationCompat.Builder.mExtras android.os.Bundle \l0x0010: INVOKE  (r0 I:android.os.Bundle), (r2 I:android.os.Bundle) android.os.Bundle.putAll(android.os.Bundle):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: RETURN  (r1 I:android.support.v4.app.NotificationCompat$Builder) \l}"];
MethodNode[shape=record,label="{public android.support.v4.app.NotificationCompat$Builder android.support.v4.app.NotificationCompat.Builder.addExtras((r1 'this' I:android.support.v4.app.NotificationCompat$Builder A[IMMUTABLE_TYPE, THIS]), (r2 I:android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
}

