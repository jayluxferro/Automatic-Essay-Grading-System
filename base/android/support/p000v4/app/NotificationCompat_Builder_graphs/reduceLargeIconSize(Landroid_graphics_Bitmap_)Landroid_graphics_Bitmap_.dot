digraph "CFG forandroid.support.v4.app.NotificationCompat.Builder.reduceLargeIconSize(Landroid\/graphics\/Bitmap;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r10 == null) goto L_0x0060\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (android.os.Build.VERSION.SDK_INT \< 27) goto L_0x0009\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|android.content.res.Resources r0 = r9.mContext.getResources()\lint r1 = r0.getDimensionPixelSize(android.support.compat.C0031R.dimen.compat_notification_large_icon_max_width)\lint r0 = r0.getDimensionPixelSize(android.support.compat.C0031R.dimen.compat_notification_large_icon_max_height)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|if (r10.getWidth() \> r1) goto L_0x0028\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021}"];
Node_6 [shape=record,label="{6\:\ 0x0025|if (r10.getHeight() \> r0) goto L_0x0028\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|RETURN\l|return r10\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|double r0 = java.lang.Math.min(((double) r1) \/ ((double) java.lang.Math.max(1, r10.getWidth())), ((double) r0) \/ ((double) java.lang.Math.max(1, r10.getHeight())))\l}"];
Node_9 [shape=record,label="{9\:\ 0x005f|RETURN\l|return android.graphics.Bitmap.createScaledBitmap(r10, (int) java.lang.Math.ceil(((double) r10.getWidth()) * r0), (int) java.lang.Math.ceil(((double) r10.getHeight()) * r0), true)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0060|RETURN\l|return r10\l}"];
MethodNode[shape=record,label="{private android.graphics.Bitmap android.support.v4.app.NotificationCompat.Builder.reduceLargeIconSize((r9v0 'this' android.support.v4.app.NotificationCompat$Builder A[IMMUTABLE_TYPE, THIS]), (r10v0 android.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_10[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
}

