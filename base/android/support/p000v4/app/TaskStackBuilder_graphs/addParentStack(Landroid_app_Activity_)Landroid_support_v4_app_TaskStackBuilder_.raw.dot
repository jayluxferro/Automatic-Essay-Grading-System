digraph "CFG forandroid.support.v4.app.TaskStackBuilder.addParentStack(Landroid\/app\/Activity;)Landroid\/support\/v4\/app\/TaskStackBuilder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) android.support.v4.app.TaskStackBuilder$SupportParentable \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0005: CHECK_CAST  (r0 I:android.support.v4.app.TaskStackBuilder$SupportParentable) = (android.support.v4.app.TaskStackBuilder$SupportParentable) (r0 I:?[OBJECT, ARRAY]) \l0x0007: INVOKE  (r0 I:android.content.Intent) = \l  (r0 I:android.support.v4.app.TaskStackBuilder$SupportParentable)\l android.support.v4.app.TaskStackBuilder.SupportParentable.getSupportParentActivityIntent():android.content.Intent type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: INVOKE  (r0 I:android.content.Intent) = (r2 I:android.app.Activity) android.support.v4.app.NavUtils.getParentActivityIntent(android.app.Activity):android.content.Intent type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002b \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: INVOKE  (r2 I:android.content.ComponentName) = (r0 I:android.content.Intent) android.content.Intent.getComponent():android.content.ComponentName type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: IGET  (r2 I:android.content.Context) = (r1 I:android.support.v4.app.TaskStackBuilder) android.support.v4.app.TaskStackBuilder.mSourceContext android.content.Context \l0x001d: INVOKE  (r2 I:android.content.pm.PackageManager) = (r2 I:android.content.Context) android.content.Context.getPackageManager():android.content.pm.PackageManager type: VIRTUAL \l0x0021: INVOKE  (r2 I:android.content.ComponentName) = \l  (r0 I:android.content.Intent)\l  (r2 I:android.content.pm.PackageManager)\l android.content.Intent.resolveActivity(android.content.pm.PackageManager):android.content.ComponentName type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: INVOKE  \l  (r1 I:android.support.v4.app.TaskStackBuilder)\l  (r2 I:android.content.ComponentName)\l android.support.v4.app.TaskStackBuilder.addParentStack(android.content.ComponentName):android.support.v4.app.TaskStackBuilder type: VIRTUAL \l0x0028: INVOKE  \l  (r1 I:android.support.v4.app.TaskStackBuilder)\l  (r0 I:android.content.Intent)\l android.support.v4.app.TaskStackBuilder.addNextIntent(android.content.Intent):android.support.v4.app.TaskStackBuilder type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: RETURN  (r1 I:android.support.v4.app.TaskStackBuilder) \l}"];
MethodNode[shape=record,label="{public android.support.v4.app.TaskStackBuilder android.support.v4.app.TaskStackBuilder.addParentStack((r1 'this' I:android.support.v4.app.TaskStackBuilder A[IMMUTABLE_TYPE, THIS]), (r2 I:android.app.Activity A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

