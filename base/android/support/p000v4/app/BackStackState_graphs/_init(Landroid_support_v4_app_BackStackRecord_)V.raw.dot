digraph "CFG forandroid.support.v4.app.BackStackState.\<init\>(Landroid\/support\/v4\/app\/BackStackRecord;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r7 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IGET  (r0 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord$Op\>) = (r8 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mOps java.util.ArrayList \l0x0005: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0009: ARITH  (r1 I:int) = (r0 I:int) * (6 int) \l0x000b: NEW_ARRAY  (r1 I:int[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x000d: IPUT  (r1 I:int[]), (r7 I:android.support.v4.app.BackStackState) android.support.v4.app.BackStackState.mOps int[] \l0x000f: IGET  (r1 I:boolean) = (r8 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mAddToBackStack boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0088 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:9:0x005b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: IGET  (r3 I:java.util.ArrayList\<android.support.v4.app.BackStackRecord$Op\>) = (r8 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mOps java.util.ArrayList \l0x0019: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.ArrayList), (r1 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x001d: CHECK_CAST  (r3 I:android.support.v4.app.BackStackRecord$Op) = (android.support.v4.app.BackStackRecord$Op) (r3 I:?[OBJECT, ARRAY]) \l0x001f: IGET  (r4 I:int[]) = (r7 I:android.support.v4.app.BackStackState) android.support.v4.app.BackStackState.mOps int[] \l0x0021: ARITH  (r5 I:int) = (r2 I:int) + (1 int) \l0x0023: IGET  (r6 I:int) = (r3 I:android.support.v4.app.BackStackRecord$Op) android.support.v4.app.BackStackRecord.Op.cmd int \l0x0025: APUT  \l  (r4 I:?[int, float][])\l  (r2 I:?[int, short, byte, char])\l  (r6 I:?[int, float])\l \l0x0027: IGET  (r2 I:int[]) = (r7 I:android.support.v4.app.BackStackState) android.support.v4.app.BackStackState.mOps int[] \l0x0029: ARITH  (r4 I:int) = (r5 I:int) + (1 int) \l0x002b: IGET  (r6 I:android.support.v4.app.Fragment) = (r3 I:android.support.v4.app.BackStackRecord$Op) android.support.v4.app.BackStackRecord.Op.fragment android.support.v4.app.Fragment \l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|0x002d: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0034 \l}"];
Node_6 [shape=record,label="{6\:\ 0x002f|0x002f: IGET  (r6 I:android.support.v4.app.Fragment) = (r3 I:android.support.v4.app.BackStackRecord$Op) android.support.v4.app.BackStackRecord.Op.fragment android.support.v4.app.Fragment \l0x0031: IGET  (r6 I:int) = (r6 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.mIndex int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|0x0034: CONST  (r6 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0035|0x0035: APUT  \l  (r2 I:?[int, float][])\l  (r5 I:?[int, short, byte, char])\l  (r6 I:?[int, float])\l \l0x0037: IGET  (r2 I:int[]) = (r7 I:android.support.v4.app.BackStackState) android.support.v4.app.BackStackState.mOps int[] \l0x0039: ARITH  (r5 I:int) = (r4 I:int) + (1 int) \l0x003b: IGET  (r6 I:int) = (r3 I:android.support.v4.app.BackStackRecord$Op) android.support.v4.app.BackStackRecord.Op.enterAnim int \l0x003d: APUT  \l  (r2 I:?[int, float][])\l  (r4 I:?[int, short, byte, char])\l  (r6 I:?[int, float])\l \l0x003f: IGET  (r2 I:int[]) = (r7 I:android.support.v4.app.BackStackState) android.support.v4.app.BackStackState.mOps int[] \l0x0041: ARITH  (r4 I:int) = (r5 I:int) + (1 int) \l0x0043: IGET  (r6 I:int) = (r3 I:android.support.v4.app.BackStackRecord$Op) android.support.v4.app.BackStackRecord.Op.exitAnim int \l0x0045: APUT  \l  (r2 I:?[int, float][])\l  (r5 I:?[int, short, byte, char])\l  (r6 I:?[int, float])\l \l0x0047: IGET  (r2 I:int[]) = (r7 I:android.support.v4.app.BackStackState) android.support.v4.app.BackStackState.mOps int[] \l0x0049: ARITH  (r5 I:int) = (r4 I:int) + (1 int) \l0x004b: IGET  (r6 I:int) = (r3 I:android.support.v4.app.BackStackRecord$Op) android.support.v4.app.BackStackRecord.Op.popEnterAnim int \l0x004d: APUT  \l  (r2 I:?[int, float][])\l  (r4 I:?[int, short, byte, char])\l  (r6 I:?[int, float])\l \l0x004f: IGET  (r2 I:int[]) = (r7 I:android.support.v4.app.BackStackState) android.support.v4.app.BackStackState.mOps int[] \l0x0051: ARITH  (r4 I:int) = (r5 I:int) + (1 int) \l0x0053: IGET  (r3 I:int) = (r3 I:android.support.v4.app.BackStackRecord$Op) android.support.v4.app.BackStackRecord.Op.popExitAnim int \l0x0055: APUT  \l  (r2 I:?[int, float][])\l  (r5 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x0057: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x0059: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x005b|0x005b: IGET  (r0 I:int) = (r8 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mTransition int \l0x005d: IPUT  (r0 I:int), (r7 I:android.support.v4.app.BackStackState) android.support.v4.app.BackStackState.mTransition int \l0x005f: IGET  (r0 I:int) = (r8 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mTransitionStyle int \l0x0061: IPUT  (r0 I:int), (r7 I:android.support.v4.app.BackStackState) android.support.v4.app.BackStackState.mTransitionStyle int \l0x0063: IGET  (r0 I:java.lang.String) = (r8 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mName java.lang.String \l0x0065: IPUT  \l  (r0 I:java.lang.String)\l  (r7 I:android.support.v4.app.BackStackState)\l android.support.v4.app.BackStackState.mName java.lang.String \l0x0067: IGET  (r0 I:int) = (r8 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mIndex int \l0x0069: IPUT  (r0 I:int), (r7 I:android.support.v4.app.BackStackState) android.support.v4.app.BackStackState.mIndex int \l0x006b: IGET  (r0 I:int) = (r8 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mBreadCrumbTitleRes int \l0x006d: IPUT  (r0 I:int), (r7 I:android.support.v4.app.BackStackState) android.support.v4.app.BackStackState.mBreadCrumbTitleRes int \l0x006f: IGET  (r0 I:java.lang.CharSequence) = (r8 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mBreadCrumbTitleText java.lang.CharSequence \l0x0071: IPUT  \l  (r0 I:java.lang.CharSequence)\l  (r7 I:android.support.v4.app.BackStackState)\l android.support.v4.app.BackStackState.mBreadCrumbTitleText java.lang.CharSequence \l0x0073: IGET  (r0 I:int) = (r8 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mBreadCrumbShortTitleRes int \l0x0075: IPUT  (r0 I:int), (r7 I:android.support.v4.app.BackStackState) android.support.v4.app.BackStackState.mBreadCrumbShortTitleRes int \l0x0077: IGET  (r0 I:java.lang.CharSequence) = (r8 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mBreadCrumbShortTitleText java.lang.CharSequence \l0x0079: IPUT  \l  (r0 I:java.lang.CharSequence)\l  (r7 I:android.support.v4.app.BackStackState)\l android.support.v4.app.BackStackState.mBreadCrumbShortTitleText java.lang.CharSequence \l0x007b: IGET  (r0 I:java.util.ArrayList\<java.lang.String\>) = (r8 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mSharedElementSourceNames java.util.ArrayList \l0x007d: IPUT  \l  (r0 I:java.util.ArrayList\<java.lang.String\>)\l  (r7 I:android.support.v4.app.BackStackState)\l android.support.v4.app.BackStackState.mSharedElementSourceNames java.util.ArrayList \l0x007f: IGET  (r0 I:java.util.ArrayList\<java.lang.String\>) = (r8 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mSharedElementTargetNames java.util.ArrayList \l0x0081: IPUT  \l  (r0 I:java.util.ArrayList\<java.lang.String\>)\l  (r7 I:android.support.v4.app.BackStackState)\l android.support.v4.app.BackStackState.mSharedElementTargetNames java.util.ArrayList \l0x0083: IGET  (r8 I:boolean) = (r8 I:android.support.v4.app.BackStackRecord) android.support.v4.app.BackStackRecord.mReorderingAllowed boolean \l0x0085: IPUT  \l  (r8 I:boolean)\l  (r7 I:android.support.v4.app.BackStackState)\l android.support.v4.app.BackStackState.mReorderingAllowed boolean \l}"];
Node_10 [shape=record,label="{10\:\ 0x0087|0x0087: RETURN   \l}"];
Node_11 [shape=record,label="{11\:\ 0x0088|0x0088: NEW_INSTANCE  (r8 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x008a: CONST_STR  (r0 I:java.lang.String) =  \"Not on back stack\" \l0x008c: INVOKE  \l  (r8 I:java.lang.IllegalStateException)\l  (r0 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x008f|0x008f: THROW  (r8 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.v4.app.BackStackState.\<init\>((r7 'this' I:android.support.v4.app.BackStackState A[IMMUTABLE_TYPE, THIS]), (r8 I:android.support.v4.app.BackStackRecord A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_3;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

