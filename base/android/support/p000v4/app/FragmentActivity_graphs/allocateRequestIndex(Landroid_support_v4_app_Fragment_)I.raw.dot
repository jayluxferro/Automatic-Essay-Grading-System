digraph "CFG forandroid.support.v4.app.FragmentActivity.allocateRequestIndex(Landroid\/support\/v4\/app\/Fragment;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v4.util.SparseArrayCompat\<java.lang.String\>) = (r3 I:android.support.v4.app.FragmentActivity) android.support.v4.app.FragmentActivity.mPendingFragmentActivityResults android.support.v4.util.SparseArrayCompat \l0x0002: INVOKE  (r0 I:int) = (r0 I:android.support.v4.util.SparseArrayCompat) android.support.v4.util.SparseArrayCompat.size():int type: VIRTUAL \l0x0006: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (65534(0xfffe, float:9.1833E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:7:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IGET  (r0 I:android.support.v4.util.SparseArrayCompat\<java.lang.String\>) = (r3 I:android.support.v4.app.FragmentActivity) android.support.v4.app.FragmentActivity.mPendingFragmentActivityResults android.support.v4.util.SparseArrayCompat \l0x000d: IGET  (r2 I:int) = (r3 I:android.support.v4.app.FragmentActivity) android.support.v4.app.FragmentActivity.mNextCandidateRequestIndex int \l0x000f: INVOKE  (r0 I:int) = \l  (r0 I:android.support.v4.util.SparseArrayCompat)\l  (r2 I:int)\l android.support.v4.util.SparseArrayCompat.indexOfKey(int):int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:5:0x001d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: IGET  (r0 I:int) = (r3 I:android.support.v4.app.FragmentActivity) android.support.v4.app.FragmentActivity.mNextCandidateRequestIndex int \l0x0017: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0019: ARITH  (r0 I:int) = (r0 I:int) % (r1 I:int) \l0x001a: IPUT  (r0 I:int), (r3 I:android.support.v4.app.FragmentActivity) android.support.v4.app.FragmentActivity.mNextCandidateRequestIndex int \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: IGET  (r0 I:int) = (r3 I:android.support.v4.app.FragmentActivity) android.support.v4.app.FragmentActivity.mNextCandidateRequestIndex int \l0x001f: IGET  (r2 I:android.support.v4.util.SparseArrayCompat\<java.lang.String\>) = (r3 I:android.support.v4.app.FragmentActivity) android.support.v4.app.FragmentActivity.mPendingFragmentActivityResults android.support.v4.util.SparseArrayCompat \l0x0021: IGET  (r4 I:java.lang.String) = (r4 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.mWho java.lang.String \l0x0023: INVOKE  \l  (r2 I:android.support.v4.util.SparseArrayCompat)\l  (r0 I:int)\l  (r4 I:java.lang.Object)\l android.support.v4.util.SparseArrayCompat.put(int, java.lang.Object):void type: VIRTUAL \l0x0026: IGET  (r4 I:int) = (r3 I:android.support.v4.app.FragmentActivity) android.support.v4.app.FragmentActivity.mNextCandidateRequestIndex int \l0x0028: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l0x002a: ARITH  (r4 I:int) = (r4 I:int) % (r1 I:int) \l0x002b: IPUT  (r4 I:int), (r3 I:android.support.v4.app.FragmentActivity) android.support.v4.app.FragmentActivity.mNextCandidateRequestIndex int \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|0x002d: RETURN  (r0 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|0x002e: NEW_INSTANCE  (r4 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0030: CONST_STR  (r0 I:java.lang.String) =  \"Too many pending Fragment activity results.\" \l0x0032: INVOKE  \l  (r4 I:java.lang.IllegalStateException)\l  (r0 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0035|0x0035: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private int android.support.v4.app.FragmentActivity.allocateRequestIndex((r3 'this' I:android.support.v4.app.FragmentActivity A[IMMUTABLE_TYPE, THIS]), (r4 I:android.support.v4.app.Fragment A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_2;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

