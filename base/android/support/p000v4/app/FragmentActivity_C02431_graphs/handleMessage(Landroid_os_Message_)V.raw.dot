digraph "CFG forandroid.support.v4.app.FragmentActivity.1.handleMessage(Landroid\/os\/Message;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r3 I:android.os.Message) android.os.Message.what int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: INVOKE  (r2 I:android.os.Handler), (r3 I:android.os.Message) android.os.Handler.handleMessage(android.os.Message):void type: SUPER \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r3 I:android.support.v4.app.FragmentActivity) = (r2 I:android.support.v4.app.FragmentActivity$1) android.support.v4.app.FragmentActivity.1.this$0 android.support.v4.app.FragmentActivity \l0x000b: INVOKE  (r3 I:android.support.v4.app.FragmentActivity) android.support.v4.app.FragmentActivity.onResumeFragments():void type: VIRTUAL \l0x000e: IGET  (r3 I:android.support.v4.app.FragmentActivity) = (r2 I:android.support.v4.app.FragmentActivity$1) android.support.v4.app.FragmentActivity.1.this$0 android.support.v4.app.FragmentActivity \l0x0010: IGET  (r3 I:android.support.v4.app.FragmentController) = (r3 I:android.support.v4.app.FragmentActivity) android.support.v4.app.FragmentActivity.mFragments android.support.v4.app.FragmentController \l0x0012: INVOKE  (r3 I:android.support.v4.app.FragmentController) android.support.v4.app.FragmentController.execPendingActions():boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.app.FragmentActivity.1.handleMessage((r2 'this' I:android.support.v4.app.FragmentActivity$1 A[IMMUTABLE_TYPE, THIS]), (r3 I:android.os.Message A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

