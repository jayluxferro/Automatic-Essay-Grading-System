digraph "CFG forandroid.support.v4.app.FragmentTransition.mergeTransitions(Landroid\/support\/v4\/app\/FragmentTransitionImpl;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Landroid\/support\/v4\/app\/Fragment;Z)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r1 == null) goto L_0x0012\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2 == null) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r4 == null) goto L_0x0012\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r5 == false) goto L_0x000d\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|boolean r4 = r4.getAllowReturnTransitionOverlap()\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|boolean r4 = r4.getAllowEnterTransitionOverlap()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|r4 = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|PHI: r4 \l  PHI: (r4v1 boolean) = (r4v2 boolean), (r4v3 boolean), (r4v4 boolean) binds: [B:6:0x0012, B:5:0x000d, B:4:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == false) goto L_0x001a\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015}"];
Node_9 [shape=record,label="{9\:\ 0x001a}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r0.mergeTransitionsInSequence(r2, r1, r3)\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return r0.mergeTransitionsTogether(r2, r1, r3)\l}"];
MethodNode[shape=record,label="{private static java.lang.Object android.support.v4.app.FragmentTransition.mergeTransitions((r0v0 android.support.v4.app.FragmentTransitionImpl A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.support.v4.app.Fragment A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_6;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_11;
Node_9 -> Node_10;
}

