digraph "CFG forandroid.support.v4.app.FragmentTransition.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0002: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0004: FILL_ARRAY  (r0 I:?[int, float][]), data: [0, 3, 0, 1, 5, 4, 7, 6, 9, 8] \l0x0007: SPUT  (r0 I:int[]) android.support.v4.app.FragmentTransition.INVERSE_OPS int[] \l0x0009: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x000b: CONST  (r1 I:?[int, float, short, byte, char]) = (21 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:3:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: NEW_INSTANCE  (r0 I:android.support.v4.app.FragmentTransitionCompat21) =  android.support.v4.app.FragmentTransitionCompat21 \l0x0011: INVOKE  (r0 I:android.support.v4.app.FragmentTransitionCompat21) android.support.v4.app.FragmentTransitionCompat21.\<init\>():void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: SPUT  (r0 I:android.support.v4.app.FragmentTransitionImpl) android.support.v4.app.FragmentTransition.PLATFORM_IMPL android.support.v4.app.FragmentTransitionImpl \l0x0018: INVOKE  (r0 I:android.support.v4.app.FragmentTransitionImpl) =  android.support.v4.app.FragmentTransition.resolveSupportImpl():android.support.v4.app.FragmentTransitionImpl type: STATIC \l0x001c: SPUT  (r0 I:android.support.v4.app.FragmentTransitionImpl) android.support.v4.app.FragmentTransition.SUPPORT_IMPL android.support.v4.app.FragmentTransitionImpl \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: RETURN   \l}"];
MethodNode[shape=record,label="{static void android.support.v4.app.FragmentTransition.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

