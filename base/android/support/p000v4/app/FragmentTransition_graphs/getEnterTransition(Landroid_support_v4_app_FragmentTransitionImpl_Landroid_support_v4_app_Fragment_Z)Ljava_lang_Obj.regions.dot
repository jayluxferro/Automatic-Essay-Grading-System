digraph "CFG forandroid.support.v4.app.FragmentTransition.getEnterTransition(Landroid\/support\/v4\/app\/FragmentTransitionImpl;Landroid\/support\/v4\/app\/Fragment;Z)Ljava\/lang\/Object;" {
subgraph cluster_Region_454863001 {
label = "R(1:(2:(1:1)|(2:(1:3)(1:4)|6))) | DECL_VAR: java.lang.Object null\l";
node [shape=record,color=blue];
subgraph cluster_Region_472719444 {
label = "R(2:(1:1)|(2:(1:3)(1:4)|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1701137124 {
label = "IF [B:0:0x0000] THEN: R(1:1) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r1 == null) goto L_0x0002\l}"];
subgraph cluster_Region_675736612 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1457570261 {
label = "R(2:(1:3)(1:4)|6)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_599418077 {
label = "IF [B:2:0x0004] THEN: R(1:3) ELSE: R(1:4)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r2 == true) goto L_0x0006\l}"];
subgraph cluster_Region_1847278177 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|java.lang.Object r1 = r1.getReenterTransition()\l}"];
}
subgraph cluster_Region_1308057016 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|java.lang.Object r1 = r1.getEnterTransition()\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0013|RETURN\l|return r0.cloneTransition(r1)\l}"];
}
}
}
Node_5 [shape=record,color=red,label="{5\:\ 0x000f|PHI: r1 \l  PHI: (r1v1 java.lang.Object) = (r1v2 java.lang.Object), (r1v3 java.lang.Object) binds: [B:4:0x000b, B:3:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{private static java.lang.Object android.support.v4.app.FragmentTransition.getEnterTransition((r0v0 android.support.v4.app.FragmentTransitionImpl A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 android.support.v4.app.Fragment A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2[style=dashed];
Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

