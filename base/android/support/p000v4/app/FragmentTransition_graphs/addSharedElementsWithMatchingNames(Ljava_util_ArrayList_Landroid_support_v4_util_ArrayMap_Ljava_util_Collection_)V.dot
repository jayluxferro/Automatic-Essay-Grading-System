digraph "CFG forandroid.support.v4.app.FragmentTransition.addSharedElementsWithMatchingNames(Ljava\/util\/ArrayList;Landroid\/support\/v4\/util\/ArrayMap;Ljava\/util\/Collection;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r4.size() + \-1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lPHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v3 int) binds: [B:0:0x0000, B:5:0x001b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:5:0x001b\l|if (r0 \< 0) goto L_0x001e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|android.view.View r1 = r4.valueAt(r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|if (r5.contains(android.support.p000v4.view.ViewCompat.getTransitionName(r1)) == false) goto L_0x001b\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|r3.add(r1)\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|LOOP_END\lLOOP:0: B:1:0x0006\-\>B:5:0x001b\l|int r0 = r0 + \-1\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void android.support.v4.app.FragmentTransition.addSharedElementsWithMatchingNames((r3v0 java.util.ArrayList\<android.view.View\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.support.v4.util.ArrayMap\<java.lang.String, android.view.View\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.util.Collection\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/ArrayList\<, Landroid\/view\/View;, \>;, Landroid\/support\/v4\/util\/ArrayMap\<, Ljava\/lang\/String;, Landroid\/view\/View;, \>;, Ljava\/util\/Collection\<, Ljava\/lang\/String;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_8;
Node_5 -> Node_1;
Node_7 -> Node_6;
Node_8 -> Node_5;
Node_9 -> Node_5;
}

