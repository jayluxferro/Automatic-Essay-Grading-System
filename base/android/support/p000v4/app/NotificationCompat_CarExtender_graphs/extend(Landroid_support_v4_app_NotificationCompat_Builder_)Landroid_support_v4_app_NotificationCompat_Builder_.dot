digraph "CFG forandroid.support.v4.app.NotificationCompat.CarExtender.extend(Landroid\/support\/v4\/app\/NotificationCompat$Builder;)Landroid\/support\/v4\/app\/NotificationCompat$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 21) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return r4\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|android.os.Bundle r0 = new android.os.Bundle()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|if (r3.mLargeIcon == null) goto L_0x0017\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|r0.putParcelable(EXTRA_LARGE_ICON, r3.mLargeIcon)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017}"];
Node_7 [shape=record,label="{7\:\ 0x0019|if (r3.mColor == 0) goto L_0x0022\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|r0.putInt(EXTRA_COLOR, r3.mColor)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022}"];
Node_10 [shape=record,label="{10\:\ 0x0024|if (r3.mUnreadConversation == null) goto L_0x0031\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|r0.putBundle(EXTRA_CONVERSATION, getBundleForUnreadConversation(r3.mUnreadConversation))\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|r4.getExtras().putBundle(EXTRA_CAR_EXTENDER, r0)\l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|RETURN\l|return r4\l}"];
MethodNode[shape=record,label="{public android.support.v4.app.NotificationCompat$Builder android.support.v4.app.NotificationCompat.CarExtender.extend((r3v0 'this' android.support.v4.app.NotificationCompat$CarExtender A[IMMUTABLE_TYPE, THIS]), (r4v0 android.support.v4.app.NotificationCompat$Builder A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

