digraph "CFG forandroid.support.v4.app.ActivityCompat.requestPermissions(Landroid\/app\/Activity;[Ljava\/lang\/String;I)V" {
subgraph cluster_Region_1246971624 {
label = "R(1:(2:(1:4)|(1:(2:(1:9)|10)(1:(1:13)(0)))))";
node [shape=record,color=blue];
subgraph cluster_Region_161120248 {
label = "R(2:(1:4)|(1:(2:(1:9)|10)(1:(1:13)(0))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1710104059 {
label = "IF [B:1:0x0002, B:3:0x000a] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (sDelegate != null) goto L_0x0004\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|ADDED_TO_REGION\l|if (sDelegate.requestPermissions(r2, r3, r4) != false) goto L_0x000c\l}"];
subgraph cluster_Region_849375332 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1645483230 {
label = "R(1:(2:(1:9)|10)(1:(1:13)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_942396123 {
label = "IF [B:6:0x0011] THEN: R(2:(1:9)|10) ELSE: R(1:(1:13)(0))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0011|if (android.os.Build.VERSION.SDK_INT \>= 23) goto L_0x0013\l}"];
subgraph cluster_Region_759103968 {
label = "R(2:(1:9)|10)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_472737651 {
label = "IF [B:8:0x0015] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0015|if ((r2 instanceof android.support.p000v4.app.ActivityCompat.RequestPermissionsRequestCodeValidator) == true) goto L_0x0017\l}"];
subgraph cluster_Region_1591550668 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0017|((android.support.p000v4.app.ActivityCompat.RequestPermissionsRequestCodeValidator) r2).validateRequestPermissionsRequestCode(r4)\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x001d|r2.requestPermissions(r3, r4)\l}"];
}
subgraph cluster_Region_948342470 {
label = "R(1:(1:13)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1843640375 {
label = "IF [B:12:0x0023] THEN: R(1:13) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0023|if ((r2 instanceof android.support.p000v4.app.ActivityCompat.OnRequestPermissionsResultCallback) == true) goto L_0x0025\l}"];
subgraph cluster_Region_436362247 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0025|new android.os.Handler(android.os.Looper.getMainLooper()).post(new android.support.p000v4.app.ActivityCompat.C02351())\l}"];
}
subgraph cluster_Region_771671753 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000d}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0013}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0021}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static void android.support.v4.app.ActivityCompat.requestPermissions((r2v0 android.app.Activity A[DONT_INLINE, IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.String[] A[DONT_INLINE, IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[DONT_INLINE, IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.IntRange, \{from=0\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_11[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_15;
Node_12 -> Node_13;
Node_12 -> Node_16[style=dashed];
Node_13 -> Node_14;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_11 -> Node_12;
}

