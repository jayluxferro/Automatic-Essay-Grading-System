digraph "CFG forandroid.support.v4.app.NotificationCompatJellybean.getAction(Landroid\/app\/Notification;I)Landroid\/support\/v4\/app\/NotificationCompat$Action;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:java.lang.Object) =  android.support.v4.app.NotificationCompatJellybean.sActionsLock java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|SYNTHETIC\lSplitter:B:3:0x0004\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0004\l|0x0004: INVOKE  (r2 I:java.lang.Object[]) = (r5 I:android.app.Notification) android.support.v4.app.NotificationCompatJellybean.getActionObjectsLocked(android.app.Notification):java.lang.Object[] type: STATIC A[Catch:\{ IllegalAccessException \-\> 0x0040 \}, TRY_ENTER]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004b A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: AGET  (r2 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r6 I:?[int, short, byte, char]) A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l0x000c: INVOKE  (r5 I:android.os.Bundle) = (r5 I:android.app.Notification) android.support.v4.app.NotificationCompatJellybean.getExtras(android.app.Notification):android.os.Bundle type: STATIC A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0021 A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: CONST_STR  (r3 I:java.lang.String) =  \"android.support.actionExtras\" A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l0x0014: INVOKE  (r5 I:android.util.SparseArray) = (r5 I:android.os.Bundle), (r3 I:java.lang.String) android.os.Bundle.getSparseParcelableArray(java.lang.String):android.util.SparseArray type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0021 A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: INVOKE  (r5 I:java.lang.Object) = (r5 I:android.util.SparseArray), (r6 I:int) android.util.SparseArray.get(int):java.lang.Object type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l0x001e: CHECK_CAST  (r5 I:android.os.Bundle) = (android.os.Bundle) (r5 I:?[OBJECT, ARRAY]) A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l0x0020: GOTO  \-\> 0x0022 A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: SGET  (r6 I:java.lang.reflect.Field) =  android.support.v4.app.NotificationCompatJellybean.sActionIconField java.lang.reflect.Field A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l0x0024: INVOKE  (r6 I:int) = (r6 I:java.lang.reflect.Field), (r2 I:java.lang.Object) java.lang.reflect.Field.getInt(java.lang.Object):int type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l0x0028: SGET  (r3 I:java.lang.reflect.Field) =  android.support.v4.app.NotificationCompatJellybean.sActionTitleField java.lang.reflect.Field A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l0x002a: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.lang.reflect.Field), (r2 I:java.lang.Object) java.lang.reflect.Field.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l0x002e: CHECK_CAST  (r3 I:java.lang.CharSequence) = (java.lang.CharSequence) (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l0x0030: SGET  (r4 I:java.lang.reflect.Field) =  android.support.v4.app.NotificationCompatJellybean.sActionIntentField java.lang.reflect.Field A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l0x0032: INVOKE  (r2 I:java.lang.Object) = (r4 I:java.lang.reflect.Field), (r2 I:java.lang.Object) java.lang.reflect.Field.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l0x0036: CHECK_CAST  (r2 I:android.app.PendingIntent) = (android.app.PendingIntent) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l0x0038: INVOKE  (r5 I:android.support.v4.app.NotificationCompat$Action) = \l  (r6 I:int)\l  (r3 I:java.lang.CharSequence)\l  (r2 I:android.app.PendingIntent)\l  (r5 I:android.os.Bundle)\l android.support.v4.app.NotificationCompatJellybean.readAction(int, java.lang.CharSequence, android.app.PendingIntent, android.os.Bundle):android.support.v4.app.NotificationCompat$Action type: STATIC A[Catch:\{ IllegalAccessException \-\> 0x0040 \}]\l0x003b: NOP   A[TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|SYNTHETIC\lSplitter:B:13:0x003c\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x003c\l|0x003c: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003e \}, TRY_ENTER]\l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|0x003d: RETURN  (r5 I:android.support.v4.app.NotificationCompat$Action) A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|ExcHandler: all null\lSplitter:B:13:0x003c\l|0x003e: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x003f|0x003f: GOTO  \-\> 0x004d A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0040|ExcHandler: IllegalAccessException null\lSplitter:B:3:0x0004\l|0x0040: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0041|0x0041: CONST_STR  (r6 I:java.lang.String) =  \"NotificationCompat\" A[Catch:\{ all \-\> 0x003e \}]\l0x0043: CONST_STR  (r2 I:java.lang.String) =  \"Unable to access notification actions\" A[Catch:\{ all \-\> 0x003e \}]\l0x0045: INVOKE  \l  (r6 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r5 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC A[Catch:\{ all \-\> 0x003e \}]\l0x0048: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x003e \}]\l0x0049: SPUT  (r5 I:boolean) android.support.v4.app.NotificationCompatJellybean.sActionsAccessFailed boolean A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x004b|0x004b: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x004c|0x004c: RETURN  (r1 I:android.support.v4.app.NotificationCompat$Action) A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x004d|0x004d: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003e \}, TRY_LEAVE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x004e|0x004e: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static android.support.v4.app.NotificationCompat$Action android.support.v4.app.NotificationCompatJellybean.getAction((r5 I:android.app.Notification A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_18;
Node_3 -> Node_16;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_20;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_23;
}

