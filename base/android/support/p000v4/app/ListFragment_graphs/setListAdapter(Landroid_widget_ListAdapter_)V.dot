digraph "CFG forandroid.support.v4.app.ListFragment.setListAdapter(Landroid\/widget\/ListAdapter;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = false\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r4.mAdapter == null) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|r0 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|r0 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v2 boolean), (r0v3 boolean) binds: [B:3:0x0008, B:2:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|r4.mAdapter = r5\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|if (r4.mList == null) goto L_?\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|r4.mList.setAdapter(r5)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|if (r4.mListShown != false) goto L_?\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|if (r0 != false) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a}"];
Node_10 [shape=record,label="{10\:\ 0x0022|if (getView().getWindowToken() == null) goto L_0x0025\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|r1 = true\l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v2 boolean) binds: [B:10:0x0022, B:11:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|setListShown(true, r1)\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.v4.app.ListFragment.setListAdapter((r4v0 'this' android.support.v4.app.ListFragment A[IMMUTABLE_TYPE, THIS]), (r5v0 android.widget.ListAdapter A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

