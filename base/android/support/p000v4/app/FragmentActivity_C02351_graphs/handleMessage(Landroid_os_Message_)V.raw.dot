digraph "CFG forandroid.support.v4.app.FragmentActivity.1.handleMessage(Landroid\/os\/Message;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r2 I:android.os.Message A[D('msg' android.os.Message)]) android.os.Message.what int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[2] t:[0x0009] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: INVOKE  \l  (r1 I:android.os.Handler)\l  (r2 I:android.os.Message A[D('msg' android.os.Message)])\l android.os.Handler.handleMessage(android.os.Message):void type: SUPER \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IGET  (r0 I:android.support.v4.app.FragmentActivity) = (r1 I:android.support.v4.app.FragmentActivity$1) android.support.v4.app.FragmentActivity.1.this$0 android.support.v4.app.FragmentActivity \l0x000b: INVOKE  (r0 I:android.support.v4.app.FragmentActivity) android.support.v4.app.FragmentActivity.onResumeFragments():void type: VIRTUAL \l0x000e: IGET  (r0 I:android.support.v4.app.FragmentActivity) = (r1 I:android.support.v4.app.FragmentActivity$1) android.support.v4.app.FragmentActivity.1.this$0 android.support.v4.app.FragmentActivity \l0x0010: IGET  (r0 I:android.support.v4.app.FragmentController) = (r0 I:android.support.v4.app.FragmentActivity) android.support.v4.app.FragmentActivity.mFragments android.support.v4.app.FragmentController \l0x0012: INVOKE  (r0 I:android.support.v4.app.FragmentController) android.support.v4.app.FragmentController.execPendingActions():boolean type: VIRTUAL \l}"];
MethodNode[shape=record,label="{public void android.support.v4.app.FragmentActivity.1.handleMessage((r1 'this' I:android.support.v4.app.FragmentActivity$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:android.os.Message A[D('msg' android.os.Message), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x001b: r2 'msg' android.os.Message\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_3;
}

