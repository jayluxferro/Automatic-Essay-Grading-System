digraph "CFG forandroid.support.v4.app.SharedElementCallback.createDrawableBitmap(Landroid\/graphics\/drawable\/Drawable;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r9 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getIntrinsicWidth():int type: VIRTUAL \l0x0004: INVOKE  (r1 I:int) = (r9 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getIntrinsicHeight():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x0052 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r1 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1233125376(0x49800000, float:1048576.0) ?[int, float, short, byte, char])\l \l0x000f: ARITH  (r3 I:int) = (r0 I:int) * (r1 I:int) \l0x0011: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0012: ARITH  (r2 I:float) = (r2 I:float) \/ (r3 I:float) \l0x0013: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0015: INVOKE  (r2 I:float) = (r3 I:float), (r2 I:float) java.lang.Math.min(float, float):float type: STATIC \l0x0019: INSTANCE_OF  (r4 I:boolean) = (r9 I:?[OBJECT, ARRAY]) android.graphics.drawable.BitmapDrawable \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: CMP_L  (r3 I:int) = (r2 I:float), (r3 I:float) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: CHECK_CAST  (r9 I:android.graphics.drawable.BitmapDrawable) = (android.graphics.drawable.BitmapDrawable) (r9 I:?[OBJECT, ARRAY]) \l0x0023: INVOKE  (r9 I:android.graphics.Bitmap) = (r9 I:android.graphics.drawable.BitmapDrawable) android.graphics.drawable.BitmapDrawable.getBitmap():android.graphics.Bitmap type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: RETURN  (r9 I:android.graphics.Bitmap) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0029: ARITH  (r0 I:float) = (r0 I:float) * (r2 I:float) \l0x002b: CAST  (r0 I:int) = (int) (r0 I:float) \l0x002c: CAST  (r1 I:float) = (float) (r1 I:int) \l0x002d: ARITH  (r1 I:float) = (r1 I:float) * (r2 I:float) \l0x002f: CAST  (r1 I:int) = (int) (r1 I:float) \l0x0030: SGET  (r2 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config \l0x0032: INVOKE  (r2 I:android.graphics.Bitmap) = \l  (r0 I:int)\l  (r1 I:int)\l  (r2 I:android.graphics.Bitmap$Config)\l android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap type: STATIC \l0x0036: NEW_INSTANCE  (r3 I:android.graphics.Canvas) =  android.graphics.Canvas \l0x0038: INVOKE  \l  (r3 I:android.graphics.Canvas)\l  (r2 I:android.graphics.Bitmap)\l android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void type: DIRECT \l0x003b: INVOKE  (r4 I:android.graphics.Rect) = (r9 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getBounds():android.graphics.Rect type: VIRTUAL \l0x003f: IGET  (r5 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0041: IGET  (r6 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0043: IGET  (r7 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.right int \l0x0045: IGET  (r4 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x0047: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0048: INVOKE  \l  (r9 I:android.graphics.drawable.Drawable)\l  (r8 I:int)\l  (r8 I:int)\l  (r0 I:int)\l  (r1 I:int)\l android.graphics.drawable.Drawable.setBounds(int, int, int, int):void type: VIRTUAL \l0x004b: INVOKE  \l  (r9 I:android.graphics.drawable.Drawable)\l  (r3 I:android.graphics.Canvas)\l android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void type: VIRTUAL \l0x004e: INVOKE  \l  (r9 I:android.graphics.drawable.Drawable)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r4 I:int)\l android.graphics.drawable.Drawable.setBounds(int, int, int, int):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0051|0x0051: RETURN  (r2 I:android.graphics.Bitmap) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0052|0x0052: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0053|0x0053: RETURN  (r9 I:android.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{private static android.graphics.Bitmap android.support.v4.app.SharedElementCallback.createDrawableBitmap((r9 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_4;
Node_2 -> Node_12[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
}

