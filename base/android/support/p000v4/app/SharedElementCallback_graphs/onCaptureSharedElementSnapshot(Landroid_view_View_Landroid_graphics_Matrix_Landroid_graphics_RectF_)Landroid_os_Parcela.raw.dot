digraph "CFG forandroid.support.v4.app.SharedElementCallback.onCaptureSharedElementSnapshot(Landroid\/view\/View;Landroid\/graphics\/Matrix;Landroid\/graphics\/RectF;)Landroid\/os\/Parcelable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r6 I:?[OBJECT, ARRAY]) android.widget.ImageView \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0049 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0005: CHECK_CAST  (r0 I:android.widget.ImageView) = (android.widget.ImageView) (r0 I:?[OBJECT, ARRAY]) \l0x0007: INVOKE  (r1 I:android.graphics.drawable.Drawable) = (r0 I:android.widget.ImageView) android.widget.ImageView.getDrawable():android.graphics.drawable.Drawable type: VIRTUAL \l0x000b: INVOKE  (r2 I:android.graphics.drawable.Drawable) = (r0 I:android.widget.ImageView) android.widget.ImageView.getBackground():android.graphics.drawable.Drawable type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0049 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0049 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: INVOKE  (r1 I:android.graphics.Bitmap) = (r1 I:android.graphics.drawable.Drawable) android.support.v4.app.SharedElementCallback.createDrawableBitmap(android.graphics.drawable.Drawable):android.graphics.Bitmap type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0049 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: NEW_INSTANCE  (r6 I:android.os.Bundle) =  android.os.Bundle \l0x001b: INVOKE  (r6 I:android.os.Bundle) android.os.Bundle.\<init\>():void type: DIRECT \l0x001e: CONST_STR  (r7 I:java.lang.String) =  \"sharedElement:snapshot:bitmap\" \l0x0020: INVOKE  \l  (r6 I:android.os.Bundle)\l  (r7 I:java.lang.String)\l  (r1 I:android.os.Parcelable)\l android.os.Bundle.putParcelable(java.lang.String, android.os.Parcelable):void type: VIRTUAL \l0x0023: CONST_STR  (r7 I:java.lang.String) =  \"sharedElement:snapshot:imageScaleType\" \l0x0025: INVOKE  (r8 I:android.widget.ImageView$ScaleType) = (r0 I:android.widget.ImageView) android.widget.ImageView.getScaleType():android.widget.ImageView$ScaleType type: VIRTUAL \l0x0029: INVOKE  (r8 I:java.lang.String) = (r8 I:android.widget.ImageView$ScaleType) android.widget.ImageView.ScaleType.toString():java.lang.String type: VIRTUAL \l0x002d: INVOKE  \l  (r6 I:android.os.Bundle)\l  (r7 I:java.lang.String)\l  (r8 I:java.lang.String)\l android.os.Bundle.putString(java.lang.String, java.lang.String):void type: VIRTUAL \l0x0030: INVOKE  (r7 I:android.widget.ImageView$ScaleType) = (r0 I:android.widget.ImageView) android.widget.ImageView.getScaleType():android.widget.ImageView$ScaleType type: VIRTUAL \l0x0034: SGET  (r8 I:android.widget.ImageView$ScaleType) =  android.widget.ImageView.ScaleType.MATRIX android.widget.ImageView$ScaleType \l}"];
Node_8 [shape=record,label="{8\:\ 0x0036|0x0036: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0048 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: INVOKE  (r7 I:android.graphics.Matrix) = (r0 I:android.widget.ImageView) android.widget.ImageView.getImageMatrix():android.graphics.Matrix type: VIRTUAL \l0x003c: CONST  (r8 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l0x003e: NEW_ARRAY  (r8 I:float[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0040: INVOKE  (r7 I:android.graphics.Matrix), (r8 I:float[]) android.graphics.Matrix.getValues(float[]):void type: VIRTUAL \l0x0043: CONST_STR  (r7 I:java.lang.String) =  \"sharedElement:snapshot:imageMatrix\" \l0x0045: INVOKE  \l  (r6 I:android.os.Bundle)\l  (r7 I:java.lang.String)\l  (r8 I:float[])\l android.os.Bundle.putFloatArray(java.lang.String, float[]):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|0x0048: RETURN  (r6 I:android.os.Parcelable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0049|0x0049: INVOKE  (r0 I:float) = (r8 I:android.graphics.RectF) android.graphics.RectF.width():float type: VIRTUAL \l0x004d: INVOKE  (r0 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0051: INVOKE  (r1 I:float) = (r8 I:android.graphics.RectF) android.graphics.RectF.height():float type: VIRTUAL \l0x0055: INVOKE  (r1 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x0059: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x005a|0x005a: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:18:0x00a5 \l}"];
Node_13 [shape=record,label="{13\:\ 0x005c|0x005c: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:18:0x00a5 \l}"];
Node_14 [shape=record,label="{14\:\ 0x005e|0x005e: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0060: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1233125376(0x49800000, float:1048576.0) ?[int, float, short, byte, char])\l \l0x0062: ARITH  (r4 I:int) = (r0 I:int) * (r1 I:int) \l0x0064: CAST  (r4 I:float) = (float) (r4 I:int) \l0x0065: ARITH  (r3 I:float) = (r3 I:float) \/ (r4 I:float) \l0x0066: INVOKE  (r2 I:float) = (r2 I:float), (r3 I:float) java.lang.Math.min(float, float):float type: STATIC \l0x006a: CAST  (r0 I:float) = (float) (r0 I:int) \l0x006b: ARITH  (r0 I:float) = (r0 I:float) * (r2 I:float) \l0x006d: CAST  (r0 I:int) = (int) (r0 I:float) \l0x006e: CAST  (r1 I:float) = (float) (r1 I:int) \l0x006f: ARITH  (r1 I:float) = (r1 I:float) * (r2 I:float) \l0x0071: CAST  (r1 I:int) = (int) (r1 I:float) \l0x0072: IGET  (r3 I:android.graphics.Matrix) = (r5 I:android.support.v4.app.SharedElementCallback) android.support.v4.app.SharedElementCallback.mTempMatrix android.graphics.Matrix \l}"];
Node_15 [shape=record,label="{15\:\ 0x0074|0x0074: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x007d \l}"];
Node_16 [shape=record,label="{16\:\ 0x0076|0x0076: NEW_INSTANCE  (r3 I:android.graphics.Matrix) =  android.graphics.Matrix \l0x0078: INVOKE  (r3 I:android.graphics.Matrix) android.graphics.Matrix.\<init\>():void type: DIRECT \l0x007b: IPUT  \l  (r3 I:android.graphics.Matrix)\l  (r5 I:android.support.v4.app.SharedElementCallback)\l android.support.v4.app.SharedElementCallback.mTempMatrix android.graphics.Matrix \l}"];
Node_17 [shape=record,label="{17\:\ 0x007d|0x007d: IGET  (r3 I:android.graphics.Matrix) = (r5 I:android.support.v4.app.SharedElementCallback) android.support.v4.app.SharedElementCallback.mTempMatrix android.graphics.Matrix \l0x007f: INVOKE  \l  (r3 I:android.graphics.Matrix)\l  (r7 I:android.graphics.Matrix)\l android.graphics.Matrix.set(android.graphics.Matrix):void type: VIRTUAL \l0x0082: IGET  (r7 I:android.graphics.Matrix) = (r5 I:android.support.v4.app.SharedElementCallback) android.support.v4.app.SharedElementCallback.mTempMatrix android.graphics.Matrix \l0x0084: IGET  (r3 I:float) = (r8 I:android.graphics.RectF) android.graphics.RectF.left float \l0x0086: NEG  (r3 I:float) = (r3 I:float) \l0x0087: IGET  (r8 I:float) = (r8 I:android.graphics.RectF) android.graphics.RectF.top float \l0x0089: NEG  (r8 I:float) = (r8 I:float) \l0x008a: INVOKE  (r7 I:android.graphics.Matrix), (r3 I:float), (r8 I:float) android.graphics.Matrix.postTranslate(float, float):boolean type: VIRTUAL \l0x008d: IGET  (r7 I:android.graphics.Matrix) = (r5 I:android.support.v4.app.SharedElementCallback) android.support.v4.app.SharedElementCallback.mTempMatrix android.graphics.Matrix \l0x008f: INVOKE  (r7 I:android.graphics.Matrix), (r2 I:float), (r2 I:float) android.graphics.Matrix.postScale(float, float):boolean type: VIRTUAL \l0x0092: SGET  (r7 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config \l0x0094: INVOKE  (r2 I:android.graphics.Bitmap) = \l  (r0 I:int)\l  (r1 I:int)\l  (r7 I:android.graphics.Bitmap$Config)\l android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap type: STATIC \l0x0098: NEW_INSTANCE  (r7 I:android.graphics.Canvas) =  android.graphics.Canvas \l0x009a: INVOKE  \l  (r7 I:android.graphics.Canvas)\l  (r2 I:android.graphics.Bitmap)\l android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void type: DIRECT \l0x009d: IGET  (r8 I:android.graphics.Matrix) = (r5 I:android.support.v4.app.SharedElementCallback) android.support.v4.app.SharedElementCallback.mTempMatrix android.graphics.Matrix \l0x009f: INVOKE  \l  (r7 I:android.graphics.Canvas)\l  (r8 I:android.graphics.Matrix)\l android.graphics.Canvas.concat(android.graphics.Matrix):void type: VIRTUAL \l0x00a2: INVOKE  (r6 I:android.view.View), (r7 I:android.graphics.Canvas) android.view.View.draw(android.graphics.Canvas):void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x00a5|0x00a5: RETURN  (r2 I:android.os.Parcelable) \l}"];
MethodNode[shape=record,label="{public android.os.Parcelable android.support.v4.app.SharedElementCallback.onCaptureSharedElementSnapshot((r5 'this' I:android.support.v4.app.SharedElementCallback A[IMMUTABLE_TYPE, THIS]), (r6 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.graphics.Matrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.graphics.RectF A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_18;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

