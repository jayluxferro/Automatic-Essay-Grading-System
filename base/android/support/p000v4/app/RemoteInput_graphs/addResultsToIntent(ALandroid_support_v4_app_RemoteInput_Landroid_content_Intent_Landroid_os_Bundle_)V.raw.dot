digraph "CFG forandroid.support.v4.app.RemoteInput.addResultsToIntent([Landroid\/support\/v4\/app\/RemoteInput;Landroid\/content\/Intent;Landroid\/os\/Bundle;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (26 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r7 I:android.app.RemoteInput[]) = (r7 I:android.support.v4.app.RemoteInput[]) android.support.v4.app.RemoteInput.fromCompat(android.support.v4.app.RemoteInput[]):android.app.RemoteInput[] type: STATIC \l0x000a: INVOKE  \l  (r7 I:android.app.RemoteInput[])\l  (r8 I:android.content.Intent)\l  (r9 I:android.os.Bundle)\l android.app.RemoteInput.addResultsToIntent(android.app.RemoteInput[], android.content.Intent, android.os.Bundle):void type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0011: CONST  (r1 I:?[int, float, short, byte, char]) = (20 ?[int, float, short, byte, char]) \l0x0013: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:15:0x0043 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: INVOKE  (r0 I:android.os.Bundle) = (r8 I:android.content.Intent) android.support.v4.app.RemoteInput.getResultsFromIntent(android.content.Intent):android.os.Bundle type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001d \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: INVOKE  (r0 I:android.os.Bundle), (r9 I:android.os.Bundle) android.os.Bundle.putAll(android.os.Bundle):void type: VIRTUAL \l0x0020: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: ARRAY_LENGTH  (r0 I:int) = (r7 I:?[]) \l0x0022: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:31:0x0094 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: AGET  (r3 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0027: INVOKE  (r4 I:java.lang.String) = (r3 I:android.support.v4.app.RemoteInput) android.support.v4.app.RemoteInput.getResultKey():java.lang.String type: VIRTUAL \l0x002b: INVOKE  (r4 I:java.util.Map) = (r8 I:android.content.Intent), (r4 I:java.lang.String) android.support.v4.app.RemoteInput.getDataResultsFromIntent(android.content.Intent, java.lang.String):java.util.Map type: STATIC \l0x002f: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0030: NEW_ARRAY  (r5 I:android.support.v4.app.RemoteInput[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: android.support.v4.app.RemoteInput[] \l0x0032: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0034: INVOKE  (r5 I:android.app.RemoteInput[]) = (r5 I:android.support.v4.app.RemoteInput[]) android.support.v4.app.RemoteInput.fromCompat(android.support.v4.app.RemoteInput[]):android.app.RemoteInput[] type: STATIC \l0x0038: INVOKE  \l  (r5 I:android.app.RemoteInput[])\l  (r8 I:android.content.Intent)\l  (r9 I:android.os.Bundle)\l android.app.RemoteInput.addResultsToIntent(android.app.RemoteInput[], android.content.Intent, android.os.Bundle):void type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0040 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: INVOKE  \l  (r3 I:android.support.v4.app.RemoteInput)\l  (r8 I:android.content.Intent)\l  (r4 I:java.util.Map)\l android.support.v4.app.RemoteInput.addDataResultToIntent(android.support.v4.app.RemoteInput, android.content.Intent, java.util.Map):void type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|0x0040: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0043|0x0043: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0045: CONST  (r1 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0047|0x0047: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:30:0x008d \l}"];
Node_17 [shape=record,label="{17\:\ 0x0049|0x0049: INVOKE  (r0 I:android.content.Intent) = (r8 I:android.content.Intent) android.support.v4.app.RemoteInput.getClipDataIntentFromIntent(android.content.Intent):android.content.Intent type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x004d|0x004d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0054 \l}"];
Node_19 [shape=record,label="{19\:\ 0x004f|0x004f: NEW_INSTANCE  (r0 I:android.content.Intent) =  android.content.Intent \l0x0051: INVOKE  (r0 I:android.content.Intent) android.content.Intent.\<init\>():void type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x0054|0x0054: CONST_STR  (r1 I:java.lang.String) =  \"android.remoteinput.resultsData\" \l0x0056: INVOKE  (r1 I:android.os.Bundle) = (r0 I:android.content.Intent), (r1 I:java.lang.String) android.content.Intent.getBundleExtra(java.lang.String):android.os.Bundle type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x005a|0x005a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0061 \l}"];
Node_22 [shape=record,label="{22\:\ 0x005c|0x005c: NEW_INSTANCE  (r1 I:android.os.Bundle) =  android.os.Bundle \l0x005e: INVOKE  (r1 I:android.os.Bundle) android.os.Bundle.\<init\>():void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x0061|0x0061: ARRAY_LENGTH  (r3 I:int) = (r7 I:?[]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0062|0x0062: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:29:0x007e \l}"];
Node_25 [shape=record,label="{25\:\ 0x0064|0x0064: AGET  (r4 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0066: INVOKE  (r5 I:java.lang.String) = (r4 I:android.support.v4.app.RemoteInput) android.support.v4.app.RemoteInput.getResultKey():java.lang.String type: VIRTUAL \l0x006a: INVOKE  (r5 I:java.lang.Object) = (r9 I:android.os.Bundle), (r5 I:java.lang.String) android.os.Bundle.get(java.lang.String):java.lang.Object type: VIRTUAL \l0x006e: INSTANCE_OF  (r6 I:boolean) = (r5 I:?[OBJECT, ARRAY]) java.lang.CharSequence \l}"];
Node_26 [shape=record,label="{26\:\ 0x0070|0x0070: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x007b \l}"];
Node_27 [shape=record,label="{27\:\ 0x0072|0x0072: INVOKE  (r4 I:java.lang.String) = (r4 I:android.support.v4.app.RemoteInput) android.support.v4.app.RemoteInput.getResultKey():java.lang.String type: VIRTUAL \l0x0076: CHECK_CAST  (r5 I:java.lang.CharSequence) = (java.lang.CharSequence) (r5 I:?[OBJECT, ARRAY]) \l0x0078: INVOKE  \l  (r1 I:android.os.Bundle)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.CharSequence)\l android.os.Bundle.putCharSequence(java.lang.String, java.lang.CharSequence):void type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x007b|0x007b: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_29 [shape=record,label="{29\:\ 0x007e|0x007e: CONST_STR  (r7 I:java.lang.String) =  \"android.remoteinput.resultsData\" \l0x0080: INVOKE  \l  (r0 I:android.content.Intent)\l  (r7 I:java.lang.String)\l  (r1 I:android.os.Bundle)\l android.content.Intent.putExtra(java.lang.String, android.os.Bundle):android.content.Intent type: VIRTUAL \l0x0083: CONST_STR  (r7 I:java.lang.String) =  \"android.remoteinput.results\" \l0x0085: INVOKE  (r7 I:android.content.ClipData) = \l  (r7 I:java.lang.CharSequence)\l  (r0 I:android.content.Intent)\l android.content.ClipData.newIntent(java.lang.CharSequence, android.content.Intent):android.content.ClipData type: STATIC \l0x0089: INVOKE  \l  (r8 I:android.content.Intent)\l  (r7 I:android.content.ClipData)\l android.content.Intent.setClipData(android.content.ClipData):void type: VIRTUAL \l}"];
Node_30 [shape=record,label="{30\:\ 0x008d|0x008d: CONST_STR  (r7 I:java.lang.String) =  \"RemoteInput\" \l0x008f: CONST_STR  (r8 I:java.lang.String) =  \"RemoteInput is only supported from API Level 16\" \l0x0091: INVOKE  (r7 I:java.lang.String), (r8 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_31 [shape=record,label="{31\:\ 0x0094|0x0094: RETURN   \l}"];
MethodNode[shape=record,label="{public static void android.support.v4.app.RemoteInput.addResultsToIntent((r7 I:android.support.v4.app.RemoteInput[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.content.Intent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_31;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_15;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_31;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_10;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_30;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_29;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_24;
Node_29 -> Node_31;
Node_30 -> Node_31;
}

