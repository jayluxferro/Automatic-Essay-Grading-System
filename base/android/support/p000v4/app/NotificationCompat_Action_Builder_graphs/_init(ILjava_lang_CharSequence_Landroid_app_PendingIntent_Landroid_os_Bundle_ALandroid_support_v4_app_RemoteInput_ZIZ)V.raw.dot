digraph "CFG forandroid.support.v4.app.NotificationCompat.Action.Builder.\<init\>(ILjava\/lang\/CharSequence;Landroid\/app\/PendingIntent;Landroid\/os\/Bundle;[Landroid\/support\/v4\/app\/RemoteInput;ZIZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0004: IPUT  \l  (r0 I:boolean)\l  (r1 I:android.support.v4.app.NotificationCompat$Action$Builder)\l android.support.v4.app.NotificationCompat.Action.Builder.mAllowGeneratedReplies boolean \l0x0006: IPUT  \l  (r0 I:boolean)\l  (r1 I:android.support.v4.app.NotificationCompat$Action$Builder)\l android.support.v4.app.NotificationCompat.Action.Builder.mShowsUserInterface boolean \l0x0008: IPUT  \l  (r2 I:int)\l  (r1 I:android.support.v4.app.NotificationCompat$Action$Builder)\l android.support.v4.app.NotificationCompat.Action.Builder.mIcon int \l0x000a: INVOKE  (r2 I:java.lang.CharSequence) = (r3 I:java.lang.CharSequence) android.support.v4.app.NotificationCompat.Builder.limitCharSequenceLength(java.lang.CharSequence):java.lang.CharSequence type: STATIC \l0x000e: IPUT  \l  (r2 I:java.lang.CharSequence)\l  (r1 I:android.support.v4.app.NotificationCompat$Action$Builder)\l android.support.v4.app.NotificationCompat.Action.Builder.mTitle java.lang.CharSequence \l0x0010: IPUT  \l  (r4 I:android.app.PendingIntent)\l  (r1 I:android.support.v4.app.NotificationCompat$Action$Builder)\l android.support.v4.app.NotificationCompat.Action.Builder.mIntent android.app.PendingIntent \l0x0012: IPUT  \l  (r5 I:android.os.Bundle)\l  (r1 I:android.support.v4.app.NotificationCompat$Action$Builder)\l android.support.v4.app.NotificationCompat.Action.Builder.mExtras android.os.Bundle \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x001a: INVOKE  (r3 I:java.util.List) = (r6 I:java.lang.Object[]) java.util.Arrays.asList(java.lang.Object[]):java.util.List type: STATIC \l0x001e: INVOKE  (r2 I:java.util.ArrayList), (r3 I:java.util.Collection) java.util.ArrayList.\<init\>(java.util.Collection):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: IPUT  \l  (r2 I:java.util.ArrayList\<android.support.v4.app.RemoteInput\>)\l  (r1 I:android.support.v4.app.NotificationCompat$Action$Builder)\l android.support.v4.app.NotificationCompat.Action.Builder.mRemoteInputs java.util.ArrayList \l0x0023: IPUT  \l  (r7 I:boolean)\l  (r1 I:android.support.v4.app.NotificationCompat$Action$Builder)\l android.support.v4.app.NotificationCompat.Action.Builder.mAllowGeneratedReplies boolean \l0x0025: IPUT  \l  (r8 I:int)\l  (r1 I:android.support.v4.app.NotificationCompat$Action$Builder)\l android.support.v4.app.NotificationCompat.Action.Builder.mSemanticAction int \l0x0027: IPUT  \l  (r9 I:boolean)\l  (r1 I:android.support.v4.app.NotificationCompat$Action$Builder)\l android.support.v4.app.NotificationCompat.Action.Builder.mShowsUserInterface boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|0x0029: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v4.app.NotificationCompat.Action.Builder.\<init\>((r1 'this' I:android.support.v4.app.NotificationCompat$Action$Builder A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.app.PendingIntent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.support.v4.app.RemoteInput[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

