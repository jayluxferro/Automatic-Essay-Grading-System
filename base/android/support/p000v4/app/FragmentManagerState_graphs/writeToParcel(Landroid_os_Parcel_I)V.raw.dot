digraph "CFG forandroid.support.v4.app.FragmentManagerState.writeToParcel(Landroid\/os\/Parcel;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v4.app.FragmentState[]) = (r1 I:android.support.v4.app.FragmentManagerState) android.support.v4.app.FragmentManagerState.mActive android.support.v4.app.FragmentState[] \l0x0002: INVOKE  \l  (r2 I:android.os.Parcel)\l  (r0 I:android.os.Parcelable[])\l  (r3 I:int)\l android.os.Parcel.writeTypedArray(android.os.Parcelable[], int):void type: VIRTUAL \l0x0005: IGET  (r0 I:int[]) = (r1 I:android.support.v4.app.FragmentManagerState) android.support.v4.app.FragmentManagerState.mAdded int[] \l0x0007: INVOKE  (r2 I:android.os.Parcel), (r0 I:int[]) android.os.Parcel.writeIntArray(int[]):void type: VIRTUAL \l0x000a: IGET  (r0 I:android.support.v4.app.BackStackState[]) = (r1 I:android.support.v4.app.FragmentManagerState) android.support.v4.app.FragmentManagerState.mBackStack android.support.v4.app.BackStackState[] \l0x000c: INVOKE  \l  (r2 I:android.os.Parcel)\l  (r0 I:android.os.Parcelable[])\l  (r3 I:int)\l android.os.Parcel.writeTypedArray(android.os.Parcelable[], int):void type: VIRTUAL \l0x000f: IGET  (r3 I:int) = (r1 I:android.support.v4.app.FragmentManagerState) android.support.v4.app.FragmentManagerState.mPrimaryNavActiveIndex int \l0x0011: INVOKE  (r2 I:android.os.Parcel), (r3 I:int) android.os.Parcel.writeInt(int):void type: VIRTUAL \l0x0014: IGET  (r3 I:int) = (r1 I:android.support.v4.app.FragmentManagerState) android.support.v4.app.FragmentManagerState.mNextFragmentIndex int \l0x0016: INVOKE  (r2 I:android.os.Parcel), (r3 I:int) android.os.Parcel.writeInt(int):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v4.app.FragmentManagerState.writeToParcel((r1 'this' I:android.support.v4.app.FragmentManagerState A[IMMUTABLE_TYPE, THIS]), (r2 I:android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

