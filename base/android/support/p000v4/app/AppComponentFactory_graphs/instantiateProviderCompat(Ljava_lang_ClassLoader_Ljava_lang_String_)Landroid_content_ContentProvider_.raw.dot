digraph "CFG forandroid.support.v4.app.AppComponentFactory.instantiateProviderCompat(Ljava\/lang\/ClassLoader;Ljava\/lang\/String;)Landroid\/content\/ContentProvider;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r2 I:java.lang.Class) = (r2 I:java.lang.ClassLoader), (r3 I:java.lang.String) java.lang.ClassLoader.loadClass(java.lang.String):java.lang.Class type: VIRTUAL A[Catch:\{ NoSuchMethodException \| InvocationTargetException \-\> 0x0014 \}, TRY_ENTER]\l0x0004: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ NoSuchMethodException \| InvocationTargetException \-\> 0x0014 \}]\l0x0005: NEW_ARRAY  (r0 I:java.lang.Class[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ NoSuchMethodException \| InvocationTargetException \-\> 0x0014 \}]\l0x0007: INVOKE  (r2 I:java.lang.reflect.Constructor) = (r2 I:java.lang.Class), (r0 I:java.lang.Class[]) java.lang.Class.getDeclaredConstructor(java.lang.Class[]):java.lang.reflect.Constructor type: VIRTUAL A[Catch:\{ NoSuchMethodException \| InvocationTargetException \-\> 0x0014 \}]\l0x000b: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ NoSuchMethodException \| InvocationTargetException \-\> 0x0014 \}]\l0x000d: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:java.lang.reflect.Constructor)\l  (r3 I:java.lang.Object[])\l java.lang.reflect.Constructor.newInstance(java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ NoSuchMethodException \| InvocationTargetException \-\> 0x0014 \}]\l0x0011: CHECK_CAST  (r2 I:android.content.ContentProvider) = (android.content.ContentProvider) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ NoSuchMethodException \| InvocationTargetException \-\> 0x0014 \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: RETURN  (r2 I:android.content.ContentProvider) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|ExcHandler: NoSuchMethodException \| InvocationTargetException null\lSplitter:B:0:0x0000\l|0x0014: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: NEW_INSTANCE  (r3 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0017: CONST_STR  (r0 I:java.lang.String) =  \"Couldn't call constructor\" \l0x0019: INVOKE  \l  (r3 I:java.lang.RuntimeException)\l  (r0 I:java.lang.String)\l  (r2 I:java.lang.Throwable)\l java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public android.content.ContentProvider android.support.v4.app.AppComponentFactory.instantiateProviderCompat((r1 'this' I:android.support.v4.app.AppComponentFactory A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.ClassLoader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.ClassNotFoundException]\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

