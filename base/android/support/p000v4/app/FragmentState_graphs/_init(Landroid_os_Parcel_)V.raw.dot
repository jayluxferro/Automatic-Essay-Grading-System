digraph "CFG forandroid.support.v4.app.FragmentState.\<init\>(Landroid\/os\/Parcel;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: INVOKE  (r0 I:java.lang.String) = (r4 I:android.os.Parcel) android.os.Parcel.readString():java.lang.String type: VIRTUAL \l0x0007: IPUT  \l  (r0 I:java.lang.String)\l  (r3 I:android.support.v4.app.FragmentState)\l android.support.v4.app.FragmentState.mClassName java.lang.String \l0x0009: INVOKE  (r0 I:int) = (r4 I:android.os.Parcel) android.os.Parcel.readInt():int type: VIRTUAL \l0x000d: IPUT  (r0 I:int), (r3 I:android.support.v4.app.FragmentState) android.support.v4.app.FragmentState.mIndex int \l0x000f: INVOKE  (r0 I:int) = (r4 I:android.os.Parcel) android.os.Parcel.readInt():int type: VIRTUAL \l0x0013: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0019 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: IPUT  (r0 I:boolean), (r3 I:android.support.v4.app.FragmentState) android.support.v4.app.FragmentState.mFromLayout boolean \l0x001c: INVOKE  (r0 I:int) = (r4 I:android.os.Parcel) android.os.Parcel.readInt():int type: VIRTUAL \l0x0020: IPUT  (r0 I:int), (r3 I:android.support.v4.app.FragmentState) android.support.v4.app.FragmentState.mFragmentId int \l0x0022: INVOKE  (r0 I:int) = (r4 I:android.os.Parcel) android.os.Parcel.readInt():int type: VIRTUAL \l0x0026: IPUT  (r0 I:int), (r3 I:android.support.v4.app.FragmentState) android.support.v4.app.FragmentState.mContainerId int \l0x0028: INVOKE  (r0 I:java.lang.String) = (r4 I:android.os.Parcel) android.os.Parcel.readString():java.lang.String type: VIRTUAL \l0x002c: IPUT  \l  (r0 I:java.lang.String)\l  (r3 I:android.support.v4.app.FragmentState)\l android.support.v4.app.FragmentState.mTag java.lang.String \l0x002e: INVOKE  (r0 I:int) = (r4 I:android.os.Parcel) android.os.Parcel.readInt():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0032|0x0032: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0036 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0034|0x0034: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0036|0x0036: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|0x0037: IPUT  (r0 I:boolean), (r3 I:android.support.v4.app.FragmentState) android.support.v4.app.FragmentState.mRetainInstance boolean \l0x0039: INVOKE  (r0 I:int) = (r4 I:android.os.Parcel) android.os.Parcel.readInt():int type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|0x003d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0041 \l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|0x003f: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0041|0x0041: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0042|0x0042: IPUT  (r0 I:boolean), (r3 I:android.support.v4.app.FragmentState) android.support.v4.app.FragmentState.mDetached boolean \l0x0044: INVOKE  (r0 I:android.os.Bundle) = (r4 I:android.os.Parcel) android.os.Parcel.readBundle():android.os.Bundle type: VIRTUAL \l0x0048: IPUT  \l  (r0 I:android.os.Bundle)\l  (r3 I:android.support.v4.app.FragmentState)\l android.support.v4.app.FragmentState.mArguments android.os.Bundle \l0x004a: INVOKE  (r0 I:int) = (r4 I:android.os.Parcel) android.os.Parcel.readInt():int type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x004e|0x004e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0051 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0050|0x0050: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0051|0x0051: IPUT  (r1 I:boolean), (r3 I:android.support.v4.app.FragmentState) android.support.v4.app.FragmentState.mHidden boolean \l0x0053: INVOKE  (r4 I:android.os.Bundle) = (r4 I:android.os.Parcel) android.os.Parcel.readBundle():android.os.Bundle type: VIRTUAL \l0x0057: IPUT  \l  (r4 I:android.os.Bundle)\l  (r3 I:android.support.v4.app.FragmentState)\l android.support.v4.app.FragmentState.mSavedFragmentState android.os.Bundle \l}"];
Node_16 [shape=record,label="{16\:\ 0x0059|0x0059: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.v4.app.FragmentState.\<init\>((r3 'this' I:android.support.v4.app.FragmentState A[IMMUTABLE_TYPE, THIS]), (r4 I:android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

