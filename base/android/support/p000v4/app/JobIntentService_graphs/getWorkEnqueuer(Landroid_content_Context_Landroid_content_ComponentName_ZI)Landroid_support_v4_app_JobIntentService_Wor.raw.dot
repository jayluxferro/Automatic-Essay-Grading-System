digraph "CFG forandroid.support.v4.app.JobIntentService.getWorkEnqueuer(Landroid\/content\/Context;Landroid\/content\/ComponentName;ZI)Landroid\/support\/v4\/app\/JobIntentService$WorkEnqueuer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:java.util.HashMap\<android.content.ComponentName, android.support.v4.app.JobIntentService$WorkEnqueuer\>) =  android.support.v4.app.JobIntentService.sClassWorkEnqueuer java.util.HashMap \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.HashMap), (r3 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:android.support.v4.app.JobIntentService$WorkEnqueuer) = (android.support.v4.app.JobIntentService$WorkEnqueuer) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x000c: CONST  (r1 I:?[int, float, short, byte, char]) = (26 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:8:0x0020 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: NEW_INSTANCE  (r4 I:android.support.v4.app.JobIntentService$JobWorkEnqueuer) =  android.support.v4.app.JobIntentService$JobWorkEnqueuer \l0x0014: INVOKE  \l  (r4 I:android.support.v4.app.JobIntentService$JobWorkEnqueuer)\l  (r2 I:android.content.Context)\l  (r3 I:android.content.ComponentName)\l  (r5 I:int)\l android.support.v4.app.JobIntentService.JobWorkEnqueuer.\<init\>(android.content.Context, android.content.ComponentName, int):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x001a: CONST_STR  (r3 I:java.lang.String) =  \"Can't be here without a job id\" \l0x001c: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: NEW_INSTANCE  (r4 I:android.support.v4.app.JobIntentService$CompatWorkEnqueuer) =  android.support.v4.app.JobIntentService$CompatWorkEnqueuer \l0x0022: INVOKE  \l  (r4 I:android.support.v4.app.JobIntentService$CompatWorkEnqueuer)\l  (r2 I:android.content.Context)\l  (r3 I:android.content.ComponentName)\l android.support.v4.app.JobIntentService.CompatWorkEnqueuer.\<init\>(android.content.Context, android.content.ComponentName):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0026: SGET  (r2 I:java.util.HashMap\<android.content.ComponentName, android.support.v4.app.JobIntentService$WorkEnqueuer\>) =  android.support.v4.app.JobIntentService.sClassWorkEnqueuer java.util.HashMap \l0x0028: INVOKE  \l  (r2 I:java.util.HashMap)\l  (r3 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: RETURN  (r0 I:android.support.v4.app.JobIntentService$WorkEnqueuer) \l}"];
MethodNode[shape=record,label="{static android.support.v4.app.JobIntentService$WorkEnqueuer android.support.v4.app.JobIntentService.getWorkEnqueuer((r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.content.ComponentName A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

