digraph "CFG forandroid.support.v4.app.JobIntentService.enqueueWork(Landroid\/content\/Context;Landroid\/content\/ComponentName;ILandroid\/content\/Intent;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0015 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: SGET  (r0 I:java.lang.Object) =  android.support.v4.app.JobIntentService.sLock java.lang.Object \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|SYNTHETIC\lSplitter:B:4:0x0006\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x0006\l|0x0006: INVOKE  (r2 I:android.support.v4.app.JobIntentService$WorkEnqueuer) = \l  (r2 I:android.content.Context)\l  (r3 I:android.content.ComponentName)\l  (r1 I:boolean)\l  (r4 I:int)\l android.support.v4.app.JobIntentService.getWorkEnqueuer(android.content.Context, android.content.ComponentName, boolean, int):android.support.v4.app.JobIntentService$WorkEnqueuer type: STATIC A[Catch:\{ all \-\> 0x0012 \}, TRY_ENTER]\l0x000a: INVOKE  \l  (r2 I:android.support.v4.app.JobIntentService$WorkEnqueuer)\l  (r4 I:int)\l android.support.v4.app.JobIntentService.WorkEnqueuer.ensureJobId(int):void type: VIRTUAL A[Catch:\{ all \-\> 0x0012 \}]\l0x000d: INVOKE  \l  (r2 I:android.support.v4.app.JobIntentService$WorkEnqueuer)\l  (r5 I:android.content.Intent)\l android.support.v4.app.JobIntentService.WorkEnqueuer.enqueueWork(android.content.Intent):void type: VIRTUAL A[Catch:\{ all \-\> 0x0012 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0012 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: RETURN   A[Catch:\{ all \-\> 0x0012 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|ExcHandler: all null\lSplitter:B:4:0x0006\l|0x0012: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0012 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0012 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|0x0014: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|0x0015: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0017: CONST_STR  (r3 I:java.lang.String) =  \"work must not be null\" \l0x0019: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|0x001c: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void android.support.v4.app.JobIntentService.enqueueWork((r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.content.ComponentName A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.content.Intent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], , Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_11;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

