digraph "CFG forandroid.support.v4.app.JobIntentService.doStopCurrentWork()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v4.app.JobIntentService$CommandProcessor) = (r2 I:android.support.v4.app.JobIntentService) android.support.v4.app.JobIntentService.mCurProcessor android.support.v4.app.JobIntentService$CommandProcessor \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:android.support.v4.app.JobIntentService$CommandProcessor) = (r2 I:android.support.v4.app.JobIntentService) android.support.v4.app.JobIntentService.mCurProcessor android.support.v4.app.JobIntentService$CommandProcessor \l0x0006: IGET  (r1 I:boolean) = (r2 I:android.support.v4.app.JobIntentService) android.support.v4.app.JobIntentService.mInterruptIfStopped boolean \l0x0008: INVOKE  \l  (r0 I:android.support.v4.app.JobIntentService$CommandProcessor)\l  (r1 I:boolean)\l android.support.v4.app.JobIntentService.CommandProcessor.cancel(boolean):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000c: IPUT  \l  (r0 I:boolean)\l  (r2 I:android.support.v4.app.JobIntentService)\l android.support.v4.app.JobIntentService.mStopped boolean \l0x000e: INVOKE  (r0 I:boolean) = (r2 I:android.support.v4.app.JobIntentService) android.support.v4.app.JobIntentService.onStopCurrentWork():boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean android.support.v4.app.JobIntentService.doStopCurrentWork((r2 'this' I:android.support.v4.app.JobIntentService A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

