digraph "CFG forandroid.support.v4.app.JobIntentService.dequeueWork()Landroid\/support\/v4\/app\/JobIntentService$GenericWorkItem;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3.mJobImpl == null) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return r3.mJobImpl.dequeueWork()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|java.util.ArrayList\<android.support.v4.app.JobIntentService$CompatWorkItem\> r0 = r3.mCompatQueue\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|monitor\-enter(r0)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|SYNTHETIC\l}"];
Node_7 [shape=record,label="{7\:\ ?}"];
Node_8 [shape=record,label="{8\:\ 0x0014|if (r3.mCompatQueue.size() \<= 0) goto L_0x0021\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|android.support.v4.app.JobIntentService$GenericWorkItem r1 = r3.mCompatQueue.remove(0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|monitor\-exit(r0)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|RETURN\l|return r1\l}"];
Node_12 [shape=record,label="{12\:\ 0x0021}"];
Node_13 [shape=record,label="{13\:\ 0x0022|monitor\-exit(r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|RETURN\l|return null\l}"];
Node_15 [shape=record,label="{15\:\ 0x0024|REMOVE\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_16 [shape=record,label="{16\:\ 0x0025|REMOVE\l}"];
Node_17 [shape=record,label="{17\:\ 0x0026|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{android.support.v4.app.JobIntentService$GenericWorkItem android.support.v4.app.JobIntentService.dequeueWork((r3v0 'this' android.support.v4.app.JobIntentService A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

