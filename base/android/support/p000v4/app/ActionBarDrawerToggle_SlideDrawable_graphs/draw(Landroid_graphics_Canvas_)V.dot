digraph "CFG forandroid.support.v4.app.ActionBarDrawerToggle.SlideDrawable.draw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|copyBounds(r5.mTmpRect)\lr6.save()\lr1 = 1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|if (android.support.p000v4.view.ViewCompat.getLayoutDirection(r5.this$0.mActivity.getWindow().getDecorView()) != 1) goto L_0x001d\l}"];
Node_2 [shape=record,label="{2\:\ 0x001b|r0 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|r0 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|PHI: r0 \l  PHI: (r0v6 boolean) = (r0v9 boolean), (r0v10 boolean) binds: [B:3:0x001d, B:2:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L_0x0021\l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|r1 = \-1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v5 int) binds: [B:4:0x001e, B:5:0x0020] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = r5.mTmpRect.width()\lfloat r2 = (float) r2\lr6.translate((((\-r5.mOffset) * r2) * r5.mPosition) * ((float) r1), 0.0f)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0038|if (r0 == false) goto L_0x0048\l}"];
Node_8 [shape=record,label="{8\:\ 0x003a}"];
Node_9 [shape=record,label="{9\:\ 0x003c|if (r5.mHasMirroring != false) goto L_0x0048\l}"];
Node_10 [shape=record,label="{10\:\ 0x003e|r6.translate(r2, 0.0f)\lr6.scale(\-1.0f, 1.0f)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0048|super.draw(r6)\lr6.restore()\l}"];
Node_12 [shape=record,label="{12\:\ 0x004e|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.v4.app.ActionBarDrawerToggle.SlideDrawable.draw((r5v0 'this' android.support.v4.app.ActionBarDrawerToggle$SlideDrawable A[IMMUTABLE_TYPE, THIS]), (r6v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

