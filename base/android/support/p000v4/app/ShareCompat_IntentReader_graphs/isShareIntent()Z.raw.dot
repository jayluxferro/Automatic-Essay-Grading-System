digraph "CFG forandroid.support.v4.app.ShareCompat.IntentReader.isShareIntent()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.content.Intent) = (r2 I:android.support.v4.app.ShareCompat$IntentReader) android.support.v4.app.ShareCompat.IntentReader.mIntent android.content.Intent \l0x0002: INVOKE  (r0 I:java.lang.String) = (r0 I:android.content.Intent) android.content.Intent.getAction():java.lang.String type: VIRTUAL \l0x0006: CONST_STR  (r1 I:java.lang.String) =  \"android.intent.action.SEND\" \l0x0008: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0019 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: CONST_STR  (r1 I:java.lang.String) =  \"android.intent.action.SEND_MULTIPLE\" \l0x0010: INVOKE  (r0 I:boolean) = (r1 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.v4.app.ShareCompat.IntentReader.isShareIntent((r2 'this' I:android.support.v4.app.ShareCompat$IntentReader A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
}

