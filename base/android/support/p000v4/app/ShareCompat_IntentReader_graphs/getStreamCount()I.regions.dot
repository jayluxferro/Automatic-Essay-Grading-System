digraph "CFG forandroid.support.v4.app.ShareCompat.IntentReader.getStreamCount()I" {
subgraph cluster_Region_439324271 {
label = "R(2:(1:4)|(2:(1:8)|(1:10)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_469829993 {
label = "IF [B:1:0x0002, B:3:0x0008] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|ADDED_TO_REGION\l|if (r2.mStreams == null) goto L_0x0004\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|ADDED_TO_REGION\l|if (isMultipleShare() == true) goto L_0x000a\l}"];
subgraph cluster_Region_644135139 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|r2.mStreams = r2.mIntent.getParcelableArrayListExtra(\"android.intent.extra.STREAM\")\l}"];
}
}
subgraph cluster_Region_1770703222 {
label = "R(2:(1:8)|(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_263225054 {
label = "IF [B:6:0x0016] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|if (r2.mStreams != null) goto L_0x0018\l}"];
subgraph cluster_Region_460219392 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001e|RETURN\l|return r2.mStreams.size()\l}"];
}
}
subgraph cluster_Region_416179246 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0027|RETURN\l|return r2.mIntent.hasExtra(\"android.intent.extra.STREAM\") ? 1 : 0\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0014}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0018}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001f}"];
MethodNode[shape=record,label="{public int android.support.v4.app.ShareCompat.IntentReader.getStreamCount((r2v0 'this' android.support.v4.app.ShareCompat$IntentReader A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_10;
}

