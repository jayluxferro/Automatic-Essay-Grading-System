digraph "CFG forandroid.support.v4.app.ShareCompat.IntentReader.withinStyle(Ljava\/lang\/StringBuilder;Ljava\/lang\/CharSequence;II)V" {
subgraph cluster_Region_591900134 {
label = "R(1:(3:1|(1:3)(1:(1:6)(1:(1:9)(1:(1:22)(1:(2:(2:15|(1:20)(1:19))|20)(1:21)))))|23))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1850811886 {
label = "LOOP:0: (3:1|(1:3)(1:(1:6)(1:(1:9)(1:(1:22)(1:(2:(2:15|(1:20)(1:19))|20)(1:21)))))|23)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lPHI: r5 \l  PHI: (r5v1 int) = (r5v0 int), (r5v3 int) binds: [B:0:0x0000, B:23:0x0061] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:23:0x0061\l|if (r5 \< r6) goto L_0x0002\l}"];
subgraph cluster_Region_829797115 {
label = "R(3:1|(1:3)(1:(1:6)(1:(1:9)(1:(1:22)(1:(2:(2:15|(1:20)(1:19))|20)(1:21)))))|23)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|char char r0 = r4.charAt(r5)\l}"];
subgraph cluster_IfRegion_1336793882 {
label = "IF [B:2:0x0008] THEN: R(1:3) ELSE: R(1:(1:6)(1:(1:9)(1:(1:22)(1:(2:(2:15|(1:20)(1:19))|20)(1:21)))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|if (r0 == '\<') goto L_0x000a\l}"];
subgraph cluster_Region_264327963 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|r3.append(\"&lt;\")\l}"];
}
subgraph cluster_Region_1605869835 {
label = "R(1:(1:6)(1:(1:9)(1:(1:22)(1:(2:(2:15|(1:20)(1:19))|20)(1:21))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2144424178 {
label = "IF [B:5:0x0012] THEN: R(1:6) ELSE: R(1:(1:9)(1:(1:22)(1:(2:(2:15|(1:20)(1:19))|20)(1:21)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|if (r0 == '\>') goto L_0x0014\l}"];
subgraph cluster_Region_1090592646 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0014|r3.append(\"&gt;\")\l}"];
}
subgraph cluster_Region_639118365 {
label = "R(1:(1:9)(1:(1:22)(1:(2:(2:15|(1:20)(1:19))|20)(1:21)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_659150180 {
label = "IF [B:8:0x001c] THEN: R(1:9) ELSE: R(1:(1:22)(1:(2:(2:15|(1:20)(1:19))|20)(1:21))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001c|if (r0 == '&') goto L_0x001e\l}"];
subgraph cluster_Region_591718990 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001e|r3.append(\"&amp;\")\l}"];
}
subgraph cluster_Region_1092204756 {
label = "R(1:(1:22)(1:(2:(2:15|(1:20)(1:19))|20)(1:21))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_993483036 {
label = "IF [B:11:0x0026, B:13:0x002a] THEN: R(1:22) ELSE: R(1:(2:(2:15|(1:20)(1:19))|20)(1:21)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0026|if (r0 \> '~') goto L_0x0048\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|ADDED_TO_REGION\l|if (r0 \< ' ') goto L_0x0048\l}"];
subgraph cluster_Region_442708075 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0048|r3.append(\"&#\" + r0 + \";\")\l}"];
}
subgraph cluster_Region_137192030 {
label = "R(1:(2:(2:15|(1:20)(1:19))|20)(1:21)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1866511637 {
label = "IF [B:14:0x002d] THEN: R(2:(2:15|(1:20)(1:19))|20) ELSE: R(1:21) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002d|if (r0 == ' ') goto L_0x002f\l}"];
subgraph cluster_Region_1865600898 {
label = "R(2:(2:15|(1:20)(1:19))|20)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1805672112 {
label = "LOOP:1: (2:15|(1:20)(1:19))";
node [shape=record,color=blue];
subgraph cluster_Region_120973584 {
label = "R(2:15|(1:20)(1:19))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002f|LOOP_START\lPHI: r5 \l  PHI: (r5v4 int) = (r5v1 int), (r5v6 int) binds: [B:14:0x002d, B:19:0x0039] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:15:0x002f\-\>B:19:0x0039\l|int int r0 = r5 + 1\l}"];
subgraph cluster_IfRegion_72774133 {
label = "IF [B:16:0x0031, B:18:0x0037] THEN: R(1:20) ELSE: R(1:19)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0031|if (r0 \>= r6) goto L_0x0040\l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|ADDED_TO_REGION\l|if (r4.charAt(r0) != ' ') goto L_0x0040\l}"];
subgraph cluster_Region_1744016392 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0040|EDGE_INSN: B:32:0x0040\-\>B:20:0x0040 ?: BREAK  \lEDGE_INSN: B:33:0x0040\-\>B:20:0x0040 ?: BREAK  \l|r3.append(' ')\l}"];
}
subgraph cluster_Region_1851032695 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0039|LOOP_END\lLOOP:1: B:15:0x002f\-\>B:19:0x0039\l|r3.append(\"&nbsp;\")\lr5 = r0\l}"];
}
}
}
}
Node_20 [shape=record,label="{20\:\ 0x0040|EDGE_INSN: B:32:0x0040\-\>B:20:0x0040 ?: BREAK  \lEDGE_INSN: B:33:0x0040\-\>B:20:0x0040 ?: BREAK  \l|r3.append(' ')\l}"];
}
subgraph cluster_Region_114016108 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0044|r3.append(r0)\l}"];
}
}
}
}
}
}
}
}
}
}
Node_23 [shape=record,label="{23\:\ 0x0061|LOOP_END\lPHI: r5 \l  PHI: (r5v2 int) = (r5v1 int), (r5v1 int), (r5v4 int), (r5v1 int), (r5v1 int), (r5v1 int) binds: [B:26:0x0061, B:31:0x0061, B:30:0x0061, B:29:0x0061, B:28:0x0061, B:27:0x0061] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:23:0x0061\l|r5++\l}"];
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0010}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001a}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0024}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0028}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0033}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0064}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0064|SYNTHETIC\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0061|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0061|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0061|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0061|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0061|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0061|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0040|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:32:0x0040\-\>B:20:0x0040 ?: BREAK  \l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0040|SYNTHETIC\lEDGE_INSN: B:33:0x0040\-\>B:20:0x0040 ?: BREAK  \l}"];
MethodNode[shape=record,label="{private static void android.support.v4.app.ShareCompat.IntentReader.withinStyle((r3v0 java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_25[style=dashed];
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_3 -> Node_27;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_28;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_29;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_22;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_22;
Node_22 -> Node_26;
Node_14 -> Node_15;
Node_14 -> Node_21[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_32;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_33;
Node_20 -> Node_30;
Node_19 -> Node_15;
Node_20 -> Node_30;
Node_21 -> Node_31;
Node_23 -> Node_0;
Node_4 -> Node_5;
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_17 -> Node_18;
Node_25 -> Node_24;
Node_26 -> Node_23;
Node_27 -> Node_23;
Node_28 -> Node_23;
Node_29 -> Node_23;
Node_30 -> Node_23;
Node_31 -> Node_23;
Node_32 -> Node_20;
Node_33 -> Node_20;
}

