digraph "CFG forandroid.support.v4.app.Fragment.performCreateView(Landroid\/view\/LayoutInflater;Landroid\/view\/ViewGroup;Landroid\/os\/Bundle;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1.mChildFragmentManager == null) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r1.mChildFragmentManager.noteStateNotSaved()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|r1.mPerformedCreateView = true\lr1.mViewLifecycleOwner = new android.support.p000v4.app.Fragment.C02413(r1)\lr1.mViewLifecycleRegistry = null\lr1.mView = onCreateView(r2, r3, r4)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|if (r1.mView == null) goto L_0x002d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|r1.mViewLifecycleOwner.getLifecycle()\lr1.mViewLifecycleOwnerLiveData.setValue(r1.mViewLifecycleOwner)\l}"];
Node_6 [shape=record,label="{6\:\ 0x002d}"];
Node_7 [shape=record,label="{7\:\ 0x002f|if (r1.mViewLifecycleRegistry != null) goto L_0x0034\l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|r1.mViewLifecycleOwner = null\l}"];
Node_9 [shape=record,label="{9\:\ 0x0034}"];
Node_10 [shape=record,label="{10\:\ 0x003b|throw new java.lang.IllegalStateException(\"Called getViewLifecycleOwner() but onCreateView() returned null\")\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void android.support.v4.app.Fragment.performCreateView((r1v0 'this' android.support.v4.app.Fragment A[IMMUTABLE_TYPE, THIS]), (r2v0 android.view.LayoutInflater A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 android.view.ViewGroup A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_11;
Node_9 -> Node_10;
}

