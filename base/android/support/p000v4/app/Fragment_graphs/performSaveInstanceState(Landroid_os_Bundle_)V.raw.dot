digraph "CFG forandroid.support.v4.app.Fragment.performSaveInstanceState(Landroid\/os\/Bundle;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r2 I:android.support.v4.app.Fragment)\l  (r3 I:android.os.Bundle)\l android.support.v4.app.Fragment.onSaveInstanceState(android.os.Bundle):void type: VIRTUAL \l0x0003: IGET  (r0 I:android.support.v4.app.FragmentManagerImpl) = (r2 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.mChildFragmentManager android.support.v4.app.FragmentManagerImpl \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IGET  (r0 I:android.support.v4.app.FragmentManagerImpl) = (r2 I:android.support.v4.app.Fragment) android.support.v4.app.Fragment.mChildFragmentManager android.support.v4.app.FragmentManagerImpl \l0x0009: INVOKE  (r0 I:android.os.Parcelable) = (r0 I:android.support.v4.app.FragmentManagerImpl) android.support.v4.app.FragmentManagerImpl.saveAllState():android.os.Parcelable type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0014 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: CONST_STR  (r1 I:java.lang.String) =  \"android:support:fragments\" \l0x0011: INVOKE  \l  (r3 I:android.os.Bundle)\l  (r1 I:java.lang.String)\l  (r0 I:android.os.Parcelable)\l android.os.Bundle.putParcelable(java.lang.String, android.os.Parcelable):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.v4.app.Fragment.performSaveInstanceState((r2 'this' I:android.support.v4.app.Fragment A[IMMUTABLE_TYPE, THIS]), (r3 I:android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
}

