digraph "CFG forandroid.support.v4.app.Fragment.getViewModelStore()Landroid\/arch\/lifecycle\/ViewModelStore;" {
subgraph cluster_Region_1302417003 {
label = "R(1:(2:(2:(1:4)|6)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_505884071 {
label = "R(2:(2:(1:4)|6)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_33950307 {
label = "IF [B:1:0x0004] THEN: R(2:(1:4)|6) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (getContext() != null) goto L_0x0006\l}"];
subgraph cluster_Region_1841547498 {
label = "R(2:(1:4)|6)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_710283567 {
label = "IF [B:3:0x0008] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r2.mViewModelStore == null) goto L_0x000a\l}"];
subgraph cluster_Region_230382551 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|r2.mViewModelStore = new android.arch.lifecycle.ViewModelStore()\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0013|RETURN\l|return r2.mViewModelStore\l}"];
}
}
subgraph cluster_Region_1063001361 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001b|throw new java.lang.IllegalStateException(\"Can't access ViewModels from detached fragment\")\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0011}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0014}"];
MethodNode[shape=record,label="{public android.arch.lifecycle.ViewModelStore android.support.v4.app.Fragment.getViewModelStore((r2v0 'this' android.support.v4.app.Fragment A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

