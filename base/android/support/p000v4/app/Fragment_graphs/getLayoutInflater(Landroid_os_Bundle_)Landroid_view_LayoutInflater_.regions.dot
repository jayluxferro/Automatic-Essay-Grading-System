digraph "CFG forandroid.support.v4.app.Fragment.getLayoutInflater(Landroid\/os\/Bundle;)Landroid\/view\/LayoutInflater;" {
subgraph cluster_Region_1051012916 {
label = "R(1:(2:(2:2|3)|(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_901545939 {
label = "R(2:(2:2|3)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1160577973 {
label = "IF [B:1:0x0002] THEN: R(2:2|3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1.mHost != null) goto L_0x0004\l}"];
subgraph cluster_Region_358004280 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|android.view.LayoutInflater android.view.LayoutInflater r2 = r1.mHost.onGetLayoutInflater()\lgetChildFragmentManager()\landroid.support.p000v4.view.LayoutInflaterCompat.setFactory2(r2, r1.mChildFragmentManager.getLayoutInflaterFactory())\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|RETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_478708436 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001e|throw new java.lang.IllegalStateException(\"onGetLayoutInflater() cannot be executed until the Fragment is attached to the FragmentManager.\")\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0017}"];
MethodNode[shape=record,label="{public android.view.LayoutInflater android.support.v4.app.Fragment.getLayoutInflater((r1v0 'this' android.support.v4.app.Fragment A[IMMUTABLE_TYPE, THIS]), (r2v0 android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[BUILD, android.support.annotation.RestrictTo, \{value=[android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP android.support.annotation.RestrictTo$Scope]\}], Annotation[RUNTIME, java.lang.Deprecated, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_0 -> Node_1;
Node_4 -> Node_5;
}

