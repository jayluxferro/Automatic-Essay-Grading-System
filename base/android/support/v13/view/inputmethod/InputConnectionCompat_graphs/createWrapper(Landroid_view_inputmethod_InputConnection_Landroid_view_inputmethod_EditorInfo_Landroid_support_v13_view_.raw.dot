digraph "CFG forandroid.support.v13.view.inputmethod.InputConnectionCompat.createWrapper(Landroid\/view\/inputmethod\/InputConnection;Landroid\/view\/inputmethod\/EditorInfo;Landroid\/support\/v13\/view\/inputmethod\/InputConnectionCompat$OnCommitContentListener;)Landroid\/view\/inputmethod\/InputConnection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0031 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0029 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0021 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0008: CONST  (r1 I:?[int, float, short, byte, char]) = (25 ?[int, float, short, byte, char]) \l0x000a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:7:0x0013 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: NEW_INSTANCE  (r4 I:android.support.v13.view.inputmethod.InputConnectionCompat$1) =  android.support.v13.view.inputmethod.InputConnectionCompat$1 \l0x000f: INVOKE  \l  (r4 I:android.support.v13.view.inputmethod.InputConnectionCompat$1)\l  (r3 I:android.view.inputmethod.InputConnection)\l  (r2 I:boolean)\l  (r5 I:android.support.v13.view.inputmethod.InputConnectionCompat$OnCommitContentListener)\l android.support.v13.view.inputmethod.InputConnectionCompat.1.\<init\>(android.view.inputmethod.InputConnection, boolean, android.support.v13.view.inputmethod.InputConnectionCompat$OnCommitContentListener):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: RETURN  (r4 I:android.view.inputmethod.InputConnection) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: INVOKE  (r4 I:java.lang.String[]) = (r4 I:android.view.inputmethod.EditorInfo) android.support.v13.view.inputmethod.EditorInfoCompat.getContentMimeTypes(android.view.inputmethod.EditorInfo):java.lang.String[] type: STATIC \l0x0017: ARRAY_LENGTH  (r4 I:int) = (r4 I:?[]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001b \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: RETURN  (r3 I:android.view.inputmethod.InputConnection) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: NEW_INSTANCE  (r4 I:android.support.v13.view.inputmethod.InputConnectionCompat$2) =  android.support.v13.view.inputmethod.InputConnectionCompat$2 \l0x001d: INVOKE  \l  (r4 I:android.support.v13.view.inputmethod.InputConnectionCompat$2)\l  (r3 I:android.view.inputmethod.InputConnection)\l  (r2 I:boolean)\l  (r5 I:android.support.v13.view.inputmethod.InputConnectionCompat$OnCommitContentListener)\l android.support.v13.view.inputmethod.InputConnectionCompat.2.\<init\>(android.view.inputmethod.InputConnection, boolean, android.support.v13.view.inputmethod.InputConnectionCompat$OnCommitContentListener):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: RETURN  (r4 I:android.view.inputmethod.InputConnection) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|0x0021: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0023: CONST_STR  (r4 I:java.lang.String) =  \"onCommitContentListener must be non\-null\" \l0x0025: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|0x0028: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|0x0029: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x002b: CONST_STR  (r4 I:java.lang.String) =  \"editorInfo must be non\-null\" \l0x002d: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0030|0x0030: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0031|0x0031: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0033: CONST_STR  (r4 I:java.lang.String) =  \"inputConnection must be non\-null\" \l0x0035: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0038|0x0038: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static android.view.inputmethod.InputConnection android.support.v13.view.inputmethod.InputConnectionCompat.createWrapper((r3 I:android.view.inputmethod.InputConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.view.inputmethod.EditorInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.support.v13.view.inputmethod.InputConnectionCompat$OnCommitContentListener A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_16;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_12;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

