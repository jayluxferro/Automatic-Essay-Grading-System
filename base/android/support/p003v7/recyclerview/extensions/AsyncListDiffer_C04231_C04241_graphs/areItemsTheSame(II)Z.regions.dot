digraph "CFG forandroid.support.v7.recyclerview.extensions.AsyncListDiffer.1.1.areItemsTheSame(II)Z" {
subgraph cluster_Region_1762396704 {
label = "R(2:0|(2:(1:4)|(1:8)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.Object T r1 = r1.get(r4)\ljava.lang.Object T r0 = r7.get(r5)\l}"];
subgraph cluster_Region_387222339 {
label = "R(2:(1:4)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1717839779 {
label = "IF [B:1:0x0010, B:2:0x0012] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0010|if (r1 == null) goto L_0x0023\l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|ADDED_TO_REGION\l|if (r0 == null) goto L_0x0023\l}"];
subgraph cluster_Region_160398702 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0023|RETURN\l|return r1 == null && r0 == null\l}"];
}
}
subgraph cluster_Region_262515725 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return android.support.p003v7.recyclerview.extensions.AsyncListDiffer.this.mConfig.getDiffCallback().areItemsTheSame(r1, r0)\l}"];
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0014}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0025|REMOVE\lADDED_TO_REGION\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0027|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0029|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean android.support.v7.recyclerview.extensions.AsyncListDiffer.1.1.areItemsTheSame((r3v0 'this' android.support.v7.recyclerview.extensions.AsyncListDiffer$1$1 A[IMMUTABLE_TYPE, THIS]), (r4v0 'oldItemPosition' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'newItemPosition' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_3 -> Node_8;
Node_5 -> Node_6;
Node_5 -> Node_7;
}

