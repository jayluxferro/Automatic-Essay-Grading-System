digraph "CFG forandroid.support.v7.view.SupportActionModeWrapper.CallbackWrapper.getActionModeWrapper(Landroid\/support\/v7\/view\/ActionMode;)Landroid\/view\/ActionMode;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.ArrayList\<android.support.v7.view.SupportActionModeWrapper\>) = \l  (r4 I:android.support.v7.view.SupportActionModeWrapper$CallbackWrapper)\l android.support.v7.view.SupportActionModeWrapper.CallbackWrapper.mActionModes java.util.ArrayList \l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:8:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r2 I:java.util.ArrayList\<android.support.v7.view.SupportActionModeWrapper\>) = \l  (r4 I:android.support.v7.view.SupportActionModeWrapper$CallbackWrapper)\l android.support.v7.view.SupportActionModeWrapper.CallbackWrapper.mActionModes java.util.ArrayList \l0x000b: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.ArrayList), (r1 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x000f: CHECK_CAST  (r2 I:android.support.v7.view.SupportActionModeWrapper) = (android.support.v7.view.SupportActionModeWrapper) (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0018 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IGET  (r3 I:android.support.v7.view.ActionMode) = (r2 I:android.support.v7.view.SupportActionModeWrapper) android.support.v7.view.SupportActionModeWrapper.mWrappedObject android.support.v7.view.ActionMode \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0018 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: RETURN  (r2 I:android.view.ActionMode) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: NEW_INSTANCE  (r0 I:android.support.v7.view.SupportActionModeWrapper) =  android.support.v7.view.SupportActionModeWrapper \l0x001d: IGET  (r1 I:android.content.Context) = \l  (r4 I:android.support.v7.view.SupportActionModeWrapper$CallbackWrapper)\l android.support.v7.view.SupportActionModeWrapper.CallbackWrapper.mContext android.content.Context \l0x001f: INVOKE  \l  (r0 I:android.support.v7.view.SupportActionModeWrapper)\l  (r1 I:android.content.Context)\l  (r5 I:android.support.v7.view.ActionMode)\l android.support.v7.view.SupportActionModeWrapper.\<init\>(android.content.Context, android.support.v7.view.ActionMode):void type: DIRECT \l0x0022: IGET  (r5 I:java.util.ArrayList\<android.support.v7.view.SupportActionModeWrapper\>) = \l  (r4 I:android.support.v7.view.SupportActionModeWrapper$CallbackWrapper)\l android.support.v7.view.SupportActionModeWrapper.CallbackWrapper.mActionModes java.util.ArrayList \l0x0024: INVOKE  (r5 I:java.util.ArrayList), (r0 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: RETURN  (r0 I:android.view.ActionMode) \l}"];
MethodNode[shape=record,label="{public android.view.ActionMode android.support.v7.view.SupportActionModeWrapper.CallbackWrapper.getActionModeWrapper((r4 'this' I:android.support.v7.view.SupportActionModeWrapper$CallbackWrapper A[IMMUTABLE_TYPE, THIS]), (r5 I:android.support.v7.view.ActionMode A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_1;
Node_8 -> Node_9;
}

