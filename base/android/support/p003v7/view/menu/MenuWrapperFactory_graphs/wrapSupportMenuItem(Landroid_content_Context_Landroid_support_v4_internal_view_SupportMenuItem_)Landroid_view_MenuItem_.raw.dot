digraph "CFG forandroid.support.v7.view.menu.MenuWrapperFactory.wrapSupportMenuItem(Landroid\/content\/Context;Landroid\/support\/v4\/internal\/view\/SupportMenuItem;)Landroid\/view\/MenuItem;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:4:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: NEW_INSTANCE  (r0 I:android.support.v7.view.menu.MenuItemWrapperJB) =  android.support.v7.view.menu.MenuItemWrapperJB \l0x0008: INVOKE  \l  (r0 I:android.support.v7.view.menu.MenuItemWrapperJB)\l  (r2 I:android.content.Context)\l  (r3 I:android.support.v4.internal.view.SupportMenuItem)\l android.support.v7.view.menu.MenuItemWrapperJB.\<init\>(android.content.Context, android.support.v4.internal.view.SupportMenuItem):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: RETURN  (r0 I:android.view.MenuItem) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:android.support.v7.view.menu.MenuItemWrapperICS) =  android.support.v7.view.menu.MenuItemWrapperICS \l0x000e: INVOKE  \l  (r0 I:android.support.v7.view.menu.MenuItemWrapperICS)\l  (r2 I:android.content.Context)\l  (r3 I:android.support.v4.internal.view.SupportMenuItem)\l android.support.v7.view.menu.MenuItemWrapperICS.\<init\>(android.content.Context, android.support.v4.internal.view.SupportMenuItem):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: RETURN  (r0 I:android.view.MenuItem) \l}"];
MethodNode[shape=record,label="{public static android.view.MenuItem android.support.v7.view.menu.MenuWrapperFactory.wrapSupportMenuItem((r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.support.v4.internal.view.SupportMenuItem A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

