digraph "CFG forandroid.support.v7.view.menu.MenuPopupHelper.tryShow(II)Z" {
subgraph cluster_Region_786245048 {
label = "R(1:(2:(1:2)|(1:(2:(1:5)|(2:6|7)))))";
node [shape=record,color=blue];
subgraph cluster_Region_705113142 {
label = "R(2:(1:2)|(1:(2:(1:5)|(2:6|7))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1775863358 {
label = "IF [B:1:0x0005] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (isShowing() == true) goto L_0x0007\l}"];
subgraph cluster_Region_474364977 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1542531812 {
label = "R(1:(2:(1:5)|(2:6|7)))";
node [shape=record,color=blue];
subgraph cluster_Region_1216666416 {
label = "R(2:(1:5)|(2:6|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1841908840 {
label = "IF [B:4:0x000a] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r2.mAnchorView == null) goto L_0x000c\l}"];
subgraph cluster_Region_1078149716 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000c|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_305657522 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000e|showPopup(r3, r4, true, true)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|return true\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0008}"];
MethodNode[shape=record,label="{public boolean android.support.v7.view.menu.MenuPopupHelper.tryShow((r2v0 'this' android.support.v7.view.menu.MenuPopupHelper A[IMMUTABLE_TYPE, THIS]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_3 -> Node_4;
}

