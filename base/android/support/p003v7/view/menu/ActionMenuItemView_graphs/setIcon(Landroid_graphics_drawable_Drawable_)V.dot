digraph "CFG forandroid.support.v7.view.menu.ActionMenuItemView.setIcon(Landroid\/graphics\/drawable\/Drawable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3.mIcon = r4\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4 == null) goto L_0x002e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|int r0 = r4.getIntrinsicWidth()\lint r1 = r4.getIntrinsicHeight()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r0 \<= r3.mMaxIconSize) goto L_0x001b\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|float r2 = ((float) r3.mMaxIconSize) \/ ((float) r0)\lint r0 = r3.mMaxIconSize\lint r1 = (int) (((float) r1) * r2)\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|PHI: r0 r1 \l  PHI: (r0v2 int) = (r0v1 int), (r0v8 int) binds: [B:3:0x000e, B:4:0x0010] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 int) = (r1v0 int), (r1v7 int) binds: [B:3:0x000e, B:4:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|if (r1 \<= r3.mMaxIconSize) goto L_0x002a\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|float r2 = ((float) r3.mMaxIconSize) \/ ((float) r1)\lint r1 = r3.mMaxIconSize\lint r0 = (int) (((float) r0) * r2)\l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|PHI: r0 r1 \l  PHI: (r0v3 int) = (r0v2 int), (r0v6 int) binds: [B:6:0x001d, B:7:0x001f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 int) = (r1v1 int), (r1v4 int) binds: [B:6:0x001d, B:7:0x001f] A[DONT_GENERATE, DONT_INLINE]\l|r4.setBounds(0, 0, r0, r1)\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|setCompoundDrawables(r4, (android.graphics.drawable.Drawable) null, (android.graphics.drawable.Drawable) null, (android.graphics.drawable.Drawable) null)\lupdateTextButtonVisibility()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.v7.view.menu.ActionMenuItemView.setIcon((r3v0 'this' android.support.v7.view.menu.ActionMenuItemView A[IMMUTABLE_TYPE, THIS]), (r4v0 android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

