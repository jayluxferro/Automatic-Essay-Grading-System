digraph "CFG forandroid.support.v7.view.menu.MenuItemImpl.setShowAsAction(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (3 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2] t:[0x000d, 0x000d, 0x000d] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0007: CONST_STR  (r0 I:java.lang.String) =  \"SHOW_AS_ACTION_ALWAYS, SHOW_AS_ACTION_IF_ROOM, and SHOW_AS_ACTION_NEVER are mutually exclusive.\" \l0x0009: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IPUT  \l  (r2 I:int)\l  (r1 I:android.support.v7.view.menu.MenuItemImpl)\l android.support.v7.view.menu.MenuItemImpl.mShowAsAction int \l0x000f: IGET  (r2 I:android.support.v7.view.menu.MenuBuilder) = (r1 I:android.support.v7.view.menu.MenuItemImpl) android.support.v7.view.menu.MenuItemImpl.mMenu android.support.v7.view.menu.MenuBuilder \l0x0011: INVOKE  \l  (r2 I:android.support.v7.view.menu.MenuBuilder)\l  (r1 I:android.support.v7.view.menu.MenuItemImpl)\l android.support.v7.view.menu.MenuBuilder.onItemActionRequestChanged(android.support.v7.view.menu.MenuItemImpl):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.view.menu.MenuItemImpl.setShowAsAction((r1 'this' I:android.support.v7.view.menu.MenuItemImpl A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

