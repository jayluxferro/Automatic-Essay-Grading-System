digraph "CFG forandroid.support.v7.view.menu.BaseMenuWrapper.getMenuItemWrapper(Landroid\/view\/MenuItem;)Landroid\/view\/MenuItem;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r3 I:?[OBJECT, ARRAY]) android.support.v4.internal.view.SupportMenuItem \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0005: CHECK_CAST  (r0 I:android.support.v4.internal.view.SupportMenuItem) = (android.support.v4.internal.view.SupportMenuItem) (r0 I:?[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:java.util.Map\<android.support.v4.internal.view.SupportMenuItem, android.view.MenuItem\>) = (r2 I:android.support.v7.view.menu.BaseMenuWrapper) android.support.v7.view.menu.BaseMenuWrapper.mMenuItems java.util.Map \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: NEW_INSTANCE  (r1 I:android.support.v4.util.ArrayMap) =  android.support.v4.util.ArrayMap \l0x000d: INVOKE  (r1 I:android.support.v4.util.ArrayMap) android.support.v4.util.ArrayMap.\<init\>():void type: DIRECT \l0x0010: IPUT  \l  (r1 I:java.util.Map\<android.support.v4.internal.view.SupportMenuItem, android.view.MenuItem\>)\l  (r2 I:android.support.v7.view.menu.BaseMenuWrapper)\l android.support.v7.view.menu.BaseMenuWrapper.mMenuItems java.util.Map \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IGET  (r1 I:java.util.Map\<android.support.v4.internal.view.SupportMenuItem, android.view.MenuItem\>) = (r2 I:android.support.v7.view.menu.BaseMenuWrapper) android.support.v7.view.menu.BaseMenuWrapper.mMenuItems java.util.Map \l0x0014: INVOKE  (r3 I:java.lang.Object) = (r1 I:java.util.Map), (r3 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0018: CHECK_CAST  (r3 I:android.view.MenuItem) = (android.view.MenuItem) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0027 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: IGET  (r3 I:android.content.Context) = (r2 I:android.support.v7.view.menu.BaseMenuWrapper) android.support.v7.view.menu.BaseMenuWrapper.mContext android.content.Context \l0x001e: INVOKE  (r3 I:android.view.MenuItem) = \l  (r3 I:android.content.Context)\l  (r0 I:android.support.v4.internal.view.SupportMenuItem)\l android.support.v7.view.menu.MenuWrapperFactory.wrapSupportMenuItem(android.content.Context, android.support.v4.internal.view.SupportMenuItem):android.view.MenuItem type: STATIC \l0x0022: IGET  (r1 I:java.util.Map\<android.support.v4.internal.view.SupportMenuItem, android.view.MenuItem\>) = (r2 I:android.support.v7.view.menu.BaseMenuWrapper) android.support.v7.view.menu.BaseMenuWrapper.mMenuItems java.util.Map \l0x0024: INVOKE  \l  (r1 I:java.util.Map)\l  (r0 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: RETURN  (r3 I:android.view.MenuItem) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: RETURN  (r3 I:android.view.MenuItem) \l}"];
MethodNode[shape=record,label="{final android.view.MenuItem android.support.v7.view.menu.BaseMenuWrapper.getMenuItemWrapper((r2 'this' I:android.support.v7.view.menu.BaseMenuWrapper A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.MenuItem A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
}

