digraph "CFG forandroid.support.v7.view.menu.BaseMenuWrapper.internalClear()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Map\<android.support.v4.internal.view.SupportMenuItem, android.view.MenuItem\>) = (r1 I:android.support.v7.view.menu.BaseMenuWrapper) android.support.v7.view.menu.BaseMenuWrapper.mMenuItems java.util.Map \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:java.util.Map\<android.support.v4.internal.view.SupportMenuItem, android.view.MenuItem\>) = (r1 I:android.support.v7.view.menu.BaseMenuWrapper) android.support.v7.view.menu.BaseMenuWrapper.mMenuItems java.util.Map \l0x0006: INVOKE  (r0 I:java.util.Map) java.util.Map.clear():void type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r0 I:java.util.Map\<android.support.v4.internal.view.SupportSubMenu, android.view.SubMenu\>) = (r1 I:android.support.v7.view.menu.BaseMenuWrapper) android.support.v7.view.menu.BaseMenuWrapper.mSubMenus java.util.Map \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0012 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IGET  (r0 I:java.util.Map\<android.support.v4.internal.view.SupportSubMenu, android.view.SubMenu\>) = (r1 I:android.support.v7.view.menu.BaseMenuWrapper) android.support.v7.view.menu.BaseMenuWrapper.mSubMenus java.util.Map \l0x000f: INVOKE  (r0 I:java.util.Map) java.util.Map.clear():void type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: RETURN   \l}"];
MethodNode[shape=record,label="{final void android.support.v7.view.menu.BaseMenuWrapper.internalClear((r1 'this' I:android.support.v7.view.menu.BaseMenuWrapper A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
}

