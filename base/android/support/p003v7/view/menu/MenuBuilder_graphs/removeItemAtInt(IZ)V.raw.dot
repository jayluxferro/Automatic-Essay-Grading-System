digraph "CFG forandroid.support.v7.view.menu.MenuBuilder.removeItemAtInt(IZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:8:0x0017 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:java.util.ArrayList\<android.support.v7.view.menu.MenuItemImpl\>) = (r1 I:android.support.v7.view.menu.MenuBuilder) android.support.v7.view.menu.MenuBuilder.mItems java.util.ArrayList \l0x0004: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r2 I:?[int, byte, short, char]) \< (r0 I:?[int, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IGET  (r0 I:java.util.ArrayList\<android.support.v7.view.menu.MenuItemImpl\>) = (r1 I:android.support.v7.view.menu.MenuBuilder) android.support.v7.view.menu.MenuBuilder.mItems java.util.ArrayList \l0x000d: INVOKE  (r0 I:java.util.ArrayList), (r2 I:int) java.util.ArrayList.remove(int):java.lang.Object type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0016 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0013: INVOKE  \l  (r1 I:android.support.v7.view.menu.MenuBuilder)\l  (r2 I:boolean)\l android.support.v7.view.menu.MenuBuilder.onItemsChanged(boolean):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v7.view.menu.MenuBuilder.removeItemAtInt((r1 'this' I:android.support.v7.view.menu.MenuBuilder A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_8;
Node_1 -> Node_2;
Node_2 -> Node_4;
Node_2 -> Node_8[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
}

