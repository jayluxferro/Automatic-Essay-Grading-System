digraph "CFG forandroid.support.v7.view.menu.MenuBuilder.findInsertIndex(Ljava\/util\/ArrayList;I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r2 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0004: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:7:0x001a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r1 I:java.lang.Object) = (r2 I:java.util.ArrayList), (r0 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x000c: CHECK_CAST  (r1 I:android.support.v7.view.menu.MenuItemImpl) = (android.support.v7.view.menu.MenuItemImpl) (r1 I:?[OBJECT, ARRAY]) \l0x000e: INVOKE  (r1 I:int) = (r1 I:android.support.v7.view.menu.MenuItemImpl) android.support.v7.view.menu.MenuItemImpl.getOrdering():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r1 I:?[int, byte, short, char]) \> (r3 I:?[int, byte, short, char])  \-\> B:6:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: RETURN  (r0 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{private static int android.support.v7.view.menu.MenuBuilder.findInsertIndex((r2 I:java.util.ArrayList\<android.support.v7.view.menu.MenuItemImpl\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/ArrayList\<, Landroid\/support\/v7\/view\/menu\/MenuItemImpl;, \>;I)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_1;
Node_7 -> Node_8;
}

