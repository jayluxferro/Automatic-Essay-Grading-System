digraph "CFG forandroid.support.v7.view.menu.MenuBuilder.findItem(I)Landroid\/view\/MenuItem;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = size()\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:10:0x0027] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0005\-\>B:10:0x0027\l|if (r1 \>= r0) goto L_0x002a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|android.support.v7.view.menu.MenuItemImpl r2 = r4.mItems.get(r1)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|if (r2.getItemId() != r5) goto L_0x0016\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|RETURN\l|return r2\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016}"];
Node_6 [shape=record,label="{6\:\ 0x001a|if (r2.hasSubMenu() == false) goto L_0x0027\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|android.view.MenuItem r2 = r2.getSubMenu().findItem(r5)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|if (r2 == null) goto L_0x0027\l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|RETURN\l|return r2\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|LOOP_END\lLOOP:0: B:1:0x0005\-\>B:10:0x0027\l|int r1 = r1 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|RETURN\l|return null\l}"];
Node_12 [shape=record,label="{12\:\ 0x0015|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0027|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0027|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public android.view.MenuItem android.support.v7.view.menu.MenuBuilder.findItem((r4v0 'this' android.support.v7.view.menu.MenuBuilder A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_12[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_13[style=dashed];
Node_8 -> Node_16;
Node_10 -> Node_1;
Node_12 -> Node_4;
Node_13 -> Node_9;
Node_14 -> Node_11;
Node_15 -> Node_10;
Node_16 -> Node_10;
}

