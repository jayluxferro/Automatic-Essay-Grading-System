digraph "CFG forandroid.support.v7.view.menu.MenuBuilder.createNewMenuItem(IIIILjava\/lang\/CharSequence;I)Landroid\/support\/v7\/view\/menu\/MenuItemImpl;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r8 I:android.support.v7.view.menu.MenuItemImpl) =  android.support.v7.view.menu.MenuItemImpl \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0003: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0004: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0009: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: INVOKE  \l  (r0 I:android.support.v7.view.menu.MenuItemImpl)\l  (r1 I:android.support.v7.view.menu.MenuBuilder)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:java.lang.CharSequence)\l  (r7 I:int)\l android.support.v7.view.menu.MenuItemImpl.\<init\>(android.support.v7.view.menu.MenuBuilder, int, int, int, int, java.lang.CharSequence, int):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: RETURN  (r8 I:android.support.v7.view.menu.MenuItemImpl) \l}"];
MethodNode[shape=record,label="{private android.support.v7.view.menu.MenuItemImpl android.support.v7.view.menu.MenuBuilder.createNewMenuItem((r9 'this' I:android.support.v7.view.menu.MenuBuilder A[IMMUTABLE_TYPE, THIS]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

