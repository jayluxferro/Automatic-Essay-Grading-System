digraph "CFG forandroid.support.v7.view.menu.MenuBuilder.dispatchPresenterUpdate(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r3.mPresenters.isEmpty() == false) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|stopDispatchingItemsChanged()\ljava.util.Iterator r0 = r3.mPresenters.iterator()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|LOOP_START\lLOOP:0: B:4:0x0012\-\>B:12:0x0012\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|if (r0.hasNext() == false) goto L_0x0030\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|java.lang.ref.WeakReference r1 = r0.next()\landroid.support.v7.view.menu.MenuPresenter r2 = (android.support.p003v7.view.menu.MenuPresenter) r1.get()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|if (r2 != null) goto L_0x002c\l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|r3.mPresenters.remove(r1)\l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|r2.updateMenuView(r4)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|startDispatchingItemsChanged()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ 0x0012|LOOP_END\lSYNTHETIC\lLOOP:0: B:4:0x0012\-\>B:12:0x0012\l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0012|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0012|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.v7.view.menu.MenuBuilder.dispatchPresenterUpdate((r3v0 'this' android.support.v7.view.menu.MenuBuilder A[IMMUTABLE_TYPE, THIS]), (r4v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_14;
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_12 -> Node_4;
Node_13 -> Node_10;
Node_14 -> Node_12;
Node_15 -> Node_12;
}

