digraph "CFG forandroid.support.v7.view.menu.CascadingMenuPopup.onSubMenuSelected(Landroid\/support\/v7\/view\/menu\/SubMenuBuilder;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r0 = r4.mShowingMenus.iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lLOOP:0: B:1:0x0006\-\>B:4:0x0015\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|if (r0.hasNext() == false) goto L_0x001f\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo r1 = r0.next()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|LOOP_END\lLOOP:0: B:1:0x0006\-\>B:4:0x0015\l|if (r5 != r1.menu) goto L_0x0006\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|r1.getListView().requestFocus()\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|RETURN\l|return true\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f}"];
Node_8 [shape=record,label="{8\:\ 0x0023|if (r5.hasVisibleItems() == false) goto L_0x0032\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|addMenu(r5)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|if (r4.mPresenterCallback == null) goto L_0x0031\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|r4.mPresenterCallback.onOpenSubMenu(r5)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|RETURN\l|return true\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|RETURN\l|return false\l}"];
Node_14 [shape=record,label="{14\:\ 0x0017|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x001f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean android.support.v7.view.menu.CascadingMenuPopup.onSubMenuSelected((r4v0 'this' android.support.v7.view.menu.CascadingMenuPopup A[IMMUTABLE_TYPE, THIS]), (r5v0 android.support.v7.view.menu.SubMenuBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_14[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_14 -> Node_5;
Node_15 -> Node_7;
}

