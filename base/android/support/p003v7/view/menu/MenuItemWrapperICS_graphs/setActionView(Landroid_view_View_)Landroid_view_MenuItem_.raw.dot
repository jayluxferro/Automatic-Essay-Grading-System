digraph "CFG forandroid.support.v7.view.menu.MenuItemWrapperICS.setActionView(Landroid\/view\/View;)Landroid\/view\/MenuItem;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) android.view.CollapsibleActionView \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:android.support.v7.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper) =  android.support.v7.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper \l0x0006: INVOKE  \l  (r0 I:android.support.v7.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper)\l  (r2 I:android.view.View)\l android.support.v7.view.menu.MenuItemWrapperICS.CollapsibleActionViewWrapper.\<init\>(android.view.View):void type: DIRECT \l0x0009: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IGET  (r0 I:java.lang.Object) = (r1 I:android.support.v7.view.menu.MenuItemWrapperICS) android.support.v7.view.menu.MenuItemWrapperICS.mWrappedObject java.lang.Object \l0x000c: CHECK_CAST  (r0 I:android.support.v4.internal.view.SupportMenuItem) = (android.support.v4.internal.view.SupportMenuItem) (r0 I:?[OBJECT, ARRAY]) \l0x000e: INVOKE  \l  (r0 I:android.support.v4.internal.view.SupportMenuItem)\l  (r2 I:android.view.View)\l android.support.v4.internal.view.SupportMenuItem.setActionView(android.view.View):android.view.MenuItem type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: RETURN  (r1 I:android.view.MenuItem) \l}"];
MethodNode[shape=record,label="{public android.view.MenuItem android.support.v7.view.menu.MenuItemWrapperICS.setActionView((r1 'this' I:android.support.v7.view.menu.MenuItemWrapperICS A[IMMUTABLE_TYPE, THIS]), (r2 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

