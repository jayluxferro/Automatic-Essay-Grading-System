digraph "CFG forandroid.support.v7.view.menu.MenuItemWrapperICS.setExclusiveCheckable(Z)V" {
subgraph cluster_Region_901018373 {
label = "R(1:(2:(1:3)|4))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_413105451 {
label = "Try: R(2:(1:3)|4) catches: R(2:5|6)";
node [shape=record,color=blue];
subgraph cluster_Region_293455216 {
label = "R(2:(1:3)|4)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1820957372 {
label = "IF [B:2:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|Catch:\{ Exception \-\> 0x002c \}\l|if (r6.mSetExclusiveCheckableMethod == null) goto L_0x0006     \/\/ Catch:\{ Exception \-\> 0x002c \}\l}"];
subgraph cluster_Region_2050220147 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|Catch:\{ Exception \-\> 0x002c \}\l|r6.mSetExclusiveCheckableMethod = ((android.support.p000v4.internal.view.SupportMenuItem) r6.mWrappedObject).getClass().getDeclaredMethod(\"setExclusiveCheckable\", new java.lang.Class[]\{java.lang.Boolean.TYPE\})     \/\/ Catch:\{ Exception \-\> 0x002c \}\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x001c|Catch:\{ Exception \-\> 0x002c \}\l|r6.mSetExclusiveCheckableMethod.invoke(r6.mWrappedObject, new java.lang.Object[]\{java.lang.Boolean.valueOf(r7)\})     \/\/ Catch:\{ Exception \-\> 0x002c \}\l}"];
}
subgraph cluster_Region_421964859 {
label = "R(2:5|6) | ExcHandler: Exception (r7v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002c|ExcHandler: Exception (r7v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|android.util.Log.w(LOG_TAG, \"Error while calling setExclusiveCheckable\", r7)\l}"];
}
}
}
subgraph cluster_Region_421964859 {
label = "R(2:5|6) | ExcHandler: Exception (r7v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002c|ExcHandler: Exception (r7v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|android.util.Log.w(LOG_TAG, \"Error while calling setExclusiveCheckable\", r7)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|Catch:\{ Exception \-\> 0x002c \}\lSplitter:B:0:0x0000\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v7.view.menu.MenuItemWrapperICS.setExclusiveCheckable((r6v0 'this' android.support.v7.view.menu.MenuItemWrapperICS A[IMMUTABLE_TYPE, THIS]), (r7v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_0 -> Node_5;
Node_1 -> Node_2;
}

