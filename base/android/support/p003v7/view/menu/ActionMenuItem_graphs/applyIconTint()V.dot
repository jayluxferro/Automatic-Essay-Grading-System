digraph "CFG forandroid.support.v7.view.menu.ActionMenuItem.applyIconTint()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.mIconDrawable == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r2.mHasIconTint != false) goto L_0x000c\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008}"];
Node_5 [shape=record,label="{5\:\ 0x000a|if (r2.mHasIconTintMode == false) goto L_?\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|r2.mIconDrawable = android.support.p000v4.graphics.drawable.DrawableCompat.wrap(r2.mIconDrawable)\lr2.mIconDrawable = r2.mIconDrawable.mutate()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|if (r2.mHasIconTint == false) goto L_0x0027\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|android.support.p000v4.graphics.drawable.DrawableCompat.setTintList(r2.mIconDrawable, r2.mIconTintList)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0027}"];
Node_10 [shape=record,label="{10\:\ 0x0029|if (r2.mHasIconTintMode == false) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|android.support.p000v4.graphics.drawable.DrawableCompat.setTintMode(r2.mIconDrawable, r2.mIconTintMode)\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.v7.view.menu.ActionMenuItem.applyIconTint((r2v0 'this' android.support.v7.view.menu.ActionMenuItem A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
}

