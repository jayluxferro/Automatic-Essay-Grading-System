digraph "CFG forandroid.support.v7.view.menu.ListMenuPresenter.getAdapter()Landroid\/widget\/ListAdapter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v7.view.menu.ListMenuPresenter$MenuAdapter) = (r1 I:android.support.v7.view.menu.ListMenuPresenter) android.support.v7.view.menu.ListMenuPresenter.mAdapter android.support.v7.view.menu.ListMenuPresenter$MenuAdapter \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:android.support.v7.view.menu.ListMenuPresenter$MenuAdapter) =  android.support.v7.view.menu.ListMenuPresenter$MenuAdapter \l0x0006: INVOKE  \l  (r0 I:android.support.v7.view.menu.ListMenuPresenter$MenuAdapter)\l  (r1 I:android.support.v7.view.menu.ListMenuPresenter)\l android.support.v7.view.menu.ListMenuPresenter.MenuAdapter.\<init\>(android.support.v7.view.menu.ListMenuPresenter):void type: DIRECT \l0x0009: IPUT  \l  (r0 I:android.support.v7.view.menu.ListMenuPresenter$MenuAdapter)\l  (r1 I:android.support.v7.view.menu.ListMenuPresenter)\l android.support.v7.view.menu.ListMenuPresenter.mAdapter android.support.v7.view.menu.ListMenuPresenter$MenuAdapter \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r0 I:android.support.v7.view.menu.ListMenuPresenter$MenuAdapter) = (r1 I:android.support.v7.view.menu.ListMenuPresenter) android.support.v7.view.menu.ListMenuPresenter.mAdapter android.support.v7.view.menu.ListMenuPresenter$MenuAdapter \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: RETURN  (r0 I:android.widget.ListAdapter) \l}"];
MethodNode[shape=record,label="{public android.widget.ListAdapter android.support.v7.view.menu.ListMenuPresenter.getAdapter((r1 'this' I:android.support.v7.view.menu.ListMenuPresenter A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

