digraph "CFG forandroid.support.v7.view.menu.MenuAdapter.getItem(I)Landroid\/support\/v7\/view\/menu\/MenuItemImpl;" {
subgraph cluster_Region_840472938 {
label = "R(3:1|(1:8)|10)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|java.util.ArrayList\<android.support.p003v7.view.menu.MenuItemImpl\> r0 = r2.mOverflowOnly ? r2.mAdapterMenu.getNonActionItems() : r2.mAdapterMenu.getVisibleItems()\l}"];
subgraph cluster_IfRegion_1022782900 {
label = "IF [B:5:0x0013, B:7:0x0017] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|ADDED_TO_REGION\l|if (r2.mExpandedIndex \>= 0) goto L_0x0015\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|ADDED_TO_REGION\l|if (r3 \>= r2.mExpandedIndex) goto L_0x0019\l}"];
subgraph cluster_Region_1923098056 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0019|r3++\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x0021|RETURN\l|return r0.get(r3)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000b}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0011|PHI: r0 \l  PHI: (r0v1 java.util.ArrayList\<android.support.v7.view.menu.MenuItemImpl\>) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0015}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001b|PHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v0 int), (r3v4 int) binds: [B:5:0x0013, B:7:0x0017, B:8:0x0019] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public android.support.v7.view.menu.MenuItemImpl android.support.v7.view.menu.MenuAdapter.getItem((r2v0 'this' android.support.v7.view.menu.MenuAdapter A[IMMUTABLE_TYPE, THIS]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_5 -> Node_6;
Node_5 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_0 -> Node_1;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_9 -> Node_10;
}

