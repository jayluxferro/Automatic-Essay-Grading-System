digraph "CFG forandroid.support.v7.view.SupportMenuInflater.findRealOwner(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) android.app.Activity \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN  (r2 I:java.lang.Object) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) android.content.ContextWrapper \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: CHECK_CAST  (r2 I:android.content.ContextWrapper) = (android.content.ContextWrapper) (r2 I:?[OBJECT, ARRAY]) \l0x000b: INVOKE  (r2 I:android.content.Context) = (r2 I:android.content.ContextWrapper) android.content.ContextWrapper.getBaseContext():android.content.Context type: VIRTUAL \l0x000f: INVOKE  (r2 I:java.lang.Object) = \l  (r1 I:android.support.v7.view.SupportMenuInflater)\l  (r2 I:java.lang.Object)\l android.support.v7.view.SupportMenuInflater.findRealOwner(java.lang.Object):java.lang.Object type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: RETURN  (r2 I:java.lang.Object) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: RETURN  (r2 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{private java.lang.Object android.support.v7.view.SupportMenuInflater.findRealOwner((r1 'this' I:android.support.v7.view.SupportMenuInflater A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
}

