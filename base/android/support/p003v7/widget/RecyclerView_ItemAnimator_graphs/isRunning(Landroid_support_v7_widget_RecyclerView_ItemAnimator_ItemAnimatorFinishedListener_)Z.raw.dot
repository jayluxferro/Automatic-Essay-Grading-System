digraph "CFG forandroid.support.v7.widget.RecyclerView.ItemAnimator.isRunning(Landroid\/support\/v7\/widget\/RecyclerView$ItemAnimator$ItemAnimatorFinishedListener;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r2 I:android.support.v7.widget.RecyclerView$ItemAnimator) android.support.v7.widget.RecyclerView.ItemAnimator.isRunning():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000c \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  \l  (r3 I:android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener)\l android.support.v7.widget.RecyclerView.ItemAnimator.ItemAnimatorFinishedListener.onAnimationsFinished():void type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IGET  (r1 I:java.util.ArrayList\<android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener\>) = (r2 I:android.support.v7.widget.RecyclerView$ItemAnimator) android.support.v7.widget.RecyclerView.ItemAnimator.mFinishedListeners java.util.ArrayList \l0x000e: INVOKE  (r1 I:java.util.ArrayList), (r3 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public final boolean android.support.v7.widget.RecyclerView.ItemAnimator.isRunning((r2 'this' I:android.support.v7.widget.RecyclerView$ItemAnimator A[IMMUTABLE_TYPE, THIS]), (r3 I:android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
}

