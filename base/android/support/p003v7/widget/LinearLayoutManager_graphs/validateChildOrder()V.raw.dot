digraph "CFG forandroid.support.v7.widget.LinearLayoutManager.validateChildOrder()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"LinearLayoutManager\" \l0x0002: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0004: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0007: CONST_STR  (r2 I:java.lang.String) =  \"validating child count \" \l0x0009: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x000c: INVOKE  (r2 I:int) = (r8 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.getChildCount():int type: VIRTUAL \l0x0010: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0013: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0017: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l0x001a: INVOKE  (r0 I:int) = (r8 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.getChildCount():int type: VIRTUAL \l0x001e: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x001f|0x001f: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0021|0x0021: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|0x0022: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: INVOKE  (r2 I:android.view.View) = \l  (r8 I:android.support.v7.widget.LinearLayoutManager)\l  (r0 I:int)\l android.support.v7.widget.LinearLayoutManager.getChildAt(int):android.view.View type: VIRTUAL \l0x0027: INVOKE  (r2 I:int) = \l  (r8 I:android.support.v7.widget.LinearLayoutManager)\l  (r2 I:android.view.View)\l android.support.v7.widget.LinearLayoutManager.getPosition(android.view.View):int type: VIRTUAL \l0x002b: IGET  (r3 I:android.support.v7.widget.OrientationHelper) = (r8 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mOrientationHelper android.support.v7.widget.OrientationHelper \l0x002d: INVOKE  (r4 I:android.view.View) = \l  (r8 I:android.support.v7.widget.LinearLayoutManager)\l  (r0 I:int)\l android.support.v7.widget.LinearLayoutManager.getChildAt(int):android.view.View type: VIRTUAL \l0x0031: INVOKE  (r3 I:int) = \l  (r3 I:android.support.v7.widget.OrientationHelper)\l  (r4 I:android.view.View)\l android.support.v7.widget.OrientationHelper.getDecoratedStart(android.view.View):int type: VIRTUAL \l0x0035: IGET  (r4 I:boolean) = (r8 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mShouldReverseLayout boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x0037|0x0037: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x007d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0039|0x0039: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x003a|0x003a: INVOKE  (r5 I:int) = (r8 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.getChildCount():int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|0x003e: IF  (r4 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:33:0x00c1 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0040|0x0040: INVOKE  (r5 I:android.view.View) = \l  (r8 I:android.support.v7.widget.LinearLayoutManager)\l  (r4 I:int)\l android.support.v7.widget.LinearLayoutManager.getChildAt(int):android.view.View type: VIRTUAL \l0x0044: INVOKE  (r6 I:int) = \l  (r8 I:android.support.v7.widget.LinearLayoutManager)\l  (r5 I:android.view.View)\l android.support.v7.widget.LinearLayoutManager.getPosition(android.view.View):int type: VIRTUAL \l0x0048: IGET  (r7 I:android.support.v7.widget.OrientationHelper) = (r8 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mOrientationHelper android.support.v7.widget.OrientationHelper \l0x004a: INVOKE  (r5 I:int) = \l  (r7 I:android.support.v7.widget.OrientationHelper)\l  (r5 I:android.view.View)\l android.support.v7.widget.OrientationHelper.getDecoratedStart(android.view.View):int type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x004e|0x004e: IF  (r6 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:15:0x006d \l}"];
Node_10 [shape=record,label="{10\:\ 0x0050|0x0050: INVOKE  (r8 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.logChildren():void type: DIRECT \l0x0053: NEW_INSTANCE  (r2 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0055: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0057: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x005a: CONST_STR  (r6 I:java.lang.String) =  \"detected invalid position. loc invalid? \" \l0x005c: INVOKE  (r4 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x005f|0x005f: IF  (r5 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:13:0x0062 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0061|0x0061: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0062|0x0062: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:boolean) java.lang.StringBuilder.append(boolean):java.lang.StringBuilder type: VIRTUAL \l0x0065: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0069: INVOKE  (r2 I:java.lang.RuntimeException), (r0 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x006c|0x006c: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x006d|0x006d: IF  (r5 I:?[int, byte, short, char]) \> (r3 I:?[int, byte, short, char])  \-\> B:17:0x0072 \l}"];
Node_16 [shape=record,label="{16\:\ 0x006f|0x006f: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0072|0x0072: INVOKE  (r8 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.logChildren():void type: DIRECT \l0x0075: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0077: CONST_STR  (r1 I:java.lang.String) =  \"detected invalid location\" \l0x0079: INVOKE  (r0 I:java.lang.RuntimeException), (r1 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x007c|0x007c: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ 0x007d|0x007d: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x007e|0x007e: INVOKE  (r5 I:int) = (r8 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.getChildCount():int type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0082|0x0082: IF  (r4 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:33:0x00c1 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0084|0x0084: INVOKE  (r5 I:android.view.View) = \l  (r8 I:android.support.v7.widget.LinearLayoutManager)\l  (r4 I:int)\l android.support.v7.widget.LinearLayoutManager.getChildAt(int):android.view.View type: VIRTUAL \l0x0088: INVOKE  (r6 I:int) = \l  (r8 I:android.support.v7.widget.LinearLayoutManager)\l  (r5 I:android.view.View)\l android.support.v7.widget.LinearLayoutManager.getPosition(android.view.View):int type: VIRTUAL \l0x008c: IGET  (r7 I:android.support.v7.widget.OrientationHelper) = (r8 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mOrientationHelper android.support.v7.widget.OrientationHelper \l0x008e: INVOKE  (r5 I:int) = \l  (r7 I:android.support.v7.widget.OrientationHelper)\l  (r5 I:android.view.View)\l android.support.v7.widget.OrientationHelper.getDecoratedStart(android.view.View):int type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x0092|0x0092: IF  (r6 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:29:0x00b1 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0094|0x0094: INVOKE  (r8 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.logChildren():void type: DIRECT \l0x0097: NEW_INSTANCE  (r2 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0099: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x009b: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x009e: CONST_STR  (r6 I:java.lang.String) =  \"detected invalid position. loc invalid? \" \l0x00a0: INVOKE  (r4 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x00a3|0x00a3: IF  (r5 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:27:0x00a6 \l}"];
Node_26 [shape=record,label="{26\:\ 0x00a5|0x00a5: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x00a6|0x00a6: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:boolean) java.lang.StringBuilder.append(boolean):java.lang.StringBuilder type: VIRTUAL \l0x00a9: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00ad: INVOKE  (r2 I:java.lang.RuntimeException), (r0 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_28 [shape=record,label="{28\:\ 0x00b0|0x00b0: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_29 [shape=record,label="{29\:\ 0x00b1|0x00b1: IF  (r5 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:31:0x00b6 \l}"];
Node_30 [shape=record,label="{30\:\ 0x00b3|0x00b3: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_31 [shape=record,label="{31\:\ 0x00b6|0x00b6: INVOKE  (r8 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.logChildren():void type: DIRECT \l0x00b9: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x00bb: CONST_STR  (r1 I:java.lang.String) =  \"detected invalid location\" \l0x00bd: INVOKE  (r0 I:java.lang.RuntimeException), (r1 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_32 [shape=record,label="{32\:\ 0x00c0|0x00c0: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_33 [shape=record,label="{33\:\ 0x00c1|0x00c1: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.v7.widget.LinearLayoutManager.validateChildOrder((r8 'this' I:android.support.v7.widget.LinearLayoutManager A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_19;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_33;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_6;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_33;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_20;
Node_31 -> Node_32;
}

