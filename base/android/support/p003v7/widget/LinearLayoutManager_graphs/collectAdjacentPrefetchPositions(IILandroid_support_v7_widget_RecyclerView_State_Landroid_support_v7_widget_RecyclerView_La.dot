digraph "CFG forandroid.support.v7.widget.LinearLayoutManager.collectAdjacentPrefetchPositions(IILandroid\/support\/v7\/widget\/RecyclerView$State;Landroid\/support\/v7\/widget\/RecyclerView$LayoutManager$LayoutPrefetchRegistry;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1.mOrientation != 0) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|r2 = r3\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v4 int) binds: [B:1:0x0002, B:2:0x0005] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|if (getChildCount() == 0) goto L_?\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|if (r2 != 0) goto L_0x000f\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|ensureLayoutState()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|if (r2 \<= 0) goto L_0x0017\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|r0 = 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|r0 = \-1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|PHI: r0 \l  PHI: (r0v1 int) = (r0v2 int), (r0v3 int) binds: [B:9:0x0017, B:8:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|updateLayoutState(r0, java.lang.Math.abs(r2), true, r4)\lcollectPrefetchPositionsForLayoutState(r4, r1.mLayoutState, r5)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.LinearLayoutManager.collectAdjacentPrefetchPositions((r1v0 'this' android.support.v7.widget.LinearLayoutManager A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.support.v7.widget.RecyclerView$State A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_5 -> Node_13[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

