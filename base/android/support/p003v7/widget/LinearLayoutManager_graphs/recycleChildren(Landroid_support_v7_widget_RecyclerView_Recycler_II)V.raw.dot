digraph "CFG forandroid.support.v7.widget.LinearLayoutManager.recycleChildren(Landroid\/support\/v7\/widget\/RecyclerView$Recycler;II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0003 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: RETURN   \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IF  (r3 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: ARITH  (r3 I:int) = (r3 I:int) + (\-1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r3 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:8:0x0017 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: INVOKE  \l  (r0 I:android.support.v7.widget.LinearLayoutManager)\l  (r3 I:int)\l  (r1 I:android.support.v7.widget.RecyclerView$Recycler)\l android.support.v7.widget.LinearLayoutManager.removeAndRecycleViewAt(int, android.support.v7.widget.RecyclerView$Recycler):void type: VIRTUAL \l0x000c: ARITH  (r3 I:int) = (r3 I:int) + (\-1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r2 I:?[int, byte, short, char]) \<= (r3 I:?[int, byte, short, char])  \-\> B:8:0x0017 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: INVOKE  \l  (r0 I:android.support.v7.widget.LinearLayoutManager)\l  (r2 I:int)\l  (r1 I:android.support.v7.widget.RecyclerView$Recycler)\l android.support.v7.widget.LinearLayoutManager.removeAndRecycleViewAt(int, android.support.v7.widget.RecyclerView$Recycler):void type: VIRTUAL \l0x0014: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v7.widget.LinearLayoutManager.recycleChildren((r0 'this' I:android.support.v7.widget.LinearLayoutManager A[IMMUTABLE_TYPE, THIS]), (r1 I:android.support.v7.widget.RecyclerView$Recycler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_4;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_6;
}

