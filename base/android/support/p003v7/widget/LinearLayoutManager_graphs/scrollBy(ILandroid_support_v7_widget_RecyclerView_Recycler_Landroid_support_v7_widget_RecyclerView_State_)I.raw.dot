digraph "CFG forandroid.support.v7.widget.LinearLayoutManager.scrollBy(ILandroid\/support\/v7\/widget\/RecyclerView$Recycler;Landroid\/support\/v7\/widget\/RecyclerView$State;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r5 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.getChildCount():int type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x003b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IGET  (r0 I:android.support.v7.widget.LinearLayoutManager$LayoutState) = (r5 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mLayoutState android.support.v7.widget.LinearLayoutManager$LayoutState \l0x000c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: IPUT  \l  (r2 I:boolean)\l  (r0 I:android.support.v7.widget.LinearLayoutManager$LayoutState)\l android.support.v7.widget.LinearLayoutManager.LayoutState.mRecycle boolean \l0x000f: INVOKE  (r5 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.ensureLayoutState():void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x0016 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: INVOKE  (r3 I:int) = (r6 I:int) java.lang.Math.abs(int):int type: STATIC \l0x001b: INVOKE  \l  (r5 I:android.support.v7.widget.LinearLayoutManager)\l  (r0 I:int)\l  (r3 I:int)\l  (r2 I:boolean)\l  (r8 I:android.support.v7.widget.RecyclerView$State)\l android.support.v7.widget.LinearLayoutManager.updateLayoutState(int, int, boolean, android.support.v7.widget.RecyclerView$State):void type: DIRECT \l0x001e: IGET  (r2 I:android.support.v7.widget.LinearLayoutManager$LayoutState) = (r5 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mLayoutState android.support.v7.widget.LinearLayoutManager$LayoutState \l0x0020: IGET  (r2 I:int) = \l  (r2 I:android.support.v7.widget.LinearLayoutManager$LayoutState)\l android.support.v7.widget.LinearLayoutManager.LayoutState.mScrollingOffset int \l0x0022: IGET  (r4 I:android.support.v7.widget.LinearLayoutManager$LayoutState) = (r5 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mLayoutState android.support.v7.widget.LinearLayoutManager$LayoutState \l0x0024: INVOKE  (r7 I:int) = \l  (r5 I:android.support.v7.widget.LinearLayoutManager)\l  (r7 I:android.support.v7.widget.RecyclerView$Recycler)\l  (r4 I:android.support.v7.widget.LinearLayoutManager$LayoutState)\l  (r8 I:android.support.v7.widget.RecyclerView$State)\l  (r1 I:boolean)\l android.support.v7.widget.LinearLayoutManager.fill(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.LinearLayoutManager$LayoutState, android.support.v7.widget.RecyclerView$State, boolean):int type: VIRTUAL \l0x0028: ARITH  (r2 I:int) = (r2 I:int) + (r7 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:11:0x002c \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: RETURN  (r1 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: IF  (r3 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:13:0x0030 \l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|0x002e: ARITH  (r6 I:int) = (r0 I:int) * (r2 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|0x0030: IGET  (r7 I:android.support.v7.widget.OrientationHelper) = (r5 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mOrientationHelper android.support.v7.widget.OrientationHelper \l0x0032: NEG  (r8 I:int) = (r6 I:int) \l0x0033: INVOKE  \l  (r7 I:android.support.v7.widget.OrientationHelper)\l  (r8 I:int)\l android.support.v7.widget.OrientationHelper.offsetChildren(int):void type: VIRTUAL \l0x0036: IGET  (r7 I:android.support.v7.widget.LinearLayoutManager$LayoutState) = (r5 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mLayoutState android.support.v7.widget.LinearLayoutManager$LayoutState \l0x0038: IPUT  \l  (r6 I:int)\l  (r7 I:android.support.v7.widget.LinearLayoutManager$LayoutState)\l android.support.v7.widget.LinearLayoutManager.LayoutState.mLastScrollDelta int \l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|0x003a: RETURN  (r6 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x003b|0x003b: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{int android.support.v7.widget.LinearLayoutManager.scrollBy((r5 'this' I:android.support.v7.widget.LinearLayoutManager A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.support.v7.widget.RecyclerView$Recycler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.support.v7.widget.RecyclerView$State A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_4;
Node_2 -> Node_15[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

