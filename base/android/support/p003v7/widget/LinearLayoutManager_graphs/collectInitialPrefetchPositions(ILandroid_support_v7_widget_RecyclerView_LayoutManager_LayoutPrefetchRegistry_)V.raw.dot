digraph "CFG forandroid.support.v7.widget.LinearLayoutManager.collectInitialPrefetchPositions(ILandroid\/support\/v7\/widget\/RecyclerView$LayoutManager$LayoutPrefetchRegistry;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v7.widget.LinearLayoutManager$SavedState) = (r5 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mPendingSavedState android.support.v7.widget.LinearLayoutManager$SavedState \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0003: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:android.support.v7.widget.LinearLayoutManager$SavedState) = (r5 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mPendingSavedState android.support.v7.widget.LinearLayoutManager$SavedState \l0x0008: INVOKE  (r0 I:boolean) = \l  (r0 I:android.support.v7.widget.LinearLayoutManager$SavedState)\l android.support.v7.widget.LinearLayoutManager.SavedState.hasValidAnchor():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IGET  (r0 I:android.support.v7.widget.LinearLayoutManager$SavedState) = (r5 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mPendingSavedState android.support.v7.widget.LinearLayoutManager$SavedState \l0x0010: IGET  (r0 I:boolean) = \l  (r0 I:android.support.v7.widget.LinearLayoutManager$SavedState)\l android.support.v7.widget.LinearLayoutManager.SavedState.mAnchorLayoutFromEnd boolean \l0x0012: IGET  (r3 I:android.support.v7.widget.LinearLayoutManager$SavedState) = (r5 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mPendingSavedState android.support.v7.widget.LinearLayoutManager$SavedState \l0x0014: IGET  (r3 I:int) = \l  (r3 I:android.support.v7.widget.LinearLayoutManager$SavedState)\l android.support.v7.widget.LinearLayoutManager.SavedState.mAnchorPosition int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: INVOKE  (r5 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.resolveShouldLayoutReverse():void type: DIRECT \l0x001a: IGET  (r0 I:boolean) = (r5 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mShouldReverseLayout boolean \l0x001c: IGET  (r3 I:int) = (r5 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mPendingScrollPosition int \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0027 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0025 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: ARITH  (r3 I:int) = (r6 I:int) + (\-1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: IGET  (r3 I:int) = (r5 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mPendingScrollPosition int \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002c \l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|0x002c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|0x002d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|0x002e: IGET  (r4 I:int) = (r5 I:android.support.v7.widget.LinearLayoutManager) android.support.v7.widget.LinearLayoutManager.mInitialPrefetchItemCount int \l}"];
Node_16 [shape=record,label="{16\:\ 0x0030|0x0030: IF  (r0 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:20:0x003d \l}"];
Node_17 [shape=record,label="{17\:\ 0x0032|0x0032: IF  (r3 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:20:0x003d \l}"];
Node_18 [shape=record,label="{18\:\ 0x0034|0x0034: IF  (r3 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:20:0x003d \l}"];
Node_19 [shape=record,label="{19\:\ 0x0036|0x0036: INVOKE  \l  (r7 I:android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)\l  (r3 I:int)\l  (r2 I:int)\l android.support.v7.widget.RecyclerView.LayoutManager.LayoutPrefetchRegistry.addPosition(int, int):void type: INTERFACE \l0x0039: ARITH  (r3 I:int) = (r3 I:int) + (r1 I:int) \l0x003a: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x003d|0x003d: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.LinearLayoutManager.collectInitialPrefetchPositions((r5 'this' I:android.support.v7.widget.LinearLayoutManager A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_11;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_15;
}

