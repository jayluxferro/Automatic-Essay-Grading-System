digraph "CFG forandroid.support.v7.widget.LinearLayoutManager.fill(Landroid\/support\/v7\/widget\/RecyclerView$Recycler;Landroid\/support\/v7\/widget\/LinearLayoutManager$LayoutState;Landroid\/support\/v7\/widget\/RecyclerView$State;Z)I" {
subgraph cluster_Region_1553028874 {
label = "R(5:0|(2:(1:4)|5)|6|(1:(2:(1:34)|(2:12|(4:14|(1:20)|(3:23|(1:25)|26)|(1:(1:36)))(1:35))))|31)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r9.mAvailable\l}"];
subgraph cluster_IfRegion_520750111 {
label = "IF [B:1:0x0006] THEN: R(2:(1:4)|5) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r9.mScrollingOffset != Integer.MIN_VALUE) goto L_0x0008\l}"];
subgraph cluster_Region_919130667 {
label = "R(2:(1:4)|5)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1604439006 {
label = "IF [B:3:0x000a] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r9.mAvailable \< 0) goto L_0x000c\l}"];
subgraph cluster_Region_2046724360 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|r9.mScrollingOffset += r9.mAvailable\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0013|recycleByLayoutState(r8, r9)\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0016|int int r1 = r9.mAvailable + r9.mExtra\landroid.support.v7.widget.LinearLayoutManager$LayoutChunkResult android.support.p003v7.widget.LinearLayoutManager.LayoutChunkResult r3 = r7.mLayoutChunkResult\l}"];
subgraph cluster_LoopRegion_916144340 {
label = "LOOP:0: (1:(2:(1:34)|(2:12|(4:14|(1:20)|(3:23|(1:25)|26)|(1:(1:36)))(1:35))))";
node [shape=record,color=blue];
subgraph cluster_Region_1186104742 {
label = "R(1:(2:(1:34)|(2:12|(4:14|(1:20)|(3:23|(1:25)|26)|(1:(1:36)))(1:35))))";
node [shape=record,color=blue];
subgraph cluster_Region_387733909 {
label = "R(2:(1:34)|(2:12|(4:14|(1:20)|(3:23|(1:25)|26)|(1:(1:36)))(1:35)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1504334336 {
label = "IF [B:8:0x001f, B:9:0x0021, B:11:0x0027] THEN: R(1:34) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001f|ADDED_TO_REGION\l|if (r9.mInfinite != true) goto L_0x0021\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|ADDED_TO_REGION\l|if (r1 \<= 0) goto L_0x0078\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|ADDED_TO_REGION\l|if (r9.hasMore(r10) != true) goto L_0x0078\l}"];
subgraph cluster_Region_447165623 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0078|SYNTHETIC\lEDGE_INSN: B:34:0x0078\-\>B:30:0x0078 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_92613289 {
label = "R(2:12|(4:14|(1:20)|(3:23|(1:25)|26)|(1:(1:36)))(1:35))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0029|r3.resetInternal()\llayoutChunk(r8, r10, r9, r3)\l}"];
subgraph cluster_IfRegion_1400505364 {
label = "IF [B:13:0x0031] THEN: R(4:14|(1:20)|(3:23|(1:25)|26)|(1:(1:36))) ELSE: R(1:35)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0031|if (r3.mFinished != true) goto L_0x0034\l}"];
subgraph cluster_Region_807111309 {
label = "R(4:14|(1:20)|(3:23|(1:25)|26)|(1:(1:36)))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0034|r9.mOffset += r3.mConsumed * r9.mLayoutDirection\l}"];
subgraph cluster_IfRegion_992670940 {
label = "IF [B:15:0x0041, B:17:0x0047, B:19:0x004d] THEN: R(1:20) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0041|ADDED_TO_REGION\l|if (r3.mIgnoreConsumed == false) goto L_0x004f\l}"];
Node_17 [shape=record,label="{17\:\ 0x0047|ADDED_TO_REGION\l|if (r7.mLayoutState.mScrapList != null) goto L_0x004f\l}"];
Node_19 [shape=record,label="{19\:\ 0x004d|ADDED_TO_REGION\l|if (r10.isPreLayout() == false) goto L_0x004f\l}"];
subgraph cluster_Region_1873909344 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x004f|r9.mAvailable \-= r3.mConsumed\lr1 \-= r3.mConsumed\l}"];
}
}
subgraph cluster_IfRegion_1985370839 {
label = "IF [B:22:0x005b] THEN: R(3:23|(1:25)|26) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x005b|if (r9.mScrollingOffset != Integer.MIN_VALUE) goto L_0x005d\l}"];
subgraph cluster_Region_399921522 {
label = "R(3:23|(1:25)|26)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x005d|r9.mScrollingOffset += r3.mConsumed\l}"];
subgraph cluster_IfRegion_614166030 {
label = "IF [B:24:0x0066] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0066|if (r9.mAvailable \< 0) goto L_0x0068\l}"];
subgraph cluster_Region_1363041273 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0068|r9.mScrollingOffset += r9.mAvailable\l}"];
}
}
Node_26 [shape=record,label="{26\:\ 0x006f|recycleByLayoutState(r8, r9)\l}"];
}
}
subgraph cluster_Region_1923076069 {
label = "R(1:(1:36))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_344964408 {
label = "IF [B:27:0x0072, B:29:0x0076] THEN: R(1:36) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0072|if (r11 != false) goto L_0x0074\l}"];
Node_29 [shape=record,label="{29\:\ 0x0076|ADDED_TO_REGION\l|if (r3.mFocusable != false) goto L_0x0078\l}"];
subgraph cluster_Region_911975299 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0078|SYNTHETIC\lEDGE_INSN: B:36:0x0078\-\>B:30:0x0078 ?: BREAK  \l|break\l}"];
}
}
}
}
subgraph cluster_Region_1238323288 {
label = "R(1:35)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0078|SYNTHETIC\lEDGE_INSN: B:35:0x0078\-\>B:30:0x0078 ?: BREAK  \l|break\l}"];
}
}
}
}
}
}
Node_31 [shape=record,label="{31\:\ 0x007b|RETURN\l|return r0 \- r9.mAvailable\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001d|LOOP_START\lPHI: r1 \l  PHI: (r1v3 int) = (r1v2 int), (r1v4 int) binds: [B:6:0x0016, B:32:0x001d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x001d\-\>B:32:0x001d\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0023}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0043}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0049}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0059|PHI: r1 \l  PHI: (r1v4 int) = (r1v5 int), (r1v3 int) binds: [B:20:0x004f, B:19:0x004d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0074}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0078|EDGE_INSN: B:33:0x0078\-\>B:30:0x0078 ?: BREAK  \lEDGE_INSN: B:34:0x0078\-\>B:30:0x0078 ?: BREAK  \lEDGE_INSN: B:35:0x0078\-\>B:30:0x0078 ?: BREAK  \lEDGE_INSN: B:36:0x0078\-\>B:30:0x0078 ?: BREAK  \l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x001d|LOOP_END\lSYNTHETIC\lLOOP:0: B:7:0x001d\-\>B:32:0x001d\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0078|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:33:0x0078\-\>B:30:0x0078 ?: BREAK  \l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x001d|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x001d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{int android.support.v7.widget.LinearLayoutManager.fill((r7v0 'this' android.support.v7.widget.LinearLayoutManager A[IMMUTABLE_TYPE, THIS]), (r8v0 android.support.v7.widget.RecyclerView$Recycler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 android.support.v7.widget.LinearLayoutManager$LayoutState A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 android.support.v7.widget.RecyclerView$State A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_33;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_34;
Node_34 -> Node_30;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_35[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_22 -> Node_27[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_37[style=dashed];
Node_29 -> Node_36;
Node_29 -> Node_38[style=dashed];
Node_36 -> Node_30;
Node_35 -> Node_30;
Node_2 -> Node_3;
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_21 -> Node_22;
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_32 -> Node_7;
Node_33 -> Node_30;
Node_37 -> Node_32;
Node_38 -> Node_32;
}

