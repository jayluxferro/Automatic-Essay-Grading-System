digraph "CFG forandroid.support.v7.widget.LinearLayoutManager.recycleChildren(Landroid\/support\/v7\/widget\/RecyclerView$Recycler;II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r2 != r3) goto L_0x0003\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|RETURN\l|return\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|if (r3 \<= r2) goto L_0x000f\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|int r3 = r3 + \-1\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|LOOP_START\lPHI: r3 \l  PHI: (r3v2 int) = (r3v1 int), (r3v3 int) binds: [B:3:0x0005, B:5:0x0009] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0007\-\>B:5:0x0009\l|if (r3 \< r2) goto L_0x0017\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|LOOP_END\lLOOP:0: B:4:0x0007\-\>B:5:0x0009\l|removeAndRecycleViewAt(r3, r1)\lint r3 = r3 + \-1\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:2:0x0003, B:7:0x0011] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:6:0x000f\-\>B:7:0x0011\l|if (r2 \<= r3) goto L_0x0017\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|LOOP_END\lLOOP:1: B:6:0x000f\-\>B:7:0x0011\l|removeAndRecycleViewAt(r2, r1)\lint r2 = r2 + \-1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.v7.widget.LinearLayoutManager.recycleChildren((r0v0 'this' android.support.v7.widget.LinearLayoutManager A[IMMUTABLE_TYPE, THIS]), (r1v0 android.support.v7.widget.RecyclerView$Recycler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_4;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_6;
Node_8 -> Node_10;
Node_9 -> Node_11;
}

