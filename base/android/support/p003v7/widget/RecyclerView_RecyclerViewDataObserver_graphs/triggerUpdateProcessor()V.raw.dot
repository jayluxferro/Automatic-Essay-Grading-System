digraph "CFG forandroid.support.v7.widget.RecyclerView.RecyclerViewDataObserver.triggerUpdateProcessor()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:boolean) =  android.support.v7.widget.RecyclerView.POST_UPDATES_ON_ANIMATION boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:android.support.v7.widget.RecyclerView) = \l  (r2 I:android.support.v7.widget.RecyclerView$RecyclerViewDataObserver)\l android.support.v7.widget.RecyclerView.RecyclerViewDataObserver.this$0 android.support.v7.widget.RecyclerView \l0x0006: IGET  (r0 I:boolean) = (r0 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mHasFixedSize boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001a \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IGET  (r0 I:android.support.v7.widget.RecyclerView) = \l  (r2 I:android.support.v7.widget.RecyclerView$RecyclerViewDataObserver)\l android.support.v7.widget.RecyclerView.RecyclerViewDataObserver.this$0 android.support.v7.widget.RecyclerView \l0x000c: IGET  (r0 I:boolean) = (r0 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mIsAttached boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IGET  (r0 I:android.support.v7.widget.RecyclerView) = \l  (r2 I:android.support.v7.widget.RecyclerView$RecyclerViewDataObserver)\l android.support.v7.widget.RecyclerView.RecyclerViewDataObserver.this$0 android.support.v7.widget.RecyclerView \l0x0012: IGET  (r1 I:android.support.v7.widget.RecyclerView) = \l  (r2 I:android.support.v7.widget.RecyclerView$RecyclerViewDataObserver)\l android.support.v7.widget.RecyclerView.RecyclerViewDataObserver.this$0 android.support.v7.widget.RecyclerView \l0x0014: IGET  (r1 I:java.lang.Runnable) = (r1 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mUpdateChildViewsRunnable java.lang.Runnable \l0x0016: INVOKE  (r0 I:android.view.View), (r1 I:java.lang.Runnable) android.support.v4.view.ViewCompat.postOnAnimation(android.view.View, java.lang.Runnable):void type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IGET  (r0 I:android.support.v7.widget.RecyclerView) = \l  (r2 I:android.support.v7.widget.RecyclerView$RecyclerViewDataObserver)\l android.support.v7.widget.RecyclerView.RecyclerViewDataObserver.this$0 android.support.v7.widget.RecyclerView \l0x001c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001d: IPUT  \l  (r1 I:boolean)\l  (r0 I:android.support.v7.widget.RecyclerView)\l android.support.v7.widget.RecyclerView.mAdapterUpdateDuringMeasure boolean \l0x001f: IGET  (r0 I:android.support.v7.widget.RecyclerView) = \l  (r2 I:android.support.v7.widget.RecyclerView$RecyclerViewDataObserver)\l android.support.v7.widget.RecyclerView.RecyclerViewDataObserver.this$0 android.support.v7.widget.RecyclerView \l0x0021: INVOKE  (r0 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.requestLayout():void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.v7.widget.RecyclerView.RecyclerViewDataObserver.triggerUpdateProcessor((r2 'this' I:android.support.v7.widget.RecyclerView$RecyclerViewDataObserver A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
}

