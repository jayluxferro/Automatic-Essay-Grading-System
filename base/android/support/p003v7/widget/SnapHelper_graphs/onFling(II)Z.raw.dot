digraph "CFG forandroid.support.v7.widget.SnapHelper.onFling(II)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v7.widget.RecyclerView) = (r4 I:android.support.v7.widget.SnapHelper) android.support.v7.widget.SnapHelper.mRecyclerView android.support.v7.widget.RecyclerView \l0x0002: INVOKE  (r0 I:android.support.v7.widget.RecyclerView$LayoutManager) = (r0 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getLayoutManager():android.support.v7.widget.RecyclerView$LayoutManager type: VIRTUAL \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IGET  (r2 I:android.support.v7.widget.RecyclerView) = (r4 I:android.support.v7.widget.SnapHelper) android.support.v7.widget.SnapHelper.mRecyclerView android.support.v7.widget.RecyclerView \l0x000c: INVOKE  (r2 I:android.support.v7.widget.RecyclerView$Adapter) = (r2 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getAdapter():android.support.v7.widget.RecyclerView$Adapter type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: RETURN  (r1 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IGET  (r2 I:android.support.v7.widget.RecyclerView) = (r4 I:android.support.v7.widget.SnapHelper) android.support.v7.widget.SnapHelper.mRecyclerView android.support.v7.widget.RecyclerView \l0x0015: INVOKE  (r2 I:int) = (r2 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getMinFlingVelocity():int type: VIRTUAL \l0x0019: INVOKE  (r3 I:int) = (r6 I:int) java.lang.Math.abs(int):int type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r3 I:?[int, byte, short, char]) \> (r2 I:?[int, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: INVOKE  (r3 I:int) = (r5 I:int) java.lang.Math.abs(int):int type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: IF  (r3 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:13:0x002c \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: INVOKE  (r5 I:boolean) = \l  (r4 I:android.support.v7.widget.SnapHelper)\l  (r0 I:android.support.v7.widget.RecyclerView$LayoutManager)\l  (r5 I:int)\l  (r6 I:int)\l android.support.v7.widget.SnapHelper.snapFromFling(android.support.v7.widget.RecyclerView$LayoutManager, int, int):boolean type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002c \l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|0x002b: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|0x002c: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.v7.widget.SnapHelper.onFling((r4 'this' I:android.support.v7.widget.SnapHelper A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
}

