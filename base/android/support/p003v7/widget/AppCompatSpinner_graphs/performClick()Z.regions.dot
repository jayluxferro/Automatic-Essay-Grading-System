digraph "CFG forandroid.support.v7.widget.AppCompatSpinner.performClick()Z" {
subgraph cluster_Region_435101012 {
label = "R(1:(2:(1:6)|(1:(2:(1:8)|(2:4|7)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1397767262 {
label = "R(2:(1:6)|(1:(2:(1:8)|(2:4|7))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1858441416 {
label = "IF [B:1:0x0002] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1.mPopup == null) goto L_0x0013\l}"];
subgraph cluster_Region_1748080346 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0017|RETURN\l|return super.performClick()\l}"];
}
}
subgraph cluster_Region_156574517 {
label = "R(1:(2:(1:8)|(2:4|7)))";
node [shape=record,color=blue];
subgraph cluster_Region_1538612365 {
label = "R(2:(1:8)|(2:4|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_422888675 {
label = "IF [B:3:0x000a] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r1.mPopup.isShowing() != false) goto L_?\l}"];
subgraph cluster_Region_2102859353 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1572593229 {
label = "R(2:4|7)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|r1.mPopup.show()\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0013}"];
MethodNode[shape=record,label="{public boolean android.support.v7.widget.AppCompatSpinner.performClick((r1v0 'this' android.support.v7.widget.AppCompatSpinner A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_7;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_5 -> Node_6;
}

