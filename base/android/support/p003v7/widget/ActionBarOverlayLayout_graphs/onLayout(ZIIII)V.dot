digraph "CFG forandroid.support.v7.widget.ActionBarOverlayLayout.onLayout(ZIIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r5 = getChildCount()\lint r6 = getPaddingLeft()\lgetPaddingRight()\lint r7 = getPaddingTop()\lgetPaddingBottom()\lr8 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|LOOP_START\lPHI: r8 \l  PHI: (r8v2 int) = (r8v1 int), (r8v3 int) binds: [B:0:0x0000, B:5:0x003a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0013\-\>B:5:0x003a\l|if (r8 \>= r5) goto L_0x003d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|android.view.View r9 = getChildAt(r8)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|if (r9.getVisibility() == 8) goto L_0x003a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|android.support.v7.widget.ActionBarOverlayLayout$LayoutParams r0 = (android.support.p003v7.widget.ActionBarOverlayLayout.LayoutParams) r9.getLayoutParams()\lint r1 = r9.getMeasuredWidth()\lint r2 = r9.getMeasuredHeight()\lint r3 = r0.leftMargin + r6\lint r0 = r0.topMargin + r7\lr9.layout(r3, r0, r1 + r3, r2 + r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x003a|LOOP_END\lLOOP:0: B:1:0x0013\-\>B:5:0x003a\l|int r8 = r8 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x003d|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x003a|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void android.support.v7.widget.ActionBarOverlayLayout.onLayout((r4v0 'this' android.support.v7.widget.ActionBarOverlayLayout A[IMMUTABLE_TYPE, THIS]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_8;
Node_5 -> Node_1;
Node_7 -> Node_6;
Node_8 -> Node_5;
Node_9 -> Node_5;
}

