digraph "CFG forandroid.support.v7.widget.GapWorker.1.compare(Landroid\/support\/v7\/widget\/GapWorker$Task;Landroid\/support\/v7\/widget\/GapWorker$Task;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v7.widget.RecyclerView) = (r6 I:android.support.v7.widget.GapWorker$Task) android.support.v7.widget.GapWorker.Task.view android.support.v7.widget.RecyclerView \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IGET  (r3 I:android.support.v7.widget.RecyclerView) = (r7 I:android.support.v7.widget.GapWorker$Task) android.support.v7.widget.GapWorker.Task.view android.support.v7.widget.RecyclerView \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000f \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x001a \l}"];
Node_10 [shape=record,label="{10\:\ 0x0013|0x0013: IGET  (r6 I:android.support.v7.widget.RecyclerView) = (r6 I:android.support.v7.widget.GapWorker$Task) android.support.v7.widget.GapWorker.Task.view android.support.v7.widget.RecyclerView \l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|0x0015: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0018 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0018|0x0018: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0019|0x0019: RETURN  (r2 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x001a|0x001a: IGET  (r0 I:boolean) = (r6 I:android.support.v7.widget.GapWorker$Task) android.support.v7.widget.GapWorker.Task.immediate boolean \l0x001c: IGET  (r3 I:boolean) = (r7 I:android.support.v7.widget.GapWorker$Task) android.support.v7.widget.GapWorker.Task.immediate boolean \l}"];
Node_16 [shape=record,label="{16\:\ 0x001e|0x001e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0026 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0020|0x0020: IGET  (r6 I:boolean) = (r6 I:android.support.v7.widget.GapWorker$Task) android.support.v7.widget.GapWorker.Task.immediate boolean \l}"];
Node_18 [shape=record,label="{18\:\ 0x0022|0x0022: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0025 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0024|0x0024: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0025|0x0025: RETURN  (r2 I:int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0026|0x0026: IGET  (r0 I:int) = (r7 I:android.support.v7.widget.GapWorker$Task) android.support.v7.widget.GapWorker.Task.viewVelocity int \l0x0028: IGET  (r2 I:int) = (r6 I:android.support.v7.widget.GapWorker$Task) android.support.v7.widget.GapWorker.Task.viewVelocity int \l0x002a: ARITH  (r0 I:int) = (r0 I:int) \- (r2 I:int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x002b|0x002b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x002e \l}"];
Node_23 [shape=record,label="{23\:\ 0x002d|0x002d: RETURN  (r0 I:int) \l}"];
Node_24 [shape=record,label="{24\:\ 0x002e|0x002e: IGET  (r6 I:int) = (r6 I:android.support.v7.widget.GapWorker$Task) android.support.v7.widget.GapWorker.Task.distanceToItem int \l0x0030: IGET  (r7 I:int) = (r7 I:android.support.v7.widget.GapWorker$Task) android.support.v7.widget.GapWorker.Task.distanceToItem int \l0x0032: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0033|0x0033: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0036 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0035|0x0035: RETURN  (r6 I:int) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0036|0x0036: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{public int android.support.v7.widget.GapWorker.1.compare((r5 'this' I:android.support.v7.widget.GapWorker$1 A[IMMUTABLE_TYPE, THIS]), (r6 I:android.support.v7.widget.GapWorker$Task A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.support.v7.widget.GapWorker$Task A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
}

