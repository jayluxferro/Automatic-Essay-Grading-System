digraph "CFG forandroid.support.v7.widget.RecyclerView.RecycledViewPool.willCreateInTime(IJJ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r5 I:android.support.v7.widget.RecyclerView$RecycledViewPool$ScrapData) = \l  (r4 I:android.support.v7.widget.RecyclerView$RecycledViewPool)\l  (r5 I:int)\l android.support.v7.widget.RecyclerView.RecycledViewPool.getScrapDataForType(int):android.support.v7.widget.RecyclerView$RecycledViewPool$ScrapData type: DIRECT \l0x0004: IGET  (r0 I:long) = \l  (r5 I:android.support.v7.widget.RecyclerView$RecycledViewPool$ScrapData)\l android.support.v7.widget.RecyclerView.RecycledViewPool.ScrapData.mCreateRunningAverageNs long \l0x0006: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0008: CMP_L  (r5 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: ARITH  (r6 I:long) = (r6 I:long) + (r0 I:long) \l0x000d: CMP_L  (r5 I:int) = (r6 I:long), (r8 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: RETURN  (r5 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean android.support.v7.widget.RecyclerView.RecycledViewPool.willCreateInTime((r4 'this' I:android.support.v7.widget.RecyclerView$RecycledViewPool A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
}

