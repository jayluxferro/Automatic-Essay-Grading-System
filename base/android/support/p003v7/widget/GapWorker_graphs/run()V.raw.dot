digraph "CFG forandroid.support.v7.widget.GapWorker.run()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0002: CONST_STR  (r2 I:java.lang.String) =  \"RV Prefetch\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|SYNTHETIC\lSplitter:B:1:0x0004\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0004\l|0x0004: INVOKE  (r2 I:java.lang.String) android.support.v4.os.TraceCompat.beginSection(java.lang.String):void type: STATIC A[Catch:\{ all \-\> 0x0055 \}, TRY_ENTER]\l0x0007: IGET  (r2 I:java.util.ArrayList\<android.support.v7.widget.RecyclerView\>) = (r8 I:android.support.v7.widget.GapWorker) android.support.v7.widget.GapWorker.mRecyclerViews java.util.ArrayList A[Catch:\{ all \-\> 0x0055 \}]\l0x0009: INVOKE  (r2 I:boolean) = (r2 I:java.util.ArrayList) java.util.ArrayList.isEmpty():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0055 \}]\l0x000c: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IPUT  (r0 I:long), (r8 I:android.support.v7.widget.GapWorker) android.support.v7.widget.GapWorker.mPostTimeNs long \l0x0011: INVOKE   android.support.v4.os.TraceCompat.endSection():void type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|SYNTHETIC\lSplitter:B:6:0x0015\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0015\l|0x0015: IGET  (r2 I:java.util.ArrayList\<android.support.v7.widget.RecyclerView\>) = (r8 I:android.support.v7.widget.GapWorker) android.support.v7.widget.GapWorker.mRecyclerViews java.util.ArrayList A[Catch:\{ all \-\> 0x0055 \}, TRY_ENTER]\l0x0017: INVOKE  (r2 I:int) = (r2 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL A[Catch:\{ all \-\> 0x0055 \}]\l0x001b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0055 \}]\l0x001c: MOVE  (r4 I:?[long, double]) = (r0 I:?[long, double]) A[Catch:\{ all \-\> 0x0055 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: IF  (r3 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:13:0x0038 A[Catch:\{ all \-\> 0x0055 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: IGET  (r6 I:java.util.ArrayList\<android.support.v7.widget.RecyclerView\>) = (r8 I:android.support.v7.widget.GapWorker) android.support.v7.widget.GapWorker.mRecyclerViews java.util.ArrayList A[Catch:\{ all \-\> 0x0055 \}]\l0x0021: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.ArrayList), (r3 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0055 \}]\l0x0025: CHECK_CAST  (r6 I:android.support.v7.widget.RecyclerView) = (android.support.v7.widget.RecyclerView) (r6 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0055 \}]\l0x0027: INVOKE  (r7 I:int) = (r6 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getWindowVisibility():int type: VIRTUAL A[Catch:\{ all \-\> 0x0055 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0035 A[Catch:\{ all \-\> 0x0055 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: INVOKE  (r6 I:long) = (r6 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getDrawingTime():long type: VIRTUAL A[Catch:\{ all \-\> 0x0055 \}]\l0x0031: INVOKE  (r4 I:long) = (r6 I:long), (r4 I:long) java.lang.Math.max(long, long):long type: STATIC A[Catch:\{ all \-\> 0x0055 \}]\l0x0034: NOP   A[TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|0x0035: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|0x0038: CMP_L  (r2 I:int) = (r4 I:long), (r0 I:long) \l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|0x003a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0042 \l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|0x003c: IPUT  (r0 I:long), (r8 I:android.support.v7.widget.GapWorker) android.support.v7.widget.GapWorker.mPostTimeNs long \l0x003e: INVOKE   android.support.v4.os.TraceCompat.endSection():void type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0041|0x0041: RETURN   \l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|SYNTHETIC\lSplitter:B:17:0x0042\l}"];
Node_18 [shape=record,label="{18\:\ ?|Splitter:B:17:0x0042\l|0x0042: SGET  (r2 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.MILLISECONDS java.util.concurrent.TimeUnit A[Catch:\{ all \-\> 0x0055 \}, TRY_ENTER]\l0x0044: INVOKE  (r2 I:long) = (r2 I:java.util.concurrent.TimeUnit), (r4 I:long) java.util.concurrent.TimeUnit.toNanos(long):long type: VIRTUAL A[Catch:\{ all \-\> 0x0055 \}]\l0x0048: IGET  (r4 I:long) = (r8 I:android.support.v7.widget.GapWorker) android.support.v7.widget.GapWorker.mFrameIntervalNs long A[Catch:\{ all \-\> 0x0055 \}]\l0x004a: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0055 \}]\l0x004b: ARITH  (r2 I:long) = (r2 I:long) + (r4 I:long) A[Catch:\{ all \-\> 0x0055 \}]\l0x004c: INVOKE  (r8 I:android.support.v7.widget.GapWorker), (r2 I:long) android.support.v7.widget.GapWorker.prefetch(long):void type: VIRTUAL A[Catch:\{ all \-\> 0x0055 \}, TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x004f|0x004f: IPUT  (r0 I:long), (r8 I:android.support.v7.widget.GapWorker) android.support.v7.widget.GapWorker.mPostTimeNs long \l0x0051: INVOKE   android.support.v4.os.TraceCompat.endSection():void type: STATIC \l}"];
Node_20 [shape=record,label="{20\:\ 0x0054|0x0054: RETURN   \l}"];
Node_21 [shape=record,label="{21\:\ 0x0055|ExcHandler: all null\lSplitter:B:1:0x0004\l|0x0055: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_22 [shape=record,label="{22\:\ 0x0056|0x0056: IPUT  (r0 I:long), (r8 I:android.support.v7.widget.GapWorker) android.support.v7.widget.GapWorker.mPostTimeNs long \l0x0058: INVOKE   android.support.v4.os.TraceCompat.endSection():void type: STATIC \l}"];
Node_23 [shape=record,label="{23\:\ 0x005b|0x005b: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.GapWorker.run((r8 'this' I:android.support.v7.widget.GapWorker A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_21;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23;
}

