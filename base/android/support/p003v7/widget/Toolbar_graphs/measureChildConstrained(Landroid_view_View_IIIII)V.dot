digraph "CFG forandroid.support.v7.widget.Toolbar.measureChildConstrained(Landroid\/view\/View;IIIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.view.ViewGroup$MarginLayoutParams r0 = (android.view.ViewGroup.MarginLayoutParams) r4.getLayoutParams()\lint r5 = getChildMeasureSpec(r5, (((getPaddingLeft() + getPaddingRight()) + r0.leftMargin) + r0.rightMargin) + r6, r0.width)\lint r6 = getChildMeasureSpec(r7, (((getPaddingTop() + getPaddingBottom()) + r0.topMargin) + r0.bottomMargin) + r8, r0.height)\lint r7 = android.view.View.MeasureSpec.getMode(r6)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0038|if (r7 == 1073741824) goto L_0x004a\l}"];
Node_2 [shape=record,label="{2\:\ 0x003a|if (r9 \< 0) goto L_0x004a\l}"];
Node_3 [shape=record,label="{3\:\ 0x003c|if (r7 == 0) goto L_0x0046\l}"];
Node_4 [shape=record,label="{4\:\ 0x003e|int r9 = java.lang.Math.min(android.view.View.MeasureSpec.getSize(r6), r9)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0046|PHI: r9 \l  PHI: (r9v1 int) = (r9v0 int), (r9v2 int) binds: [B:3:0x003c, B:4:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|int r6 = android.view.View.MeasureSpec.makeMeasureSpec(r9, 1073741824)\l}"];
Node_6 [shape=record,label="{6\:\ 0x004a|PHI: r6 \l  PHI: (r6v8 int) = (r6v7 int), (r6v7 int), (r6v9 int) binds: [B:1:0x0038, B:2:0x003a, B:5:0x0046] A[DONT_GENERATE, DONT_INLINE]\l|r4.measure(r5, r6)\l}"];
Node_7 [shape=record,label="{7\:\ 0x004d|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.v7.widget.Toolbar.measureChildConstrained((r3v0 'this' android.support.v7.widget.Toolbar A[IMMUTABLE_TYPE, THIS]), (r4v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

