digraph "CFG forandroid.support.v7.widget.Toolbar.getWrapper()Landroid\/support\/v7\/widget\/DecorToolbar;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v7.widget.ToolbarWidgetWrapper) = (r2 I:android.support.v7.widget.Toolbar) android.support.v7.widget.Toolbar.mWrapper android.support.v7.widget.ToolbarWidgetWrapper \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:android.support.v7.widget.ToolbarWidgetWrapper) =  android.support.v7.widget.ToolbarWidgetWrapper \l0x0006: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: INVOKE  \l  (r0 I:android.support.v7.widget.ToolbarWidgetWrapper)\l  (r2 I:android.support.v7.widget.Toolbar)\l  (r1 I:boolean)\l android.support.v7.widget.ToolbarWidgetWrapper.\<init\>(android.support.v7.widget.Toolbar, boolean):void type: DIRECT \l0x000a: IPUT  \l  (r0 I:android.support.v7.widget.ToolbarWidgetWrapper)\l  (r2 I:android.support.v7.widget.Toolbar)\l android.support.v7.widget.Toolbar.mWrapper android.support.v7.widget.ToolbarWidgetWrapper \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IGET  (r0 I:android.support.v7.widget.ToolbarWidgetWrapper) = (r2 I:android.support.v7.widget.Toolbar) android.support.v7.widget.Toolbar.mWrapper android.support.v7.widget.ToolbarWidgetWrapper \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: RETURN  (r0 I:android.support.v7.widget.DecorToolbar) \l}"];
MethodNode[shape=record,label="{public android.support.v7.widget.DecorToolbar android.support.v7.widget.Toolbar.getWrapper((r2 'this' I:android.support.v7.widget.Toolbar A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.support.annotation.RestrictTo, \{value=[android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP android.support.annotation.RestrictTo$Scope]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

