digraph "CFG forandroid.support.v7.widget.Toolbar.getViewListMeasuredWidth(Ljava\/util\/List;[I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: AGET  (r1 I:?[int, float]) = (r10 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l0x0003: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0004: AGET  (r10 I:?[int, float]) = (r10 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0006: INVOKE  (r2 I:int) = (r9 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x000a: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r10 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:3:0x003f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: INVOKE  (r5 I:java.lang.Object) = (r9 I:java.util.List), (r10 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0013: CHECK_CAST  (r5 I:android.view.View) = (android.view.View) (r5 I:?[OBJECT, ARRAY]) \l0x0015: INVOKE  (r6 I:android.view.ViewGroup$LayoutParams) = (r5 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0019: CHECK_CAST  (r6 I:android.support.v7.widget.Toolbar$LayoutParams) = (android.support.v7.widget.Toolbar$LayoutParams) (r6 I:?[OBJECT, ARRAY]) \l0x001b: IGET  (r7 I:int) = (r6 I:android.support.v7.widget.Toolbar$LayoutParams) android.support.v7.widget.Toolbar.LayoutParams.leftMargin int \l0x001d: ARITH  (r7 I:int) = (r7 I:int) \- (r1 I:int) \l0x001e: IGET  (r1 I:int) = (r6 I:android.support.v7.widget.Toolbar$LayoutParams) android.support.v7.widget.Toolbar.LayoutParams.rightMargin int \l0x0020: ARITH  (r1 I:int) = (r1 I:int) \- (r3 I:int) \l0x0021: INVOKE  (r3 I:int) = (r0 I:int), (r7 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x0025: INVOKE  (r6 I:int) = (r0 I:int), (r1 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x0029: NEG  (r7 I:int) = (r7 I:int) \l0x002a: INVOKE  (r7 I:int) = (r0 I:int), (r7 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x002e: NEG  (r1 I:int) = (r1 I:int) \l0x002f: INVOKE  (r1 I:int) = (r0 I:int), (r1 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x0033: INVOKE  (r5 I:int) = (r5 I:android.view.View) android.view.View.getMeasuredWidth():int type: VIRTUAL \l0x0037: ARITH  (r3 I:int) = (r3 I:int) + (r5 I:int) \l0x0038: ARITH  (r3 I:int) = (r3 I:int) + (r6 I:int) \l0x0039: ARITH  (r4 I:int) = (r4 I:int) + (r3 I:int) \l0x003a: ARITH  (r10 I:int) = (r10 I:int) + (1 int) \l0x003c: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003d: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x003f|0x003f: RETURN  (r4 I:int) \l}"];
MethodNode[shape=record,label="{private int android.support.v7.widget.Toolbar.getViewListMeasuredWidth((r8 'this' I:android.support.v7.widget.Toolbar A[IMMUTABLE_TYPE, THIS]), (r9 I:java.util.List\<android.view.View\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Landroid\/view\/View;, \>;[I)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

