digraph "CFG forandroid.support.v7.widget.Toolbar.shouldCollapse()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r5.mCollapsible != false) goto L_0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|RETURN\l|return false\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|int r0 = getChildCount()\lr2 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:3:0x0006, B:12:0x0024] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000b\-\>B:12:0x0024\l|if (r2 \>= r0) goto L_0x0027\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|android.view.View r3 = getChildAt(r2)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|if (shouldLayout(r3) == false) goto L_0x0024\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017}"];
Node_8 [shape=record,label="{8\:\ 0x001b|if (r3.getMeasuredWidth() \<= 0) goto L_0x0024\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d}"];
Node_10 [shape=record,label="{10\:\ 0x0021|if (r3.getMeasuredHeight() \<= 0) goto L_0x0024\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|RETURN\l|return false\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|LOOP_END\lLOOP:0: B:4:0x000b\-\>B:12:0x0024\l|int r2 = r2 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|RETURN\l|return true\l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0027|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0024|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0024|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0024|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private boolean android.support.v7.widget.Toolbar.shouldCollapse((r5v0 'this' android.support.v7.widget.Toolbar A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_15;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_16;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_14[style=dashed];
Node_10 -> Node_18;
Node_12 -> Node_4;
Node_14 -> Node_11;
Node_15 -> Node_13;
Node_16 -> Node_12;
Node_17 -> Node_12;
Node_18 -> Node_12;
}

