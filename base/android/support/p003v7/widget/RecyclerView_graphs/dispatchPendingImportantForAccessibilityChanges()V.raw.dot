digraph "CFG forandroid.support.v7.widget.RecyclerView.dispatchPendingImportantForAccessibilityChanges()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<android.support.v7.widget.RecyclerView$ViewHolder\>) = (r5 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mPendingAccessibilityImportanceChange java.util.List \l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0006: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:11:0x0030 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r1 I:java.util.List\<android.support.v7.widget.RecyclerView$ViewHolder\>) = (r5 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mPendingAccessibilityImportanceChange java.util.List \l0x000c: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0010: CHECK_CAST  (r1 I:android.support.v7.widget.RecyclerView$ViewHolder) = (android.support.v7.widget.RecyclerView$ViewHolder) (r1 I:?[OBJECT, ARRAY]) \l0x0012: IGET  (r2 I:android.view.View) = (r1 I:android.support.v7.widget.RecyclerView$ViewHolder) android.support.v7.widget.RecyclerView.ViewHolder.itemView android.view.View \l0x0014: INVOKE  (r2 I:android.view.ViewParent) = (r2 I:android.view.View) android.view.View.getParent():android.view.ViewParent type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002d \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: INVOKE  (r2 I:boolean) = (r1 I:android.support.v7.widget.RecyclerView$ViewHolder) android.support.v7.widget.RecyclerView.ViewHolder.shouldIgnore():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0021 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: IGET  (r2 I:int) = (r1 I:android.support.v7.widget.RecyclerView$ViewHolder) android.support.v7.widget.RecyclerView.ViewHolder.mPendingAccessibilityState int \l0x0023: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002d \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: IGET  (r4 I:android.view.View) = (r1 I:android.support.v7.widget.RecyclerView$ViewHolder) android.support.v7.widget.RecyclerView.ViewHolder.itemView android.view.View \l0x0028: INVOKE  (r4 I:android.view.View), (r2 I:int) android.support.v4.view.ViewCompat.setImportantForAccessibility(android.view.View, int):void type: STATIC \l0x002b: IPUT  \l  (r3 I:int)\l  (r1 I:android.support.v7.widget.RecyclerView$ViewHolder)\l android.support.v7.widget.RecyclerView.ViewHolder.mPendingAccessibilityState int \l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: IGET  (r0 I:java.util.List\<android.support.v7.widget.RecyclerView$ViewHolder\>) = (r5 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mPendingAccessibilityImportanceChange java.util.List \l0x0032: INVOKE  (r0 I:java.util.List) java.util.List.clear():void type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|0x0035: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.v7.widget.RecyclerView.dispatchPendingImportantForAccessibilityChanges((r5 'this' I:android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_10[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12;
}

