digraph "CFG forandroid.support.v7.widget.RecyclerView.removeDetachedView(Landroid\/view\/View;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.support.v7.widget.RecyclerView$ViewHolder) = (r3 I:android.view.View) android.support.v7.widget.RecyclerView.getChildViewHolderInt(android.view.View):android.support.v7.widget.RecyclerView$ViewHolder type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0035 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r1 I:boolean) = (r0 I:android.support.v7.widget.RecyclerView$ViewHolder) android.support.v7.widget.RecyclerView.ViewHolder.isTmpDetached():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: INVOKE  (r0 I:android.support.v7.widget.RecyclerView$ViewHolder) android.support.v7.widget.RecyclerView.ViewHolder.clearTmpDetachFlag():void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: INVOKE  (r1 I:boolean) = (r0 I:android.support.v7.widget.RecyclerView$ViewHolder) android.support.v7.widget.RecyclerView.ViewHolder.shouldIgnore():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0017 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0019: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001b: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001e: CONST_STR  (r1 I:java.lang.String) =  \"Called removeDetachedView with a view which is not flagged as tmp detached.\" \l0x0020: INVOKE  (r4 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0023: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0026: INVOKE  (r0 I:java.lang.String) = (r2 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.exceptionLabel():java.lang.String type: VIRTUAL \l0x002a: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002d: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0031: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|0x0035: INVOKE  (r3 I:android.view.View) android.view.View.clearAnimation():void type: VIRTUAL \l0x0038: INVOKE  \l  (r2 I:android.support.v7.widget.RecyclerView)\l  (r3 I:android.view.View)\l android.support.v7.widget.RecyclerView.dispatchChildDetached(android.view.View):void type: VIRTUAL \l0x003b: INVOKE  \l  (r2 I:android.view.ViewGroup)\l  (r3 I:android.view.View)\l  (r4 I:boolean)\l android.view.ViewGroup.removeDetachedView(android.view.View, boolean):void type: SUPER \l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|0x003e: RETURN   \l}"];
MethodNode[shape=record,label="{protected void android.support.v7.widget.RecyclerView.removeDetachedView((r2 'this' I:android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_10[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_11;
}

