digraph "CFG forandroid.support.v7.widget.RecyclerView.hasUpdatedView()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r5.mChildHelper.getChildCount()\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:9:0x0025] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0008\-\>B:9:0x0025\l|if (r2 \>= r0) goto L_0x0028\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|android.support.v7.widget.RecyclerView$ViewHolder r3 = getChildViewHolderInt(r5.mChildHelper.getChildAt(r2))\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|if (r3 == null) goto L_0x0025\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016}"];
Node_5 [shape=record,label="{5\:\ 0x001a|if (r3.shouldIgnore() == false) goto L_0x001d\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d}"];
Node_7 [shape=record,label="{7\:\ 0x0021|if (r3.isUpdated() == false) goto L_0x0025\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|RETURN\l|return true\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|LOOP_END\lLOOP:0: B:1:0x0008\-\>B:9:0x0025\l|int r2 = r2 + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|RETURN\l|return false\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private boolean android.support.v7.widget.RecyclerView.hasUpdatedView((r5v0 'this' android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_15[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_11[style=dashed];
Node_7 -> Node_14;
Node_9 -> Node_1;
Node_11 -> Node_8;
Node_12 -> Node_10;
Node_13 -> Node_9;
Node_14 -> Node_9;
Node_15 -> Node_9;
}

