digraph "CFG forandroid.support.v7.widget.RecyclerView.onSaveInstanceState()Landroid\/os\/Parcelable;" {
subgraph cluster_Region_882003607 {
label = "R(3:0|(1:2)(1:(1:5)(1:6))|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.support.v7.widget.RecyclerView$SavedState android.support.p003v7.widget.RecyclerView.SavedState r0 = new android.support.p003v7.widget.RecyclerView.SavedState(super.onSaveInstanceState())\l}"];
subgraph cluster_IfRegion_1011708157 {
label = "IF [B:1:0x000b] THEN: R(1:2) ELSE: R(1:(1:5)(1:6))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r2.mPendingSavedState != null) goto L_0x000d\l}"];
subgraph cluster_Region_1029397259 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000d|r0.copyFrom(r2.mPendingSavedState)\l}"];
}
subgraph cluster_Region_1761575536 {
label = "R(1:(1:5)(1:6)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_690974905 {
label = "IF [B:4:0x0015] THEN: R(1:5) ELSE: R(1:6) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0015|if (r2.mLayout != null) goto L_0x0017\l}"];
subgraph cluster_Region_735613219 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0017|r0.mLayoutState = r2.mLayout.onSaveInstanceState()\l}"];
}
subgraph cluster_Region_904308120 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0020|r0.mLayoutState = null\l}"];
}
}
}
}
Node_7 [shape=record,label="{7\:\ 0x0023|RETURN\l|return r0\l}"];
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0013}"];
MethodNode[shape=record,label="{protected android.os.Parcelable android.support.v7.widget.RecyclerView.onSaveInstanceState((r2v0 'this' android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_3 -> Node_4;
}

