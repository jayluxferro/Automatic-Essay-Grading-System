digraph "CFG forandroid.support.v7.widget.RecyclerView.didChildRangeChange(II)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int[]) = (r3 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mMinMaxLayoutPositions int[] \l0x0002: INVOKE  (r3 I:android.support.v7.widget.RecyclerView), (r0 I:int[]) android.support.v7.widget.RecyclerView.findMinMaxChildLayoutPositions(int[]):void type: DIRECT \l0x0005: IGET  (r0 I:int[]) = (r3 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mMinMaxLayoutPositions int[] \l0x0007: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: AGET  (r0 I:?[int, float]) = (r0 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x000a: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IGET  (r4 I:int[]) = (r3 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mMinMaxLayoutPositions int[] \l0x000f: AGET  (r4 I:?[int, float]) = (r4 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0014 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean android.support.v7.widget.RecyclerView.didChildRangeChange((r3 'this' I:android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
}

