digraph "CFG forandroid.support.v7.widget.RecyclerView.removeItemDecoration(Landroid\/support\/v7\/widget\/RecyclerView$ItemDecoration;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v7.widget.RecyclerView$LayoutManager) = (r2 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mLayout android.support.v7.widget.RecyclerView$LayoutManager \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:android.support.v7.widget.RecyclerView$LayoutManager) = (r2 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mLayout android.support.v7.widget.RecyclerView$LayoutManager \l0x0006: CONST_STR  (r1 I:java.lang.String) =  \"Cannot remove item decoration during a scroll  or layout\" \l0x0008: INVOKE  \l  (r0 I:android.support.v7.widget.RecyclerView$LayoutManager)\l  (r1 I:java.lang.String)\l android.support.v7.widget.RecyclerView.LayoutManager.assertNotInLayoutOrScroll(java.lang.String):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r0 I:java.util.ArrayList\<android.support.v7.widget.RecyclerView$ItemDecoration\>) = (r2 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mItemDecorations java.util.ArrayList \l0x000d: INVOKE  (r0 I:java.util.ArrayList), (r3 I:java.lang.Object) java.util.ArrayList.remove(java.lang.Object):boolean type: VIRTUAL \l0x0010: IGET  (r3 I:java.util.ArrayList\<android.support.v7.widget.RecyclerView$ItemDecoration\>) = (r2 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mItemDecorations java.util.ArrayList \l0x0012: INVOKE  (r3 I:boolean) = (r3 I:java.util.ArrayList) java.util.ArrayList.isEmpty():boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: INVOKE  (r3 I:int) = (r2 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getOverScrollMode():int type: VIRTUAL \l0x001c: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0021 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: INVOKE  \l  (r2 I:android.support.v7.widget.RecyclerView)\l  (r3 I:boolean)\l android.support.v7.widget.RecyclerView.setWillNotDraw(boolean):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: INVOKE  (r2 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.markItemDecorInsetsDirty():void type: VIRTUAL \l0x0028: INVOKE  (r2 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.requestLayout():void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.RecyclerView.removeItemDecoration((r2 'this' I:android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r3 I:android.support.v7.widget.RecyclerView$ItemDecoration A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

