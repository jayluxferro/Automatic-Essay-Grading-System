digraph "CFG forandroid.support.v7.widget.RecyclerView.setLayoutFrozen(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r10 == r9.mLayoutFrozen) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|assertNotInLayoutOrScroll(\"Do not setLayoutFrozen in layout or scroll\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r10 != false) goto L_0x0020\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|r9.mLayoutFrozen = false\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r9.mLayoutWasDefered == false) goto L_0x001d\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012}"];
Node_7 [shape=record,label="{7\:\ 0x0014|if (r9.mLayout == null) goto L_0x001d\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016}"];
Node_9 [shape=record,label="{9\:\ 0x0018|if (r9.mAdapter == null) goto L_0x001d\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|requestLayout()\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|r9.mLayoutWasDefered = false\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|long r3 = android.os.SystemClock.uptimeMillis()\lonTouchEvent(android.view.MotionEvent.obtain(r3, r3, 3, 0.0f, 0.0f, 0))\lr9.mLayoutFrozen = true\lr9.mIgnoreMotionEventTillDown = true\lstopScroll()\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.RecyclerView.setLayoutFrozen((r9v0 'this' android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_15;
Node_12 -> Node_13;
}

