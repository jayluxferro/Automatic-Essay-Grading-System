digraph "CFG forandroid.support.v7.widget.RecyclerView.draw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super.draw(r8)\lint r0 = r7.mItemDecorations.size()\lr1 = false\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v3 int) binds: [B:0:0x0000, B:2:0x000d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000b\-\>B:2:0x000d\l|if (r2 \>= r0) goto L_0x001d\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|LOOP_END\lLOOP:0: B:1:0x000b\-\>B:2:0x000d\l|r7.mItemDecorations.get(r2).onDrawOver(r8, r7, r7.mState)\lint r2 = r2 + 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d}"];
Node_4 [shape=record,label="{4\:\ 0x0020|if (r7.mLeftGlow == null) goto L_0x005b\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022}"];
Node_6 [shape=record,label="{6\:\ 0x0028|if (r7.mLeftGlow.isFinished() != false) goto L_0x005b\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|int r0 = r8.save()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|if (r7.mClipToPadding == false) goto L_0x0037\l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|int r3 = getPaddingBottom()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|r3 = 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|PHI: r3 \l  PHI: (r3v7 int) = (r3v15 int), (r3v16 int) binds: [B:10:0x0037, B:9:0x0032] A[DONT_GENERATE, DONT_INLINE]\l|r8.rotate(270.0f)\lr8.translate((float) ((\-getHeight()) + r3), 0.0f)\l}"];
Node_12 [shape=record,label="{12\:\ 0x004a|if (r7.mLeftGlow == null) goto L_0x0056\l}"];
Node_13 [shape=record,label="{13\:\ 0x004c}"];
Node_14 [shape=record,label="{14\:\ 0x0052|if (r7.mLeftGlow.draw(r8) == false) goto L_0x0056\l}"];
Node_15 [shape=record,label="{15\:\ 0x0054|r3 = true\l}"];
Node_16 [shape=record,label="{16\:\ 0x0056|r3 = false\l}"];
Node_17 [shape=record,label="{17\:\ 0x0057|PHI: r3 \l  PHI: (r3v10 boolean) = (r3v11 boolean), (r3v14 boolean) binds: [B:16:0x0056, B:15:0x0054] A[DONT_GENERATE, DONT_INLINE]\l|r8.restoreToCount(r0)\l}"];
Node_18 [shape=record,label="{18\:\ 0x005b|r3 = false\l}"];
Node_19 [shape=record,label="{19\:\ 0x005c|PHI: r3 \l  PHI: (r3v0 boolean) = (r3v5 boolean), (r3v10 boolean) binds: [B:18:0x005b, B:17:0x0057] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x005e|if (r7.mTopGlow == null) goto L_0x0090\l}"];
Node_21 [shape=record,label="{21\:\ 0x0060}"];
Node_22 [shape=record,label="{22\:\ 0x0066|if (r7.mTopGlow.isFinished() != false) goto L_0x0090\l}"];
Node_23 [shape=record,label="{23\:\ 0x0068|int r0 = r8.save()\l}"];
Node_24 [shape=record,label="{24\:\ 0x006e|if (r7.mClipToPadding == false) goto L_0x007d\l}"];
Node_25 [shape=record,label="{25\:\ 0x0070|r8.translate((float) getPaddingLeft(), (float) getPaddingTop())\l}"];
Node_26 [shape=record,label="{26\:\ 0x007d}"];
Node_27 [shape=record,label="{27\:\ 0x007f|if (r7.mTopGlow == null) goto L_0x008b\l}"];
Node_28 [shape=record,label="{28\:\ 0x0081}"];
Node_29 [shape=record,label="{29\:\ 0x0087|if (r7.mTopGlow.draw(r8) == false) goto L_0x008b\l}"];
Node_30 [shape=record,label="{30\:\ 0x0089|r4 = true\l}"];
Node_31 [shape=record,label="{31\:\ 0x008b|r4 = false\l}"];
Node_32 [shape=record,label="{32\:\ 0x008c|PHI: r4 \l  PHI: (r4v23 boolean) = (r4v24 boolean), (r4v27 boolean) binds: [B:31:0x008b, B:30:0x0089] A[DONT_GENERATE, DONT_INLINE]\l|r3 = r3 \| r4\lr8.restoreToCount(r0)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0090|PHI: r3 \l  PHI: (r3v1 boolean) = (r3v0 boolean), (r3v0 boolean), (r3v4 boolean) binds: [B:20:0x005e, B:22:0x0066, B:32:0x008c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0092|if (r7.mRightGlow == null) goto L_0x00cd\l}"];
Node_35 [shape=record,label="{35\:\ 0x0094}"];
Node_36 [shape=record,label="{36\:\ 0x009a|if (r7.mRightGlow.isFinished() != false) goto L_0x00cd\l}"];
Node_37 [shape=record,label="{37\:\ 0x009c|int r0 = r8.save()\lint r4 = getWidth()\l}"];
Node_38 [shape=record,label="{38\:\ 0x00a6|if (r7.mClipToPadding == false) goto L_0x00ad\l}"];
Node_39 [shape=record,label="{39\:\ 0x00a8|int r5 = getPaddingTop()\l}"];
Node_40 [shape=record,label="{40\:\ 0x00ad|r5 = 0\l}"];
Node_41 [shape=record,label="{41\:\ 0x00ae|PHI: r5 \l  PHI: (r5v9 int) = (r5v12 int), (r5v13 int) binds: [B:40:0x00ad, B:39:0x00a8] A[DONT_GENERATE, DONT_INLINE]\l|r8.rotate(90.0f)\lr8.translate((float) (\-r5), (float) (\-r4))\l}"];
Node_42 [shape=record,label="{42\:\ 0x00bc|if (r7.mRightGlow == null) goto L_0x00c8\l}"];
Node_43 [shape=record,label="{43\:\ 0x00be}"];
Node_44 [shape=record,label="{44\:\ 0x00c4|if (r7.mRightGlow.draw(r8) == false) goto L_0x00c8\l}"];
Node_45 [shape=record,label="{45\:\ 0x00c6|r4 = true\l}"];
Node_46 [shape=record,label="{46\:\ 0x00c8|r4 = false\l}"];
Node_47 [shape=record,label="{47\:\ 0x00c9|PHI: r4 \l  PHI: (r4v16 boolean) = (r4v17 boolean), (r4v20 boolean) binds: [B:46:0x00c8, B:45:0x00c6] A[DONT_GENERATE, DONT_INLINE]\l|r3 = r3 \| r4\lr8.restoreToCount(r0)\l}"];
Node_48 [shape=record,label="{48\:\ 0x00cd|PHI: r3 \l  PHI: (r3v2 boolean) = (r3v1 boolean), (r3v1 boolean), (r3v3 boolean) binds: [B:34:0x0092, B:36:0x009a, B:47:0x00c9] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_49 [shape=record,label="{49\:\ 0x00cf|if (r7.mBottomGlow == null) goto L_0x0121\l}"];
Node_50 [shape=record,label="{50\:\ 0x00d1}"];
Node_51 [shape=record,label="{51\:\ 0x00d7|if (r7.mBottomGlow.isFinished() != false) goto L_0x0121\l}"];
Node_52 [shape=record,label="{52\:\ 0x00d9|int r0 = r8.save()\lr8.rotate(180.0f)\l}"];
Node_53 [shape=record,label="{53\:\ 0x00e4|if (r7.mClipToPadding == false) goto L_0x0100\l}"];
Node_54 [shape=record,label="{54\:\ 0x00e6|r8.translate((float) ((\-getWidth()) + getPaddingRight()), (float) ((\-getHeight()) + getPaddingBottom()))\l}"];
Node_55 [shape=record,label="{55\:\ 0x0100|r8.translate((float) (\-getWidth()), (float) (\-getHeight()))\l}"];
Node_56 [shape=record,label="{56\:\ 0x010f}"];
Node_57 [shape=record,label="{57\:\ 0x0111|if (r7.mBottomGlow == null) goto L_0x011c\l}"];
Node_58 [shape=record,label="{58\:\ 0x0113}"];
Node_59 [shape=record,label="{59\:\ 0x0119|if (r7.mBottomGlow.draw(r8) == false) goto L_0x011c\l}"];
Node_60 [shape=record,label="{60\:\ 0x011b|r1 = true\l}"];
Node_61 [shape=record,label="{61\:\ 0x011c|PHI: r1 \l  PHI: (r1v5 boolean) = (r1v0 boolean), (r1v0 boolean), (r1v7 boolean) binds: [B:57:0x0111, B:59:0x0119, B:60:0x011b] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r1 \| r3\lr8.restoreToCount(r0)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0121|r1 = r3\l}"];
Node_63 [shape=record,label="{63\:\ 0x0122|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v4 boolean), (r1v6 boolean) binds: [B:62:0x0121, B:61:0x011c] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != false) goto L_0x0139\l}"];
Node_64 [shape=record,label="{64\:\ 0x0124}"];
Node_65 [shape=record,label="{65\:\ 0x0126|if (r7.mItemAnimator == null) goto L_0x0139\l}"];
Node_66 [shape=record,label="{66\:\ 0x0128}"];
Node_67 [shape=record,label="{67\:\ 0x012e|if (r7.mItemDecorations.size() \<= 0) goto L_0x0139\l}"];
Node_68 [shape=record,label="{68\:\ 0x0130}"];
Node_69 [shape=record,label="{69\:\ 0x0136|if (r7.mItemAnimator.isRunning() == false) goto L_0x0139\l}"];
Node_70 [shape=record,label="{70\:\ 0x0138|r1 = true\l}"];
Node_71 [shape=record,label="{71\:\ 0x0139|PHI: r1 \l  PHI: (r1v2 boolean) = (r1v1 boolean), (r1v1 boolean), (r1v1 boolean), (r1v1 boolean), (r1v3 boolean) binds: [B:63:0x0122, B:65:0x0126, B:67:0x012e, B:69:0x0136, B:70:0x0138] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L_?\l}"];
Node_72 [shape=record,label="{72\:\ 0x013b|android.support.p000v4.view.ViewCompat.postInvalidateOnAnimation(r7)\l}"];
Node_73 [shape=record,label="{73\:\ 0x001d|SYNTHETIC\l}"];
Node_74 [shape=record,label="{74\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_75 [shape=record,label="{75\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.RecyclerView.draw((r7v0 'this' android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r8v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_73;
Node_2 -> Node_1;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_18;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_18;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_33;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_33;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_48;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_48;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_46;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_62;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_62;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_56;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_61;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_60 -> Node_61;
Node_61 -> Node_63;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_71;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_71;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_71;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_71;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_75;
Node_72 -> Node_74;
Node_73 -> Node_3;
}

