digraph "CFG forandroid.support.v7.widget.RecyclerView.onGenericMotionEvent(Landroid\/view\/MotionEvent;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v7.widget.RecyclerView$LayoutManager) = (r5 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mLayout android.support.v7.widget.RecyclerView$LayoutManager \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r0 I:boolean) = (r5 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mLayoutFrozen boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000b \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: RETURN  (r1 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: INVOKE  (r0 I:int) = (r6 I:android.view.MotionEvent) android.view.MotionEvent.getAction():int type: VIRTUAL \l0x000f: CONST  (r2 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0077 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: INVOKE  (r0 I:int) = (r6 I:android.view.MotionEvent) android.view.MotionEvent.getSource():int type: VIRTUAL \l0x0017: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (2 ?[int, float, short, byte, char]) \l0x0019: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x003c \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: IGET  (r0 I:android.support.v7.widget.RecyclerView$LayoutManager) = (r5 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mLayout android.support.v7.widget.RecyclerView$LayoutManager \l0x001e: INVOKE  (r0 I:boolean) = (r0 I:android.support.v7.widget.RecyclerView$LayoutManager) android.support.v7.widget.RecyclerView.LayoutManager.canScrollVertically():boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002c \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: CONST  (r0 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l0x0026: INVOKE  (r0 I:float) = (r6 I:android.view.MotionEvent), (r0 I:int) android.view.MotionEvent.getAxisValue(int):float type: VIRTUAL \l0x002a: NEG  (r0 I:float) = (r0 I:float) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|0x002c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|0x002d: IGET  (r3 I:android.support.v7.widget.RecyclerView$LayoutManager) = (r5 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mLayout android.support.v7.widget.RecyclerView$LayoutManager \l0x002f: INVOKE  (r3 I:boolean) = (r3 I:android.support.v7.widget.RecyclerView$LayoutManager) android.support.v7.widget.RecyclerView.LayoutManager.canScrollHorizontally():boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|0x0033: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0061 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|0x0035: CONST  (r3 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0037: INVOKE  (r3 I:float) = (r6 I:android.view.MotionEvent), (r3 I:int) android.view.MotionEvent.getAxisValue(int):float type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x003c|0x003c: INVOKE  (r0 I:int) = (r6 I:android.view.MotionEvent) android.view.MotionEvent.getSource():int type: VIRTUAL \l0x0040: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (4194304(0x400000, float:5.877472E\-39) ?[int, float, short, byte, char])\l \l0x0042: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (r3 I:?[int, boolean, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0043|0x0043: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0060 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0045|0x0045: CONST  (r0 I:?[int, float, short, byte, char]) = (26 ?[int, float, short, byte, char]) \l0x0047: INVOKE  (r0 I:float) = (r6 I:android.view.MotionEvent), (r0 I:int) android.view.MotionEvent.getAxisValue(int):float type: VIRTUAL \l0x004b: IGET  (r3 I:android.support.v7.widget.RecyclerView$LayoutManager) = (r5 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mLayout android.support.v7.widget.RecyclerView$LayoutManager \l0x004d: INVOKE  (r3 I:boolean) = (r3 I:android.support.v7.widget.RecyclerView$LayoutManager) android.support.v7.widget.RecyclerView.LayoutManager.canScrollVertically():boolean type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0051|0x0051: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0055 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0053|0x0053: NEG  (r0 I:float) = (r0 I:float) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0055|0x0055: IGET  (r3 I:android.support.v7.widget.RecyclerView$LayoutManager) = (r5 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mLayout android.support.v7.widget.RecyclerView$LayoutManager \l0x0057: INVOKE  (r3 I:boolean) = (r3 I:android.support.v7.widget.RecyclerView$LayoutManager) android.support.v7.widget.RecyclerView.LayoutManager.canScrollHorizontally():boolean type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x005b|0x005b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0060 \l}"];
Node_24 [shape=record,label="{24\:\ 0x005d|0x005d: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x0060|0x0060: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x0061|0x0061: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_27 [shape=record,label="{27\:\ 0x0062|0x0062: CMP_L  (r4 I:int) = (r0 I:float), (r2 I:float) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0064|0x0064: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x006a \l}"];
Node_29 [shape=record,label="{29\:\ 0x0066|0x0066: CMP_L  (r2 I:int) = (r3 I:float), (r2 I:float) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0068|0x0068: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0077 \l}"];
Node_31 [shape=record,label="{31\:\ 0x006a|0x006a: IGET  (r2 I:float) = (r5 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mScaledHorizontalScrollFactor float \l0x006c: ARITH  (r3 I:float) = (r3 I:float) * (r2 I:float) \l0x006e: CAST  (r2 I:int) = (int) (r3 I:float) \l0x006f: IGET  (r3 I:float) = (r5 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.mScaledVerticalScrollFactor float \l0x0071: ARITH  (r0 I:float) = (r0 I:float) * (r3 I:float) \l0x0073: CAST  (r0 I:int) = (int) (r0 I:float) \l0x0074: INVOKE  \l  (r5 I:android.support.v7.widget.RecyclerView)\l  (r2 I:int)\l  (r0 I:int)\l  (r6 I:android.view.MotionEvent)\l android.support.v7.widget.RecyclerView.scrollByInternal(int, int, android.view.MotionEvent):boolean type: VIRTUAL \l}"];
Node_32 [shape=record,label="{32\:\ 0x0077|0x0077: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.v7.widget.RecyclerView.onGenericMotionEvent((r5 'this' I:android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r6 I:android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_32;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_26;
Node_16 -> Node_27;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_26;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
}

