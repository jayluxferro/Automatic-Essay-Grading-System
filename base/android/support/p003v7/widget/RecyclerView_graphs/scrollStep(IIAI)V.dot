digraph "CFG forandroid.support.v7.widget.RecyclerView.scrollStep(II[I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|startInterceptRequestLayout()\lonEnterLayoutOrScroll()\landroid.support.p000v4.p002os.TraceCompat.beginSection(TRACE_SCROLL_TAG)\lfillRemainingScrollValues(r4.mState)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|if (r5 == 0) goto L_0x001e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|int r5 = r4.mLayout.scrollHorizontallyBy(r5, r4.mRecycler, r4.mState)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|r5 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|PHI: r5 \l  PHI: (r5v1 int) = (r5v3 int), (r5v4 int) binds: [B:3:0x001e, B:2:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 == 0) goto L_0x002c\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|int r6 = r4.mLayout.scrollVerticallyBy(r6, r4.mRecycler, r4.mState)\l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|r6 = 0\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|PHI: r6 \l  PHI: (r6v1 int) = (r6v2 int), (r6v3 int) binds: [B:6:0x002c, B:5:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|android.support.p000v4.p002os.TraceCompat.endSection()\lrepositionShadowingViews()\lonExitLayoutOrScroll()\lstopInterceptRequestLayout(false)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|if (r7 == null) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x003b|r7[0] = r5\lr7[1] = r6\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void android.support.v7.widget.RecyclerView.scrollStep((r4v0 'this' android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , , Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
}

