digraph "CFG forandroid.support.v7.widget.RecyclerView.scrollBy(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3.mLayout != null) goto L_0x000c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|android.util.Log.e(TAG, \"Cannot scroll without a LayoutManager set. Call setLayoutManager with a non\-null argument.\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r3.mLayoutFrozen == false) goto L_0x0011\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|boolean r0 = r3.mLayout.canScrollHorizontally()\lboolean r1 = r3.mLayout.canScrollVertically()\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|if (r0 != false) goto L_0x0021\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|if (r1 == false) goto L_?\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021}"];
Node_11 [shape=record,label="{11\:\ 0x0022|if (r0 == false) goto L_0x0025\l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|r4 = 0\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|PHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:11:0x0022, B:12:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L_0x0029\l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|r5 = 0\l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|PHI: r5 \l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:13:0x0026, B:14:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|scrollByInternal(r4, r5, (android.view.MotionEvent) null)\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.RecyclerView.scrollBy((r3v0 'this' android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16;
}

