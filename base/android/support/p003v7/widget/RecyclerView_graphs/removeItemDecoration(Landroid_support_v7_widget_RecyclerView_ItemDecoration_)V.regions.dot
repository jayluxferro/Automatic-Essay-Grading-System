digraph "CFG forandroid.support.v7.widget.RecyclerView.removeItemDecoration(Landroid\/support\/v7\/widget\/RecyclerView$ItemDecoration;)V" {
subgraph cluster_Region_995918578 {
label = "R(4:(1:2)|3|(1:9)|10)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1469975339 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.mLayout != null) goto L_0x0004\l}"];
subgraph cluster_Region_147547698 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|r2.mLayout.assertNotInLayoutOrScroll(\"Cannot remove item decoration during a scroll  or layout\")\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x000b|r2.mItemDecorations.remove(r3)\l}"];
subgraph cluster_IfRegion_1343024853 {
label = "IF [B:4:0x0016] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0016|if (r2.mItemDecorations.isEmpty() == true) goto L_0x0018\l}"];
subgraph cluster_Region_261668148 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0022|PHI: r3 \l  PHI: (r3v4 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|setWillNotDraw(getOverScrollMode() == 2)\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x0025|markItemDecorInsetsDirty()\lrequestLayout()\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0018}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001d}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001f}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0021}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x002b}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.RecyclerView.removeItemDecoration((r2v0 'this' android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r3v0 android.support.v7.widget.RecyclerView$ItemDecoration A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_0 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
}

