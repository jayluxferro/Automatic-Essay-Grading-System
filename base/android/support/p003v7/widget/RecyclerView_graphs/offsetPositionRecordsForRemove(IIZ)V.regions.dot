digraph "CFG forandroid.support.v7.widget.RecyclerView.offsetPositionRecordsForRemove(IIZ)V" {
subgraph cluster_Region_326637942 {
label = "R(3:0|(3:2|(1:(1:8)(1:(1:11)(0)))|12)|13)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r8 + r9\lint int r1 = r7.mChildHelper.getUnfilteredChildCount()\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_281998977 {
label = "LOOP:0: (3:2|(1:(1:8)(1:(1:11)(0)))|12)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0009|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:12:0x0039] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0009\-\>B:12:0x0039\l|if (r2 \< r1) goto L_0x000b\l}"];
subgraph cluster_Region_1430456435 {
label = "R(3:2|(1:(1:8)(1:(1:11)(0)))|12)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000b|android.support.v7.widget.RecyclerView$ViewHolder android.support.p003v7.widget.RecyclerView.ViewHolder r3 = getChildViewHolderInt(r7.mChildHelper.getUnfilteredChildAt(r2))\l}"];
subgraph cluster_IfRegion_111351812 {
label = "IF [B:3:0x0015, B:5:0x001b] THEN: R(1:(1:8)(1:(1:11)(0))) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0015|ADDED_TO_REGION\l|if (r3 != null) goto L_0x0017\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|ADDED_TO_REGION\l|if (r3.shouldIgnore() == false) goto L_0x001d\l}"];
subgraph cluster_Region_23970696 {
label = "R(1:(1:8)(1:(1:11)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_483492077 {
label = "IF [B:7:0x0020] THEN: R(1:8) ELSE: R(1:(1:11)(0))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0020|if (r3.mPosition \>= r0) goto L_0x0022\l}"];
subgraph cluster_Region_384116437 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0022|r3.offsetPosition(\-r9, r10)\lr7.mState.mStructureChanged = true\l}"];
}
subgraph cluster_Region_1626982560 {
label = "R(1:(1:11)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1912123510 {
label = "IF [B:10:0x002d] THEN: R(1:11) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002d|if (r3.mPosition \>= r8) goto L_0x002f\l}"];
subgraph cluster_Region_1018511018 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002f|r3.flagRemovedAndOffsetPosition(r8 \- 1, \-r9, r10)\lr7.mState.mStructureChanged = true\l}"];
}
subgraph cluster_Region_204200787 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
Node_12 [shape=record,label="{12\:\ 0x0039|LOOP_END\lLOOP:0: B:1:0x0009\-\>B:12:0x0039\l|r2++\l}"];
}
}
Node_13 [shape=record,label="{13\:\ 0x003c|r7.mRecycler.offsetPositionRecordsForRemove(r8, r9, r10)\lrequestLayout()\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0017}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001d}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002b}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0044}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x003c|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0039|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0039|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0039|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0039|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0039|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void android.support.v7.widget.RecyclerView.offsetPositionRecordsForRemove((r7v0 'this' android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_15[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_17[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_18[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_19;
Node_10 -> Node_11;
Node_10 -> Node_20[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_1;
Node_13 -> Node_14;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_15 -> Node_13;
Node_16 -> Node_12;
Node_17 -> Node_12;
Node_18 -> Node_12;
Node_19 -> Node_12;
Node_20 -> Node_12;
}

