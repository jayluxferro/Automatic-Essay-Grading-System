digraph "CFG forandroid.support.v7.widget.RecyclerView.getChildItemId(Landroid\/view\/View;)J" {
subgraph cluster_Region_1595544944 {
label = "R(1:(2:(1:9)|(1:8))) | DECL_VAR: android.support.v7.widget.RecyclerView$ViewHolder null\l";
node [shape=record,color=blue];
subgraph cluster_Region_874101499 {
label = "R(2:(1:9)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1253701669 {
label = "IF [B:1:0x0004, B:3:0x000c, B:5:0x0013] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r3.mAdapter == null) goto L_0x001a\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|ADDED_TO_REGION\l|if (r3.mAdapter.hasStableIds() == false) goto L_0x001a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|ADDED_TO_REGION\l|if ((r4 = getChildViewHolderInt(r4)) == null) goto L_?\l}"];
subgraph cluster_Region_1377960421 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
}
}
subgraph cluster_Region_1562132292 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r4.getItemId()\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000f}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0015}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001a|RETURN\lADDED_TO_REGION\l|return \-1\l}"];
MethodNode[shape=record,label="{public long android.support.v7.widget.RecyclerView.getChildItemId((r3v0 'this' android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r4v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_8;
}

