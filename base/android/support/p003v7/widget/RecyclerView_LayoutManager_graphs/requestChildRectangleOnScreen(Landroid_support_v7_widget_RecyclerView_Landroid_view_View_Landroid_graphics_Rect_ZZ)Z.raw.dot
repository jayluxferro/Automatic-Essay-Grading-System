digraph "CFG forandroid.support.v7.widget.RecyclerView.LayoutManager.requestChildRectangleOnScreen(Landroid\/support\/v7\/widget\/RecyclerView;Landroid\/view\/View;Landroid\/graphics\/Rect;ZZ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:int[]) = \l  (r2 I:android.support.v7.widget.RecyclerView$LayoutManager)\l  (r3 I:android.support.v7.widget.RecyclerView)\l  (r4 I:android.view.View)\l  (r5 I:android.graphics.Rect)\l  (r6 I:boolean)\l android.support.v7.widget.RecyclerView.LayoutManager.getChildRectangleOnScreenScrollAmount(android.support.v7.widget.RecyclerView, android.view.View, android.graphics.Rect, boolean):int[] type: DIRECT \l0x0004: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: AGET  (r0 I:?[int, float]) = (r4 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l0x0007: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0008: AGET  (r4 I:?[int, float]) = (r4 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r7 I:boolean) = \l  (r2 I:android.support.v7.widget.RecyclerView$LayoutManager)\l  (r3 I:android.support.v7.widget.RecyclerView)\l  (r0 I:int)\l  (r4 I:int)\l android.support.v7.widget.RecyclerView.LayoutManager.isFocusedChildVisibleAfterScrolling(android.support.v7.widget.RecyclerView, int, int):boolean type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0017 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: RETURN  (r5 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001e \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: INVOKE  \l  (r3 I:android.support.v7.widget.RecyclerView)\l  (r0 I:int)\l  (r4 I:int)\l android.support.v7.widget.RecyclerView.scrollBy(int, int):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: INVOKE  \l  (r3 I:android.support.v7.widget.RecyclerView)\l  (r0 I:int)\l  (r4 I:int)\l android.support.v7.widget.RecyclerView.smoothScrollBy(int, int):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.v7.widget.RecyclerView.LayoutManager.requestChildRectangleOnScreen((r2 'this' I:android.support.v7.widget.RecyclerView$LayoutManager A[IMMUTABLE_TYPE, THIS]), (r3 I:android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], , \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_7;
Node_5 -> Node_8[style=dashed];
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
}

