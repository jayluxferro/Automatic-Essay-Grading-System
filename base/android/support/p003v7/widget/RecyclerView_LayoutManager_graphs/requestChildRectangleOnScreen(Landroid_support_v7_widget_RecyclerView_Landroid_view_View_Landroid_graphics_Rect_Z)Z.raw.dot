digraph "CFG forandroid.support.v7.widget.RecyclerView.LayoutManager.requestChildRectangleOnScreen(Landroid\/support\/v7\/widget\/RecyclerView;Landroid\/view\/View;Landroid\/graphics\/Rect;Z)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0003: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0004: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0005: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: INVOKE  (r7 I:boolean) = \l  (r0 I:android.support.v7.widget.RecyclerView$LayoutManager)\l  (r1 I:android.support.v7.widget.RecyclerView)\l  (r2 I:android.view.View)\l  (r3 I:android.graphics.Rect)\l  (r4 I:boolean)\l  (r5 I:boolean)\l android.support.v7.widget.RecyclerView.LayoutManager.requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView, android.view.View, android.graphics.Rect, boolean, boolean):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: RETURN  (r7 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.v7.widget.RecyclerView.LayoutManager.requestChildRectangleOnScreen((r6 'this' I:android.support.v7.widget.RecyclerView$LayoutManager A[IMMUTABLE_TYPE, THIS]), (r7 I:android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

