digraph "CFG forandroid.support.v7.widget.RecyclerView.LayoutManager.isFocusedChildVisibleAfterScrolling(Landroid\/support\/v7\/widget\/RecyclerView;II)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.view.View r7 = r7.getFocusedChild()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r7 != null) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return false\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|int r1 = getPaddingLeft()\lint r2 = getPaddingTop()\lint r3 = getWidth() \- getPaddingRight()\lint r4 = getHeight() \- getPaddingBottom()\landroid.graphics.Rect r5 = r6.mRecyclerView.mTempRect\lgetDecoratedBoundsWithMargins(r7, r5)\l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|if ((r5.left \- r8) \>= r3) goto L_0x0040\l}"];
Node_5 [shape=record,label="{5\:\ 0x002e}"];
Node_6 [shape=record,label="{6\:\ 0x0031|if ((r5.right \- r8) \<= r1) goto L_0x0040\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033}"];
Node_8 [shape=record,label="{8\:\ 0x0036|if ((r5.top \- r9) \>= r4) goto L_0x0040\l}"];
Node_9 [shape=record,label="{9\:\ 0x0038}"];
Node_10 [shape=record,label="{10\:\ 0x003b|if ((r5.bottom \- r9) \> r2) goto L_0x003e\l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|RETURN\l|return true\l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{private boolean android.support.v7.widget.RecyclerView.LayoutManager.isFocusedChildVisibleAfterScrolling((r6v0 'this' android.support.v7.widget.RecyclerView$LayoutManager A[IMMUTABLE_TYPE, THIS]), (r7v0 android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
}

