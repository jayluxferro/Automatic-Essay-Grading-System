digraph "CFG forandroid.support.v7.widget.RecyclerView.LayoutManager.layoutDecorated(Landroid\/view\/View;IIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.view.ViewGroup$LayoutParams) = (r3 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0004: CHECK_CAST  (r0 I:android.support.v7.widget.RecyclerView$LayoutParams) = (android.support.v7.widget.RecyclerView$LayoutParams) (r0 I:?[OBJECT, ARRAY]) \l0x0006: IGET  (r0 I:android.graphics.Rect) = (r0 I:android.support.v7.widget.RecyclerView$LayoutParams) android.support.v7.widget.RecyclerView.LayoutParams.mDecorInsets android.graphics.Rect \l0x0008: IGET  (r1 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.left int \l0x000a: ARITH  (r4 I:int) = (r4 I:int) + (r1 I:int) \l0x000b: IGET  (r1 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.top int \l0x000d: ARITH  (r5 I:int) = (r5 I:int) + (r1 I:int) \l0x000e: IGET  (r1 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.right int \l0x0010: ARITH  (r6 I:int) = (r6 I:int) \- (r1 I:int) \l0x0011: IGET  (r0 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x0013: ARITH  (r7 I:int) = (r7 I:int) \- (r0 I:int) \l0x0014: INVOKE  \l  (r3 I:android.view.View)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l android.view.View.layout(int, int, int, int):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.RecyclerView.LayoutManager.layoutDecorated((r2 'this' I:android.support.v7.widget.RecyclerView$LayoutManager A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], , , , \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

