digraph "CFG forandroid.support.v7.widget.RecyclerView.LayoutManager.getChildMeasureSpec(IIIZ)I" {
subgraph cluster_Region_1678692434 {
label = "R(5:0|(1:(3:(3:(2:11|13)|5|13)|4|13))(0)|3|4|13)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r1 = r1 \- r2\lint r2 = 0\lint int r1 = java.lang.Math.max(0, r1)\l}"];
subgraph cluster_IfRegion_1589950648 {
label = "IF [B:1:0x0008] THEN: R(1:(3:(3:(2:11|13)|5|13)|4|13)) ELSE: R(0)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r4 != true) goto L_0x0012\l}"];
subgraph cluster_Region_1246684373 {
label = "R(1:(3:(3:(2:11|13)|5|13)|4|13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_940462529 {
label = "IF [B:6:0x0012] THEN: R(3:(3:(2:11|13)|5|13)|4|13) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0012|if (r3 \< 0) goto L_0x0015\l}"];
subgraph cluster_Region_780221505 {
label = "R(3:(3:(2:11|13)|5|13)|4|13)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_151327694 {
label = "IF [B:8:0x0016] THEN: R(3:(2:11|13)|5|13) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0016|if (r3 != \-1) goto L_0x0019\l}"];
subgraph cluster_Region_781095210 {
label = "R(3:(2:11|13)|5|13)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1929345838 {
label = "IF [B:10:0x001a] THEN: R(2:11|13) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001a|if (r3 == \-2) goto L_0x001c\l}"];
subgraph cluster_Region_1309446632 {
label = "R(2:11|13)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001c|r2 = Integer.MIN_VALUE\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|RETURN\l|return android.view.View.MeasureSpec.makeMeasureSpec(r1, r2)\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0010|r1 = 0\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|RETURN\l|return android.view.View.MeasureSpec.makeMeasureSpec(r1, r2)\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x000d|PHI: r1 \l  PHI: (r1v6 int) = (r1v2 int), (r1v7 int) binds: [B:8:0x0016, B:3:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|r2 = 1073741824\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|RETURN\l|return android.view.View.MeasureSpec.makeMeasureSpec(r1, r2)\l}"];
}
}
}
subgraph cluster_Region_1328173544 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_3 [shape=record,label="{3\:\ 0x000c|r1 = r3\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|PHI: r1 \l  PHI: (r1v6 int) = (r1v2 int), (r1v7 int) binds: [B:8:0x0016, B:3:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|r2 = 1073741824\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|RETURN\l|return android.view.View.MeasureSpec.makeMeasureSpec(r1, r2)\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000a|if (r3 \>= 0) goto L_0x000c\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0015}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0019}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x001e|PHI: r1 r2 \l  PHI: (r1v3 int) = (r1v2 int), (r1v5 int), (r1v6 int) binds: [B:11:0x001c, B:5:0x0010, B:4:0x000d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 int) = (r2v3 int), (r2v1 int), (r2v4 int) binds: [B:11:0x001c, B:5:0x0010, B:4:0x000d] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public static int android.support.v7.widget.RecyclerView.LayoutManager.getChildMeasureSpec((r1v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCode restructure failed: missing block: B:2:0x000a, code lost:\l    if (r3 \>= 0) goto L_0x000c;\l\lAnnotation[RUNTIME, java.lang.Deprecated, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_3[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_4[style=dashed];
Node_10 -> Node_5[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_5 -> Node_12;
Node_4 -> Node_12;
Node_3 -> Node_4;
Node_4 -> Node_12;
Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_12 -> Node_13;
}

