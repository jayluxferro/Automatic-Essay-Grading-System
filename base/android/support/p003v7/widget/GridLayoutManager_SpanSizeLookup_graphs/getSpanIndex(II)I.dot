digraph "CFG forandroid.support.v7.widget.GridLayoutManager.SpanSizeLookup.getSpanIndex(II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = getSpanSize(r6)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r0 != r7) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r5.mCacheSpanIndices == false) goto L_0x0028\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c}"];
Node_6 [shape=record,label="{6\:\ 0x0012|if (r5.mSpanIndexCache.size() \<= 0) goto L_0x0028\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|int r2 = findReferenceIndexFromCache(r6)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|if (r2 \< 0) goto L_0x0028\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|int r3 = r5.mSpanIndexCache.get(r2) + getSpanSize(r2)\lint r2 = r2 + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|r2 = 0\lr3 = 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|LOOP_START\lPHI: r2 r3 \l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int) binds: [B:26:0x002a, B:17:0x0038] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v3 int) binds: [B:26:0x002a, B:17:0x0038] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:11:0x002a\-\>B:17:0x0038\l|if (r2 \>= r6) goto L_0x003b\l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|int r4 = getSpanSize(r2)\lint r3 = r3 + r4\l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|if (r3 != r7) goto L_0x0035\l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|r3 = 0\l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|if (r3 \<= r7) goto L_0x0038\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|r3 = r4\l}"];
Node_17 [shape=record,label="{17\:\ 0x0038|LOOP_END\lPHI: r3 \l  PHI: (r3v3 int) = (r3v2 int), (r3v4 int), (r3v5 int) binds: [B:25:0x0038, B:23:0x0038, B:24:0x0038] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:11:0x002a\-\>B:17:0x0038\l|int r2 = r2 + 1\l}"];
Node_18 [shape=record,label="{18\:\ 0x003b}"];
Node_19 [shape=record,label="{19\:\ 0x003c|if ((r0 + r3) \> r7) goto L_0x003f\l}"];
Node_20 [shape=record,label="{20\:\ 0x003e|RETURN\l|return r3\l}"];
Node_21 [shape=record,label="{21\:\ 0x003f|RETURN\l|return 0\l}"];
Node_22 [shape=record,label="{22\:\ 0x003b|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0038|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0038|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0038|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x002a|SYNTHETIC\lPHI: r2 r3 \l  PHI: (r2v1 int) = (r2v4 int), (r2v8 int) binds: [B:10:0x0028, B:9:0x001a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v0 int) = (r3v6 int), (r3v9 int) binds: [B:10:0x0028, B:9:0x001a] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public int android.support.v7.widget.GridLayoutManager.SpanSizeLookup.getSpanIndex((r5v0 'this' android.support.v7.widget.GridLayoutManager$SpanSizeLookup A[IMMUTABLE_TYPE, THIS]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_26;
Node_10 -> Node_26;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_22;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_24;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_25;
Node_16 -> Node_23;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_22 -> Node_18;
Node_23 -> Node_17;
Node_24 -> Node_17;
Node_25 -> Node_17;
Node_26 -> Node_11;
}

