digraph "CFG forandroid.support.v7.widget.GridLayoutManager.SpanSizeLookup.getSpanGroupIndex(II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = \l  (r6 I:android.support.v7.widget.GridLayoutManager$SpanSizeLookup)\l  (r7 I:int)\l android.support.v7.widget.GridLayoutManager.SpanSizeLookup.getSpanSize(int):int type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r2 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:8:0x001d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  (r5 I:int) = \l  (r6 I:android.support.v7.widget.GridLayoutManager$SpanSizeLookup)\l  (r2 I:int)\l android.support.v7.widget.GridLayoutManager.SpanSizeLookup.getSpanSize(int):int type: VIRTUAL \l0x000e: ARITH  (r3 I:int) = (r3 I:int) + (r5 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l0x0013: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r3 I:?[int, byte, short, char]) \<= (r8 I:?[int, byte, short, char])  \-\> B:7:0x001a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l0x0019: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: ARITH  (r3 I:int) = (r3 I:int) + (r0 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: IF  (r3 I:?[int, byte, short, char]) \<= (r8 I:?[int, byte, short, char])  \-\> B:11:0x0022 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|0x0020: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: RETURN  (r4 I:int) \l}"];
MethodNode[shape=record,label="{public int android.support.v7.widget.GridLayoutManager.SpanSizeLookup.getSpanGroupIndex((r6 'this' I:android.support.v7.widget.GridLayoutManager$SpanSizeLookup A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
}

