digraph "CFG forandroid.support.v7.widget.GridLayoutManager.SpanSizeLookup.getSpanIndex(II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = \l  (r5 I:android.support.v7.widget.GridLayoutManager$SpanSizeLookup)\l  (r6 I:int)\l android.support.v7.widget.GridLayoutManager.SpanSizeLookup.getSpanSize(int):int type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r1 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r2 I:boolean) = \l  (r5 I:android.support.v7.widget.GridLayoutManager$SpanSizeLookup)\l android.support.v7.widget.GridLayoutManager.SpanSizeLookup.mCacheSpanIndices boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IGET  (r2 I:android.util.SparseIntArray) = \l  (r5 I:android.support.v7.widget.GridLayoutManager$SpanSizeLookup)\l android.support.v7.widget.GridLayoutManager.SpanSizeLookup.mSpanIndexCache android.util.SparseIntArray \l0x000e: INVOKE  (r2 I:int) = (r2 I:android.util.SparseIntArray) android.util.SparseIntArray.size():int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: INVOKE  (r2 I:int) = \l  (r5 I:android.support.v7.widget.GridLayoutManager$SpanSizeLookup)\l  (r6 I:int)\l android.support.v7.widget.GridLayoutManager.SpanSizeLookup.findReferenceIndexFromCache(int):int type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IF  (r2 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: IGET  (r3 I:android.util.SparseIntArray) = \l  (r5 I:android.support.v7.widget.GridLayoutManager$SpanSizeLookup)\l android.support.v7.widget.GridLayoutManager.SpanSizeLookup.mSpanIndexCache android.util.SparseIntArray \l0x001c: INVOKE  (r3 I:int) = (r3 I:android.util.SparseIntArray), (r2 I:int) android.util.SparseIntArray.get(int):int type: VIRTUAL \l0x0020: INVOKE  (r4 I:int) = \l  (r5 I:android.support.v7.widget.GridLayoutManager$SpanSizeLookup)\l  (r2 I:int)\l android.support.v7.widget.GridLayoutManager.SpanSizeLookup.getSpanSize(int):int type: VIRTUAL \l0x0024: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x0025: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0029: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: IF  (r2 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:18:0x003b \l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|0x002c: INVOKE  (r4 I:int) = \l  (r5 I:android.support.v7.widget.GridLayoutManager$SpanSizeLookup)\l  (r2 I:int)\l android.support.v7.widget.GridLayoutManager.SpanSizeLookup.getSpanSize(int):int type: VIRTUAL \l0x0030: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|0x0031: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0035 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|0x0035: IF  (r3 I:?[int, byte, short, char]) \<= (r7 I:?[int, byte, short, char])  \-\> B:17:0x0038 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|0x0037: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0038|0x0038: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x003b|0x003b: ARITH  (r0 I:int) = (r0 I:int) + (r3 I:int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x003c|0x003c: IF  (r0 I:?[int, byte, short, char]) \> (r7 I:?[int, byte, short, char])  \-\> B:21:0x003f \l}"];
Node_20 [shape=record,label="{20\:\ 0x003e|0x003e: RETURN  (r3 I:int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x003f|0x003f: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{public int android.support.v7.widget.GridLayoutManager.SpanSizeLookup.getSpanIndex((r5 'this' I:android.support.v7.widget.GridLayoutManager$SpanSizeLookup A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_17;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
}

