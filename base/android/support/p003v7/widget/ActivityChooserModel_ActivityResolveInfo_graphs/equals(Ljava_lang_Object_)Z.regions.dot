digraph "CFG forandroid.support.v7.widget.ActivityChooserModel.ActivityResolveInfo.equals(Ljava\/lang\/Object;)Z" {
subgraph cluster_Region_2146049537 {
label = "R(1:(2:(1:2)|(1:4)))";
node [shape=record,color=blue];
subgraph cluster_Region_1335183457 {
label = "R(2:(1:2)|(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2129329527 {
label = "IF [B:1:0x0001] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r4 == r5) goto L_0x0003\l}"];
subgraph cluster_Region_1630608366 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1317276639 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|RETURN\l|return r5 != null && getClass() == r5.getClass() && java.lang.Float.floatToIntBits(r4.weight) == java.lang.Float.floatToIntBits(((android.support.p003v7.widget.ActivityChooserModel.ActivityResolveInfo) r5).weight)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0004}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0007|RETURN\lADDED_TO_REGION\l|return false\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0008}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0010|REMOVE\lADDED_TO_REGION\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0012|RETURN\lADDED_TO_REGION\l|return false\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0013}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0021|REMOVE\lADDED_TO_REGION\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0023}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0024}"];
MethodNode[shape=record,label="{public boolean android.support.v7.widget.ActivityChooserModel.ActivityResolveInfo.equals((r4v0 'this' android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12;
}

