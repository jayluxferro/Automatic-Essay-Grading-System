digraph "CFG forandroid.support.v7.widget.AppCompatTextViewAutoSizeHelper.getTextViewMethod(Ljava\/lang\/String;)Ljava\/lang\/reflect\/Method;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: SGET  (r0 I:java.util.concurrent.ConcurrentHashMap\<java.lang.String, java.lang.reflect.Method\>) =  android.support.v7.widget.AppCompatTextViewAutoSizeHelper.sTextViewMethodByNameCache java.util.concurrent.ConcurrentHashMap A[Catch:\{ Exception \-\> 0x001f \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:java.util.concurrent.ConcurrentHashMap)\l  (r5 I:java.lang.Object)\l java.util.concurrent.ConcurrentHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ Exception \-\> 0x001f \}]\l0x0006: CHECK_CAST  (r0 I:java.lang.reflect.Method) = (java.lang.reflect.Method) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x001f \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001e A[Catch:\{ Exception \-\> 0x001f \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: CONST_CLASS  (r0 I:java.lang.Class\<android.widget.TextView\>) =  android.widget.TextView.class A[Catch:\{ Exception \-\> 0x001f \}]\l0x000c: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x001f \}]\l0x000d: NEW_ARRAY  (r1 I:java.lang.Class[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ Exception \-\> 0x001f \}]\l0x000f: INVOKE  (r0 I:java.lang.reflect.Method) = \l  (r0 I:java.lang.Class)\l  (r5 I:java.lang.String)\l  (r1 I:java.lang.Class[])\l java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method type: VIRTUAL A[Catch:\{ Exception \-\> 0x001f \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001e A[Catch:\{ Exception \-\> 0x001f \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x001f \}]\l0x0016: INVOKE  (r0 I:java.lang.reflect.Method), (r1 I:boolean) java.lang.reflect.Method.setAccessible(boolean):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x001f \}]\l0x0019: SGET  (r1 I:java.util.concurrent.ConcurrentHashMap\<java.lang.String, java.lang.reflect.Method\>) =  android.support.v7.widget.AppCompatTextViewAutoSizeHelper.sTextViewMethodByNameCache java.util.concurrent.ConcurrentHashMap A[Catch:\{ Exception \-\> 0x001f \}]\l0x001b: INVOKE  \l  (r1 I:java.util.concurrent.ConcurrentHashMap)\l  (r5 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l java.util.concurrent.ConcurrentHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ Exception \-\> 0x001f \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: RETURN  (r0 I:java.lang.reflect.Method) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|ExcHandler: Exception null\lSplitter:B:0:0x0000\l|0x001f: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: CONST_STR  (r1 I:java.lang.String) =  \"ACTVAutoSizeHelper\" \l0x0022: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0024: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0027: CONST_STR  (r3 I:java.lang.String) =  \"Failed to retrieve TextView#\" \l0x0029: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002c: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002f: CONST_STR  (r5 I:java.lang.String) =  \"() method\" \l0x0031: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0034: INVOKE  (r5 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0038: INVOKE  \l  (r1 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l0x003b: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x003c|0x003c: RETURN  (r5 I:java.lang.reflect.Method) \l}"];
MethodNode[shape=record,label="{private java.lang.reflect.Method android.support.v7.widget.AppCompatTextViewAutoSizeHelper.getTextViewMethod((r4 'this' I:android.support.v7.widget.AppCompatTextViewAutoSizeHelper A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_7;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

