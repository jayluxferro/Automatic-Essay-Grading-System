digraph "CFG forandroid.support.v7.widget.AppCompatTextViewAutoSizeHelper.createStaticLayoutForMeasuring(Ljava\/lang\/CharSequence;Landroid\/text\/Layout$Alignment;II)Landroid\/text\/StaticLayout;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.text.TextDirectionHeuristic r0 = (android.text.TextDirectionHeuristic) invokeAndReturnWithDefault(r4.mTextView, \"getTextDirectionHeuristic\", android.text.TextDirectionHeuristics.FIRSTSTRONG_LTR)\landroid.text.StaticLayout$Builder r5 = android.text.StaticLayout.Builder.obtain(r5, 0, r5.length(), r4.mTempTextPaint, r7).setAlignment(r6).setLineSpacing(r4.mTextView.getLineSpacingExtra(), r4.mTextView.getLineSpacingMultiplier()).setIncludePad(r4.mTextView.getIncludeFontPadding()).setBreakStrategy(r4.mTextView.getBreakStrategy()).setHyphenationFrequency(r4.mTextView.getHyphenationFrequency())\l}"];
Node_1 [shape=record,label="{1\:\ 0x004a|if (r8 != \-1) goto L_0x004f\l}"];
Node_2 [shape=record,label="{2\:\ 0x004c|r8 = Integer.MAX_VALUE\l}"];
Node_3 [shape=record,label="{3\:\ 0x004f|PHI: r8 \l  PHI: (r8v1 int) = (r8v0 int), (r8v2 int) binds: [B:1:0x004a, B:2:0x004c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x005b|RETURN\l|return r5.setMaxLines(r8).setTextDirection(r0).build()\l}"];
MethodNode[shape=record,label="{private android.text.StaticLayout android.support.v7.widget.AppCompatTextViewAutoSizeHelper.createStaticLayoutForMeasuring((r4v0 'this' android.support.v7.widget.AppCompatTextViewAutoSizeHelper A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 android.text.Layout$Alignment A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.RequiresApi, \{value=23\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

