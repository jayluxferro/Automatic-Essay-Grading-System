digraph "CFG forandroid.support.v7.widget.AppCompatTextViewAutoSizeHelper.suggestedSizeFitsInSpace(ILandroid\/graphics\/RectF;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.CharSequence r0 = r5.mTextView.getText()\landroid.text.method.TransformationMethod r1 = r5.mTextView.getTransformationMethod()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if (r1 == null) goto L_0x0017\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|java.lang.CharSequence r1 = r1.getTransformation(r0, r5.mTextView)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|if (r1 == null) goto L_0x0017\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|r0 = r1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|PHI: r0 \l  PHI: (r0v2 java.lang.CharSequence) = (r0v1 java.lang.CharSequence), (r0v1 java.lang.CharSequence), (r0v4 java.lang.CharSequence) binds: [B:1:0x000c, B:3:0x0014, B:4:0x0016] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|if (android.os.Build.VERSION.SDK_INT \< 16) goto L_0x0025\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|int r1 = r5.mTextView.getMaxLines()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|r1 = \-1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|PHI: r1 \l  PHI: (r1v3 int) = (r1v7 int), (r1v9 int) binds: [B:8:0x0025, B:7:0x001e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|if (r5.mTempTextPaint != null) goto L_0x0032\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|r5.mTempTextPaint = new android.text.TextPaint()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|r5.mTempTextPaint.reset()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|r5.mTempTextPaint.set(r5.mTextView.getPaint())\lr5.mTempTextPaint.setTextSize((float) r6)\landroid.text.Layout$Alignment r6 = (android.text.Layout.Alignment) invokeAndReturnWithDefault(r5.mTextView, \"getLayoutAlignment\", android.text.Layout.Alignment.ALIGN_NORMAL)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0058|if (android.os.Build.VERSION.SDK_INT \< 23) goto L_0x0065\l}"];
Node_15 [shape=record,label="{15\:\ 0x005a|android.text.StaticLayout r6 = createStaticLayoutForMeasuring(r0, r6, java.lang.Math.round(r7.right), r1)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0065|android.text.StaticLayout r6 = createStaticLayoutForMeasuringPre23(r0, r6, java.lang.Math.round(r7.right))\l}"];
Node_17 [shape=record,label="{17\:\ 0x006f|PHI: r6 \l  PHI: (r6v5 android.text.StaticLayout) = (r6v9 android.text.StaticLayout), (r6v10 android.text.StaticLayout) binds: [B:16:0x0065, B:15:0x005a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0071|if (r1 == \-1) goto L_0x0089\l}"];
Node_19 [shape=record,label="{19\:\ 0x0073}"];
Node_20 [shape=record,label="{20\:\ 0x0077|if (r6.getLineCount() \> r1) goto L_0x0088\l}"];
Node_21 [shape=record,label="{21\:\ 0x0079}"];
Node_22 [shape=record,label="{22\:\ 0x0086|if (r6.getLineEnd(r6.getLineCount() \- 1) == r0.length()) goto L_0x0089\l}"];
Node_23 [shape=record,label="{23\:\ 0x0088|RETURN\l|return false\l}"];
Node_24 [shape=record,label="{24\:\ 0x0089}"];
Node_25 [shape=record,label="{25\:\ 0x0092|if ((((float) r6.getHeight()) \> r7.bottom ? 1 : (((float) r6.getHeight()) == r7.bottom ? 0 : \-1)) \<= 0) goto L_0x0095\l}"];
Node_26 [shape=record,label="{26\:\ 0x0094|RETURN\l|return false\l}"];
Node_27 [shape=record,label="{27\:\ 0x0095|RETURN\l|return true\l}"];
MethodNode[shape=record,label="{private boolean android.support.v7.widget.AppCompatTextViewAutoSizeHelper.suggestedSizeFitsInSpace((r5v0 'this' android.support.v7.widget.AppCompatTextViewAutoSizeHelper A[IMMUTABLE_TYPE, THIS]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 android.graphics.RectF A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
}

