digraph "CFG forandroid.support.v7.widget.AppCompatTextViewAutoSizeHelper.setupAutoSizeUniformPresetSizesConfiguration()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int[]) = \l  (r4 I:android.support.v7.widget.AppCompatTextViewAutoSizeHelper)\l android.support.v7.widget.AppCompatTextViewAutoSizeHelper.mAutoSizeTextSizesInPx int[] \l0x0002: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l0x0003: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IPUT  \l  (r3 I:boolean)\l  (r4 I:android.support.v7.widget.AppCompatTextViewAutoSizeHelper)\l android.support.v7.widget.AppCompatTextViewAutoSizeHelper.mHasPresetAutoSizeValues boolean \l0x000c: IGET  (r3 I:boolean) = \l  (r4 I:android.support.v7.widget.AppCompatTextViewAutoSizeHelper)\l android.support.v7.widget.AppCompatTextViewAutoSizeHelper.mHasPresetAutoSizeValues boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0025 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IPUT  \l  (r2 I:int)\l  (r4 I:android.support.v7.widget.AppCompatTextViewAutoSizeHelper)\l android.support.v7.widget.AppCompatTextViewAutoSizeHelper.mAutoSizeTextType int \l0x0012: IGET  (r3 I:int[]) = \l  (r4 I:android.support.v7.widget.AppCompatTextViewAutoSizeHelper)\l android.support.v7.widget.AppCompatTextViewAutoSizeHelper.mAutoSizeTextSizesInPx int[] \l0x0014: AGET  (r1 I:?[int, float]) = (r3 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x0016: CAST  (r1 I:float) = (float) (r1 I:int) \l0x0017: IPUT  \l  (r1 I:float)\l  (r4 I:android.support.v7.widget.AppCompatTextViewAutoSizeHelper)\l android.support.v7.widget.AppCompatTextViewAutoSizeHelper.mAutoSizeMinTextSizeInPx float \l0x0019: IGET  (r1 I:int[]) = \l  (r4 I:android.support.v7.widget.AppCompatTextViewAutoSizeHelper)\l android.support.v7.widget.AppCompatTextViewAutoSizeHelper.mAutoSizeTextSizesInPx int[] \l0x001b: ARITH  (r0 I:int) = (r0 I:int) \- (r2 I:int) \l0x001c: AGET  (r0 I:?[int, float]) = (r1 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l0x001e: CAST  (r0 I:float) = (float) (r0 I:int) \l0x001f: IPUT  \l  (r0 I:float)\l  (r4 I:android.support.v7.widget.AppCompatTextViewAutoSizeHelper)\l android.support.v7.widget.AppCompatTextViewAutoSizeHelper.mAutoSizeMaxTextSizeInPx float \l0x0021: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (\-1082130432(0xffffffffbf800000, float:\-1.0) ?[int, float, short, byte, char])\l \l0x0023: IPUT  \l  (r0 I:float)\l  (r4 I:android.support.v7.widget.AppCompatTextViewAutoSizeHelper)\l android.support.v7.widget.AppCompatTextViewAutoSizeHelper.mAutoSizeStepGranularityInPx float \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: IGET  (r0 I:boolean) = \l  (r4 I:android.support.v7.widget.AppCompatTextViewAutoSizeHelper)\l android.support.v7.widget.AppCompatTextViewAutoSizeHelper.mHasPresetAutoSizeValues boolean \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean android.support.v7.widget.AppCompatTextViewAutoSizeHelper.setupAutoSizeUniformPresetSizesConfiguration((r4 'this' I:android.support.v7.widget.AppCompatTextViewAutoSizeHelper A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

