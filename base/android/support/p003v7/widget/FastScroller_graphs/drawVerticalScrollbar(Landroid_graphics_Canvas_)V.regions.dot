digraph "CFG forandroid.support.v7.widget.FastScroller.drawVerticalScrollbar(Landroid\/graphics\/Canvas;)V" {
subgraph cluster_Region_1257270772 {
label = "R(2:0|(2:(2:2|5)|(1:3)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r6.mRecyclerViewWidth \- r6.mVerticalThumbWidth\lint int r1 = r6.mVerticalThumbCenterY \- (r6.mVerticalThumbHeight \/ 2)\lr6.mVerticalThumbDrawable.setBounds(0, 0, r6.mVerticalThumbWidth, r6.mVerticalThumbHeight)\lr6.mVerticalTrackDrawable.setBounds(0, 0, r6.mVerticalTrackWidth, r6.mRecyclerViewHeight)\l}"];
subgraph cluster_Region_1015893906 {
label = "R(2:(2:2|5)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1816002054 {
label = "IF [B:1:0x0023] THEN: R(2:2|5) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0023|if (isLayoutRTL() == true) goto L_0x0025\l}"];
subgraph cluster_Region_1882962789 {
label = "R(2:2|5)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0025|r6.mVerticalTrackDrawable.draw(r7)\lr7.translate((float) r6.mVerticalThumbWidth, (float) r1)\lr7.scale(\-1.0f, 1.0f)\lr6.mVerticalThumbDrawable.draw(r7)\lr7.scale(1.0f, 1.0f)\lr7.translate((float) (\-r6.mVerticalThumbWidth), (float) (\-r1))\l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_491009898 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x004a|r7.translate((float) r0, 0.0f)\lr6.mVerticalTrackDrawable.draw(r7)\lr7.translate(0.0f, (float) r1)\lr6.mVerticalThumbDrawable.draw(r7)\lr7.translate((float) (\-r0), (float) (\-r1))\l}"];
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
MethodNode[shape=record,label="{private void android.support.v7.widget.FastScroller.drawVerticalScrollbar((r6v0 'this' android.support.v7.widget.FastScroller A[IMMUTABLE_TYPE, THIS]), (r7v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
}

