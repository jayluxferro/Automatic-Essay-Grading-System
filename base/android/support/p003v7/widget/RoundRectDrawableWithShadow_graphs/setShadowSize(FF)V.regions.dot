digraph "CFG forandroid.support.v7.widget.RoundRectDrawableWithShadow.setShadowSize(FF)V" {
subgraph cluster_Region_1474804519 {
label = "R(1:(2:19|20)(1:(3:4|(2:(1:8)|9)|(1:(1:15)))(2:17|18)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1270174729 {
label = "IF [B:1:0x0003] THEN: R(2:19|20) ELSE: R(1:(3:4|(2:(1:8)|9)|(1:(1:15)))(2:17|18))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r3 \< 0.0f) goto L_0x0061\l}"];
subgraph cluster_Region_1106986675 {
label = "R(2:19|20)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0061}"];
Node_20 [shape=record,label="{20\:\ 0x007c|throw new java.lang.IllegalArgumentException(\"Invalid shadow size \" + r3 + \". Must be \>= 0\")\l}"];
}
subgraph cluster_Region_1921551026 {
label = "R(1:(3:4|(2:(1:8)|9)|(1:(1:15)))(2:17|18)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_417085767 {
label = "IF [B:3:0x0007] THEN: R(3:4|(2:(1:8)|9)|(1:(1:15))) ELSE: R(2:17|18) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r4 \>= 0.0f) goto L_0x0009\l}"];
subgraph cluster_Region_1568255829 {
label = "R(3:4|(2:(1:8)|9)|(1:(1:15)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|float float r3 = (float) toEven(r3)\lfloat float r4 = (float) toEven(r4)\l}"];
subgraph cluster_IfRegion_1976163291 {
label = "IF [B:5:0x0016] THEN: R(2:(1:8)|9) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0016|if (r3 \> r4) goto L_0x0018\l}"];
subgraph cluster_Region_235717393 {
label = "R(2:(1:8)|9)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2032677705 {
label = "IF [B:7:0x001a] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001a|if (r2.mPrintedShadowClipWarning == false) goto L_0x001c\l}"];
subgraph cluster_Region_1660763137 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001c|r2.mPrintedShadowClipWarning = true\l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x001e|r3 = r4\l}"];
}
}
subgraph cluster_Region_1410787318 {
label = "R(1:(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_192798529 {
label = "IF [B:11:0x0023, B:13:0x0029] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0023|if (r2.mRawShadowSize != r3) goto L_0x002c\l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|ADDED_TO_REGION\l|if (r2.mRawMaxShadowSize != r4) goto L_0x002c\l}"];
subgraph cluster_Region_460249724 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002c|r2.mRawShadowSize = r3\lr2.mRawMaxShadowSize = r4\lr2.mShadowSize = (float) ((int) ((r3 * 1.5f) + ((float) r2.mInsetShadow) + 0.5f))\lr2.mDirty = true\linvalidateSelf()\l}"];
}
}
}
}
subgraph cluster_Region_771353138 {
label = "R(2:17|18)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0045}"];
Node_18 [shape=record,label="{18\:\ 0x0060|throw new java.lang.IllegalArgumentException(\"Invalid max shadow size \" + r4 + \". Must be \>= 0\")\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0005}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0018}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001f|PHI: r3 \l  PHI: (r3v6 float) = (r3v5 float), (r3v13 float) binds: [B:5:0x0016, B:9:0x001e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0025}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x002b}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0044}"];
MethodNode[shape=record,label="{private void android.support.v7.widget.RoundRectDrawableWithShadow.setShadowSize((r2v0 'this' android.support.v7.widget.RoundRectDrawableWithShadow A[IMMUTABLE_TYPE, THIS]), (r3v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_19 -> Node_20;
Node_3 -> Node_4;
Node_3 -> Node_17[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_10[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_6 -> Node_7;
Node_10 -> Node_11;
Node_12 -> Node_13;
}

