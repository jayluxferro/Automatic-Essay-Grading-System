digraph "CFG forandroid.support.v7.widget.RecyclerView.Adapter.createViewHolder(Landroid\/view\/ViewGroup;I)Landroid\/support\/v7\/widget\/RecyclerView$ViewHolder;" {
subgraph cluster_Region_948688181 {
label = "R(1:(2:2|(2:(2:4|6)|(1:9))))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1259300103 {
label = "Try: R(2:2|(2:(2:4|6)|(1:9))) finally: R(3:10|11|12)";
node [shape=record,color=blue];
subgraph cluster_Region_1692959542 {
label = "R(2:2|(2:(2:4|6)|(1:9)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x001f \}\lSplitter:B:1:0x0002\l|android.support.p000v4.p002os.TraceCompat.beginSection(android.support.p003v7.widget.RecyclerView.TRACE_CREATE_VIEW_TAG)     \/\/ Catch:\{ all \-\> 0x001f \}\landroid.support.v7.widget.RecyclerView$ViewHolder VH r2 = onCreateViewHolder(r2, r3)     \/\/ Catch:\{ all \-\> 0x001f \}\l}"];
subgraph cluster_Region_156014035 {
label = "R(2:(2:4|6)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1936789892 {
label = "IF [B:3:0x000f] THEN: R(2:4|6) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000f|Catch:\{ all \-\> 0x001f \}\l|if (r2.itemView.getParent() == null) goto L_0x0011     \/\/ Catch:\{ all \-\> 0x001f \}\l}"];
subgraph cluster_Region_1958800103 {
label = "R(2:4|6)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|Catch:\{ all \-\> 0x001f \}\l|r2.mItemViewType = r3     \/\/ Catch:\{ all \-\> 0x001f \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|RETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_1005940646 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001e|Catch:\{ all \-\> 0x001f \}\l|throw new java.lang.IllegalStateException(\"ViewHolder views must not be attached when created. Ensure that you are not passing 'true' to the attachToRoot parameter of LayoutInflater.inflate(..., boolean attachToRoot)\")     \/\/ Catch:\{ all \-\> 0x001f \}\l}"];
}
}
}
subgraph cluster_Region_1571891088 {
label = "R(3:10|11|12) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001f|ExcHandler:  FINALLY\lSplitter:B:1:0x0002\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|FINALLY_INSNS\l|android.support.p000v4.p002os.TraceCompat.endSection()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|throw r2\l}"];
}
}
}
subgraph cluster_Region_1571891088 {
label = "R(3:10|11|12) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001f|ExcHandler:  FINALLY\lSplitter:B:1:0x0002\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|FINALLY_INSNS\l|android.support.p000v4.p002os.TraceCompat.endSection()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|throw r2\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0013|DONT_GENERATE\l|android.support.p000v4.p002os.TraceCompat.endSection()\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0017|SYNTHETIC\lSplitter:B:7:0x0017\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|Catch:\{ all \-\> 0x001f \}\lSplitter:B:7:0x0017\l}"];
MethodNode[shape=record,label="{public final VH android.support.v7.widget.RecyclerView.Adapter.createViewHolder((r1v0 'this' android.support.v7.widget.RecyclerView$Adapter A[IMMUTABLE_TYPE, THIS]), (r2v0 android.view.ViewGroup A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], \lAnnotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/view\/ViewGroup;, I)TVH;]\}]\l}"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_5;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_9;
}

