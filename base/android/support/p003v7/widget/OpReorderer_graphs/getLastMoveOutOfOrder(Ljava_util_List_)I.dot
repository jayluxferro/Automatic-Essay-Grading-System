digraph "CFG forandroid.support.v7.widget.OpReorderer.getLastMoveOutOfOrder(Ljava\/util\/List;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r6.size() \- 1\lr2 = false\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v2 int) = (r0v1 int), (r0v3 int) binds: [B:0:0x0000, B:7:0x0019] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 boolean) = (r2v0 boolean), (r2v2 boolean) binds: [B:0:0x0000, B:7:0x0019] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:7:0x0019\l|if (r0 \< 0) goto L_0x001c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009}"];
Node_3 [shape=record,label="{3\:\ 0x0013|if (r6.get(r0).cmd != 8) goto L_0x0018\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|if (r2 == false) goto L_0x0019\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|RETURN\l|return r0\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|r2 = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|LOOP_END\lPHI: r2 \l  PHI: (r2v2 boolean) = (r2v3 boolean), (r2v1 boolean) binds: [B:11:0x0019, B:12:0x0019] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:7:0x0019\l|int r0 = r0 + \-1\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|RETURN\l|return \-1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0019|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int android.support.v7.widget.OpReorderer.getLastMoveOutOfOrder((r5v0 'this' android.support.v7.widget.OpReorderer A[IMMUTABLE_TYPE, THIS]), (r6v0 java.util.List\<android.support.v7.widget.AdapterHelper$UpdateOp\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Landroid\/support\/v7\/widget\/AdapterHelper$UpdateOp;, \>;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_9[style=dashed];
Node_4 -> Node_12;
Node_6 -> Node_11;
Node_7 -> Node_1;
Node_9 -> Node_5;
Node_10 -> Node_8;
Node_11 -> Node_7;
Node_12 -> Node_7;
}

