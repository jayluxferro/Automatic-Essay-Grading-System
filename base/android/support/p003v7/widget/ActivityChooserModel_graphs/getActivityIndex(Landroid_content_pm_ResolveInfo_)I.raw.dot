digraph "CFG forandroid.support.v7.widget.ActivityChooserModel.getActivityIndex(Landroid\/content\/pm\/ResolveInfo;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Object) = (r5 I:android.support.v7.widget.ActivityChooserModel) android.support.v7.widget.ActivityChooserModel.mInstanceLock java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: INVOKE  (r5 I:android.support.v7.widget.ActivityChooserModel) android.support.v7.widget.ActivityChooserModel.ensureConsistentState():void type: DIRECT A[Catch:\{ all \-\> 0x0021 \}, TRY_ENTER]\l0x0006: IGET  (r1 I:java.util.List\<android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo\>) = (r5 I:android.support.v7.widget.ActivityChooserModel) android.support.v7.widget.ActivityChooserModel.mActivities java.util.List A[Catch:\{ all \-\> 0x0021 \}]\l0x0008: INVOKE  (r2 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE A[Catch:\{ all \-\> 0x0021 \}]\l0x000c: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r3 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:10:0x001e A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: INVOKE  (r4 I:java.lang.Object) = (r1 I:java.util.List), (r3 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0021 \}]\l0x0013: CHECK_CAST  (r4 I:android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo) = (android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0021 \}]\l0x0015: IGET  (r4 I:android.content.pm.ResolveInfo) = \l  (r4 I:android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo)\l android.support.v7.widget.ActivityChooserModel.ActivityResolveInfo.resolveInfo android.content.pm.ResolveInfo A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001b A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: RETURN  (r3 I:int) A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: ARITH  (r3 I:int) = (r3 I:int) + (1 int) A[Catch:\{ all \-\> 0x0021 \}]\l0x001d: GOTO  \-\> 0x000d A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: CONST  (r6 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: RETURN  (r6 I:int) A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x0021: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0022|0x0022: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0021 \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0023|0x0023: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int android.support.v7.widget.ActivityChooserModel.getActivityIndex((r5 'this' I:android.support.v7.widget.ActivityChooserModel A[IMMUTABLE_TYPE, THIS]), (r6 I:android.content.pm.ResolveInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_4;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

