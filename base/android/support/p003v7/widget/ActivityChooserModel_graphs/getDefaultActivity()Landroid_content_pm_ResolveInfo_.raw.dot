digraph "CFG forandroid.support.v7.widget.ActivityChooserModel.getDefaultActivity()Landroid\/content\/pm\/ResolveInfo;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Object) = (r3 I:android.support.v7.widget.ActivityChooserModel) android.support.v7.widget.ActivityChooserModel.mInstanceLock java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: INVOKE  (r3 I:android.support.v7.widget.ActivityChooserModel) android.support.v7.widget.ActivityChooserModel.ensureConsistentState():void type: DIRECT A[Catch:\{ all \-\> 0x001e \}, TRY_ENTER]\l0x0006: IGET  (r1 I:java.util.List\<android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo\>) = (r3 I:android.support.v7.widget.ActivityChooserModel) android.support.v7.widget.ActivityChooserModel.mActivities java.util.List A[Catch:\{ all \-\> 0x001e \}]\l0x0008: INVOKE  (r1 I:boolean) = (r1 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE A[Catch:\{ all \-\> 0x001e \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001b A[Catch:\{ all \-\> 0x001e \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IGET  (r1 I:java.util.List\<android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo\>) = (r3 I:android.support.v7.widget.ActivityChooserModel) android.support.v7.widget.ActivityChooserModel.mActivities java.util.List A[Catch:\{ all \-\> 0x001e \}]\l0x0010: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x001e \}]\l0x0011: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x001e \}]\l0x0015: CHECK_CAST  (r1 I:android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo) = (android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001e \}]\l0x0017: IGET  (r1 I:android.content.pm.ResolveInfo) = \l  (r1 I:android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo)\l android.support.v7.widget.ActivityChooserModel.ActivityResolveInfo.resolveInfo android.content.pm.ResolveInfo A[Catch:\{ all \-\> 0x001e \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001e \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: RETURN  (r1 I:android.content.pm.ResolveInfo) A[Catch:\{ all \-\> 0x001e \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001e \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x001e \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: RETURN  (r0 I:android.content.pm.ResolveInfo) A[Catch:\{ all \-\> 0x001e \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x001e: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x001e \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|0x001f: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001e \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|0x0020: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public android.content.pm.ResolveInfo android.support.v7.widget.ActivityChooserModel.getDefaultActivity((r3 'this' I:android.support.v7.widget.ActivityChooserModel A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

