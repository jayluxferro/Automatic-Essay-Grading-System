digraph "CFG forandroid.support.v7.widget.DividerItemDecoration.drawHorizontal(Landroid\/graphics\/Canvas;Landroid\/support\/v7\/widget\/RecyclerView;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r8 I:android.graphics.Canvas) android.graphics.Canvas.save():int type: VIRTUAL \l0x0003: INVOKE  (r0 I:boolean) = (r9 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getClipToPadding():boolean type: VIRTUAL \l0x0007: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  (r0 I:int) = (r9 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getPaddingTop():int type: VIRTUAL \l0x000e: INVOKE  (r2 I:int) = (r9 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getHeight():int type: VIRTUAL \l0x0012: INVOKE  (r3 I:int) = (r9 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getPaddingBottom():int type: VIRTUAL \l0x0016: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x0017: INVOKE  (r3 I:int) = (r9 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getPaddingLeft():int type: VIRTUAL \l0x001b: INVOKE  (r4 I:int) = (r9 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getWidth():int type: VIRTUAL \l0x001f: INVOKE  (r5 I:int) = (r9 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getPaddingRight():int type: VIRTUAL \l0x0023: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x0024: INVOKE  \l  (r8 I:android.graphics.Canvas)\l  (r3 I:int)\l  (r0 I:int)\l  (r4 I:int)\l  (r2 I:int)\l android.graphics.Canvas.clipRect(int, int, int, int):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0028|0x0028: INVOKE  (r2 I:int) = (r9 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getHeight():int type: VIRTUAL \l0x002c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x002d|0x002d: INVOKE  (r3 I:int) = (r9 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getChildCount():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|0x0031: IF  (r1 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:7:0x0062 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0033|0x0033: INVOKE  (r4 I:android.view.View) = (r9 I:android.support.v7.widget.RecyclerView), (r1 I:int) android.support.v7.widget.RecyclerView.getChildAt(int):android.view.View type: VIRTUAL \l0x0037: INVOKE  (r5 I:android.support.v7.widget.RecyclerView$LayoutManager) = (r9 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getLayoutManager():android.support.v7.widget.RecyclerView$LayoutManager type: VIRTUAL \l0x003b: IGET  (r6 I:android.graphics.Rect) = (r7 I:android.support.v7.widget.DividerItemDecoration) android.support.v7.widget.DividerItemDecoration.mBounds android.graphics.Rect \l0x003d: INVOKE  \l  (r5 I:android.support.v7.widget.RecyclerView$LayoutManager)\l  (r4 I:android.view.View)\l  (r6 I:android.graphics.Rect)\l android.support.v7.widget.RecyclerView.LayoutManager.getDecoratedBoundsWithMargins(android.view.View, android.graphics.Rect):void type: VIRTUAL \l0x0040: IGET  (r5 I:android.graphics.Rect) = (r7 I:android.support.v7.widget.DividerItemDecoration) android.support.v7.widget.DividerItemDecoration.mBounds android.graphics.Rect \l0x0042: IGET  (r5 I:int) = (r5 I:android.graphics.Rect) android.graphics.Rect.right int \l0x0044: INVOKE  (r4 I:float) = (r4 I:android.view.View) android.view.View.getTranslationX():float type: VIRTUAL \l0x0048: INVOKE  (r4 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x004c: ARITH  (r5 I:int) = (r5 I:int) + (r4 I:int) \l0x004d: IGET  (r4 I:android.graphics.drawable.Drawable) = (r7 I:android.support.v7.widget.DividerItemDecoration) android.support.v7.widget.DividerItemDecoration.mDivider android.graphics.drawable.Drawable \l0x004f: INVOKE  (r4 I:int) = (r4 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getIntrinsicWidth():int type: VIRTUAL \l0x0053: ARITH  (r4 I:int) = (r5 I:int) \- (r4 I:int) \l0x0055: IGET  (r6 I:android.graphics.drawable.Drawable) = (r7 I:android.support.v7.widget.DividerItemDecoration) android.support.v7.widget.DividerItemDecoration.mDivider android.graphics.drawable.Drawable \l0x0057: INVOKE  \l  (r6 I:android.graphics.drawable.Drawable)\l  (r4 I:int)\l  (r0 I:int)\l  (r5 I:int)\l  (r2 I:int)\l android.graphics.drawable.Drawable.setBounds(int, int, int, int):void type: VIRTUAL \l0x005a: IGET  (r4 I:android.graphics.drawable.Drawable) = (r7 I:android.support.v7.widget.DividerItemDecoration) android.support.v7.widget.DividerItemDecoration.mDivider android.graphics.drawable.Drawable \l0x005c: INVOKE  \l  (r4 I:android.graphics.drawable.Drawable)\l  (r8 I:android.graphics.Canvas)\l android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void type: VIRTUAL \l0x005f: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0062|0x0062: INVOKE  (r8 I:android.graphics.Canvas) android.graphics.Canvas.restore():void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0065|0x0065: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v7.widget.DividerItemDecoration.drawHorizontal((r7 'this' I:android.support.v7.widget.DividerItemDecoration A[IMMUTABLE_TYPE, THIS]), (r8 I:android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_5;
Node_7 -> Node_8;
}

