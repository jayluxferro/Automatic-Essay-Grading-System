digraph "CFG forandroid.support.v7.widget.DividerItemDecoration.setOrientation(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000e \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0006 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0008: CONST_STR  (r0 I:java.lang.String) =  \"Invalid orientation. It should be either HORIZONTAL or VERTICAL\" \l0x000a: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: IPUT  \l  (r2 I:int)\l  (r1 I:android.support.v7.widget.DividerItemDecoration)\l android.support.v7.widget.DividerItemDecoration.mOrientation int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.DividerItemDecoration.setOrientation((r1 'this' I:android.support.v7.widget.DividerItemDecoration A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_6;
Node_1 -> Node_2;
Node_2 -> Node_4;
Node_2 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
}

