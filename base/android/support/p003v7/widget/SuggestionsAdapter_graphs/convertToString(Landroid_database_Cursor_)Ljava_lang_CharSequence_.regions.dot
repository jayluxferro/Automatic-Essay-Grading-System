digraph "CFG forandroid.support.v7.widget.SuggestionsAdapter.convertToString(Landroid\/database\/Cursor;)Ljava\/lang\/CharSequence;" {
subgraph cluster_Region_1074302800 {
label = "R(1:(2:(1:2)|(2:3|(2:(1:5)|(1:(2:(1:10)|(1:(2:(1:16)|(1:15))))))))) | DECL_VAR: java.lang.String null, java.lang.String null\l";
node [shape=record,color=blue];
subgraph cluster_Region_1838851126 {
label = "R(2:(1:2)|(2:3|(2:(1:5)|(1:(2:(1:10)|(1:(2:(1:16)|(1:15))))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_369058190 {
label = "IF [B:1:0x0001] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r3 == null) goto L_0x0003\l}"];
subgraph cluster_Region_471627371 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1612816725 {
label = "R(2:3|(2:(1:5)|(1:(2:(1:10)|(1:(2:(1:16)|(1:15)))))))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0004|java.lang.String java.lang.String r1 = getColumnString(r3, \"suggest_intent_query\")\l}"];
subgraph cluster_Region_417994935 {
label = "R(2:(1:5)|(1:(2:(1:10)|(1:(2:(1:16)|(1:15))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_626237289 {
label = "IF [B:4:0x000a] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r1 != null) goto L_0x000c\l}"];
subgraph cluster_Region_925571584 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000c|RETURN\l|return r1\l}"];
}
}
subgraph cluster_Region_543798408 {
label = "R(1:(2:(1:10)|(1:(2:(1:16)|(1:15)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1316246042 {
label = "R(2:(1:10)|(1:(2:(1:16)|(1:15))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_832883345 {
label = "IF [B:7:0x0013, B:9:0x001b] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0013|if (r2.mSearchable.shouldRewriteQueryFromData() != false) goto L_0x0015\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|ADDED_TO_REGION\l|if ((r1 = getColumnString(r3, \"suggest_intent_data\")) != null) goto L_0x001d\l}"];
subgraph cluster_Region_2042844082 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001d|RETURN\l|return r1\l}"];
}
}
subgraph cluster_Region_342062582 {
label = "R(1:(2:(1:16)|(1:15)))";
node [shape=record,color=blue];
subgraph cluster_Region_2028667362 {
label = "R(2:(1:16)|(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1871490092 {
label = "IF [B:12:0x0024, B:14:0x002c] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0024|if (r2.mSearchable.shouldRewriteQueryFromText() == false) goto L_0x002f\l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|ADDED_TO_REGION\l|if ((r3 = getColumnString(r3, \"suggest_text_1\")) == null) goto L_0x002f\l}"];
subgraph cluster_Region_204553388 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x002f|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_57811993 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002e|RETURN\l|return r3\l}"];
}
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000d}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0015}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001e}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0026}"];
MethodNode[shape=record,label="{public java.lang.CharSequence android.support.v7.widget.SuggestionsAdapter.convertToString((r2v0 'this' android.support.v7.widget.SuggestionsAdapter A[IMMUTABLE_TYPE, THIS]), (r3v0 android.database.Cursor A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_11[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_0 -> Node_1;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_11 -> Node_12;
Node_13 -> Node_14;
}

