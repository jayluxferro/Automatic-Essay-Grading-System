digraph "CFG forandroid.support.v7.widget.SuggestionsAdapter.convertToString(Landroid\/database\/Cursor;)Ljava\/lang\/CharSequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r3 != null) goto L_0x0004\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|java.lang.String r1 = getColumnString(r3, \"suggest_intent_query\")\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r1 == null) goto L_0x000d\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|RETURN\l|return r1\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d}"];
Node_7 [shape=record,label="{7\:\ 0x0013|if (r2.mSearchable.shouldRewriteQueryFromData() == false) goto L_0x001e\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|java.lang.String r1 = getColumnString(r3, \"suggest_intent_data\")\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|if (r1 == null) goto L_0x001e\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|RETURN\l|return r1\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e}"];
Node_12 [shape=record,label="{12\:\ 0x0024|if (r2.mSearchable.shouldRewriteQueryFromText() == false) goto L_0x002f\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|java.lang.String r3 = getColumnString(r3, \"suggest_text_1\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|if (r3 == null) goto L_0x002f\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|RETURN\l|return r3\l}"];
Node_16 [shape=record,label="{16\:\ 0x002f|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public java.lang.CharSequence android.support.v7.widget.SuggestionsAdapter.convertToString((r2v0 'this' android.support.v7.widget.SuggestionsAdapter A[IMMUTABLE_TYPE, THIS]), (r3v0 android.database.Cursor A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
}

