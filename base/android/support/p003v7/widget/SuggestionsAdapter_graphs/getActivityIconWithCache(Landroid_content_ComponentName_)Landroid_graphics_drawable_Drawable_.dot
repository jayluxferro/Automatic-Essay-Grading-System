digraph "CFG forandroid.support.v7.widget.SuggestionsAdapter.getActivityIconWithCache(Landroid\/content\/ComponentName;)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r0 = r4.flattenToShortString()\lr2 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r3.mOutsideDrawablesCache.containsKey(r0) == false) goto L_0x0023\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|android.graphics.drawable.Drawable$ConstantState r4 = r3.mOutsideDrawablesCache.get(r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|if (r4 != null) goto L_0x0018\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018}"];
Node_5 [shape=record,label="{5\:\ 0x0023|android.graphics.drawable.Drawable r4 = getActivityIcon(r4)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|if (r4 != null) goto L_0x002a\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|android.graphics.drawable.Drawable$ConstantState r2 = r4.getConstantState()\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|PHI: r2 \l  PHI: (r2v1 android.graphics.drawable.Drawable$ConstantState) = (r2v0 android.graphics.drawable.Drawable$ConstantState), (r2v2 android.graphics.drawable.Drawable$ConstantState) binds: [B:6:0x0027, B:7:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|r3.mOutsideDrawablesCache.put(r0, r2)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|RETURN\l|return r4\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r4.newDrawable(r3.mProviderContext.getResources())\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
MethodNode[shape=record,label="{private android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getActivityIconWithCache((r3v0 'this' android.support.v7.widget.SuggestionsAdapter A[IMMUTABLE_TYPE, THIS]), (r4v0 android.content.ComponentName A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_11[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
}

