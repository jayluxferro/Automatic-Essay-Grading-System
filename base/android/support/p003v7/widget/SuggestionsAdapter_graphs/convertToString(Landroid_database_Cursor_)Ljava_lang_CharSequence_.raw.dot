digraph "CFG forandroid.support.v7.widget.SuggestionsAdapter.convertToString(Landroid\/database\/Cursor;)Ljava\/lang\/CharSequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:java.lang.CharSequence) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: CONST_STR  (r1 I:java.lang.String) =  \"suggest_intent_query\" \l0x0006: INVOKE  (r1 I:java.lang.String) = (r3 I:android.database.Cursor), (r1 I:java.lang.String) android.support.v7.widget.SuggestionsAdapter.getColumnString(android.database.Cursor, java.lang.String):java.lang.String type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000d \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: RETURN  (r1 I:java.lang.CharSequence) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: IGET  (r1 I:android.app.SearchableInfo) = (r2 I:android.support.v7.widget.SuggestionsAdapter) android.support.v7.widget.SuggestionsAdapter.mSearchable android.app.SearchableInfo \l0x000f: INVOKE  (r1 I:boolean) = (r1 I:android.app.SearchableInfo) android.app.SearchableInfo.shouldRewriteQueryFromData():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001e \l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|0x0015: CONST_STR  (r1 I:java.lang.String) =  \"suggest_intent_data\" \l0x0017: INVOKE  (r1 I:java.lang.String) = (r3 I:android.database.Cursor), (r1 I:java.lang.String) android.support.v7.widget.SuggestionsAdapter.getColumnString(android.database.Cursor, java.lang.String):java.lang.String type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001e \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: RETURN  (r1 I:java.lang.CharSequence) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: IGET  (r1 I:android.app.SearchableInfo) = (r2 I:android.support.v7.widget.SuggestionsAdapter) android.support.v7.widget.SuggestionsAdapter.mSearchable android.app.SearchableInfo \l0x0020: INVOKE  (r1 I:boolean) = (r1 I:android.app.SearchableInfo) android.app.SearchableInfo.shouldRewriteQueryFromText():boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x002f \l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|0x0026: CONST_STR  (r1 I:java.lang.String) =  \"suggest_text_1\" \l0x0028: INVOKE  (r3 I:java.lang.String) = (r3 I:android.database.Cursor), (r1 I:java.lang.String) android.support.v7.widget.SuggestionsAdapter.getColumnString(android.database.Cursor, java.lang.String):java.lang.String type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|0x002c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x002f \l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|0x002e: RETURN  (r3 I:java.lang.CharSequence) \l}"];
Node_16 [shape=record,label="{16\:\ 0x002f|0x002f: RETURN  (r0 I:java.lang.CharSequence) \l}"];
MethodNode[shape=record,label="{public java.lang.CharSequence android.support.v7.widget.SuggestionsAdapter.convertToString((r2 'this' I:android.support.v7.widget.SuggestionsAdapter A[IMMUTABLE_TYPE, THIS]), (r3 I:android.database.Cursor A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
}

