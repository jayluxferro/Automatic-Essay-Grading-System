digraph "CFG forandroid.support.v7.widget.SuggestionsAdapter.runQueryOnBackgroundThread(Ljava\/lang\/CharSequence;)Landroid\/database\/Cursor;" {
subgraph cluster_Region_1588490268 {
label = "R(2:0|(2:(1:15)|(2:(2:8|(2:10|11))|14)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r4 = r4 == null ? \"\" : r4.toString()\l}"];
subgraph cluster_Region_1414359653 {
label = "R(2:(1:15)|(2:(2:8|(2:10|11))|14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_197404663 {
label = "IF [B:4:0x0010, B:6:0x0018] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|if (r3.mSearchView.getVisibility() != 0) goto L_0x0032\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|ADDED_TO_REGION\l|if (r3.mSearchView.getWindowVisibility() != 0) goto L_0x0032\l}"];
subgraph cluster_Region_960218167 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0032|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_112298837 {
label = "R(2:(2:8|(2:10|11))|14)";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_957405092 {
label = "Try: R(2:8|(2:10|11)) catches: R(2:12|13)";
node [shape=record,color=blue];
subgraph cluster_Region_88379437 {
label = "R(2:8|(2:10|11))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ RuntimeException \-\> 0x0029 \}\lSplitter:B:7:0x001b\l|android.database.Cursor android.database.Cursor r4 = getSearchManagerSuggestions(r3.mSearchable, r4, 50)     \/\/ Catch:\{ RuntimeException \-\> 0x0029 \}\l}"];
subgraph cluster_IfRegion_1511972046 {
label = "IF [B:9:0x0023] THEN: R(2:10|11) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0023|Catch:\{ RuntimeException \-\> 0x0029 \}\l|if (r4 != null) goto L_0x0025     \/\/ Catch:\{ RuntimeException \-\> 0x0029 \}\l}"];
subgraph cluster_Region_1282763384 {
label = "R(2:10|11)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0025|Catch:\{ RuntimeException \-\> 0x0029 \}\l|r4.getCount()     \/\/ Catch:\{ RuntimeException \-\> 0x0029 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|RETURN\l|return r4\l}"];
}
}
}
subgraph cluster_Region_323069166 {
label = "R(2:12|13) | ExcHandler: RuntimeException (r4v2 'e' java.lang.RuntimeException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0029|ExcHandler: RuntimeException (r4v2 'e' java.lang.RuntimeException A[CUSTOM_DECLARE])\lSplitter:B:7:0x001b\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|android.util.Log.w(LOG_TAG, \"Search suggestions query threw an exception.\", r4)\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0031|RETURN\l|return null\l}"];
}
}
}
subgraph cluster_Region_323069166 {
label = "R(2:12|13) | ExcHandler: RuntimeException (r4v2 'e' java.lang.RuntimeException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0029|ExcHandler: RuntimeException (r4v2 'e' java.lang.RuntimeException A[CUSTOM_DECLARE])\lSplitter:B:7:0x001b\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|android.util.Log.w(LOG_TAG, \"Search suggestions query threw an exception.\", r4)\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0005}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0009|PHI: r4 \l  PHI: (r4v1 java.lang.String) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0012}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001b|SYNTHETIC\lSplitter:B:7:0x001b\l}"];
MethodNode[shape=record,label="{public android.database.Cursor android.support.v7.widget.SuggestionsAdapter.runQueryOnBackgroundThread((r3v0 'this' android.support.v7.widget.SuggestionsAdapter A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_15;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_14[style=dashed];
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_12;
}

