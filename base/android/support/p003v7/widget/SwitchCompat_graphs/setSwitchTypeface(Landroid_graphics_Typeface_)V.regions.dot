digraph "CFG forandroid.support.v7.widget.SwitchCompat.setSwitchTypeface(Landroid\/graphics\/Typeface;)V" {
subgraph cluster_Region_297039889 {
label = "R(1:(1:(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_1919416315 {
label = "R(1:(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_793743608 {
label = "IF [B:1:0x0006, B:3:0x0012, B:5:0x001a, B:6:0x001c] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r1.mTextPaint.getTypeface() != null) goto L_0x0008\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|ADDED_TO_REGION\l|if (r1.mTextPaint.getTypeface().equals(r2) != true) goto L_0x001e\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|ADDED_TO_REGION\l|if (r1.mTextPaint.getTypeface() == null) goto L_0x001c\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|ADDED_TO_REGION\l|if (r2 != null) goto L_0x001e\l}"];
subgraph cluster_Region_661725815 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001e|r1.mTextPaint.setTypeface(r2)\lrequestLayout()\linvalidate()\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0014}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.SwitchCompat.setSwitchTypeface((r1v0 'this' android.support.v7.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r2v0 android.graphics.Typeface A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_5 -> Node_6;
Node_5 -> Node_9[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_10[style=dashed];
Node_7 -> Node_8;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

