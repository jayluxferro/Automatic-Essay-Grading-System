digraph "CFG forandroid.support.v7.widget.SwitchCompat.onInitializeAccessibilityNodeInfo(Landroid\/view\/accessibility\/AccessibilityNodeInfo;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r3 I:android.widget.CompoundButton)\l  (r4 I:android.view.accessibility.AccessibilityNodeInfo)\l android.widget.CompoundButton.onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo):void type: SUPER \l0x0003: CONST_STR  (r0 I:java.lang.String) =  \"android.widget.Switch\" \l0x0005: INVOKE  \l  (r4 I:android.view.accessibility.AccessibilityNodeInfo)\l  (r0 I:java.lang.CharSequence)\l android.view.accessibility.AccessibilityNodeInfo.setClassName(java.lang.CharSequence):void type: VIRTUAL \l0x0008: INVOKE  (r0 I:boolean) = (r3 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.isChecked():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: IGET  (r0 I:java.lang.CharSequence) = (r3 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mTextOn java.lang.CharSequence \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IGET  (r0 I:java.lang.CharSequence) = (r3 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mTextOff java.lang.CharSequence \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: INVOKE  (r1 I:boolean) = (r0 I:java.lang.CharSequence) android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: INVOKE  (r1 I:java.lang.CharSequence) = (r4 I:android.view.accessibility.AccessibilityNodeInfo) android.view.accessibility.AccessibilityNodeInfo.getText():java.lang.CharSequence type: VIRTUAL \l0x001d: INVOKE  (r2 I:boolean) = (r1 I:java.lang.CharSequence) android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0027 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: INVOKE  \l  (r4 I:android.view.accessibility.AccessibilityNodeInfo)\l  (r0 I:java.lang.CharSequence)\l android.view.accessibility.AccessibilityNodeInfo.setText(java.lang.CharSequence):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0029: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002c: INVOKE  \l  (r2 I:java.lang.StringBuilder)\l  (r1 I:java.lang.CharSequence)\l java.lang.StringBuilder.append(java.lang.CharSequence):java.lang.StringBuilder type: VIRTUAL \l0x002f: CONST  (r1 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0031: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0034: INVOKE  \l  (r2 I:java.lang.StringBuilder)\l  (r0 I:java.lang.CharSequence)\l java.lang.StringBuilder.append(java.lang.CharSequence):java.lang.StringBuilder type: VIRTUAL \l0x0037: INVOKE  \l  (r4 I:android.view.accessibility.AccessibilityNodeInfo)\l  (r2 I:java.lang.CharSequence)\l android.view.accessibility.AccessibilityNodeInfo.setText(java.lang.CharSequence):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x003a|0x003a: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.SwitchCompat.onInitializeAccessibilityNodeInfo((r3 'this' I:android.support.v7.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.accessibility.AccessibilityNodeInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
}

