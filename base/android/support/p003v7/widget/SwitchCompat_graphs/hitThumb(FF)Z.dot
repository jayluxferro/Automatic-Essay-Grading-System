digraph "CFG forandroid.support.v7.widget.SwitchCompat.hitThumb(FF)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r6.mThumbDrawable != null) goto L_0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|RETURN\l|return false\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|int r0 = getThumbOffset()\lr6.mThumbDrawable.getPadding(r6.mTempRect)\lint r2 = r6.mSwitchTop \- r6.mTouchSlop\lint r3 = (r6.mSwitchLeft + r0) \- r6.mTouchSlop\lint r0 = (((r6.mThumbWidth + r3) + r6.mTempRect.left) + r6.mTempRect.right) + r6.mTouchSlop\lint r4 = r6.mSwitchBottom + r6.mTouchSlop\l}"];
Node_4 [shape=record,label="{4\:\ 0x0034|if ((r7 \> ((float) r3) ? 1 : (r7 == ((float) r3) ? 0 : \-1)) \<= 0) goto L_?\l}"];
Node_5 [shape=record,label="{5\:\ 0x0036}"];
Node_6 [shape=record,label="{6\:\ 0x0039|if ((r7 \> ((float) r0) ? 1 : (r7 == ((float) r0) ? 0 : \-1)) \>= 0) goto L_?\l}"];
Node_7 [shape=record,label="{7\:\ 0x003b}"];
Node_8 [shape=record,label="{8\:\ 0x003e|if ((r8 \> ((float) r2) ? 1 : (r8 == ((float) r2) ? 0 : \-1)) \<= 0) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x0040}"];
Node_10 [shape=record,label="{10\:\ 0x0043|if ((r8 \> ((float) r4) ? 1 : (r8 == ((float) r4) ? 0 : \-1)) \>= 0) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x0045|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{private boolean android.support.v7.widget.SwitchCompat.hitThumb((r6v0 'this' android.support.v7.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r7v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
}

