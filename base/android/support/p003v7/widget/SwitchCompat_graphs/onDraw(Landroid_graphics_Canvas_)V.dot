digraph "CFG forandroid.support.v7.widget.SwitchCompat.onDraw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super.onDraw(r10)\landroid.graphics.Rect r0 = r9.mTempRect\landroid.graphics.drawable.Drawable r1 = r9.mTrackDrawable\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r1 == null) goto L_0x000d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|r1.getPadding(r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|r0.setEmpty()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|int r2 = r9.mSwitchTop\lint r3 = r9.mSwitchBottom\lint r2 = r2 + r0.top\lint r3 = r3 \- r0.bottom\landroid.graphics.drawable.Drawable r4 = r9.mThumbDrawable\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|if (r1 == null) goto L_0x004c\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e}"];
Node_7 [shape=record,label="{7\:\ 0x0020|if (r9.mSplitTrack == false) goto L_0x0049\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|if (r4 == null) goto L_0x0049\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|android.graphics.Rect r5 = android.support.p003v7.widget.DrawableUtils.getOpticalBounds(r4)\lr4.copyBounds(r0)\lr0.left = r0.left + r5.left\lr0.right = r0.right \- r5.right\lint r5 = r10.save()\lr10.clipRect(r0, android.graphics.Region.Op.DIFFERENCE)\lr1.draw(r10)\lr10.restoreToCount(r5)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0049|r1.draw(r10)\l}"];
Node_11 [shape=record,label="{11\:\ 0x004c|int r0 = r10.save()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0050|if (r4 == null) goto L_0x0055\l}"];
Node_13 [shape=record,label="{13\:\ 0x0052|r4.draw(r10)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0055}"];
Node_15 [shape=record,label="{15\:\ 0x0059|if (getTargetCheckedState() == false) goto L_0x005e\l}"];
Node_16 [shape=record,label="{16\:\ 0x005b|android.text.Layout r1 = r9.mOnLayout\l}"];
Node_17 [shape=record,label="{17\:\ 0x005e|android.text.Layout r1 = r9.mOffLayout\l}"];
Node_18 [shape=record,label="{18\:\ 0x0060|PHI: r1 \l  PHI: (r1v2 android.text.Layout) = (r1v3 android.text.Layout), (r1v4 android.text.Layout) binds: [B:17:0x005e, B:16:0x005b] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == null) goto L_0x00a5\l}"];
Node_19 [shape=record,label="{19\:\ 0x0062|int[] r5 = getDrawableState()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0068|if (r9.mTextColors == null) goto L_0x0076\l}"];
Node_21 [shape=record,label="{21\:\ 0x006a|r9.mTextPaint.setColor(r9.mTextColors.getColorForState(r5, 0))\l}"];
Node_22 [shape=record,label="{22\:\ 0x0076|r9.mTextPaint.drawableState = r5\l}"];
Node_23 [shape=record,label="{23\:\ 0x007a|if (r4 == null) goto L_0x0086\l}"];
Node_24 [shape=record,label="{24\:\ 0x007c|android.graphics.Rect r4 = r4.getBounds()\lint r5 = r4.left + r4.right\l}"];
Node_25 [shape=record,label="{25\:\ 0x0086|int r5 = getWidth()\l}"];
Node_26 [shape=record,label="{26\:\ 0x008a|PHI: r5 \l  PHI: (r5v1 int) = (r5v4 int), (r5v6 int) binds: [B:25:0x0086, B:24:0x007c] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = ((r2 + r3) \/ 2) \- (r1.getHeight() \/ 2)\lr10.translate((float) ((r5 \/ 2) \- (r1.getWidth() \/ 2)), (float) r2)\lr1.draw(r10)\l}"];
Node_27 [shape=record,label="{27\:\ 0x00a5|r10.restoreToCount(r0)\l}"];
Node_28 [shape=record,label="{28\:\ 0x00a8|RETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void android.support.v7.widget.SwitchCompat.onDraw((r9v0 'this' android.support.v7.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r10v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
}

