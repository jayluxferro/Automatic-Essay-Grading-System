digraph "CFG forandroid.support.v7.widget.SwitchCompat.onInitializeAccessibilityNodeInfo(Landroid\/view\/accessibility\/AccessibilityNodeInfo;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super.onInitializeAccessibilityNodeInfo(r4)\lr4.setClassName(ACCESSIBILITY_EVENT_CLASS_NAME)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if (isChecked() == false) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|java.lang.CharSequence r0 = r3.mTextOn\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|java.lang.CharSequence r0 = r3.mTextOff\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|PHI: r0 \l  PHI: (r0v2 java.lang.CharSequence) = (r0v3 java.lang.CharSequence), (r0v4 java.lang.CharSequence) binds: [B:3:0x0011, B:2:0x000e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|if (android.text.TextUtils.isEmpty(r0) != false) goto L_?\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|java.lang.CharSequence r1 = r4.getText()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|if (android.text.TextUtils.isEmpty(r1) == false) goto L_0x0027\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|r4.setText(r0)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(r1)\lr2.append(' ')\lr2.append(r0)\lr4.setText(r2)\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.SwitchCompat.onInitializeAccessibilityNodeInfo((r3v0 'this' android.support.v7.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r4v0 android.view.accessibility.AccessibilityNodeInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_12;
Node_9 -> Node_10;
}

