digraph "CFG forandroid.support.v7.widget.SwitchCompat.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mShowText boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:android.text.Layout) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mOnLayout android.text.Layout \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r0 I:java.lang.CharSequence) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mTextOn java.lang.CharSequence \l0x000a: INVOKE  (r0 I:android.text.Layout) = \l  (r6 I:android.support.v7.widget.SwitchCompat)\l  (r0 I:java.lang.CharSequence)\l android.support.v7.widget.SwitchCompat.makeLayout(java.lang.CharSequence):android.text.Layout type: DIRECT \l0x000e: IPUT  \l  (r0 I:android.text.Layout)\l  (r6 I:android.support.v7.widget.SwitchCompat)\l android.support.v7.widget.SwitchCompat.mOnLayout android.text.Layout \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IGET  (r0 I:android.text.Layout) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mOffLayout android.text.Layout \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001c \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IGET  (r0 I:java.lang.CharSequence) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mTextOff java.lang.CharSequence \l0x0016: INVOKE  (r0 I:android.text.Layout) = \l  (r6 I:android.support.v7.widget.SwitchCompat)\l  (r0 I:java.lang.CharSequence)\l android.support.v7.widget.SwitchCompat.makeLayout(java.lang.CharSequence):android.text.Layout type: DIRECT \l0x001a: IPUT  \l  (r0 I:android.text.Layout)\l  (r6 I:android.support.v7.widget.SwitchCompat)\l android.support.v7.widget.SwitchCompat.mOffLayout android.text.Layout \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IGET  (r0 I:android.graphics.Rect) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mTempRect android.graphics.Rect \l0x001e: IGET  (r1 I:android.graphics.drawable.Drawable) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mThumbDrawable android.graphics.drawable.Drawable \l0x0020: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x003b \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: IGET  (r1 I:android.graphics.drawable.Drawable) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mThumbDrawable android.graphics.drawable.Drawable \l0x0025: INVOKE  \l  (r1 I:android.graphics.drawable.Drawable)\l  (r0 I:android.graphics.Rect)\l android.graphics.drawable.Drawable.getPadding(android.graphics.Rect):boolean type: VIRTUAL \l0x0028: IGET  (r1 I:android.graphics.drawable.Drawable) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mThumbDrawable android.graphics.drawable.Drawable \l0x002a: INVOKE  (r1 I:int) = (r1 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getIntrinsicWidth():int type: VIRTUAL \l0x002e: IGET  (r3 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0030: ARITH  (r1 I:int) = (r1 I:int) \- (r3 I:int) \l0x0031: IGET  (r3 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.right int \l0x0033: ARITH  (r1 I:int) = (r1 I:int) \- (r3 I:int) \l0x0034: IGET  (r3 I:android.graphics.drawable.Drawable) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mThumbDrawable android.graphics.drawable.Drawable \l0x0036: INVOKE  (r3 I:int) = (r3 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getIntrinsicHeight():int type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|0x003b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003c: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x003d|0x003d: IGET  (r4 I:boolean) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mShowText boolean \l}"];
Node_13 [shape=record,label="{13\:\ 0x003f|0x003f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0057 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0041|0x0041: IGET  (r4 I:android.text.Layout) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mOnLayout android.text.Layout \l0x0043: INVOKE  (r4 I:int) = (r4 I:android.text.Layout) android.text.Layout.getWidth():int type: VIRTUAL \l0x0047: IGET  (r5 I:android.text.Layout) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mOffLayout android.text.Layout \l0x0049: INVOKE  (r5 I:int) = (r5 I:android.text.Layout) android.text.Layout.getWidth():int type: VIRTUAL \l0x004d: INVOKE  (r4 I:int) = (r4 I:int), (r5 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x0051: IGET  (r5 I:int) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mThumbTextPadding int \l0x0053: ARITH  (r5 I:int) = (r5 I:int) * (2 int) \l0x0055: ARITH  (r4 I:int) = (r4 I:int) + (r5 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0057|0x0057: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0058|0x0058: INVOKE  (r1 I:int) = (r4 I:int), (r1 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x005c: IPUT  (r1 I:int), (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mThumbWidth int \l0x005e: IGET  (r1 I:android.graphics.drawable.Drawable) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mTrackDrawable android.graphics.drawable.Drawable \l}"];
Node_17 [shape=record,label="{17\:\ 0x0060|0x0060: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x006e \l}"];
Node_18 [shape=record,label="{18\:\ 0x0062|0x0062: IGET  (r1 I:android.graphics.drawable.Drawable) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mTrackDrawable android.graphics.drawable.Drawable \l0x0064: INVOKE  \l  (r1 I:android.graphics.drawable.Drawable)\l  (r0 I:android.graphics.Rect)\l android.graphics.drawable.Drawable.getPadding(android.graphics.Rect):boolean type: VIRTUAL \l0x0067: IGET  (r1 I:android.graphics.drawable.Drawable) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mTrackDrawable android.graphics.drawable.Drawable \l0x0069: INVOKE  (r2 I:int) = (r1 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getIntrinsicHeight():int type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x006e|0x006e: INVOKE  (r0 I:android.graphics.Rect) android.graphics.Rect.setEmpty():void type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0071|0x0071: IGET  (r1 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0073: IGET  (r0 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.right int \l0x0075: IGET  (r4 I:android.graphics.drawable.Drawable) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mThumbDrawable android.graphics.drawable.Drawable \l}"];
Node_21 [shape=record,label="{21\:\ 0x0077|0x0077: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x008b \l}"];
Node_22 [shape=record,label="{22\:\ 0x0079|0x0079: IGET  (r4 I:android.graphics.drawable.Drawable) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mThumbDrawable android.graphics.drawable.Drawable \l0x007b: INVOKE  (r4 I:android.graphics.Rect) = (r4 I:android.graphics.drawable.Drawable) android.support.v7.widget.DrawableUtils.getOpticalBounds(android.graphics.drawable.Drawable):android.graphics.Rect type: STATIC \l0x007f: IGET  (r5 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0081: INVOKE  (r1 I:int) = (r1 I:int), (r5 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x0085: IGET  (r4 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.right int \l0x0087: INVOKE  (r0 I:int) = (r0 I:int), (r4 I:int) java.lang.Math.max(int, int):int type: STATIC \l}"];
Node_23 [shape=record,label="{23\:\ 0x008b|0x008b: IGET  (r4 I:int) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mSwitchMinWidth int \l0x008d: IGET  (r5 I:int) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mThumbWidth int \l0x008f: ARITH  (r5 I:int) = (r5 I:int) * (2 int) \l0x0091: ARITH  (r5 I:int) = (r5 I:int) + (r1 I:int) \l0x0092: ARITH  (r5 I:int) = (r5 I:int) + (r0 I:int) \l0x0093: INVOKE  (r0 I:int) = (r4 I:int), (r5 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x0097: INVOKE  (r1 I:int) = (r2 I:int), (r3 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x009b: IPUT  (r0 I:int), (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mSwitchWidth int \l0x009d: IPUT  (r1 I:int), (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.mSwitchHeight int \l0x009f: INVOKE  \l  (r6 I:android.widget.CompoundButton)\l  (r7 I:int)\l  (r8 I:int)\l android.widget.CompoundButton.onMeasure(int, int):void type: SUPER \l0x00a2: INVOKE  (r7 I:int) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.getMeasuredHeight():int type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x00a6|0x00a6: IF  (r7 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:26:0x00af \l}"];
Node_25 [shape=record,label="{25\:\ 0x00a8|0x00a8: INVOKE  (r7 I:int) = (r6 I:android.support.v7.widget.SwitchCompat) android.support.v7.widget.SwitchCompat.getMeasuredWidthAndState():int type: VIRTUAL \l0x00ac: INVOKE  \l  (r6 I:android.support.v7.widget.SwitchCompat)\l  (r7 I:int)\l  (r1 I:int)\l android.support.v7.widget.SwitchCompat.setMeasuredDimension(int, int):void type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x00af|0x00af: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.SwitchCompat.onMeasure((r6 'this' I:android.support.v7.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
}

