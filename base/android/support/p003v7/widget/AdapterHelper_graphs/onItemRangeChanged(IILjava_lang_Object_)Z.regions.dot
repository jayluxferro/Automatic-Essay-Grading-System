digraph "CFG forandroid.support.v7.widget.AdapterHelper.onItemRangeChanged(IILjava\/lang\/Object;)Z" {
subgraph cluster_Region_402554314 {
label = "R(1:(2:(1:2)|(2:3|(2:(1:5)|(1:6)))))";
node [shape=record,color=blue];
subgraph cluster_Region_933649434 {
label = "R(2:(1:2)|(2:3|(2:(1:5)|(1:6))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_690182524 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r6 \< 1) goto L_0x0004\l}"];
subgraph cluster_Region_1896251855 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_368222728 {
label = "R(2:3|(2:(1:5)|(1:6)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0005|r4.mPendingUpdates.add(obtainUpdateOp(4, r5, r6, r7))\lr4.mExistingUpdateTypes \|= 4\l}"];
subgraph cluster_Region_280062496 {
label = "R(2:(1:5)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_594164211 {
label = "IF [B:4:0x001a] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001a|if (r4.mPendingUpdates.size() == 1) goto L_0x001c\l}"];
subgraph cluster_Region_1722272936 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001c|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1724240022 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
MethodNode[shape=record,label="{boolean android.support.v7.widget.AdapterHelper.onItemRangeChanged((r4v0 'this' android.support.v7.widget.AdapterHelper A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_0 -> Node_1;
}

