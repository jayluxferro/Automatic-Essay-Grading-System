digraph "CFG forandroid.support.v7.widget.AdapterHelper.dispatchFirstPassAndUpdateViewHolders(Landroid\/support\/v7\/widget\/AdapterHelper$UpdateOp;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v7.widget.AdapterHelper$Callback) = (r2 I:android.support.v7.widget.AdapterHelper) android.support.v7.widget.AdapterHelper.mCallback android.support.v7.widget.AdapterHelper$Callback \l0x0002: INVOKE  \l  (r0 I:android.support.v7.widget.AdapterHelper$Callback)\l  (r3 I:android.support.v7.widget.AdapterHelper$UpdateOp)\l android.support.v7.widget.AdapterHelper.Callback.onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp):void type: INTERFACE \l0x0005: IGET  (r0 I:int) = (r3 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.cmd int \l0x0007: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r0 I:android.support.v7.widget.AdapterHelper$Callback) = (r2 I:android.support.v7.widget.AdapterHelper) android.support.v7.widget.AdapterHelper.mCallback android.support.v7.widget.AdapterHelper$Callback \l0x000f: IGET  (r1 I:int) = (r3 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.itemCount int \l0x0011: IGET  (r3 I:java.lang.Object) = (r3 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.payload java.lang.Object \l0x0013: INVOKE  \l  (r0 I:android.support.v7.widget.AdapterHelper$Callback)\l  (r4 I:int)\l  (r1 I:int)\l  (r3 I:java.lang.Object)\l android.support.v7.widget.AdapterHelper.Callback.markViewHoldersUpdated(int, int, java.lang.Object):void type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0019: CONST_STR  (r4 I:java.lang.String) =  \"only remove and update ops can be dispatched in first pass\" \l0x001b: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: IGET  (r0 I:android.support.v7.widget.AdapterHelper$Callback) = (r2 I:android.support.v7.widget.AdapterHelper) android.support.v7.widget.AdapterHelper.mCallback android.support.v7.widget.AdapterHelper$Callback \l0x0021: IGET  (r3 I:int) = (r3 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.itemCount int \l0x0023: INVOKE  \l  (r0 I:android.support.v7.widget.AdapterHelper$Callback)\l  (r4 I:int)\l  (r3 I:int)\l android.support.v7.widget.AdapterHelper.Callback.offsetPositionsForRemovingInvisible(int, int):void type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.v7.widget.AdapterHelper.dispatchFirstPassAndUpdateViewHolders((r2 'this' I:android.support.v7.widget.AdapterHelper A[IMMUTABLE_TYPE, THIS]), (r3 I:android.support.v7.widget.AdapterHelper$UpdateOp A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

