digraph "CFG forandroid.support.v7.widget.AdapterHelper.dispatchFirstPassAndUpdateViewHolders(Landroid\/support\/v7\/widget\/AdapterHelper$UpdateOp;I)V" {
subgraph cluster_Region_1322054814 {
label = "R(2:0|(1:7)(1:(1:4)(1:6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.mCallback.onDispatchFirstPass(r3)\lint int r0 = r3.cmd\l}"];
subgraph cluster_IfRegion_63004390 {
label = "IF [B:1:0x0008] THEN: R(1:7) ELSE: R(1:(1:4)(1:6))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0 == 2) goto L_0x001f\l}"];
subgraph cluster_Region_1324379094 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001f|r2.mCallback.offsetPositionsForRemovingInvisible(r4, r3.itemCount)\l}"];
}
subgraph cluster_Region_1866705466 {
label = "R(1:(1:4)(1:6)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_368976055 {
label = "IF [B:3:0x000b] THEN: R(1:4) ELSE: R(1:6) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r0 == 4) goto L_0x000d\l}"];
subgraph cluster_Region_986496837 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|r2.mCallback.markViewHoldersUpdated(r4, r3.itemCount, r3.payload)\l}"];
}
subgraph cluster_Region_1471499905 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001e|throw new java.lang.IllegalArgumentException(\"only remove and update ops can be dispatched in first pass\")\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000a}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0017}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void android.support.v7.widget.AdapterHelper.dispatchFirstPassAndUpdateViewHolders((r2v0 'this' android.support.v7.widget.AdapterHelper A[IMMUTABLE_TYPE, THIS]), (r3v0 android.support.v7.widget.AdapterHelper$UpdateOp A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_7 -> Node_8;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_2 -> Node_3;
Node_5 -> Node_6;
}

