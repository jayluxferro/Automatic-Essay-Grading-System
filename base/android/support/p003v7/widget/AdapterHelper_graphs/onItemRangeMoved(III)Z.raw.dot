digraph "CFG forandroid.support.v7.widget.AdapterHelper.onItemRangeMoved(III)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0022 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IGET  (r7 I:java.util.ArrayList\<android.support.v7.widget.AdapterHelper$UpdateOp\>) = (r4 I:android.support.v7.widget.AdapterHelper) android.support.v7.widget.AdapterHelper.mPendingUpdates java.util.ArrayList \l0x0009: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: CONST  (r3 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x000c: INVOKE  (r5 I:android.support.v7.widget.AdapterHelper$UpdateOp) = \l  (r4 I:android.support.v7.widget.AdapterHelper)\l  (r3 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r2 I:java.lang.Object)\l android.support.v7.widget.AdapterHelper.obtainUpdateOp(int, int, int, java.lang.Object):android.support.v7.widget.AdapterHelper$UpdateOp type: VIRTUAL \l0x0010: INVOKE  (r7 I:java.util.ArrayList), (r5 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x0013: IGET  (r5 I:int) = (r4 I:android.support.v7.widget.AdapterHelper) android.support.v7.widget.AdapterHelper.mExistingUpdateTypes int \l0x0015: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) \| (r3 I:?[int, boolean, short, byte, char]) \l0x0016: IPUT  (r5 I:int), (r4 I:android.support.v7.widget.AdapterHelper) android.support.v7.widget.AdapterHelper.mExistingUpdateTypes int \l0x0018: IGET  (r5 I:java.util.ArrayList\<android.support.v7.widget.AdapterHelper$UpdateOp\>) = (r4 I:android.support.v7.widget.AdapterHelper) android.support.v7.widget.AdapterHelper.mPendingUpdates java.util.ArrayList \l0x001a: INVOKE  (r5 I:int) = (r5 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0021 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: RETURN  (r0 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: NEW_INSTANCE  (r5 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0024: CONST_STR  (r6 I:java.lang.String) =  \"Moving more than 1 item is not supported yet\" \l0x0026: INVOKE  \l  (r5 I:java.lang.IllegalArgumentException)\l  (r6 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{boolean android.support.v7.widget.AdapterHelper.onItemRangeMoved((r4 'this' I:android.support.v7.widget.AdapterHelper A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_9 -> Node_10;
}

