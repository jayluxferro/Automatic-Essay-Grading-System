digraph "CFG forandroid.support.v7.widget.AdapterHelper.dispatchAndUpdateViewHolders(Landroid\/support\/v7\/widget\/AdapterHelper$UpdateOp;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.cmd int \l0x0002: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x008d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r0 I:int) = (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.cmd int \l0x0007: CONST  (r2 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x008d \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IGET  (r0 I:int) = (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.positionStart int \l0x000d: IGET  (r2 I:int) = (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.cmd int \l0x000f: INVOKE  (r0 I:int) = \l  (r12 I:android.support.v7.widget.AdapterHelper)\l  (r0 I:int)\l  (r2 I:int)\l android.support.v7.widget.AdapterHelper.updatePositionWithPostponed(int, int):int type: DIRECT \l0x0013: IGET  (r2 I:int) = (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.positionStart int \l0x0015: IGET  (r3 I:int) = (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.cmd int \l0x0017: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0018: CONST  (r5 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0019: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0037 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0020 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0022: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0024: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0027: CONST_STR  (r2 I:java.lang.String) =  \"op should be remove or update.\" \l0x0029: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002c: INVOKE  (r1 I:java.lang.StringBuilder), (r13 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x002f: INVOKE  (r13 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0033: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r13 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|0x0036: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|0x0037: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0039: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003a: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x003b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x003c|0x003c: IGET  (r9 I:int) = (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.itemCount int \l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|0x003e: IF  (r0 I:?[int, byte, short, char]) \>= (r9 I:?[int, byte, short, char])  \-\> B:30:0x0079 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|0x0040: IGET  (r9 I:int) = (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.positionStart int \l0x0042: ARITH  (r10 I:int) = (r3 I:int) * (r0 I:int) \l0x0044: ARITH  (r9 I:int) = (r9 I:int) + (r10 I:int) \l0x0045: IGET  (r10 I:int) = (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.cmd int \l0x0047: INVOKE  (r9 I:int) = \l  (r12 I:android.support.v7.widget.AdapterHelper)\l  (r9 I:int)\l  (r10 I:int)\l android.support.v7.widget.AdapterHelper.updatePositionWithPostponed(int, int):int type: DIRECT \l0x004b: IGET  (r10 I:int) = (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.cmd int \l}"];
Node_15 [shape=record,label="{15\:\ 0x004d|0x004d: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0059 \l}"];
Node_16 [shape=record,label="{16\:\ 0x004f|0x004f: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0053 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0051|0x0051: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|0x0053: ARITH  (r10 I:int) = (r7 I:int) + (1 int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0055|0x0055: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0051 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0057|0x0057: CONST  (r10 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0059|0x0059: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0051 \l}"];
Node_23 [shape=record,label="{23\:\ 0x005c|0x005c: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0061 \l}"];
Node_24 [shape=record,label="{24\:\ 0x005e|0x005e: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0061|0x0061: IGET  (r10 I:int) = (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.cmd int \l0x0063: IGET  (r11 I:java.lang.Object) = (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.payload java.lang.Object \l0x0065: INVOKE  (r7 I:android.support.v7.widget.AdapterHelper$UpdateOp) = \l  (r12 I:android.support.v7.widget.AdapterHelper)\l  (r10 I:int)\l  (r7 I:int)\l  (r2 I:int)\l  (r11 I:java.lang.Object)\l android.support.v7.widget.AdapterHelper.obtainUpdateOp(int, int, int, java.lang.Object):android.support.v7.widget.AdapterHelper$UpdateOp type: VIRTUAL \l0x0069: INVOKE  \l  (r12 I:android.support.v7.widget.AdapterHelper)\l  (r7 I:android.support.v7.widget.AdapterHelper$UpdateOp)\l  (r8 I:int)\l android.support.v7.widget.AdapterHelper.dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp, int):void type: VIRTUAL \l0x006c: INVOKE  \l  (r12 I:android.support.v7.widget.AdapterHelper)\l  (r7 I:android.support.v7.widget.AdapterHelper$UpdateOp)\l android.support.v7.widget.AdapterHelper.recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp):void type: VIRTUAL \l0x006f: IGET  (r7 I:int) = (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.cmd int \l}"];
Node_26 [shape=record,label="{26\:\ 0x0071|0x0071: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0074 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0073|0x0073: ARITH  (r8 I:int) = (r8 I:int) + (r2 I:int) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0074|0x0074: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0075: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0076|0x0076: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0079|0x0079: IGET  (r0 I:java.lang.Object) = (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.payload java.lang.Object \l0x007b: INVOKE  \l  (r12 I:android.support.v7.widget.AdapterHelper)\l  (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp)\l android.support.v7.widget.AdapterHelper.recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp):void type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x007e|0x007e: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:33:0x008c \l}"];
Node_32 [shape=record,label="{32\:\ 0x0080|0x0080: IGET  (r13 I:int) = (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp) android.support.v7.widget.AdapterHelper.UpdateOp.cmd int \l0x0082: INVOKE  (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp) = \l  (r12 I:android.support.v7.widget.AdapterHelper)\l  (r13 I:int)\l  (r7 I:int)\l  (r2 I:int)\l  (r0 I:java.lang.Object)\l android.support.v7.widget.AdapterHelper.obtainUpdateOp(int, int, int, java.lang.Object):android.support.v7.widget.AdapterHelper$UpdateOp type: VIRTUAL \l0x0086: INVOKE  \l  (r12 I:android.support.v7.widget.AdapterHelper)\l  (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp)\l  (r8 I:int)\l android.support.v7.widget.AdapterHelper.dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp, int):void type: VIRTUAL \l0x0089: INVOKE  \l  (r12 I:android.support.v7.widget.AdapterHelper)\l  (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp)\l android.support.v7.widget.AdapterHelper.recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp):void type: VIRTUAL \l}"];
Node_33 [shape=record,label="{33\:\ 0x008c|0x008c: RETURN   \l}"];
Node_34 [shape=record,label="{34\:\ 0x008d|0x008d: NEW_INSTANCE  (r13 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x008f: CONST_STR  (r0 I:java.lang.String) =  \"should not dispatch add or move for pre layout\" \l0x0091: INVOKE  \l  (r13 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_35 [shape=record,label="{35\:\ 0x0094|0x0094: THROW  (r13 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void android.support.v7.widget.AdapterHelper.dispatchAndUpdateViewHolders((r12 'this' I:android.support.v7.widget.AdapterHelper A[IMMUTABLE_TYPE, THIS]), (r13 I:android.support.v7.widget.AdapterHelper$UpdateOp A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_34;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_34;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_30;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_17;
Node_19 -> Node_20[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_17;
Node_21 -> Node_20[style=dashed];
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_29;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_12;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_34 -> Node_35;
}

