digraph "CFG forandroid.support.v7.widget.AdapterHelper.findPositionOffset(II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r4.mPostponedList.size()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lPHI: r5 r6 \l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:0:0x0000, B:24:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 int) = (r6v0 int), (r6v2 int) binds: [B:0:0x0000, B:24:0x0048] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:24:0x0048\l|if (r6 \>= r0) goto L_0x004b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|android.support.v7.widget.AdapterHelper$UpdateOp r1 = r4.mPostponedList.get(r6)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|if (r1.cmd != 8) goto L_0x002a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016}"];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r1.positionStart != r5) goto L_0x001d\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|int r5 = r1.itemCount\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d}"];
Node_8 [shape=record,label="{8\:\ 0x001f|if (r1.positionStart \>= r5) goto L_0x0023\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|int r5 = r5 + \-1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|PHI: r5 \l  PHI: (r5v6 int) = (r5v1 int), (r5v8 int) binds: [B:8:0x001f, B:9:0x0021] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|if (r1.itemCount \> r5) goto L_0x0048\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|int r5 = r5 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a}"];
Node_14 [shape=record,label="{14\:\ 0x002c|if (r1.positionStart \> r5) goto L_0x0048\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e}"];
Node_16 [shape=record,label="{16\:\ 0x0031|if (r1.cmd != 2) goto L_0x0040\l}"];
Node_17 [shape=record,label="{17\:\ 0x0033}"];
Node_18 [shape=record,label="{18\:\ 0x0038|if (r5 \>= (r1.positionStart + r1.itemCount)) goto L_0x003c\l}"];
Node_19 [shape=record,label="{19\:\ 0x003a|RETURN\l|return \-1\l}"];
Node_20 [shape=record,label="{20\:\ 0x003c|int r5 = r5 \- r1.itemCount\l}"];
Node_21 [shape=record,label="{21\:\ 0x0040}"];
Node_22 [shape=record,label="{22\:\ 0x0043|if (r1.cmd != 1) goto L_0x0048\l}"];
Node_23 [shape=record,label="{23\:\ 0x0045|int r5 = r5 + r1.itemCount\l}"];
Node_24 [shape=record,label="{24\:\ 0x0048|LOOP_END\lPHI: r5 \l  PHI: (r5v2 int) = (r5v1 int), (r5v1 int), (r5v3 int), (r5v5 int), (r5v6 int), (r5v7 int), (r5v9 int) binds: [B:32:0x0048, B:34:0x0048, B:28:0x0048, B:33:0x0048, B:30:0x0048, B:31:0x0048, B:29:0x0048] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:24:0x0048\l|int r6 = r6 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x004b|RETURN\l|return r5\l}"];
Node_26 [shape=record,label="{26\:\ 0x004b|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x003a|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0048|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0048|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0048|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0048|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0048|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0048|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0048|SYNTHETIC\l}"];
MethodNode[shape=record,label="{int android.support.v7.widget.AdapterHelper.findPositionOffset((r4v0 'this' android.support.v7.widget.AdapterHelper A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_26;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_29;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_30;
Node_12 -> Node_31;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_32;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_18 -> Node_27[style=dashed];
Node_20 -> Node_33;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_34;
Node_23 -> Node_28;
Node_24 -> Node_1;
Node_26 -> Node_25;
Node_27 -> Node_19;
Node_28 -> Node_24;
Node_29 -> Node_24;
Node_30 -> Node_24;
Node_31 -> Node_24;
Node_32 -> Node_24;
Node_33 -> Node_24;
Node_34 -> Node_24;
}

