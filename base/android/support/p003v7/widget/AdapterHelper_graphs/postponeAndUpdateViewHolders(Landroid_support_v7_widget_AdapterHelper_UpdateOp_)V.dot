digraph "CFG forandroid.support.v7.widget.AdapterHelper.postponeAndUpdateViewHolders(Landroid\/support\/v7\/widget\/AdapterHelper$UpdateOp;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3.mPostponedList.add(r4)\lint r0 = r4.cmd\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0 == 4) goto L_0x0046\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r0 == 8) goto L_0x003c\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|switch(r0) \{\l    case 1: goto L_0x0032;\l    case 2: goto L_0x0028;\l    default: goto L_0x0011;\l\}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Unknown update op type for \")\lr1.append(r4)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|r3.mCallback.offsetPositionsForRemovingLaidOutOrNewView(r4.positionStart, r4.itemCount)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|r3.mCallback.offsetPositionsForAdd(r4.positionStart, r4.itemCount)\l}"];
Node_9 [shape=record,label="{9\:\ 0x003c|r3.mCallback.offsetPositionsForMove(r4.positionStart, r4.itemCount)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0046|r3.mCallback.markViewHoldersUpdated(r4.positionStart, r4.itemCount, r4.payload)\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.v7.widget.AdapterHelper.postponeAndUpdateViewHolders((r3v0 'this' android.support.v7.widget.AdapterHelper A[IMMUTABLE_TYPE, THIS]), (r4v0 android.support.v7.widget.AdapterHelper$UpdateOp A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_7 -> Node_12;
Node_8 -> Node_13;
Node_9 -> Node_14;
Node_10 -> Node_11;
}

