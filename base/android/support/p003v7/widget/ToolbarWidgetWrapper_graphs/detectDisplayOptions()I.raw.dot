digraph "CFG forandroid.support.v7.widget.ToolbarWidgetWrapper.detectDisplayOptions()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v7.widget.Toolbar) = (r2 I:android.support.v7.widget.ToolbarWidgetWrapper) android.support.v7.widget.ToolbarWidgetWrapper.mToolbar android.support.v7.widget.Toolbar \l0x0002: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r0 I:android.support.v7.widget.Toolbar) android.support.v7.widget.Toolbar.getNavigationIcon():android.graphics.drawable.Drawable type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST  (r0 I:?[int, float, short, byte, char]) = (15 ?[int, float, short, byte, char]) \l0x000a: IGET  (r1 I:android.support.v7.widget.Toolbar) = (r2 I:android.support.v7.widget.ToolbarWidgetWrapper) android.support.v7.widget.ToolbarWidgetWrapper.mToolbar android.support.v7.widget.Toolbar \l0x000c: INVOKE  (r1 I:android.graphics.drawable.Drawable) = (r1 I:android.support.v7.widget.Toolbar) android.support.v7.widget.Toolbar.getNavigationIcon():android.graphics.drawable.Drawable type: VIRTUAL \l0x0010: IPUT  \l  (r1 I:android.graphics.drawable.Drawable)\l  (r2 I:android.support.v7.widget.ToolbarWidgetWrapper)\l android.support.v7.widget.ToolbarWidgetWrapper.mDefaultNavigationIcon android.graphics.drawable.Drawable \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: CONST  (r0 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{private int android.support.v7.widget.ToolbarWidgetWrapper.detectDisplayOptions((r2 'this' I:android.support.v7.widget.ToolbarWidgetWrapper A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

