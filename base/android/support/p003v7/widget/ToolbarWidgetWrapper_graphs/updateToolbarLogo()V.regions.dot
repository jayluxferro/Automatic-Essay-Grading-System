digraph "CFG forandroid.support.v7.widget.ToolbarWidgetWrapper.updateToolbarLogo()V" {
subgraph cluster_Region_1210057132 {
label = "R(2:(1:3)(1:9)|10) | DECL_VAR: android.graphics.drawable.Drawable null\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1961962327 {
label = "IF [B:1:0x0004] THEN: R(1:3) ELSE: R(1:9)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if ((r2.mDisplayOpts & 2) != 0) goto L_0x0006\l}"];
subgraph cluster_Region_1817560842 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|android.graphics.drawable.Drawable r0 = (r2.mDisplayOpts & 1) != 0 ? r2.mLogo != null ? r2.mLogo : r2.mIcon : r2.mIcon\l}"];
}
subgraph cluster_Region_624714701 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0019|r0 = null\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x001a|PHI: r0 \l  PHI: (r0v2 android.graphics.drawable.Drawable) = (r0v3 android.graphics.drawable.Drawable), (r0v9 android.graphics.drawable.Drawable) binds: [B:9:0x0019, B:6:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|r2.mToolbar.setLogo(r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000c}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000e}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0010}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0013}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0016}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001f}"];
MethodNode[shape=record,label="{private void android.support.v7.widget.ToolbarWidgetWrapper.updateToolbarLogo((r2v0 'this' android.support.v7.widget.ToolbarWidgetWrapper A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_9[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_10;
Node_7 -> Node_10;
Node_8 -> Node_10;
}

