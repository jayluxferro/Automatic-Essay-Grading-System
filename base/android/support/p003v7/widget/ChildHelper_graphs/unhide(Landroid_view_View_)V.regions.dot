digraph "CFG forandroid.support.v7.widget.ChildHelper.unhide(Landroid\/view\/View;)V" {
subgraph cluster_Region_443247866 {
label = "R(2:0|(2:8|9)(1:(1:4)(2:6|7)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r3.mCallback.indexOfChild(r4)\l}"];
subgraph cluster_IfRegion_2041967693 {
label = "IF [B:1:0x0006] THEN: R(2:8|9) ELSE: R(1:(1:4)(2:6|7))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r0 \< 0) goto L_0x0030\l}"];
subgraph cluster_Region_2108823282 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0030}"];
Node_9 [shape=record,label="{9\:\ 0x0046|throw new java.lang.IllegalArgumentException(\"view is not a child, cannot hide \" + r4)\l}"];
}
subgraph cluster_Region_1790565073 {
label = "R(1:(1:4)(2:6|7)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1329452838 {
label = "IF [B:3:0x000e] THEN: R(1:4) ELSE: R(2:6|7) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r3.mBucket.get(r0) == true) goto L_0x0010\l}"];
subgraph cluster_Region_1650036058 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|r3.mBucket.clear(r0)\lunhideViewInternal(r4)\l}"];
}
subgraph cluster_Region_799703162 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0019}"];
Node_7 [shape=record,label="{7\:\ 0x002f|throw new java.lang.RuntimeException(\"trying to unhide a view that was not hidden\" + r4)\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0018}"];
MethodNode[shape=record,label="{void android.support.v7.widget.ChildHelper.unhide((r3v0 'this' android.support.v7.widget.ChildHelper A[IMMUTABLE_TYPE, THIS]), (r4v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_8 -> Node_9;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_2 -> Node_3;
}

