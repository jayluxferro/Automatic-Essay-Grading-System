digraph "CFG forandroid.support.v7.widget.ChildHelper.findHiddenNonRemovedView(I)Landroid\/view\/View;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r5.mHiddenViews.size()\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:9:0x002a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:9:0x002a\l|if (r1 \>= r0) goto L_0x002d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|android.view.View r2 = r5.mHiddenViews.get(r1)\landroid.support.v7.widget.RecyclerView$ViewHolder r3 = r5.mCallback.getChildViewHolder(r2)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|if (r3.getLayoutPosition() != r6) goto L_0x002a\l}"];
Node_4 [shape=record,label="{4\:\ 0x001d}"];
Node_5 [shape=record,label="{5\:\ 0x0021|if (r3.isInvalid() != false) goto L_0x002a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0023}"];
Node_7 [shape=record,label="{7\:\ 0x0027|if (r3.isRemoved() != false) goto L_0x002a\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|RETURN\l|return r2\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|LOOP_END\lLOOP:0: B:1:0x0007\-\>B:9:0x002a\l|int r1 = r1 + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|RETURN\l|return null\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{android.view.View android.support.v7.widget.ChildHelper.findHiddenNonRemovedView((r5v0 'this' android.support.v7.widget.ChildHelper A[IMMUTABLE_TYPE, THIS]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_12[style=dashed];
Node_7 -> Node_15;
Node_9 -> Node_1;
Node_11 -> Node_10;
Node_12 -> Node_8;
Node_13 -> Node_9;
Node_14 -> Node_9;
Node_15 -> Node_9;
}

