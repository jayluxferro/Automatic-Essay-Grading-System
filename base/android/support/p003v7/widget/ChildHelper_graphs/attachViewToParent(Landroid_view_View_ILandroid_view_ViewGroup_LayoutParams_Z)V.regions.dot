digraph "CFG forandroid.support.v7.widget.ChildHelper.attachViewToParent(Landroid\/view\/View;ILandroid\/view\/ViewGroup$LayoutParams;Z)V" {
subgraph cluster_Region_1981202190 {
label = "R(4:(1:1)(1:2)|3|(1:5)|6) | DECL_VAR: int null\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1336968918 {
label = "IF [B:0:0x0000] THEN: R(1:1) ELSE: R(1:2)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r3 \< 0) goto L_0x0002\l}"];
subgraph cluster_Region_461542215 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|int r3 = r1.mCallback.getChildCount()\l}"];
}
subgraph cluster_Region_1237970144 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|int r3 = getOffset(r3)\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x000d|PHI: r3 \l  PHI: (r3v1 int) = (r3v2 int), (r3v4 int) binds: [B:2:0x0009, B:1:0x0002] A[DONT_GENERATE, DONT_INLINE]\l|r1.mBucket.insert(r3, r5)\l}"];
subgraph cluster_IfRegion_227423503 {
label = "IF [B:4:0x0012] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012|if (r5 == true) goto L_0x0014\l}"];
subgraph cluster_Region_631591505 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|hideViewInternal(r2)\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0017|r1.mCallback.attachViewToParent(r2, r3, r4)\l}"];
}
Node_7 [shape=record,color=red,label="{7\:\ 0x001c}"];
MethodNode[shape=record,label="{void android.support.v7.widget.ChildHelper.attachViewToParent((r1v0 'this' android.support.v7.widget.ChildHelper A[IMMUTABLE_TYPE, THIS]), (r2v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.view.ViewGroup$LayoutParams A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
}

