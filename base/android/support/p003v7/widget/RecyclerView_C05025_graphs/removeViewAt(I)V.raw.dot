digraph "CFG forandroid.support.v7.widget.RecyclerView.5.removeViewAt(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v7.widget.RecyclerView) = (r2 I:android.support.v7.widget.RecyclerView$5) android.support.v7.widget.RecyclerView.5.this$0 android.support.v7.widget.RecyclerView \l0x0002: INVOKE  (r0 I:android.view.View) = (r0 I:android.support.v7.widget.RecyclerView), (r3 I:int) android.support.v7.widget.RecyclerView.getChildAt(int):android.view.View type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r1 I:android.support.v7.widget.RecyclerView) = (r2 I:android.support.v7.widget.RecyclerView$5) android.support.v7.widget.RecyclerView.5.this$0 android.support.v7.widget.RecyclerView \l0x000a: INVOKE  \l  (r1 I:android.support.v7.widget.RecyclerView)\l  (r0 I:android.view.View)\l android.support.v7.widget.RecyclerView.dispatchChildDetached(android.view.View):void type: VIRTUAL \l0x000d: INVOKE  (r0 I:android.view.View) android.view.View.clearAnimation():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IGET  (r0 I:android.support.v7.widget.RecyclerView) = (r2 I:android.support.v7.widget.RecyclerView$5) android.support.v7.widget.RecyclerView.5.this$0 android.support.v7.widget.RecyclerView \l0x0012: INVOKE  (r0 I:android.support.v7.widget.RecyclerView), (r3 I:int) android.support.v7.widget.RecyclerView.removeViewAt(int):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.RecyclerView.5.removeViewAt((r2 'this' I:android.support.v7.widget.RecyclerView$5 A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

