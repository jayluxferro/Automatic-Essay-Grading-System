digraph "CFG forandroid.support.v7.widget.LinearSmoothScroller.calculateTimeForDeceleration(I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r5 I:int) = \l  (r4 I:android.support.v7.widget.LinearSmoothScroller)\l  (r5 I:int)\l android.support.v7.widget.LinearSmoothScroller.calculateTimeForScrolling(int):int type: VIRTUAL \l0x0004: CAST  (r0 I:double) = (double) (r5 I:int) \l0x0005: CONST  (r2 I:?[long, double]) = \l  (4599717252057688074(0x3fd57a786c22680a, double:0.3356) ?[long, double])\l \l0x000a: ARITH  (r0 I:double) = (r0 I:double) \/ (r2 I:double) \l0x000b: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x000f: CAST  (r5 I:int) = (int) (r0 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: RETURN  (r5 I:int) \l}"];
MethodNode[shape=record,label="{protected int android.support.v7.widget.LinearSmoothScroller.calculateTimeForDeceleration((r4 'this' I:android.support.v7.widget.LinearSmoothScroller A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

