digraph "CFG forandroid.support.v7.widget.LinearSmoothScroller.calculateDyToMakeVisible(Landroid\/view\/View;I)I" {
subgraph cluster_Region_1353001409 {
label = "R(2:0|(2:(1:7)|(2:4|5)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.support.v7.widget.RecyclerView$LayoutManager android.support.p003v7.widget.RecyclerView.LayoutManager r0 = getLayoutManager()\l}"];
subgraph cluster_Region_441638728 {
label = "R(2:(1:7)|(2:4|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2022980242 {
label = "IF [B:1:0x0004, B:3:0x000a] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 == null) goto L_?\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|ADDED_TO_REGION\l|if (r0.canScrollVertically() == false) goto L_?\l}"];
subgraph cluster_Region_1169395607 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_2085265033 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|android.support.v7.widget.RecyclerView$LayoutParams android.support.p003v7.widget.RecyclerView.LayoutParams r1 = (android.support.p003v7.widget.RecyclerView.LayoutParams) r11.getLayoutParams()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0037|RETURN\l|return calculateDtToFit(r0.getDecoratedTop(r11) \- r1.topMargin, r0.getDecoratedBottom(r11) + r1.bottomMargin, r0.getPaddingTop(), r0.getHeight() \- r0.getPaddingBottom(), r12)\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return 0\l}"];
MethodNode[shape=record,label="{public int android.support.v7.widget.LinearSmoothScroller.calculateDyToMakeVisible((r10v0 'this' android.support.v7.widget.LinearSmoothScroller A[IMMUTABLE_TYPE, THIS]), (r11v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_2 -> Node_3;
}

