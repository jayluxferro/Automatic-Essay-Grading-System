digraph "CFG forandroid.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.invalidateFullSpansAfter(I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem\>) = \l  (r4 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup)\l android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.mFullSpanItems java.util.List \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r1 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r0 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) = \l  (r4 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup)\l  (r5 I:int)\l android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.getFullSpanItem(int):android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0011 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IGET  (r2 I:java.util.List\<android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem\>) = \l  (r4 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup)\l android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.mFullSpanItems java.util.List \l0x000e: INVOKE  (r2 I:java.util.List), (r0 I:java.lang.Object) java.util.List.remove(java.lang.Object):boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: IGET  (r0 I:java.util.List\<android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem\>) = \l  (r4 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup)\l android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.mFullSpanItems java.util.List \l0x0013: INVOKE  (r0 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0017: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:12:0x002a \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IGET  (r3 I:java.util.List\<android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem\>) = \l  (r4 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup)\l android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.mFullSpanItems java.util.List \l0x001c: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0020: CHECK_CAST  (r3 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) = (android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) (r3 I:?[OBJECT, ARRAY]) \l0x0022: IGET  (r3 I:int) = \l  (r3 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem)\l android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.FullSpanItem.mPosition int \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: IF  (r3 I:?[int, byte, short, char]) \< (r5 I:?[int, byte, short, char])  \-\> B:11:0x0027 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x003d \l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|0x002d: IGET  (r5 I:java.util.List\<android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem\>) = \l  (r4 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup)\l android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.mFullSpanItems java.util.List \l0x002f: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0033: CHECK_CAST  (r5 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) = (android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) (r5 I:?[OBJECT, ARRAY]) \l0x0035: IGET  (r0 I:java.util.List\<android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem\>) = \l  (r4 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup)\l android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.mFullSpanItems java.util.List \l0x0037: INVOKE  (r0 I:java.util.List), (r2 I:int) java.util.List.remove(int):java.lang.Object type: INTERFACE \l0x003a: IGET  (r5 I:int) = \l  (r5 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem)\l android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.FullSpanItem.mPosition int \l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|0x003c: RETURN  (r5 I:int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|0x003d: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{private int android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.invalidateFullSpansAfter((r4 'this' I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_13[style=dashed];
Node_11 -> Node_7;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
}

