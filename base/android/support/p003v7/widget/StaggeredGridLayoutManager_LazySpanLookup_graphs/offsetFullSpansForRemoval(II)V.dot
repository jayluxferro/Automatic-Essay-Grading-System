digraph "CFG forandroid.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.offsetFullSpansForRemoval(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4.mFullSpanItems != null) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|int r0 = r5 + r6\lint r1 = r4.mFullSpanItems.size() + \-1\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|LOOP_START\lPHI: r1 \l  PHI: (r1v3 int) = (r1v2 int), (r1v4 int) binds: [B:3:0x0005, B:11:0x002d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000f\-\>B:11:0x002d\l|if (r1 \< 0) goto L_0x0030\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem r2 = r4.mFullSpanItems.get(r1)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|if (r2.mPosition \>= r5) goto L_0x001e\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e}"];
Node_8 [shape=record,label="{8\:\ 0x0020|if (r2.mPosition \>= r0) goto L_0x0028\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|r4.mFullSpanItems.remove(r1)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|r2.mPosition = r2.mPosition \- r6\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|LOOP_END\lLOOP:0: B:4:0x000f\-\>B:11:0x002d\l|int r1 = r1 + \-1\l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x002d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.offsetFullSpansForRemoval((r4v0 'this' android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_16[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_15;
Node_10 -> Node_14;
Node_11 -> Node_4;
Node_13 -> Node_12;
Node_14 -> Node_11;
Node_15 -> Node_11;
Node_16 -> Node_11;
}

