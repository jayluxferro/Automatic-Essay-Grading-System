digraph "CFG forandroid.support.v7.widget.RecyclerView.AdapterDataObservable.notifyItemMoved(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.ArrayList) = \l  (r3 I:android.support.v7.widget.RecyclerView$AdapterDataObservable)\l android.support.v7.widget.RecyclerView.AdapterDataObservable.mObservers java.util.ArrayList \l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0006: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:3:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r2 I:java.util.ArrayList) = \l  (r3 I:android.support.v7.widget.RecyclerView$AdapterDataObservable)\l android.support.v7.widget.RecyclerView.AdapterDataObservable.mObservers java.util.ArrayList \l0x000c: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.ArrayList), (r0 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0010: CHECK_CAST  (r2 I:android.support.v7.widget.RecyclerView$AdapterDataObserver) = (android.support.v7.widget.RecyclerView$AdapterDataObserver) (r2 I:?[OBJECT, ARRAY]) \l0x0012: INVOKE  \l  (r2 I:android.support.v7.widget.RecyclerView$AdapterDataObserver)\l  (r4 I:int)\l  (r5 I:int)\l  (r1 I:int)\l android.support.v7.widget.RecyclerView.AdapterDataObserver.onItemRangeMoved(int, int, int):void type: VIRTUAL \l0x0015: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.RecyclerView.AdapterDataObservable.notifyItemMoved((r3 'this' I:android.support.v7.widget.RecyclerView$AdapterDataObservable A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

