digraph "CFG forandroid.support.v7.widget.SearchView.SearchAutoComplete.onKeyPreIme(ILandroid\/view\/KeyEvent;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x003f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: INVOKE  (r0 I:int) = (r4 I:android.view.KeyEvent) android.view.KeyEvent.getAction():int type: VIRTUAL \l0x0007: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001a \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r0 I:int) = (r4 I:android.view.KeyEvent) android.view.KeyEvent.getRepeatCount():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: INVOKE  (r3 I:android.view.KeyEvent$DispatcherState) = \l  (r2 I:android.support.v7.widget.SearchView$SearchAutoComplete)\l android.support.v7.widget.SearchView.SearchAutoComplete.getKeyDispatcherState():android.view.KeyEvent$DispatcherState type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0019 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: INVOKE  \l  (r3 I:android.view.KeyEvent$DispatcherState)\l  (r4 I:android.view.KeyEvent)\l  (r2 I:java.lang.Object)\l android.view.KeyEvent.DispatcherState.startTracking(android.view.KeyEvent, java.lang.Object):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: RETURN  (r1 I:boolean) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: INVOKE  (r0 I:int) = (r4 I:android.view.KeyEvent) android.view.KeyEvent.getAction():int type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x003f \l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: INVOKE  (r0 I:android.view.KeyEvent$DispatcherState) = \l  (r2 I:android.support.v7.widget.SearchView$SearchAutoComplete)\l android.support.v7.widget.SearchView.SearchAutoComplete.getKeyDispatcherState():android.view.KeyEvent$DispatcherState type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|0x0024: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0029 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0026|0x0026: INVOKE  \l  (r0 I:android.view.KeyEvent$DispatcherState)\l  (r4 I:android.view.KeyEvent)\l android.view.KeyEvent.DispatcherState.handleUpEvent(android.view.KeyEvent):void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|0x0029: INVOKE  (r0 I:boolean) = (r4 I:android.view.KeyEvent) android.view.KeyEvent.isTracking():boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x002d|0x002d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x003f \l}"];
Node_17 [shape=record,label="{17\:\ 0x002f|0x002f: INVOKE  (r0 I:boolean) = (r4 I:android.view.KeyEvent) android.view.KeyEvent.isCanceled():boolean type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0033|0x0033: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x003f \l}"];
Node_19 [shape=record,label="{19\:\ 0x0035|0x0035: IGET  (r3 I:android.support.v7.widget.SearchView) = \l  (r2 I:android.support.v7.widget.SearchView$SearchAutoComplete)\l android.support.v7.widget.SearchView.SearchAutoComplete.mSearchView android.support.v7.widget.SearchView \l0x0037: INVOKE  (r3 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.clearFocus():void type: VIRTUAL \l0x003a: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003b: INVOKE  \l  (r2 I:android.support.v7.widget.SearchView$SearchAutoComplete)\l  (r3 I:boolean)\l android.support.v7.widget.SearchView.SearchAutoComplete.setImeVisibility(boolean):void type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x003e|0x003e: RETURN  (r1 I:boolean) \l}"];
Node_21 [shape=record,label="{21\:\ 0x003f|0x003f: INVOKE  (r3 I:boolean) = \l  (r2 I:android.support.v7.widget.AppCompatAutoCompleteTextView)\l  (r3 I:int)\l  (r4 I:android.view.KeyEvent)\l android.support.v7.widget.AppCompatAutoCompleteTextView.onKeyPreIme(int, android.view.KeyEvent):boolean type: SUPER \l}"];
Node_22 [shape=record,label="{22\:\ 0x0043|0x0043: RETURN  (r3 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.v7.widget.SearchView.SearchAutoComplete.onKeyPreIme((r2 'this' I:android.support.v7.widget.SearchView$SearchAutoComplete A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.view.KeyEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_21 -> Node_22;
}

