digraph "CFG forandroid.support.v7.widget.ActionBarContainer.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r3.mActionBarView != null) goto L_0x001e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (android.view.View.MeasureSpec.getMode(r5) != Integer.MIN_VALUE) goto L_0x001e\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r3.mHeight \< 0) goto L_0x001e\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|int r5 = android.view.View.MeasureSpec.makeMeasureSpec(java.lang.Math.min(r3.mHeight, android.view.View.MeasureSpec.getSize(r5)), Integer.MIN_VALUE)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|PHI: r5 \l  PHI: (r5v1 int) = (r5v0 int), (r5v0 int), (r5v0 int), (r5v5 int) binds: [B:1:0x0004, B:3:0x000a, B:5:0x000e, B:6:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|super.onMeasure(r4, r5)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|if (r3.mActionBarView != null) goto L_0x0026\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|int r4 = android.view.View.MeasureSpec.getMode(r5)\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|if (r3.mTabContainer == null) goto L_?\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e}"];
Node_13 [shape=record,label="{13\:\ 0x0036|if (r3.mTabContainer.getVisibility() == 8) goto L_?\l}"];
Node_14 [shape=record,label="{14\:\ 0x0038}"];
Node_15 [shape=record,label="{15\:\ 0x003a|if (r4 == 1073741824) goto L_?\l}"];
Node_16 [shape=record,label="{16\:\ 0x003c}"];
Node_17 [shape=record,label="{17\:\ 0x0042|if (isCollapsed(r3.mActionBarView) != false) goto L_0x004b\l}"];
Node_18 [shape=record,label="{18\:\ 0x0044|int r0 = getMeasuredHeightWithMargins(r3.mActionBarView)\l}"];
Node_19 [shape=record,label="{19\:\ 0x004b}"];
Node_20 [shape=record,label="{20\:\ 0x0051|if (isCollapsed(r3.mContextView) != false) goto L_0x005a\l}"];
Node_21 [shape=record,label="{21\:\ 0x0053|int r0 = getMeasuredHeightWithMargins(r3.mContextView)\l}"];
Node_22 [shape=record,label="{22\:\ 0x005a|r0 = 0\l}"];
Node_23 [shape=record,label="{23\:\ 0x005b|PHI: r0 \l  PHI: (r0v7 int) = (r0v11 int), (r0v13 int), (r0v15 int) binds: [B:22:0x005a, B:21:0x0053, B:18:0x0044] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 != Integer.MIN_VALUE) goto L_0x0062\l}"];
Node_24 [shape=record,label="{24\:\ 0x005d|int r4 = android.view.View.MeasureSpec.getSize(r5)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0062|r4 = Integer.MAX_VALUE\l}"];
Node_26 [shape=record,label="{26\:\ 0x0065|PHI: r4 \l  PHI: (r4v3 int) = (r4v5 int), (r4v6 int) binds: [B:25:0x0062, B:24:0x005d] A[DONT_GENERATE, DONT_INLINE]\l|setMeasuredDimension(getMeasuredWidth(), java.lang.Math.min(r0 + getMeasuredHeightWithMargins(r3.mTabContainer), r4))\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.ActionBarContainer.onMeasure((r3v0 'this' android.support.v7.widget.ActionBarContainer A[IMMUTABLE_TYPE, THIS]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_28;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_29;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_30;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
}

