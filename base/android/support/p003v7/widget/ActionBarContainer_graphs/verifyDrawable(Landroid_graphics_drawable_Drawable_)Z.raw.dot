digraph "CFG forandroid.support.v7.widget.ActionBarContainer.verifyDrawable(Landroid\/graphics\/drawable\/Drawable;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable) = (r1 I:android.support.v7.widget.ActionBarContainer) android.support.v7.widget.ActionBarContainer.mBackground android.graphics.drawable.Drawable \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:boolean) = (r1 I:android.support.v7.widget.ActionBarContainer) android.support.v7.widget.ActionBarContainer.mIsSplit boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x001e \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r0 I:android.graphics.drawable.Drawable) = (r1 I:android.support.v7.widget.ActionBarContainer) android.support.v7.widget.ActionBarContainer.mStackedBackground android.graphics.drawable.Drawable \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0010 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IGET  (r0 I:boolean) = (r1 I:android.support.v7.widget.ActionBarContainer) android.support.v7.widget.ActionBarContainer.mIsStacked boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x001e \l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: IGET  (r0 I:android.graphics.drawable.Drawable) = (r1 I:android.support.v7.widget.ActionBarContainer) android.support.v7.widget.ActionBarContainer.mSplitBackground android.graphics.drawable.Drawable \l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0018 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|0x0014: IGET  (r0 I:boolean) = (r1 I:android.support.v7.widget.ActionBarContainer) android.support.v7.widget.ActionBarContainer.mIsSplit boolean \l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x001e \l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|0x0018: INVOKE  (r2 I:boolean) = \l  (r1 I:android.widget.FrameLayout)\l  (r2 I:android.graphics.drawable.Drawable)\l android.widget.FrameLayout.verifyDrawable(android.graphics.drawable.Drawable):boolean type: SUPER \l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|0x001c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0020 \l}"];
Node_14 [shape=record,label="{14\:\ 0x001e|0x001e: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0020|0x0020: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0021|0x0021: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{protected boolean android.support.v7.widget.ActionBarContainer.verifyDrawable((r1 'this' I:android.support.v7.widget.ActionBarContainer A[IMMUTABLE_TYPE, THIS]), (r2 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
}

