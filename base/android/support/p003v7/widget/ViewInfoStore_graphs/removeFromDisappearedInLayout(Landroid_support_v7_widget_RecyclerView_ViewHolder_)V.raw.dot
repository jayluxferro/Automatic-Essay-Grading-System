digraph "CFG forandroid.support.v7.widget.ViewInfoStore.removeFromDisappearedInLayout(Landroid\/support\/v7\/widget\/RecyclerView$ViewHolder;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v4.util.ArrayMap\<android.support.v7.widget.RecyclerView$ViewHolder, android.support.v7.widget.ViewInfoStore$InfoRecord\>) = (r1 I:android.support.v7.widget.ViewInfoStore) android.support.v7.widget.ViewInfoStore.mLayoutHolderMap android.support.v4.util.ArrayMap \l0x0002: INVOKE  (r2 I:java.lang.Object) = \l  (r0 I:android.support.v4.util.ArrayMap)\l  (r2 I:java.lang.Object)\l android.support.v4.util.ArrayMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r2 I:android.support.v7.widget.ViewInfoStore$InfoRecord) = (android.support.v7.widget.ViewInfoStore$InfoRecord) (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r0 I:int) = (r2 I:android.support.v7.widget.ViewInfoStore$InfoRecord) android.support.v7.widget.ViewInfoStore.InfoRecord.flags int \l0x000d: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (\-2 ?[int, float, short, byte, char]) \l0x000f: IPUT  \l  (r0 I:int)\l  (r2 I:android.support.v7.widget.ViewInfoStore$InfoRecord)\l android.support.v7.widget.ViewInfoStore.InfoRecord.flags int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.v7.widget.ViewInfoStore.removeFromDisappearedInLayout((r1 'this' I:android.support.v7.widget.ViewInfoStore A[IMMUTABLE_TYPE, THIS]), (r2 I:android.support.v7.widget.RecyclerView$ViewHolder A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

