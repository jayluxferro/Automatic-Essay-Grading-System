digraph "CFG forandroid.support.v7.widget.AppCompatProgressBarHelper.tileifyIndeterminate(Landroid\/graphics\/drawable\/Drawable;)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r7 I:?[OBJECT, ARRAY]) android.graphics.drawable.AnimationDrawable \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0035 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CHECK_CAST  (r7 I:android.graphics.drawable.AnimationDrawable) = (android.graphics.drawable.AnimationDrawable) (r7 I:?[OBJECT, ARRAY]) \l0x0006: INVOKE  (r0 I:int) = (r7 I:android.graphics.drawable.AnimationDrawable) android.graphics.drawable.AnimationDrawable.getNumberOfFrames():int type: VIRTUAL \l0x000a: NEW_INSTANCE  (r1 I:android.graphics.drawable.AnimationDrawable) =  android.graphics.drawable.AnimationDrawable \l0x000c: INVOKE  (r1 I:android.graphics.drawable.AnimationDrawable) android.graphics.drawable.AnimationDrawable.\<init\>():void type: DIRECT \l0x000f: INVOKE  (r2 I:boolean) = (r7 I:android.graphics.drawable.AnimationDrawable) android.graphics.drawable.AnimationDrawable.isOneShot():boolean type: VIRTUAL \l0x0013: INVOKE  \l  (r1 I:android.graphics.drawable.AnimationDrawable)\l  (r2 I:boolean)\l android.graphics.drawable.AnimationDrawable.setOneShot(boolean):void type: VIRTUAL \l0x0016: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (10000(0x2710, float:1.4013E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:6:0x0031 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: INVOKE  (r4 I:android.graphics.drawable.Drawable) = \l  (r7 I:android.graphics.drawable.AnimationDrawable)\l  (r2 I:int)\l android.graphics.drawable.AnimationDrawable.getFrame(int):android.graphics.drawable.Drawable type: VIRTUAL \l0x001f: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0020: INVOKE  (r4 I:android.graphics.drawable.Drawable) = \l  (r6 I:android.support.v7.widget.AppCompatProgressBarHelper)\l  (r4 I:android.graphics.drawable.Drawable)\l  (r5 I:boolean)\l android.support.v7.widget.AppCompatProgressBarHelper.tileify(android.graphics.drawable.Drawable, boolean):android.graphics.drawable.Drawable type: DIRECT \l0x0024: INVOKE  (r4 I:android.graphics.drawable.Drawable), (r3 I:int) android.graphics.drawable.Drawable.setLevel(int):boolean type: VIRTUAL \l0x0027: INVOKE  (r3 I:int) = \l  (r7 I:android.graphics.drawable.AnimationDrawable)\l  (r2 I:int)\l android.graphics.drawable.AnimationDrawable.getDuration(int):int type: VIRTUAL \l0x002b: INVOKE  \l  (r1 I:android.graphics.drawable.AnimationDrawable)\l  (r4 I:android.graphics.drawable.Drawable)\l  (r3 I:int)\l android.graphics.drawable.AnimationDrawable.addFrame(android.graphics.drawable.Drawable, int):void type: VIRTUAL \l0x002e: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0031|0x0031: INVOKE  \l  (r1 I:android.graphics.drawable.AnimationDrawable)\l  (r3 I:int)\l android.graphics.drawable.AnimationDrawable.setLevel(int):boolean type: VIRTUAL \l0x0034: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|0x0035: RETURN  (r7 I:android.graphics.drawable.Drawable) \l}"];
MethodNode[shape=record,label="{private android.graphics.drawable.Drawable android.support.v7.widget.AppCompatProgressBarHelper.tileifyIndeterminate((r6 'this' I:android.support.v7.widget.AppCompatProgressBarHelper A[IMMUTABLE_TYPE, THIS]), (r7 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_3;
Node_6 -> Node_7;
}

