digraph "CFG forandroid.support.v7.widget.AppCompatProgressBarHelper.tileify(Landroid\/graphics\/drawable\/Drawable;Z)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r8 I:?[OBJECT, ARRAY]) android.support.v4.graphics.drawable.WrappedDrawable \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0005: CHECK_CAST  (r0 I:android.support.v4.graphics.drawable.WrappedDrawable) = (android.support.v4.graphics.drawable.WrappedDrawable) (r0 I:?[OBJECT, ARRAY]) \l0x0007: INVOKE  (r1 I:android.graphics.drawable.Drawable) = (r0 I:android.support.v4.graphics.drawable.WrappedDrawable) android.support.v4.graphics.drawable.WrappedDrawable.getWrappedDrawable():android.graphics.drawable.Drawable type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x009b \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r9 I:android.graphics.drawable.Drawable) = \l  (r7 I:android.support.v7.widget.AppCompatProgressBarHelper)\l  (r1 I:android.graphics.drawable.Drawable)\l  (r9 I:boolean)\l android.support.v7.widget.AppCompatProgressBarHelper.tileify(android.graphics.drawable.Drawable, boolean):android.graphics.drawable.Drawable type: DIRECT \l0x0011: INVOKE  \l  (r0 I:android.support.v4.graphics.drawable.WrappedDrawable)\l  (r9 I:android.graphics.drawable.Drawable)\l android.support.v4.graphics.drawable.WrappedDrawable.setWrappedDrawable(android.graphics.drawable.Drawable):void type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: INSTANCE_OF  (r0 I:boolean) = (r8 I:?[OBJECT, ARRAY]) android.graphics.drawable.LayerDrawable \l0x0018: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0058 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: CHECK_CAST  (r8 I:android.graphics.drawable.LayerDrawable) = (android.graphics.drawable.LayerDrawable) (r8 I:?[OBJECT, ARRAY]) \l0x001d: INVOKE  (r9 I:int) = (r8 I:android.graphics.drawable.LayerDrawable) android.graphics.drawable.LayerDrawable.getNumberOfLayers():int type: VIRTUAL \l0x0021: NEW_ARRAY  (r0 I:android.graphics.drawable.Drawable[]) = (r9 I:int A[IMMUTABLE_TYPE]) type: android.graphics.drawable.Drawable[] \l0x0023: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0024: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: IF  (r3 I:?[int, byte, short, char]) \>= (r9 I:?[int, byte, short, char])  \-\> B:17:0x0046 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: INVOKE  (r4 I:int) = (r8 I:android.graphics.drawable.LayerDrawable), (r3 I:int) android.graphics.drawable.LayerDrawable.getId(int):int type: VIRTUAL \l0x002b: INVOKE  (r5 I:android.graphics.drawable.Drawable) = (r8 I:android.graphics.drawable.LayerDrawable), (r3 I:int) android.graphics.drawable.LayerDrawable.getDrawable(int):android.graphics.drawable.Drawable type: VIRTUAL \l0x002f: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (16908301(0x102000d, float:2.3877265E\-38) ?[int, float, short, byte, char])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|0x0032: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x003c \l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (16908303(0x102000f, float:2.387727E\-38) ?[int, float, short, byte, char])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|0x0037: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003a \l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|0x003a: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|0x003c: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|0x003d: INVOKE  (r4 I:android.graphics.drawable.Drawable) = \l  (r7 I:android.support.v7.widget.AppCompatProgressBarHelper)\l  (r5 I:android.graphics.drawable.Drawable)\l  (r4 I:boolean)\l android.support.v7.widget.AppCompatProgressBarHelper.tileify(android.graphics.drawable.Drawable, boolean):android.graphics.drawable.Drawable type: DIRECT \l0x0041: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x0043: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0046|0x0046: NEW_INSTANCE  (r1 I:android.graphics.drawable.LayerDrawable) =  android.graphics.drawable.LayerDrawable \l0x0048: INVOKE  \l  (r1 I:android.graphics.drawable.LayerDrawable)\l  (r0 I:android.graphics.drawable.Drawable[])\l android.graphics.drawable.LayerDrawable.\<init\>(android.graphics.drawable.Drawable[]):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x004b|0x004b: IF  (r2 I:?[int, byte, short, char]) \>= (r9 I:?[int, byte, short, char])  \-\> B:20:0x0057 \l}"];
Node_19 [shape=record,label="{19\:\ 0x004d|0x004d: INVOKE  (r0 I:int) = (r8 I:android.graphics.drawable.LayerDrawable), (r2 I:int) android.graphics.drawable.LayerDrawable.getId(int):int type: VIRTUAL \l0x0051: INVOKE  \l  (r1 I:android.graphics.drawable.LayerDrawable)\l  (r2 I:int)\l  (r0 I:int)\l android.graphics.drawable.LayerDrawable.setId(int, int):void type: VIRTUAL \l0x0054: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0057|0x0057: RETURN  (r1 I:android.graphics.drawable.Drawable) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0058|0x0058: INSTANCE_OF  (r0 I:boolean) = (r8 I:?[OBJECT, ARRAY]) android.graphics.drawable.BitmapDrawable \l}"];
Node_22 [shape=record,label="{22\:\ 0x005a|0x005a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x009b \l}"];
Node_23 [shape=record,label="{23\:\ 0x005c|0x005c: CHECK_CAST  (r8 I:android.graphics.drawable.BitmapDrawable) = (android.graphics.drawable.BitmapDrawable) (r8 I:?[OBJECT, ARRAY]) \l0x005e: INVOKE  (r0 I:android.graphics.Bitmap) = (r8 I:android.graphics.drawable.BitmapDrawable) android.graphics.drawable.BitmapDrawable.getBitmap():android.graphics.Bitmap type: VIRTUAL \l0x0062: IGET  (r2 I:android.graphics.Bitmap) = (r7 I:android.support.v7.widget.AppCompatProgressBarHelper) android.support.v7.widget.AppCompatProgressBarHelper.mSampleTile android.graphics.Bitmap \l}"];
Node_24 [shape=record,label="{24\:\ 0x0064|0x0064: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0068 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0066|0x0066: IPUT  \l  (r0 I:android.graphics.Bitmap)\l  (r7 I:android.support.v7.widget.AppCompatProgressBarHelper)\l android.support.v7.widget.AppCompatProgressBarHelper.mSampleTile android.graphics.Bitmap \l}"];
Node_26 [shape=record,label="{26\:\ 0x0068|0x0068: NEW_INSTANCE  (r2 I:android.graphics.drawable.ShapeDrawable) =  android.graphics.drawable.ShapeDrawable \l0x006a: INVOKE  (r3 I:android.graphics.drawable.shapes.Shape) = (r7 I:android.support.v7.widget.AppCompatProgressBarHelper) android.support.v7.widget.AppCompatProgressBarHelper.getDrawableShape():android.graphics.drawable.shapes.Shape type: DIRECT \l0x006e: INVOKE  \l  (r2 I:android.graphics.drawable.ShapeDrawable)\l  (r3 I:android.graphics.drawable.shapes.Shape)\l android.graphics.drawable.ShapeDrawable.\<init\>(android.graphics.drawable.shapes.Shape):void type: DIRECT \l0x0071: NEW_INSTANCE  (r3 I:android.graphics.BitmapShader) =  android.graphics.BitmapShader \l0x0073: SGET  (r4 I:android.graphics.Shader$TileMode) =  android.graphics.Shader.TileMode.REPEAT android.graphics.Shader$TileMode \l0x0075: SGET  (r5 I:android.graphics.Shader$TileMode) =  android.graphics.Shader.TileMode.CLAMP android.graphics.Shader$TileMode \l0x0077: INVOKE  \l  (r3 I:android.graphics.BitmapShader)\l  (r0 I:android.graphics.Bitmap)\l  (r4 I:android.graphics.Shader$TileMode)\l  (r5 I:android.graphics.Shader$TileMode)\l android.graphics.BitmapShader.\<init\>(android.graphics.Bitmap, android.graphics.Shader$TileMode, android.graphics.Shader$TileMode):void type: DIRECT \l0x007a: INVOKE  (r0 I:android.graphics.Paint) = (r2 I:android.graphics.drawable.ShapeDrawable) android.graphics.drawable.ShapeDrawable.getPaint():android.graphics.Paint type: VIRTUAL \l0x007e: INVOKE  \l  (r0 I:android.graphics.Paint)\l  (r3 I:android.graphics.Shader)\l android.graphics.Paint.setShader(android.graphics.Shader):android.graphics.Shader type: VIRTUAL \l0x0081: INVOKE  (r0 I:android.graphics.Paint) = (r2 I:android.graphics.drawable.ShapeDrawable) android.graphics.drawable.ShapeDrawable.getPaint():android.graphics.Paint type: VIRTUAL \l0x0085: INVOKE  (r8 I:android.graphics.Paint) = (r8 I:android.graphics.drawable.BitmapDrawable) android.graphics.drawable.BitmapDrawable.getPaint():android.graphics.Paint type: VIRTUAL \l0x0089: INVOKE  (r8 I:android.graphics.ColorFilter) = (r8 I:android.graphics.Paint) android.graphics.Paint.getColorFilter():android.graphics.ColorFilter type: VIRTUAL \l0x008d: INVOKE  \l  (r0 I:android.graphics.Paint)\l  (r8 I:android.graphics.ColorFilter)\l android.graphics.Paint.setColorFilter(android.graphics.ColorFilter):android.graphics.ColorFilter type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x0090|0x0090: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0099 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0092|0x0092: NEW_INSTANCE  (r8 I:android.graphics.drawable.ClipDrawable) =  android.graphics.drawable.ClipDrawable \l0x0094: CONST  (r9 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0095: INVOKE  \l  (r8 I:android.graphics.drawable.ClipDrawable)\l  (r2 I:android.graphics.drawable.Drawable)\l  (r9 I:int)\l  (r1 I:int)\l android.graphics.drawable.ClipDrawable.\<init\>(android.graphics.drawable.Drawable, int, int):void type: DIRECT \l}"];
Node_29 [shape=record,label="{29\:\ 0x0099|0x0099: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x009a|0x009a: RETURN  (r8 I:android.graphics.drawable.Drawable) \l}"];
Node_31 [shape=record,label="{31\:\ 0x009b|0x009b: RETURN  (r8 I:android.graphics.drawable.Drawable) \l}"];
MethodNode[shape=record,label="{private android.graphics.drawable.Drawable android.support.v7.widget.AppCompatProgressBarHelper.tileify((r7 'this' I:android.support.v7.widget.AppCompatProgressBarHelper A[IMMUTABLE_TYPE, THIS]), (r8 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_31;
Node_4 -> Node_31;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_21;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_14;
Node_12 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_8;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_18;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_31;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_29 -> Node_30;
}

