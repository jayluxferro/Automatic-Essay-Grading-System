digraph "CFG forandroid.support.v7.widget.RecyclerView.SmoothScroller.computeScrollVectorForPosition(I)Landroid\/graphics\/PointF;" {
subgraph cluster_Region_1220757 {
label = "R(2:0|(2:(1:3)|(2:4|5)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.support.v7.widget.RecyclerView$LayoutManager android.support.p003v7.widget.RecyclerView.LayoutManager r0 = getLayoutManager()\l}"];
subgraph cluster_Region_2111863007 {
label = "R(2:(1:3)|(2:4|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2120265130 {
label = "IF [B:1:0x0006] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if ((r0 instanceof android.support.p003v7.widget.RecyclerView.SmoothScroller.ScrollVectorProvider) == true) goto L_0x0008\l}"];
subgraph cluster_Region_698919580 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000e|RETURN\l|return ((android.support.p003v7.widget.RecyclerView.SmoothScroller.ScrollVectorProvider) r0).computeScrollVectorForPosition(r3)\l}"];
}
}
subgraph cluster_Region_2021575501 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|android.util.Log.w(android.support.p003v7.widget.RecyclerView.TAG, \"You should override computeScrollVectorForPosition when the LayoutManager does not implement \" + android.support.p003v7.widget.RecyclerView.SmoothScroller.ScrollVectorProvider.class.getCanonicalName())\l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|RETURN\l|return null\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
MethodNode[shape=record,label="{public android.graphics.PointF android.support.v7.widget.RecyclerView.SmoothScroller.computeScrollVectorForPosition((r2v0 'this' android.support.v7.widget.RecyclerView$SmoothScroller A[IMMUTABLE_TYPE, THIS]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_4 -> Node_5;
Node_2 -> Node_3;
}

