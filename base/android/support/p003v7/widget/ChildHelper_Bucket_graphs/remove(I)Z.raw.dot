digraph "CFG forandroid.support.v7.widget.ChildHelper.Bucket.remove(I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (64 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r12 I:?[int, byte, short, char]) \< (r0 I:?[int, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r11 I:android.support.v7.widget.ChildHelper$Bucket) android.support.v7.widget.ChildHelper.Bucket.ensureNext():void type: DIRECT \l0x0007: IGET  (r1 I:android.support.v7.widget.ChildHelper$Bucket) = (r11 I:android.support.v7.widget.ChildHelper$Bucket) android.support.v7.widget.ChildHelper.Bucket.mNext android.support.v7.widget.ChildHelper$Bucket \l0x0009: ARITH  (r12 I:int) = (r12 I:int) \- (r0 I:int) \l0x000a: INVOKE  (r12 I:boolean) = \l  (r1 I:android.support.v7.widget.ChildHelper$Bucket)\l  (r12 I:int)\l android.support.v7.widget.ChildHelper.Bucket.remove(int):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: RETURN  (r12 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: CONST  (r0 I:?[long, double]) = (1 ?[long, double]) \l0x0011: ARITH  (r2 I:long) = (r0 I:long) \<\< (r12 I:long) \l0x0013: IGET  (r4 I:long) = (r11 I:android.support.v7.widget.ChildHelper$Bucket) android.support.v7.widget.ChildHelper.Bucket.mData long \l0x0015: ARITH  (r4 I:long) = (r4 I:long) & (r2 I:long) \l0x0016: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l0x0018: CONST  (r12 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0019: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001a: CMP_L  (r4 I:int) = (r4 I:long), (r6 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0020 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: IGET  (r5 I:long) = (r11 I:android.support.v7.widget.ChildHelper$Bucket) android.support.v7.widget.ChildHelper.Bucket.mData long \l0x0023: NOT  (r9 I:long) = (r2 I:long) \l0x0024: ARITH  (r5 I:long) = (r5 I:long) & (r9 I:long) \l0x0025: IPUT  \l  (r5 I:long)\l  (r11 I:android.support.v7.widget.ChildHelper$Bucket)\l android.support.v7.widget.ChildHelper.Bucket.mData long \l0x0027: ARITH  (r2 I:long) = (r2 I:long) \- (r0 I:long) \l0x0028: IGET  (r0 I:long) = (r11 I:android.support.v7.widget.ChildHelper$Bucket) android.support.v7.widget.ChildHelper.Bucket.mData long \l0x002a: ARITH  (r0 I:long) = (r0 I:long) & (r2 I:long) \l0x002b: IGET  (r5 I:long) = (r11 I:android.support.v7.widget.ChildHelper$Bucket) android.support.v7.widget.ChildHelper.Bucket.mData long \l0x002d: NOT  (r2 I:long) = (r2 I:long) \l0x002e: ARITH  (r2 I:long) = (r2 I:long) & (r5 I:long) \l0x002f: INVOKE  (r2 I:long) = (r2 I:long), (r12 I:int) java.lang.Long.rotateRight(long, int):long type: STATIC \l0x0033: ARITH  (r0 I:long) = (r0 I:long) \| (r2 I:long) \l0x0034: IPUT  \l  (r0 I:long)\l  (r11 I:android.support.v7.widget.ChildHelper$Bucket)\l android.support.v7.widget.ChildHelper.Bucket.mData long \l0x0036: IGET  (r12 I:android.support.v7.widget.ChildHelper$Bucket) = (r11 I:android.support.v7.widget.ChildHelper$Bucket) android.support.v7.widget.ChildHelper.Bucket.mNext android.support.v7.widget.ChildHelper$Bucket \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x004c \l}"];
Node_10 [shape=record,label="{10\:\ 0x003a|0x003a: IGET  (r12 I:android.support.v7.widget.ChildHelper$Bucket) = (r11 I:android.support.v7.widget.ChildHelper$Bucket) android.support.v7.widget.ChildHelper.Bucket.mNext android.support.v7.widget.ChildHelper$Bucket \l0x003c: INVOKE  (r12 I:boolean) = \l  (r12 I:android.support.v7.widget.ChildHelper$Bucket)\l  (r8 I:int)\l android.support.v7.widget.ChildHelper.Bucket.get(int):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0047 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0042|0x0042: CONST  (r12 I:?[int, float, short, byte, char]) = (63 ?[int, float, short, byte, char]) \l0x0044: INVOKE  \l  (r11 I:android.support.v7.widget.ChildHelper$Bucket)\l  (r12 I:int)\l android.support.v7.widget.ChildHelper.Bucket.set(int):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0047|0x0047: IGET  (r12 I:android.support.v7.widget.ChildHelper$Bucket) = (r11 I:android.support.v7.widget.ChildHelper$Bucket) android.support.v7.widget.ChildHelper.Bucket.mNext android.support.v7.widget.ChildHelper$Bucket \l0x0049: INVOKE  \l  (r12 I:android.support.v7.widget.ChildHelper$Bucket)\l  (r8 I:int)\l android.support.v7.widget.ChildHelper.Bucket.remove(int):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|0x004c: RETURN  (r4 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean android.support.v7.widget.ChildHelper.Bucket.remove((r11 'this' I:android.support.v7.widget.ChildHelper$Bucket A[IMMUTABLE_TYPE, THIS]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

