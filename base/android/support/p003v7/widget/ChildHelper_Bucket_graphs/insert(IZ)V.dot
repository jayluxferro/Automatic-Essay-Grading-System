digraph "CFG forandroid.support.v7.widget.ChildHelper.Bucket.insert(IZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r11 \< 64) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|ensureNext()\lr10.mNext.insert(r11 \- 64, r12)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e}"];
Node_4 [shape=record,label="{4\:\ 0x0019|if (((r10.mData & Long.MIN_VALUE) \> 0 ? 1 : ((r10.mData & Long.MIN_VALUE) == 0 ? 0 : \-1)) == 0) goto L_0x001d\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|r0 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|r0 = false\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|PHI: r0 \l  PHI: (r0v4 boolean) = (r0v5 boolean), (r0v6 boolean) binds: [B:6:0x001d, B:5:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|long r6 = (1 \<\< r11) \- 1\llong r8 = r10.mData\lr10.mData = (r10.mData & r6) \| (((~r6) & r8) \<\< 1)\l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|if (r12 == false) goto L_0x0035\l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|set(r11)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|clear(r11)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|if (r0 != false) goto L_0x003e\l}"];
Node_12 [shape=record,label="{12\:\ 0x003a}"];
Node_13 [shape=record,label="{13\:\ 0x003c|if (r10.mNext == null) goto L_?\l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|ensureNext()\lr10.mNext.insert(0, r0)\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void android.support.v7.widget.ChildHelper.Bucket.insert((r10v0 'this' android.support.v7.widget.ChildHelper$Bucket A[IMMUTABLE_TYPE, THIS]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_16;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
}

