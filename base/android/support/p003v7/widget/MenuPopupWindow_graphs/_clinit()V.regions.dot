digraph "CFG forandroid.support.v7.widget.MenuPopupWindow.\<clinit\>()V" {
subgraph cluster_Region_1235869356 {
label = "R(2:0|(1:2))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.Class\<android.widget.PopupWindow\> java.lang.Class\<android.widget.PopupWindow\> r0 = android.widget.PopupWindow.class\l}"];
subgraph cluster_TryCatchRegion_711291411 {
label = "Try: R(1:2) catches: R(1:3)";
node [shape=record,color=blue];
subgraph cluster_Region_1778827484 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ NoSuchMethodException \-\> 0x0013 \}\lSplitter:B:1:0x0005\l|sSetTouchModalMethod = r0.getDeclaredMethod(\"setTouchModal\", new java.lang.Class[]\{java.lang.Boolean.TYPE\})     \/\/ Catch:\{ NoSuchMethodException \-\> 0x0013 \}\l}"];
}
subgraph cluster_Region_235536359 {
label = "R(1:3) | ExcHandler: NoSuchMethodException (unused java.lang.NoSuchMethodException)\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0013|android.util.Log.i(TAG, \"Could not find method setTouchModal() on PopupWindow. Oh well.\")\l}"];
}
}
}
subgraph cluster_Region_235536359 {
label = "R(1:3) | ExcHandler: NoSuchMethodException (unused java.lang.NoSuchMethodException)\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0013|android.util.Log.i(TAG, \"Could not find method setTouchModal() on PopupWindow. Oh well.\")\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0005|SYNTHETIC\lSplitter:B:1:0x0005\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\lExcHandler: NoSuchMethodException (unused java.lang.NoSuchMethodException)\lSplitter:B:1:0x0005\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static void android.support.v7.widget.MenuPopupWindow.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_4;
Node_2 -> Node_6;
Node_3 -> Node_5;
Node_3 -> Node_5;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_4 -> Node_3;
}

