digraph "CFG forandroid.support.v7.widget.ActionMenuView.measureChildForCells(Landroid\/view\/View;IIII)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.view.ViewGroup$LayoutParams) = (r5 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0004: CHECK_CAST  (r0 I:android.support.v7.widget.ActionMenuView$LayoutParams) = (android.support.v7.widget.ActionMenuView$LayoutParams) (r0 I:?[OBJECT, ARRAY]) \l0x0006: INVOKE  (r1 I:int) = (r8 I:int) android.view.View.MeasureSpec.getSize(int):int type: STATIC \l0x000a: ARITH  (r1 I:int) = (r1 I:int) \- (r9 I:int) \l0x000b: INVOKE  (r8 I:int) = (r8 I:int) android.view.View.MeasureSpec.getMode(int):int type: STATIC \l0x000f: INVOKE  (r8 I:int) = (r1 I:int), (r8 I:int) android.view.View.MeasureSpec.makeMeasureSpec(int, int):int type: STATIC \l0x0013: INSTANCE_OF  (r9 I:boolean) = (r5 I:?[OBJECT, ARRAY]) android.support.v7.view.menu.ActionMenuItemView \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x0018: CHECK_CAST  (r9 I:android.support.v7.view.menu.ActionMenuItemView) = (android.support.v7.view.menu.ActionMenuItemView) (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0028 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: INVOKE  (r9 I:boolean) = (r9 I:android.support.v7.view.menu.ActionMenuItemView) android.support.v7.view.menu.ActionMenuItemView.hasText():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0028 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: IF  (r7 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:21:0x004d \l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|0x002c: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0030 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|0x002e: IF  (r7 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:21:0x004d \l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|0x0030: ARITH  (r7 I:int) = (r7 I:int) * (r6 I:int) \l0x0032: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (\-2147483648(0xffffffff80000000, float:\-0.0) ?[int, float, short, byte, char])\l \l0x0034: INVOKE  (r7 I:int) = (r7 I:int), (r4 I:int) android.view.View.MeasureSpec.makeMeasureSpec(int, int):int type: STATIC \l0x0038: INVOKE  (r5 I:android.view.View), (r7 I:int), (r8 I:int) android.view.View.measure(int, int):void type: VIRTUAL \l0x003b: INVOKE  (r7 I:int) = (r5 I:android.view.View) android.view.View.getMeasuredWidth():int type: VIRTUAL \l0x003f: ARITH  (r4 I:int) = (r7 I:int) \/ (r6 I:int) \l0x0041: ARITH  (r7 I:int) = (r7 I:int) % (r6 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|0x0042: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0046 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0044|0x0044: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0046|0x0046: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004b \l}"];
Node_18 [shape=record,label="{18\:\ 0x0048|0x0048: IF  (r4 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:20:0x004b \l}"];
Node_20 [shape=record,label="{20\:\ 0x004b|0x004b: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x004d|0x004d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x004e|0x004e: IGET  (r7 I:boolean) = \l  (r0 I:android.support.v7.widget.ActionMenuView$LayoutParams)\l android.support.v7.widget.ActionMenuView.LayoutParams.isOverflowButton boolean \l}"];
Node_23 [shape=record,label="{23\:\ 0x0050|0x0050: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0055 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0052|0x0052: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0055 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0055|0x0055: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_27 [shape=record,label="{27\:\ 0x0056|0x0056: IPUT  \l  (r1 I:boolean)\l  (r0 I:android.support.v7.widget.ActionMenuView$LayoutParams)\l android.support.v7.widget.ActionMenuView.LayoutParams.expandable boolean \l0x0058: IPUT  \l  (r3 I:int)\l  (r0 I:android.support.v7.widget.ActionMenuView$LayoutParams)\l android.support.v7.widget.ActionMenuView.LayoutParams.cellsUsed int \l0x005a: ARITH  (r6 I:int) = (r6 I:int) * (r3 I:int) \l0x005c: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x005e: INVOKE  (r6 I:int) = (r6 I:int), (r7 I:int) android.view.View.MeasureSpec.makeMeasureSpec(int, int):int type: STATIC \l0x0062: INVOKE  (r5 I:android.view.View), (r6 I:int), (r8 I:int) android.view.View.measure(int, int):void type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x0065|0x0065: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{static int android.support.v7.widget.ActionMenuView.measureChildForCells((r5 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_21;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_20;
Node_18 -> Node_22[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_26;
Node_24 -> Node_27[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28;
}

