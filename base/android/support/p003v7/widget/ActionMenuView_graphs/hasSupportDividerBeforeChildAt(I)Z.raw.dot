digraph "CFG forandroid.support.v7.widget.ActionMenuView.hasSupportDividerBeforeChildAt(I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: ARITH  (r1 I:int) = (r5 I:int) + (\-1 int) \l0x0006: INVOKE  (r1 I:android.view.View) = (r4 I:android.support.v7.widget.ActionMenuView), (r1 I:int) android.support.v7.widget.ActionMenuView.getChildAt(int):android.view.View type: VIRTUAL \l0x000a: INVOKE  (r2 I:android.view.View) = (r4 I:android.support.v7.widget.ActionMenuView), (r5 I:int) android.support.v7.widget.ActionMenuView.getChildAt(int):android.view.View type: VIRTUAL \l0x000e: INVOKE  (r3 I:int) = (r4 I:android.support.v7.widget.ActionMenuView) android.support.v7.widget.ActionMenuView.getChildCount():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r5 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: INSTANCE_OF  (r3 I:boolean) = (r1 I:?[OBJECT, ARRAY]) android.support.v7.widget.ActionMenuView$ActionMenuChildView \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: CHECK_CAST  (r1 I:android.support.v7.widget.ActionMenuView$ActionMenuChildView) = (android.support.v7.widget.ActionMenuView$ActionMenuChildView) (r1 I:?[OBJECT, ARRAY]) \l0x001a: INVOKE  (r1 I:boolean) = \l  (r1 I:android.support.v7.widget.ActionMenuView$ActionMenuChildView)\l android.support.v7.widget.ActionMenuView.ActionMenuChildView.needsDividerAfter():boolean type: INTERFACE \l0x001e: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) \| (r1 I:?[int, boolean, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x002c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: INSTANCE_OF  (r5 I:boolean) = (r2 I:?[OBJECT, ARRAY]) android.support.v7.widget.ActionMenuView$ActionMenuChildView \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002c \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: CHECK_CAST  (r2 I:android.support.v7.widget.ActionMenuView$ActionMenuChildView) = (android.support.v7.widget.ActionMenuView$ActionMenuChildView) (r2 I:?[OBJECT, ARRAY]) \l0x0027: INVOKE  (r5 I:boolean) = \l  (r2 I:android.support.v7.widget.ActionMenuView$ActionMenuChildView)\l android.support.v7.widget.ActionMenuView.ActionMenuChildView.needsDividerBefore():boolean type: INTERFACE \l0x002b: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) \| (r5 I:?[int, boolean, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|0x002c: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{protected boolean android.support.v7.widget.ActionMenuView.hasSupportDividerBeforeChildAt((r4 'this' I:android.support.v7.widget.ActionMenuView A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.RestrictTo, \{value=[android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP android.support.annotation.RestrictTo$Scope]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
}

