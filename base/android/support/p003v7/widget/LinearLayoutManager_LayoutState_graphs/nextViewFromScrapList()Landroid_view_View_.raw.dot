digraph "CFG forandroid.support.v7.widget.LinearLayoutManager.LayoutState.nextViewFromScrapList()Landroid\/view\/View;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<android.support.v7.widget.RecyclerView$ViewHolder\>) = \l  (r5 I:android.support.v7.widget.LinearLayoutManager$LayoutState)\l android.support.v7.widget.LinearLayoutManager.LayoutState.mScrapList java.util.List \l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:10:0x002f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r2 I:java.util.List\<android.support.v7.widget.RecyclerView$ViewHolder\>) = \l  (r5 I:android.support.v7.widget.LinearLayoutManager$LayoutState)\l android.support.v7.widget.LinearLayoutManager.LayoutState.mScrapList java.util.List \l0x000b: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x000f: CHECK_CAST  (r2 I:android.support.v7.widget.RecyclerView$ViewHolder) = (android.support.v7.widget.RecyclerView$ViewHolder) (r2 I:?[OBJECT, ARRAY]) \l0x0011: IGET  (r2 I:android.view.View) = (r2 I:android.support.v7.widget.RecyclerView$ViewHolder) android.support.v7.widget.RecyclerView.ViewHolder.itemView android.view.View \l0x0013: INVOKE  (r3 I:android.view.ViewGroup$LayoutParams) = (r2 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0017: CHECK_CAST  (r3 I:android.support.v7.widget.RecyclerView$LayoutParams) = (android.support.v7.widget.RecyclerView$LayoutParams) (r3 I:?[OBJECT, ARRAY]) \l0x0019: INVOKE  (r4 I:boolean) = (r3 I:android.support.v7.widget.RecyclerView$LayoutParams) android.support.v7.widget.RecyclerView.LayoutParams.isItemRemoved():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0020 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: IGET  (r4 I:int) = \l  (r5 I:android.support.v7.widget.LinearLayoutManager$LayoutState)\l android.support.v7.widget.LinearLayoutManager.LayoutState.mCurrentPosition int \l0x0022: INVOKE  (r3 I:int) = (r3 I:android.support.v7.widget.RecyclerView$LayoutParams) android.support.v7.widget.RecyclerView.LayoutParams.getViewLayoutPosition():int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002c \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: INVOKE  \l  (r5 I:android.support.v7.widget.LinearLayoutManager$LayoutState)\l  (r2 I:android.view.View)\l android.support.v7.widget.LinearLayoutManager.LayoutState.assignPositionFromScrapList(android.view.View):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|0x002b: RETURN  (r2 I:android.view.View) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|0x002f: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: RETURN  (r0 I:android.view.View) \l}"];
MethodNode[shape=record,label="{private android.view.View android.support.v7.widget.LinearLayoutManager.LayoutState.nextViewFromScrapList((r5 'this' I:android.support.v7.widget.LinearLayoutManager$LayoutState A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_9[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_1;
Node_10 -> Node_11;
}

