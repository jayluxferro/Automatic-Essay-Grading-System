digraph "CFG forandroid.support.v7.widget.GridLayoutManager.assignSpans(Landroid\/support\/v7\/widget\/RecyclerView$Recycler;Landroid\/support\/v7\/widget\/RecyclerView$State;IIZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r7 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0001: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: ARITH  (r6 I:int) = (r6 I:int) + (\-1 int) \l0x000b: CONST  (r8 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0029 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IGET  (r1 I:android.view.View[]) = (r3 I:android.support.v7.widget.GridLayoutManager) android.support.v7.widget.GridLayoutManager.mSet android.view.View[] \l0x0010: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r6 I:?[int, short, byte, char]) \l0x0012: INVOKE  (r2 I:android.view.ViewGroup$LayoutParams) = (r1 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0016: CHECK_CAST  (r2 I:android.support.v7.widget.GridLayoutManager$LayoutParams) = (android.support.v7.widget.GridLayoutManager$LayoutParams) (r2 I:?[OBJECT, ARRAY]) \l0x0018: INVOKE  (r1 I:int) = \l  (r3 I:android.support.v7.widget.GridLayoutManager)\l  (r1 I:android.view.View)\l android.support.v7.widget.GridLayoutManager.getPosition(android.view.View):int type: VIRTUAL \l0x001c: INVOKE  (r1 I:int) = \l  (r3 I:android.support.v7.widget.GridLayoutManager)\l  (r4 I:android.support.v7.widget.RecyclerView$Recycler)\l  (r5 I:android.support.v7.widget.RecyclerView$State)\l  (r1 I:int)\l android.support.v7.widget.GridLayoutManager.getSpanSize(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, int):int type: DIRECT \l0x0020: IPUT  \l  (r1 I:int)\l  (r2 I:android.support.v7.widget.GridLayoutManager$LayoutParams)\l android.support.v7.widget.GridLayoutManager.LayoutParams.mSpanSize int \l0x0022: IPUT  \l  (r0 I:int)\l  (r2 I:android.support.v7.widget.GridLayoutManager$LayoutParams)\l android.support.v7.widget.GridLayoutManager.LayoutParams.mSpanIndex int \l0x0024: IGET  (r1 I:int) = \l  (r2 I:android.support.v7.widget.GridLayoutManager$LayoutParams)\l android.support.v7.widget.GridLayoutManager.LayoutParams.mSpanSize int \l0x0026: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0027: ARITH  (r6 I:int) = (r6 I:int) + (r8 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|0x0029: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v7.widget.GridLayoutManager.assignSpans((r3 'this' I:android.support.v7.widget.GridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r4 I:android.support.v7.widget.RecyclerView$Recycler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.support.v7.widget.RecyclerView$State A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_4;
}

