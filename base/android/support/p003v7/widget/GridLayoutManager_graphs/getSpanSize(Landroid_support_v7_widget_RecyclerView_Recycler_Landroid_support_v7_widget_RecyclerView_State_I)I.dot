digraph "CFG forandroid.support.v7.widget.GridLayoutManager.getSpanSize(Landroid\/support\/v7\/widget\/RecyclerView$Recycler;Landroid\/support\/v7\/widget\/RecyclerView$State;I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r3.isPreLayout() != false) goto L_0x000d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000c|RETURN\l|return r1.mSpanSizeLookup.getSpanSize(r4)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|int r3 = r1.mPreLayoutSpanSizeCache.get(r4, \-1)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|if (r3 == \-1) goto L_0x0017\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|RETURN\l|return r3\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|int r2 = r2.convertPreLayoutPositionToPostLayout(r4)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|if (r2 != \-1) goto L_0x0035\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|java.lang.StringBuilder r3 = new java.lang.StringBuilder()\lr3.append(\"Cannot find span size for pre layout position. It is not cached, not in the adapter. Pos:\")\lr3.append(r4)\landroid.util.Log.w(TAG, r3.toString())\l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|RETURN\l|return 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035}"];
Node_12 [shape=record,label="{12\:\ 0x003b|RETURN\l|return r1.mSpanSizeLookup.getSpanSize(r2)\l}"];
MethodNode[shape=record,label="{private int android.support.v7.widget.GridLayoutManager.getSpanSize((r1v0 'this' android.support.v7.widget.GridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r2v0 android.support.v7.widget.RecyclerView$Recycler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 android.support.v7.widget.RecyclerView$State A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

