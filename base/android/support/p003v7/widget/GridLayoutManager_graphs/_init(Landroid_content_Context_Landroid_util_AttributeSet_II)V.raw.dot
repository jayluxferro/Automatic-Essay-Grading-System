digraph "CFG forandroid.support.v7.widget.GridLayoutManager.\<init\>(Landroid\/content\/Context;Landroid\/util\/AttributeSet;II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r1 I:android.support.v7.widget.LinearLayoutManager)\l  (r2 I:android.content.Context)\l  (r3 I:android.util.AttributeSet)\l  (r4 I:int)\l  (r5 I:int)\l android.support.v7.widget.LinearLayoutManager.\<init\>(android.content.Context, android.util.AttributeSet, int, int):void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: IPUT  \l  (r0 I:boolean)\l  (r1 I:android.support.v7.widget.GridLayoutManager)\l android.support.v7.widget.GridLayoutManager.mPendingSpanCountChange boolean \l0x0006: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0007: IPUT  \l  (r0 I:int)\l  (r1 I:android.support.v7.widget.GridLayoutManager)\l android.support.v7.widget.GridLayoutManager.mSpanCount int \l0x0009: NEW_INSTANCE  (r0 I:android.util.SparseIntArray) =  android.util.SparseIntArray \l0x000b: INVOKE  (r0 I:android.util.SparseIntArray) android.util.SparseIntArray.\<init\>():void type: DIRECT \l0x000e: IPUT  \l  (r0 I:android.util.SparseIntArray)\l  (r1 I:android.support.v7.widget.GridLayoutManager)\l android.support.v7.widget.GridLayoutManager.mPreLayoutSpanSizeCache android.util.SparseIntArray \l0x0010: NEW_INSTANCE  (r0 I:android.util.SparseIntArray) =  android.util.SparseIntArray \l0x0012: INVOKE  (r0 I:android.util.SparseIntArray) android.util.SparseIntArray.\<init\>():void type: DIRECT \l0x0015: IPUT  \l  (r0 I:android.util.SparseIntArray)\l  (r1 I:android.support.v7.widget.GridLayoutManager)\l android.support.v7.widget.GridLayoutManager.mPreLayoutSpanIndexCache android.util.SparseIntArray \l0x0017: NEW_INSTANCE  (r0 I:android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup) =  android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup \l0x0019: INVOKE  \l  (r0 I:android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup)\l android.support.v7.widget.GridLayoutManager.DefaultSpanSizeLookup.\<init\>():void type: DIRECT \l0x001c: IPUT  \l  (r0 I:android.support.v7.widget.GridLayoutManager$SpanSizeLookup)\l  (r1 I:android.support.v7.widget.GridLayoutManager)\l android.support.v7.widget.GridLayoutManager.mSpanSizeLookup android.support.v7.widget.GridLayoutManager$SpanSizeLookup \l0x001e: NEW_INSTANCE  (r0 I:android.graphics.Rect) =  android.graphics.Rect \l0x0020: INVOKE  (r0 I:android.graphics.Rect) android.graphics.Rect.\<init\>():void type: DIRECT \l0x0023: IPUT  \l  (r0 I:android.graphics.Rect)\l  (r1 I:android.support.v7.widget.GridLayoutManager)\l android.support.v7.widget.GridLayoutManager.mDecorInsets android.graphics.Rect \l0x0025: INVOKE  (r2 I:android.support.v7.widget.RecyclerView$LayoutManager$Properties) = \l  (r2 I:android.content.Context)\l  (r3 I:android.util.AttributeSet)\l  (r4 I:int)\l  (r5 I:int)\l android.support.v7.widget.GridLayoutManager.getProperties(android.content.Context, android.util.AttributeSet, int, int):android.support.v7.widget.RecyclerView$LayoutManager$Properties type: STATIC \l0x0029: IGET  (r2 I:int) = \l  (r2 I:android.support.v7.widget.RecyclerView$LayoutManager$Properties)\l android.support.v7.widget.RecyclerView.LayoutManager.Properties.spanCount int \l0x002b: INVOKE  \l  (r1 I:android.support.v7.widget.GridLayoutManager)\l  (r2 I:int)\l android.support.v7.widget.GridLayoutManager.setSpanCount(int):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x002e|0x002e: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.GridLayoutManager.\<init\>((r1 'this' I:android.support.v7.widget.GridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

