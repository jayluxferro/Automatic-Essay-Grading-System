digraph "CFG forandroid.support.v7.widget.GridLayoutManager.measureChildWithDecorationsAndMargin(Landroid\/view\/View;IIZ)V" {
subgraph cluster_Region_1815712962 {
label = "R(3:0|(1:2)(1:3)|(1:(1:5))) | DECL_VAR: boolean null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.support.v7.widget.RecyclerView$LayoutParams android.support.p003v7.widget.RecyclerView.LayoutParams r0 = (android.support.p003v7.widget.RecyclerView.LayoutParams) r2.getLayoutParams()\l}"];
subgraph cluster_IfRegion_452419171 {
label = "IF [B:1:0x0006] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r5 == true) goto L_0x0008\l}"];
subgraph cluster_Region_1708782492 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|boolean r5 = shouldReMeasureChild(r2, r3, r4, r0)\l}"];
}
subgraph cluster_Region_756880374 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000d|boolean r5 = shouldMeasureChild(r2, r3, r4, r0)\l}"];
}
}
subgraph cluster_Region_206888890 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_642206871 {
label = "IF [B:4:0x0011] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|PHI: r5 \l  PHI: (r5v1 boolean) = (r5v2 boolean), (r5v3 boolean) binds: [B:3:0x000d, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 == true) goto L_0x0013\l}"];
subgraph cluster_Region_655749250 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|r2.measure(r3, r4)\l}"];
}
}
}
}
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.v7.widget.GridLayoutManager.measureChildWithDecorationsAndMargin((r1v0 'this' android.support.v7.widget.GridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r2v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_5 -> Node_6;
}

