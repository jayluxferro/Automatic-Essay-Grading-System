digraph "CFG forandroid.support.v7.widget.DefaultItemAnimator.animateChange(Landroid\/support\/v7\/widget\/RecyclerView$ViewHolder;Landroid\/support\/v7\/widget\/RecyclerView$ViewHolder;IIII)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r10 != r11) goto L_0x000d\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
Node_2 [shape=record,label="{2\:\ 0x000c|RETURN\l|return animateMove(r10, r12, r13, r14, r15)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|float r0 = r10.itemView.getTranslationX()\lfloat r1 = r10.itemView.getTranslationY()\lfloat r2 = r10.itemView.getAlpha()\lresetAnimation(r10)\lint r3 = (int) (((float) (r14 \- r12)) \- r0)\lint r4 = (int) (((float) (r15 \- r13)) \- r1)\lr10.itemView.setTranslationX(r0)\lr10.itemView.setTranslationY(r1)\lr10.itemView.setAlpha(r2)\l}"];
Node_4 [shape=record,label="{4\:\ 0x003b|if (r11 == null) goto L_0x0054\l}"];
Node_5 [shape=record,label="{5\:\ 0x003d|resetAnimation(r11)\lr11.itemView.setTranslationX((float) (\-r3))\lr11.itemView.setTranslationY((float) (\-r4))\lr11.itemView.setAlpha(0.0f)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0054|r9.mPendingChanges.add(new android.support.p003v7.widget.DefaultItemAnimator.ChangeInfo(r10, r11, r12, r13, r14, r15))\l}"];
Node_7 [shape=record,label="{7\:\ 0x0066|RETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean android.support.v7.widget.DefaultItemAnimator.animateChange((r9v0 'this' android.support.v7.widget.DefaultItemAnimator A[IMMUTABLE_TYPE, THIS]), (r10v0 android.support.v7.widget.RecyclerView$ViewHolder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 android.support.v7.widget.RecyclerView$ViewHolder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

