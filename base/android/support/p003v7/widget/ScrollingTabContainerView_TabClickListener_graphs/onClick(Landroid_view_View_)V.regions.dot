digraph "CFG forandroid.support.v7.widget.ScrollingTabContainerView.TabClickListener.onClick(Landroid\/view\/View;)V" {
subgraph cluster_Region_2131610641 {
label = "R(2:0|(2:2|6))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|((android.support.p003v7.widget.ScrollingTabContainerView.TabView) r6).getTab().select()\lint int r0 = android.support.p003v7.widget.ScrollingTabContainerView.this.mTabLayout.getChildCount()\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_1707496166 {
label = "LOOP:0: (2:2|6)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0014|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:6:0x0023] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0014\-\>B:6:0x0023\l|if (r2 \< r0) goto L_0x0016\l}"];
subgraph cluster_Region_1363533749 {
label = "R(2:2|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0016|android.view.View android.view.View r3 = android.support.p003v7.widget.ScrollingTabContainerView.this.mTabLayout.getChildAt(r2)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|LOOP_END\lPHI: r4 \l  PHI: (r4v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0014\-\>B:6:0x0023\l|r3.setSelected(r3 == r6)\lr2++\l}"];
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x001e}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0020}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0022}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0029}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0029|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0023|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0023|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.ScrollingTabContainerView.TabClickListener.onClick((r5v0 'this' android.support.v7.widget.ScrollingTabContainerView$TabClickListener A[IMMUTABLE_TYPE, THIS]), (r6v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8[style=dashed];
Node_2 -> Node_3;
Node_6 -> Node_1;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_10;
Node_5 -> Node_9;
Node_8 -> Node_7;
Node_9 -> Node_6;
Node_10 -> Node_6;
}

