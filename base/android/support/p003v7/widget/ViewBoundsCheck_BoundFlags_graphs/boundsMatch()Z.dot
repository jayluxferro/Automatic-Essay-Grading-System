digraph "CFG forandroid.support.v7.widget.ViewBoundsCheck.BoundFlags.boundsMatch()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if ((r4.mBoundFlags & 7) == 0) goto L_0x0016\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007}"];
Node_3 [shape=record,label="{3\:\ 0x0013|if ((r4.mBoundFlags & (compare(r4.mChildStart, r4.mRvStart) \<\< 0)) != 0) goto L_0x0016\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|RETURN\l|return false\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016}"];
Node_6 [shape=record,label="{6\:\ 0x001a|if ((r4.mBoundFlags & 112) == 0) goto L_0x002c\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c}"];
Node_8 [shape=record,label="{8\:\ 0x0029|if ((r4.mBoundFlags & (compare(r4.mChildStart, r4.mRvEnd) \<\< 4)) != 0) goto L_0x002c\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|RETURN\l|return false\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c}"];
Node_11 [shape=record,label="{11\:\ 0x0030|if ((r4.mBoundFlags & 1792) == 0) goto L_0x0042\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032}"];
Node_13 [shape=record,label="{13\:\ 0x003f|if ((r4.mBoundFlags & (compare(r4.mChildEnd, r4.mRvStart) \<\< 8)) != 0) goto L_0x0042\l}"];
Node_14 [shape=record,label="{14\:\ 0x0041|RETURN\l|return false\l}"];
Node_15 [shape=record,label="{15\:\ 0x0042}"];
Node_16 [shape=record,label="{16\:\ 0x0046|if ((r4.mBoundFlags & 28672) == 0) goto L_?\l}"];
Node_17 [shape=record,label="{17\:\ 0x0048}"];
Node_18 [shape=record,label="{18\:\ 0x0055|if ((r4.mBoundFlags & (compare(r4.mChildEnd, r4.mRvEnd) \<\< 12)) != 0) goto L_?\l}"];
Node_19 [shape=record,label="{19\:\ 0x0057|RETURN\l|return false\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{boolean android.support.v7.widget.ViewBoundsCheck.BoundFlags.boundsMatch((r4v0 'this' android.support.v7.widget.ViewBoundsCheck$BoundFlags A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
}

