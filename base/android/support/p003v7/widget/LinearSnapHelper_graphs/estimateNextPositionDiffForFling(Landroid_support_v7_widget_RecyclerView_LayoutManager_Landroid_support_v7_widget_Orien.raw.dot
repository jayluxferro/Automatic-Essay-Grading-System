digraph "CFG forandroid.support.v7.widget.LinearSnapHelper.estimateNextPositionDiffForFling(Landroid\/support\/v7\/widget\/RecyclerView$LayoutManager;Landroid\/support\/v7\/widget\/OrientationHelper;II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r5 I:int[]) = \l  (r2 I:android.support.v7.widget.LinearSnapHelper)\l  (r5 I:int)\l  (r6 I:int)\l android.support.v7.widget.LinearSnapHelper.calculateScrollDistance(int, int):int[] type: VIRTUAL \l0x0004: INVOKE  (r3 I:float) = \l  (r2 I:android.support.v7.widget.LinearSnapHelper)\l  (r3 I:android.support.v7.widget.RecyclerView$LayoutManager)\l  (r4 I:android.support.v7.widget.OrientationHelper)\l android.support.v7.widget.LinearSnapHelper.computeDistancePerChild(android.support.v7.widget.RecyclerView$LayoutManager, android.support.v7.widget.OrientationHelper):float type: DIRECT \l0x0008: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: CMP_G  (r6 I:int) = (r3 I:float), (r6 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r6 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: RETURN  (r4 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: AGET  (r6 I:?[int, float]) = (r5 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x0011: INVOKE  (r6 I:int) = (r6 I:int) java.lang.Math.abs(int):int type: STATIC \l0x0015: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0016: AGET  (r1 I:?[int, float]) = (r5 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l0x0018: INVOKE  (r1 I:int) = (r1 I:int) java.lang.Math.abs(int):int type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: IF  (r6 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:6:0x0021 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: AGET  (r4 I:?[int, float]) = (r5 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: AGET  (r4 I:?[int, float]) = (r5 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: CAST  (r4 I:float) = (float) (r4 I:int) \l0x0024: ARITH  (r4 I:float) = (r4 I:float) \/ (r3 I:float) \l0x0025: INVOKE  (r3 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{private int android.support.v7.widget.LinearSnapHelper.estimateNextPositionDiffForFling((r2 'this' I:android.support.v7.widget.LinearSnapHelper A[IMMUTABLE_TYPE, THIS]), (r3 I:android.support.v7.widget.RecyclerView$LayoutManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.support.v7.widget.OrientationHelper A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

