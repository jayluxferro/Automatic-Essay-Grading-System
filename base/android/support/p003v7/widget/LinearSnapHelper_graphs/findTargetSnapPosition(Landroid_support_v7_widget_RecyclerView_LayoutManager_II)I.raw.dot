digraph "CFG forandroid.support.v7.widget.LinearSnapHelper.findTargetSnapPosition(Landroid\/support\/v7\/widget\/RecyclerView$LayoutManager;II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r9 I:?[OBJECT, ARRAY]) android.support.v7.widget.RecyclerView$SmoothScroller$ScrollVectorProvider \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r1 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r0 I:int) = (r9 I:android.support.v7.widget.RecyclerView$LayoutManager) android.support.v7.widget.RecyclerView.LayoutManager.getItemCount():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000d \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: RETURN  (r1 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: INVOKE  (r2 I:android.view.View) = \l  (r8 I:android.support.v7.widget.LinearSnapHelper)\l  (r9 I:android.support.v7.widget.RecyclerView$LayoutManager)\l android.support.v7.widget.LinearSnapHelper.findSnapView(android.support.v7.widget.RecyclerView$LayoutManager):android.view.View type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0014 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: RETURN  (r1 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|0x0014: INVOKE  (r2 I:int) = \l  (r9 I:android.support.v7.widget.RecyclerView$LayoutManager)\l  (r2 I:android.view.View)\l android.support.v7.widget.RecyclerView.LayoutManager.getPosition(android.view.View):int type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|0x0018: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x001b \l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|0x001a: RETURN  (r1 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|0x001b: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x001c: CHECK_CAST  (r3 I:android.support.v7.widget.RecyclerView$SmoothScroller$ScrollVectorProvider) = (android.support.v7.widget.RecyclerView$SmoothScroller$ScrollVectorProvider) (r3 I:?[OBJECT, ARRAY]) \l0x001e: ARITH  (r4 I:int) = (r0 I:int) + (\-1 int) \l0x0020: INVOKE  (r3 I:android.graphics.PointF) = \l  (r3 I:android.support.v7.widget.RecyclerView$SmoothScroller$ScrollVectorProvider)\l  (r4 I:int)\l android.support.v7.widget.RecyclerView.SmoothScroller.ScrollVectorProvider.computeScrollVectorForPosition(int):android.graphics.PointF type: INTERFACE \l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|0x0024: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0027 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0026|0x0026: RETURN  (r1 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0027|0x0027: INVOKE  (r5 I:boolean) = (r9 I:android.support.v7.widget.RecyclerView$LayoutManager) android.support.v7.widget.RecyclerView.LayoutManager.canScrollHorizontally():boolean type: VIRTUAL \l0x002b: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002c: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x002d|0x002d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x003f \l}"];
Node_17 [shape=record,label="{17\:\ 0x002f|0x002f: INVOKE  (r5 I:android.support.v7.widget.OrientationHelper) = \l  (r8 I:android.support.v7.widget.LinearSnapHelper)\l  (r9 I:android.support.v7.widget.RecyclerView$LayoutManager)\l android.support.v7.widget.LinearSnapHelper.getHorizontalHelper(android.support.v7.widget.RecyclerView$LayoutManager):android.support.v7.widget.OrientationHelper type: DIRECT \l0x0033: INVOKE  (r10 I:int) = \l  (r8 I:android.support.v7.widget.LinearSnapHelper)\l  (r9 I:android.support.v7.widget.RecyclerView$LayoutManager)\l  (r5 I:android.support.v7.widget.OrientationHelper)\l  (r10 I:int)\l  (r7 I:int)\l android.support.v7.widget.LinearSnapHelper.estimateNextPositionDiffForFling(android.support.v7.widget.RecyclerView$LayoutManager, android.support.v7.widget.OrientationHelper, int, int):int type: DIRECT \l0x0037: IGET  (r5 I:float) = (r3 I:android.graphics.PointF) android.graphics.PointF.x float \l0x0039: CMP_G  (r5 I:int) = (r5 I:float), (r6 I:float) \l}"];
Node_18 [shape=record,label="{18\:\ 0x003b|0x003b: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:21:0x0040 \l}"];
Node_19 [shape=record,label="{19\:\ 0x003d|0x003d: NEG  (r10 I:int) = (r10 I:int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x003f|0x003f: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x0040|0x0040: INVOKE  (r5 I:boolean) = (r9 I:android.support.v7.widget.RecyclerView$LayoutManager) android.support.v7.widget.RecyclerView.LayoutManager.canScrollVertically():boolean type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x0044|0x0044: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0056 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0046|0x0046: INVOKE  (r5 I:android.support.v7.widget.OrientationHelper) = \l  (r8 I:android.support.v7.widget.LinearSnapHelper)\l  (r9 I:android.support.v7.widget.RecyclerView$LayoutManager)\l android.support.v7.widget.LinearSnapHelper.getVerticalHelper(android.support.v7.widget.RecyclerView$LayoutManager):android.support.v7.widget.OrientationHelper type: DIRECT \l0x004a: INVOKE  (r11 I:int) = \l  (r8 I:android.support.v7.widget.LinearSnapHelper)\l  (r9 I:android.support.v7.widget.RecyclerView$LayoutManager)\l  (r5 I:android.support.v7.widget.OrientationHelper)\l  (r7 I:int)\l  (r11 I:int)\l android.support.v7.widget.LinearSnapHelper.estimateNextPositionDiffForFling(android.support.v7.widget.RecyclerView$LayoutManager, android.support.v7.widget.OrientationHelper, int, int):int type: DIRECT \l0x004e: IGET  (r3 I:float) = (r3 I:android.graphics.PointF) android.graphics.PointF.y float \l0x0050: CMP_G  (r3 I:int) = (r3 I:float), (r6 I:float) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0052|0x0052: IF  (r3 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:27:0x0057 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0054|0x0054: NEG  (r11 I:int) = (r11 I:int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0056|0x0056: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_27 [shape=record,label="{27\:\ 0x0057|0x0057: INVOKE  (r9 I:boolean) = (r9 I:android.support.v7.widget.RecyclerView$LayoutManager) android.support.v7.widget.RecyclerView.LayoutManager.canScrollVertically():boolean type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x005b|0x005b: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x005e \l}"];
Node_29 [shape=record,label="{29\:\ 0x005d|0x005d: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_30 [shape=record,label="{30\:\ 0x005e|0x005e: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0061 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0060|0x0060: RETURN  (r1 I:int) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0061|0x0061: ARITH  (r2 I:int) = (r2 I:int) + (r10 I:int) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0062|0x0062: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:35:0x0065 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0064|0x0064: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_35 [shape=record,label="{35\:\ 0x0065|0x0065: IF  (r2 I:?[int, byte, short, char]) \< (r0 I:?[int, byte, short, char])  \-\> B:37:0x0068 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0067|0x0067: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_37 [shape=record,label="{37\:\ 0x0068|0x0068: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{public int android.support.v7.widget.LinearSnapHelper.findTargetSnapPosition((r8 'this' I:android.support.v7.widget.LinearSnapHelper A[IMMUTABLE_TYPE, THIS]), (r9 I:android.support.v7.widget.RecyclerView$LayoutManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
}

