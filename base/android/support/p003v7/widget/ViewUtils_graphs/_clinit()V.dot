digraph "CFG forandroid.support.v7.widget.ViewUtils.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 18) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|java.lang.Class\<android.view.View\> r0 = android.view.View.class\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|SYNTHETIC\lSplitter:B:3:0x000b\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ NoSuchMethodException \-\> 0x002b \}\lSplitter:B:3:0x000b\l|java.lang.Class[] r2 = new java.lang.Class[]\{android.graphics.Rect.class, android.graphics.Rect.class\}\lsComputeFitSystemWindowsMethod = r0.getDeclaredMethod(\"computeFitSystemWindows\", r2)     \/\/ Catch:\{ NoSuchMethodException \-\> 0x002b \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|Catch:\{ NoSuchMethodException \-\> 0x002b \}\l|if (sComputeFitSystemWindowsMethod.isAccessible() != false) goto L_?     \/\/ Catch:\{ NoSuchMethodException \-\> 0x002b \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|Catch:\{ NoSuchMethodException \-\> 0x002b \}\l|sComputeFitSystemWindowsMethod.setAccessible(true)     \/\/ Catch:\{ NoSuchMethodException \-\> 0x002b \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|android.util.Log.d(TAG, \"Could not find method computeFitSystemWindows. Oh well.\")\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lExcHandler: NoSuchMethodException (unused java.lang.NoSuchMethodException)\lSplitter:B:3:0x000b\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{static void android.support.v7.widget.ViewUtils.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_12;
Node_7 -> Node_9;
Node_8 -> Node_7;
}

