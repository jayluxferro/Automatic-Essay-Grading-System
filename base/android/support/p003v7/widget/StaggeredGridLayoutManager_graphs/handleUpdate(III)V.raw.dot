digraph "CFG forandroid.support.v7.widget.StaggeredGridLayoutManager.handleUpdate(III)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r5 I:android.support.v7.widget.StaggeredGridLayoutManager) android.support.v7.widget.StaggeredGridLayoutManager.mShouldReverseLayout boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:int) = (r5 I:android.support.v7.widget.StaggeredGridLayoutManager) android.support.v7.widget.StaggeredGridLayoutManager.getLastChildPosition():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: INVOKE  (r0 I:int) = (r5 I:android.support.v7.widget.StaggeredGridLayoutManager) android.support.v7.widget.StaggeredGridLayoutManager.getFirstChildPosition():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: CONST  (r1 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001b \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: IF  (r6 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:8:0x0016 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: ARITH  (r2 I:int) = (r7 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: ARITH  (r2 I:int) = (r6 I:int) + (1 int) \l0x0018: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: ARITH  (r2 I:int) = (r6 I:int) + (r7 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001e: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: IGET  (r4 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup) = (r5 I:android.support.v7.widget.StaggeredGridLayoutManager) android.support.v7.widget.StaggeredGridLayoutManager.mLazySpanLookup android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup \l0x0021: INVOKE  \l  (r4 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup)\l  (r2 I:int)\l android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.invalidateAfter(int):int type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0036 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|0x0026: SWITCH  \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2] t:[0x0030, 0x002a] \l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|0x002a: IGET  (r8 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup) = (r5 I:android.support.v7.widget.StaggeredGridLayoutManager) android.support.v7.widget.StaggeredGridLayoutManager.mLazySpanLookup android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup \l0x002c: INVOKE  \l  (r8 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup)\l  (r6 I:int)\l  (r7 I:int)\l android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.offsetForRemoval(int, int):void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0030|0x0030: IGET  (r8 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup) = (r5 I:android.support.v7.widget.StaggeredGridLayoutManager) android.support.v7.widget.StaggeredGridLayoutManager.mLazySpanLookup android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup \l0x0032: INVOKE  \l  (r8 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup)\l  (r6 I:int)\l  (r7 I:int)\l android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.offsetForAddition(int, int):void type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|0x0036: IGET  (r8 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup) = (r5 I:android.support.v7.widget.StaggeredGridLayoutManager) android.support.v7.widget.StaggeredGridLayoutManager.mLazySpanLookup android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup \l0x0038: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0039: INVOKE  \l  (r8 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup)\l  (r6 I:int)\l  (r1 I:int)\l android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.offsetForRemoval(int, int):void type: VIRTUAL \l0x003c: IGET  (r6 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup) = (r5 I:android.support.v7.widget.StaggeredGridLayoutManager) android.support.v7.widget.StaggeredGridLayoutManager.mLazySpanLookup android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup \l0x003e: INVOKE  \l  (r6 I:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup)\l  (r7 I:int)\l  (r1 I:int)\l android.support.v7.widget.StaggeredGridLayoutManager.LazySpanLookup.offsetForAddition(int, int):void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0041|0x0041: IF  (r3 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:20:0x0044 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0043|0x0043: RETURN   \l}"];
Node_20 [shape=record,label="{20\:\ 0x0044|0x0044: IGET  (r6 I:boolean) = (r5 I:android.support.v7.widget.StaggeredGridLayoutManager) android.support.v7.widget.StaggeredGridLayoutManager.mShouldReverseLayout boolean \l}"];
Node_21 [shape=record,label="{21\:\ 0x0046|0x0046: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x004d \l}"];
Node_22 [shape=record,label="{22\:\ 0x0048|0x0048: INVOKE  (r6 I:int) = (r5 I:android.support.v7.widget.StaggeredGridLayoutManager) android.support.v7.widget.StaggeredGridLayoutManager.getFirstChildPosition():int type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x004d|0x004d: INVOKE  (r6 I:int) = (r5 I:android.support.v7.widget.StaggeredGridLayoutManager) android.support.v7.widget.StaggeredGridLayoutManager.getLastChildPosition():int type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0051|0x0051: IF  (r2 I:?[int, byte, short, char]) \> (r6 I:?[int, byte, short, char])  \-\> B:26:0x0056 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0053|0x0053: INVOKE  (r5 I:android.support.v7.widget.StaggeredGridLayoutManager) android.support.v7.widget.StaggeredGridLayoutManager.requestLayout():void type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0056|0x0056: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v7.widget.StaggeredGridLayoutManager.handleUpdate((r5 'this' I:android.support.v7.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_15;
Node_13 -> Node_16;
Node_13 -> Node_18;
Node_15 -> Node_18;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
}

