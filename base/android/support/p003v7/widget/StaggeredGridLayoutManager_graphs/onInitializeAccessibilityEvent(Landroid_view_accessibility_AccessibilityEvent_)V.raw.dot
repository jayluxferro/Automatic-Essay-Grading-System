digraph "CFG forandroid.support.v7.widget.StaggeredGridLayoutManager.onInitializeAccessibilityEvent(Landroid\/view\/accessibility\/AccessibilityEvent;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r2 I:android.support.v7.widget.RecyclerView$LayoutManager)\l  (r3 I:android.view.accessibility.AccessibilityEvent)\l android.support.v7.widget.RecyclerView.LayoutManager.onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):void type: SUPER \l0x0003: INVOKE  (r0 I:int) = (r2 I:android.support.v7.widget.StaggeredGridLayoutManager) android.support.v7.widget.StaggeredGridLayoutManager.getChildCount():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:11:0x0030 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: INVOKE  (r1 I:android.view.View) = \l  (r2 I:android.support.v7.widget.StaggeredGridLayoutManager)\l  (r0 I:boolean)\l android.support.v7.widget.StaggeredGridLayoutManager.findFirstVisibleItemClosestToStart(boolean):android.view.View type: VIRTUAL \l0x000e: INVOKE  (r0 I:android.view.View) = \l  (r2 I:android.support.v7.widget.StaggeredGridLayoutManager)\l  (r0 I:boolean)\l android.support.v7.widget.StaggeredGridLayoutManager.findFirstVisibleItemClosestToEnd(boolean):android.view.View type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0017 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: INVOKE  (r1 I:int) = \l  (r2 I:android.support.v7.widget.StaggeredGridLayoutManager)\l  (r1 I:android.view.View)\l android.support.v7.widget.StaggeredGridLayoutManager.getPosition(android.view.View):int type: VIRTUAL \l0x001b: INVOKE  (r0 I:int) = \l  (r2 I:android.support.v7.widget.StaggeredGridLayoutManager)\l  (r0 I:android.view.View)\l android.support.v7.widget.StaggeredGridLayoutManager.getPosition(android.view.View):int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:9:0x0028 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: INVOKE  \l  (r3 I:android.view.accessibility.AccessibilityEvent)\l  (r1 I:int)\l android.view.accessibility.AccessibilityEvent.setFromIndex(int):void type: VIRTUAL \l0x0024: INVOKE  \l  (r3 I:android.view.accessibility.AccessibilityEvent)\l  (r0 I:int)\l android.view.accessibility.AccessibilityEvent.setToIndex(int):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: INVOKE  \l  (r3 I:android.view.accessibility.AccessibilityEvent)\l  (r0 I:int)\l android.view.accessibility.AccessibilityEvent.setFromIndex(int):void type: VIRTUAL \l0x002b: INVOKE  \l  (r3 I:android.view.accessibility.AccessibilityEvent)\l  (r1 I:int)\l android.view.accessibility.AccessibilityEvent.setToIndex(int):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|0x002f: RETURN   \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.StaggeredGridLayoutManager.onInitializeAccessibilityEvent((r2 'this' I:android.support.v7.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.accessibility.AccessibilityEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_6;
Node_4 -> Node_10[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_11;
Node_9 -> Node_11;
}

