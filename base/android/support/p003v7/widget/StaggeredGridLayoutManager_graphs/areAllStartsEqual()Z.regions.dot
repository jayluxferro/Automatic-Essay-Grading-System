digraph "CFG forandroid.support.v7.widget.StaggeredGridLayoutManager.areAllStartsEqual()Z" {
subgraph cluster_Region_1701627967 {
label = "R(3:0|(1:(2:(1:5)|(1:6)))|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r6.mSpans[0].getStartLine(Integer.MIN_VALUE)\lint r4 = 1\l}"];
subgraph cluster_LoopRegion_493970298 {
label = "LOOP:0: (1:(2:(1:5)|(1:6)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000f|if (r4 \< r6.mSpanCount) goto L_0x0011\l}"];
subgraph cluster_Region_611749251 {
label = "R(1:(2:(1:5)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1552850821 {
label = "R(2:(1:5)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2108344055 {
label = "IF [B:4:0x0019] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0019|if (r6.mSpans[r4].getStartLine(Integer.MIN_VALUE) != r0) goto L_0x001b\l}"];
subgraph cluster_Region_734723382 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001b|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_259445796 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001c|LOOP_END\lLOOP:0: B:1:0x000d\-\>B:6:0x001c\l|r4++\l}"];
}
}
}
}
Node_7 [shape=record,label="{7\:\ 0x001f|RETURN\l|return true\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000d|LOOP_START\lPHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:0:0x0000, B:6:0x001c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000d\-\>B:6:0x001c\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0011}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001b|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{boolean android.support.v7.widget.StaggeredGridLayoutManager.areAllStartsEqual((r6v0 'this' android.support.v7.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_4 -> Node_6[style=dashed];
Node_4 -> Node_8;
Node_6 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_8 -> Node_5;
Node_9 -> Node_7;
}

