digraph "CFG forandroid.support.v7.widget.StaggeredGridLayoutManager.updateLayoutState(ILandroid\/support\/v7\/widget\/RecyclerView$State;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = false\lr4.mLayoutState.mAvailable = 0\lr4.mLayoutState.mCurrentPosition = r5\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (isSmoothScrolling() == false) goto L_0x0030\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|int r6 = r6.getTargetScrollPosition()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|if (r6 == \-1) goto L_0x0030\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|boolean r0 = r4.mShouldReverseLayout\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|if (r6 \>= r5) goto L_0x001d\l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|r5 = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|r5 = false\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|PHI: r5 \l  PHI: (r5v9 boolean) = (r5v15 boolean), (r5v16 boolean) binds: [B:7:0x001d, B:6:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != r5) goto L_0x0029\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|r6 = r4.mPrimaryOrientation.getTotalSpace()\lr5 = 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|int r5 = r4.mPrimaryOrientation.getTotalSpace()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|r5 = 0\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|PHI: r5 \l  PHI: (r5v7 int) = (r5v8 int), (r5v11 int) binds: [B:11:0x0030, B:10:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|r6 = 0\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|PHI: r5 r6 \l  PHI: (r5v1 int) = (r5v7 int), (r5v14 int) binds: [B:12:0x0031, B:9:0x0020] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 int) = (r6v7 int), (r6v9 int) binds: [B:12:0x0031, B:9:0x0020] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|if (getClipToPadding() == false) goto L_0x004f\l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|android.support.v7.widget.LayoutState r0 = r4.mLayoutState\lr0.mStartLine = r4.mPrimaryOrientation.getStartAfterPadding() \- r5\landroid.support.v7.widget.LayoutState r5 = r4.mLayoutState\lr5.mEndLine = r4.mPrimaryOrientation.getEndAfterPadding() + r6\l}"];
Node_16 [shape=record,label="{16\:\ 0x004f|android.support.v7.widget.LayoutState r0 = r4.mLayoutState\lr0.mEndLine = r4.mPrimaryOrientation.getEnd() + r6\lint r5 = \-r5\lr4.mLayoutState.mStartLine = r5\l}"];
Node_17 [shape=record,label="{17\:\ 0x005f|r4.mLayoutState.mStopInFocusable = false\lr4.mLayoutState.mRecycle = true\landroid.support.v7.widget.LayoutState r5 = r4.mLayoutState\l}"];
Node_18 [shape=record,label="{18\:\ 0x006f|if (r4.mPrimaryOrientation.getMode() != 0) goto L_0x007a\l}"];
Node_19 [shape=record,label="{19\:\ 0x0071}"];
Node_20 [shape=record,label="{20\:\ 0x0077|if (r4.mPrimaryOrientation.getEnd() != 0) goto L_0x007a\l}"];
Node_21 [shape=record,label="{21\:\ 0x0079|r1 = true\l}"];
Node_22 [shape=record,label="{22\:\ 0x007a|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v0 boolean), (r1v2 boolean) binds: [B:18:0x006f, B:20:0x0077, B:21:0x0079] A[DONT_GENERATE, DONT_INLINE]\l|r5.mInfinite = r1\l}"];
Node_23 [shape=record,label="{23\:\ 0x007c|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.v7.widget.StaggeredGridLayoutManager.updateLayoutState((r4v0 'this' android.support.v7.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 android.support.v7.widget.RecyclerView$State A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_13;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
}

