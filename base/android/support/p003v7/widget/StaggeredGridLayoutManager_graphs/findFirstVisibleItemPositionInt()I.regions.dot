digraph "CFG forandroid.support.v7.widget.StaggeredGridLayoutManager.findFirstVisibleItemPositionInt()I" {
subgraph cluster_Region_2144322564 {
label = "R(2:(1:2)(1:3)|(2:(1:5)|(1:7))) | DECL_VAR: android.view.View null\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_510624111 {
label = "IF [B:1:0x0003] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r2.mShouldReverseLayout == true) goto L_0x0005\l}"];
subgraph cluster_Region_1880512113 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|android.view.View r0 = findFirstVisibleItemClosestToEnd(true)\l}"];
}
subgraph cluster_Region_1929773951 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|android.view.View r0 = findFirstVisibleItemClosestToStart(true)\l}"];
}
}
subgraph cluster_Region_69957119 {
label = "R(2:(1:5)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_528044346 {
label = "IF [B:4:0x000e] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|PHI: r0 \l  PHI: (r0v1 android.view.View) = (r0v4 android.view.View), (r0v5 android.view.View) binds: [B:3:0x000a, B:2:0x0005] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == null) goto L_0x0010\l}"];
subgraph cluster_Region_513235253 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|SYNTHETIC\lRETURN\l|return \-1\l}"];
}
}
subgraph cluster_Region_2081539953 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return getPosition(r0)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0012}"];
MethodNode[shape=record,label="{int android.support.v7.widget.StaggeredGridLayoutManager.findFirstVisibleItemPositionInt((r2v0 'this' android.support.v7.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_0 -> Node_1;
Node_6 -> Node_7;
}

