digraph "CFG forandroid.support.v7.widget.StaggeredGridLayoutManager.fill(Landroid\/support\/v7\/widget\/RecyclerView$Recycler;Landroid\/support\/v7\/widget\/LayoutState;Landroid\/support\/v7\/widget\/RecyclerView$State;)I" {
subgraph cluster_Region_1416594981 {
label = "R(10:0|(1:3)(2:(1:8)(1:10)|9)|11|(1:13)(1:15)|14|16|(15:23|24|(2:29|32)(1:33)|34|(1:36)(1:37)|38|(4:(1:42)(1:43)|44|(1:48)|49)(4:(1:52)(1:53)|54|(1:58)|59)|(1:(1:65)(2:(1:68)(1:70)|(3:72|(1:74)|75)))|76|(2:(1:87)(1:88)|89)(2:(1:82)(1:83)|84)|(1:92)(1:93)|(1:96)(1:97)|98|(1:(1:104)(2:105|107))|107)|(1:110)|(1:113)(1:114)|(2:(1:121)|(1:122))) | DECL_VAR: int null, int null, int null, android.support.v7.widget.StaggeredGridLayoutManager$Span null, int null, int null, int null, int null, int null, int null, boolean null, int null, int null, int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r6 = r16\landroid.support.p003v7.widget.RecyclerView.Recycler r7 = r17\landroid.support.p003v7.widget.LayoutState r8 = r18\l? r9 = 0\lr6.mRemainingSpans.set(0, r6.mSpanCount, true)\l}"];
subgraph cluster_IfRegion_1748049312 {
label = "IF [B:1:0x0013] THEN: R(1:3) ELSE: R(2:(1:8)(1:10)|9)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0013|if (r6.mLayoutState.mInfinite == true) goto L_0x0015\l}"];
subgraph cluster_Region_147759100 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0017|r11 = r8.mLayoutDirection == 1 ? Integer.MAX_VALUE : Integer.MIN_VALUE\l}"];
}
subgraph cluster_Region_214902853 {
label = "R(2:(1:8)(1:10)|9)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_548957806 {
label = "IF [B:7:0x0027] THEN: R(1:8) ELSE: R(1:10)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0027|if (r8.mLayoutDirection == 1) goto L_0x0029\l}"];
subgraph cluster_Region_507670696 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0029|int r0 = r8.mEndLine + r8.mAvailable\l}"];
}
subgraph cluster_Region_38797565 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0030|int r0 = r8.mStartLine \- r8.mAvailable\l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x002e|PHI: r0 \l  PHI: (r0v60 int) = (r0v59 int), (r0v62 int) binds: [B:10:0x0030, B:8:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|r11 = r0\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x0036|PHI: r11 \l  PHI: (r11v0 int) = (r11v1 int), (r11v3 int) binds: [B:9:0x002e, B:4:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|updateAllRemainingSpans(r8.mLayoutDirection, r11)\l}"];
subgraph cluster_IfRegion_1368696228 {
label = "IF [B:12:0x003d] THEN: R(1:13) ELSE: R(1:15)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x003d|if (r6.mShouldReverseLayout == true) goto L_0x003f\l}"];
subgraph cluster_Region_1771845276 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x003f|int r0 = r6.mPrimaryOrientation.getEndAfterPadding()\l}"];
}
subgraph cluster_Region_673142169 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0047|int r0 = r6.mPrimaryOrientation.getStartAfterPadding()\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0045|PHI: r0 \l  PHI: (r0v7 int) = (r0v6 int), (r0v56 int) binds: [B:15:0x0047, B:13:0x003f] A[DONT_GENERATE, DONT_INLINE]\l|int r12 = r0\l}"];
Node_16 [shape=record,label="{16\:\ 0x004e|boolean r0 = false\l}"];
subgraph cluster_LoopRegion_1332639164 {
label = "LOOP:0: (15:23|24|(2:29|32)(1:33)|34|(1:36)(1:37)|38|(4:(1:42)(1:43)|44|(1:48)|49)(4:(1:52)(1:53)|54|(1:58)|59)|(1:(1:65)(2:(1:68)(1:70)|(3:72|(1:74)|75)))|76|(2:(1:87)(1:88)|89)(2:(1:82)(1:83)|84)|(1:92)(1:93)|(1:96)(1:97)|98|(1:(1:104)(2:105|107))|107)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0054|if (r18.hasMore(r19) != false) goto L_0x0056\l}"];
subgraph cluster_Region_469018127 {
label = "R(15:23|24|(2:29|32)(1:33)|34|(1:36)(1:37)|38|(4:(1:42)(1:43)|44|(1:48)|49)(4:(1:52)(1:53)|54|(1:58)|59)|(1:(1:65)(2:(1:68)(1:70)|(3:72|(1:74)|75)))|76|(2:(1:87)(1:88)|89)(2:(1:82)(1:83)|84)|(1:92)(1:93)|(1:96)(1:97)|98|(1:(1:104)(2:105|107))|107)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0064|android.view.View android.view.View r13 = r8.next(r7)\landroid.support.v7.widget.StaggeredGridLayoutManager$LayoutParams android.support.p003v7.widget.StaggeredGridLayoutManager.LayoutParams r14 = (android.support.p003v7.widget.StaggeredGridLayoutManager.LayoutParams) r13.getLayoutParams()\lint int r0 = r14.getViewLayoutPosition()\lint int r1 = r6.mLazySpanLookup.getSpan(r0)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0079|boolean r3 = r1 == \-1\l}"];
subgraph cluster_IfRegion_966033789 {
label = "IF [B:27:0x007e] THEN: R(2:29|32) ELSE: R(1:33)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x007e|PHI: r3 \l  PHI: (r3v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == true) goto L_0x0080\l}"];
subgraph cluster_Region_2115849780 {
label = "R(2:29|32)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0082|r1 = r14.mFullSpan ? r6.mSpans[r9] : getNextSpan(r8)\l}"];
Node_32 [shape=record,label="{32\:\ 0x008d|PHI: r1 \l  PHI: (r1v50 android.support.v7.widget.StaggeredGridLayoutManager$Span) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r6.mLazySpanLookup.setSpan(r0, r1)\l}"];
}
subgraph cluster_Region_424955279 {
label = "R(1:33)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0093|r1 = r6.mSpans[r1]\l}"];
}
}
Node_34 [shape=record,label="{34\:\ 0x0097|PHI: r1 \l  PHI: (r1v13 android.support.v7.widget.StaggeredGridLayoutManager$Span) = (r1v48 android.support.v7.widget.StaggeredGridLayoutManager$Span), (r1v50 android.support.v7.widget.StaggeredGridLayoutManager$Span) binds: [B:33:0x0093, B:32:0x008d] A[DONT_GENERATE, DONT_INLINE]\l|android.support.p003v7.widget.StaggeredGridLayoutManager.Span r15 = r1\lr14.mSpan = r15\l}"];
subgraph cluster_IfRegion_490050695 {
label = "IF [B:35:0x009c] THEN: R(1:36) ELSE: R(1:37)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x009c|if (r8.mLayoutDirection == 1) goto L_0x009e\l}"];
subgraph cluster_Region_1634691316 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x009e|addView(r13)\l}"];
}
subgraph cluster_Region_417348936 {
label = "R(1:37)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x00a2|addView(r13, r9)\l}"];
}
}
Node_38 [shape=record,label="{38\:\ 0x00a5|measureChildWithDecorationsAndMargin(r13, r14, r9)\l}"];
subgraph cluster_IfRegion_285175993 {
label = "IF [B:39:0x00aa] THEN: R(4:(1:42)(1:43)|44|(1:48)|49) ELSE: R(4:(1:52)(1:53)|54|(1:58)|59)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x00aa|if (r8.mLayoutDirection == 1) goto L_0x00ac\l}"];
subgraph cluster_Region_186348412 {
label = "R(4:(1:42)(1:43)|44|(1:48)|49)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_132569179 {
label = "IF [B:41:0x00ae] THEN: R(1:42) ELSE: R(1:43)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x00ae|if (r14.mFullSpan == true) goto L_0x00b0\l}"];
subgraph cluster_Region_1880050842 {
label = "R(1:42)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x00b0|int r1 = getMaxEnd(r12)\l}"];
}
subgraph cluster_Region_91742174 {
label = "R(1:43)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x00b5|int r1 = r15.getEndLine(r12)\l}"];
}
}
Node_44 [shape=record,label="{44\:\ 0x00b9|PHI: r1 \l  PHI: (r1v45 int) = (r1v46 int), (r1v47 int) binds: [B:43:0x00b5, B:42:0x00b0] A[DONT_GENERATE, DONT_INLINE]\l|int int r4 = r6.mPrimaryOrientation.getDecoratedMeasurement(r13) + r1\l}"];
subgraph cluster_IfRegion_1193802143 {
label = "IF [B:45:0x00c0, B:47:0x00c4] THEN: R(1:48) ELSE: null";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x00c0|ADDED_TO_REGION\l|if (r3 == true) goto L_0x00c2\l}"];
Node_47 [shape=record,label="{47\:\ 0x00c4|ADDED_TO_REGION\l|if (r14.mFullSpan == true) goto L_0x00c6\l}"];
subgraph cluster_Region_1549768695 {
label = "R(1:48)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x00c6|android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem android.support.p003v7.widget.StaggeredGridLayoutManager.LazySpanLookup.FullSpanItem r5 = createFullSpanItemFromEnd(r1)\lr5.mGapDir = \-1\lr5.mPosition = r0\lr6.mLazySpanLookup.addFullSpanItem(r5)\l}"];
}
}
Node_49 [shape=record,label="{49\:\ 0x00d3|r5 = r4\lr4 = r1\l}"];
}
subgraph cluster_Region_1326567685 {
label = "R(4:(1:52)(1:53)|54|(1:58)|59)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_91246038 {
label = "IF [B:51:0x00d8] THEN: R(1:52) ELSE: R(1:53)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x00d8|if (r14.mFullSpan == true) goto L_0x00da\l}"];
subgraph cluster_Region_1469510004 {
label = "R(1:52)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x00da|int r1 = getMinStart(r12)\l}"];
}
subgraph cluster_Region_1597375948 {
label = "R(1:53)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x00df|int r1 = r15.getStartLine(r12)\l}"];
}
}
Node_54 [shape=record,label="{54\:\ 0x00e3|PHI: r1 \l  PHI: (r1v41 int) = (r1v42 int), (r1v43 int) binds: [B:53:0x00df, B:52:0x00da] A[DONT_GENERATE, DONT_INLINE]\l|int r4 = r1 \- r6.mPrimaryOrientation.getDecoratedMeasurement(r13)\l}"];
subgraph cluster_IfRegion_182784005 {
label = "IF [B:55:0x00eb, B:57:0x00ef] THEN: R(1:58) ELSE: null";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x00eb|ADDED_TO_REGION\l|if (r3 == true) goto L_0x00ed\l}"];
Node_57 [shape=record,label="{57\:\ 0x00ef|ADDED_TO_REGION\l|if (r14.mFullSpan == true) goto L_0x00f1\l}"];
subgraph cluster_Region_19296470 {
label = "R(1:58)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x00f1|android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem android.support.p003v7.widget.StaggeredGridLayoutManager.LazySpanLookup.FullSpanItem r5 = createFullSpanItemFromStart(r1)\lr5.mGapDir = 1\lr5.mPosition = r0\lr6.mLazySpanLookup.addFullSpanItem(r5)\l}"];
}
}
Node_59 [shape=record,label="{59\:\ 0x00fe|r5 = r1\l}"];
}
}
subgraph cluster_IfRegion_304799155 {
label = "IF [B:61:0x0101, B:63:0x0105] THEN: R(1:(1:65)(2:(1:68)(1:70)|(3:72|(1:74)|75))) ELSE: null";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x0101|ADDED_TO_REGION\l|if (r14.mFullSpan == true) goto L_0x0103\l}"];
Node_63 [shape=record,label="{63\:\ 0x0105|ADDED_TO_REGION\l|if (r8.mItemDirection == \-1) goto L_0x0107\l}"];
subgraph cluster_Region_434690474 {
label = "R(1:(1:65)(2:(1:68)(1:70)|(3:72|(1:74)|75)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_185001561 {
label = "IF [B:64:0x0107] THEN: R(1:65) ELSE: R(2:(1:68)(1:70)|(3:72|(1:74)|75))";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x0107|if (r3 == true) goto L_0x0109\l}"];
subgraph cluster_Region_2035555114 {
label = "R(1:65)";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ 0x0109|r6.mLaidOutInvalidFullSpan = true\l}"];
}
subgraph cluster_Region_219752481 {
label = "R(2:(1:68)(1:70)|(3:72|(1:74)|75))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_114449708 {
label = "IF [B:67:0x010e] THEN: R(1:68) ELSE: R(1:70)";
node [shape=record,color=blue];
Node_67 [shape=record,label="{67\:\ 0x010e|if (r8.mLayoutDirection == 1) goto L_0x0110\l}"];
subgraph cluster_Region_902279871 {
label = "R(1:68)";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x0110|boolean r1 = areAllEndsEqual()\l}"];
}
subgraph cluster_Region_117395662 {
label = "R(1:70)";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x0116|boolean r1 = areAllStartsEqual()\l}"];
}
}
subgraph cluster_IfRegion_837185451 {
label = "IF [B:71:0x011b] THEN: R(3:72|(1:74)|75) ELSE: null";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x011b|if ((!r1) == true) goto L_0x011d\l}"];
subgraph cluster_Region_341052492 {
label = "R(3:72|(1:74)|75)";
node [shape=record,color=blue];
Node_72 [shape=record,label="{72\:\ 0x011d|android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem android.support.p003v7.widget.StaggeredGridLayoutManager.LazySpanLookup.FullSpanItem r0 = r6.mLazySpanLookup.getFullSpanItem(r0)\l}"];
subgraph cluster_IfRegion_2059515215 {
label = "IF [B:73:0x0123] THEN: R(1:74) ELSE: null";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x0123|if (r0 != null) goto L_0x0125\l}"];
subgraph cluster_Region_527783671 {
label = "R(1:74)";
node [shape=record,color=blue];
Node_74 [shape=record,label="{74\:\ 0x0125|r0.mHasUnwantedGapAfter = true\l}"];
}
}
Node_75 [shape=record,label="{75\:\ 0x0127|r6.mLaidOutInvalidFullSpan = true\l}"];
}
}
}
}
}
}
Node_76 [shape=record,label="{76\:\ 0x0129|attachViewToSpans(r13, r14, r8)\l}"];
subgraph cluster_IfRegion_1855772084 {
label = "IF [B:77:0x0130, B:79:0x0134] THEN: R(2:(1:87)(1:88)|89) ELSE: R(2:(1:82)(1:83)|84)";
node [shape=record,color=blue];
Node_77 [shape=record,label="{77\:\ 0x0130|if (isLayoutRTL() == false) goto L_0x015d\l}"];
Node_79 [shape=record,label="{79\:\ 0x0134|ADDED_TO_REGION\l|if (r6.mOrientation != 1) goto L_0x015d\l}"];
subgraph cluster_Region_23298205 {
label = "R(2:(1:87)(1:88)|89)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_997209346 {
label = "IF [B:86:0x015f] THEN: R(1:87) ELSE: R(1:88)";
node [shape=record,color=blue];
Node_86 [shape=record,label="{86\:\ 0x015f|if (r14.mFullSpan == true) goto L_0x0161\l}"];
subgraph cluster_Region_621631632 {
label = "R(1:87)";
node [shape=record,color=blue];
Node_87 [shape=record,label="{87\:\ 0x0161|int r0 = r6.mSecondaryOrientation.getStartAfterPadding()\l}"];
}
subgraph cluster_Region_1065663769 {
label = "R(1:88)";
node [shape=record,color=blue];
Node_88 [shape=record,label="{88\:\ 0x0168|int r0 = (r15.mIndex * r6.mSizePerSpan) + r6.mSecondaryOrientation.getStartAfterPadding()\l}"];
}
}
Node_89 [shape=record,label="{89\:\ 0x0175|PHI: r0 \l  PHI: (r0v40 int) = (r0v43 int), (r0v45 int) binds: [B:88:0x0168, B:87:0x0161] A[DONT_GENERATE, DONT_INLINE]\l|r3 = r0\lr9 = r6.mSecondaryOrientation.getDecoratedMeasurement(r13) + r0\l}"];
}
subgraph cluster_Region_458322061 {
label = "R(2:(1:82)(1:83)|84)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1139001586 {
label = "IF [B:81:0x0138] THEN: R(1:82) ELSE: R(1:83)";
node [shape=record,color=blue];
Node_81 [shape=record,label="{81\:\ 0x0138|if (r14.mFullSpan == true) goto L_0x013a\l}"];
subgraph cluster_Region_1073435997 {
label = "R(1:82)";
node [shape=record,color=blue];
Node_82 [shape=record,label="{82\:\ 0x013a|int r0 = r6.mSecondaryOrientation.getEndAfterPadding()\l}"];
}
subgraph cluster_Region_67610451 {
label = "R(1:83)";
node [shape=record,color=blue];
Node_83 [shape=record,label="{83\:\ 0x0141|int r0 = r6.mSecondaryOrientation.getEndAfterPadding() \- (((r6.mSpanCount \- 1) \- r15.mIndex) * r6.mSizePerSpan)\l}"];
}
}
Node_84 [shape=record,label="{84\:\ 0x0152|PHI: r0 \l  PHI: (r0v48 int) = (r0v51 int), (r0v53 int) binds: [B:83:0x0141, B:82:0x013a] A[DONT_GENERATE, DONT_INLINE]\l|r9 = r0\lr3 = r0 \- r6.mSecondaryOrientation.getDecoratedMeasurement(r13)\l}"];
}
}
subgraph cluster_IfRegion_935857670 {
label = "IF [B:91:0x0180] THEN: R(1:92) ELSE: R(1:93)";
node [shape=record,color=blue];
Node_91 [shape=record,label="{91\:\ 0x0180|if (r6.mOrientation == 1) goto L_0x0182\l}"];
subgraph cluster_Region_1266774024 {
label = "R(1:92)";
node [shape=record,color=blue];
Node_92 [shape=record,label="{92\:\ 0x0182|layoutDecoratedWithMargins(r13, r3, r4, r9, r5)\l}"];
}
subgraph cluster_Region_181995908 {
label = "R(1:93)";
node [shape=record,color=blue];
Node_93 [shape=record,label="{93\:\ 0x018c|layoutDecoratedWithMargins(r13, r4, r3, r5, r9)\l}"];
}
}
subgraph cluster_IfRegion_1157247909 {
label = "IF [B:95:0x0197] THEN: R(1:96) ELSE: R(1:97)";
node [shape=record,color=blue];
Node_95 [shape=record,label="{95\:\ 0x0197|if (r14.mFullSpan == true) goto L_0x0199\l}"];
subgraph cluster_Region_1943302398 {
label = "R(1:96)";
node [shape=record,color=blue];
Node_96 [shape=record,label="{96\:\ 0x0199|updateAllRemainingSpans(r6.mLayoutState.mLayoutDirection, r11)\l}"];
}
subgraph cluster_Region_419779015 {
label = "R(1:97)";
node [shape=record,color=blue];
Node_97 [shape=record,label="{97\:\ 0x01a1|updateRemainingSpans(r15, r6.mLayoutState.mLayoutDirection, r11)\l}"];
}
}
Node_98 [shape=record,label="{98\:\ 0x01a8|recycle(r7, r6.mLayoutState)\l}"];
subgraph cluster_IfRegion_388171562 {
label = "IF [B:99:0x01b1, B:101:0x01b7] THEN: R(1:(1:104)(2:105|107)) ELSE: null";
node [shape=record,color=blue];
Node_99 [shape=record,label="{99\:\ 0x01b1|ADDED_TO_REGION\l|if (r6.mLayoutState.mStopInFocusable == true) goto L_0x01b3\l}"];
Node_101 [shape=record,label="{101\:\ 0x01b7|ADDED_TO_REGION\l|if (r13.hasFocusable() == true) goto L_0x01b9\l}"];
subgraph cluster_Region_1909314072 {
label = "R(1:(1:104)(2:105|107))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1723692551 {
label = "IF [B:103:0x01bb] THEN: R(1:104) ELSE: R(2:105|107)";
node [shape=record,color=blue];
Node_103 [shape=record,label="{103\:\ 0x01bb|if (r14.mFullSpan == true) goto L_0x01bd\l}"];
subgraph cluster_Region_2046068960 {
label = "R(1:104)";
node [shape=record,color=blue];
Node_104 [shape=record,label="{104\:\ 0x01bd|r6.mRemainingSpans.clear()\l}"];
}
subgraph cluster_Region_1550033970 {
label = "R(2:105|107)";
node [shape=record,color=blue];
Node_105 [shape=record,label="{105\:\ 0x01c3|r6.mRemainingSpans.set(r15.mIndex, false)\l}"];
Node_107 [shape=record,label="{107\:\ 0x01cd|LOOP_END\lLOOP:0: B:17:0x004f\-\>B:107:0x01cd\l|r0 = true\lr9 = 0\l}"];
}
}
}
}
Node_107 [shape=record,label="{107\:\ 0x01cd|LOOP_END\lLOOP:0: B:17:0x004f\-\>B:107:0x01cd\l|r0 = true\lr9 = 0\l}"];
}
}
subgraph cluster_IfRegion_1440213292 {
label = "IF [B:109:0x01d2] THEN: R(1:110) ELSE: null";
node [shape=record,color=blue];
Node_109 [shape=record,label="{109\:\ 0x01d2|if (r0 == false) goto L_0x01d4\l}"];
subgraph cluster_Region_400653792 {
label = "R(1:110)";
node [shape=record,color=blue];
Node_110 [shape=record,label="{110\:\ 0x01d4|recycle(r7, r6.mLayoutState)\l}"];
}
}
subgraph cluster_IfRegion_238752230 {
label = "IF [B:112:0x01dd] THEN: R(1:113) ELSE: R(1:114)";
node [shape=record,color=blue];
Node_112 [shape=record,label="{112\:\ 0x01dd|if (r6.mLayoutState.mLayoutDirection == \-1) goto L_0x01df\l}"];
subgraph cluster_Region_236459166 {
label = "R(1:113)";
node [shape=record,color=blue];
Node_113 [shape=record,label="{113\:\ 0x01df|int r1 = r6.mPrimaryOrientation.getStartAfterPadding() \- getMinStart(r6.mPrimaryOrientation.getStartAfterPadding())\l}"];
}
subgraph cluster_Region_1860519271 {
label = "R(1:114)";
node [shape=record,color=blue];
Node_114 [shape=record,label="{114\:\ 0x01f1|int r1 = getMaxEnd(r6.mPrimaryOrientation.getEndAfterPadding()) \- r6.mPrimaryOrientation.getEndAfterPadding()\l}"];
}
}
subgraph cluster_Region_1589171039 {
label = "R(2:(1:121)|(1:122))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1098553218 {
label = "IF [B:115:0x0203] THEN: R(1:121) ELSE: null";
node [shape=record,color=blue];
Node_115 [shape=record,label="{115\:\ 0x0203|PHI: r1 \l  PHI: (r1v2 int) = (r1v5 int), (r1v8 int) binds: [B:114:0x01f1, B:113:0x01df] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \> 0) goto L_0x0205\l}"];
subgraph cluster_Region_930246877 {
label = "R(1:121)";
node [shape=record,color=blue];
Node_121 [shape=record,label="{121\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return java.lang.Math.min(r8.mAvailable, r1)\l}"];
}
}
subgraph cluster_Region_479507653 {
label = "R(1:122)";
node [shape=record,color=blue];
Node_122 [shape=record,label="{122\:\ ?|SYNTHETIC\lRETURN\l|return 0\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0015}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0019}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0020}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0025}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x004f|LOOP_START\lPHI: r0 r9 \l  PHI: (r0v9 boolean) = (r0v8 boolean), (r0v28 boolean) binds: [B:16:0x004e, B:107:0x01cd] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v1 ?) = (r9v0 ?), (r9v4 ?) binds: [B:16:0x004e, B:107:0x01cd] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:17:0x004f\-\>B:107:0x01cd\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0056}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x005a|ADDED_TO_REGION\l|if (r6.mLayoutState.mInfinite != false) goto L_0x0064\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x005c}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0062|ADDED_TO_REGION\l|if (r6.mRemainingSpans.isEmpty() == false) goto L_0x0064\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x007b}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x007d}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0080}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0084}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0089}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x00ac}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x00c2}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x00d6}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x00ed}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x00ff|PHI: r4 r5 \l  PHI: (r4v0 int) = (r4v5 int), (r4v9 int) binds: [B:59:0x00fe, B:49:0x00d3] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v0 int) = (r5v2 int), (r5v5 int) binds: [B:59:0x00fe, B:49:0x00d3] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x0103}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x010c}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x0114|PHI: r1 \l  PHI: (r1v36 boolean) = (r1v35 boolean), (r1v39 boolean) binds: [B:70:0x0116, B:68:0x0110] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_78 [shape=record,color=red,label="{78\:\ 0x0132}"];
Node_80 [shape=record,color=red,label="{80\:\ 0x0136}"];
Node_85 [shape=record,color=red,label="{85\:\ 0x015d}"];
Node_90 [shape=record,color=red,label="{90\:\ 0x017e|PHI: r3 r9 \l  PHI: (r3v3 int) = (r3v7 int), (r3v8 int) binds: [B:89:0x0175, B:84:0x0152] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v3 int) = (r9v5 int), (r9v6 int) binds: [B:89:0x0175, B:84:0x0152] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_94 [shape=record,color=red,label="{94\:\ 0x0195}"];
Node_100 [shape=record,color=red,label="{100\:\ 0x01b3}"];
Node_102 [shape=record,color=red,label="{102\:\ 0x01b9}"];
Node_106 [shape=record,color=red,label="{106\:\ 0x01cc}"];
Node_108 [shape=record,color=red,label="{108\:\ 0x01d1}"];
Node_111 [shape=record,color=red,label="{111\:\ 0x01d9}"];
Node_116 [shape=record,color=red,label="{116\:\ 0x0205}"];
Node_117 [shape=record,color=red,label="{117\:\ 0x01d1|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_118 [shape=record,color=red,label="{118\:\ 0x01d1|SYNTHETIC\l}"];
Node_119 [shape=record,color=red,label="{119\:\ 0x01cd|SYNTHETIC\l}"];
Node_120 [shape=record,color=red,label="{120\:\ 0x01cd|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int android.support.v7.widget.StaggeredGridLayoutManager.fill((r16v0 'this' android.support.v7.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r17v0 android.support.v7.widget.RecyclerView$Recycler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 android.support.v7.widget.LayoutState A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 android.support.v7.widget.RecyclerView$State A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | JADX WARNING: type inference failed for: r9v0\lJADX WARNING: type inference failed for: r9v1, types: [boolean, int]\lJADX WARNING: type inference failed for: r9v4\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_7 -> Node_8;
Node_7 -> Node_10[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_9;
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_15[style=dashed];
Node_13 -> Node_14;
Node_15 -> Node_14;
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_18 -> Node_117[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_26;
Node_27 -> Node_28;
Node_27 -> Node_33[style=dashed];
Node_29 -> Node_30;
Node_29 -> Node_31;
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_50[style=dashed];
Node_41 -> Node_42;
Node_41 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_45 -> Node_49[style=dashed];
Node_47 -> Node_48;
Node_47 -> Node_49[style=dashed];
Node_48 -> Node_49;
Node_49 -> Node_60;
Node_51 -> Node_52;
Node_51 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_55 -> Node_59[style=dashed];
Node_57 -> Node_58;
Node_57 -> Node_59[style=dashed];
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_61 -> Node_62;
Node_61 -> Node_76[style=dashed];
Node_63 -> Node_64;
Node_63 -> Node_76[style=dashed];
Node_64 -> Node_65;
Node_64 -> Node_66[style=dashed];
Node_65 -> Node_76;
Node_67 -> Node_68;
Node_67 -> Node_70[style=dashed];
Node_68 -> Node_69;
Node_70 -> Node_69;
Node_71 -> Node_72;
Node_71 -> Node_76[style=dashed];
Node_72 -> Node_73;
Node_73 -> Node_74;
Node_73 -> Node_75[style=dashed];
Node_74 -> Node_75;
Node_75 -> Node_76;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_85;
Node_79 -> Node_80[style=dashed];
Node_79 -> Node_85;
Node_86 -> Node_87;
Node_86 -> Node_88[style=dashed];
Node_87 -> Node_89;
Node_88 -> Node_89;
Node_89 -> Node_90;
Node_81 -> Node_82;
Node_81 -> Node_83[style=dashed];
Node_82 -> Node_84;
Node_83 -> Node_84;
Node_84 -> Node_90;
Node_91 -> Node_92;
Node_91 -> Node_93[style=dashed];
Node_92 -> Node_94;
Node_93 -> Node_94;
Node_95 -> Node_96;
Node_95 -> Node_97[style=dashed];
Node_96 -> Node_98;
Node_97 -> Node_98;
Node_98 -> Node_99;
Node_99 -> Node_100;
Node_99 -> Node_106[style=dashed];
Node_101 -> Node_102;
Node_101 -> Node_106[style=dashed];
Node_103 -> Node_104;
Node_103 -> Node_105[style=dashed];
Node_104 -> Node_106;
Node_105 -> Node_120;
Node_107 -> Node_17;
Node_107 -> Node_17;
Node_109 -> Node_110;
Node_109 -> Node_111[style=dashed];
Node_110 -> Node_111;
Node_112 -> Node_113;
Node_112 -> Node_114[style=dashed];
Node_113 -> Node_115;
Node_114 -> Node_115;
Node_115 -> Node_116;
Node_115 -> Node_122[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_11;
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_118[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_40 -> Node_41;
Node_46 -> Node_47;
Node_50 -> Node_51;
Node_56 -> Node_57;
Node_60 -> Node_61;
Node_62 -> Node_63;
Node_66 -> Node_67;
Node_69 -> Node_71;
Node_78 -> Node_79;
Node_80 -> Node_81;
Node_85 -> Node_86;
Node_90 -> Node_91;
Node_94 -> Node_95;
Node_100 -> Node_101;
Node_102 -> Node_103;
Node_106 -> Node_119;
Node_108 -> Node_109;
Node_111 -> Node_112;
Node_116 -> Node_121;
Node_117 -> Node_108;
Node_118 -> Node_108;
Node_119 -> Node_107;
Node_120 -> Node_107;
}

