digraph "CFG forandroid.support.v7.widget.LinearLayoutCompat.layoutHorizontal(IIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r6 = r27\lboolean r2 = android.support.p003v7.widget.ViewUtils.isLayoutRtl(r27)\lint r7 = getPaddingTop()\lint r3 = r31 \- r29\lint r8 = r3 \- getPaddingBottom()\lint r9 = (r3 \- r7) \- getPaddingBottom()\lint r10 = getVirtualChildCount()\lr3 = r6.mGravity & android.support.p000v4.view.GravityCompat.RELATIVE_HORIZONTAL_GRAVITY_MASK\lr11 = r6.mGravity & 112\lboolean r12 = r6.mBaselineAligned\lint[] r13 = r6.mMaxAscent\lint[] r14 = r6.mMaxDescent\lint r3 = android.support.p000v4.view.GravityCompat.getAbsoluteGravity(r3, android.support.p000v4.view.ViewCompat.getLayoutDirection(r27))\l}"];
Node_1 [shape=record,label="{1\:\ 0x0037|if (r3 == 1) goto L_0x004e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0039}"];
Node_3 [shape=record,label="{3\:\ 0x003a|if (r3 == 5) goto L_0x0041\l}"];
Node_4 [shape=record,label="{4\:\ 0x003c|int r0 = getPaddingLeft()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0041|int r0 = ((getPaddingLeft() + r30) \- r28) \- r6.mTotalLength\l}"];
Node_6 [shape=record,label="{6\:\ 0x004e|int r3 = getPaddingLeft()\lint r0 = (((r30 \- r28) \- r6.mTotalLength) \/ 2) + r3\l}"];
Node_7 [shape=record,label="{7\:\ 0x0059|PHI: r0 \l  PHI: (r0v0 int) = (r0v16 int), (r0v18 int), (r0v19 int) binds: [B:6:0x004e, B:5:0x0041, B:4:0x003c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x005a|if (r2 == false) goto L_0x0063\l}"];
Node_9 [shape=record,label="{9\:\ 0x005c|r16 = r10 + \-1\lr17 = \-1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0063|r16 = 0\lr17 = 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0067|PHI: r16 r17 \l  PHI: (r16v0 int) = (r16v1 int), (r16v2 int) binds: [B:10:0x0063, B:9:0x005c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r17v0 int) = (r17v1 int), (r17v2 int) binds: [B:10:0x0063, B:9:0x005c] A[DONT_GENERATE, DONT_INLINE]\l|r3 = 0\l}"];
Node_12 [shape=record,label="{12\:\ 0x0068|LOOP_START\lPHI: r0 r3 r7 r10 r11 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:11:0x0067, B:52:0x013f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v6 int) = (r3v5 int), (r3v8 int) binds: [B:11:0x0067, B:52:0x013f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 int) = (r7v0 int), (r7v2 int) binds: [B:11:0x0067, B:52:0x013f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 int) = (r10v0 int), (r10v2 int) binds: [B:11:0x0067, B:52:0x013f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v1 int) = (r11v0 int), (r11v2 int) binds: [B:11:0x0067, B:52:0x013f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:12:0x0068\-\>B:52:0x013f\l|if (r3 \>= r10) goto L_0x014b\l}"];
Node_13 [shape=record,label="{13\:\ 0x006a|int r2 = r16 + (r17 * r3)\landroid.view.View r1 = getVirtualChildAt(r2)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0072|if (r1 != null) goto L_0x0085\l}"];
Node_15 [shape=record,label="{15\:\ 0x0074|int r0 = r0 + measureNullChild(r2)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0079|PHI: r0 \l  PHI: (r0v11 int) = (r0v1 int), (r0v12 int) binds: [B:51:0x013b, B:15:0x0074] A[DONT_GENERATE, DONT_INLINE]\l|r26 = r7\lr23 = r10\lr24 = r11\l}"];
Node_17 [shape=record,label="{17\:\ 0x0085}"];
Node_18 [shape=record,label="{18\:\ 0x008b|if (r1.getVisibility() == 8) goto L_0x013b\l}"];
Node_19 [shape=record,label="{19\:\ 0x008d|int r15 = r1.getMeasuredWidth()\lint r5 = r1.getMeasuredHeight()\landroid.support.v7.widget.LinearLayoutCompat$LayoutParams r4 = (android.support.p003v7.widget.LinearLayoutCompat.LayoutParams) r1.getLayoutParams()\l}"];
Node_20 [shape=record,label="{20\:\ 0x009d|if (r12 == false) goto L_0x00ad\l}"];
Node_21 [shape=record,label="{21\:\ 0x009f|r22 = r3\lr23 = r10\l}"];
Node_22 [shape=record,label="{22\:\ 0x00a6|if (r4.height == \-1) goto L_0x00b1\l}"];
Node_23 [shape=record,label="{23\:\ 0x00a8|int r3 = r1.getBaseline()\l}"];
Node_24 [shape=record,label="{24\:\ 0x00ad|r22 = r3\lr23 = r10\l}"];
Node_25 [shape=record,label="{25\:\ 0x00b1|PHI: r22 r23 \l  PHI: (r22v1 int) = (r22v2 int), (r22v3 int) binds: [B:24:0x00ad, B:22:0x00a6] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r23v2 int) = (r23v3 int), (r23v4 int) binds: [B:24:0x00ad, B:22:0x00a6] A[DONT_GENERATE, DONT_INLINE]\l|r3 = \-1\l}"];
Node_26 [shape=record,label="{26\:\ 0x00b2|PHI: r3 r22 r23 \l  PHI: (r3v9 int) = (r3v22 int), (r3v24 int) binds: [B:25:0x00b1, B:23:0x00a8] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r22v0 int) = (r22v1 int), (r22v3 int) binds: [B:25:0x00b1, B:23:0x00a8] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r23v1 int) = (r23v2 int), (r23v4 int) binds: [B:25:0x00b1, B:23:0x00a8] A[DONT_GENERATE, DONT_INLINE]\l|int r10 = r4.gravity\l}"];
Node_27 [shape=record,label="{27\:\ 0x00b4|if (r10 \>= 0) goto L_0x00b7\l}"];
Node_28 [shape=record,label="{28\:\ 0x00b6|r10 = r11\l}"];
Node_29 [shape=record,label="{29\:\ 0x00b7|PHI: r10 \l  PHI: (r10v4 int) = (r10v3 int), (r10v22 int) binds: [B:27:0x00b4, B:28:0x00b6] A[DONT_GENERATE, DONT_INLINE]\l|r10 = r10 & 112\lr24 = r11\l}"];
Node_30 [shape=record,label="{30\:\ 0x00bd|if (r10 == 16) goto L_0x00f6\l}"];
Node_31 [shape=record,label="{31\:\ 0x00bf}"];
Node_32 [shape=record,label="{32\:\ 0x00c1|if (r10 == 48) goto L_0x00e3\l}"];
Node_33 [shape=record,label="{33\:\ 0x00c3}"];
Node_34 [shape=record,label="{34\:\ 0x00c5|if (r10 == 80) goto L_0x00cc\l}"];
Node_35 [shape=record,label="{35\:\ 0x00c7|r3 = r7\l}"];
Node_36 [shape=record,label="{36\:\ 0x00c9|PHI: r3 \l  PHI: (r3v20 int) = (r3v18 int), (r3v21 int) binds: [B:40:0x00e1, B:35:0x00c7] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_37 [shape=record,label="{37\:\ 0x00cc|int r10 = (r8 \- r5) \- r4.bottomMargin\l}"];
Node_38 [shape=record,label="{38\:\ 0x00d2|if (r3 == \-1) goto L_0x00e1\l}"];
Node_39 [shape=record,label="{39\:\ 0x00d4|r21 = r14[2]\lint r10 = r10 \- (r21 \- (r1.getMeasuredHeight() \- r3))\l}"];
Node_40 [shape=record,label="{40\:\ 0x00e1|PHI: r10 \l  PHI: (r10v20 int) = (r10v19 int), (r10v21 int) binds: [B:38:0x00d2, B:39:0x00d4] A[DONT_GENERATE, DONT_INLINE]\l|r3 = r10\l}"];
Node_41 [shape=record,label="{41\:\ 0x00e3|int r10 = r4.topMargin + r7\l}"];
Node_42 [shape=record,label="{42\:\ 0x00e7|if (r3 == \-1) goto L_0x00f2\l}"];
Node_43 [shape=record,label="{43\:\ 0x00e9|int r10 = r10 + (r13[1] \- r3)\l}"];
Node_44 [shape=record,label="{44\:\ 0x00f2}"];
Node_45 [shape=record,label="{45\:\ 0x00f4|PHI: r10 \l  PHI: (r10v16 int) = (r10v15 int), (r10v17 int) binds: [B:44:0x00f2, B:43:0x00e9] A[DONT_GENERATE, DONT_INLINE]\l|r3 = r10\l}"];
Node_46 [shape=record,label="{46\:\ 0x00f6|int r3 = ((((r9 \- r5) \/ 2) + r7) + r4.topMargin) \- r4.bottomMargin\l}"];
Node_47 [shape=record,label="{47\:\ 0x0104|PHI: r3 \l  PHI: (r3v10 int) = (r3v16 int), (r3v17 int), (r3v20 int) binds: [B:46:0x00f6, B:45:0x00f4, B:36:0x00c9] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_48 [shape=record,label="{48\:\ 0x0108|if (hasDividerBeforeChildAt(r2) == false) goto L_0x010d\l}"];
Node_49 [shape=record,label="{49\:\ 0x010a|int r0 = r0 + r6.mDividerWidth\l}"];
Node_50 [shape=record,label="{50\:\ 0x010d|PHI: r0 \l  PHI: (r0v3 int) = (r0v1 int), (r0v10 int) binds: [B:48:0x0108, B:49:0x010a] A[DONT_GENERATE, DONT_INLINE]\l|int r10 = r4.leftMargin + r0\lint r19 = r10 + getLocationOffset(r1)\lr11 = r2\lr2 = r19\lr26 = r7\lr7 = r4\lsetChildFrame(r1, r2, r3, r15, r5)\lint r15 = r15 + r7.rightMargin\lr0 = r1\lint r3 = r22 + getChildrenSkipCount(r0, r11)\lr0 = r10 + (r15 + getNextLocationOffset(r0))\l}"];
Node_51 [shape=record,label="{51\:\ 0x013b|r19 = r3\l}"];
Node_52 [shape=record,label="{52\:\ 0x013f|LOOP_END\lPHI: r0 r3 r23 r24 r26 \l  PHI: (r0v2 int) = (r0v9 int), (r0v11 int) binds: [B:56:0x013f, B:55:0x013f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v7 int) = (r3v11 int), (r3v6 int) binds: [B:56:0x013f, B:55:0x013f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r23v0 int) = (r23v1 int), (r23v5 int) binds: [B:56:0x013f, B:55:0x013f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r24v0 int) = (r24v1 int), (r24v2 int) binds: [B:56:0x013f, B:55:0x013f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r26v0 int) = (r26v1 int), (r26v2 int) binds: [B:56:0x013f, B:55:0x013f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:12:0x0068\-\>B:52:0x013f\l|int r3 = r3 + 1\lr10 = r23\lr11 = r24\lr7 = r26\l}"];
Node_53 [shape=record,label="{53\:\ 0x014b|RETURN\l|return\l}"];
Node_54 [shape=record,label="{54\:\ 0x014b|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x013f|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x013f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void android.support.v7.widget.LinearLayoutCompat.layoutHorizontal((r27v0 'this' android.support.v7.widget.LinearLayoutCompat A[IMMUTABLE_TYPE, THIS]), (r28v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_54;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_55;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_51;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_46;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_41;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_37;
Node_35 -> Node_36;
Node_36 -> Node_47;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_36;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_45;
Node_44 -> Node_45;
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_50;
Node_50 -> Node_56;
Node_51 -> Node_16;
Node_52 -> Node_12;
Node_54 -> Node_53;
Node_55 -> Node_52;
Node_56 -> Node_52;
}

