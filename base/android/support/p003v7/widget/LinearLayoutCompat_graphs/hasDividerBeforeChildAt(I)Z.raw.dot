digraph "CFG forandroid.support.v7.widget.LinearLayoutCompat.hasDividerBeforeChildAt(I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r5 I:int) = (r4 I:android.support.v7.widget.LinearLayoutCompat) android.support.v7.widget.LinearLayoutCompat.mShowDividers int \l0x0006: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (r1 I:?[int, boolean, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: RETURN  (r0 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: INVOKE  (r2 I:int) = (r4 I:android.support.v7.widget.LinearLayoutCompat) android.support.v7.widget.LinearLayoutCompat.getChildCount():int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0019 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: IGET  (r5 I:int) = (r4 I:android.support.v7.widget.LinearLayoutCompat) android.support.v7.widget.LinearLayoutCompat.mShowDividers int \l0x0013: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (4 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0018 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|0x0017: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0018|0x0018: RETURN  (r0 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0019|0x0019: IGET  (r2 I:int) = (r4 I:android.support.v7.widget.LinearLayoutCompat) android.support.v7.widget.LinearLayoutCompat.mShowDividers int \l0x001b: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (2 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|0x001d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0034 \l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|0x001f: ARITH  (r5 I:int) = (r5 I:int) \- (r1 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0020|0x0020: IF  (r5 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:20:0x0033 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0022|0x0022: INVOKE  (r2 I:android.view.View) = \l  (r4 I:android.support.v7.widget.LinearLayoutCompat)\l  (r5 I:int)\l android.support.v7.widget.LinearLayoutCompat.getChildAt(int):android.view.View type: VIRTUAL \l0x0026: INVOKE  (r2 I:int) = (r2 I:android.view.View) android.view.View.getVisibility():int type: VIRTUAL \l0x002a: CONST  (r3 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x002c|0x002c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0030 \l}"];
Node_18 [shape=record,label="{18\:\ 0x002e|0x002e: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0030|0x0030: ARITH  (r5 I:int) = (r5 I:int) + (\-1 int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0033|0x0033: RETURN  (r0 I:boolean) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0034|0x0034: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{protected boolean android.support.v7.widget.LinearLayoutCompat.hasDividerBeforeChildAt((r4 'this' I:android.support.v7.widget.LinearLayoutCompat A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.RestrictTo, \{value=[android.support.annotation.RestrictTo.Scope.LIBRARY android.support.annotation.RestrictTo$Scope]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_21;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_15;
}

