digraph "CFG forandroid.support.v7.widget.LinearLayoutCompat.drawDividersVertical(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r5 I:android.support.v7.widget.LinearLayoutCompat) android.support.v7.widget.LinearLayoutCompat.getVirtualChildCount():int type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:10:0x0031 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r2 I:android.view.View) = \l  (r5 I:android.support.v7.widget.LinearLayoutCompat)\l  (r1 I:int)\l android.support.v7.widget.LinearLayoutCompat.getVirtualChildAt(int):android.view.View type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r3 I:int) = (r2 I:android.view.View) android.view.View.getVisibility():int type: VIRTUAL \l0x0011: CONST  (r4 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002e \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INVOKE  (r3 I:boolean) = \l  (r5 I:android.support.v7.widget.LinearLayoutCompat)\l  (r1 I:int)\l android.support.v7.widget.LinearLayoutCompat.hasDividerBeforeChildAt(int):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002e \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: INVOKE  (r3 I:android.view.ViewGroup$LayoutParams) = (r2 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x001f: CHECK_CAST  (r3 I:android.support.v7.widget.LinearLayoutCompat$LayoutParams) = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) (r3 I:?[OBJECT, ARRAY]) \l0x0021: INVOKE  (r2 I:int) = (r2 I:android.view.View) android.view.View.getTop():int type: VIRTUAL \l0x0025: IGET  (r3 I:int) = \l  (r3 I:android.support.v7.widget.LinearLayoutCompat$LayoutParams)\l android.support.v7.widget.LinearLayoutCompat.LayoutParams.topMargin int \l0x0027: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x0028: IGET  (r3 I:int) = (r5 I:android.support.v7.widget.LinearLayoutCompat) android.support.v7.widget.LinearLayoutCompat.mDividerHeight int \l0x002a: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x002b: INVOKE  \l  (r5 I:android.support.v7.widget.LinearLayoutCompat)\l  (r6 I:android.graphics.Canvas)\l  (r2 I:int)\l android.support.v7.widget.LinearLayoutCompat.drawHorizontalDivider(android.graphics.Canvas, int):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|0x002e: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: INVOKE  (r1 I:boolean) = \l  (r5 I:android.support.v7.widget.LinearLayoutCompat)\l  (r0 I:int)\l android.support.v7.widget.LinearLayoutCompat.hasDividerBeforeChildAt(int):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x005c \l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|0x0037: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l0x0039: INVOKE  (r0 I:android.view.View) = \l  (r5 I:android.support.v7.widget.LinearLayoutCompat)\l  (r0 I:int)\l android.support.v7.widget.LinearLayoutCompat.getVirtualChildAt(int):android.view.View type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x004c \l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|0x003f: INVOKE  (r0 I:int) = (r5 I:android.support.v7.widget.LinearLayoutCompat) android.support.v7.widget.LinearLayoutCompat.getHeight():int type: VIRTUAL \l0x0043: INVOKE  (r1 I:int) = (r5 I:android.support.v7.widget.LinearLayoutCompat) android.support.v7.widget.LinearLayoutCompat.getPaddingBottom():int type: VIRTUAL \l0x0047: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0048: IGET  (r1 I:int) = (r5 I:android.support.v7.widget.LinearLayoutCompat) android.support.v7.widget.LinearLayoutCompat.mDividerHeight int \l0x004a: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x004c|0x004c: INVOKE  (r1 I:android.view.ViewGroup$LayoutParams) = (r0 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0050: CHECK_CAST  (r1 I:android.support.v7.widget.LinearLayoutCompat$LayoutParams) = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) (r1 I:?[OBJECT, ARRAY]) \l0x0052: INVOKE  (r0 I:int) = (r0 I:android.view.View) android.view.View.getBottom():int type: VIRTUAL \l0x0056: IGET  (r1 I:int) = \l  (r1 I:android.support.v7.widget.LinearLayoutCompat$LayoutParams)\l android.support.v7.widget.LinearLayoutCompat.LayoutParams.bottomMargin int \l0x0058: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0059|0x0059: INVOKE  \l  (r5 I:android.support.v7.widget.LinearLayoutCompat)\l  (r6 I:android.graphics.Canvas)\l  (r0 I:int)\l android.support.v7.widget.LinearLayoutCompat.drawHorizontalDivider(android.graphics.Canvas, int):void type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x005c|0x005c: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.v7.widget.LinearLayoutCompat.drawDividersVertical((r5 'this' I:android.support.v7.widget.LinearLayoutCompat A[IMMUTABLE_TYPE, THIS]), (r6 I:android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

