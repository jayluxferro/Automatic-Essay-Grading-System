digraph "CFG forandroid.support.v7.widget.SearchView.onSuggestionsKey(Landroid\/view\/View;ILandroid\/view\/KeyEvent;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r2 I:android.app.SearchableInfo) = (r1 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.mSearchable android.app.SearchableInfo \l0x0002: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r2 I:android.support.v4.widget.CursorAdapter) = (r1 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.mSuggestionsAdapter android.support.v4.widget.CursorAdapter \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000b \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: RETURN  (r0 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: INVOKE  (r2 I:int) = (r4 I:android.view.KeyEvent) android.view.KeyEvent.getAction():int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0068 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: INVOKE  (r2 I:boolean) = (r4 I:android.view.KeyEvent) android.view.KeyEvent.hasNoModifiers():boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0068 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|0x0017: CONST  (r2 I:?[int, float, short, byte, char]) = (66 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|0x0019: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x005c \l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|0x001b: CONST  (r2 I:?[int, float, short, byte, char]) = (84 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|0x001d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x005c \l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|0x001f: CONST  (r2 I:?[int, float, short, byte, char]) = (61 ?[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0021|0x0021: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0024 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0024|0x0024: CONST  (r2 I:?[int, float, short, byte, char]) = (21 ?[int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0026|0x0026: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x003a \l}"];
Node_19 [shape=record,label="{19\:\ 0x0028|0x0028: CONST  (r4 I:?[int, float, short, byte, char]) = (22 ?[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x002a|0x002a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x002d \l}"];
Node_22 [shape=record,label="{22\:\ 0x002d|0x002d: CONST  (r2 I:?[int, float, short, byte, char]) = (19 ?[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x002f|0x002f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0068 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0031|0x0031: IGET  (r2 I:android.support.v7.widget.SearchView$SearchAutoComplete) = (r1 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.mSearchSrcTextView android.support.v7.widget.SearchView$SearchAutoComplete \l0x0033: INVOKE  (r2 I:int) = \l  (r2 I:android.support.v7.widget.SearchView$SearchAutoComplete)\l android.support.v7.widget.SearchView.SearchAutoComplete.getListSelection():int type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x0037|0x0037: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0068 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0039|0x0039: RETURN  (r0 I:boolean) \l}"];
Node_27 [shape=record,label="{27\:\ 0x003a|0x003a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x003e \l}"];
Node_28 [shape=record,label="{28\:\ 0x003c|0x003c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_29 [shape=record,label="{29\:\ 0x003e|0x003e: IGET  (r2 I:android.support.v7.widget.SearchView$SearchAutoComplete) = (r1 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.mSearchSrcTextView android.support.v7.widget.SearchView$SearchAutoComplete \l0x0040: INVOKE  (r2 I:int) = \l  (r2 I:android.support.v7.widget.SearchView$SearchAutoComplete)\l android.support.v7.widget.SearchView.SearchAutoComplete.length():int type: VIRTUAL \l}"];
Node_30 [shape=record,label="{30\:\ 0x0044|0x0044: IGET  (r3 I:android.support.v7.widget.SearchView$SearchAutoComplete) = (r1 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.mSearchSrcTextView android.support.v7.widget.SearchView$SearchAutoComplete \l0x0046: INVOKE  \l  (r3 I:android.support.v7.widget.SearchView$SearchAutoComplete)\l  (r2 I:int)\l android.support.v7.widget.SearchView.SearchAutoComplete.setSelection(int):void type: VIRTUAL \l0x0049: IGET  (r2 I:android.support.v7.widget.SearchView$SearchAutoComplete) = (r1 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.mSearchSrcTextView android.support.v7.widget.SearchView$SearchAutoComplete \l0x004b: INVOKE  \l  (r2 I:android.support.v7.widget.SearchView$SearchAutoComplete)\l  (r0 I:int)\l android.support.v7.widget.SearchView.SearchAutoComplete.setListSelection(int):void type: VIRTUAL \l0x004e: IGET  (r2 I:android.support.v7.widget.SearchView$SearchAutoComplete) = (r1 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.mSearchSrcTextView android.support.v7.widget.SearchView$SearchAutoComplete \l0x0050: INVOKE  \l  (r2 I:android.support.v7.widget.SearchView$SearchAutoComplete)\l android.support.v7.widget.SearchView.SearchAutoComplete.clearListSelection():void type: VIRTUAL \l0x0053: SGET  (r2 I:android.support.v7.widget.SearchView$AutoCompleteTextViewReflector) =  android.support.v7.widget.SearchView.HIDDEN_METHOD_INVOKER android.support.v7.widget.SearchView$AutoCompleteTextViewReflector \l0x0055: IGET  (r3 I:android.support.v7.widget.SearchView$SearchAutoComplete) = (r1 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.mSearchSrcTextView android.support.v7.widget.SearchView$SearchAutoComplete \l0x0057: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0058: INVOKE  \l  (r2 I:android.support.v7.widget.SearchView$AutoCompleteTextViewReflector)\l  (r3 I:android.widget.AutoCompleteTextView)\l  (r4 I:boolean)\l android.support.v7.widget.SearchView.AutoCompleteTextViewReflector.ensureImeVisible(android.widget.AutoCompleteTextView, boolean):void type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x005b|0x005b: RETURN  (r4 I:boolean) \l}"];
Node_32 [shape=record,label="{32\:\ 0x005c|0x005c: IGET  (r2 I:android.support.v7.widget.SearchView$SearchAutoComplete) = (r1 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.mSearchSrcTextView android.support.v7.widget.SearchView$SearchAutoComplete \l0x005e: INVOKE  (r2 I:int) = \l  (r2 I:android.support.v7.widget.SearchView$SearchAutoComplete)\l android.support.v7.widget.SearchView.SearchAutoComplete.getListSelection():int type: VIRTUAL \l0x0062: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0063: INVOKE  (r2 I:boolean) = \l  (r1 I:android.support.v7.widget.SearchView)\l  (r2 I:int)\l  (r0 I:int)\l  (r3 I:java.lang.String)\l android.support.v7.widget.SearchView.onItemClicked(int, int, java.lang.String):boolean type: VIRTUAL \l}"];
Node_33 [shape=record,label="{33\:\ 0x0067|0x0067: RETURN  (r2 I:boolean) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0068|0x0068: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean android.support.v7.widget.SearchView.onSuggestionsKey((r1 'this' I:android.support.v7.widget.SearchView A[IMMUTABLE_TYPE, THIS]), (r2 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.view.KeyEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_34;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_34;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_32;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_32;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_32[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_27[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_34;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_34;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_32 -> Node_33;
}

