digraph "CFG forandroid.support.v7.widget.SearchView.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r3 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.isIconified():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  \l  (r3 I:android.support.v7.widget.LinearLayoutCompat)\l  (r4 I:int)\l  (r5 I:int)\l android.support.v7.widget.LinearLayoutCompat.onMeasure(int, int):void type: SUPER \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r0 I:int) = (r4 I:int) android.view.View.MeasureSpec.getMode(int):int type: STATIC \l0x000e: INVOKE  (r4 I:int) = (r4 I:int) android.view.View.MeasureSpec.getSize(int):int type: STATIC \l0x0012: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (\-2147483648(0xffffffff80000000, float:\-0.0) ?[int, float, short, byte, char])\l \l0x0014: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0034 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0028 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001d \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: IGET  (r0 I:int) = (r3 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.mMaxWidth int \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:20:0x0047 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: IGET  (r0 I:int) = (r3 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.mMaxWidth int \l0x0023: INVOKE  (r4 I:int) = (r0 I:int), (r4 I:int) java.lang.Math.min(int, int):int type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: IGET  (r4 I:int) = (r3 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.mMaxWidth int \l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|0x002a: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:15:0x002f \l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|0x002c: IGET  (r4 I:int) = (r3 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.mMaxWidth int \l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|0x002f: INVOKE  (r4 I:int) = (r3 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.getPreferredWidth():int type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|0x0034: IGET  (r0 I:int) = (r3 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.mMaxWidth int \l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|0x0036: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:19:0x003f \l}"];
Node_18 [shape=record,label="{18\:\ 0x0038|0x0038: IGET  (r0 I:int) = (r3 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.mMaxWidth int \l0x003a: INVOKE  (r4 I:int) = (r0 I:int), (r4 I:int) java.lang.Math.min(int, int):int type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x003f|0x003f: INVOKE  (r0 I:int) = (r3 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.getPreferredWidth():int type: DIRECT \l0x0043: INVOKE  (r4 I:int) = (r0 I:int), (r4 I:int) java.lang.Math.min(int, int):int type: STATIC \l}"];
Node_20 [shape=record,label="{20\:\ 0x0047|0x0047: INVOKE  (r0 I:int) = (r5 I:int) android.view.View.MeasureSpec.getMode(int):int type: STATIC \l0x004b: INVOKE  (r5 I:int) = (r5 I:int) android.view.View.MeasureSpec.getSize(int):int type: STATIC \l}"];
Node_21 [shape=record,label="{21\:\ 0x004f|0x004f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0059 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0051|0x0051: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0054 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0054|0x0054: INVOKE  (r5 I:int) = (r3 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.getPreferredHeight():int type: DIRECT \l}"];
Node_25 [shape=record,label="{25\:\ 0x0059|0x0059: INVOKE  (r0 I:int) = (r3 I:android.support.v7.widget.SearchView) android.support.v7.widget.SearchView.getPreferredHeight():int type: DIRECT \l0x005d: INVOKE  (r5 I:int) = (r0 I:int), (r5 I:int) java.lang.Math.min(int, int):int type: STATIC \l}"];
Node_26 [shape=record,label="{26\:\ 0x0061|0x0061: INVOKE  (r4 I:int) = (r4 I:int), (r2 I:int) android.view.View.MeasureSpec.makeMeasureSpec(int, int):int type: STATIC \l0x0065: INVOKE  (r5 I:int) = (r5 I:int), (r2 I:int) android.view.View.MeasureSpec.makeMeasureSpec(int, int):int type: STATIC \l0x0069: INVOKE  \l  (r3 I:android.support.v7.widget.LinearLayoutCompat)\l  (r4 I:int)\l  (r5 I:int)\l android.support.v7.widget.LinearLayoutCompat.onMeasure(int, int):void type: SUPER \l}"];
Node_27 [shape=record,label="{27\:\ 0x006c|0x006c: RETURN   \l}"];
MethodNode[shape=record,label="{protected void android.support.v7.widget.SearchView.onMeasure((r3 'this' I:android.support.v7.widget.SearchView A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_16;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_9;
Node_7 -> Node_20[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_20;
Node_11 -> Node_20;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_20;
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_24;
Node_22 -> Node_26[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
}

