digraph "CFG forandroid.support.v7.widget.SearchView.createVoiceWebSearchIntent(Landroid\/content\/Intent;Landroid\/app\/SearchableInfo;)Landroid\/content\/Intent;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:android.content.Intent) =  android.content.Intent \l0x0002: INVOKE  \l  (r0 I:android.content.Intent)\l  (r2 I:android.content.Intent)\l android.content.Intent.\<init\>(android.content.Intent):void type: DIRECT \l0x0005: INVOKE  (r2 I:android.content.ComponentName) = (r3 I:android.app.SearchableInfo) android.app.SearchableInfo.getSearchActivity():android.content.ComponentName type: VIRTUAL \l0x0009: CONST_STR  (r3 I:java.lang.String) =  \"calling_package\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: INVOKE  (r2 I:java.lang.String) = (r2 I:android.content.ComponentName) android.content.ComponentName.flattenToShortString():java.lang.String type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: INVOKE  \l  (r0 I:android.content.Intent)\l  (r3 I:java.lang.String)\l  (r2 I:java.lang.String)\l android.content.Intent.putExtra(java.lang.String, java.lang.String):android.content.Intent type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: RETURN  (r0 I:android.content.Intent) \l}"];
MethodNode[shape=record,label="{private android.content.Intent android.support.v7.widget.SearchView.createVoiceWebSearchIntent((r1 'this' I:android.support.v7.widget.SearchView A[IMMUTABLE_TYPE, THIS]), (r2 I:android.content.Intent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.app.SearchableInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

