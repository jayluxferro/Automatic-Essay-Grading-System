digraph "CFG forandroid.support.v7.widget.SearchView.updateFocusedState()V" {
subgraph cluster_Region_260358972 {
label = "R(6:1|4|(1:6)|7|(1:9)|10)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|int[] r0 = r2.mSearchSrcTextView.hasFocus() ? FOCUSED_STATE_SET : EMPTY_STATE_SET\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|PHI: r0 \l  PHI: (r0v2 int[]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|android.graphics.drawable.Drawable android.graphics.drawable.Drawable r1 = r2.mSearchPlate.getBackground()\l}"];
subgraph cluster_IfRegion_781157783 {
label = "IF [B:5:0x0013] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|if (r1 != null) goto L_0x0015\l}"];
subgraph cluster_Region_1038795507 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|r1.setState(r0)\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x0018|android.graphics.drawable.Drawable android.graphics.drawable.Drawable r1 = r2.mSubmitArea.getBackground()\l}"];
subgraph cluster_IfRegion_121319001 {
label = "IF [B:8:0x001e] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001e|if (r1 != null) goto L_0x0020\l}"];
subgraph cluster_Region_1984726104 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0020|r1.setState(r0)\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x0023|invalidate()\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000b}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0026}"];
MethodNode[shape=record,label="{void android.support.v7.widget.SearchView.updateFocusedState((r2v0 'this' android.support.v7.widget.SearchView A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_0 -> Node_1;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

