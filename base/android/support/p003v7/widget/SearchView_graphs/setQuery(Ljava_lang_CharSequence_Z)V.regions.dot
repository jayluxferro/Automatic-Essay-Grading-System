digraph "CFG forandroid.support.v7.widget.SearchView.setQuery(Ljava\/lang\/CharSequence;Z)V" {
subgraph cluster_Region_69730088 {
label = "R(3:0|(1:2)|(1:(1:6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.mSearchSrcTextView.setText(r3)\l}"];
subgraph cluster_IfRegion_1437293126 {
label = "IF [B:1:0x0005] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r3 != null) goto L_0x0007\l}"];
subgraph cluster_Region_2080244537 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|r2.mSearchSrcTextView.setSelection(r2.mSearchSrcTextView.length())\lr2.mUserQuery = r3\l}"];
}
}
subgraph cluster_Region_2094700902 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1195370346 {
label = "IF [B:3:0x0014, B:5:0x001a] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0014|if (r4 != false) goto L_0x0016\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|ADDED_TO_REGION\l|if (android.text.TextUtils.isEmpty(r3) != true) goto L_0x001c\l}"];
subgraph cluster_Region_1221192865 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001c|onSubmitQuery()\l}"];
}
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0016}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v7.widget.SearchView.setQuery((r2v0 'this' android.support.v7.widget.SearchView A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_8[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_9[style=dashed];
Node_6 -> Node_7;
Node_4 -> Node_5;
}

