digraph "CFG forandroid.support.v7.widget.AppCompatDrawableManager.tintDrawableUsingColorFilter(Landroid\/content\/Context;ILandroid\/graphics\/drawable\/Drawable;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:android.graphics.PorterDuff$Mode) =  android.support.v7.widget.AppCompatDrawableManager.DEFAULT_MODE android.graphics.PorterDuff$Mode \l0x0002: SGET  (r1 I:int[]) =  android.support.v7.widget.AppCompatDrawableManager.COLORFILTER_TINT_COLOR_CONTROL_NORMAL int[] \l0x0004: INVOKE  (r1 I:boolean) = (r1 I:int[]), (r7 I:int) android.support.v7.widget.AppCompatDrawableManager.arrayContains(int[], int):boolean type: STATIC \l0x0008: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (16842801(0x1010031, float:2.3693695E\-38) ?[int, float, short, byte, char])\l \l0x000b: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x000c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: SGET  (r2 I:int) =  android.support.v7.appcompat.R.attr.colorControlNormal int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0013: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: SGET  (r1 I:int[]) =  android.support.v7.widget.AppCompatDrawableManager.COLORFILTER_COLOR_CONTROL_ACTIVATED int[] \l0x0017: INVOKE  (r1 I:boolean) = (r1 I:int[]), (r7 I:int) android.support.v7.widget.AppCompatDrawableManager.arrayContains(int[], int):boolean type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0020 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: SGET  (r2 I:int) =  android.support.v7.appcompat.R.attr.colorControlActivated int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: SGET  (r1 I:int[]) =  android.support.v7.widget.AppCompatDrawableManager.COLORFILTER_COLOR_BACKGROUND_MULTIPLY int[] \l0x0022: INVOKE  (r1 I:boolean) = (r1 I:int[]), (r7 I:int) android.support.v7.widget.AppCompatDrawableManager.arrayContains(int[], int):boolean type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002b \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: SGET  (r0 I:android.graphics.PorterDuff$Mode) =  android.graphics.PorterDuff.Mode.MULTIPLY android.graphics.PorterDuff$Mode \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: SGET  (r1 I:int) =  android.support.v7.appcompat.R.drawable.abc_list_divider_mtrl_alpha int \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x003c \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (16842800(0x1010030, float:2.3693693E\-38) ?[int, float, short, byte, char])\l \l0x0032: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (1109603123(0x42233333, float:40.8) ?[int, float, short, byte, char])\l \l0x0035: INVOKE  (r7 I:int) = (r7 I:float) java.lang.Math.round(float):int type: STATIC \l0x0039: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003a: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|0x003c: SGET  (r1 I:int) =  android.support.v7.appcompat.R.drawable.abc_dialog_material_background int \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|0x003e: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0041 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0041|0x0041: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0042: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0043: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0044|0x0044: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0061 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|0x0046: INVOKE  (r7 I:boolean) = (r8 I:android.graphics.drawable.Drawable) android.support.v7.widget.DrawableUtils.canSafelyMutateDrawable(android.graphics.drawable.Drawable):boolean type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|0x004a: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0050 \l}"];
Node_20 [shape=record,label="{20\:\ 0x004c|0x004c: INVOKE  (r8 I:android.graphics.drawable.Drawable) = (r8 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.mutate():android.graphics.drawable.Drawable type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0050|0x0050: INVOKE  (r6 I:int) = (r6 I:android.content.Context), (r2 I:int) android.support.v7.widget.ThemeUtils.getThemeAttrColor(android.content.Context, int):int type: STATIC \l0x0054: INVOKE  (r6 I:android.graphics.PorterDuffColorFilter) = (r6 I:int), (r0 I:android.graphics.PorterDuff$Mode) android.support.v7.widget.AppCompatDrawableManager.getPorterDuffColorFilter(int, android.graphics.PorterDuff$Mode):android.graphics.PorterDuffColorFilter type: STATIC \l0x0058: INVOKE  \l  (r8 I:android.graphics.drawable.Drawable)\l  (r6 I:android.graphics.ColorFilter)\l android.graphics.drawable.Drawable.setColorFilter(android.graphics.ColorFilter):void type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x005b|0x005b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0060 \l}"];
Node_23 [shape=record,label="{23\:\ 0x005d|0x005d: INVOKE  (r8 I:android.graphics.drawable.Drawable), (r1 I:int) android.graphics.drawable.Drawable.setAlpha(int):void type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0060|0x0060: RETURN  (r5 I:boolean) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0061|0x0061: RETURN  (r4 I:boolean) \l}"];
MethodNode[shape=record,label="{static boolean android.support.v7.widget.AppCompatDrawableManager.tintDrawableUsingColorFilter((r6 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.DrawableRes, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_17;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_3;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_3;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_16;
Node_14 -> Node_3[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
}

