digraph "CFG forandroid.support.v7.widget.AppCompatDrawableManager.createTintFilter(Landroid\/content\/res\/ColorStateList;Landroid\/graphics\/PorterDuff$Mode;[I)Landroid\/graphics\/PorterDuffColorFilter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: INVOKE  (r1 I:int) = \l  (r1 I:android.content.res.ColorStateList)\l  (r3 I:int[])\l  (r0 I:int)\l android.content.res.ColorStateList.getColorForState(int[], int):int type: VIRTUAL \l0x000a: INVOKE  (r1 I:android.graphics.PorterDuffColorFilter) = (r1 I:int), (r2 I:android.graphics.PorterDuff$Mode) android.support.v7.widget.AppCompatDrawableManager.getPorterDuffColorFilter(int, android.graphics.PorterDuff$Mode):android.graphics.PorterDuffColorFilter type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: RETURN  (r1 I:android.graphics.PorterDuffColorFilter) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: RETURN  (r1 I:android.graphics.PorterDuffColorFilter) \l}"];
MethodNode[shape=record,label="{private static android.graphics.PorterDuffColorFilter android.support.v7.widget.AppCompatDrawableManager.createTintFilter((r1 I:android.content.res.ColorStateList A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:android.graphics.PorterDuff$Mode A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_3;
Node_1 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
}

