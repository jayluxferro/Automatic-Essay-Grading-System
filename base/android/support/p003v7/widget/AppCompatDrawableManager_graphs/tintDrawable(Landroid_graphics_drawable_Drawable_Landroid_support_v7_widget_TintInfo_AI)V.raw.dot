digraph "CFG forandroid.support.v7.widget.AppCompatDrawableManager.tintDrawable(Landroid\/graphics\/drawable\/Drawable;Landroid\/support\/v7\/widget\/TintInfo;[I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r2 I:android.graphics.drawable.Drawable) android.support.v7.widget.DrawableUtils.canSafelyMutateDrawable(android.graphics.drawable.Drawable):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r2 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.mutate():android.graphics.drawable.Drawable type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0014 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: CONST_STR  (r2 I:java.lang.String) =  \"AppCompatDrawableManag\" \l0x000e: CONST_STR  (r3 I:java.lang.String) =  \"Mutated drawable is not the same instance as the input.\" \l0x0010: INVOKE  (r2 I:java.lang.String), (r3 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IGET  (r0 I:boolean) = (r3 I:android.support.v7.widget.TintInfo) android.support.v7.widget.TintInfo.mHasTintList boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0021 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IGET  (r0 I:boolean) = (r3 I:android.support.v7.widget.TintInfo) android.support.v7.widget.TintInfo.mHasTintMode boolean \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001d \l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|0x001d: INVOKE  (r2 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.clearColorFilter():void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|0x0021: IGET  (r0 I:boolean) = (r3 I:android.support.v7.widget.TintInfo) android.support.v7.widget.TintInfo.mHasTintList boolean \l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|0x0023: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0028 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|0x0025: IGET  (r0 I:android.content.res.ColorStateList) = (r3 I:android.support.v7.widget.TintInfo) android.support.v7.widget.TintInfo.mTintList android.content.res.ColorStateList \l}"];
Node_15 [shape=record,label="{15\:\ 0x0028|0x0028: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0029|0x0029: IGET  (r1 I:boolean) = (r3 I:android.support.v7.widget.TintInfo) android.support.v7.widget.TintInfo.mHasTintMode boolean \l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|0x002b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0030 \l}"];
Node_18 [shape=record,label="{18\:\ 0x002d|0x002d: IGET  (r3 I:android.graphics.PorterDuff$Mode) = (r3 I:android.support.v7.widget.TintInfo) android.support.v7.widget.TintInfo.mTintMode android.graphics.PorterDuff$Mode \l}"];
Node_19 [shape=record,label="{19\:\ 0x0030|0x0030: SGET  (r3 I:android.graphics.PorterDuff$Mode) =  android.support.v7.widget.AppCompatDrawableManager.DEFAULT_MODE android.graphics.PorterDuff$Mode \l}"];
Node_20 [shape=record,label="{20\:\ 0x0032|0x0032: INVOKE  (r3 I:android.graphics.PorterDuffColorFilter) = \l  (r0 I:android.content.res.ColorStateList)\l  (r3 I:android.graphics.PorterDuff$Mode)\l  (r4 I:int[])\l android.support.v7.widget.AppCompatDrawableManager.createTintFilter(android.content.res.ColorStateList, android.graphics.PorterDuff$Mode, int[]):android.graphics.PorterDuffColorFilter type: STATIC \l0x0036: INVOKE  \l  (r2 I:android.graphics.drawable.Drawable)\l  (r3 I:android.graphics.ColorFilter)\l android.graphics.drawable.Drawable.setColorFilter(android.graphics.ColorFilter):void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0039|0x0039: SGET  (r3 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x003b: CONST  (r4 I:?[int, float, short, byte, char]) = (23 ?[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x003d|0x003d: IF  (r3 I:?[int, byte, short, char]) \> (r4 I:?[int, byte, short, char])  \-\> B:24:0x0042 \l}"];
Node_23 [shape=record,label="{23\:\ 0x003f|0x003f: INVOKE  (r2 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.invalidateSelf():void type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0042|0x0042: RETURN   \l}"];
MethodNode[shape=record,label="{static void android.support.v7.widget.AppCompatDrawableManager.tintDrawable((r2 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.support.v7.widget.TintInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
}

