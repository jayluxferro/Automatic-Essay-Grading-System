digraph "CFG forandroid.support.v7.widget.AppCompatDrawableManager.getDrawable(Landroid\/content\/Context;IZ)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  \l  (r1 I:android.support.v7.widget.AppCompatDrawableManager)\l  (r2 I:android.content.Context)\l android.support.v7.widget.AppCompatDrawableManager.checkVectorDrawableSetup(android.content.Context):void type: DIRECT A[Catch:\{ all \-\> 0x0021 \}, TRY_ENTER]\l0x0004: INVOKE  (r0 I:android.graphics.drawable.Drawable) = \l  (r1 I:android.support.v7.widget.AppCompatDrawableManager)\l  (r2 I:android.content.Context)\l  (r3 I:int)\l android.support.v7.widget.AppCompatDrawableManager.loadDrawableFromDelegates(android.content.Context, int):android.graphics.drawable.Drawable type: DIRECT A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000e A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r0 I:android.graphics.drawable.Drawable) = \l  (r1 I:android.support.v7.widget.AppCompatDrawableManager)\l  (r2 I:android.content.Context)\l  (r3 I:int)\l android.support.v7.widget.AppCompatDrawableManager.createDrawableIfNeeded(android.content.Context, int):android.graphics.drawable.Drawable type: DIRECT A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r2 I:android.content.Context), (r3 I:int) android.support.v4.content.ContextCompat.getDrawable(android.content.Context, int):android.graphics.drawable.Drawable type: STATIC A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001a A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: INVOKE  (r0 I:android.graphics.drawable.Drawable) = \l  (r1 I:android.support.v7.widget.AppCompatDrawableManager)\l  (r2 I:android.content.Context)\l  (r3 I:int)\l  (r4 I:boolean)\l  (r0 I:android.graphics.drawable.Drawable)\l android.support.v7.widget.AppCompatDrawableManager.tintDrawable(android.content.Context, int, boolean, android.graphics.drawable.Drawable):android.graphics.drawable.Drawable type: DIRECT A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001f A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: INVOKE  (r0 I:android.graphics.drawable.Drawable) android.support.v7.widget.DrawableUtils.fixDrawable(android.graphics.drawable.Drawable):void type: STATIC A[Catch:\{ all \-\> 0x0021 \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0021: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x0022|0x0022: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0023|0x0023: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{synchronized android.graphics.drawable.Drawable android.support.v7.widget.AppCompatDrawableManager.getDrawable((r1 'this' I:android.support.v7.widget.AppCompatDrawableManager A[IMMUTABLE_TYPE, THIS]), (r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.DrawableRes, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

