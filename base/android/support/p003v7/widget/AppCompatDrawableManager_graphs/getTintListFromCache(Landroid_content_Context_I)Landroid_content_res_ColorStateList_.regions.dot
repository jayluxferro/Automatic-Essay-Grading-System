digraph "CFG forandroid.support.v7.widget.AppCompatDrawableManager.getTintListFromCache(Landroid\/content\/Context;I)Landroid\/content\/res\/ColorStateList;" {
subgraph cluster_Region_344517490 {
label = "R(1:(2:(1:7)|(1:6))) | DECL_VAR: android.support.v4.util.SparseArrayCompat null\l";
node [shape=record,color=blue];
subgraph cluster_Region_125508138 {
label = "R(2:(1:7)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_852754111 {
label = "IF [B:1:0x0003, B:3:0x000d] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r2.mTintLists == null) goto L_0x0017\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|ADDED_TO_REGION\l|if ((r3 = r2.mTintLists.get(r3)) == null) goto L_?\l}"];
subgraph cluster_Region_21517613 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1380515085 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return (android.content.res.ColorStateList) r3.get(r4)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0005}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000f}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0017|RETURN\lADDED_TO_REGION\l|return null\l}"];
MethodNode[shape=record,label="{private android.content.res.ColorStateList android.support.v7.widget.AppCompatDrawableManager.getTintListFromCache((r2v0 'this' android.support.v7.widget.AppCompatDrawableManager A[IMMUTABLE_TYPE, THIS]), (r3v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.DrawableRes, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_6;
}

