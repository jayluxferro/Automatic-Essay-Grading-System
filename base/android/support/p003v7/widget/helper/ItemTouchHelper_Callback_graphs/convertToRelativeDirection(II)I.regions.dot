digraph "CFG forandroid.support.v7.widget.helper.ItemTouchHelper.Callback.convertToRelativeDirection(II)I" {
subgraph cluster_Region_1706840610 {
label = "R(2:0|(2:(1:2)|(2:3|(2:(1:6)|(2:7|8)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = r3 & ABS_HORIZONTAL_DIR_FLAGS\l}"];
subgraph cluster_Region_1606059481 {
label = "R(2:(1:2)|(2:3|(2:(1:6)|(2:7|8))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1021089100 {
label = "IF [B:1:0x0005] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r1 == 0) goto L_0x0007\l}"];
subgraph cluster_Region_1613806851 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return r3\l}"];
}
}
subgraph cluster_Region_1790383899 {
label = "R(2:3|(2:(1:6)|(2:7|8)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|int r3 = r3 & (~r1)\l}"];
subgraph cluster_Region_567462368 {
label = "R(2:(1:6)|(2:7|8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_928658018 {
label = "IF [B:4:0x000a] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r4 == 0) goto L_0x000c\l}"];
subgraph cluster_Region_317213455 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000f|RETURN\l|return r3 \| (r1 \<\< 2)\l}"];
}
}
subgraph cluster_Region_356660786 {
label = "R(2:7|8)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0010|int int r4 = r1 \<\< 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|RETURN\l|return r3 \| (\-789517 & r4) \| ((r4 & ABS_HORIZONTAL_DIR_FLAGS) \<\< 2)\l}"];
}
}
}
}
}
Node_5 [shape=record,color=red,label="{5\:\ 0x000c}"];
MethodNode[shape=record,label="{public static int android.support.v7.widget.helper.ItemTouchHelper.Callback.convertToRelativeDirection((r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_5 -> Node_6;
}

