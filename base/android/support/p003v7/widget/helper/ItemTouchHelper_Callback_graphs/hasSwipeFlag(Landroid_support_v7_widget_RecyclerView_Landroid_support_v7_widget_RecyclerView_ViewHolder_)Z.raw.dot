digraph "CFG forandroid.support.v7.widget.helper.ItemTouchHelper.Callback.hasSwipeFlag(Landroid\/support\/v7\/widget\/RecyclerView;Landroid\/support\/v7\/widget\/RecyclerView$ViewHolder;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:int) = \l  (r0 I:android.support.v7.widget.helper.ItemTouchHelper$Callback)\l  (r1 I:android.support.v7.widget.RecyclerView)\l  (r2 I:android.support.v7.widget.RecyclerView$ViewHolder)\l android.support.v7.widget.helper.ItemTouchHelper.Callback.getAbsoluteMovementFlags(android.support.v7.widget.RecyclerView, android.support.v7.widget.RecyclerView$ViewHolder):int type: VIRTUAL \l0x0004: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (65280(0xff00, float:9.1477E\-41) ?[int, float, short, byte, char])\l \l0x0007: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (r2 I:?[int, boolean, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean android.support.v7.widget.helper.ItemTouchHelper.Callback.hasSwipeFlag((r0 'this' I:android.support.v7.widget.helper.ItemTouchHelper$Callback A[IMMUTABLE_TYPE, THIS]), (r1 I:android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:android.support.v7.widget.RecyclerView$ViewHolder A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

