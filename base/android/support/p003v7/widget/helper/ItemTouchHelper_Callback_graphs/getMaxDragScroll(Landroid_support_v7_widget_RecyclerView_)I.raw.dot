digraph "CFG forandroid.support.v7.widget.helper.ItemTouchHelper.Callback.getMaxDragScroll(Landroid\/support\/v7\/widget\/RecyclerView;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = \l  (r2 I:android.support.v7.widget.helper.ItemTouchHelper$Callback)\l android.support.v7.widget.helper.ItemTouchHelper.Callback.mCachedMaxScrollSpeed int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: INVOKE  (r3 I:android.content.res.Resources) = (r3 I:android.support.v7.widget.RecyclerView) android.support.v7.widget.RecyclerView.getResources():android.content.res.Resources type: VIRTUAL \l0x0009: SGET  (r0 I:int) =  android.support.v7.recyclerview.R.dimen.item_touch_helper_max_drag_scroll_per_frame int \l0x000b: INVOKE  (r3 I:int) = (r3 I:android.content.res.Resources), (r0 I:int) android.content.res.Resources.getDimensionPixelSize(int):int type: VIRTUAL \l0x000f: IPUT  \l  (r3 I:int)\l  (r2 I:android.support.v7.widget.helper.ItemTouchHelper$Callback)\l android.support.v7.widget.helper.ItemTouchHelper.Callback.mCachedMaxScrollSpeed int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IGET  (r3 I:int) = \l  (r2 I:android.support.v7.widget.helper.ItemTouchHelper$Callback)\l android.support.v7.widget.helper.ItemTouchHelper.Callback.mCachedMaxScrollSpeed int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{private int android.support.v7.widget.helper.ItemTouchHelper.Callback.getMaxDragScroll((r2 'this' I:android.support.v7.widget.helper.ItemTouchHelper$Callback A[IMMUTABLE_TYPE, THIS]), (r3 I:android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

