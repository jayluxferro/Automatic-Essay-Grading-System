digraph "CFG forandroid.support.v7.widget.helper.ItemTouchHelper.Callback.interpolateOutOfBoundsScroll(Landroid\/support\/v7\/widget\/RecyclerView;IIIJ)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r5 I:int) = \l  (r4 I:android.support.v7.widget.helper.ItemTouchHelper$Callback)\l  (r5 I:android.support.v7.widget.RecyclerView)\l android.support.v7.widget.helper.ItemTouchHelper.Callback.getMaxDragScroll(android.support.v7.widget.RecyclerView):int type: DIRECT \l0x0004: INVOKE  (r8 I:int) = (r7 I:int) java.lang.Math.abs(int):int type: STATIC \l0x0008: CAST  (r0 I:float) = (float) (r7 I:int) \l0x0009: INVOKE  (r0 I:float) = (r0 I:float) java.lang.Math.signum(float):float type: STATIC \l0x000d: CAST  (r0 I:int) = (int) (r0 I:float) \l0x000e: CAST  (r8 I:float) = (float) (r8 I:int) \l0x000f: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0011: ARITH  (r8 I:float) = (r8 I:float) * (r1 I:float) \l0x0013: CAST  (r6 I:float) = (float) (r6 I:int) \l0x0014: ARITH  (r8 I:float) = (r8 I:float) \/ (r6 I:float) \l0x0015: INVOKE  (r6 I:float) = (r1 I:float), (r8 I:float) java.lang.Math.min(float, float):float type: STATIC \l0x0019: ARITH  (r0 I:int) = (r0 I:int) * (r5 I:int) \l0x001b: CAST  (r5 I:float) = (float) (r0 I:int) \l0x001c: SGET  (r8 I:android.view.animation.Interpolator) =  android.support.v7.widget.helper.ItemTouchHelper.Callback.sDragViewScrollCapInterpolator android.view.animation.Interpolator \l0x001e: INVOKE  (r6 I:float) = (r8 I:android.view.animation.Interpolator), (r6 I:float) android.view.animation.Interpolator.getInterpolation(float):float type: INTERFACE \l0x0022: ARITH  (r5 I:float) = (r5 I:float) * (r6 I:float) \l0x0024: CAST  (r5 I:int) = (int) (r5 I:float) \l0x0025: CONST  (r2 I:?[long, double]) = (2000(0x7d0, double:9.88E\-321) ?[long, double]) \l0x0027: CMP_L  (r6 I:int) = (r9 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0029|0x0029: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x002c \l}"];
Node_3 [shape=record,label="{3\:\ 0x002c|0x002c: CAST  (r6 I:float) = (float) (r9 I:long) \l0x002d: CONST  (r8 I:?[int, float, short, byte, char]) = \l  (1157234688(0x44fa0000, float:2000.0) ?[int, float, short, byte, char])\l \l0x002f: ARITH  (r1 I:float) = (r6 I:float) \/ (r8 I:float) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|0x0031: CAST  (r5 I:float) = (float) (r5 I:int) \l0x0032: SGET  (r6 I:android.view.animation.Interpolator) =  android.support.v7.widget.helper.ItemTouchHelper.Callback.sDragScrollInterpolator android.view.animation.Interpolator \l0x0034: INVOKE  (r6 I:float) = (r6 I:android.view.animation.Interpolator), (r1 I:float) android.view.animation.Interpolator.getInterpolation(float):float type: INTERFACE \l0x0038: ARITH  (r5 I:float) = (r5 I:float) * (r6 I:float) \l0x003a: CAST  (r5 I:int) = (int) (r5 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ 0x003b|0x003b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0043 \l}"];
Node_6 [shape=record,label="{6\:\ 0x003d|0x003d: IF  (r7 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:8:0x0041 \l}"];
Node_7 [shape=record,label="{7\:\ 0x003f|0x003f: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0041|0x0041: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0042|0x0042: RETURN  (r5 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0043|0x0043: RETURN  (r5 I:int) \l}"];
MethodNode[shape=record,label="{public int android.support.v7.widget.helper.ItemTouchHelper.Callback.interpolateOutOfBoundsScroll((r4 'this' I:android.support.v7.widget.helper.ItemTouchHelper$Callback A[IMMUTABLE_TYPE, THIS]), (r5 I:android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], , , , \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_4[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
}

