digraph "CFG forandroid.support.v7.widget.helper.ItemTouchUIUtilImpl.findMaxElevation(Landroid\/support\/v7\/widget\/RecyclerView;Landroid\/view\/View;)F" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r5.getChildCount()\lr1 = 0.0f\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lPHI: r1 r2 \l  PHI: (r1v1 float) = (r1v0 float), (r1v2 float) binds: [B:0:0x0000, B:7:0x0018] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:7:0x0018] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:7:0x0018\l|if (r2 \>= r0) goto L_0x001b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|android.view.View r3 = r5.getChildAt(r2)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r3 != r6) goto L_0x000f\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|float r3 = android.support.p000v4.view.ViewCompat.getElevation(r3)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|if ((r3 \> r1 ? 1 : (r3 == r1 ? 0 : \-1)) \<= 0) goto L_0x0018\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|r1 = r3\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|LOOP_END\lPHI: r1 \l  PHI: (r1v2 float) = (r1v1 float), (r1v1 float), (r1v3 float) binds: [B:12:0x0018, B:11:0x0018, B:10:0x0018] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:7:0x0018\l|int r2 = r2 + 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|RETURN\l|return r1\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0018|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static float android.support.v7.widget.helper.ItemTouchUIUtilImpl.findMaxElevation((r5v0 android.support.v7.widget.RecyclerView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_12[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_10;
Node_7 -> Node_1;
Node_9 -> Node_8;
Node_10 -> Node_7;
Node_11 -> Node_7;
Node_12 -> Node_7;
}

