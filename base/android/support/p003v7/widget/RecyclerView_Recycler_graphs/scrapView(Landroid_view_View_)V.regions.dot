digraph "CFG forandroid.support.v7.widget.RecyclerView.Recycler.scrapView(Landroid\/view\/View;)V" {
subgraph cluster_Region_1854247404 {
label = "R(2:0|(2:(1:8)|9)(1:(1:18)(2:16|17)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.support.v7.widget.RecyclerView$ViewHolder android.support.p003v7.widget.RecyclerView.ViewHolder r3 = android.support.p003v7.widget.RecyclerView.getChildViewHolderInt(r3)\l}"];
subgraph cluster_IfRegion_948037105 {
label = "IF [B:1:0x000a, B:3:0x0010, B:5:0x0018] THEN: R(2:(1:8)|9) ELSE: R(1:(1:18)(2:16|17))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r3.hasAnyOfTheFlags(12) != true) goto L_0x000c\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|ADDED_TO_REGION\l|if (r3.isUpdated() != false) goto L_0x0012\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|ADDED_TO_REGION\l|if (android.support.p003v7.widget.RecyclerView.this.canReuseUpdatedViewHolder(r3) != true) goto L_0x001b\l}"];
subgraph cluster_Region_1204938515 {
label = "R(2:(1:8)|9)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1813607658 {
label = "IF [B:7:0x001d] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001d|if (r2.mChangedScrap == null) goto L_0x001f\l}"];
subgraph cluster_Region_1239578972 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001f|r2.mChangedScrap = new java.util.ArrayList\<\>()\l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x0026|r3.setScrapContainer(r2, true)\lr2.mChangedScrap.add(r3)\l}"];
}
subgraph cluster_Region_2140450706 {
label = "R(1:(1:18)(2:16|17)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_467741885 {
label = "IF [B:11:0x0034, B:13:0x003a, B:15:0x0044] THEN: R(1:18) ELSE: R(2:16|17) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0034|if (r3.isInvalid() == false) goto L_0x0064\l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|ADDED_TO_REGION\l|if (r3.isRemoved() == true) goto L_0x0064\l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|ADDED_TO_REGION\l|if (android.support.p003v7.widget.RecyclerView.this.mAdapter.hasStableIds() == true) goto L_0x0064\l}"];
subgraph cluster_Region_1504298204 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0064|r3.setScrapContainer(r2, false)\lr2.mAttachedScrap.add(r3)\l}"];
}
subgraph cluster_Region_1158340131 {
label = "R(2:16|17)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0047}"];
Node_17 [shape=record,label="{17\:\ 0x0063|throw new java.lang.IllegalArgumentException(\"Called scrap view with an invalid view. Invalid views cannot be reused from scrap, they should rebound from recycler pool.\" + android.support.p003v7.widget.RecyclerView.this.exceptionLabel())\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000c}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0012}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001b}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0030}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0036}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x003c}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void android.support.v7.widget.RecyclerView.Recycler.scrapView((r2v0 'this' android.support.v7.widget.RecyclerView$Recycler A[IMMUTABLE_TYPE, THIS]), (r3v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_10[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_10[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_20;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_18 -> Node_19;
Node_16 -> Node_17;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

