digraph "CFG forandroid.support.v7.widget.RecyclerView.Recycler.invalidateDisplayListInt(Landroid\/view\/ViewGroup;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r5.getChildCount() \- 1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lPHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v4 int) binds: [B:0:0x0000, B:5:0x0015] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:5:0x0015\l|if (r0 \< 0) goto L_0x0018\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|android.view.View r2 = r5.getChildAt(r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if ((r2 instanceof android.view.ViewGroup) == false) goto L_0x0015\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|invalidateDisplayListInt((android.view.ViewGroup) r2, true)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|LOOP_END\lLOOP:0: B:1:0x0006\-\>B:5:0x0015\l|int r0 = r0 + \-1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|if (r6 != false) goto L_0x001b\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b}"];
Node_9 [shape=record,label="{9\:\ 0x0020|if (r5.getVisibility() != 4) goto L_0x002a\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|r5.setVisibility(0)\lr5.setVisibility(4)\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|int r6 = r5.getVisibility()\lr5.setVisibility(4)\lr5.setVisibility(r6)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0015|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0015|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.v7.widget.RecyclerView.Recycler.invalidateDisplayListInt((r4v0 'this' android.support.v7.widget.RecyclerView$Recycler A[IMMUTABLE_TYPE, THIS]), (r5v0 android.view.ViewGroup A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_13;
Node_5 -> Node_1;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_16;
Node_11 -> Node_15;
Node_12 -> Node_6;
Node_13 -> Node_5;
Node_14 -> Node_5;
}

