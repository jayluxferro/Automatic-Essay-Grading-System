digraph "CFG forandroid.support.v7.widget.RecyclerView.Recycler.recycleAndClearCachedViews()V" {
subgraph cluster_Region_1598484722 {
label = "R(4:0|(1:2)|3|(1:(1:5)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r1.mCachedViews.size() \- 1\l}"];
subgraph cluster_LoopRegion_1203938486 {
label = "LOOP:0: (1:2)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v8 int) binds: [B:0:0x0000, B:2:0x000a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0008\-\>B:2:0x000a\l|if (r0 \>= 0) goto L_0x000a\l}"];
subgraph cluster_Region_227981502 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|LOOP_END\lLOOP:0: B:1:0x0008\-\>B:2:0x000a\l|recycleCachedViewAt(r0)\lr0\-\-\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0010|r1.mCachedViews.clear()\l}"];
subgraph cluster_Region_1984541051 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1296352783 {
label = "IF [B:4:0x0017] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0017|if (android.support.p003v7.widget.RecyclerView.ALLOW_THREAD_GAP_WORK == true) goto L_0x0019\l}"];
subgraph cluster_Region_912186440 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0019|android.support.p003v7.widget.RecyclerView.this.mPrefetchRegistry.clearPrefetchPositions()\l}"];
}
}
}
}
Node_6 [shape=record,color=red,label="{6\:\ 0x0010|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void android.support.v7.widget.RecyclerView.Recycler.recycleAndClearCachedViews((r1v0 'this' android.support.v7.widget.RecyclerView$Recycler A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_2 -> Node_1;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_8[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_3;
}

