digraph "CFG forandroid.support.v7.widget.RecyclerView.Recycler.offsetPositionRecordsForMove(II)V" {
subgraph cluster_Region_1679412715 {
label = "R(3:(1:1)(1:2)|3|(3:5|(1:(1:13)(1:14))|15)) | DECL_VAR: int null, int null, int null\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_37309901 {
label = "IF [B:0:0x0000] THEN: R(1:1) ELSE: R(1:2)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r9 \< r10) goto L_0x0002\l}"];
subgraph cluster_Region_1717989180 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|r0 = r9\lr1 = r10\lr2 = \-1\l}"];
}
subgraph cluster_Region_1507460839 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|r1 = r9\lr0 = r10\lr2 = 1\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x000b|PHI: r0 r1 r2 \l  PHI: (r0v0 int) = (r0v2 int), (r0v4 int) binds: [B:2:0x0007, B:1:0x0002] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v0 int) = (r1v1 int), (r1v2 int) binds: [B:2:0x0007, B:1:0x0002] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v0 int) = (r2v1 int), (r2v2 int) binds: [B:2:0x0007, B:1:0x0002] A[DONT_GENERATE, DONT_INLINE]\l|int int r3 = r8.mCachedViews.size()\lint r5 = 0\l}"];
subgraph cluster_LoopRegion_248329084 {
label = "LOOP:0: (3:5|(1:(1:13)(1:14))|15)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0013|LOOP_START\lPHI: r5 \l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:3:0x000b, B:15:0x0035] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0013\-\>B:15:0x0035\l|if (r5 \< r3) goto L_0x0015\l}"];
subgraph cluster_Region_120185212 {
label = "R(3:5|(1:(1:13)(1:14))|15)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0015|android.support.v7.widget.RecyclerView$ViewHolder android.support.p003v7.widget.RecyclerView.ViewHolder r6 = r8.mCachedViews.get(r5)\l}"];
subgraph cluster_IfRegion_1390637354 {
label = "IF [B:6:0x001d, B:8:0x0021, B:10:0x0025] THEN: R(1:(1:13)(1:14)) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001d|ADDED_TO_REGION\l|if (r6 != null) goto L_0x001f\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|ADDED_TO_REGION\l|if (r6.mPosition \>= r0) goto L_0x0023\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|ADDED_TO_REGION\l|if (r6.mPosition \<= r1) goto L_0x0028\l}"];
subgraph cluster_Region_640683347 {
label = "R(1:(1:13)(1:14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2025818120 {
label = "IF [B:12:0x002a] THEN: R(1:13) ELSE: R(1:14)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002a|if (r6.mPosition == r9) goto L_0x002c\l}"];
subgraph cluster_Region_529404592 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x002c|r6.offsetPosition(r10 \- r9, false)\l}"];
}
subgraph cluster_Region_1474568764 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0032|r6.offsetPosition(r2, false)\l}"];
}
}
}
}
Node_15 [shape=record,label="{15\:\ 0x0035|LOOP_END\lLOOP:0: B:4:0x0013\-\>B:15:0x0035\l|r5++\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ 0x001f}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0023}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0028}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0038}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0038|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0035|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0035|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0035|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0035|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0035|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void android.support.v7.widget.RecyclerView.Recycler.offsetPositionRecordsForMove((r8v0 'this' android.support.v7.widget.RecyclerView$Recycler A[IMMUTABLE_TYPE, THIS]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_17[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_19[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_20[style=dashed];
Node_10 -> Node_11;
Node_10 -> Node_22[style=dashed];
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_21;
Node_14 -> Node_18;
Node_15 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_17 -> Node_16;
Node_18 -> Node_15;
Node_19 -> Node_15;
Node_20 -> Node_15;
Node_21 -> Node_15;
Node_22 -> Node_15;
}

