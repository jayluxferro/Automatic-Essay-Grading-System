digraph "CFG forandroid.support.v7.widget.ActionMenuPresenter.OverflowMenuButton.setFrame(IIII)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r5 I:boolean) = \l  (r4 I:android.support.v7.widget.AppCompatImageView)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l android.support.v7.widget.AppCompatImageView.setFrame(int, int, int, int):boolean type: SUPER \l0x0004: INVOKE  (r6 I:android.graphics.drawable.Drawable) = \l  (r4 I:android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton)\l android.support.v7.widget.ActionMenuPresenter.OverflowMenuButton.getDrawable():android.graphics.drawable.Drawable type: VIRTUAL \l0x0008: INVOKE  (r7 I:android.graphics.drawable.Drawable) = \l  (r4 I:android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton)\l android.support.v7.widget.ActionMenuPresenter.OverflowMenuButton.getBackground():android.graphics.drawable.Drawable type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x003f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x003f \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: INVOKE  (r6 I:int) = \l  (r4 I:android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton)\l android.support.v7.widget.ActionMenuPresenter.OverflowMenuButton.getWidth():int type: VIRTUAL \l0x0014: INVOKE  (r8 I:int) = \l  (r4 I:android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton)\l android.support.v7.widget.ActionMenuPresenter.OverflowMenuButton.getHeight():int type: VIRTUAL \l0x0018: INVOKE  (r0 I:int) = (r6 I:int), (r8 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x001c: ARITH  (r0 I:int) = (r0 I:int) \/ (2 int) \l0x001e: INVOKE  (r1 I:int) = \l  (r4 I:android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton)\l android.support.v7.widget.ActionMenuPresenter.OverflowMenuButton.getPaddingLeft():int type: VIRTUAL \l0x0022: INVOKE  (r2 I:int) = \l  (r4 I:android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton)\l android.support.v7.widget.ActionMenuPresenter.OverflowMenuButton.getPaddingRight():int type: VIRTUAL \l0x0026: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x0027: INVOKE  (r2 I:int) = \l  (r4 I:android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton)\l android.support.v7.widget.ActionMenuPresenter.OverflowMenuButton.getPaddingTop():int type: VIRTUAL \l0x002b: INVOKE  (r3 I:int) = \l  (r4 I:android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton)\l android.support.v7.widget.ActionMenuPresenter.OverflowMenuButton.getPaddingBottom():int type: VIRTUAL \l0x002f: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x0030: ARITH  (r6 I:int) = (r6 I:int) + (r1 I:int) \l0x0031: ARITH  (r6 I:int) = (r6 I:int) \/ (2 int) \l0x0033: ARITH  (r8 I:int) = (r8 I:int) + (r2 I:int) \l0x0034: ARITH  (r8 I:int) = (r8 I:int) \/ (2 int) \l0x0036: ARITH  (r1 I:int) = (r6 I:int) \- (r0 I:int) \l0x0038: ARITH  (r2 I:int) = (r8 I:int) \- (r0 I:int) \l0x003a: ARITH  (r6 I:int) = (r6 I:int) + (r0 I:int) \l0x003b: ARITH  (r8 I:int) = (r8 I:int) + (r0 I:int) \l0x003c: INVOKE  \l  (r7 I:android.graphics.drawable.Drawable)\l  (r1 I:int)\l  (r2 I:int)\l  (r6 I:int)\l  (r8 I:int)\l android.support.v4.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable, int, int, int, int):void type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x003f|0x003f: RETURN  (r5 I:boolean) \l}"];
MethodNode[shape=record,label="{protected boolean android.support.v7.widget.ActionMenuPresenter.OverflowMenuButton.setFrame((r4 'this' I:android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
}

