digraph "CFG forandroid.support.v7.util.DiffUtil.diffPartial(Landroid\/support\/v7\/util\/DiffUtil$Callback;IIII[I[II)Landroid\/support\/v7\/util\/DiffUtil$Snake;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r21\lr3 = r26\lr4 = r27\lint r5 = r23 \- r22\lint r6 = r25 \- r24\lr7 = 1\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r5 \< 1) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|if (r6 \>= 1) goto L_0x0011\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|int r8 = r5 \- r6\lint r9 = ((r5 + r6) + 1) \/ 2\lint r10 = (r28 \- r9) \- 1\lint r11 = (r28 + r9) + 1\ljava.util.Arrays.fill(r3, r10, r11, 0)\ljava.util.Arrays.fill(r4, r10 + r8, r11 + r8, r5)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0029|if ((r8 % 2) == 0) goto L_0x002d\l}"];
Node_5 [shape=record,label="{5\:\ 0x002b|r10 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|r10 = false\l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|PHI: r10 \l  PHI: (r10v4 boolean) = (r10v5 boolean), (r10v6 boolean) binds: [B:6:0x002d, B:5:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|r11 = 0\l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|LOOP_START\lPHI: r5 r6 r7 r9 r11 \l  PHI: (r5v1 int) = (r5v0 int), (r5v4 int) binds: [B:7:0x002e, B:62:0x0141] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 int) = (r6v0 int), (r6v5 int) binds: [B:7:0x002e, B:62:0x0141] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 int) = (r7v0 int), (r7v3 int) binds: [B:7:0x002e, B:62:0x0141] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v3 int) = (r9v2 int), (r9v5 int) binds: [B:7:0x002e, B:62:0x0141] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v4 int) = (r11v3 int), (r11v5 int) binds: [B:7:0x002e, B:62:0x0141] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x002f\-\>B:62:0x0141\l|if (r11 \> r9) goto L_0x014e\l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|int r13 = \-r11\lr14 = r13\l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|LOOP_START\lPHI: r5 r6 r7 r9 r14 \l  PHI: (r5v2 int) = (r5v1 int), (r5v12 int) binds: [B:9:0x0031, B:34:0x00b0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v2 int) = (r6v1 int), (r6v8 int) binds: [B:9:0x0031, B:34:0x00b0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v2 int) = (r7v1 int), (r7v7 int) binds: [B:9:0x0031, B:34:0x00b0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v4 int) = (r9v3 int), (r9v24 int) binds: [B:9:0x0031, B:34:0x00b0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v1 int) = (r14v0 int), (r14v5 int) binds: [B:9:0x0031, B:34:0x00b0] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:10:0x0033\-\>B:34:0x00b0\l|if (r14 \> r11) goto L_0x00bd\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|if (r14 == r13) goto L_0x0051\l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|if (r14 == r11) goto L_0x0045\l}"];
Node_13 [shape=record,label="{13\:\ 0x0039|int r15 = r28 + r14\l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|if (r3[r15 + \-1] \>= r3[r15 + r7]) goto L_0x0045\l}"];
Node_15 [shape=record,label="{15\:\ 0x0045|int r7 = r3[(r28 + r14) + \-1] + 1\lr12 = true\l}"];
Node_16 [shape=record,label="{16\:\ 0x0051|r7 = r3[(r28 + r14) + 1]\lr12 = false\l}"];
Node_17 [shape=record,label="{17\:\ 0x005a|PHI: r7 r12 \l  PHI: (r7v5 int) = (r7v13 int), (r7v17 int) binds: [B:16:0x0051, B:15:0x0045] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v7 boolean) = (r12v9 boolean), (r12v10 boolean) binds: [B:16:0x0051, B:15:0x0045] A[DONT_GENERATE, DONT_INLINE]\l|r18 = r9\lr9 = r7 \- r14\l}"];
Node_18 [shape=record,label="{18\:\ 0x005f|LOOP_START\lPHI: r5 r6 r7 r9 \l  PHI: (r5v9 int) = (r5v2 int), (r5v16 int) binds: [B:17:0x005a, B:22:0x0071] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v7 int) = (r6v2 int), (r6v15 int) binds: [B:17:0x005a, B:22:0x0071] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v6 int) = (r7v5 int), (r7v10 int) binds: [B:17:0x005a, B:22:0x0071] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v23 int) = (r9v22 int), (r9v25 int) binds: [B:17:0x005a, B:22:0x0071] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:18:0x005f\-\>B:22:0x0071\l|if (r7 \>= r5) goto L_0x007a\l}"];
Node_19 [shape=record,label="{19\:\ 0x0061|if (r9 \>= r6) goto L_0x007a\l}"];
Node_20 [shape=record,label="{20\:\ 0x0063|r19 = r5\lr20 = r6\l}"];
Node_21 [shape=record,label="{21\:\ 0x006f|if (r0.areItemsTheSame(r22 + r7, r24 + r9) == false) goto L_0x007e\l}"];
Node_22 [shape=record,label="{22\:\ 0x0071|LOOP_END\lLOOP:2: B:18:0x005f\-\>B:22:0x0071\l|int r7 = r7 + 1\lint r9 = r9 + 1\lr5 = r19\lr6 = r20\l}"];
Node_23 [shape=record,label="{23\:\ 0x007a|r19 = r5\lr20 = r6\l}"];
Node_24 [shape=record,label="{24\:\ 0x007e|PHI: r19 r20 \l  PHI: (r19v1 int) = (r19v2 int), (r19v3 int) binds: [B:23:0x007a, B:75:0x007e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r20v1 int) = (r20v2 int), (r20v3 int) binds: [B:23:0x007a, B:75:0x007e] A[DONT_GENERATE, DONT_INLINE]\l|int r5 = r28 + r14\lr3[r5] = r7\l}"];
Node_25 [shape=record,label="{25\:\ 0x0082|if (r10 == false) goto L_0x00b0\l}"];
Node_26 [shape=record,label="{26\:\ 0x0084}"];
Node_27 [shape=record,label="{27\:\ 0x0088|if (r14 \< ((r8 \- r11) + 1)) goto L_0x00b0\l}"];
Node_28 [shape=record,label="{28\:\ 0x008a}"];
Node_29 [shape=record,label="{29\:\ 0x008d|if (r14 \> ((r8 + r11) \- 1)) goto L_0x00b0\l}"];
Node_30 [shape=record,label="{30\:\ 0x008f}"];
Node_31 [shape=record,label="{31\:\ 0x0093|if (r3[r5] \< r4[r5]) goto L_0x00b0\l}"];
Node_32 [shape=record,label="{32\:\ 0x0095|android.support.v7.util.DiffUtil$Snake r0 = new android.support.p003v7.util.DiffUtil.Snake()\lr0.f40x = r4[r5]\lr0.f41y = r0.f40x \- r14\lr0.size = r3[r5] \- r4[r5]\lr0.removal = r12\lr0.reverse = false\l}"];
Node_33 [shape=record,label="{33\:\ 0x00af|RETURN\l|return r0\l}"];
Node_34 [shape=record,label="{34\:\ 0x00b0|LOOP_END\lLOOP:1: B:10:0x0033\-\>B:34:0x00b0\l|int r14 = r14 + 2\lr9 = r18\lr5 = r19\lr6 = r20\lr7 = 1\l}"];
Node_35 [shape=record,label="{35\:\ 0x00bd|r19 = r5\lr20 = r6\lr18 = r9\lr6 = r13\l}"];
Node_36 [shape=record,label="{36\:\ 0x00c5|LOOP_START\lPHI: r6 \l  PHI: (r6v4 int) = (r6v3 int), (r6v6 int) binds: [B:35:0x00bd, B:61:0x013c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:36:0x00c5\-\>B:61:0x013c\l|if (r6 \> r11) goto L_0x0141\l}"];
Node_37 [shape=record,label="{37\:\ 0x00c7|int r7 = r6 + r8\l}"];
Node_38 [shape=record,label="{38\:\ 0x00cb|if (r7 == (r11 + r8)) goto L_0x00ec\l}"];
Node_39 [shape=record,label="{39\:\ 0x00cd}"];
Node_40 [shape=record,label="{40\:\ 0x00cf|if (r7 == (r13 + r8)) goto L_0x00e0\l}"];
Node_41 [shape=record,label="{41\:\ 0x00d1|int r9 = r28 + r7\l}"];
Node_42 [shape=record,label="{42\:\ 0x00dd|if (r4[r9 + \-1] \>= r4[r9 + 1]) goto L_0x00e2\l}"];
Node_43 [shape=record,label="{43\:\ 0x00e0}"];
Node_44 [shape=record,label="{44\:\ 0x00e2|int r9 = r4[(r28 + r7) + 1] + \-1\lr12 = true\l}"];
Node_45 [shape=record,label="{45\:\ 0x00ec}"];
Node_46 [shape=record,label="{46\:\ 0x00ee|r9 = r4[(r28 + r7) + \-1]\lr12 = false\l}"];
Node_47 [shape=record,label="{47\:\ 0x00f5|PHI: r9 r12 \l  PHI: (r9v7 int) = (r9v13 int), (r9v18 int) binds: [B:46:0x00ee, B:44:0x00e2] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v2 boolean) = (r12v3 boolean), (r12v4 boolean) binds: [B:46:0x00ee, B:44:0x00e2] A[DONT_GENERATE, DONT_INLINE]\l|int r14 = r9 \- r7\l}"];
Node_48 [shape=record,label="{48\:\ 0x00f7|LOOP_START\lPHI: r9 r14 \l  PHI: (r9v8 int) = (r9v7 int), (r9v10 int) binds: [B:47:0x00f5, B:52:0x0109] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v3 int) = (r14v2 int), (r14v4 int) binds: [B:47:0x00f5, B:52:0x0109] A[DONT_GENERATE, DONT_INLINE]\lLOOP:4: B:48:0x00f7\-\>B:52:0x0109\l|if (r9 \<= 0) goto L_0x0111\l}"];
Node_49 [shape=record,label="{49\:\ 0x00f9|if (r14 \<= 0) goto L_0x0111\l}"];
Node_50 [shape=record,label="{50\:\ 0x00fb}"];
Node_51 [shape=record,label="{51\:\ 0x0107|if (r0.areItemsTheSame((r22 + r9) + \-1, (r24 + r14) + \-1) == false) goto L_0x0111\l}"];
Node_52 [shape=record,label="{52\:\ 0x0109|LOOP_END\lLOOP:4: B:48:0x00f7\-\>B:52:0x0109\l|int r9 = r9 + \-1\lint r14 = r14 + \-1\l}"];
Node_53 [shape=record,label="{53\:\ 0x0111|int r1 = r28 + r7\lr4[r1] = r9\l}"];
Node_54 [shape=record,label="{54\:\ 0x0115|if (r10 != false) goto L_0x013c\l}"];
Node_55 [shape=record,label="{55\:\ 0x0117|if (r7 \< r13) goto L_0x013c\l}"];
Node_56 [shape=record,label="{56\:\ 0x0119|if (r7 \> r11) goto L_0x013c\l}"];
Node_57 [shape=record,label="{57\:\ 0x011b}"];
Node_58 [shape=record,label="{58\:\ 0x011f|if (r3[r1] \< r4[r1]) goto L_0x013c\l}"];
Node_59 [shape=record,label="{59\:\ 0x0121|android.support.v7.util.DiffUtil$Snake r0 = new android.support.p003v7.util.DiffUtil.Snake()\lr0.f40x = r4[r1]\lr0.f41y = r0.f40x \- r7\lr0.size = r3[r1] \- r4[r1]\lr0.removal = r12\lr0.reverse = true\l}"];
Node_60 [shape=record,label="{60\:\ 0x013b|RETURN\l|return r0\l}"];
Node_61 [shape=record,label="{61\:\ 0x013c|LOOP_END\lLOOP:3: B:36:0x00c5\-\>B:61:0x013c\l|int r6 = r6 + 2\l}"];
Node_62 [shape=record,label="{62\:\ 0x0141|LOOP_END\lLOOP:0: B:8:0x002f\-\>B:62:0x0141\l|int r11 = r11 + 1\lr9 = r18\lr5 = r19\lr6 = r20\lr7 = 1\l}"];
Node_63 [shape=record,label="{63\:\ 0x014e}"];
Node_64 [shape=record,label="{64\:\ 0x0155|throw new java.lang.IllegalStateException(\"DiffUtil hit an unexpected case while trying to calculate the optimal path. Please make sure your data is not changing during the diff calculation.\")\l}"];
Node_65 [shape=record,label="{65\:\ 0x0095|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0121|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x014e|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x00bd|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ 0x00b0|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x00b0|SYNTHETIC\l}"];
Node_71 [shape=record,label="{71\:\ 0x00b0|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x00b0|SYNTHETIC\l}"];
Node_73 [shape=record,label="{73\:\ 0x007a|SYNTHETIC\l}"];
Node_74 [shape=record,label="{74\:\ 0x007a|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x007e|SYNTHETIC\l}"];
Node_76 [shape=record,label="{76\:\ 0x0141|SYNTHETIC\l}"];
Node_77 [shape=record,label="{77\:\ 0x013c|SYNTHETIC\l}"];
Node_78 [shape=record,label="{78\:\ 0x013c|SYNTHETIC\l}"];
Node_79 [shape=record,label="{79\:\ 0x013c|SYNTHETIC\l}"];
Node_80 [shape=record,label="{80\:\ 0x013c|SYNTHETIC\l}"];
Node_81 [shape=record,label="{81\:\ 0x0111|SYNTHETIC\l}"];
Node_82 [shape=record,label="{82\:\ 0x0111|SYNTHETIC\l}"];
Node_83 [shape=record,label="{83\:\ 0x0111|SYNTHETIC\l}"];
Node_84 [shape=record,label="{84\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_85 [shape=record,label="{85\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
MethodNode[shape=record,label="{private static android.support.v7.util.DiffUtil$Snake android.support.v7.util.DiffUtil.diffPartial((r21v0 android.support.v7.util.DiffUtil$Callback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_84;
Node_2 -> Node_3;
Node_2 -> Node_85[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_67;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_68;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_74;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_73;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_75;
Node_22 -> Node_18;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_69;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_70;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_71;
Node_30 -> Node_31;
Node_31 -> Node_65[style=dashed];
Node_31 -> Node_72;
Node_32 -> Node_33;
Node_34 -> Node_10;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_76;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_45;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_43;
Node_41 -> Node_42;
Node_42 -> Node_44;
Node_42 -> Node_46[style=dashed];
Node_43 -> Node_44;
Node_44 -> Node_47;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_81;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_83;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_82;
Node_52 -> Node_48;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_77;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_78;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_79;
Node_57 -> Node_58;
Node_58 -> Node_66[style=dashed];
Node_58 -> Node_80;
Node_59 -> Node_60;
Node_61 -> Node_36;
Node_62 -> Node_8;
Node_63 -> Node_64;
Node_65 -> Node_32;
Node_66 -> Node_59;
Node_67 -> Node_63;
Node_68 -> Node_35;
Node_69 -> Node_34;
Node_70 -> Node_34;
Node_71 -> Node_34;
Node_72 -> Node_34;
Node_73 -> Node_23;
Node_74 -> Node_23;
Node_75 -> Node_24;
Node_76 -> Node_62;
Node_77 -> Node_61;
Node_78 -> Node_61;
Node_79 -> Node_61;
Node_80 -> Node_61;
Node_81 -> Node_53;
Node_82 -> Node_53;
Node_83 -> Node_53;
}

