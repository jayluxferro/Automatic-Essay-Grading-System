digraph "CFG forandroid.support.v7.util.DiffUtil.DiffResult.addRootSnake()V" {
subgraph cluster_Region_1664331514 {
label = "R(2:1|(1:(1:9)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0007|android.support.p003v7.util.DiffUtil.Snake r0 = r3.mSnakes.isEmpty() ? null : r3.mSnakes.get(0)\l}"];
subgraph cluster_Region_474419150 {
label = "R(1:(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1288090374 {
label = "IF [B:4:0x0013, B:6:0x0017, B:8:0x001b] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0013|PHI: r0 \l  PHI: (r0v2 android.support.v7.util.DiffUtil$Snake) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == null) goto L_0x001d\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|ADDED_TO_REGION\l|if (r0.f40x != 0) goto L_0x001d\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|ADDED_TO_REGION\l|if (r0.f41y != 0) goto L_0x001d\l}"];
subgraph cluster_Region_125834826 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001d|android.support.v7.util.DiffUtil$Snake android.support.p003v7.util.DiffUtil.Snake r0 = new android.support.p003v7.util.DiffUtil.Snake()\lr0.f40x = 0\lr0.f41y = 0\lr0.removal = false\lr0.size = 0\lr0.reverse = false\lr3.mSnakes.add(0, r0)\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0009}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000b}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0015}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0019}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.v7.util.DiffUtil.DiffResult.addRootSnake((r3v0 'this' android.support.v7.util.DiffUtil$DiffResult A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_8 -> Node_9;
Node_8 -> Node_11[style=dashed];
Node_9 -> Node_10;
Node_0 -> Node_1;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

