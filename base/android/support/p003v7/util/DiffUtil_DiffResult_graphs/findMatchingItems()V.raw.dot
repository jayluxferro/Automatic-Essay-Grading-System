digraph "CFG forandroid.support.v7.util.DiffUtil.DiffResult.findMatchingItems()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r9 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mOldListSize int \l0x0002: IGET  (r1 I:int) = (r9 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mNewListSize int \l0x0004: IGET  (r2 I:java.util.List\<android.support.v7.util.DiffUtil$Snake\>) = (r9 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mSnakes java.util.List \l0x0006: INVOKE  (r2 I:int) = (r2 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x000a: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000b: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r2 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:17:0x0062 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: IGET  (r4 I:java.util.List\<android.support.v7.util.DiffUtil$Snake\>) = (r9 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mSnakes java.util.List \l0x0010: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0014: CHECK_CAST  (r4 I:android.support.v7.util.DiffUtil$Snake) = (android.support.v7.util.DiffUtil$Snake) (r4 I:?[OBJECT, ARRAY]) \l0x0016: IGET  (r5 I:int) = (r4 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.x int \l0x0018: IGET  (r6 I:int) = (r4 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.size int \l0x001a: ARITH  (r5 I:int) = (r5 I:int) + (r6 I:int) \l0x001b: IGET  (r6 I:int) = (r4 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.y int \l0x001d: IGET  (r7 I:int) = (r4 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.size int \l0x001f: ARITH  (r6 I:int) = (r6 I:int) + (r7 I:int) \l0x0020: IGET  (r7 I:boolean) = (r9 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mDetectMoves boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|0x0022: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0034 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: IF  (r0 I:?[int, byte, short, char]) \<= (r5 I:?[int, byte, short, char])  \-\> B:6:0x002c \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: INVOKE  \l  (r9 I:android.support.v7.util.DiffUtil$DiffResult)\l  (r0 I:int)\l  (r1 I:int)\l  (r2 I:int)\l android.support.v7.util.DiffUtil.DiffResult.findAddition(int, int, int):void type: DIRECT \l0x0029: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|0x002c: IF  (r1 I:?[int, byte, short, char]) \<= (r6 I:?[int, byte, short, char])  \-\> B:8:0x0034 \l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|0x002e: INVOKE  \l  (r9 I:android.support.v7.util.DiffUtil$DiffResult)\l  (r0 I:int)\l  (r1 I:int)\l  (r2 I:int)\l android.support.v7.util.DiffUtil.DiffResult.findRemoval(int, int, int):void type: DIRECT \l0x0031: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|0x0034: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|0x0035: IGET  (r1 I:int) = (r4 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.size int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|0x0037: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:16:0x005b \l}"];
Node_11 [shape=record,label="{11\:\ 0x0039|0x0039: IGET  (r1 I:int) = (r4 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.x int \l0x003b: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x003c: IGET  (r5 I:int) = (r4 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.y int \l0x003e: ARITH  (r5 I:int) = (r5 I:int) + (r0 I:int) \l0x003f: IGET  (r6 I:android.support.v7.util.DiffUtil$Callback) = (r9 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mCallback android.support.v7.util.DiffUtil$Callback \l0x0041: INVOKE  (r6 I:boolean) = \l  (r6 I:android.support.v7.util.DiffUtil$Callback)\l  (r1 I:int)\l  (r5 I:int)\l android.support.v7.util.DiffUtil.Callback.areContentsTheSame(int, int):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0045|0x0045: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0049 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0047|0x0047: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0049|0x0049: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|0x004a: IGET  (r7 I:int[]) = (r9 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mOldItemStatuses int[] \l0x004c: ARITH  (r8 I:int) = (r5 I:int) \<\< (5 int) \l0x004e: ARITH  (r8 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char]) \| (r6 I:?[int, boolean, short, byte, char]) \l0x004f: APUT  \l  (r7 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r8 I:?[int, float])\l \l0x0051: IGET  (r7 I:int[]) = (r9 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mNewItemStatuses int[] \l0x0053: ARITH  (r1 I:int) = (r1 I:int) \<\< (5 int) \l0x0055: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) \| (r6 I:?[int, boolean, short, byte, char]) \l0x0056: APUT  \l  (r7 I:?[int, float][])\l  (r5 I:?[int, short, byte, char])\l  (r1 I:?[int, float])\l \l0x0058: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x005b|0x005b: IGET  (r0 I:int) = (r4 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.x int \l0x005d: IGET  (r1 I:int) = (r4 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.y int \l0x005f: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0062|0x0062: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v7.util.DiffUtil.DiffResult.findMatchingItems((r9 'this' I:android.support.v7.util.DiffUtil$DiffResult A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_4;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_6;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_16 -> Node_1;
}

