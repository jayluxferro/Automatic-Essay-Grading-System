digraph "CFG forandroid.support.v7.util.DiffUtil.DiffResult.findMatchingItem(IIIZ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0007 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: ARITH  (r10 I:int) = (r10 I:int) + (\-1 int) \l0x0004: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: ARITH  (r0 I:int) = (r9 I:int) + (\-1 int) \l0x0009: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r11 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:27:0x007c \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IGET  (r2 I:java.util.List\<android.support.v7.util.DiffUtil$Snake\>) = (r8 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mSnakes java.util.List \l0x000e: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.List), (r11 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0012: CHECK_CAST  (r2 I:android.support.v7.util.DiffUtil$Snake) = (android.support.v7.util.DiffUtil$Snake) (r2 I:?[OBJECT, ARRAY]) \l0x0014: IGET  (r3 I:int) = (r2 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.x int \l0x0016: IGET  (r4 I:int) = (r2 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.size int \l0x0018: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x0019: IGET  (r4 I:int) = (r2 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.y int \l0x001b: IGET  (r5 I:int) = (r2 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.size int \l0x001d: ARITH  (r4 I:int) = (r4 I:int) + (r5 I:int) \l0x001e: CONST  (r5 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x001f: CONST  (r6 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0021: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x004c \l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: ARITH  (r0 I:int) = (r0 I:int) \- (r7 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: IF  (r0 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:26:0x0075 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: IGET  (r10 I:android.support.v7.util.DiffUtil$Callback) = (r8 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mCallback android.support.v7.util.DiffUtil$Callback \l0x0029: INVOKE  (r10 I:boolean) = \l  (r10 I:android.support.v7.util.DiffUtil$Callback)\l  (r0 I:int)\l  (r1 I:int)\l android.support.v7.util.DiffUtil.Callback.areItemsTheSame(int, int):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0049 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|0x002f: IGET  (r9 I:android.support.v7.util.DiffUtil$Callback) = (r8 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mCallback android.support.v7.util.DiffUtil$Callback \l0x0031: INVOKE  (r9 I:boolean) = \l  (r9 I:android.support.v7.util.DiffUtil$Callback)\l  (r0 I:int)\l  (r1 I:int)\l android.support.v7.util.DiffUtil.Callback.areContentsTheSame(int, int):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0039 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|0x0037: CONST  (r5 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0039|0x0039: IGET  (r9 I:int[]) = (r8 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mNewItemStatuses int[] \l0x003b: ARITH  (r10 I:int) = (r0 I:int) \<\< (5 int) \l0x003d: ARITH  (r10 I:?[int, boolean, short, byte, char]) = (r10 I:?[int, boolean, short, byte, char]) \| (16 ?[int, float, short, byte, char]) \l0x003f: APUT  \l  (r9 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r10 I:?[int, float])\l \l0x0041: IGET  (r9 I:int[]) = (r8 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mOldItemStatuses int[] \l0x0043: ARITH  (r10 I:int) = (r1 I:int) \<\< (5 int) \l0x0045: ARITH  (r10 I:?[int, boolean, short, byte, char]) = (r10 I:?[int, boolean, short, byte, char]) \| (r5 I:?[int, boolean, short, byte, char]) \l0x0046: APUT  \l  (r9 I:?[int, float][])\l  (r0 I:?[int, short, byte, char])\l  (r10 I:?[int, float])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|0x0048: RETURN  (r7 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0049|0x0049: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|0x004c: ARITH  (r10 I:int) = (r10 I:int) \- (r7 I:int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x004d|0x004d: IF  (r10 I:?[int, byte, short, char]) \< (r4 I:?[int, byte, short, char])  \-\> B:26:0x0075 \l}"];
Node_18 [shape=record,label="{18\:\ 0x004f|0x004f: IGET  (r0 I:android.support.v7.util.DiffUtil$Callback) = (r8 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mCallback android.support.v7.util.DiffUtil$Callback \l0x0051: INVOKE  (r0 I:boolean) = \l  (r0 I:android.support.v7.util.DiffUtil$Callback)\l  (r1 I:int)\l  (r10 I:int)\l android.support.v7.util.DiffUtil.Callback.areItemsTheSame(int, int):boolean type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0055|0x0055: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0072 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0057|0x0057: IGET  (r11 I:android.support.v7.util.DiffUtil$Callback) = (r8 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mCallback android.support.v7.util.DiffUtil$Callback \l0x0059: INVOKE  (r11 I:boolean) = \l  (r11 I:android.support.v7.util.DiffUtil$Callback)\l  (r1 I:int)\l  (r10 I:int)\l android.support.v7.util.DiffUtil.Callback.areContentsTheSame(int, int):boolean type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x005d|0x005d: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0061 \l}"];
Node_22 [shape=record,label="{22\:\ 0x005f|0x005f: CONST  (r5 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0061|0x0061: IGET  (r11 I:int[]) = (r8 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mOldItemStatuses int[] \l0x0063: ARITH  (r9 I:int) = (r9 I:int) \- (r7 I:int) \l0x0064: ARITH  (r12 I:int) = (r10 I:int) \<\< (5 int) \l0x0066: ARITH  (r12 I:?[int, boolean, short, byte, char]) = (r12 I:?[int, boolean, short, byte, char]) \| (16 ?[int, float, short, byte, char]) \l0x0068: APUT  \l  (r11 I:?[int, float][])\l  (r9 I:?[int, short, byte, char])\l  (r12 I:?[int, float])\l \l0x006a: IGET  (r11 I:int[]) = (r8 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mNewItemStatuses int[] \l0x006c: ARITH  (r9 I:int) = (r9 I:int) \<\< (5 int) \l0x006e: ARITH  (r9 I:?[int, boolean, short, byte, char]) = (r9 I:?[int, boolean, short, byte, char]) \| (r5 I:?[int, boolean, short, byte, char]) \l0x006f: APUT  \l  (r11 I:?[int, float][])\l  (r10 I:?[int, short, byte, char])\l  (r9 I:?[int, float])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x0071|0x0071: RETURN  (r7 I:boolean) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0072|0x0072: ARITH  (r10 I:int) = (r10 I:int) + (\-1 int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0075|0x0075: IGET  (r0 I:int) = (r2 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.x int \l0x0077: IGET  (r10 I:int) = (r2 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.y int \l0x0079: ARITH  (r11 I:int) = (r11 I:int) + (\-1 int) \l}"];
Node_27 [shape=record,label="{27\:\ 0x007c|0x007c: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_28 [shape=record,label="{28\:\ 0x007d|0x007d: RETURN  (r9 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean android.support.v7.util.DiffUtil.DiffResult.findMatchingItem((r8 'this' I:android.support.v7.util.DiffUtil$DiffResult A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_27;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_16;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_26;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_7;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_25 -> Node_17;
Node_26 -> Node_3;
Node_27 -> Node_28;
}

