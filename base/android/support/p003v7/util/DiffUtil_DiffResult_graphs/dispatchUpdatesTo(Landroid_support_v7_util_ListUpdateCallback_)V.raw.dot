digraph "CFG forandroid.support.v7.util.DiffUtil.DiffResult.dispatchUpdatesTo(Landroid\/support\/v7\/util\/ListUpdateCallback;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r15 I:?[OBJECT, ARRAY]) android.support.v7.util.BatchingListUpdateCallback \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CHECK_CAST  (r15 I:android.support.v7.util.BatchingListUpdateCallback) = (android.support.v7.util.BatchingListUpdateCallback) (r15 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: NEW_INSTANCE  (r0 I:android.support.v7.util.BatchingListUpdateCallback) =  android.support.v7.util.BatchingListUpdateCallback \l0x0009: INVOKE  \l  (r0 I:android.support.v7.util.BatchingListUpdateCallback)\l  (r15 I:android.support.v7.util.ListUpdateCallback)\l android.support.v7.util.BatchingListUpdateCallback.\<init\>(android.support.v7.util.ListUpdateCallback):void type: DIRECT \l0x000c: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x000f: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0012: IGET  (r1 I:int) = (r14 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mOldListSize int \l0x0014: IGET  (r2 I:int) = (r14 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mNewListSize int \l0x0016: IGET  (r3 I:java.util.List\<android.support.v7.util.DiffUtil$Snake\>) = (r14 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mSnakes java.util.List \l0x0018: INVOKE  (r3 I:int) = (r3 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x001c: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001d: ARITH  (r3 I:int) = (r3 I:int) \- (r7 I:int) \l0x001e: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001f: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: IF  (r8 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:18:0x0079 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: IGET  (r2 I:java.util.List\<android.support.v7.util.DiffUtil$Snake\>) = (r14 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mSnakes java.util.List \l0x0024: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.List), (r8 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0028: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0029: CHECK_CAST  (r10 I:android.support.v7.util.DiffUtil$Snake) = (android.support.v7.util.DiffUtil$Snake) (r10 I:?[OBJECT, ARRAY]) \l0x002b: IGET  (r11 I:int) = (r10 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.size int \l0x002d: IGET  (r2 I:int) = (r10 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.x int \l0x002f: ARITH  (r12 I:int) = (r2 I:int) + (r11 I:int) \l0x0031: IGET  (r2 I:int) = (r10 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.y int \l0x0033: ARITH  (r13 I:int) = (r2 I:int) + (r11 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|0x0035: IF  (r12 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:9:0x0041 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|0x0037: ARITH  (r5 I:int) = (r1 I:int) \- (r12 I:int) \l0x0039: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x003a: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x003b: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x003c: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003d: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003e: INVOKE  \l  (r1 I:android.support.v7.util.DiffUtil$DiffResult)\l  (r2 I:java.util.List)\l  (r3 I:android.support.v7.util.ListUpdateCallback)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l android.support.v7.util.DiffUtil.DiffResult.dispatchRemovals(java.util.List, android.support.v7.util.ListUpdateCallback, int, int, int):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|0x0041: IF  (r13 I:?[int, byte, short, char]) \>= (r9 I:?[int, byte, short, char])  \-\> B:11:0x004d \l}"];
Node_10 [shape=record,label="{10\:\ 0x0043|0x0043: ARITH  (r5 I:int) = (r9 I:int) \- (r13 I:int) \l0x0045: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0046: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0047: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0048: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0049: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004a: INVOKE  \l  (r1 I:android.support.v7.util.DiffUtil$DiffResult)\l  (r2 I:java.util.List)\l  (r3 I:android.support.v7.util.ListUpdateCallback)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l android.support.v7.util.DiffUtil.DiffResult.dispatchAdditions(java.util.List, android.support.v7.util.ListUpdateCallback, int, int, int):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x004d|0x004d: ARITH  (r11 I:int) = (r11 I:int) + (\-1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x004f|0x004f: IF  (r11 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:17:0x0072 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0051|0x0051: IGET  (r1 I:int[]) = (r14 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mOldItemStatuses int[] \l0x0053: IGET  (r2 I:int) = (r10 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.x int \l0x0055: ARITH  (r2 I:int) = (r2 I:int) + (r11 I:int) \l0x0056: AGET  (r1 I:?[int, float]) = (r1 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0058: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (31 ?[int, float, short, byte, char]) \l0x005a: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x005b|0x005b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x006f \l}"];
Node_15 [shape=record,label="{15\:\ 0x005d|0x005d: IGET  (r1 I:int) = (r10 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.x int \l0x005f: ARITH  (r1 I:int) = (r1 I:int) + (r11 I:int) \l0x0060: IGET  (r2 I:android.support.v7.util.DiffUtil$Callback) = (r14 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mCallback android.support.v7.util.DiffUtil$Callback \l0x0062: IGET  (r3 I:int) = (r10 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.x int \l0x0064: ARITH  (r3 I:int) = (r3 I:int) + (r11 I:int) \l0x0065: IGET  (r4 I:int) = (r10 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.y int \l0x0067: ARITH  (r4 I:int) = (r4 I:int) + (r11 I:int) \l0x0068: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:android.support.v7.util.DiffUtil$Callback)\l  (r3 I:int)\l  (r4 I:int)\l android.support.v7.util.DiffUtil.Callback.getChangePayload(int, int):java.lang.Object type: VIRTUAL \l0x006c: INVOKE  \l  (r15 I:android.support.v7.util.BatchingListUpdateCallback)\l  (r1 I:int)\l  (r7 I:int)\l  (r2 I:java.lang.Object)\l android.support.v7.util.BatchingListUpdateCallback.onChanged(int, int, java.lang.Object):void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x006f|0x006f: ARITH  (r11 I:int) = (r11 I:int) + (\-1 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0072|0x0072: IGET  (r1 I:int) = (r10 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.x int \l0x0074: IGET  (r9 I:int) = (r10 I:android.support.v7.util.DiffUtil$Snake) android.support.v7.util.DiffUtil.Snake.y int \l0x0076: ARITH  (r8 I:int) = (r8 I:int) + (\-1 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0079|0x0079: INVOKE  (r15 I:android.support.v7.util.BatchingListUpdateCallback) android.support.v7.util.BatchingListUpdateCallback.dispatchLastEvent():void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x007c|0x007c: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.util.DiffUtil.DiffResult.dispatchUpdatesTo((r14 'this' I:android.support.v7.util.DiffUtil$DiffResult A[IMMUTABLE_TYPE, THIS]), (r15 I:android.support.v7.util.ListUpdateCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_18;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_17 -> Node_5;
Node_18 -> Node_19;
}

