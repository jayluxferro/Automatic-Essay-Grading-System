digraph "CFG forandroid.support.v7.util.DiffUtil.DiffResult.dispatchRemovals(Ljava\/util\/List;Landroid\/support\/v7\/util\/ListUpdateCallback;III)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r8 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mDetectMoves boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  \l  (r10 I:android.support.v7.util.ListUpdateCallback)\l  (r11 I:int)\l  (r12 I:int)\l android.support.v7.util.ListUpdateCallback.onRemoved(int, int):void type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0009: ARITH  (r12 I:int) = (r12 I:int) \- (r0 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IF  (r12 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:25:0x0091 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IGET  (r1 I:int[]) = (r8 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mOldItemStatuses int[] \l0x000e: ARITH  (r2 I:int) = (r13 I:int) + (r12 I:int) \l0x0010: AGET  (r1 I:?[int, float]) = (r1 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0012: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (31 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0072 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0050 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: CONST  (r4 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0050 \l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: CONST  (r3 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|0x001f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002c \l}"];
Node_14 [shape=record,label="{14\:\ 0x0021|0x0021: NEW_INSTANCE  (r1 I:android.support.v7.util.DiffUtil$PostponedUpdate) =  android.support.v7.util.DiffUtil$PostponedUpdate \l0x0023: ARITH  (r3 I:int) = (r11 I:int) + (r12 I:int) \l0x0025: INVOKE  \l  (r1 I:android.support.v7.util.DiffUtil$PostponedUpdate)\l  (r2 I:int)\l  (r3 I:int)\l  (r0 I:boolean)\l android.support.v7.util.DiffUtil.PostponedUpdate.\<init\>(int, int, boolean):void type: DIRECT \l0x0028: INVOKE  (r9 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|0x002c: NEW_INSTANCE  (r9 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x002e: NEW_INSTANCE  (r10 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0030: INVOKE  (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0033: CONST_STR  (r11 I:java.lang.String) =  \"unknown flag for pos \" \l0x0035: INVOKE  (r10 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0038: INVOKE  (r10 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x003b: CONST_STR  (r11 I:java.lang.String) =  \" \" \l0x003d: INVOKE  (r10 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0040: CAST  (r11 I:long) = (long) (r1 I:int) \l0x0041: INVOKE  (r11 I:java.lang.String) = (r11 I:long) java.lang.Long.toBinaryString(long):java.lang.String type: STATIC \l0x0045: INVOKE  (r10 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0048: INVOKE  (r10 I:java.lang.String) = (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004c: INVOKE  \l  (r9 I:java.lang.IllegalStateException)\l  (r10 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x004f|0x004f: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0050|0x0050: IGET  (r4 I:int[]) = (r8 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mOldItemStatuses int[] \l0x0052: AGET  (r4 I:?[int, float]) = (r4 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0054: ARITH  (r4 I:int) = (r4 I:int) \>\> (5 int) \l0x0056: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0057: INVOKE  (r5 I:android.support.v7.util.DiffUtil$PostponedUpdate) = (r9 I:java.util.List), (r4 I:int), (r5 I:boolean) android.support.v7.util.DiffUtil.DiffResult.removePostponedUpdate(java.util.List, int, boolean):android.support.v7.util.DiffUtil$PostponedUpdate type: STATIC \l0x005b: ARITH  (r6 I:int) = (r11 I:int) + (r12 I:int) \l0x005d: IGET  (r7 I:int) = (r5 I:android.support.v7.util.DiffUtil$PostponedUpdate) android.support.v7.util.DiffUtil.PostponedUpdate.currentPos int \l0x005f: ARITH  (r7 I:int) = (r7 I:int) \- (r0 I:int) \l0x0060: INVOKE  \l  (r10 I:android.support.v7.util.ListUpdateCallback)\l  (r6 I:int)\l  (r7 I:int)\l android.support.v7.util.ListUpdateCallback.onMoved(int, int):void type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x0063|0x0063: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x008d \l}"];
Node_19 [shape=record,label="{19\:\ 0x0065|0x0065: IGET  (r1 I:int) = (r5 I:android.support.v7.util.DiffUtil$PostponedUpdate) android.support.v7.util.DiffUtil.PostponedUpdate.currentPos int \l0x0067: ARITH  (r1 I:int) = (r1 I:int) \- (r0 I:int) \l0x0068: IGET  (r3 I:android.support.v7.util.DiffUtil$Callback) = (r8 I:android.support.v7.util.DiffUtil$DiffResult) android.support.v7.util.DiffUtil.DiffResult.mCallback android.support.v7.util.DiffUtil$Callback \l0x006a: INVOKE  (r2 I:java.lang.Object) = \l  (r3 I:android.support.v7.util.DiffUtil$Callback)\l  (r2 I:int)\l  (r4 I:int)\l android.support.v7.util.DiffUtil.Callback.getChangePayload(int, int):java.lang.Object type: VIRTUAL \l0x006e: INVOKE  \l  (r10 I:android.support.v7.util.ListUpdateCallback)\l  (r1 I:int)\l  (r0 I:int)\l  (r2 I:java.lang.Object)\l android.support.v7.util.ListUpdateCallback.onChanged(int, int, java.lang.Object):void type: INTERFACE \l}"];
Node_20 [shape=record,label="{20\:\ 0x0072|0x0072: ARITH  (r1 I:int) = (r11 I:int) + (r12 I:int) \l0x0074: INVOKE  \l  (r10 I:android.support.v7.util.ListUpdateCallback)\l  (r1 I:int)\l  (r0 I:int)\l android.support.v7.util.ListUpdateCallback.onRemoved(int, int):void type: INTERFACE \l0x0077: INVOKE  (r1 I:java.util.Iterator) = (r9 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x007b|0x007b: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x007f|0x007f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x008d \l}"];
Node_23 [shape=record,label="{23\:\ 0x0081|0x0081: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0085: CHECK_CAST  (r2 I:android.support.v7.util.DiffUtil$PostponedUpdate) = (android.support.v7.util.DiffUtil$PostponedUpdate) (r2 I:?[OBJECT, ARRAY]) \l0x0087: IGET  (r3 I:int) = (r2 I:android.support.v7.util.DiffUtil$PostponedUpdate) android.support.v7.util.DiffUtil.PostponedUpdate.currentPos int \l0x0089: ARITH  (r3 I:int) = (r3 I:int) \- (r0 I:int) \l0x008a: IPUT  \l  (r3 I:int)\l  (r2 I:android.support.v7.util.DiffUtil$PostponedUpdate)\l android.support.v7.util.DiffUtil.PostponedUpdate.currentPos int \l}"];
Node_24 [shape=record,label="{24\:\ 0x008d|0x008d: ARITH  (r12 I:int) = (r12 I:int) + (\-1 int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0091|0x0091: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v7.util.DiffUtil.DiffResult.dispatchRemovals((r8 'this' I:android.support.v7.util.DiffUtil$DiffResult A[IMMUTABLE_TYPE, THIS]), (r9 I:java.util.List\<android.support.v7.util.DiffUtil$PostponedUpdate\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.support.v7.util.ListUpdateCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Landroid\/support\/v7\/util\/DiffUtil$PostponedUpdate;, \>;, Landroid\/support\/v7\/util\/ListUpdateCallback;, III)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_25;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_20;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_24;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_21;
Node_24 -> Node_5;
}

