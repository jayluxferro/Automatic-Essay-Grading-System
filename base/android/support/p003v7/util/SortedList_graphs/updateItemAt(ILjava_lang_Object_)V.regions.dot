digraph "CFG forandroid.support.v7.util.SortedList.updateItemAt(ILjava\/lang\/Object;)V" {
subgraph cluster_Region_2087228030 {
label = "R(3:0|1|(2:(3:(1:13)|14|(2:(2:16|19)|(1:20)))|(2:9|(1:(1:11)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|throwIfInMutationOperation()\ljava.lang.Object T r0 = get(r6)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|boolean r3 = r0 == r7 \|\| !r5.mCallback.areContentsTheSame(r0, r7)\l}"];
subgraph cluster_Region_295693555 {
label = "R(2:(3:(1:13)|14|(2:(2:16|19)|(1:20)))|(2:9|(1:(1:11))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1143604336 {
label = "IF [B:6:0x0017, B:8:0x001f] THEN: R(3:(1:13)|14|(2:(2:16|19)|(1:20))) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0017|PHI: r3 \l  PHI: (r3v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == r7) goto L_0x0033\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|ADDED_TO_REGION\l|if (r5.mCallback.compare(r0, r7) != 0) goto L_0x0033\l}"];
subgraph cluster_Region_1250747112 {
label = "R(3:(1:13)|14|(2:(2:16|19)|(1:20)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1375326867 {
label = "IF [B:12:0x0033] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0033|if (r3 == true) goto L_0x0035\l}"];
subgraph cluster_Region_69298388 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0035|r5.mCallback.onChanged(r6, 1, r5.mCallback.getChangePayload(r0, r7))\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0040|removeItemAtIndex(r6, false)\lint int r7 = add(r7, false)\l}"];
subgraph cluster_Region_1637362748 {
label = "R(2:(2:16|19)|(1:20))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1899553303 {
label = "IF [B:15:0x0047] THEN: R(2:16|19) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0047|if (r6 != r7) goto L_0x0049\l}"];
subgraph cluster_Region_1858788329 {
label = "R(2:16|19)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0049|r5.mCallback.onMoved(r6, r7)\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1998653844 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
subgraph cluster_Region_1114212654 {
label = "R(2:9|(1:(1:11)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0021|r5.mData[r6] = r7\l}"];
subgraph cluster_Region_746528228 {
label = "R(1:(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1164203352 {
label = "IF [B:10:0x0025] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0025|if (r3 == true) goto L_0x0027\l}"];
subgraph cluster_Region_1765426856 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0027|r5.mCallback.onChanged(r6, 1, r5.mCallback.getChangePayload(r0, r7))\l}"];
}
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000b}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0011|REMOVE\lADDED_TO_REGION\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0014}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0016}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0019}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v7.util.SortedList.updateItemAt((r5v0 'this' android.support.v7.util.SortedList A[IMMUTABLE_TYPE, THIS]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(ITT;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_20[style=dashed];
Node_16 -> Node_19;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_18[style=dashed];
Node_11 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

