digraph "CFG forandroid.support.v7.util.SortedList.add(Ljava\/lang\/Object;Z)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r6\lr1 = r7\lint r0 = findIndexOf(r1, r6.mData, 0, r6.mSize, 1)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r0 != \-1) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|r0 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012}"];
Node_4 [shape=record,label="{4\:\ 0x0014|if (r0 \>= r6.mSize) goto L_0x003f\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|r2 = r6.mData[r0]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|if (r6.mCallback.areItemsTheSame(r2, r7) == false) goto L_0x003f\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022}"];
Node_8 [shape=record,label="{8\:\ 0x0028|if (r6.mCallback.areContentsTheSame(r2, r7) == false) goto L_0x002f\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|r6.mData[r0] = r7\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|RETURN\l|return r0\l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|r6.mData[r0] = r7\lr6.mCallback.onChanged(r0, 1, r6.mCallback.getChangePayload(r2, r7))\l}"];
Node_12 [shape=record,label="{12\:\ 0x003e|RETURN\l|return r0\l}"];
Node_13 [shape=record,label="{13\:\ 0x003f|PHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v1 int), (r0v3 int) binds: [B:4:0x0014, B:6:0x0020, B:2:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|addToData(r0, r7)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|if (r8 == false) goto L_0x0049\l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|r6.mCallback.onInserted(r0, 1)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{private int android.support.v7.util.SortedList.add((r6v0 'this' android.support.v7.util.SortedList A[IMMUTABLE_TYPE, THIS]), (r7v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;Z)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
}

