digraph "CFG forandroid.support.v7.util.SortedList.\<init\>(Ljava\/lang\/Class;Landroid\/support\/v7\/util\/SortedList$Callback;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r1 I:java.lang.Class\<T\>)\l  (r0 I:android.support.v7.util.SortedList)\l android.support.v7.util.SortedList.mTClass java.lang.Class \l0x0005: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.Class), (r3 I:int) java.lang.reflect.Array.newInstance(java.lang.Class, int):java.lang.Object type: STATIC \l0x0009: CHECK_CAST  (r1 I:java.lang.Object[]) = (java.lang.Object[]) (r1 I:?[OBJECT, ARRAY]) \l0x000b: IPUT  (r1 I:T[]), (r0 I:android.support.v7.util.SortedList) android.support.v7.util.SortedList.mData java.lang.Object[] \l0x000d: IPUT  \l  (r2 I:android.support.v7.util.SortedList$Callback)\l  (r0 I:android.support.v7.util.SortedList)\l android.support.v7.util.SortedList.mCallback android.support.v7.util.SortedList$Callback \l0x000f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: IPUT  (r1 I:int), (r0 I:android.support.v7.util.SortedList) android.support.v7.util.SortedList.mSize int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.util.SortedList.\<init\>((r0 'this' I:android.support.v7.util.SortedList A[IMMUTABLE_TYPE, THIS]), (r1 I:java.lang.Class\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:android.support.v7.util.SortedList$Callback\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], \lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/Class\<, TT;\>;, Landroid\/support\/v7\/util\/SortedList$Callback\<, TT;\>;I)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

