digraph "CFG forandroid.support.v7.util.SortedList.findIndexOf(Ljava\/lang\/Object;[Ljava\/lang\/Object;III)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0001: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r8 I:?[int, byte, short, char]) \>= (r9 I:?[int, byte, short, char])  \-\> B:16:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: ARITH  (r2 I:int) = (r8 I:int) + (r9 I:int) \l0x0006: ARITH  (r2 I:int) = (r2 I:int) \/ (2 int) \l0x0008: AGET  (r3 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x000a: IGET  (r4 I:android.support.v7.util.SortedList$Callback) = (r5 I:android.support.v7.util.SortedList) android.support.v7.util.SortedList.mCallback android.support.v7.util.SortedList$Callback \l0x000c: INVOKE  (r4 I:int) = \l  (r4 I:android.support.v7.util.SortedList$Callback)\l  (r3 I:java.lang.Object)\l  (r6 I:java.lang.Object)\l android.support.v7.util.SortedList.Callback.compare(java.lang.Object, java.lang.Object):int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r4 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x0014: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002c \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IGET  (r7 I:android.support.v7.util.SortedList$Callback) = (r5 I:android.support.v7.util.SortedList) android.support.v7.util.SortedList.mCallback android.support.v7.util.SortedList$Callback \l0x001a: INVOKE  (r7 I:boolean) = \l  (r7 I:android.support.v7.util.SortedList$Callback)\l  (r3 I:java.lang.Object)\l  (r6 I:java.lang.Object)\l android.support.v7.util.SortedList.Callback.areItemsTheSame(java.lang.Object, java.lang.Object):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0021 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: RETURN  (r2 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: INVOKE  (r6 I:int) = \l  (r5 I:android.support.v7.util.SortedList)\l  (r6 I:java.lang.Object)\l  (r2 I:int)\l  (r8 I:int)\l  (r9 I:int)\l android.support.v7.util.SortedList.linearEqualitySearch(java.lang.Object, int, int, int):int type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002b \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002a \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|0x002a: RETURN  (r6 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|0x002b: RETURN  (r6 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|0x002c: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x002e|0x002e: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0031 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0031|0x0031: CONST  (r8 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0032|0x0032: RETURN  (r8 I:int) \l}"];
MethodNode[shape=record,label="{private int android.support.v7.util.SortedList.findIndexOf((r5 'this' I:android.support.v7.util.SortedList A[IMMUTABLE_TYPE, THIS]), (r6 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;[TT;III)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_0;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_15 -> Node_0;
Node_16 -> Node_18;
Node_16 -> Node_19[style=dashed];
Node_18 -> Node_19;
}

