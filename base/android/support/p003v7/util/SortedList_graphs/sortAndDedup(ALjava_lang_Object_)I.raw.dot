digraph "CFG forandroid.support.v7.util.SortedList.sortAndDedup([Ljava\/lang\/Object;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r8 I:?[]) \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN  (r1 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IGET  (r0 I:android.support.v7.util.SortedList$Callback) = (r7 I:android.support.v7.util.SortedList) android.support.v7.util.SortedList.mCallback android.support.v7.util.SortedList$Callback \l0x0007: INVOKE  (r8 I:java.lang.Object[]), (r0 I:java.util.Comparator) java.util.Arrays.sort(java.lang.Object[], java.util.Comparator):void type: STATIC \l0x000a: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: ARRAY_LENGTH  (r3 I:int) = (r8 I:?[]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r0 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:18:0x0038 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: AGET  (r3 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0011: IGET  (r4 I:android.support.v7.util.SortedList$Callback) = (r7 I:android.support.v7.util.SortedList) android.support.v7.util.SortedList.mCallback android.support.v7.util.SortedList$Callback \l0x0013: AGET  (r5 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0015: INVOKE  (r4 I:int) = \l  (r4 I:android.support.v7.util.SortedList$Callback)\l  (r5 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l android.support.v7.util.SortedList.Callback.compare(java.lang.Object, java.lang.Object):int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002c \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: INVOKE  (r4 I:int) = \l  (r7 I:android.support.v7.util.SortedList)\l  (r3 I:java.lang.Object)\l  (r8 I:java.lang.Object[])\l  (r1 I:int)\l  (r2 I:int)\l android.support.v7.util.SortedList.findSameItem(java.lang.Object, java.lang.Object[], int, int):int type: DIRECT \l0x001f: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0025 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: APUT  \l  (r8 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0029 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|0x0027: APUT  \l  (r8 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|0x0029: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|0x002c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0030 \l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|0x002e: APUT  \l  (r8 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0030|0x0030: ARITH  (r1 I:int) = (r2 I:int) + (1 int) \l0x0032: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0033: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0034: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0035|0x0035: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0038|0x0038: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{private int android.support.v7.util.SortedList.sortAndDedup((r7 'this' I:android.support.v7.util.SortedList A[IMMUTABLE_TYPE, THIS]), (r8 I:T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[([TT;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_18;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_17;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_17;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_4;
}

