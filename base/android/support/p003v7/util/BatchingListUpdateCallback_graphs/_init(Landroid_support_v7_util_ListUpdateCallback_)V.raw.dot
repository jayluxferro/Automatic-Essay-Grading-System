digraph "CFG forandroid.support.v7.util.BatchingListUpdateCallback.\<init\>(Landroid\/support\/v7\/util\/ListUpdateCallback;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: IPUT  \l  (r0 I:int)\l  (r1 I:android.support.v7.util.BatchingListUpdateCallback)\l android.support.v7.util.BatchingListUpdateCallback.mLastEventType int \l0x0006: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0007: IPUT  \l  (r0 I:int)\l  (r1 I:android.support.v7.util.BatchingListUpdateCallback)\l android.support.v7.util.BatchingListUpdateCallback.mLastEventPosition int \l0x0009: IPUT  \l  (r0 I:int)\l  (r1 I:android.support.v7.util.BatchingListUpdateCallback)\l android.support.v7.util.BatchingListUpdateCallback.mLastEventCount int \l0x000b: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: IPUT  \l  (r0 I:java.lang.Object)\l  (r1 I:android.support.v7.util.BatchingListUpdateCallback)\l android.support.v7.util.BatchingListUpdateCallback.mLastEventPayload java.lang.Object \l0x000e: IPUT  \l  (r2 I:android.support.v7.util.ListUpdateCallback)\l  (r1 I:android.support.v7.util.BatchingListUpdateCallback)\l android.support.v7.util.BatchingListUpdateCallback.mWrapped android.support.v7.util.ListUpdateCallback \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.util.BatchingListUpdateCallback.\<init\>((r1 'this' I:android.support.v7.util.BatchingListUpdateCallback A[IMMUTABLE_TYPE, THIS]), (r2 I:android.support.v7.util.ListUpdateCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

