digraph "CFG forandroid.support.v7.util.AsyncListUtil.1.addTile(ILandroid\/support\/v7\/util\/TileList$Tile;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:boolean) = (r3 I:android.support.v7.util.AsyncListUtil$1), (r4 I:int) android.support.v7.util.AsyncListUtil.1.isRequestedGeneration(int):boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r4 I:android.support.v7.util.AsyncListUtil) = (r3 I:android.support.v7.util.AsyncListUtil$1) android.support.v7.util.AsyncListUtil.1.this$0 android.support.v7.util.AsyncListUtil \l0x0008: IGET  (r4 I:android.support.v7.util.ThreadUtil$BackgroundCallback\<T\>) = (r4 I:android.support.v7.util.AsyncListUtil) android.support.v7.util.AsyncListUtil.mBackgroundProxy android.support.v7.util.ThreadUtil$BackgroundCallback \l0x000a: INVOKE  \l  (r4 I:android.support.v7.util.ThreadUtil$BackgroundCallback)\l  (r5 I:android.support.v7.util.TileList$Tile)\l android.support.v7.util.ThreadUtil.BackgroundCallback.recycleTile(android.support.v7.util.TileList$Tile):void type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IGET  (r4 I:android.support.v7.util.AsyncListUtil) = (r3 I:android.support.v7.util.AsyncListUtil$1) android.support.v7.util.AsyncListUtil.1.this$0 android.support.v7.util.AsyncListUtil \l0x0010: IGET  (r4 I:android.support.v7.util.TileList\<T\>) = (r4 I:android.support.v7.util.AsyncListUtil) android.support.v7.util.AsyncListUtil.mTileList android.support.v7.util.TileList \l0x0012: INVOKE  (r4 I:android.support.v7.util.TileList$Tile) = \l  (r4 I:android.support.v7.util.TileList)\l  (r5 I:android.support.v7.util.TileList$Tile)\l android.support.v7.util.TileList.addOrReplace(android.support.v7.util.TileList$Tile):android.support.v7.util.TileList$Tile type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0037 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: CONST_STR  (r0 I:java.lang.String) =  \"AsyncListUtil\" \l0x001a: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001c: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001f: CONST_STR  (r2 I:java.lang.String) =  \"duplicate tile @\" \l0x0021: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0024: IGET  (r2 I:int) = (r4 I:android.support.v7.util.TileList$Tile) android.support.v7.util.TileList.Tile.mStartPosition int \l0x0026: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0029: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002d: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC \l0x0030: IGET  (r0 I:android.support.v7.util.AsyncListUtil) = (r3 I:android.support.v7.util.AsyncListUtil$1) android.support.v7.util.AsyncListUtil.1.this$0 android.support.v7.util.AsyncListUtil \l0x0032: IGET  (r0 I:android.support.v7.util.ThreadUtil$BackgroundCallback\<T\>) = (r0 I:android.support.v7.util.AsyncListUtil) android.support.v7.util.AsyncListUtil.mBackgroundProxy android.support.v7.util.ThreadUtil$BackgroundCallback \l0x0034: INVOKE  \l  (r0 I:android.support.v7.util.ThreadUtil$BackgroundCallback)\l  (r4 I:android.support.v7.util.TileList$Tile)\l android.support.v7.util.ThreadUtil.BackgroundCallback.recycleTile(android.support.v7.util.TileList$Tile):void type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|0x0037: IGET  (r4 I:int) = (r5 I:android.support.v7.util.TileList$Tile) android.support.v7.util.TileList.Tile.mStartPosition int \l0x0039: IGET  (r0 I:int) = (r5 I:android.support.v7.util.TileList$Tile) android.support.v7.util.TileList.Tile.mItemCount int \l0x003b: ARITH  (r4 I:int) = (r4 I:int) + (r0 I:int) \l0x003c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x003d|0x003d: IGET  (r1 I:android.support.v7.util.AsyncListUtil) = (r3 I:android.support.v7.util.AsyncListUtil$1) android.support.v7.util.AsyncListUtil.1.this$0 android.support.v7.util.AsyncListUtil \l0x003f: IGET  (r1 I:android.util.SparseIntArray) = (r1 I:android.support.v7.util.AsyncListUtil) android.support.v7.util.AsyncListUtil.mMissingPositions android.util.SparseIntArray \l0x0041: INVOKE  (r1 I:int) = (r1 I:android.util.SparseIntArray) android.util.SparseIntArray.size():int type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0045|0x0045: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:15:0x0067 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0047|0x0047: IGET  (r1 I:android.support.v7.util.AsyncListUtil) = (r3 I:android.support.v7.util.AsyncListUtil$1) android.support.v7.util.AsyncListUtil.1.this$0 android.support.v7.util.AsyncListUtil \l0x0049: IGET  (r1 I:android.util.SparseIntArray) = (r1 I:android.support.v7.util.AsyncListUtil) android.support.v7.util.AsyncListUtil.mMissingPositions android.util.SparseIntArray \l0x004b: INVOKE  (r1 I:int) = (r1 I:android.util.SparseIntArray), (r0 I:int) android.util.SparseIntArray.keyAt(int):int type: VIRTUAL \l0x004f: IGET  (r2 I:int) = (r5 I:android.support.v7.util.TileList$Tile) android.support.v7.util.TileList.Tile.mStartPosition int \l}"];
Node_11 [shape=record,label="{11\:\ 0x0051|0x0051: IF  (r2 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:14:0x0064 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0053|0x0053: IF  (r1 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:14:0x0064 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0055|0x0055: IGET  (r2 I:android.support.v7.util.AsyncListUtil) = (r3 I:android.support.v7.util.AsyncListUtil$1) android.support.v7.util.AsyncListUtil.1.this$0 android.support.v7.util.AsyncListUtil \l0x0057: IGET  (r2 I:android.util.SparseIntArray) = (r2 I:android.support.v7.util.AsyncListUtil) android.support.v7.util.AsyncListUtil.mMissingPositions android.util.SparseIntArray \l0x0059: INVOKE  (r2 I:android.util.SparseIntArray), (r0 I:int) android.util.SparseIntArray.removeAt(int):void type: VIRTUAL \l0x005c: IGET  (r2 I:android.support.v7.util.AsyncListUtil) = (r3 I:android.support.v7.util.AsyncListUtil$1) android.support.v7.util.AsyncListUtil.1.this$0 android.support.v7.util.AsyncListUtil \l0x005e: IGET  (r2 I:android.support.v7.util.AsyncListUtil$ViewCallback) = (r2 I:android.support.v7.util.AsyncListUtil) android.support.v7.util.AsyncListUtil.mViewCallback android.support.v7.util.AsyncListUtil$ViewCallback \l0x0060: INVOKE  \l  (r2 I:android.support.v7.util.AsyncListUtil$ViewCallback)\l  (r1 I:int)\l android.support.v7.util.AsyncListUtil.ViewCallback.onItemLoaded(int):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0064|0x0064: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0067|0x0067: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.util.AsyncListUtil.1.addTile((r3 'this' I:android.support.v7.util.AsyncListUtil$1 A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.support.v7.util.TileList$Tile\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(I, Landroid\/support\/v7\/util\/TileList$Tile\<, TT;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_8;
Node_14 -> Node_8;
}

