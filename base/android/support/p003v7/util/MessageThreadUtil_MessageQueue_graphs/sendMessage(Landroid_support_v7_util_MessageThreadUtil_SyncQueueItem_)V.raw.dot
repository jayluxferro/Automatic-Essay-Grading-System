digraph "CFG forandroid.support.v7.util.MessageThreadUtil.MessageQueue.sendMessage(Landroid\/support\/v7\/util\/MessageThreadUtil$SyncQueueItem;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:android.support.v7.util.MessageThreadUtil$SyncQueueItem) = \l  (r2 I:android.support.v7.util.MessageThreadUtil$MessageQueue)\l android.support.v7.util.MessageThreadUtil.MessageQueue.mRoot android.support.v7.util.MessageThreadUtil$SyncQueueItem A[Catch:\{ all \-\> 0x0016 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0009 A[Catch:\{ all \-\> 0x0016 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IPUT  \l  (r3 I:android.support.v7.util.MessageThreadUtil$SyncQueueItem)\l  (r2 I:android.support.v7.util.MessageThreadUtil$MessageQueue)\l android.support.v7.util.MessageThreadUtil.MessageQueue.mRoot android.support.v7.util.MessageThreadUtil$SyncQueueItem A[Catch:\{ all \-\> 0x0016 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|0x0008: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|SYNTHETIC\lSplitter:B:7:0x0009\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0009\l|0x0009: IGET  (r0 I:android.support.v7.util.MessageThreadUtil$SyncQueueItem) = \l  (r2 I:android.support.v7.util.MessageThreadUtil$MessageQueue)\l android.support.v7.util.MessageThreadUtil.MessageQueue.mRoot android.support.v7.util.MessageThreadUtil$SyncQueueItem A[Catch:\{ all \-\> 0x0016 \}, TRY_ENTER]\l}"];
Node_9 [shape=record,label="{9\:\ 0x000b|0x000b: IGET  (r1 I:android.support.v7.util.MessageThreadUtil$SyncQueueItem) = \l  (r0 I:android.support.v7.util.MessageThreadUtil$SyncQueueItem)\l android.support.v7.util.MessageThreadUtil.SyncQueueItem.next android.support.v7.util.MessageThreadUtil$SyncQueueItem A[Catch:\{ all \-\> 0x0016 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0012 A[Catch:\{ all \-\> 0x0016 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x000f|0x000f: IGET  (r0 I:android.support.v7.util.MessageThreadUtil$SyncQueueItem) = \l  (r0 I:android.support.v7.util.MessageThreadUtil$SyncQueueItem)\l android.support.v7.util.MessageThreadUtil.SyncQueueItem.next android.support.v7.util.MessageThreadUtil$SyncQueueItem A[Catch:\{ all \-\> 0x0016 \}]\l0x0011: GOTO  \-\> 0x000b A[Catch:\{ all \-\> 0x0016 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0012|0x0012: IPUT  \l  (r3 I:android.support.v7.util.MessageThreadUtil$SyncQueueItem)\l  (r0 I:android.support.v7.util.MessageThreadUtil$SyncQueueItem)\l android.support.v7.util.MessageThreadUtil.SyncQueueItem.next android.support.v7.util.MessageThreadUtil$SyncQueueItem A[Catch:\{ all \-\> 0x0016 \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0014|0x0014: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0015|0x0015: RETURN   \l}"];
Node_15 [shape=record,label="{15\:\ 0x0016|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0016: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x0017|0x0017: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0018|0x0018: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{synchronized void android.support.v7.util.MessageThreadUtil.MessageQueue.sendMessage((r2 'this' I:android.support.v7.util.MessageThreadUtil$MessageQueue A[IMMUTABLE_TYPE, THIS]), (r3 I:android.support.v7.util.MessageThreadUtil$SyncQueueItem A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_9;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

