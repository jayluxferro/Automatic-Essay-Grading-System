digraph "CFG forandroid.support.v7.util.AsyncListUtil.2.requestTiles(IIIZ)V" {
subgraph cluster_Region_725515543 {
label = "R(2:0|(2:(1:3)(1:5)|4)) | DECL_VAR: int tileStart\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r4\l}"];
subgraph cluster_LoopRegion_1601970794 {
label = "LOOP:0: (2:(1:3)(1:5)|4)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:0:0x0000, B:4:0x0009] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:4:0x0009\l|if (r0 \<= r5) goto L_0x0003\l}"];
subgraph cluster_Region_1748739937 {
label = "R(2:(1:3)(1:5)|4)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2062670321 {
label = "IF [B:2:0x0003] THEN: R(1:3) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|if (r7 == true) goto L_0x0005\l}"];
subgraph cluster_Region_1652046705 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0005|int r1 = (r5 + r4) \- r0\l}"];
}
subgraph cluster_Region_989213932 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0016|r1 = r0\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x0009|LOOP_END\lPHI: r1 \l  PHI: (r1v1 'tileStart' int) = (r1v0 'tileStart' int), (r1v2 'tileStart' int) binds: [B:9:0x0009, B:8:0x0009] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:4:0x0009\l|android.support.p003v7.util.AsyncListUtil.this.mBackgroundProxy.loadTile(r1, r6)\lr0 += android.support.p003v7.util.AsyncListUtil.this.mTileSize\l}"];
}
}
}
Node_6 [shape=record,color=red,label="{6\:\ 0x0018}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0018|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0009|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0009|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.v7.util.AsyncListUtil.2.requestTiles((r3v0 'this' android.support.v7.util.AsyncListUtil$2 A[IMMUTABLE_TYPE, THIS]), (r4v0 'firstTileStart' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'lastTileStart' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'scrollHint' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'backwards' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_3 -> Node_8;
Node_5 -> Node_9;
Node_4 -> Node_1;
Node_7 -> Node_6;
Node_8 -> Node_4;
Node_9 -> Node_4;
}

