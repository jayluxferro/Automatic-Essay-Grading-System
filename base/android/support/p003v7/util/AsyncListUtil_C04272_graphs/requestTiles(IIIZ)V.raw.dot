digraph "CFG forandroid.support.v7.util.AsyncListUtil.2.requestTiles(IIIZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('firstTileStart' int)])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \> (r5 I:?[int, byte, short, char] A[D('lastTileStart' int)])  \-\> B:6:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('backwards' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: ARITH  (r2 I:int) = (r5 I:int A[D('lastTileStart' int)]) + (r4 I:int A[D('firstTileStart' int)]) \l0x0007: ARITH  (r1 I:int) = (r2 I:int) \- (r0 I:int A[D('i' int)]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IGET  (r2 I:android.support.v7.util.AsyncListUtil) = \l  (r3 I:android.support.v7.util.AsyncListUtil$2 A[D('this' android.support.v7.util.AsyncListUtil$2)])\l android.support.v7.util.AsyncListUtil.2.this$0 android.support.v7.util.AsyncListUtil \l0x000b: IGET  (r2 I:android.support.v7.util.ThreadUtil$BackgroundCallback\<T\>) = (r2 I:android.support.v7.util.AsyncListUtil) android.support.v7.util.AsyncListUtil.mBackgroundProxy android.support.v7.util.ThreadUtil$BackgroundCallback \l0x000d: INVOKE  \l  (r2 I:android.support.v7.util.ThreadUtil$BackgroundCallback)\l  (r1 I:int A[D('tileStart' int)])\l  (r6 I:int A[D('scrollHint' int)])\l android.support.v7.util.ThreadUtil.BackgroundCallback.loadTile(int, int):void type: INTERFACE \l0x0010: IGET  (r2 I:android.support.v7.util.AsyncListUtil) = \l  (r3 I:android.support.v7.util.AsyncListUtil$2 A[D('this' android.support.v7.util.AsyncListUtil$2)])\l android.support.v7.util.AsyncListUtil.2.this$0 android.support.v7.util.AsyncListUtil \l0x0012: IGET  (r2 I:int) = (r2 I:android.support.v7.util.AsyncListUtil) android.support.v7.util.AsyncListUtil.mTileSize int \l0x0014: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (r2 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('tileStart' int)]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v7.util.AsyncListUtil.2.requestTiles((r3 'this' I:android.support.v7.util.AsyncListUtil$2 A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('firstTileStart' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('lastTileStart' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('scrollHint' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[D('backwards' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0009\-0x0016: r1 'tileStart' int\l  0x0001\-0x0018: r0 'i' int\l  0x0000\-0x0018: r3 'this' android.support.v7.util.AsyncListUtil$2\l  ?\-0x0018: r4 'firstTileStart' int\l  ?\-0x0018: r5 'lastTileStart' int\l  ?\-0x0018: r6 'scrollHint' int\l  ?\-0x0018: r7 'backwards' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_5 -> Node_4;
}

