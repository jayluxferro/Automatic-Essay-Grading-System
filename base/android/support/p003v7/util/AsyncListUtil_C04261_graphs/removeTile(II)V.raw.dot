digraph "CFG forandroid.support.v7.util.AsyncListUtil.1.removeTile(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:boolean) = \l  (r4 I:android.support.v7.util.AsyncListUtil$1 A[D('this' android.support.v7.util.AsyncListUtil$1)])\l  (r5 I:int A[D('generation' int)])\l android.support.v7.util.AsyncListUtil.1.isRequestedGeneration(int):boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IGET  (r1 I:android.support.v7.util.AsyncListUtil) = \l  (r4 I:android.support.v7.util.AsyncListUtil$1 A[D('this' android.support.v7.util.AsyncListUtil$1)])\l android.support.v7.util.AsyncListUtil.1.this$0 android.support.v7.util.AsyncListUtil \l0x0009: IGET  (r1 I:android.support.v7.util.TileList\<T\>) = (r1 I:android.support.v7.util.AsyncListUtil) android.support.v7.util.AsyncListUtil.mTileList android.support.v7.util.TileList \l0x000b: INVOKE  (r0 I:android.support.v7.util.TileList$Tile) = \l  (r1 I:android.support.v7.util.TileList)\l  (r6 I:int A[D('position' int)])\l android.support.v7.util.TileList.removeAtPos(int):android.support.v7.util.TileList$Tile type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tile' android.support.v7.util.TileList$Tile\<T\>)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x002a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: CONST_STR  (r1 I:java.lang.String) =  \"AsyncListUtil\" \l0x0013: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0015: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0018: CONST_STR  (r3 I:java.lang.String) =  \"tile not found @\" \l0x001a: INVOKE  (r2 I:java.lang.StringBuilder) = (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001e: INVOKE  (r2 I:java.lang.StringBuilder) = \l  (r2 I:java.lang.StringBuilder)\l  (r6 I:int A[D('position' int)])\l java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0022: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0026: INVOKE  (r1 I:java.lang.String), (r2 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: IGET  (r1 I:android.support.v7.util.AsyncListUtil) = \l  (r4 I:android.support.v7.util.AsyncListUtil$1 A[D('this' android.support.v7.util.AsyncListUtil$1)])\l android.support.v7.util.AsyncListUtil.1.this$0 android.support.v7.util.AsyncListUtil \l0x002c: IGET  (r1 I:android.support.v7.util.ThreadUtil$BackgroundCallback\<T\>) = (r1 I:android.support.v7.util.AsyncListUtil) android.support.v7.util.AsyncListUtil.mBackgroundProxy android.support.v7.util.ThreadUtil$BackgroundCallback \l0x002e: INVOKE  \l  (r1 I:android.support.v7.util.ThreadUtil$BackgroundCallback)\l  (r0 I:android.support.v7.util.TileList$Tile A[D('tile' android.support.v7.util.TileList$Tile\<T\>)])\l android.support.v7.util.ThreadUtil.BackgroundCallback.recycleTile(android.support.v7.util.TileList$Tile):void type: INTERFACE \l}"];
MethodNode[shape=record,label="{public void android.support.v7.util.AsyncListUtil.1.removeTile((r4 'this' I:android.support.v7.util.AsyncListUtil$1 A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('generation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000f\-0x0031: r0 'tile' android.support.v7.util.TileList$Tile\<T\>\l  0x0000\-0x0031: r4 'this' android.support.v7.util.AsyncListUtil$1\l  ?\-0x0031: r5 'generation' int\l  ?\-0x0031: r6 'position' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_2;
Node_6 -> Node_2;
}

