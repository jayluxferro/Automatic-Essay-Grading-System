digraph "CFG forandroid.support.v7.util.AsyncListUtil.1.removeTile(II)V" {
subgraph cluster_Region_470300077 {
label = "R(1:(2:2|(1:4)(1:5))(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_898334423 {
label = "IF [B:1:0x0004] THEN: R(2:2|(1:4)(1:5)) ELSE: R(0)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (isRequestedGeneration(r5) != false) goto L_0x0007\l}"];
subgraph cluster_Region_2088589046 {
label = "R(2:2|(1:4)(1:5))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|android.support.v7.util.TileList$Tile android.support.p003v7.util.TileList.Tile\<T\> r0 = android.support.p003v7.util.AsyncListUtil.this.mTileList.removeAtPos(r6)\l}"];
subgraph cluster_IfRegion_286213591 {
label = "IF [B:3:0x000f] THEN: R(1:4) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000f|if (r0 == null) goto L_0x0011\l}"];
subgraph cluster_Region_1220711380 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|android.util.Log.e(android.support.p003v7.util.AsyncListUtil.TAG, \"tile not found @\" + r6)\l}"];
}
subgraph cluster_Region_1571495560 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002a|android.support.p003v7.util.AsyncListUtil.this.mBackgroundProxy.recycleTile(r0)\l}"];
}
}
}
subgraph cluster_Region_1374643970 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v7.util.AsyncListUtil.1.removeTile((r4v0 'this' android.support.v7.util.AsyncListUtil$1 A[IMMUTABLE_TYPE, THIS]), (r5v0 'generation' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'position' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_8;
Node_0 -> Node_1;
}

