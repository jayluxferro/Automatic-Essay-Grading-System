digraph "CFG forandroid.support.v7.app.AppCompatViewInflater.DeclaredOnClickListener.onClick(Landroid\/view\/View;)V" {
subgraph cluster_Region_772587286 {
label = "R(2:(1:2)|(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_672312960 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4.mResolvedMethod == null) goto L_0x0004\l}"];
subgraph cluster_Region_1550320814 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|resolveMethod(r4.mHostView.getContext(), r4.mMethodName)\l}"];
}
}
subgraph cluster_TryCatchRegion_915347398 {
label = "Try: R(1:4) catches: R(2:9|11), R(2:6|8)";
node [shape=record,color=blue];
subgraph cluster_Region_2100361742 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ IllegalAccessException \-\> 0x0026, InvocationTargetException \-\> 0x001d \}\lSplitter:B:3:0x000f\l|r4.mResolvedMethod.invoke(r4.mResolvedContext, new java.lang.Object[]\{r5\})     \/\/ Catch:\{ IllegalAccessException \-\> 0x0026, InvocationTargetException \-\> 0x001d \}\l}"];
}
subgraph cluster_Region_1080765830 {
label = "R(2:9|11) | ExcHandler: IllegalAccessException (r5v1 'e' java.lang.IllegalAccessException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0026|ExcHandler: IllegalAccessException (r5v1 'e' java.lang.IllegalAccessException A[CUSTOM_DECLARE])\lSplitter:B:3:0x000f\l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|throw new java.lang.IllegalStateException(\"Could not execute non\-public method for android:onClick\", r5)\l}"];
}
subgraph cluster_Region_1547308113 {
label = "R(2:6|8) | ExcHandler: InvocationTargetException (r5v2 'e' java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001d|ExcHandler: InvocationTargetException (r5v2 'e' java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE])\lSplitter:B:3:0x000f\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|throw new java.lang.IllegalStateException(\"Could not execute method for android:onClick\", r5)\l}"];
}
}
}
subgraph cluster_Region_1080765830 {
label = "R(2:9|11) | ExcHandler: IllegalAccessException (r5v1 'e' java.lang.IllegalAccessException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0026|ExcHandler: IllegalAccessException (r5v1 'e' java.lang.IllegalAccessException A[CUSTOM_DECLARE])\lSplitter:B:3:0x000f\l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|throw new java.lang.IllegalStateException(\"Could not execute non\-public method for android:onClick\", r5)\l}"];
}
subgraph cluster_Region_1547308113 {
label = "R(2:6|8) | ExcHandler: InvocationTargetException (r5v2 'e' java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001d|ExcHandler: InvocationTargetException (r5v2 'e' java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE])\lSplitter:B:3:0x000f\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|throw new java.lang.IllegalStateException(\"Could not execute method for android:onClick\", r5)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000f|SYNTHETIC\lSplitter:B:3:0x000f\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001c}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001e}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0027}"];
MethodNode[shape=record,label="{public void android.support.v7.app.AppCompatViewInflater.DeclaredOnClickListener.onClick((r4v0 'this' android.support.v7.app.AppCompatViewInflater$DeclaredOnClickListener A[IMMUTABLE_TYPE, THIS]), (r5v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_9;
Node_4 -> Node_6;
Node_9 -> Node_10;
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_3 -> Node_9;
Node_3 -> Node_6;
Node_7 -> Node_8;
Node_10 -> Node_11;
}

