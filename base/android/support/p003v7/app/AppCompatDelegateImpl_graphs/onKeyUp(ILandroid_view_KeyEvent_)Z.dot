digraph "CFG forandroid.support.v7.app.AppCompatDelegateImpl.onKeyUp(ILandroid\/view\/KeyEvent;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r4 == 4) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r4 == 82) goto L_0x000a\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|onKeyUpPanel(0, r5)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|RETURN\l|return true\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|boolean r4 = r3.mLongPressBackDown\lr3.mLongPressBackDown = false\landroid.support.v7.app.AppCompatDelegateImpl$PanelFeatureState r5 = getPanelState(0, false)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|if (r5 == null) goto L_0x0022\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018}"];
Node_9 [shape=record,label="{9\:\ 0x001a|if (r5.isOpen == false) goto L_0x0022\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|if (r4 != false) goto L_0x0021\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|closePanel(r5, true)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|RETURN\l|return true\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022}"];
Node_14 [shape=record,label="{14\:\ 0x0026|if (onBackPressed() == false) goto L_0x0029\l}"];
Node_15 [shape=record,label="{15\:\ 0x0028|RETURN\l|return true\l}"];
Node_16 [shape=record,label="{16\:\ 0x0029|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{boolean android.support.v7.app.AppCompatDelegateImpl.onKeyUp((r3v0 'this' android.support.v7.app.AppCompatDelegateImpl A[IMMUTABLE_TYPE, THIS]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 android.view.KeyEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_16[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
}

