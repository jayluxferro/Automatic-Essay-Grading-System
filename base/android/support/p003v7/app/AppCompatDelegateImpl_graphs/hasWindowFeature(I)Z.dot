digraph "CFG forandroid.support.v7.app.AppCompatDelegateImpl.hasWindowFeature(I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|switch(sanitizeWindowFeatureId(r3)) \{\l    case 1: goto L_0x0019;\l    case 2: goto L_0x0016;\l    case 5: goto L_0x0013;\l    case 10: goto L_0x0010;\l    case 108: goto L_0x000d;\l    case 109: goto L_0x000a;\l    default: goto L_0x0008;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|r0 = false\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|boolean r0 = r2.mOverlayActionBar\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|boolean r0 = r2.mHasActionBar\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|boolean r0 = r2.mOverlayActionMode\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|boolean r0 = r2.mFeatureIndeterminateProgress\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|boolean r0 = r2.mFeatureProgress\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|boolean r0 = r2.mWindowNoTitle\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v3 boolean), (r0v4 boolean), (r0v5 boolean), (r0v6 boolean), (r0v7 boolean), (r0v8 boolean), (r0v9 boolean) binds: [B:8:0x0019, B:7:0x0016, B:6:0x0013, B:5:0x0010, B:4:0x000d, B:3:0x000a, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != false) goto L_0x0025\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d}"];
Node_11 [shape=record,label="{11\:\ 0x0023|if (r2.mWindow.hasFeature(r3) == false) goto L_?\l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean android.support.v7.app.AppCompatDelegateImpl.hasWindowFeature((r2v0 'this' android.support.v7.app.AppCompatDelegateImpl A[IMMUTABLE_TYPE, THIS]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_1 -> Node_4;
Node_1 -> Node_5;
Node_1 -> Node_6;
Node_1 -> Node_7;
Node_1 -> Node_8;
Node_2 -> Node_9;
Node_3 -> Node_9;
Node_4 -> Node_9;
Node_5 -> Node_9;
Node_6 -> Node_9;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
}

