digraph "CFG forandroid.support.v7.app.AppCompatDelegateImpl.sanitizeWindowFeatureId(I)I" {
subgraph cluster_Region_674414388 {
label = "R(1:(2:2|3)(1:(1:8)(2:6|7)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_99344331 {
label = "IF [B:1:0x0002] THEN: R(2:2|3) ELSE: R(1:(1:8)(2:6|7))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2 == 8) goto L_0x0004\l}"];
subgraph cluster_Region_1082512928 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|android.util.Log.i(\"AppCompatDelegate\", \"You should now use the AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR id when requesting this feature.\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|RETURN\l|return 108\l}"];
}
subgraph cluster_Region_1124164606 {
label = "R(1:(1:8)(2:6|7)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2130161589 {
label = "IF [B:5:0x0010] THEN: R(1:8) ELSE: R(2:6|7) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r2 != 9) goto L_0x001c\l}"];
subgraph cluster_Region_624501287 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001c|RETURN\l|return r2\l}"];
}
subgraph cluster_Region_1264829558 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0012|android.util.Log.i(\"AppCompatDelegate\", \"You should now use the AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR_OVERLAY id when requesting this feature.\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|RETURN\l|return 109\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000e}"];
MethodNode[shape=record,label="{private int android.support.v7.app.AppCompatDelegateImpl.sanitizeWindowFeatureId((r1v0 'this' android.support.v7.app.AppCompatDelegateImpl A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_4 -> Node_5;
}

