digraph "CFG forandroid.support.v7.app.AppCompatDelegateImpl.shouldRecreateOnNightModeChange()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r6.mApplyDayNightCalled == false) goto L_0x0034\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if ((r6.mContext instanceof android.app.Activity) == false) goto L_0x0034\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|android.content.pm.PackageManager r0 = r6.mContext.getPackageManager()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|SYNTHETIC\lSplitter:B:5:0x0012\l}"];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ NameNotFoundException \-\> 0x002b \}\lSplitter:B:5:0x0012\l}"];
Node_7 [shape=record,label="{7\:\ 0x0025}"];
Node_8 [shape=record,label="{8\:\ 0x0027|if ((r0.getActivityInfo(new android.content.ComponentName(r6.mContext, r6.mContext.getClass()), 0).configChanges & 512) != 0) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|ExcHandler: NameNotFoundException (r0v5 'e' android.content.pm.PackageManager$NameNotFoundException A[CUSTOM_DECLARE])\lSplitter:B:5:0x0012\l|android.content.pm.PackageManager$NameNotFoundException r0 = move\-exception\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|android.util.Log.d(\"AppCompatDelegate\", \"Exception while getting ActivityInfo\", r0)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|RETURN\l|return true\l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|RETURN\l|return false\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{private boolean android.support.v7.app.AppCompatDelegateImpl.shouldRecreateOnNightModeChange((r6v0 'this' android.support.v7.app.AppCompatDelegateImpl A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

