digraph "CFG forandroid.support.v7.app.AppCompatDelegateImpl.onKeyShortcut(ILandroid\/view\/KeyEvent;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.support.v7.app.ActionBar r0 = getSupportActionBar()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r0 == null) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r0.onKeyShortcut(r4, r5) == false) goto L_0x000e\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|RETURN\l|return true\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e}"];
Node_6 [shape=record,label="{6\:\ 0x0010|if (r3.mPreparedPanel == null) goto L_0x0027\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012}"];
Node_8 [shape=record,label="{8\:\ 0x001c|if (performPanelShortcut(r3.mPreparedPanel, r5.getKeyCode(), r5, 1) == false) goto L_0x0027\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e}"];
Node_10 [shape=record,label="{10\:\ 0x0020|if (r3.mPreparedPanel == null) goto L_0x0026\l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|r3.mPreparedPanel.isHandled = true\l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|RETURN\l|return true\l}"];
Node_13 [shape=record,label="{13\:\ 0x0027}"];
Node_14 [shape=record,label="{14\:\ 0x002a|if (r3.mPreparedPanel != null) goto L_0x0040\l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState r4 = getPanelState(0, true)\lpreparePanel(r4, r5)\lboolean r5 = performPanelShortcut(r4, r5.getKeyCode(), r5, 1)\lr4.isPrepared = false\l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|if (r5 == false) goto L_0x0040\l}"];
Node_17 [shape=record,label="{17\:\ 0x003f|RETURN\l|return true\l}"];
Node_18 [shape=record,label="{18\:\ 0x0040|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{boolean android.support.v7.app.AppCompatDelegateImpl.onKeyShortcut((r3v0 'this' android.support.v7.app.AppCompatDelegateImpl A[IMMUTABLE_TYPE, THIS]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 android.view.KeyEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
}

