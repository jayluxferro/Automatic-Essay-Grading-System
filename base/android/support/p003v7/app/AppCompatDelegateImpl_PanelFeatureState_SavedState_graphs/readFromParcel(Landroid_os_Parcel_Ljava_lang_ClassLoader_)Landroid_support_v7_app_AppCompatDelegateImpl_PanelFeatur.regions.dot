digraph "CFG forandroid.support.v7.app.AppCompatDelegateImpl.PanelFeatureState.SavedState.readFromParcel(Landroid\/os\/Parcel;Ljava\/lang\/ClassLoader;)Landroid\/support\/v7\/app\/AppCompatDelegateImpl$PanelFeatureState$SavedState;" {
subgraph cluster_Region_20665306 {
label = "R(5:0|(1:2)|3|(1:5)|6)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState$SavedState android.support.p003v7.app.AppCompatDelegateImpl.PanelFeatureState.SavedState r0 = new android.support.p003v7.app.AppCompatDelegateImpl.PanelFeatureState.SavedState()\lr0.featureId = r3.readInt()\lboolean r2 = true\l}"];
subgraph cluster_IfRegion_208713365 {
label = "IF [B:1:0x0010] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0010|if (r3.readInt() != 1) goto L_0x0013\l}"];
subgraph cluster_Region_836431792 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0013|r2 = false\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0014|PHI: r2 \l  PHI: (r2v1 boolean) = (r2v0 boolean), (r2v2 boolean) binds: [B:1:0x0010, B:2:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|r0.isOpen = r2\l}"];
subgraph cluster_IfRegion_1627633723 {
label = "IF [B:4:0x0018] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0018|if (r0.isOpen == true) goto L_0x001a\l}"];
subgraph cluster_Region_236434292 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001a|r0.menuState = r3.readBundle(r4)\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0020|RETURN\l|return r0\l}"];
}
MethodNode[shape=record,label="{static android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState$SavedState android.support.v7.app.AppCompatDelegateImpl.PanelFeatureState.SavedState.readFromParcel((r3v0 android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.ClassLoader A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
}

