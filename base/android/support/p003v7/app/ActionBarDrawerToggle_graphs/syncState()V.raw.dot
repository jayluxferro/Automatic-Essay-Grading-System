digraph "CFG forandroid.support.v7.app.ActionBarDrawerToggle.syncState()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v4.widget.DrawerLayout) = (r3 I:android.support.v7.app.ActionBarDrawerToggle) android.support.v7.app.ActionBarDrawerToggle.mDrawerLayout android.support.v4.widget.DrawerLayout \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (8388611(0x800003, float:1.1754948E\-38) ?[int, float, short, byte, char])\l \l0x0005: INVOKE  (r0 I:boolean) = (r0 I:android.support.v4.widget.DrawerLayout), (r1 I:int) android.support.v4.widget.DrawerLayout.isDrawerOpen(int):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x000d: INVOKE  \l  (r3 I:android.support.v7.app.ActionBarDrawerToggle)\l  (r0 I:float)\l android.support.v7.app.ActionBarDrawerToggle.setPosition(float):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: INVOKE  \l  (r3 I:android.support.v7.app.ActionBarDrawerToggle)\l  (r0 I:float)\l android.support.v7.app.ActionBarDrawerToggle.setPosition(float):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: IGET  (r0 I:boolean) = (r3 I:android.support.v7.app.ActionBarDrawerToggle) android.support.v7.app.ActionBarDrawerToggle.mDrawerIndicatorEnabled boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002b \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IGET  (r0 I:android.support.v7.graphics.drawable.DrawerArrowDrawable) = (r3 I:android.support.v7.app.ActionBarDrawerToggle) android.support.v7.app.ActionBarDrawerToggle.mSlider android.support.v7.graphics.drawable.DrawerArrowDrawable \l0x001b: IGET  (r2 I:android.support.v4.widget.DrawerLayout) = (r3 I:android.support.v7.app.ActionBarDrawerToggle) android.support.v7.app.ActionBarDrawerToggle.mDrawerLayout android.support.v4.widget.DrawerLayout \l0x001d: INVOKE  (r1 I:boolean) = (r2 I:android.support.v4.widget.DrawerLayout), (r1 I:int) android.support.v4.widget.DrawerLayout.isDrawerOpen(int):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0026 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: IGET  (r1 I:int) = (r3 I:android.support.v7.app.ActionBarDrawerToggle) android.support.v7.app.ActionBarDrawerToggle.mCloseDrawerContentDescRes int \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: IGET  (r1 I:int) = (r3 I:android.support.v7.app.ActionBarDrawerToggle) android.support.v7.app.ActionBarDrawerToggle.mOpenDrawerContentDescRes int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: INVOKE  \l  (r3 I:android.support.v7.app.ActionBarDrawerToggle)\l  (r0 I:android.graphics.drawable.Drawable)\l  (r1 I:int)\l android.support.v7.app.ActionBarDrawerToggle.setActionBarUpIndicator(android.graphics.drawable.Drawable, int):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.app.ActionBarDrawerToggle.syncState((r3 'this' I:android.support.v7.app.ActionBarDrawerToggle A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

