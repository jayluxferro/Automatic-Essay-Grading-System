digraph "CFG forandroid.support.v7.app.ResourcesFlusher.flushLollipops(Landroid\/content\/res\/Resources;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:boolean) =  android.support.v7.app.ResourcesFlusher.sDrawableCacheFieldFetched boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: CONST_CLASS  (r1 I:java.lang.Class\<android.content.res.Resources\>) =  android.content.res.Resources.class \l0x0007: CONST_STR  (r2 I:java.lang.String) =  \"mDrawableCache\" \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|SYNTHETIC\lSplitter:B:3:0x0009\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0009\l|0x0009: INVOKE  (r1 I:java.lang.reflect.Field) = (r1 I:java.lang.Class), (r2 I:java.lang.String) java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field type: VIRTUAL A[Catch:\{ NoSuchFieldException \-\> 0x0015 \}, TRY_ENTER]\l0x000d: SPUT  (r1 I:java.lang.reflect.Field) android.support.v7.app.ResourcesFlusher.sDrawableCacheField java.lang.reflect.Field A[Catch:\{ NoSuchFieldException \-\> 0x0015 \}]\l0x000f: SGET  (r1 I:java.lang.reflect.Field) =  android.support.v7.app.ResourcesFlusher.sDrawableCacheField java.lang.reflect.Field A[Catch:\{ NoSuchFieldException \-\> 0x0015 \}]\l0x0011: INVOKE  (r1 I:java.lang.reflect.Field), (r0 I:boolean) java.lang.reflect.Field.setAccessible(boolean):void type: VIRTUAL A[Catch:\{ NoSuchFieldException \-\> 0x0015 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|ExcHandler: NoSuchFieldException null\lSplitter:B:3:0x0009\l|0x0015: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: CONST_STR  (r2 I:java.lang.String) =  \"ResourcesFlusher\" \l0x0018: CONST_STR  (r3 I:java.lang.String) =  \"Could not retrieve Resources#mDrawableCache field\" \l0x001a: INVOKE  \l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r1 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: SPUT  (r0 I:boolean) android.support.v7.app.ResourcesFlusher.sDrawableCacheFieldFetched boolean \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: SGET  (r0 I:java.lang.reflect.Field) =  android.support.v7.app.ResourcesFlusher.sDrawableCacheField java.lang.reflect.Field \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x003b \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|SYNTHETIC\lSplitter:B:12:0x0024\l}"];
Node_13 [shape=record,label="{13\:\ ?|Splitter:B:12:0x0024\l|0x0024: SGET  (r1 I:java.lang.reflect.Field) =  android.support.v7.app.ResourcesFlusher.sDrawableCacheField java.lang.reflect.Field A[Catch:\{ IllegalAccessException \-\> 0x002d \}, TRY_ENTER]\l0x0026: INVOKE  (r4 I:java.lang.Object) = (r1 I:java.lang.reflect.Field), (r4 I:java.lang.Object) java.lang.reflect.Field.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x002d \}]\l0x002a: CHECK_CAST  (r4 I:java.util.Map) = (java.util.Map) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ IllegalAccessException \-\> 0x002d \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|ExcHandler: IllegalAccessException null\lSplitter:B:12:0x0024\l|0x002d: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x002e|0x002e: CONST_STR  (r1 I:java.lang.String) =  \"ResourcesFlusher\" \l0x0030: CONST_STR  (r2 I:java.lang.String) =  \"Could not retrieve value from Resources#mDrawableCache\" \l0x0032: INVOKE  \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r4 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l0x0035: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|0x0036: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x003b \l}"];
Node_18 [shape=record,label="{18\:\ 0x0038|0x0038: INVOKE  (r4 I:java.util.Map) java.util.Map.clear():void type: INTERFACE \l}"];
Node_19 [shape=record,label="{19\:\ 0x003b|0x003b: RETURN   \l}"];
MethodNode[shape=record,label="{private static void android.support.v7.app.ResourcesFlusher.flushLollipops((r4 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.RequiresApi, \{value=21\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_6;
Node_4 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_19;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_15;
Node_13 -> Node_15;
Node_13 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
}

