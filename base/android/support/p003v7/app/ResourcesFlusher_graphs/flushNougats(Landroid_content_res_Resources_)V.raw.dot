digraph "CFG forandroid.support.v7.app.ResourcesFlusher.flushNougats(Landroid\/content\/res\/Resources;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:boolean) =  android.support.v7.app.ResourcesFlusher.sResourcesImplFieldFetched boolean \l0x0002: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: CONST_CLASS  (r0 I:java.lang.Class\<android.content.res.Resources\>) =  android.content.res.Resources.class \l0x0007: CONST_STR  (r2 I:java.lang.String) =  \"mResourcesImpl\" \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|SYNTHETIC\lSplitter:B:3:0x0009\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0009\l|0x0009: INVOKE  (r0 I:java.lang.reflect.Field) = (r0 I:java.lang.Class), (r2 I:java.lang.String) java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field type: VIRTUAL A[Catch:\{ NoSuchFieldException \-\> 0x0015 \}, TRY_ENTER]\l0x000d: SPUT  (r0 I:java.lang.reflect.Field) android.support.v7.app.ResourcesFlusher.sResourcesImplField java.lang.reflect.Field A[Catch:\{ NoSuchFieldException \-\> 0x0015 \}]\l0x000f: SGET  (r0 I:java.lang.reflect.Field) =  android.support.v7.app.ResourcesFlusher.sResourcesImplField java.lang.reflect.Field A[Catch:\{ NoSuchFieldException \-\> 0x0015 \}]\l0x0011: INVOKE  (r0 I:java.lang.reflect.Field), (r1 I:boolean) java.lang.reflect.Field.setAccessible(boolean):void type: VIRTUAL A[Catch:\{ NoSuchFieldException \-\> 0x0015 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|ExcHandler: NoSuchFieldException null\lSplitter:B:3:0x0009\l|0x0015: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: CONST_STR  (r2 I:java.lang.String) =  \"ResourcesFlusher\" \l0x0018: CONST_STR  (r3 I:java.lang.String) =  \"Could not retrieve Resources#mResourcesImpl field\" \l0x001a: INVOKE  \l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: SPUT  (r1 I:boolean) android.support.v7.app.ResourcesFlusher.sResourcesImplFieldFetched boolean \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: SGET  (r0 I:java.lang.reflect.Field) =  android.support.v7.app.ResourcesFlusher.sResourcesImplField java.lang.reflect.Field \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0024 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: RETURN   \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|SYNTHETIC\lSplitter:B:13:0x0025\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x0025\l|0x0025: SGET  (r2 I:java.lang.reflect.Field) =  android.support.v7.app.ResourcesFlusher.sResourcesImplField java.lang.reflect.Field A[Catch:\{ IllegalAccessException \-\> 0x002c \}, TRY_ENTER]\l0x0027: INVOKE  (r5 I:java.lang.Object) = (r2 I:java.lang.reflect.Field), (r5 I:java.lang.Object) java.lang.reflect.Field.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x002c \}]\l0x002a: NOP   A[TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x002c|ExcHandler: IllegalAccessException null\lSplitter:B:13:0x0025\l|0x002c: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x002d|0x002d: CONST_STR  (r2 I:java.lang.String) =  \"ResourcesFlusher\" \l0x002f: CONST_STR  (r3 I:java.lang.String) =  \"Could not retrieve value from Resources#mResourcesImpl\" \l0x0031: INVOKE  \l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r5 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l0x0034: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0035|0x0035: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0038 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0037|0x0037: RETURN   \l}"];
Node_20 [shape=record,label="{20\:\ 0x0038|0x0038: SGET  (r2 I:boolean) =  android.support.v7.app.ResourcesFlusher.sDrawableCacheFieldFetched boolean \l}"];
Node_21 [shape=record,label="{21\:\ 0x003a|0x003a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0058 \l}"];
Node_22 [shape=record,label="{22\:\ 0x003c|SYNTHETIC\lSplitter:B:22:0x003c\l}"];
Node_23 [shape=record,label="{23\:\ ?|Splitter:B:22:0x003c\l|0x003c: INVOKE  (r2 I:java.lang.Class) = (r5 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL A[Catch:\{ NoSuchFieldException \-\> 0x004e \}, TRY_ENTER]\l0x0040: CONST_STR  (r3 I:java.lang.String) =  \"mDrawableCache\" A[Catch:\{ NoSuchFieldException \-\> 0x004e \}]\l0x0042: INVOKE  (r2 I:java.lang.reflect.Field) = (r2 I:java.lang.Class), (r3 I:java.lang.String) java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field type: VIRTUAL A[Catch:\{ NoSuchFieldException \-\> 0x004e \}]\l0x0046: SPUT  (r2 I:java.lang.reflect.Field) android.support.v7.app.ResourcesFlusher.sDrawableCacheField java.lang.reflect.Field A[Catch:\{ NoSuchFieldException \-\> 0x004e \}]\l0x0048: SGET  (r2 I:java.lang.reflect.Field) =  android.support.v7.app.ResourcesFlusher.sDrawableCacheField java.lang.reflect.Field A[Catch:\{ NoSuchFieldException \-\> 0x004e \}]\l0x004a: INVOKE  (r2 I:java.lang.reflect.Field), (r1 I:boolean) java.lang.reflect.Field.setAccessible(boolean):void type: VIRTUAL A[Catch:\{ NoSuchFieldException \-\> 0x004e \}, TRY_LEAVE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x004e|ExcHandler: NoSuchFieldException null\lSplitter:B:22:0x003c\l|0x004e: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_26 [shape=record,label="{26\:\ 0x004f|0x004f: CONST_STR  (r3 I:java.lang.String) =  \"ResourcesFlusher\" \l0x0051: CONST_STR  (r4 I:java.lang.String) =  \"Could not retrieve ResourcesImpl#mDrawableCache field\" \l0x0053: INVOKE  \l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r2 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_27 [shape=record,label="{27\:\ 0x0056|0x0056: SPUT  (r1 I:boolean) android.support.v7.app.ResourcesFlusher.sDrawableCacheFieldFetched boolean \l}"];
Node_28 [shape=record,label="{28\:\ 0x0058|0x0058: SGET  (r1 I:java.lang.reflect.Field) =  android.support.v7.app.ResourcesFlusher.sDrawableCacheField java.lang.reflect.Field \l}"];
Node_29 [shape=record,label="{29\:\ 0x005a|0x005a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x006b \l}"];
Node_30 [shape=record,label="{30\:\ 0x005c|SYNTHETIC\lSplitter:B:30:0x005c\l}"];
Node_31 [shape=record,label="{31\:\ ?|Splitter:B:30:0x005c\l|0x005c: SGET  (r1 I:java.lang.reflect.Field) =  android.support.v7.app.ResourcesFlusher.sDrawableCacheField java.lang.reflect.Field A[Catch:\{ IllegalAccessException \-\> 0x0063 \}, TRY_ENTER]\l0x005e: INVOKE  (r5 I:java.lang.Object) = (r1 I:java.lang.reflect.Field), (r5 I:java.lang.Object) java.lang.reflect.Field.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x0063 \}]\l0x0061: NOP   A[TRY_LEAVE]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0063|ExcHandler: IllegalAccessException null\lSplitter:B:30:0x005c\l|0x0063: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_34 [shape=record,label="{34\:\ 0x0064|0x0064: CONST_STR  (r1 I:java.lang.String) =  \"ResourcesFlusher\" \l0x0066: CONST_STR  (r2 I:java.lang.String) =  \"Could not retrieve value from ResourcesImpl#mDrawableCache\" \l0x0068: INVOKE  \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r5 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_35 [shape=record,label="{35\:\ 0x006b|0x006b: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x006c|0x006c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0071 \l}"];
Node_37 [shape=record,label="{37\:\ 0x006e|0x006e: INVOKE  (r5 I:java.lang.Object) android.support.v7.app.ResourcesFlusher.flushThemedResourcesCache(java.lang.Object):void type: STATIC \l}"];
Node_38 [shape=record,label="{38\:\ 0x0071|0x0071: RETURN   \l}"];
MethodNode[shape=record,label="{private static void android.support.v7.app.ResourcesFlusher.flushNougats((r5 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.RequiresApi, \{value=24\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_6;
Node_4 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_14 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_28;
Node_22 -> Node_23;
Node_22 -> Node_25;
Node_23 -> Node_25;
Node_23 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_35;
Node_30 -> Node_31;
Node_30 -> Node_33;
Node_31 -> Node_36;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
}

