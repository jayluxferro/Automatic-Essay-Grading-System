digraph "CFG forandroid.support.v7.app.AppCompatDelegateImpl.1.uncaughtException(Ljava\/lang\/Thread;Ljava\/lang\/Throwable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r3 I:android.support.v7.app.AppCompatDelegateImpl$1)\l  (r5 I:java.lang.Throwable)\l android.support.v7.app.AppCompatDelegateImpl.1.shouldWrapException(java.lang.Throwable):boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0034 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: NEW_INSTANCE  (r0 I:android.content.res.Resources$NotFoundException) =  android.content.res.Resources$NotFoundException \l0x0008: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000a: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000d: INVOKE  (r2 I:java.lang.String) = (r5 I:java.lang.Throwable) java.lang.Throwable.getMessage():java.lang.String type: VIRTUAL \l0x0011: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0014: CONST_STR  (r2 I:java.lang.String) =  \". If the resource you are trying to use is a vector resource, you may be referencing it in an unsupported way. See AppCompatDelegate.setCompatVectorFromResourcesEnabled() for more info.\" \l0x0016: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0019: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x001d: INVOKE  \l  (r0 I:android.content.res.Resources$NotFoundException)\l  (r1 I:java.lang.String)\l android.content.res.Resources.NotFoundException.\<init\>(java.lang.String):void type: DIRECT \l0x0020: INVOKE  (r1 I:java.lang.Throwable) = (r5 I:java.lang.Throwable) java.lang.Throwable.getCause():java.lang.Throwable type: VIRTUAL \l0x0024: INVOKE  (r0 I:java.lang.Throwable), (r1 I:java.lang.Throwable) java.lang.Throwable.initCause(java.lang.Throwable):java.lang.Throwable type: VIRTUAL \l0x0027: INVOKE  (r5 I:java.lang.StackTraceElement[]) = (r5 I:java.lang.Throwable) java.lang.Throwable.getStackTrace():java.lang.StackTraceElement[] type: VIRTUAL \l0x002b: INVOKE  \l  (r0 I:java.lang.Throwable)\l  (r5 I:java.lang.StackTraceElement[])\l java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[]):void type: VIRTUAL \l0x002e: IGET  (r5 I:java.lang.Thread$UncaughtExceptionHandler) = (r3 I:android.support.v7.app.AppCompatDelegateImpl$1) android.support.v7.app.AppCompatDelegateImpl.1.val$defHandler java.lang.Thread$UncaughtExceptionHandler \l0x0030: INVOKE  \l  (r5 I:java.lang.Thread$UncaughtExceptionHandler)\l  (r4 I:java.lang.Thread)\l  (r0 I:java.lang.Throwable)\l java.lang.Thread.UncaughtExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable):void type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0034|0x0034: IGET  (r0 I:java.lang.Thread$UncaughtExceptionHandler) = (r3 I:android.support.v7.app.AppCompatDelegateImpl$1) android.support.v7.app.AppCompatDelegateImpl.1.val$defHandler java.lang.Thread$UncaughtExceptionHandler \l0x0036: INVOKE  \l  (r0 I:java.lang.Thread$UncaughtExceptionHandler)\l  (r4 I:java.lang.Thread)\l  (r5 I:java.lang.Throwable)\l java.lang.Thread.UncaughtExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable):void type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0039|0x0039: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.app.AppCompatDelegateImpl.1.uncaughtException((r3 'this' I:android.support.v7.app.AppCompatDelegateImpl$1 A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.Thread A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Throwable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

