digraph "CFG forandroid.support.v7.app.TwilightManager.isNight()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v7.app.TwilightManager$TwilightState) = (r2 I:android.support.v7.app.TwilightManager) android.support.v7.app.TwilightManager.mTwilightState android.support.v7.app.TwilightManager$TwilightState \l0x0002: INVOKE  (r1 I:boolean) = (r2 I:android.support.v7.app.TwilightManager) android.support.v7.app.TwilightManager.isStateValid():boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:boolean) = (r0 I:android.support.v7.app.TwilightManager$TwilightState) android.support.v7.app.TwilightManager.TwilightState.isNight boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN  (r0 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: INVOKE  (r1 I:android.location.Location) = (r2 I:android.support.v7.app.TwilightManager) android.support.v7.app.TwilightManager.getLastKnownLocation():android.location.Location type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0017 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: INVOKE  \l  (r2 I:android.support.v7.app.TwilightManager)\l  (r1 I:android.location.Location)\l android.support.v7.app.TwilightManager.updateState(android.location.Location):void type: DIRECT \l0x0014: IGET  (r0 I:boolean) = (r0 I:android.support.v7.app.TwilightManager$TwilightState) android.support.v7.app.TwilightManager.TwilightState.isNight boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: RETURN  (r0 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: CONST_STR  (r0 I:java.lang.String) =  \"TwilightManager\" \l0x0019: CONST_STR  (r1 I:java.lang.String) =  \"Could not get last known location. This is probably because the app does not have any location permissions. Falling back to hardcoded sunrise\/sunset values.\" \l0x001b: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.i(java.lang.String, java.lang.String):int type: STATIC \l0x001e: INVOKE  (r0 I:java.util.Calendar) =  java.util.Calendar.getInstance():java.util.Calendar type: STATIC \l0x0022: CONST  (r1 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l0x0024: INVOKE  (r0 I:int) = (r0 I:java.util.Calendar), (r1 I:int) java.util.Calendar.get(int):int type: VIRTUAL \l0x0028: CONST  (r1 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:14:0x0032 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: CONST  (r1 I:?[int, float, short, byte, char]) = (22 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:13:0x0030 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|0x0030: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|0x0033: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean android.support.v7.app.TwilightManager.isNight((r2 'this' I:android.support.v7.app.TwilightManager A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
}

