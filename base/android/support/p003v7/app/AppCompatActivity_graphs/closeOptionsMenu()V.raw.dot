digraph "CFG forandroid.support.v7.app.AppCompatActivity.closeOptionsMenu()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.support.v7.app.ActionBar) = (r3 I:android.support.v7.app.AppCompatActivity) android.support.v7.app.AppCompatActivity.getSupportActionBar():android.support.v7.app.ActionBar type: VIRTUAL \l0x0004: INVOKE  (r1 I:android.view.Window) = (r3 I:android.support.v7.app.AppCompatActivity) android.support.v7.app.AppCompatActivity.getWindow():android.view.Window type: VIRTUAL \l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: INVOKE  (r1 I:boolean) = (r1 I:android.view.Window), (r2 I:int) android.view.Window.hasFeature(int):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001a \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: INVOKE  (r0 I:boolean) = (r0 I:android.support.v7.app.ActionBar) android.support.v7.app.ActionBar.closeOptionsMenu():boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: INVOKE  (r3 I:android.support.v4.app.FragmentActivity) android.support.v4.app.FragmentActivity.closeOptionsMenu():void type: SUPER \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.app.AppCompatActivity.closeOptionsMenu((r3 'this' I:android.support.v7.app.AppCompatActivity A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
}

