digraph "CFG forandroid.support.v7.app.AppCompatViewInflater.createViewByPrefix(Landroid\/content\/Context;Ljava\/lang\/String;Ljava\/lang\/String;)Landroid\/view\/View;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:java.util.Map\<java.lang.String, java.lang.reflect.Constructor\<? extends android.view.View\>\>) =  android.support.v7.app.AppCompatViewInflater.sConstructorMap java.util.Map \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r3 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0006: CHECK_CAST  (r0 I:java.lang.reflect.Constructor) = (java.lang.reflect.Constructor) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0036 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|SYNTHETIC\lSplitter:B:2:0x000a\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x000a\l|0x000a: INVOKE  (r2 I:java.lang.ClassLoader) = (r2 I:android.content.Context) android.content.Context.getClassLoader():java.lang.ClassLoader type: VIRTUAL A[Catch:\{ Exception \-\> 0x0043 \}, TRY_ENTER]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0020 A[Catch:\{ Exception \-\> 0x0043 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Exception \-\> 0x0043 \}]\l0x0012: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Exception \-\> 0x0043 \}]\l0x0015: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x0043 \}]\l0x0018: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x0043 \}]\l0x001b: INVOKE  (r4 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x0043 \}]\l0x001f: GOTO  \-\> 0x0021 A[Catch:\{ Exception \-\> 0x0043 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x0043 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: INVOKE  (r2 I:java.lang.Class) = (r2 I:java.lang.ClassLoader), (r4 I:java.lang.String) java.lang.ClassLoader.loadClass(java.lang.String):java.lang.Class type: VIRTUAL A[Catch:\{ Exception \-\> 0x0043 \}]\l0x0025: CONST_CLASS  (r4 I:java.lang.Class\<android.view.View\>) =  android.view.View.class A[Catch:\{ Exception \-\> 0x0043 \}]\l0x0027: INVOKE  (r2 I:java.lang.Class) = (r2 I:java.lang.Class), (r4 I:java.lang.Class) java.lang.Class.asSubclass(java.lang.Class):java.lang.Class type: VIRTUAL A[Catch:\{ Exception \-\> 0x0043 \}]\l0x002b: SGET  (r4 I:java.lang.Class\<?\>[]) =  android.support.v7.app.AppCompatViewInflater.sConstructorSignature java.lang.Class[] A[Catch:\{ Exception \-\> 0x0043 \}]\l0x002d: INVOKE  (r0 I:java.lang.reflect.Constructor) = (r2 I:java.lang.Class), (r4 I:java.lang.Class[]) java.lang.Class.getConstructor(java.lang.Class[]):java.lang.reflect.Constructor type: VIRTUAL A[Catch:\{ Exception \-\> 0x0043 \}]\l0x0031: SGET  (r2 I:java.util.Map\<java.lang.String, java.lang.reflect.Constructor\<? extends android.view.View\>\>) =  android.support.v7.app.AppCompatViewInflater.sConstructorMap java.util.Map A[Catch:\{ Exception \-\> 0x0043 \}]\l0x0033: INVOKE  \l  (r2 I:java.util.Map)\l  (r3 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ Exception \-\> 0x0043 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0036|0x0036: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0043 \}]\l0x0037: INVOKE  (r0 I:java.lang.reflect.Constructor), (r2 I:boolean) java.lang.reflect.Constructor.setAccessible(boolean):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x0043 \}]\l0x003a: IGET  (r2 I:java.lang.Object[]) = (r1 I:android.support.v7.app.AppCompatViewInflater) android.support.v7.app.AppCompatViewInflater.mConstructorArgs java.lang.Object[] A[Catch:\{ Exception \-\> 0x0043 \}]\l0x003c: INVOKE  (r2 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Constructor)\l  (r2 I:java.lang.Object[])\l java.lang.reflect.Constructor.newInstance(java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ Exception \-\> 0x0043 \}]\l0x0040: CHECK_CAST  (r2 I:android.view.View) = (android.view.View) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x0043 \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0042|0x0042: RETURN  (r2 I:android.view.View) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0043|0x0043: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lExcHandler: Exception null\lSplitter:B:2:0x000a\l}"];
Node_12 [shape=record,label="{12\:\ 0x0044|0x0044: RETURN  (r2 I:android.view.View) \l}"];
MethodNode[shape=record,label="{private android.view.View android.support.v7.app.AppCompatViewInflater.createViewByPrefix((r1 'this' I:android.support.v7.app.AppCompatViewInflater A[IMMUTABLE_TYPE, THIS]), (r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.ClassNotFoundException, android.view.InflateException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_12;
Node_11 -> Node_10;
}

