digraph "CFG forandroid.support.v7.app.TwilightCalculator.calculateTwilight(JDD)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0002: CONST  (r2 I:?[long, double]) = \l  (946728000000(0xdc6d62da00, double:4.67745780756E\-312) ?[long, double])\l \l0x0007: ARITH  (r4 I:long) = (r17 I:long) \- (r2 I:long) \l0x0009: CAST  (r4 I:float) = (float) (r4 I:long) \l0x000a: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (1285868416(0x4ca4cb80, float:8.64E7) ?[int, float, short, byte, char])\l \l0x000d: ARITH  (r4 I:float) = (r4 I:float) \/ (r5 I:float) \l0x000e: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (1015868197(0x3c8ceb25, float:0.01720197) ?[int, float, short, byte, char])\l \l0x0011: ARITH  (r5 I:float) = (r5 I:float) * (r4 I:float) \l0x0013: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (1086828178(0x40c7ae92, float:6.24006) ?[int, float, short, byte, char])\l \l0x0016: ARITH  (r5 I:float) = (r5 I:float) + (r6 I:float) \l0x0017: CAST  (r6 I:double) = (double) (r5 I:float) \l0x0018: INVOKE  (r8 I:double) = (r6 I:double) java.lang.Math.sin(double):double type: STATIC \l0x001c: CONST  (r10 I:?[long, double]) = \l  (4584977093208571904(0x3fa11c5fc0000000, double:0.03341960161924362) ?[long, double])\l \l0x0021: ARITH  (r8 I:double) = (r8 I:double) * (r10 I:double) \l0x0023: ARITH  (r8 I:double) = (r8 I:double) + (r6 I:double) \l0x0024: CONST  (r10 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x0026: ARITH  (r10 I:float) = (r10 I:float) * (r5 I:float) \l0x0028: CAST  (r10 I:double) = (double) (r10 I:float) \l0x0029: INVOKE  (r10 I:double) = (r10 I:double) java.lang.Math.sin(double):double type: STATIC \l0x002d: CONST  (r12 I:?[long, double]) = \l  (4555074754578481152(0x3f36e05b00000000, double:3.4906598739326E\-4) ?[long, double])\l \l0x0032: ARITH  (r10 I:double) = (r10 I:double) * (r12 I:double) \l0x0034: ARITH  (r8 I:double) = (r8 I:double) + (r10 I:double) \l0x0035: CONST  (r10 I:?[int, float, short, byte, char]) = \l  (1077936128(0x40400000, float:3.0) ?[int, float, short, byte, char])\l \l0x0037: ARITH  (r5 I:float) = (r5 I:float) * (r10 I:float) \l0x0039: CAST  (r10 I:double) = (double) (r5 I:float) \l0x003a: INVOKE  (r10 I:double) = (r10 I:double) java.lang.Math.sin(double):double type: STATIC \l0x003e: CONST  (r12 I:?[long, double]) = \l  (4527795603731644416(0x3ed5f61cc0000000, double:5.236000106378924E\-6) ?[long, double])\l \l0x0043: ARITH  (r10 I:double) = (r10 I:double) * (r12 I:double) \l0x0045: ARITH  (r8 I:double) = (r8 I:double) + (r10 I:double) \l0x0046: CONST  (r10 I:?[long, double]) = \l  (4610769955021710130(0x3ffcbed85e1ce332, double:1.796593063) ?[long, double])\l \l0x004b: ARITH  (r8 I:double) = (r8 I:double) + (r10 I:double) \l0x004c: CONST  (r10 I:?[long, double]) = \l  (4614256656552045848(0x400921fb54442d18, double:3.141592653589793) ?[long, double])\l \l0x0051: ARITH  (r8 I:double) = (r8 I:double) + (r10 I:double) \l0x0052: MOVE  (r10 I:?[long, double]) = (r21 I:?[long, double]) \l0x0054: NEG  (r10 I:double) = (r10 I:double) \l0x0055: CONST  (r12 I:?[long, double]) = \l  (4645040803167600640(0x4076800000000000, double:360.0) ?[long, double])\l \l0x005a: ARITH  (r10 I:double) = (r10 I:double) \/ (r12 I:double) \l0x005b: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (980151802(0x3a6bedfa, float:9.0E\-4) ?[int, float, short, byte, char])\l \l0x005e: ARITH  (r4 I:float) = (r4 I:float) \- (r5 I:float) \l0x005f: CAST  (r12 I:double) = (double) (r4 I:float) \l0x0060: ARITH  (r12 I:double) = (r12 I:double) \- (r10 I:double) \l0x0061: INVOKE  (r12 I:long) = (r12 I:double) java.lang.Math.round(double):long type: STATIC \l0x0065: CAST  (r4 I:float) = (float) (r12 I:long) \l0x0066: ARITH  (r4 I:float) = (r4 I:float) + (r5 I:float) \l0x0067: CAST  (r4 I:double) = (double) (r4 I:float) \l0x0068: ARITH  (r4 I:double) = (r4 I:double) + (r10 I:double) \l0x0069: INVOKE  (r6 I:double) = (r6 I:double) java.lang.Math.sin(double):double type: STATIC \l0x006d: CONST  (r10 I:?[long, double]) = \l  (4572760506128099233(0x3f75b573eab367a1, double:0.0053) ?[long, double])\l \l0x0072: ARITH  (r6 I:double) = (r6 I:double) * (r10 I:double) \l0x0074: ARITH  (r4 I:double) = (r4 I:double) + (r6 I:double) \l0x0075: CONST  (r6 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x0077: ARITH  (r6 I:double) = (r6 I:double) * (r8 I:double) \l0x0079: INVOKE  (r6 I:double) = (r6 I:double) java.lang.Math.sin(double):double type: STATIC \l0x007d: CONST  (r10 I:?[long, double]) = \l  (\-4648766856319305620(0xbf7c432ca57a786c, double:\-0.0069) ?[long, double])\l \l0x0082: ARITH  (r6 I:double) = (r6 I:double) * (r10 I:double) \l0x0084: ARITH  (r4 I:double) = (r4 I:double) + (r6 I:double) \l0x0085: INVOKE  (r6 I:double) = (r8 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0089: CONST  (r8 I:?[long, double]) = \l  (4601044547609296896(0x3fda31a380000000, double:0.4092797040939331) ?[long, double])\l \l0x008e: INVOKE  (r8 I:double) = (r8 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0092: ARITH  (r6 I:double) = (r6 I:double) * (r8 I:double) \l0x0094: INVOKE  (r6 I:double) = (r6 I:double) java.lang.Math.asin(double):double type: STATIC \l0x0098: CONST  (r8 I:?[long, double]) = \l  (4580687790437564416(0x3f91df46a0000000, double:0.01745329238474369) ?[long, double])\l \l0x009d: ARITH  (r8 I:double) = (r8 I:double) * (r19 I:double) \l0x009f: CONST  (r10 I:?[long, double]) = \l  (\-4631161762379464704(0xbfbaceea00000000, double:\-0.10471975803375244) ?[long, double])\l \l0x00a4: INVOKE  (r10 I:double) = (r10 I:double) java.lang.Math.sin(double):double type: STATIC \l0x00a8: INVOKE  (r12 I:double) = (r8 I:double) java.lang.Math.sin(double):double type: STATIC \l0x00ac: INVOKE  (r14 I:double) = (r6 I:double) java.lang.Math.sin(double):double type: STATIC \l0x00b0: ARITH  (r12 I:double) = (r12 I:double) * (r14 I:double) \l0x00b2: ARITH  (r10 I:double) = (r10 I:double) \- (r12 I:double) \l0x00b3: INVOKE  (r8 I:double) = (r8 I:double) java.lang.Math.cos(double):double type: STATIC \l0x00b7: INVOKE  (r6 I:double) = (r6 I:double) java.lang.Math.cos(double):double type: STATIC \l0x00bb: ARITH  (r8 I:double) = (r8 I:double) * (r6 I:double) \l0x00bd: ARITH  (r10 I:double) = (r10 I:double) \/ (r8 I:double) \l0x00be: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00bf: CONST  (r7 I:?[long, double]) = (\-1 ?[long, double]) \l0x00c1: CONST  (r12 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x00c3: CMP_L  (r9 I:int) = (r10 I:double), (r12 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x00c5|0x00c5: IF  (r9 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:4:0x00ce \l}"];
Node_2 [shape=record,label="{2\:\ 0x00c7|0x00c7: IPUT  \l  (r6 I:int)\l  (r0 I:android.support.v7.app.TwilightCalculator)\l android.support.v7.app.TwilightCalculator.state int \l0x00c9: IPUT  \l  (r7 I:long)\l  (r0 I:android.support.v7.app.TwilightCalculator)\l android.support.v7.app.TwilightCalculator.sunset long \l0x00cb: IPUT  \l  (r7 I:long)\l  (r0 I:android.support.v7.app.TwilightCalculator)\l android.support.v7.app.TwilightCalculator.sunrise long \l}"];
Node_3 [shape=record,label="{3\:\ 0x00cd|0x00cd: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x00ce|0x00ce: CONST  (r12 I:?[long, double]) = \l  (\-4616189618054758400(0xbff0000000000000, double:\-1.0) ?[long, double])\l \l0x00d0: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d1: CMP_G  (r12 I:int) = (r10 I:double), (r12 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x00d3|0x00d3: IF  (r12 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:8:0x00dc \l}"];
Node_6 [shape=record,label="{6\:\ 0x00d5|0x00d5: IPUT  \l  (r9 I:int)\l  (r0 I:android.support.v7.app.TwilightCalculator)\l android.support.v7.app.TwilightCalculator.state int \l0x00d7: IPUT  \l  (r7 I:long)\l  (r0 I:android.support.v7.app.TwilightCalculator)\l android.support.v7.app.TwilightCalculator.sunset long \l0x00d9: IPUT  \l  (r7 I:long)\l  (r0 I:android.support.v7.app.TwilightCalculator)\l android.support.v7.app.TwilightCalculator.sunrise long \l}"];
Node_7 [shape=record,label="{7\:\ 0x00db|0x00db: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x00dc|0x00dc: INVOKE  (r7 I:double) = (r10 I:double) java.lang.Math.acos(double):double type: STATIC \l0x00e0: CONST  (r10 I:?[long, double]) = \l  (4618760256179416344(0x401921fb54442d18, double:6.283185307179586) ?[long, double])\l \l0x00e5: ARITH  (r7 I:double) = (r7 I:double) \/ (r10 I:double) \l0x00e6: CAST  (r7 I:float) = (float) (r7 I:double) \l0x00e7: CAST  (r7 I:double) = (double) (r7 I:float) \l0x00e8: ARITH  (r10 I:double) = (r4 I:double) + (r7 I:double) \l0x00ea: CONST  (r12 I:?[long, double]) = \l  (4725570615333879808(0x4194997000000000, double:8.64E7) ?[long, double])\l \l0x00ef: ARITH  (r10 I:double) = (r10 I:double) * (r12 I:double) \l0x00f1: INVOKE  (r10 I:long) = (r10 I:double) java.lang.Math.round(double):long type: STATIC \l0x00f5: ARITH  (r10 I:long) = (r10 I:long) + (r2 I:long) \l0x00f6: IPUT  \l  (r10 I:long)\l  (r0 I:android.support.v7.app.TwilightCalculator)\l android.support.v7.app.TwilightCalculator.sunset long \l0x00f8: ARITH  (r4 I:double) = (r4 I:double) \- (r7 I:double) \l0x00f9: ARITH  (r4 I:double) = (r4 I:double) * (r12 I:double) \l0x00fb: INVOKE  (r4 I:long) = (r4 I:double) java.lang.Math.round(double):long type: STATIC \l0x00ff: ARITH  (r4 I:long) = (r4 I:long) + (r2 I:long) \l0x0100: IPUT  \l  (r4 I:long)\l  (r0 I:android.support.v7.app.TwilightCalculator)\l android.support.v7.app.TwilightCalculator.sunrise long \l0x0102: IGET  (r2 I:long) = (r0 I:android.support.v7.app.TwilightCalculator) android.support.v7.app.TwilightCalculator.sunrise long \l0x0104: CMP_L  (r2 I:int) = (r2 I:long), (r17 I:long) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0106|0x0106: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:13:0x0111 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0108|0x0108: IGET  (r2 I:long) = (r0 I:android.support.v7.app.TwilightCalculator) android.support.v7.app.TwilightCalculator.sunset long \l0x010a: CMP_L  (r1 I:int) = (r2 I:long), (r17 I:long) \l}"];
Node_11 [shape=record,label="{11\:\ 0x010c|0x010c: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:13:0x0111 \l}"];
Node_12 [shape=record,label="{12\:\ 0x010e|0x010e: IPUT  \l  (r9 I:int)\l  (r0 I:android.support.v7.app.TwilightCalculator)\l android.support.v7.app.TwilightCalculator.state int \l}"];
Node_13 [shape=record,label="{13\:\ 0x0111|0x0111: IPUT  \l  (r6 I:int)\l  (r0 I:android.support.v7.app.TwilightCalculator)\l android.support.v7.app.TwilightCalculator.state int \l}"];
Node_14 [shape=record,label="{14\:\ 0x0113|0x0113: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.app.TwilightCalculator.calculateTwilight((r16 'this' I:android.support.v7.app.TwilightCalculator A[IMMUTABLE_TYPE, THIS]), (r17 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
}

