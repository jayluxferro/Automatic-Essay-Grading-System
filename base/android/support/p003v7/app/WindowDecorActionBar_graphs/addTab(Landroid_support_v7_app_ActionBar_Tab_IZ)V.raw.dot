digraph "CFG forandroid.support.v7.app.WindowDecorActionBar.addTab(Landroid\/support\/v7\/app\/ActionBar$Tab;IZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:android.support.v7.app.WindowDecorActionBar) android.support.v7.app.WindowDecorActionBar.ensureTabsExist():void type: DIRECT \l0x0003: IGET  (r0 I:android.support.v7.widget.ScrollingTabContainerView) = (r1 I:android.support.v7.app.WindowDecorActionBar) android.support.v7.app.WindowDecorActionBar.mTabScrollView android.support.v7.widget.ScrollingTabContainerView \l0x0005: INVOKE  \l  (r0 I:android.support.v7.widget.ScrollingTabContainerView)\l  (r2 I:android.support.v7.app.ActionBar$Tab)\l  (r3 I:int)\l  (r4 I:boolean)\l android.support.v7.widget.ScrollingTabContainerView.addTab(android.support.v7.app.ActionBar$Tab, int, boolean):void type: VIRTUAL \l0x0008: INVOKE  \l  (r1 I:android.support.v7.app.WindowDecorActionBar)\l  (r2 I:android.support.v7.app.ActionBar$Tab)\l  (r3 I:int)\l android.support.v7.app.WindowDecorActionBar.configureTab(android.support.v7.app.ActionBar$Tab, int):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: INVOKE  \l  (r1 I:android.support.v7.app.WindowDecorActionBar)\l  (r2 I:android.support.v7.app.ActionBar$Tab)\l android.support.v7.app.WindowDecorActionBar.selectTab(android.support.v7.app.ActionBar$Tab):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.v7.app.WindowDecorActionBar.addTab((r1 'this' I:android.support.v7.app.WindowDecorActionBar A[IMMUTABLE_TYPE, THIS]), (r2 I:android.support.v7.app.ActionBar$Tab A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

