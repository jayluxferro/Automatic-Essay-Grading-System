digraph "CFG forandroid.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.AnimatedStateListState.addTransition(IILandroid\/graphics\/drawable\/Drawable;Z)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r12 I:int) = \l  (r9 I:android.support.v7.graphics.drawable.StateListDrawable$StateListState)\l  (r12 I:android.graphics.drawable.Drawable)\l android.support.v7.graphics.drawable.StateListDrawable.StateListState.addChild(android.graphics.drawable.Drawable):int type: SUPER \l0x0004: INVOKE  (r0 I:long) = (r10 I:int), (r11 I:int) android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.AnimatedStateListState.generateTransitionKey(int, int):long type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST  (r2 I:?[long, double]) = \l  (8589934592(0x200000000, double:4.243991582E\-314) ?[long, double])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IGET  (r4 I:android.support.v4.util.LongSparseArray\<java.lang.Long\>) = \l  (r9 I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState)\l android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.AnimatedStateListState.mTransitions android.support.v4.util.LongSparseArray \l0x0014: CAST  (r5 I:long) = (long) (r12 I:int) \l0x0015: ARITH  (r7 I:long) = (r5 I:long) \| (r2 I:long) \l0x0017: INVOKE  (r7 I:java.lang.Long) = (r7 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x001b: INVOKE  \l  (r4 I:android.support.v4.util.LongSparseArray)\l  (r0 I:long)\l  (r7 I:java.lang.Object)\l android.support.v4.util.LongSparseArray.append(long, java.lang.Object):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0034 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: INVOKE  (r10 I:long) = (r11 I:int), (r10 I:int) android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.AnimatedStateListState.generateTransitionKey(int, int):long type: STATIC \l0x0024: IGET  (r13 I:android.support.v4.util.LongSparseArray\<java.lang.Long\>) = \l  (r9 I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState)\l android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.AnimatedStateListState.mTransitions android.support.v4.util.LongSparseArray \l0x0026: CONST  (r0 I:?[long, double]) = \l  (4294967296(0x100000000, double:2.121995791E\-314) ?[long, double])\l \l0x002b: ARITH  (r0 I:long) = (r0 I:long) \| (r5 I:long) \l0x002c: ARITH  (r0 I:long) = (r0 I:long) \| (r2 I:long) \l0x002d: INVOKE  (r0 I:java.lang.Long) = (r0 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0031: INVOKE  \l  (r13 I:android.support.v4.util.LongSparseArray)\l  (r10 I:long)\l  (r0 I:java.lang.Object)\l android.support.v4.util.LongSparseArray.append(long, java.lang.Object):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|0x0034: RETURN  (r12 I:int) \l}"];
MethodNode[shape=record,label="{int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.AnimatedStateListState.addTransition((r9 'this' I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState A[IMMUTABLE_TYPE, THIS]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , , Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
}

