digraph "CFG forandroid.support.v7.graphics.drawable.DrawableContainer.setHotspotBounds(IIII)V" {
subgraph cluster_Region_1526311239 {
label = "R(2:(1:2)(1:3)|(1:(1:6)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1630755545 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1.mHotspotBounds == null) goto L_0x0004\l}"];
subgraph cluster_Region_1326848410 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|r1.mHotspotBounds = new android.graphics.Rect(r2, r3, r4, r5)\l}"];
}
subgraph cluster_Region_360429705 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|r1.mHotspotBounds.set(r2, r3, r4, r5)\l}"];
}
}
subgraph cluster_Region_39815408 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2042757104 {
label = "IF [B:5:0x0013] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|if (r1.mCurrDrawable != null) goto L_0x0015\l}"];
subgraph cluster_Region_107275163 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|android.support.p000v4.graphics.drawable.DrawableCompat.setHotspotBounds(r1.mCurrDrawable, r2, r3, r4, r5)\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0011}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.v7.graphics.drawable.DrawableContainer.setHotspotBounds((r1v0 'this' android.support.v7.graphics.drawable.DrawableContainer A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_4 -> Node_5;
}

