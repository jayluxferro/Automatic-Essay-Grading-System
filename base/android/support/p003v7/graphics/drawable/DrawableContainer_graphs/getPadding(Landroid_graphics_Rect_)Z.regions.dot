digraph "CFG forandroid.support.v7.graphics.drawable.DrawableContainer.getPadding(Landroid\/graphics\/Rect;)Z" {
subgraph cluster_Region_1510410227 {
label = "R(4:0|(2:2|3)(1:(1:8)(1:9))|(1:12)|13) | DECL_VAR: boolean null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.graphics.Rect android.graphics.Rect r0 = r3.mDrawableContainerState.getConstantPadding()\l}"];
subgraph cluster_IfRegion_1172342171 {
label = "IF [B:1:0x0006] THEN: R(2:2|3) ELSE: R(1:(1:8)(1:9))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r0 != null) goto L_0x0008\l}"];
subgraph cluster_Region_978027066 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|r4.set(r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|r0 = (r0.right \| ((r0.left \| r0.top) \| r0.bottom)) != 0\l}"];
}
subgraph cluster_Region_1808118999 {
label = "R(1:(1:8)(1:9)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_631021143 {
label = "IF [B:7:0x001e] THEN: R(1:8) ELSE: R(1:9) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001e|if (r3.mCurrDrawable != null) goto L_0x0020\l}"];
subgraph cluster_Region_1893031354 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0020|boolean r0 = r3.mCurrDrawable.getPadding(r4)\l}"];
}
subgraph cluster_Region_311421063 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0027|boolean r0 = super.getPadding(r4)\l}"];
}
}
}
}
subgraph cluster_IfRegion_1563582067 {
label = "IF [B:11:0x002f] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002f|if (needsMirroring() == true) goto L_0x0031\l}"];
subgraph cluster_Region_836293222 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0031|int int r1 = r4.left\lr4.left = r4.right\lr4.right = r1\l}"];
}
}
Node_13 [shape=record,label="{13\:\ 0x0039|RETURN\l|return r0\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0018}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001a}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001c}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002b|PHI: r0 \l  PHI: (r0v2 boolean) = (r0v4 boolean), (r0v6 boolean), (r0v10 boolean) binds: [B:9:0x0027, B:8:0x0020, B:4:0x0018] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public boolean android.support.v7.graphics.drawable.DrawableContainer.getPadding((r3v0 'this' android.support.v7.graphics.drawable.DrawableContainer A[IMMUTABLE_TYPE, THIS]), (r4v0 android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_13;
Node_4 -> Node_10;
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_10 -> Node_11;
}

