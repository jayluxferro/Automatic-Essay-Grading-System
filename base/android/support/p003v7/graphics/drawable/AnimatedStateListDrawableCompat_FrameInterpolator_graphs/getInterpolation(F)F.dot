digraph "CFG forandroid.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.FrameInterpolator.getInterpolation(F)F" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r5 = (int) ((r5 * ((float) r4.mTotalDuration)) + 0.5f)\lint r0 = r4.mFrames\lint[] r1 = r4.mFrameTimes\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|LOOP_START\lPHI: r2 r5 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:4:0x0014] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v4 int) = (r5v3 int), (r5v9 int) binds: [B:0:0x0000, B:4:0x0014] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000e\-\>B:4:0x0014\l|if (r2 \>= r0) goto L_0x001a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010}"];
Node_3 [shape=record,label="{3\:\ 0x0012|if (r5 \< r1[r2]) goto L_0x001a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|LOOP_END\lLOOP:0: B:1:0x000e\-\>B:4:0x0014\l|int r5 = r5 \- r1[r2]\lint r2 = r2 + 1\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|if (r2 \>= r0) goto L_0x0022\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|float r5 = ((float) r5) \/ ((float) r4.mTotalDuration)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|r5 = 0.0f\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|PHI: r5 \l  PHI: (r5v5 float) = (r5v6 float), (r5v8 float) binds: [B:7:0x0022, B:6:0x001c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|RETURN\l|return (((float) r2) \/ ((float) r0)) + r5\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public float android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.FrameInterpolator.getInterpolation((r4v0 'this' android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator A[IMMUTABLE_TYPE, THIS]), (r5v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_1;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_5;
Node_11 -> Node_5;
}

