digraph "CFG forandroid.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.AnimationDrawableTransition.\<init\>(Landroid\/graphics\/drawable\/AnimationDrawable;ZZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  \l  (r6 I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$Transition)\l  (r0 I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$1)\l android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.Transition.\<init\>(android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$1):void type: DIRECT \l0x0004: INVOKE  (r0 I:int) = (r7 I:android.graphics.drawable.AnimationDrawable) android.graphics.drawable.AnimationDrawable.getNumberOfFrames():int type: VIRTUAL \l0x0008: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: ARITH  (r2 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: ARITH  (r0 I:int) = (r0 I:int) \- (r3 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|0x0015: NEW_INSTANCE  (r4 I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator) =  android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator \l0x0017: INVOKE  \l  (r4 I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator)\l  (r7 I:android.graphics.drawable.AnimationDrawable)\l  (r8 I:boolean)\l android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.FrameInterpolator.\<init\>(android.graphics.drawable.AnimationDrawable, boolean):void type: DIRECT \l0x001a: CONST_STR  (r8 I:java.lang.String) =  \"currentIndex\" \l0x001c: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x001d: NEW_ARRAY  (r5 I:int[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x001f: APUT  \l  (r5 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x0021: APUT  \l  (r5 I:?[int, float][])\l  (r3 I:?[int, short, byte, char])\l  (r0 I:?[int, float])\l \l0x0023: INVOKE  (r7 I:android.animation.ObjectAnimator) = \l  (r7 I:java.lang.Object)\l  (r8 I:java.lang.String)\l  (r5 I:int[])\l android.animation.ObjectAnimator.ofInt(java.lang.Object, java.lang.String, int[]):android.animation.ObjectAnimator type: STATIC \l0x0027: SGET  (r8 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0029: CONST  (r0 I:?[int, float, short, byte, char]) = (18 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: IF  (r8 I:?[int, byte, short, char]) \< (r0 I:?[int, byte, short, char])  \-\> B:11:0x0030 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: INVOKE  (r7 I:android.animation.ObjectAnimator), (r3 I:boolean) android.animation.ObjectAnimator.setAutoCancel(boolean):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: INVOKE  (r8 I:int) = \l  (r4 I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator)\l android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.FrameInterpolator.getTotalDuration():int type: VIRTUAL \l0x0034: CAST  (r0 I:long) = (long) (r8 I:int) \l0x0035: INVOKE  (r7 I:android.animation.ObjectAnimator), (r0 I:long) android.animation.ObjectAnimator.setDuration(long):android.animation.ObjectAnimator type: VIRTUAL \l0x0038: INVOKE  \l  (r7 I:android.animation.ObjectAnimator)\l  (r4 I:android.animation.TimeInterpolator)\l android.animation.ObjectAnimator.setInterpolator(android.animation.TimeInterpolator):void type: VIRTUAL \l0x003b: IPUT  \l  (r9 I:boolean)\l  (r6 I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition)\l android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.AnimationDrawableTransition.mHasReversibleFlag boolean \l0x003d: IPUT  \l  (r7 I:android.animation.ObjectAnimator)\l  (r6 I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition)\l android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.AnimationDrawableTransition.mAnim android.animation.ObjectAnimator \l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|0x003f: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.AnimationDrawableTransition.\<init\>((r6 'this' I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition A[IMMUTABLE_TYPE, THIS]), (r7 I:android.graphics.drawable.AnimationDrawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

