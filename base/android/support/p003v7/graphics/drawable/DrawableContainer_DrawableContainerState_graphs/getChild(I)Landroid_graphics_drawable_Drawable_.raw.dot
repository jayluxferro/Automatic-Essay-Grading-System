digraph "CFG forandroid.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.getChild(I)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable[]) = \l  (r4 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawables android.graphics.drawable.Drawable[] \l0x0002: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r5 I:?[int, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IGET  (r0 I:android.util.SparseArray\<android.graphics.drawable.Drawable$ConstantState\>) = \l  (r4 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawableFutures android.util.SparseArray \l0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x003a \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IGET  (r0 I:android.util.SparseArray\<android.graphics.drawable.Drawable$ConstantState\>) = \l  (r4 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawableFutures android.util.SparseArray \l0x000e: INVOKE  (r0 I:int) = (r0 I:android.util.SparseArray), (r5 I:int) android.util.SparseArray.indexOfKey(int):int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:11:0x003a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IGET  (r2 I:android.util.SparseArray\<android.graphics.drawable.Drawable$ConstantState\>) = \l  (r4 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawableFutures android.util.SparseArray \l0x0016: INVOKE  (r2 I:java.lang.Object) = (r2 I:android.util.SparseArray), (r0 I:int) android.util.SparseArray.valueAt(int):java.lang.Object type: VIRTUAL \l0x001a: CHECK_CAST  (r2 I:android.graphics.drawable.Drawable$ConstantState) = (android.graphics.drawable.Drawable$ConstantState) (r2 I:?[OBJECT, ARRAY]) \l0x001c: IGET  (r3 I:android.content.res.Resources) = \l  (r4 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mSourceRes android.content.res.Resources \l0x001e: INVOKE  (r2 I:android.graphics.drawable.Drawable) = \l  (r2 I:android.graphics.drawable.Drawable$ConstantState)\l  (r3 I:android.content.res.Resources)\l android.graphics.drawable.Drawable.ConstantState.newDrawable(android.content.res.Resources):android.graphics.drawable.Drawable type: VIRTUAL \l0x0022: INVOKE  (r2 I:android.graphics.drawable.Drawable) = \l  (r4 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l  (r2 I:android.graphics.drawable.Drawable)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable):android.graphics.drawable.Drawable type: DIRECT \l0x0026: IGET  (r3 I:android.graphics.drawable.Drawable[]) = \l  (r4 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawables android.graphics.drawable.Drawable[] \l0x0028: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x002a: IGET  (r5 I:android.util.SparseArray\<android.graphics.drawable.Drawable$ConstantState\>) = \l  (r4 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawableFutures android.util.SparseArray \l0x002c: INVOKE  (r5 I:android.util.SparseArray), (r0 I:int) android.util.SparseArray.removeAt(int):void type: VIRTUAL \l0x002f: IGET  (r5 I:android.util.SparseArray\<android.graphics.drawable.Drawable$ConstantState\>) = \l  (r4 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawableFutures android.util.SparseArray \l0x0031: INVOKE  (r5 I:int) = (r5 I:android.util.SparseArray) android.util.SparseArray.size():int type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0035|0x0035: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0039 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|0x0037: IPUT  \l  (r1 I:android.util.SparseArray\<android.graphics.drawable.Drawable$ConstantState\>)\l  (r4 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawableFutures android.util.SparseArray \l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|0x0039: RETURN  (r2 I:android.graphics.drawable.Drawable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|0x003a: RETURN  (r1 I:android.graphics.drawable.Drawable) \l}"];
MethodNode[shape=record,label="{public final android.graphics.drawable.Drawable android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.getChild((r4 'this' I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
}

