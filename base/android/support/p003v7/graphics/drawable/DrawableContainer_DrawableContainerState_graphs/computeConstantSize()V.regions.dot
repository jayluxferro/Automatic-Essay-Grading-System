digraph "CFG forandroid.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.computeConstantSize()V" {
subgraph cluster_Region_401392574 {
label = "R(2:0|(9:2|(1:4)|5|(1:7)|8|(1:10)|11|(1:13)(0)|14))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r6.mCheckedConstantSize = true\lcreateAllFutures()\lint int r0 = r6.mNumChildren\landroid.graphics.drawable.Drawable[] android.graphics.drawable.Drawable[] r1 = r6.mDrawables\lr6.mConstantHeight = \-1\lr6.mConstantWidth = \-1\lint r2 = 0\lr6.mConstantMinimumHeight = 0\lr6.mConstantMinimumWidth = 0\l}"];
subgraph cluster_LoopRegion_245031158 {
label = "LOOP:0: (9:2|(1:4)|5|(1:7)|8|(1:10)|11|(1:13)(0)|14)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0014|LOOP_START\lPHI: r2 \l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int) binds: [B:0:0x0000, B:14:0x0040] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0014\-\>B:14:0x0040\l|if (r2 \< r0) goto L_0x0016\l}"];
subgraph cluster_Region_497299729 {
label = "R(9:2|(1:4)|5|(1:7)|8|(1:10)|11|(1:13)(0)|14)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0016|android.graphics.drawable.Drawable r3 = r1[r2]\lint int r4 = r3.getIntrinsicWidth()\l}"];
subgraph cluster_IfRegion_644553978 {
label = "IF [B:3:0x001e] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001e|if (r4 \> r6.mConstantWidth) goto L_0x0020\l}"];
subgraph cluster_Region_1466686138 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0020|r6.mConstantWidth = r4\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0022|int int r4 = r3.getIntrinsicHeight()\l}"];
subgraph cluster_IfRegion_246353393 {
label = "IF [B:6:0x0028] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0028|if (r4 \> r6.mConstantHeight) goto L_0x002a\l}"];
subgraph cluster_Region_851413388 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002a|r6.mConstantHeight = r4\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x002c|int int r4 = r3.getMinimumWidth()\l}"];
subgraph cluster_IfRegion_1280172013 {
label = "IF [B:9:0x0032] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0032|if (r4 \> r6.mConstantMinimumWidth) goto L_0x0034\l}"];
subgraph cluster_Region_1165652692 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0034|r6.mConstantMinimumWidth = r4\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x0036|int int r3 = r3.getMinimumHeight()\l}"];
subgraph cluster_IfRegion_860634895 {
label = "IF [B:12:0x003c] THEN: R(1:13) ELSE: R(0)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x003c|if (r3 \> r6.mConstantMinimumHeight) goto L_0x003e\l}"];
subgraph cluster_Region_2112959235 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x003e|r6.mConstantMinimumHeight = r3\l}"];
}
subgraph cluster_Region_671455881 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_14 [shape=record,label="{14\:\ 0x0040|LOOP_END\lLOOP:0: B:1:0x0014\-\>B:14:0x0040\l|r2++\l}"];
}
}
}
Node_15 [shape=record,color=red,label="{15\:\ 0x0043}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0043|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0040|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0040|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.computeConstantSize((r6v0 'this' android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_16[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_18[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_1;
Node_16 -> Node_15;
Node_17 -> Node_14;
Node_18 -> Node_14;
}

