digraph "CFG forandroid.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.getConstantPadding()Landroid\/graphics\/Rect;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = \l  (r8 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mVariablePadding boolean \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r1 I:android.graphics.Rect) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r0 I:android.graphics.Rect) = \l  (r8 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mConstantPadding android.graphics.Rect \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0060 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IGET  (r0 I:boolean) = \l  (r8 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mCheckedPadding boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000f \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: INVOKE  \l  (r8 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.createAllFutures():void type: DIRECT \l0x0012: NEW_INSTANCE  (r0 I:android.graphics.Rect) =  android.graphics.Rect \l0x0014: INVOKE  (r0 I:android.graphics.Rect) android.graphics.Rect.\<init\>():void type: DIRECT \l0x0017: IGET  (r2 I:int) = \l  (r8 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mNumChildren int \l0x0019: IGET  (r3 I:android.graphics.drawable.Drawable[]) = \l  (r8 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawables android.graphics.drawable.Drawable[] \l0x001b: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001c: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x001d: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:27:0x005a \l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|0x0020: AGET  (r6 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0022: INVOKE  (r6 I:boolean) = \l  (r6 I:android.graphics.drawable.Drawable)\l  (r0 I:android.graphics.Rect)\l android.graphics.drawable.Drawable.getPadding(android.graphics.Rect):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0057 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002f \l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|0x002a: NEW_INSTANCE  (r5 I:android.graphics.Rect) =  android.graphics.Rect \l0x002c: INVOKE  \l  (r5 I:android.graphics.Rect)\l  (r4 I:int)\l  (r4 I:int)\l  (r4 I:int)\l  (r4 I:int)\l android.graphics.Rect.\<init\>(int, int, int, int):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|0x002f: IGET  (r6 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0031: IGET  (r7 I:int) = (r5 I:android.graphics.Rect) android.graphics.Rect.left int \l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|0x0033: IF  (r6 I:?[int, byte, short, char]) \<= (r7 I:?[int, byte, short, char])  \-\> B:17:0x0039 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|0x0035: IGET  (r6 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0037: IPUT  (r6 I:int), (r5 I:android.graphics.Rect) android.graphics.Rect.left int \l}"];
Node_17 [shape=record,label="{17\:\ 0x0039|0x0039: IGET  (r6 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.top int \l0x003b: IGET  (r7 I:int) = (r5 I:android.graphics.Rect) android.graphics.Rect.top int \l}"];
Node_18 [shape=record,label="{18\:\ 0x003d|0x003d: IF  (r6 I:?[int, byte, short, char]) \<= (r7 I:?[int, byte, short, char])  \-\> B:20:0x0043 \l}"];
Node_19 [shape=record,label="{19\:\ 0x003f|0x003f: IGET  (r6 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0041: IPUT  (r6 I:int), (r5 I:android.graphics.Rect) android.graphics.Rect.top int \l}"];
Node_20 [shape=record,label="{20\:\ 0x0043|0x0043: IGET  (r6 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.right int \l0x0045: IGET  (r7 I:int) = (r5 I:android.graphics.Rect) android.graphics.Rect.right int \l}"];
Node_21 [shape=record,label="{21\:\ 0x0047|0x0047: IF  (r6 I:?[int, byte, short, char]) \<= (r7 I:?[int, byte, short, char])  \-\> B:23:0x004d \l}"];
Node_22 [shape=record,label="{22\:\ 0x0049|0x0049: IGET  (r6 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.right int \l0x004b: IPUT  (r6 I:int), (r5 I:android.graphics.Rect) android.graphics.Rect.right int \l}"];
Node_23 [shape=record,label="{23\:\ 0x004d|0x004d: IGET  (r6 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x004f: IGET  (r7 I:int) = (r5 I:android.graphics.Rect) android.graphics.Rect.bottom int \l}"];
Node_24 [shape=record,label="{24\:\ 0x0051|0x0051: IF  (r6 I:?[int, byte, short, char]) \<= (r7 I:?[int, byte, short, char])  \-\> B:26:0x0057 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0053|0x0053: IGET  (r6 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x0055: IPUT  (r6 I:int), (r5 I:android.graphics.Rect) android.graphics.Rect.bottom int \l}"];
Node_26 [shape=record,label="{26\:\ 0x0057|0x0057: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_27 [shape=record,label="{27\:\ 0x005a|0x005a: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x005b: IPUT  \l  (r0 I:boolean)\l  (r8 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mCheckedPadding boolean \l0x005d: IPUT  \l  (r5 I:android.graphics.Rect)\l  (r8 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mConstantPadding android.graphics.Rect \l}"];
Node_28 [shape=record,label="{28\:\ 0x005f|0x005f: RETURN  (r5 I:android.graphics.Rect) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0060|0x0060: IGET  (r0 I:android.graphics.Rect) = \l  (r8 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mConstantPadding android.graphics.Rect \l}"];
Node_30 [shape=record,label="{30\:\ 0x0062|0x0062: RETURN  (r0 I:android.graphics.Rect) \l}"];
MethodNode[shape=record,label="{public final android.graphics.Rect android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.getConstantPadding((r8 'this' I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_29;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_29[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_27;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_26;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_9;
Node_27 -> Node_28;
Node_29 -> Node_30;
}

