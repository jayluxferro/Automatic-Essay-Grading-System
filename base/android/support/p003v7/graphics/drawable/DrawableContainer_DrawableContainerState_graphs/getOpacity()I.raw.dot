digraph "CFG forandroid.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.getOpacity()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = \l  (r6 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mCheckedOpacity boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:int) = \l  (r6 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mOpacity int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: RETURN  (r0 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: INVOKE  \l  (r6 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.createAllFutures():void type: DIRECT \l0x000a: IGET  (r0 I:int) = \l  (r6 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mNumChildren int \l0x000c: IGET  (r1 I:android.graphics.drawable.Drawable[]) = \l  (r6 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawables android.graphics.drawable.Drawable[] \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x0018 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0011: AGET  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0013: INVOKE  (r2 I:int) = (r2 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getOpacity():int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: CONST  (r2 I:?[int, float, short, byte, char]) = (\-2 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001a: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:11:0x002b \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: AGET  (r5 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0020: INVOKE  (r5 I:int) = (r5 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getOpacity():int type: VIRTUAL \l0x0024: INVOKE  (r4 I:int) = (r4 I:int), (r5 I:int) android.graphics.drawable.Drawable.resolveOpacity(int, int):int type: STATIC \l0x0028: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: IPUT  \l  (r4 I:int)\l  (r6 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mOpacity int \l0x002d: IPUT  \l  (r3 I:boolean)\l  (r6 I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState)\l android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mCheckedOpacity boolean \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: RETURN  (r4 I:int) \l}"];
MethodNode[shape=record,label="{public final int android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.getOpacity((r6 'this' I:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_9;
Node_11 -> Node_12;
}

