digraph "CFG forandroid.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mutate()V" {
subgraph cluster_Region_2052244276 {
label = "R(3:0|(2:(1:4)(0)|5)|6)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r4.mNumChildren\landroid.graphics.drawable.Drawable[] android.graphics.drawable.Drawable[] r1 = r4.mDrawables\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_205521508 {
label = "LOOP:0: (2:(1:4)(0)|5)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:5:0x0010] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0005\-\>B:5:0x0010\l|if (r2 \< r0) goto L_0x0007\l}"];
subgraph cluster_Region_445149306 {
label = "R(2:(1:4)(0)|5)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1842838234 {
label = "IF [B:3:0x0009] THEN: R(1:4) ELSE: R(0)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r1[r2] != null) goto L_0x000b\l}"];
subgraph cluster_Region_1991198456 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|r1[r2].mutate()\l}"];
}
subgraph cluster_Region_115874292 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_5 [shape=record,label="{5\:\ 0x0010|LOOP_END\lLOOP:0: B:1:0x0005\-\>B:5:0x0010\l|r2++\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0013|r4.mMutated = true\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0007}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0016}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0013|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0010|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0010|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void android.support.v7.graphics.drawable.DrawableContainer.DrawableContainerState.mutate((r4v0 'this' android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_10[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_2 -> Node_3;
Node_8 -> Node_6;
Node_9 -> Node_5;
Node_10 -> Node_5;
}

