digraph "CFG forandroid.support.v7.graphics.drawable.StateListDrawable.inflateChildElements(Landroid\/content\/Context;Landroid\/content\/res\/Resources;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/util\/AttributeSet;Landroid\/content\/res\/Resources$Theme;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v7.graphics.drawable.StateListDrawable$StateListState) = \l  (r8 I:android.support.v7.graphics.drawable.StateListDrawable)\l android.support.v7.graphics.drawable.StateListDrawable.mStateListState android.support.v7.graphics.drawable.StateListDrawable$StateListState \l0x0002: INVOKE  (r1 I:int) = (r11 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getDepth():int type: INTERFACE \l0x0006: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: INVOKE  (r3 I:int) = (r11 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0085 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: INVOKE  (r4 I:int) = (r11 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getDepth():int type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r4 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:7:0x0017 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: CONST  (r5 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0085 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001b \l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: IF  (r4 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:1:0x0008 \l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|0x001d: INVOKE  (r3 I:java.lang.String) = (r11 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE \l0x0021: CONST_STR  (r4 I:java.lang.String) =  \"item\" \l0x0023: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|0x0027: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002a \l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|0x002a: SGET  (r3 I:int[]) =  android.support.v7.appcompat.R.styleable.StateListDrawableItem int[] \l0x002c: INVOKE  (r3 I:android.content.res.TypedArray) = \l  (r10 I:android.content.res.Resources)\l  (r13 I:android.content.res.Resources$Theme)\l  (r12 I:android.util.AttributeSet)\l  (r3 I:int[])\l android.support.v4.content.res.TypedArrayUtils.obtainAttributes(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray type: STATIC \l0x0030: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0031: SGET  (r6 I:int) =  android.support.v7.appcompat.R.styleable.StateListDrawableItem_android_drawable int \l0x0033: CONST  (r7 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0034: INVOKE  (r6 I:int) = \l  (r3 I:android.content.res.TypedArray)\l  (r6 I:int)\l  (r7 I:int)\l android.content.res.TypedArray.getResourceId(int, int):int type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|0x0038: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:17:0x003e \l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|0x003a: INVOKE  (r4 I:android.graphics.drawable.Drawable) = (r9 I:android.content.Context), (r6 I:int) android.support.v7.content.res.AppCompatResources.getDrawable(android.content.Context, int):android.graphics.drawable.Drawable type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x003e|0x003e: INVOKE  (r3 I:android.content.res.TypedArray) android.content.res.TypedArray.recycle():void type: VIRTUAL \l0x0041: INVOKE  (r3 I:int[]) = \l  (r8 I:android.support.v7.graphics.drawable.StateListDrawable)\l  (r12 I:android.util.AttributeSet)\l android.support.v7.graphics.drawable.StateListDrawable.extractStateSet(android.util.AttributeSet):int[] type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0045|0x0045: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0081 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0047|0x0047: INVOKE  (r4 I:int) = (r11 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l0x004b: CONST  (r6 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x004c|0x004c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x004f \l}"];
Node_22 [shape=record,label="{22\:\ 0x004f|0x004f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0061 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0051|0x0051: SGET  (r4 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0053: CONST  (r5 I:?[int, float, short, byte, char]) = (21 ?[int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0055|0x0055: IF  (r4 I:?[int, byte, short, char]) \< (r5 I:?[int, byte, short, char])  \-\> B:26:0x005c \l}"];
Node_25 [shape=record,label="{25\:\ 0x0057|0x0057: INVOKE  (r4 I:android.graphics.drawable.Drawable) = \l  (r10 I:android.content.res.Resources)\l  (r11 I:org.xmlpull.v1.XmlPullParser)\l  (r12 I:android.util.AttributeSet)\l  (r13 I:android.content.res.Resources$Theme)\l android.graphics.drawable.Drawable.createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):android.graphics.drawable.Drawable type: STATIC \l}"];
Node_26 [shape=record,label="{26\:\ 0x005c|0x005c: INVOKE  (r4 I:android.graphics.drawable.Drawable) = \l  (r10 I:android.content.res.Resources)\l  (r11 I:org.xmlpull.v1.XmlPullParser)\l  (r12 I:android.util.AttributeSet)\l android.graphics.drawable.Drawable.createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet):android.graphics.drawable.Drawable type: STATIC \l}"];
Node_27 [shape=record,label="{27\:\ 0x0061|0x0061: NEW_INSTANCE  (r9 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x0063: NEW_INSTANCE  (r10 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0065: INVOKE  (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0068: INVOKE  (r11 I:java.lang.String) = (r11 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getPositionDescription():java.lang.String type: INTERFACE \l0x006c: INVOKE  (r10 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006f: CONST_STR  (r11 I:java.lang.String) =  \": \<item\> tag requires a 'drawable' attribute or \" \l0x0071: INVOKE  (r10 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0074: CONST_STR  (r11 I:java.lang.String) =  \"child tag defining a drawable\" \l0x0076: INVOKE  (r10 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0079: INVOKE  (r10 I:java.lang.String) = (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x007d: INVOKE  \l  (r9 I:org.xmlpull.v1.XmlPullParserException)\l  (r10 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_28 [shape=record,label="{28\:\ 0x0080|0x0080: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0081|0x0081: INVOKE  \l  (r0 I:android.support.v7.graphics.drawable.StateListDrawable$StateListState)\l  (r3 I:int[])\l  (r4 I:android.graphics.drawable.Drawable)\l android.support.v7.graphics.drawable.StateListDrawable.StateListState.addStateSet(int[], android.graphics.drawable.Drawable):int type: VIRTUAL \l}"];
Node_30 [shape=record,label="{30\:\ 0x0085|0x0085: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v7.graphics.drawable.StateListDrawable.inflateChildElements((r8 'this' I:android.support.v7.graphics.drawable.StateListDrawable A[IMMUTABLE_TYPE, THIS]), (r9 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:android.content.res.Resources$Theme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_30;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_30;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_1[style=dashed];
Node_10 -> Node_1;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_14;
Node_12 -> Node_1[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_29;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_19[style=dashed];
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_29;
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_29 -> Node_1;
}

