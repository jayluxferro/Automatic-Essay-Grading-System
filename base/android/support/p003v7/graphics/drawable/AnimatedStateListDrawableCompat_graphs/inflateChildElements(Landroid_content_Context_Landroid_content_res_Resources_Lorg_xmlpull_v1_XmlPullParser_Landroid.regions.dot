digraph "CFG forandroid.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(Landroid\/content\/Context;Landroid\/content\/res\/Resources;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/util\/AttributeSet;Landroid\/content\/res\/Resources$Theme;)V" {
subgraph cluster_Region_694938959 {
label = "R(2:0|(2:1|(2:3|(2:(1:25)|(1:(1:(1:12)(1:(1:15)(0))))))(1:24)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r8.getDepth() + 1\l}"];
subgraph cluster_LoopRegion_154921938 {
label = "LOOP:0: (2:1|(2:3|(2:(1:25)|(1:(1:(1:12)(1:(1:15)(0))))))(1:24))";
node [shape=record,color=blue];
subgraph cluster_Region_2025258189 {
label = "R(2:1|(2:3|(2:(1:25)|(1:(1:(1:12)(1:(1:15)(0))))))(1:24))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lLOOP:0: B:1:0x0006\-\>B:16:0x0006\l|int int r2 = r8.next()\l}"];
subgraph cluster_IfRegion_239171329 {
label = "IF [B:2:0x000a] THEN: R(2:3|(2:(1:25)|(1:(1:(1:12)(1:(1:15)(0)))))) ELSE: R(1:24)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|if (r2 != 1) goto L_0x000c\l}"];
subgraph cluster_Region_241707442 {
label = "R(2:3|(2:(1:25)|(1:(1:(1:12)(1:(1:15)(0))))))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|int int r3 = r8.getDepth()\l}"];
subgraph cluster_Region_1179528634 {
label = "R(2:(1:25)|(1:(1:(1:12)(1:(1:15)(0)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1818074765 {
label = "IF [B:4:0x0010, B:6:0x0013] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|if (r3 \< r0) goto L_0x0012\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|ADDED_TO_REGION\l|if (r2 == 3) goto L_0x003c\l}"];
subgraph cluster_Region_1724122318 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_227221813 {
label = "R(1:(1:(1:12)(1:(1:15)(0))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1719092778 {
label = "IF [B:8:0x0016, B:9:0x0019] THEN: R(1:(1:12)(1:(1:15)(0))) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0016|ADDED_TO_REGION\l|if (r2 == 2) goto L_0x0019\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|ADDED_TO_REGION\l|if (r3 \<= r0) goto L_0x001c\l}"];
subgraph cluster_Region_1538801197 {
label = "R(1:(1:12)(1:(1:15)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1823271709 {
label = "IF [B:11:0x0026] THEN: R(1:12) ELSE: R(1:(1:15)(0))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0026|if (r8.getName().equals(ELEMENT_ITEM) == true) goto L_0x0028\l}"];
subgraph cluster_Region_705196082 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0028|parseItem(r6, r7, r8, r9, r10)\l}"];
}
subgraph cluster_Region_2128510671 {
label = "R(1:(1:15)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1678601839 {
label = "IF [B:14:0x0036] THEN: R(1:15) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0036|if (r8.getName().equals(ELEMENT_TRANSITION) == true) goto L_0x0038\l}"];
subgraph cluster_Region_1878164976 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0038|parseTransition(r6, r7, r8, r9, r10)\l}"];
}
subgraph cluster_Region_101904860 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
}
}
}
subgraph cluster_Region_196595671 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
}
}
}
}
}
Node_5 [shape=record,color=red,label="{5\:\ 0x0012}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0015}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001c}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x002c}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0006\-\>B:16:0x0006\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x003c|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x003c|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0006|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0006|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0006|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0006|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0006|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements((r5v0 'this' android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r6v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 android.content.res.Resources$Theme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_17[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_18;
Node_8 -> Node_9;
Node_8 -> Node_19[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_20[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_21;
Node_14 -> Node_15;
Node_14 -> Node_22[style=dashed];
Node_15 -> Node_23;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_16 -> Node_1;
Node_17 -> Node_24;
Node_18 -> Node_25;
Node_19 -> Node_16;
Node_20 -> Node_16;
Node_21 -> Node_16;
Node_22 -> Node_16;
Node_23 -> Node_16;
}

