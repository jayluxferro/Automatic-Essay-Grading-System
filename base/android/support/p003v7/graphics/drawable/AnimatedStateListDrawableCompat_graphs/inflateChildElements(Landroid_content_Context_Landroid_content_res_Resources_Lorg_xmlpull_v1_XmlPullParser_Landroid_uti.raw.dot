digraph "CFG forandroid.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(Landroid\/content\/Context;Landroid\/content\/res\/Resources;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/util\/AttributeSet;Landroid\/content\/res\/Resources$Theme;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getDepth():int type: INTERFACE \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: INVOKE  (r2 I:int) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x003c \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  (r3 I:int) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getDepth():int type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r3 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:7:0x0015 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: CONST  (r4 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x003c \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0019 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: IF  (r3 I:?[int, byte, short, char]) \<= (r0 I:?[int, byte, short, char])  \-\> B:12:0x001c \l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|0x001c: INVOKE  (r2 I:java.lang.String) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE \l0x0020: CONST_STR  (r3 I:java.lang.String) =  \"item\" \l0x0022: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|0x0026: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002c \l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|0x0028: INVOKE  \l  (r5 I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat)\l  (r6 I:android.content.Context)\l  (r7 I:android.content.res.Resources)\l  (r8 I:org.xmlpull.v1.XmlPullParser)\l  (r9 I:android.util.AttributeSet)\l  (r10 I:android.content.res.Resources$Theme)\l android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):int type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|0x002c: INVOKE  (r2 I:java.lang.String) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE \l0x0030: CONST_STR  (r3 I:java.lang.String) =  \"transition\" \l0x0032: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0036|0x0036: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0006 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0038|0x0038: INVOKE  \l  (r5 I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat)\l  (r6 I:android.content.Context)\l  (r7 I:android.content.res.Resources)\l  (r8 I:org.xmlpull.v1.XmlPullParser)\l  (r9 I:android.util.AttributeSet)\l  (r10 I:android.content.res.Resources$Theme)\l android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):int type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x003c|0x003c: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements((r5 'this' I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r6 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.content.res.Resources$Theme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_18;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_18;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_1[style=dashed];
Node_10 -> Node_12;
Node_10 -> Node_1[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_1;
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_16 -> Node_17[style=dashed];
Node_17 -> Node_1;
}

