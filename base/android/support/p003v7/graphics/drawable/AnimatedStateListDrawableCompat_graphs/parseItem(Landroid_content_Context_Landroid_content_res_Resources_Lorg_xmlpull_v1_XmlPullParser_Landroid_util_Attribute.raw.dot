digraph "CFG forandroid.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(Landroid\/content\/Context;Landroid\/content\/res\/Resources;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/util\/AttributeSet;Landroid\/content\/res\/Resources$Theme;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int[]) =  android.support.v7.appcompat.R.styleable.AnimatedStateListDrawableItem int[] \l0x0002: INVOKE  (r0 I:android.content.res.TypedArray) = \l  (r6 I:android.content.res.Resources)\l  (r9 I:android.content.res.Resources$Theme)\l  (r8 I:android.util.AttributeSet)\l  (r0 I:int[])\l android.support.v4.content.res.TypedArrayUtils.obtainAttributes(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray type: STATIC \l0x0006: SGET  (r1 I:int) =  android.support.v7.appcompat.R.styleable.AnimatedStateListDrawableItem_android_id int \l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: INVOKE  (r1 I:int) = \l  (r0 I:android.content.res.TypedArray)\l  (r1 I:int)\l  (r2 I:int)\l android.content.res.TypedArray.getResourceId(int, int):int type: VIRTUAL \l0x000d: SGET  (r2 I:int) =  android.support.v7.appcompat.R.styleable.AnimatedStateListDrawableItem_android_drawable int \l0x000f: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0010: INVOKE  (r2 I:int) = \l  (r0 I:android.content.res.TypedArray)\l  (r2 I:int)\l  (r3 I:int)\l android.content.res.TypedArray.getResourceId(int, int):int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: INVOKE  (r5 I:android.graphics.drawable.Drawable) = (r5 I:android.content.Context), (r2 I:int) android.support.v7.content.res.AppCompatResources.getDrawable(android.content.Context, int):android.graphics.drawable.Drawable type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: INVOKE  (r0 I:android.content.res.TypedArray) android.content.res.TypedArray.recycle():void type: VIRTUAL \l0x001f: INVOKE  (r0 I:int[]) = \l  (r4 I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat)\l  (r8 I:android.util.AttributeSet)\l android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.extractStateSet(android.util.AttributeSet):int[] type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x006c \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: INVOKE  (r5 I:int) = (r7 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l0x0029: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002d \l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0051 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: INVOKE  (r5 I:java.lang.String) = (r7 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE \l0x0034: CONST_STR  (r2 I:java.lang.String) =  \"vector\" \l0x0036: INVOKE  (r5 I:boolean) = (r5 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|0x003a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0041 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|0x003c: INVOKE  (r5 I:android.support.graphics.drawable.VectorDrawableCompat) = \l  (r6 I:android.content.res.Resources)\l  (r7 I:org.xmlpull.v1.XmlPullParser)\l  (r8 I:android.util.AttributeSet)\l  (r9 I:android.content.res.Resources$Theme)\l android.support.graphics.drawable.VectorDrawableCompat.createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):android.support.graphics.drawable.VectorDrawableCompat type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x0041|0x0041: SGET  (r5 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0043: CONST  (r2 I:?[int, float, short, byte, char]) = (21 ?[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0045|0x0045: IF  (r5 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:17:0x004c \l}"];
Node_16 [shape=record,label="{16\:\ 0x0047|0x0047: INVOKE  (r5 I:android.graphics.drawable.Drawable) = \l  (r6 I:android.content.res.Resources)\l  (r7 I:org.xmlpull.v1.XmlPullParser)\l  (r8 I:android.util.AttributeSet)\l  (r9 I:android.content.res.Resources$Theme)\l android.graphics.drawable.Drawable.createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):android.graphics.drawable.Drawable type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x004c|0x004c: INVOKE  (r5 I:android.graphics.drawable.Drawable) = \l  (r6 I:android.content.res.Resources)\l  (r7 I:org.xmlpull.v1.XmlPullParser)\l  (r8 I:android.util.AttributeSet)\l android.graphics.drawable.Drawable.createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet):android.graphics.drawable.Drawable type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x0051|0x0051: NEW_INSTANCE  (r5 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x0053: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0055: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0058: INVOKE  (r7 I:java.lang.String) = (r7 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getPositionDescription():java.lang.String type: INTERFACE \l0x005c: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005f: CONST_STR  (r7 I:java.lang.String) =  \": \<item\> tag requires a 'drawable' attribute or child tag defining a drawable\" \l0x0061: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0064: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0068: INVOKE  \l  (r5 I:org.xmlpull.v1.XmlPullParserException)\l  (r6 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x006b|0x006b: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x006c|0x006c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0075 \l}"];
Node_21 [shape=record,label="{21\:\ 0x006e|0x006e: IGET  (r6 I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState) = \l  (r4 I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat)\l android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.mState android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState \l0x0070: INVOKE  (r5 I:int) = \l  (r6 I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState)\l  (r0 I:int[])\l  (r5 I:android.graphics.drawable.Drawable)\l  (r1 I:int)\l android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.AnimatedStateListState.addStateSet(int[], android.graphics.drawable.Drawable, int):int type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x0074|0x0074: RETURN  (r5 I:int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0075|0x0075: NEW_INSTANCE  (r5 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x0077: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0079: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x007c: INVOKE  (r7 I:java.lang.String) = (r7 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getPositionDescription():java.lang.String type: INTERFACE \l0x0080: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0083: CONST_STR  (r7 I:java.lang.String) =  \": \<item\> tag requires a 'drawable' attribute or child tag defining a drawable\" \l0x0085: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0088: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x008c: INVOKE  \l  (r5 I:org.xmlpull.v1.XmlPullParserException)\l  (r6 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x008f|0x008f: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseItem((r4 'this' I:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r5 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.content.res.Resources$Theme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_20;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_6[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_18;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_20;
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_23 -> Node_24;
}

