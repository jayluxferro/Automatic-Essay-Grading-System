digraph "CFG forandroid.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(Landroid\/content\/Context;Landroid\/content\/res\/Resources;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/util\/AttributeSet;Landroid\/content\/res\/Resources$Theme;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.content.res.TypedArray r0 = android.support.p000v4.content.res.TypedArrayUtils.obtainAttributes(r9, r12, r11, android.support.p003v7.appcompat.C0422R.styleable.AnimatedStateListDrawableTransition)\lint r1 = r0.getResourceId(android.support.p003v7.appcompat.C0422R.styleable.AnimatedStateListDrawableTransition_android_fromId, \-1)\lint r3 = r0.getResourceId(android.support.p003v7.appcompat.C0422R.styleable.AnimatedStateListDrawableTransition_android_toId, \-1)\lint r4 = r0.getResourceId(android.support.p003v7.appcompat.C0422R.styleable.AnimatedStateListDrawableTransition_android_drawable, \-1)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|if (r4 \<= 0) goto L_0x0020\l}"];
Node_2 [shape=record,label="{2\:\ 0x001b|android.graphics.drawable.Drawable r4 = android.support.p003v7.content.res.AppCompatResources.getDrawable(r8, r4)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|r4 = null\l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|PHI: r4 \l  PHI: (r4v2 android.graphics.drawable.Drawable) = (r4v10 android.graphics.drawable.Drawable), (r4v11 android.graphics.drawable.Drawable) binds: [B:3:0x0020, B:2:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|boolean r5 = r0.getBoolean(android.support.p003v7.appcompat.C0422R.styleable.AnimatedStateListDrawableTransition_android_reversible, false)\lr0.recycle()\l}"];
Node_5 [shape=record,label="{5\:\ 0x002b|if (r4 != null) goto L_0x0074\l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|LOOP_START\lLOOP:0: B:6:0x002d\-\>B:7:0x0032\l|int r0 = r10.next()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0032|LOOP_END\lLOOP:0: B:6:0x002d\-\>B:7:0x0032\l|if (r0 != 4) goto L_0x0035\l}"];
Node_8 [shape=record,label="{8\:\ 0x0035}"];
Node_9 [shape=record,label="{9\:\ 0x0036|if (r0 != 2) goto L_0x0059\l}"];
Node_10 [shape=record,label="{10\:\ 0x0038}"];
Node_11 [shape=record,label="{11\:\ 0x0042|if (r10.getName().equals(\"animated\-vector\") == false) goto L_0x0049\l}"];
Node_12 [shape=record,label="{12\:\ 0x0044|android.support.graphics.drawable.AnimatedVectorDrawableCompat r4 = android.support.graphics.drawable.AnimatedVectorDrawableCompat.createFromXmlInner(r8, r9, r10, r11, r12)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0049}"];
Node_14 [shape=record,label="{14\:\ 0x004d|if (android.os.Build.VERSION.SDK_INT \< 21) goto L_0x0054\l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|android.graphics.drawable.Drawable r4 = android.graphics.drawable.Drawable.createFromXmlInner(r9, r10, r11, r12)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0054|android.graphics.drawable.Drawable r4 = android.graphics.drawable.Drawable.createFromXmlInner(r9, r10, r11)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0059|java.lang.StringBuilder r9 = new java.lang.StringBuilder()\lr9.append(r10.getPositionDescription())\lr9.append(TRANSITION_MISSING_DRAWABLE_ERROR)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0073|throw new org.xmlpull.p030v1.XmlPullParserException(r9.toString())\l}"];
Node_19 [shape=record,label="{19\:\ 0x0074|PHI: r4 \l  PHI: (r4v3 android.graphics.drawable.Drawable) = (r4v2 android.graphics.drawable.Drawable), (r4v7 android.graphics.drawable.Drawable), (r4v8 android.graphics.drawable.Drawable), (r4v9 android.graphics.drawable.Drawable) binds: [B:5:0x002b, B:16:0x0054, B:15:0x004f, B:12:0x0044] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == null) goto L_0x009c\l}"];
Node_20 [shape=record,label="{20\:\ 0x0076|if (r1 == \-1) goto L_0x0081\l}"];
Node_21 [shape=record,label="{21\:\ 0x0078|if (r3 == \-1) goto L_0x0081\l}"];
Node_22 [shape=record,label="{22\:\ 0x007a}"];
Node_23 [shape=record,label="{23\:\ 0x0080|RETURN\l|return r7.mState.addTransition(r1, r3, r4, r5)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0081|java.lang.StringBuilder r9 = new java.lang.StringBuilder()\lr9.append(r10.getPositionDescription())\lr9.append(TRANSITION_MISSING_FROM_TO_ID)\l}"];
Node_25 [shape=record,label="{25\:\ 0x009b|throw new org.xmlpull.p030v1.XmlPullParserException(r9.toString())\l}"];
Node_26 [shape=record,label="{26\:\ 0x009c|java.lang.StringBuilder r9 = new java.lang.StringBuilder()\lr9.append(r10.getPositionDescription())\lr9.append(TRANSITION_MISSING_DRAWABLE_ERROR)\l}"];
Node_27 [shape=record,label="{27\:\ 0x00b6|throw new org.xmlpull.p030v1.XmlPullParserException(r9.toString())\l}"];
Node_28 [shape=record,label="{28\:\ 0x0035|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition((r7v0 'this' android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r8v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 android.content.res.Resources$Theme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_19;
Node_6 -> Node_7;
Node_7 -> Node_6[style=dashed];
Node_7 -> Node_28;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_19;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_19;
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_26;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_28 -> Node_8;
}

