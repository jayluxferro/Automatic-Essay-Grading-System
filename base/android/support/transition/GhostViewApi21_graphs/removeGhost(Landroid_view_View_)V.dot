digraph "CFG forandroid.support.transition.GhostViewApi21.removeGhost(Landroid\/view\/View;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|fetchRemoveGhostMethod()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (sRemoveGhostMethod == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|SYNTHETIC\lSplitter:B:2:0x0007\l}"];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ IllegalAccessException \-\> 0x001f, InvocationTargetException \-\> 0x0014 \}\lSplitter:B:2:0x0007\l|java.lang.reflect.Method r0 = sRemoveGhostMethod     \/\/ Catch:\{ IllegalAccessException \-\> 0x001f, InvocationTargetException \-\> 0x0014 \}\ljava.lang.Object[] r2 = new java.lang.Object[]\{r4\}\lr0.invoke((java.lang.Object) null, r2)     \/\/ Catch:\{ IllegalAccessException \-\> 0x001f, InvocationTargetException \-\> 0x0014 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|ExcHandler: InvocationTargetException (r4v1 'e' java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE])\lSplitter:B:2:0x0007\l|java.lang.reflect.InvocationTargetException r4 = move\-exception\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015}"];
Node_6 [shape=record,label="{6\:\ 0x001e|throw new java.lang.RuntimeException(r4.getCause())\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lExcHandler: IllegalAccessException (unused java.lang.IllegalAccessException)\lSplitter:B:2:0x0007\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{static void android.support.transition.GhostViewApi21.removeGhost((r4v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_2 -> Node_7;
Node_2 -> Node_4;
Node_3 -> Node_7;
Node_3 -> Node_4;
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

