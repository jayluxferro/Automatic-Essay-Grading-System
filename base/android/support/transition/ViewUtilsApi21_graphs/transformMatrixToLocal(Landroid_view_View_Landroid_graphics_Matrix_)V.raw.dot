digraph "CFG forandroid.support.transition.ViewUtilsApi21.transformMatrixToLocal(Landroid\/view\/View;Landroid\/graphics\/Matrix;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:android.support.transition.ViewUtilsApi21) android.support.transition.ViewUtilsApi21.fetchTransformMatrixToLocalMethod():void type: DIRECT \l0x0003: SGET  (r0 I:java.lang.reflect.Method) =  android.support.transition.ViewUtilsApi21.sTransformMatrixToLocalMethod java.lang.reflect.Method \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|SYNTHETIC\lSplitter:B:2:0x0007\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0007\l|0x0007: SGET  (r0 I:java.lang.reflect.Method) =  android.support.transition.ViewUtilsApi21.sTransformMatrixToLocalMethod java.lang.reflect.Method A[Catch:\{ IllegalAccessException \-\> 0x001e, InvocationTargetException \-\> 0x0013 \}, TRY_ENTER]\l0x0009: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \-\> 0x001e, InvocationTargetException \-\> 0x0013 \}]\l0x000a: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ IllegalAccessException \-\> 0x001e, InvocationTargetException \-\> 0x0013 \}]\l0x000c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \-\> 0x001e, InvocationTargetException \-\> 0x0013 \}]\l0x000d: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \-\> 0x001e, InvocationTargetException \-\> 0x0013 \}]\l0x000f: INVOKE  \l  (r0 I:java.lang.reflect.Method)\l  (r4 I:java.lang.Object)\l  (r1 I:java.lang.Object[])\l java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x001e, InvocationTargetException \-\> 0x0013 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|ExcHandler: InvocationTargetException null\lSplitter:B:2:0x0007\l|0x0013: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: NEW_INSTANCE  (r5 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0016: INVOKE  (r4 I:java.lang.Throwable) = (r4 I:java.lang.reflect.InvocationTargetException) java.lang.reflect.InvocationTargetException.getCause():java.lang.Throwable type: VIRTUAL \l0x001a: INVOKE  \l  (r5 I:java.lang.RuntimeException)\l  (r4 I:java.lang.Throwable)\l java.lang.RuntimeException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lExcHandler: IllegalAccessException null\lSplitter:B:2:0x0007\l}"];
MethodNode[shape=record,label="{public void android.support.transition.ViewUtilsApi21.transformMatrixToLocal((r3 'this' I:android.support.transition.ViewUtilsApi21 A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.graphics.Matrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_2 -> Node_5;
Node_3 -> Node_9;
Node_3 -> Node_5;
Node_3 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_9 -> Node_8;
}

