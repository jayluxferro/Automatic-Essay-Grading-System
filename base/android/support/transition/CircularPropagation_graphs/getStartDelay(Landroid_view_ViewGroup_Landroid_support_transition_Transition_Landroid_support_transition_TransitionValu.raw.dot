digraph "CFG forandroid.support.transition.CircularPropagation.getStartDelay(Landroid\/view\/ViewGroup;Landroid\/support\/transition\/Transition;Landroid\/support\/transition\/TransitionValues;Landroid\/support\/transition\/TransitionValues;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: RETURN  (r0 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0014 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: INVOKE  (r3 I:int) = \l  (r8 I:android.support.transition.CircularPropagation)\l  (r11 I:android.support.transition.TransitionValues)\l android.support.transition.CircularPropagation.getViewVisibility(android.support.transition.TransitionValues):int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0011 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|0x0011: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0012: CONST  (r12 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|0x0014: CONST  (r12 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|0x0015: INVOKE  (r3 I:int) = \l  (r8 I:android.support.transition.CircularPropagation)\l  (r11 I:android.support.transition.TransitionValues)\l android.support.transition.CircularPropagation.getViewX(android.support.transition.TransitionValues):int type: VIRTUAL \l0x0019: INVOKE  (r11 I:int) = \l  (r8 I:android.support.transition.CircularPropagation)\l  (r11 I:android.support.transition.TransitionValues)\l android.support.transition.CircularPropagation.getViewY(android.support.transition.TransitionValues):int type: VIRTUAL \l0x001d: INVOKE  (r4 I:android.graphics.Rect) = (r10 I:android.support.transition.Transition) android.support.transition.Transition.getEpicenter():android.graphics.Rect type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|0x0021: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002c \l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|0x0023: INVOKE  (r2 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.centerX():int type: VIRTUAL \l0x0027: INVOKE  (r4 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.centerY():int type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|0x002c: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x002d: NEW_ARRAY  (r5 I:int[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x002f: INVOKE  (r9 I:android.view.ViewGroup), (r5 I:int[]) android.view.ViewGroup.getLocationOnScreen(int[]):void type: VIRTUAL \l0x0032: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0033: AGET  (r6 I:?[int, float]) = (r5 I:?[int, float][]), (r6 I:?[int, short, byte, char]) \l0x0035: INVOKE  (r7 I:int) = (r9 I:android.view.ViewGroup) android.view.ViewGroup.getWidth():int type: VIRTUAL \l0x0039: ARITH  (r7 I:int) = (r7 I:int) \/ (r4 I:int) \l0x003a: ARITH  (r6 I:int) = (r6 I:int) + (r7 I:int) \l0x003b: CAST  (r6 I:float) = (float) (r6 I:int) \l0x003c: INVOKE  (r7 I:float) = (r9 I:android.view.ViewGroup) android.view.ViewGroup.getTranslationX():float type: VIRTUAL \l0x0040: ARITH  (r6 I:float) = (r6 I:float) + (r7 I:float) \l0x0041: INVOKE  (r6 I:int) = (r6 I:float) java.lang.Math.round(float):int type: STATIC \l0x0045: AGET  (r2 I:?[int, float]) = (r5 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0047: INVOKE  (r5 I:int) = (r9 I:android.view.ViewGroup) android.view.ViewGroup.getHeight():int type: VIRTUAL \l0x004b: ARITH  (r5 I:int) = (r5 I:int) \/ (r4 I:int) \l0x004c: ARITH  (r2 I:int) = (r2 I:int) + (r5 I:int) \l0x004d: CAST  (r2 I:float) = (float) (r2 I:int) \l0x004e: INVOKE  (r4 I:float) = (r9 I:android.view.ViewGroup) android.view.ViewGroup.getTranslationY():float type: VIRTUAL \l0x0052: ARITH  (r2 I:float) = (r2 I:float) + (r4 I:float) \l0x0053: INVOKE  (r4 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x0057: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0058|0x0058: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0059: CAST  (r11 I:float) = (float) (r11 I:int) \l0x005a: CAST  (r2 I:float) = (float) (r2 I:int) \l0x005b: CAST  (r4 I:float) = (float) (r4 I:int) \l0x005c: INVOKE  (r11 I:float) = (r3 I:float), (r11 I:float), (r2 I:float), (r4 I:float) android.support.transition.CircularPropagation.distance(float, float, float, float):float type: STATIC \l0x0060: INVOKE  (r2 I:int) = (r9 I:android.view.ViewGroup) android.view.ViewGroup.getWidth():int type: VIRTUAL \l0x0064: CAST  (r2 I:float) = (float) (r2 I:int) \l0x0065: INVOKE  (r9 I:int) = (r9 I:android.view.ViewGroup) android.view.ViewGroup.getHeight():int type: VIRTUAL \l0x0069: CAST  (r9 I:float) = (float) (r9 I:int) \l0x006a: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006b: INVOKE  (r9 I:float) = (r3 I:float), (r3 I:float), (r2 I:float), (r9 I:float) android.support.transition.CircularPropagation.distance(float, float, float, float):float type: STATIC \l0x006f: ARITH  (r11 I:float) = (r11 I:float) \/ (r9 I:float) \l0x0070: INVOKE  (r9 I:long) = (r10 I:android.support.transition.Transition) android.support.transition.Transition.getDuration():long type: VIRTUAL \l0x0074: CMP_L  (r0 I:int) = (r9 I:long), (r0 I:long) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0076|0x0076: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:18:0x007a \l}"];
Node_17 [shape=record,label="{17\:\ 0x0078|0x0078: CONST  (r9 I:?[long, double]) = (300(0x12c, double:1.48E\-321) ?[long, double]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x007a|0x007a: CAST  (r0 I:long) = (long) (r12 I:int) \l0x007b: ARITH  (r9 I:long) = (r9 I:long) * (r0 I:long) \l0x007d: CAST  (r9 I:float) = (float) (r9 I:long) \l0x007e: IGET  (r10 I:float) = (r8 I:android.support.transition.CircularPropagation) android.support.transition.CircularPropagation.mPropagationSpeed float \l0x0080: ARITH  (r9 I:float) = (r9 I:float) \/ (r10 I:float) \l0x0081: ARITH  (r9 I:float) = (r9 I:float) * (r11 I:float) \l0x0083: INVOKE  (r9 I:int) = (r9 I:float) java.lang.Math.round(float):int type: STATIC \l0x0087: CAST  (r9 I:long) = (long) (r9 I:int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0088|0x0088: RETURN  (r9 I:long) \l}"];
MethodNode[shape=record,label="{public long android.support.transition.CircularPropagation.getStartDelay((r8 'this' I:android.support.transition.CircularPropagation A[IMMUTABLE_TYPE, THIS]), (r9 I:android.view.ViewGroup A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.support.transition.Transition A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.support.transition.TransitionValues A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.support.transition.TransitionValues A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

