digraph "CFG forandroid.support.transition.ChangeTransform.Transforms.hashCode()I" {
subgraph cluster_Region_227537403 {
label = "R(4:0|28|(1:30)|32)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = 0\l}"];
Node_28 [shape=record,label="{28\:\ 0x0075|PHI: r3 \l  PHI: (r3v17 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r0 = (((((((((((((r4.mTranslationX != 0.0f ? java.lang.Float.floatToIntBits(r4.mTranslationX) : 0) * 31) + (r4.mTranslationY != 0.0f ? java.lang.Float.floatToIntBits(r4.mTranslationY) : 0)) * 31) + (r4.mTranslationZ != 0.0f ? java.lang.Float.floatToIntBits(r4.mTranslationZ) : 0)) * 31) + (r4.mScaleX != 0.0f ? java.lang.Float.floatToIntBits(r4.mScaleX) : 0)) * 31) + (r4.mScaleY != 0.0f ? java.lang.Float.floatToIntBits(r4.mScaleY) : 0)) * 31) + (r4.mRotationX != 0.0f ? java.lang.Float.floatToIntBits(r4.mRotationX) : 0)) * 31) + (r4.mRotationY != 0.0f ? java.lang.Float.floatToIntBits(r4.mRotationY) : 0)) * 31\l}"];
subgraph cluster_IfRegion_1176375375 {
label = "IF [B:29:0x007c] THEN: R(1:30) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x007c|if (r4.mRotationZ != 0.0f) goto L_0x007e\l}"];
subgraph cluster_Region_1382864839 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x007e|int r1 = java.lang.Float.floatToIntBits(r4.mRotationZ)\l}"];
}
}
Node_32 [shape=record,label="{32\:\ 0x0085|RETURN\l|return r0 + r1\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0006}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000f}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0010|PHI: r0 \l  PHI: (r0v2 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0016}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0018}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001f}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0020|PHI: r3 \l  PHI: (r3v2 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0027}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0029}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0030}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0031|PHI: r3 \l  PHI: (r3v5 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0038}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x003a}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0041}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0042|PHI: r3 \l  PHI: (r3v8 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0049}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x004b}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0052}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0053|PHI: r3 \l  PHI: (r3v11 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x005a}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x005c}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0063}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0064|PHI: r3 \l  PHI: (r3v14 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x006b}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x006d}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0074}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0084|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v3 int) binds: [B:29:0x007c, B:30:0x007e] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public int android.support.transition.ChangeTransform.Transforms.hashCode((r4v0 'this' android.support.transition.ChangeTransform$Transforms A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_31[style=dashed];
Node_30 -> Node_31;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_31 -> Node_32;
}

