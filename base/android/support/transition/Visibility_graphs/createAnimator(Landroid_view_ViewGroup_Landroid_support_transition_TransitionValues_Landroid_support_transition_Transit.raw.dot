digraph "CFG forandroid.support.transition.Visibility.createAnimator(Landroid\/view\/ViewGroup;Landroid\/support\/transition\/TransitionValues;Landroid\/support\/transition\/TransitionValues;)Landroid\/animation\/Animator;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.support.transition.Visibility$VisibilityInfo) = \l  (r8 I:android.support.transition.Visibility)\l  (r10 I:android.support.transition.TransitionValues)\l  (r11 I:android.support.transition.TransitionValues)\l android.support.transition.Visibility.getVisibilityChangeInfo(android.support.transition.TransitionValues, android.support.transition.TransitionValues):android.support.transition.Visibility$VisibilityInfo type: DIRECT \l0x0004: IGET  (r1 I:boolean) = (r0 I:android.support.transition.Visibility$VisibilityInfo) android.support.transition.Visibility.VisibilityInfo.mVisibilityChange boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r1 I:android.view.ViewGroup) = (r0 I:android.support.transition.Visibility$VisibilityInfo) android.support.transition.Visibility.VisibilityInfo.mStartParent android.view.ViewGroup \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IGET  (r1 I:android.view.ViewGroup) = (r0 I:android.support.transition.Visibility$VisibilityInfo) android.support.transition.Visibility.VisibilityInfo.mEndParent android.view.ViewGroup \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002e \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IGET  (r1 I:boolean) = (r0 I:android.support.transition.Visibility$VisibilityInfo) android.support.transition.Visibility.VisibilityInfo.mFadeIn boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0021 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: IGET  (r5 I:int) = (r0 I:android.support.transition.Visibility$VisibilityInfo) android.support.transition.Visibility.VisibilityInfo.mStartVisibility int \l0x0016: IGET  (r7 I:int) = (r0 I:android.support.transition.Visibility$VisibilityInfo) android.support.transition.Visibility.VisibilityInfo.mEndVisibility int \l0x0018: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0019: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x001a: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x001b: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x001c: INVOKE  (r9 I:android.animation.Animator) = \l  (r2 I:android.support.transition.Visibility)\l  (r3 I:android.view.ViewGroup)\l  (r4 I:android.support.transition.TransitionValues)\l  (r5 I:int)\l  (r6 I:android.support.transition.TransitionValues)\l  (r7 I:int)\l android.support.transition.Visibility.onAppear(android.view.ViewGroup, android.support.transition.TransitionValues, int, android.support.transition.TransitionValues, int):android.animation.Animator type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: RETURN  (r9 I:android.animation.Animator) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: IGET  (r3 I:int) = (r0 I:android.support.transition.Visibility$VisibilityInfo) android.support.transition.Visibility.VisibilityInfo.mStartVisibility int \l0x0023: IGET  (r5 I:int) = (r0 I:android.support.transition.Visibility$VisibilityInfo) android.support.transition.Visibility.VisibilityInfo.mEndVisibility int \l0x0025: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0026: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0027: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0028: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0029: INVOKE  (r9 I:android.animation.Animator) = \l  (r0 I:android.support.transition.Visibility)\l  (r1 I:android.view.ViewGroup)\l  (r2 I:android.support.transition.TransitionValues)\l  (r3 I:int)\l  (r4 I:android.support.transition.TransitionValues)\l  (r5 I:int)\l android.support.transition.Visibility.onDisappear(android.view.ViewGroup, android.support.transition.TransitionValues, int, android.support.transition.TransitionValues, int):android.animation.Animator type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: RETURN  (r9 I:android.animation.Animator) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|0x002e: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: RETURN  (r9 I:android.animation.Animator) \l}"];
MethodNode[shape=record,label="{public android.animation.Animator android.support.transition.Visibility.createAnimator((r8 'this' I:android.support.transition.Visibility A[IMMUTABLE_TYPE, THIS]), (r9 I:android.view.ViewGroup A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.support.transition.TransitionValues A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.support.transition.TransitionValues A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
}

