digraph "CFG forandroid.support.transition.RectEvaluator.evaluate(FLandroid\/graphics\/Rect;Landroid\/graphics\/Rect;)Landroid\/graphics\/Rect;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r7 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0002: IGET  (r1 I:int) = (r8 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0004: IGET  (r2 I:int) = (r7 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0006: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x0007: CAST  (r1 I:float) = (float) (r1 I:int) \l0x0008: ARITH  (r1 I:float) = (r1 I:float) * (r6 I:float) \l0x000a: CAST  (r1 I:int) = (int) (r1 I:float) \l0x000b: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x000c: IGET  (r1 I:int) = (r7 I:android.graphics.Rect) android.graphics.Rect.top int \l0x000e: IGET  (r2 I:int) = (r8 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0010: IGET  (r3 I:int) = (r7 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0012: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x0013: CAST  (r2 I:float) = (float) (r2 I:int) \l0x0014: ARITH  (r2 I:float) = (r2 I:float) * (r6 I:float) \l0x0016: CAST  (r2 I:int) = (int) (r2 I:float) \l0x0017: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x0018: IGET  (r2 I:int) = (r7 I:android.graphics.Rect) android.graphics.Rect.right int \l0x001a: IGET  (r3 I:int) = (r8 I:android.graphics.Rect) android.graphics.Rect.right int \l0x001c: IGET  (r4 I:int) = (r7 I:android.graphics.Rect) android.graphics.Rect.right int \l0x001e: ARITH  (r3 I:int) = (r3 I:int) \- (r4 I:int) \l0x001f: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0020: ARITH  (r3 I:float) = (r3 I:float) * (r6 I:float) \l0x0022: CAST  (r3 I:int) = (int) (r3 I:float) \l0x0023: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0024: IGET  (r3 I:int) = (r7 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x0026: IGET  (r8 I:int) = (r8 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x0028: IGET  (r7 I:int) = (r7 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x002a: ARITH  (r8 I:int) = (r8 I:int) \- (r7 I:int) \l0x002b: CAST  (r7 I:float) = (float) (r8 I:int) \l0x002c: ARITH  (r7 I:float) = (r7 I:float) * (r6 I:float) \l0x002e: CAST  (r6 I:int) = (int) (r7 I:float) \l0x002f: ARITH  (r3 I:int) = (r3 I:int) + (r6 I:int) \l0x0030: IGET  (r6 I:android.graphics.Rect) = (r5 I:android.support.transition.RectEvaluator) android.support.transition.RectEvaluator.mRect android.graphics.Rect \l}"];
Node_1 [shape=record,label="{1\:\ 0x0032|0x0032: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x003a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0034|0x0034: NEW_INSTANCE  (r6 I:android.graphics.Rect) =  android.graphics.Rect \l0x0036: INVOKE  \l  (r6 I:android.graphics.Rect)\l  (r0 I:int)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:int)\l android.graphics.Rect.\<init\>(int, int, int, int):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0039|0x0039: RETURN  (r6 I:android.graphics.Rect) \l}"];
Node_4 [shape=record,label="{4\:\ 0x003a|0x003a: IGET  (r6 I:android.graphics.Rect) = (r5 I:android.support.transition.RectEvaluator) android.support.transition.RectEvaluator.mRect android.graphics.Rect \l0x003c: INVOKE  \l  (r6 I:android.graphics.Rect)\l  (r0 I:int)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:int)\l android.graphics.Rect.set(int, int, int, int):void type: VIRTUAL \l0x003f: IGET  (r6 I:android.graphics.Rect) = (r5 I:android.support.transition.RectEvaluator) android.support.transition.RectEvaluator.mRect android.graphics.Rect \l}"];
Node_5 [shape=record,label="{5\:\ 0x0041|0x0041: RETURN  (r6 I:android.graphics.Rect) \l}"];
MethodNode[shape=record,label="{public android.graphics.Rect android.support.transition.RectEvaluator.evaluate((r5 'this' I:android.support.transition.RectEvaluator A[IMMUTABLE_TYPE, THIS]), (r6 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

