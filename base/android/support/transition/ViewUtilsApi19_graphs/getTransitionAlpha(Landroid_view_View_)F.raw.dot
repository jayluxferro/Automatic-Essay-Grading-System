digraph "CFG forandroid.support.transition.ViewUtilsApi19.getTransitionAlpha(Landroid\/view\/View;)F" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:android.support.transition.ViewUtilsApi19) android.support.transition.ViewUtilsApi19.fetchGetTransitionAlphaMethod():void type: DIRECT \l0x0003: SGET  (r0 I:java.lang.reflect.Method) =  android.support.transition.ViewUtilsApi19.sGetTransitionAlphaMethod java.lang.reflect.Method \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|SYNTHETIC\lSplitter:B:2:0x0007\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0007\l|0x0007: SGET  (r0 I:java.lang.reflect.Method) =  android.support.transition.ViewUtilsApi19.sGetTransitionAlphaMethod java.lang.reflect.Method A[Catch:\{ IllegalAccessException \-\> 0x0022, InvocationTargetException \-\> 0x0017 \}, TRY_ENTER]\l0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \-\> 0x0022, InvocationTargetException \-\> 0x0017 \}]\l0x000a: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ IllegalAccessException \-\> 0x0022, InvocationTargetException \-\> 0x0017 \}]\l0x000c: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Method)\l  (r3 I:java.lang.Object)\l  (r1 I:java.lang.Object[])\l java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x0022, InvocationTargetException \-\> 0x0017 \}]\l0x0010: CHECK_CAST  (r0 I:java.lang.Float) = (java.lang.Float) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ IllegalAccessException \-\> 0x0022, InvocationTargetException \-\> 0x0017 \}]\l0x0012: INVOKE  (r0 I:float) = (r0 I:java.lang.Float) java.lang.Float.floatValue():float type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x0022, InvocationTargetException \-\> 0x0017 \}]\l0x0015: NOP   A[TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: RETURN  (r0 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|ExcHandler: InvocationTargetException null\lSplitter:B:2:0x0007\l|0x0017: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x001a: INVOKE  (r3 I:java.lang.Throwable) = (r3 I:java.lang.reflect.InvocationTargetException) java.lang.reflect.InvocationTargetException.getCause():java.lang.Throwable type: VIRTUAL \l0x001e: INVOKE  \l  (r0 I:java.lang.RuntimeException)\l  (r3 I:java.lang.Throwable)\l java.lang.RuntimeException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: INVOKE  (r3 I:float) = \l  (r2 I:android.support.transition.ViewUtilsBase)\l  (r3 I:android.view.View)\l android.support.transition.ViewUtilsBase.getTransitionAlpha(android.view.View):float type: SUPER \l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lExcHandler: IllegalAccessException null\lSplitter:B:2:0x0007\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: RETURN  (r3 I:float) \l}"];
MethodNode[shape=record,label="{public float android.support.transition.ViewUtilsApi19.getTransitionAlpha((r2 'this' I:android.support.transition.ViewUtilsApi19 A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_10;
Node_9 -> Node_8;
}

