digraph "CFG forandroid.support.transition.Slide.5.getGoneX(Landroid\/view\/ViewGroup;Landroid\/view\/View;)F" {
subgraph cluster_Region_1499730043 {
label = "R(3:0|(1:4)|(2:(1:6)|(1:7)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|boolean r0 = true\l}"];
subgraph cluster_IfRegion_1987752288 {
label = "IF [B:1:0x0005] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (android.support.p000v4.view.ViewCompat.getLayoutDirection(r5) != 1) goto L_0x0015\l}"];
subgraph cluster_Region_798692617 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0015|r0 = false\l}"];
}
}
subgraph cluster_Region_289253075 {
label = "R(2:(1:6)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_186998243 {
label = "IF [B:2:0x0007] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|PHI: r0 \l  PHI: (r0v2 'isRtl' boolean) = (r0v0 'isRtl' boolean), (r0v1 'isRtl' boolean) binds: [B:1:0x0005, B:4:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == true) goto L_0x0009\l}"];
subgraph cluster_Region_557112548 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r6.getTranslationX() \- ((float) r5.getWidth())\l}"];
}
}
subgraph cluster_Region_1196657045 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return r6.getTranslationX() + ((float) r5.getWidth())\l}"];
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0009}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0017}"];
MethodNode[shape=record,label="{public float android.support.transition.Slide.5.getGoneX((r4v0 'this' android.support.transition.Slide$5 A[IMMUTABLE_TYPE, THIS]), (r5v0 'sceneRoot' android.view.ViewGroup A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'view' android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_4 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_3 -> Node_6;
Node_5 -> Node_7;
}

