digraph "CFG forandroid.support.transition.TransitionUtils.copyViewImage(Landroid\/view\/ViewGroup;Landroid\/view\/View;Landroid\/view\/View;)Landroid\/view\/View;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:android.graphics.Matrix) =  android.graphics.Matrix \l0x0002: INVOKE  (r0 I:android.graphics.Matrix) android.graphics.Matrix.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r1 I:int) = (r9 I:android.view.View) android.view.View.getScrollX():int type: VIRTUAL \l0x0009: NEG  (r1 I:int) = (r1 I:int) \l0x000a: CAST  (r1 I:float) = (float) (r1 I:int) \l0x000b: INVOKE  (r9 I:int) = (r9 I:android.view.View) android.view.View.getScrollY():int type: VIRTUAL \l0x000f: NEG  (r9 I:int) = (r9 I:int) \l0x0010: CAST  (r9 I:float) = (float) (r9 I:int) \l0x0011: INVOKE  (r0 I:android.graphics.Matrix), (r1 I:float), (r9 I:float) android.graphics.Matrix.setTranslate(float, float):void type: VIRTUAL \l0x0014: INVOKE  (r8 I:android.view.View), (r0 I:android.graphics.Matrix) android.support.transition.ViewUtils.transformMatrixToGlobal(android.view.View, android.graphics.Matrix):void type: STATIC \l0x0017: INVOKE  (r7 I:android.view.View), (r0 I:android.graphics.Matrix) android.support.transition.ViewUtils.transformMatrixToLocal(android.view.View, android.graphics.Matrix):void type: STATIC \l0x001a: NEW_INSTANCE  (r9 I:android.graphics.RectF) =  android.graphics.RectF \l0x001c: INVOKE  (r1 I:int) = (r8 I:android.view.View) android.view.View.getWidth():int type: VIRTUAL \l0x0020: CAST  (r1 I:float) = (float) (r1 I:int) \l0x0021: INVOKE  (r2 I:int) = (r8 I:android.view.View) android.view.View.getHeight():int type: VIRTUAL \l0x0025: CAST  (r2 I:float) = (float) (r2 I:int) \l0x0026: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0027: INVOKE  \l  (r9 I:android.graphics.RectF)\l  (r3 I:float)\l  (r3 I:float)\l  (r1 I:float)\l  (r2 I:float)\l android.graphics.RectF.\<init\>(float, float, float, float):void type: DIRECT \l0x002a: INVOKE  \l  (r0 I:android.graphics.Matrix)\l  (r9 I:android.graphics.RectF)\l android.graphics.Matrix.mapRect(android.graphics.RectF):boolean type: VIRTUAL \l0x002d: IGET  (r1 I:float) = (r9 I:android.graphics.RectF) android.graphics.RectF.left float \l0x002f: INVOKE  (r1 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x0033: IGET  (r2 I:float) = (r9 I:android.graphics.RectF) android.graphics.RectF.top float \l0x0035: INVOKE  (r2 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x0039: IGET  (r3 I:float) = (r9 I:android.graphics.RectF) android.graphics.RectF.right float \l0x003b: INVOKE  (r3 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x003f: IGET  (r4 I:float) = (r9 I:android.graphics.RectF) android.graphics.RectF.bottom float \l0x0041: INVOKE  (r4 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x0045: NEW_INSTANCE  (r5 I:android.widget.ImageView) =  android.widget.ImageView \l0x0047: INVOKE  (r6 I:android.content.Context) = (r8 I:android.view.View) android.view.View.getContext():android.content.Context type: VIRTUAL \l0x004b: INVOKE  \l  (r5 I:android.widget.ImageView)\l  (r6 I:android.content.Context)\l android.widget.ImageView.\<init\>(android.content.Context):void type: DIRECT \l0x004e: SGET  (r6 I:android.widget.ImageView$ScaleType) =  android.widget.ImageView.ScaleType.CENTER_CROP android.widget.ImageView$ScaleType \l0x0050: INVOKE  \l  (r5 I:android.widget.ImageView)\l  (r6 I:android.widget.ImageView$ScaleType)\l android.widget.ImageView.setScaleType(android.widget.ImageView$ScaleType):void type: VIRTUAL \l0x0053: INVOKE  (r7 I:android.graphics.Bitmap) = \l  (r8 I:android.view.View)\l  (r0 I:android.graphics.Matrix)\l  (r9 I:android.graphics.RectF)\l  (r7 I:android.view.ViewGroup)\l android.support.transition.TransitionUtils.createViewBitmap(android.view.View, android.graphics.Matrix, android.graphics.RectF, android.view.ViewGroup):android.graphics.Bitmap type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0057|0x0057: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x005c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0059|0x0059: INVOKE  \l  (r5 I:android.widget.ImageView)\l  (r7 I:android.graphics.Bitmap)\l android.widget.ImageView.setImageBitmap(android.graphics.Bitmap):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x005c|0x005c: ARITH  (r7 I:int) = (r3 I:int) \- (r1 I:int) \l0x005e: CONST  (r8 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x0060: INVOKE  (r7 I:int) = (r7 I:int), (r8 I:int) android.view.View.MeasureSpec.makeMeasureSpec(int, int):int type: STATIC \l0x0064: ARITH  (r9 I:int) = (r4 I:int) \- (r2 I:int) \l0x0066: INVOKE  (r8 I:int) = (r9 I:int), (r8 I:int) android.view.View.MeasureSpec.makeMeasureSpec(int, int):int type: STATIC \l0x006a: INVOKE  (r5 I:android.widget.ImageView), (r7 I:int), (r8 I:int) android.widget.ImageView.measure(int, int):void type: VIRTUAL \l0x006d: INVOKE  \l  (r5 I:android.widget.ImageView)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l android.widget.ImageView.layout(int, int, int, int):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0070|0x0070: RETURN  (r5 I:android.view.View) \l}"];
MethodNode[shape=record,label="{static android.view.View android.support.transition.TransitionUtils.copyViewImage((r7 I:android.view.ViewGroup A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

