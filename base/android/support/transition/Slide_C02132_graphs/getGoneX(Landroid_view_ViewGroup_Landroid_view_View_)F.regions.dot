digraph "CFG forandroid.support.transition.Slide.2.getGoneX(Landroid\/view\/ViewGroup;Landroid\/view\/View;)F" {
subgraph cluster_Region_1169511998 {
label = "R(3:0|(1:2)|(2:(1:7)|(1:6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|boolean r1 = true\l}"];
subgraph cluster_IfRegion_512407002 {
label = "IF [B:1:0x0005] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (android.support.p000v4.view.ViewCompat.getLayoutDirection(r3) != 1) goto L_0x0008\l}"];
subgraph cluster_Region_1477157741 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|r1 = false\l}"];
}
}
subgraph cluster_Region_225654224 {
label = "R(2:(1:7)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1626077337 {
label = "IF [B:3:0x0009] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v2 boolean) binds: [B:1:0x0005, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == true) goto L_0x000b\l}"];
subgraph cluster_Region_1401479902 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return r4.getTranslationX() + ((float) r3.getWidth())\l}"];
}
}
subgraph cluster_Region_1543470242 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r4.getTranslationX() \- ((float) r3.getWidth())\l}"];
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x000b}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0016}"];
MethodNode[shape=record,label="{public float android.support.transition.Slide.2.getGoneX((r2v0 'this' android.support.transition.Slide$2 A[IMMUTABLE_TYPE, THIS]), (r3v0 android.view.ViewGroup A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
}

