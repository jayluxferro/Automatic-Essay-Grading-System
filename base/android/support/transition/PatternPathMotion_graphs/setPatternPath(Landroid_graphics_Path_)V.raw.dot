digraph "CFG forandroid.support.transition.PatternPathMotion.setPatternPath(Landroid\/graphics\/Path;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:android.graphics.PathMeasure) =  android.graphics.PathMeasure \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  \l  (r0 I:android.graphics.PathMeasure)\l  (r9 I:android.graphics.Path)\l  (r1 I:boolean)\l android.graphics.PathMeasure.\<init\>(android.graphics.Path, boolean):void type: DIRECT \l0x0006: INVOKE  (r2 I:float) = (r0 I:android.graphics.PathMeasure) android.graphics.PathMeasure.getLength():float type: VIRTUAL \l0x000a: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000b: NEW_ARRAY  (r3 I:float[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x000d: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: INVOKE  \l  (r0 I:android.graphics.PathMeasure)\l  (r2 I:float)\l  (r3 I:float[])\l  (r4 I:float[])\l android.graphics.PathMeasure.getPosTan(float, float[], float[]):boolean type: VIRTUAL \l0x0011: AGET  (r2 I:?[int, float]) = (r3 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x0013: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0014: AGET  (r6 I:?[int, float]) = (r3 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l0x0016: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0017: INVOKE  \l  (r0 I:android.graphics.PathMeasure)\l  (r7 I:float)\l  (r3 I:float[])\l  (r4 I:float[])\l android.graphics.PathMeasure.getPosTan(float, float[], float[]):boolean type: VIRTUAL \l0x001a: AGET  (r0 I:?[int, float]) = (r3 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x001c: AGET  (r1 I:?[int, float]) = (r3 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l0x001e: CMP_L  (r3 I:int) = (r0 I:float), (r2 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0020|0x0020: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0022|0x0022: CMP_L  (r3 I:int) = (r1 I:float), (r6 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|0x0024: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0027 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|0x0027: NEW_INSTANCE  (r9 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0029: CONST_STR  (r0 I:java.lang.String) =  \"pattern must not end at the starting point\" \l0x002b: INVOKE  \l  (r9 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: IGET  (r3 I:android.graphics.Matrix) = (r8 I:android.support.transition.PatternPathMotion) android.support.transition.PatternPathMotion.mTempMatrix android.graphics.Matrix \l0x0031: NEG  (r4 I:float) = (r0 I:float) \l0x0032: NEG  (r5 I:float) = (r1 I:float) \l0x0033: INVOKE  (r3 I:android.graphics.Matrix), (r4 I:float), (r5 I:float) android.graphics.Matrix.setTranslate(float, float):void type: VIRTUAL \l0x0036: ARITH  (r2 I:float) = (r2 I:float) \- (r0 I:float) \l0x0037: ARITH  (r6 I:float) = (r6 I:float) \- (r1 I:float) \l0x0038: INVOKE  (r0 I:float) = (r2 I:float), (r6 I:float) android.support.transition.PatternPathMotion.distance(float, float):float type: STATIC \l0x003c: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x003e: ARITH  (r1 I:float) = (r1 I:float) \/ (r0 I:float) \l0x003f: IGET  (r0 I:android.graphics.Matrix) = (r8 I:android.support.transition.PatternPathMotion) android.support.transition.PatternPathMotion.mTempMatrix android.graphics.Matrix \l0x0041: INVOKE  (r0 I:android.graphics.Matrix), (r1 I:float), (r1 I:float) android.graphics.Matrix.postScale(float, float):boolean type: VIRTUAL \l0x0044: CAST  (r0 I:double) = (double) (r6 I:float) \l0x0045: CAST  (r2 I:double) = (double) (r2 I:float) \l0x0046: INVOKE  (r0 I:double) = (r0 I:double), (r2 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x004a: IGET  (r2 I:android.graphics.Matrix) = (r8 I:android.support.transition.PatternPathMotion) android.support.transition.PatternPathMotion.mTempMatrix android.graphics.Matrix \l0x004c: NEG  (r0 I:double) = (r0 I:double) \l0x004d: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.toDegrees(double):double type: STATIC \l0x0051: CAST  (r0 I:float) = (float) (r0 I:double) \l0x0052: INVOKE  (r2 I:android.graphics.Matrix), (r0 I:float) android.graphics.Matrix.postRotate(float):boolean type: VIRTUAL \l0x0055: IGET  (r0 I:android.graphics.Matrix) = (r8 I:android.support.transition.PatternPathMotion) android.support.transition.PatternPathMotion.mTempMatrix android.graphics.Matrix \l0x0057: IGET  (r1 I:android.graphics.Path) = (r8 I:android.support.transition.PatternPathMotion) android.support.transition.PatternPathMotion.mPatternPath android.graphics.Path \l0x0059: INVOKE  \l  (r9 I:android.graphics.Path)\l  (r0 I:android.graphics.Matrix)\l  (r1 I:android.graphics.Path)\l android.graphics.Path.transform(android.graphics.Matrix, android.graphics.Path):void type: VIRTUAL \l0x005c: IPUT  \l  (r9 I:android.graphics.Path)\l  (r8 I:android.support.transition.PatternPathMotion)\l android.support.transition.PatternPathMotion.mOriginalPatternPath android.graphics.Path \l}"];
Node_8 [shape=record,label="{8\:\ 0x005e|0x005e: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.transition.PatternPathMotion.setPatternPath((r8 'this' I:android.support.transition.PatternPathMotion A[IMMUTABLE_TYPE, THIS]), (r9 I:android.graphics.Path A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_7[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
}

