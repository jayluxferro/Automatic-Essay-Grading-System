digraph "CFG forandroid.support.transition.GhostViewApi14.onAttachedToWindow()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:android.view.View) android.view.View.onAttachedToWindow():void type: SUPER \l0x0003: IGET  (r0 I:android.view.View) = (r6 I:android.support.transition.GhostViewApi14) android.support.transition.GhostViewApi14.mView android.view.View \l0x0005: INVOKE  \l  (r0 I:android.view.View)\l  (r6 I:android.support.transition.GhostViewApi14)\l android.support.transition.GhostViewApi14.setGhostView(android.view.View, android.support.transition.GhostViewApi14):void type: STATIC \l0x0008: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0009: NEW_ARRAY  (r1 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x000b: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x000d: INVOKE  \l  (r6 I:android.support.transition.GhostViewApi14)\l  (r1 I:int[])\l android.support.transition.GhostViewApi14.getLocationOnScreen(int[]):void type: VIRTUAL \l0x0010: IGET  (r2 I:android.view.View) = (r6 I:android.support.transition.GhostViewApi14) android.support.transition.GhostViewApi14.mView android.view.View \l0x0012: INVOKE  (r2 I:android.view.View), (r0 I:int[]) android.view.View.getLocationOnScreen(int[]):void type: VIRTUAL \l0x0015: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0016: AGET  (r3 I:?[int, float]) = (r0 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0018: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0019: IGET  (r4 I:android.view.View) = (r6 I:android.support.transition.GhostViewApi14) android.support.transition.GhostViewApi14.mView android.view.View \l0x001b: INVOKE  (r4 I:float) = (r4 I:android.view.View) android.view.View.getTranslationX():float type: VIRTUAL \l0x001f: ARITH  (r3 I:float) = (r3 I:float) \- (r4 I:float) \l0x0020: CAST  (r3 I:int) = (int) (r3 I:float) \l0x0021: APUT  \l  (r0 I:?[int, float][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x0023: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0024: AGET  (r4 I:?[int, float]) = (r0 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x0026: CAST  (r4 I:float) = (float) (r4 I:int) \l0x0027: IGET  (r5 I:android.view.View) = (r6 I:android.support.transition.GhostViewApi14) android.support.transition.GhostViewApi14.mView android.view.View \l0x0029: INVOKE  (r5 I:float) = (r5 I:android.view.View) android.view.View.getTranslationY():float type: VIRTUAL \l0x002d: ARITH  (r4 I:float) = (r4 I:float) \- (r5 I:float) \l0x002e: CAST  (r4 I:int) = (int) (r4 I:float) \l0x002f: APUT  \l  (r0 I:?[int, float][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x0031: AGET  (r4 I:?[int, float]) = (r0 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0033: AGET  (r2 I:?[int, float]) = (r1 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0035: ARITH  (r4 I:int) = (r4 I:int) \- (r2 I:int) \l0x0036: IPUT  \l  (r4 I:int)\l  (r6 I:android.support.transition.GhostViewApi14)\l android.support.transition.GhostViewApi14.mDeltaX int \l0x0038: AGET  (r0 I:?[int, float]) = (r0 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x003a: AGET  (r1 I:?[int, float]) = (r1 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x003c: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x003d: IPUT  \l  (r0 I:int)\l  (r6 I:android.support.transition.GhostViewApi14)\l android.support.transition.GhostViewApi14.mDeltaY int \l0x003f: IGET  (r0 I:android.view.View) = (r6 I:android.support.transition.GhostViewApi14) android.support.transition.GhostViewApi14.mView android.view.View \l0x0041: INVOKE  (r0 I:android.view.ViewTreeObserver) = (r0 I:android.view.View) android.view.View.getViewTreeObserver():android.view.ViewTreeObserver type: VIRTUAL \l0x0045: IGET  (r1 I:android.view.ViewTreeObserver$OnPreDrawListener) = (r6 I:android.support.transition.GhostViewApi14) android.support.transition.GhostViewApi14.mOnPreDrawListener android.view.ViewTreeObserver$OnPreDrawListener \l0x0047: INVOKE  \l  (r0 I:android.view.ViewTreeObserver)\l  (r1 I:android.view.ViewTreeObserver$OnPreDrawListener)\l android.view.ViewTreeObserver.addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener):void type: VIRTUAL \l0x004a: IGET  (r0 I:android.view.View) = (r6 I:android.support.transition.GhostViewApi14) android.support.transition.GhostViewApi14.mView android.view.View \l0x004c: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x004d: INVOKE  (r0 I:android.view.View), (r1 I:int) android.view.View.setVisibility(int):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0050|0x0050: RETURN   \l}"];
MethodNode[shape=record,label="{protected void android.support.transition.GhostViewApi14.onAttachedToWindow((r6 'this' I:android.support.transition.GhostViewApi14 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

