digraph "CFG forandroid.support.transition.SidePropagation.distance(Landroid\/view\/View;IIIIIIII)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4 = true\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r6.mSide != 8388611) goto L_0x0019\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b}"];
Node_3 [shape=record,label="{3\:\ 0x000f|if (android.support.p000v4.view.ViewCompat.getLayoutDirection(r7) != 1) goto L_0x0012\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|r4 = false\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|PHI: r4 \l  PHI: (r4v3 boolean) = (r4v0 boolean), (r4v4 boolean) binds: [B:3:0x000f, B:4:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == false) goto L_0x0017\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|r7 = 5\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|r7 = 3\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019}"];
Node_9 [shape=record,label="{9\:\ 0x001e|if (r6.mSide != 8388613) goto L_0x002b\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020}"];
Node_11 [shape=record,label="{11\:\ 0x0024|if (android.support.p000v4.view.ViewCompat.getLayoutDirection(r7) != 1) goto L_0x0027\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|r4 = false\l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|PHI: r4 \l  PHI: (r4v1 boolean) = (r4v0 boolean), (r4v2 boolean) binds: [B:11:0x0024, B:12:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == false) goto L_0x0015\l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|int r7 = r6.mSide\l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|PHI: r7 \l  PHI: (r7v1 int) = (r7v6 int), (r7v8 int), (r7v9 int) binds: [B:14:0x002b, B:7:0x0017, B:6:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 == 3) goto L_0x0055\l}"];
Node_16 [shape=record,label="{16\:\ 0x002f|if (r7 == 5) goto L_0x004c\l}"];
Node_17 [shape=record,label="{17\:\ 0x0031}"];
Node_18 [shape=record,label="{18\:\ 0x0033|if (r7 == 48) goto L_0x0043\l}"];
Node_19 [shape=record,label="{19\:\ 0x0035}"];
Node_20 [shape=record,label="{20\:\ 0x0037|if (r7 == 80) goto L_0x003a\l}"];
Node_21 [shape=record,label="{21\:\ 0x003a}"];
Node_22 [shape=record,label="{22\:\ 0x0043}"];
Node_23 [shape=record,label="{23\:\ 0x004c}"];
Node_24 [shape=record,label="{24\:\ 0x0055}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return (r14 \- r8) + java.lang.Math.abs(r11 \- r9)\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return (r9 \- r13) + java.lang.Math.abs(r10 \- r8)\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return (r15 \- r9) + java.lang.Math.abs(r10 \- r8)\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return (r8 \- r12) + java.lang.Math.abs(r11 \- r9)\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return 0\l}"];
MethodNode[shape=record,label="{private int android.support.transition.SidePropagation.distance((r6v0 'this' android.support.transition.SidePropagation A[IMMUTABLE_TYPE, THIS]), (r7v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_15;
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_6;
Node_13 -> Node_7[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_24;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_29[style=dashed];
Node_21 -> Node_26;
Node_22 -> Node_27;
Node_23 -> Node_28;
Node_24 -> Node_25;
}

