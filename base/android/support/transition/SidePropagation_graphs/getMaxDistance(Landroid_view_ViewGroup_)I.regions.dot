digraph "CFG forandroid.support.transition.SidePropagation.getMaxDistance(Landroid\/view\/ViewGroup;)I" {
subgraph cluster_Region_844372811 {
label = "R(2:0|(2:(1:11)|(1:9)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r2.mSide\l}"];
subgraph cluster_Region_980205285 {
label = "R(2:(1:11)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_331461695 {
label = "IF [B:1:0x0003, B:3:0x0006, B:5:0x000b, B:7:0x0010] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r0 == 3) goto L_0x0017\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|ADDED_TO_REGION\l|if (r0 == 5) goto L_0x0017\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|ADDED_TO_REGION\l|if (r0 == 8388611) goto L_0x0017\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|ADDED_TO_REGION\l|if (r0 == 8388613) goto L_0x0017\l}"];
subgraph cluster_Region_1707851748 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001b|RETURN\l|return r3.getWidth()\l}"];
}
}
subgraph cluster_Region_476760995 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0016|RETURN\l|return r3.getHeight()\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0005}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0008}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000d}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0012}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0017}"];
MethodNode[shape=record,label="{private int android.support.transition.SidePropagation.getMaxDistance((r2v0 'this' android.support.transition.SidePropagation A[IMMUTABLE_TYPE, THIS]), (r3v0 android.view.ViewGroup A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

