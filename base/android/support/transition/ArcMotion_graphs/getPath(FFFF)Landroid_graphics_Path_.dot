digraph "CFG forandroid.support.transition.ArcMotion.getPath(FFFF)Landroid\/graphics\/Path;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.graphics.Path r7 = new android.graphics.Path()\lr7.moveTo(r12, r13)\lfloat r0 = r14 \- r12\lfloat r1 = r15 \- r13\lfloat r2 = (r0 * r0) + (r1 * r1)\lfloat r3 = (r12 + r14) \/ 2.0f\lfloat r5 = (r13 + r15) \/ 2.0f\lfloat r6 = 0.25f * r2\l}"];
Node_1 [shape=record,label="{1\:\ 0x001f|if ((r13 \> r15 ? 1 : (r13 == r15 ? 0 : \-1)) \<= 0) goto L_0x0023\l}"];
Node_2 [shape=record,label="{2\:\ 0x0021|r8 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|r8 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|PHI: r8 \l  PHI: (r8v1 boolean) = (r8v9 boolean), (r8v10 boolean) binds: [B:3:0x0023, B:2:0x0021] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|if ((java.lang.Math.abs(r0) \> java.lang.Math.abs(r1) ? 1 : (java.lang.Math.abs(r0) == java.lang.Math.abs(r1) ? 0 : \-1)) \>= 0) goto L_0x0049\l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|float r0 = java.lang.Math.abs(r2 \/ (r1 * 2.0f))\l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|if (r8 == false) goto L_0x003d\l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|r1 = r0 + r15\lr0 = r14\l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|r1 = r0 + r13\lr0 = r12\l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|PHI: r0 r1 \l  PHI: (r0v13 float) = (r0v15 float), (r0v17 float) binds: [B:9:0x003d, B:8:0x0039] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v11 float) = (r1v12 float), (r1v13 float) binds: [B:9:0x003d, B:8:0x0039] A[DONT_GENERATE, DONT_INLINE]\l|float r2 = (r11.mMinimumVerticalTangent * r6) * r11.mMinimumVerticalTangent\l}"];
Node_11 [shape=record,label="{11\:\ 0x0049|float r2 = r2 \/ (r0 * 2.0f)\l}"];
Node_12 [shape=record,label="{12\:\ 0x004c|if (r8 == false) goto L_0x0052\l}"];
Node_13 [shape=record,label="{13\:\ 0x004e|r1 = r13\lr0 = r2 + r12\l}"];
Node_14 [shape=record,label="{14\:\ 0x0052|float r0 = r14 \- r2\lr1 = r15\l}"];
Node_15 [shape=record,label="{15\:\ 0x0055|PHI: r0 r1 \l  PHI: (r0v9 float) = (r0v10 float), (r0v11 float) binds: [B:14:0x0052, B:13:0x004e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v7 float) = (r1v8 float), (r1v9 float) binds: [B:14:0x0052, B:13:0x004e] A[DONT_GENERATE, DONT_INLINE]\l|float r2 = (r11.mMinimumHorizontalTangent * r6) * r11.mMinimumHorizontalTangent\l}"];
Node_16 [shape=record,label="{16\:\ 0x005d|PHI: r0 r1 r2 \l  PHI: (r0v1 float) = (r0v9 float), (r0v13 float) binds: [B:15:0x0055, B:10:0x0040] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 float) = (r1v7 float), (r1v11 float) binds: [B:15:0x0055, B:10:0x0040] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 float) = (r2v14 float), (r2v19 float) binds: [B:15:0x0055, B:10:0x0040] A[DONT_GENERATE, DONT_INLINE]\l|float r8 = r3 \- r0\lfloat r9 = r5 \- r1\lfloat r8 = (r8 * r8) + (r9 * r9)\lfloat r6 = (r6 * r11.mMaximumTangent) * r11.mMaximumTangent\l}"];
Node_17 [shape=record,label="{17\:\ 0x0071|if ((r8 \> r2 ? 1 : (r8 == r2 ? 0 : \-1)) \>= 0) goto L_0x0074\l}"];
Node_18 [shape=record,label="{18\:\ 0x0074}"];
Node_19 [shape=record,label="{19\:\ 0x0076|if ((r8 \> r6 ? 1 : (r8 == r6 ? 0 : \-1)) \<= 0) goto L_0x007a\l}"];
Node_20 [shape=record,label="{20\:\ 0x0078|r2 = r6\l}"];
Node_21 [shape=record,label="{21\:\ 0x007a|r2 = 0.0f\l}"];
Node_22 [shape=record,label="{22\:\ 0x007b|PHI: r2 \l  PHI: (r2v3 float) = (r2v2 float), (r2v9 float), (r2v10 float) binds: [B:17:0x0071, B:21:0x007a, B:20:0x0078] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x007d|if ((r2 \> 0.0f ? 1 : (r2 == 0.0f ? 0 : \-1)) == 0) goto L_0x008f\l}"];
Node_24 [shape=record,label="{24\:\ 0x007f|float r2 = (float) java.lang.Math.sqrt((double) (r2 \/ r8))\lfloat r0 = ((r0 \- r3) * r2) + r3\lfloat r1 = r5 + (r2 * (r1 \- r5))\l}"];
Node_25 [shape=record,label="{25\:\ 0x008f|PHI: r0 r1 \l  PHI: (r0v2 float) = (r0v1 float), (r0v7 float) binds: [B:23:0x007d, B:24:0x007f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 float) = (r1v1 float), (r1v6 float) binds: [B:23:0x007d, B:24:0x007f] A[DONT_GENERATE, DONT_INLINE]\l|float r3 = (r0 + r14) \/ 2.0f\lfloat r4 = (r1 + r15) \/ 2.0f\lr0 = r7\lr1 = (r12 + r0) \/ 2.0f\lr0.cubicTo(r1, (r13 + r1) \/ 2.0f, r3, r4, r14, r15)\l}"];
Node_26 [shape=record,label="{26\:\ 0x00a1|RETURN\l|return r7\l}"];
MethodNode[shape=record,label="{public android.graphics.Path android.support.transition.ArcMotion.getPath((r11v0 'this' android.support.transition.ArcMotion A[IMMUTABLE_TYPE, THIS]), (r12v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_22[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
}

