digraph "CFG forandroid.support.transition.ArcMotion.getPath(FFFF)Landroid\/graphics\/Path;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r7 I:android.graphics.Path) =  android.graphics.Path \l0x0002: INVOKE  (r7 I:android.graphics.Path) android.graphics.Path.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r7 I:android.graphics.Path), (r12 I:float), (r13 I:float) android.graphics.Path.moveTo(float, float):void type: VIRTUAL \l0x0008: ARITH  (r0 I:float) = (r14 I:float) \- (r12 I:float) \l0x000a: ARITH  (r1 I:float) = (r15 I:float) \- (r13 I:float) \l0x000c: ARITH  (r2 I:float) = (r0 I:float) * (r0 I:float) \l0x000e: ARITH  (r3 I:float) = (r1 I:float) * (r1 I:float) \l0x0010: ARITH  (r2 I:float) = (r2 I:float) + (r3 I:float) \l0x0011: ARITH  (r3 I:float) = (r12 I:float) + (r14 I:float) \l0x0013: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x0015: ARITH  (r3 I:float) = (r3 I:float) \/ (r4 I:float) \l0x0016: ARITH  (r5 I:float) = (r13 I:float) + (r15 I:float) \l0x0018: ARITH  (r5 I:float) = (r5 I:float) \/ (r4 I:float) \l0x0019: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (1048576000(0x3e800000, float:0.25) ?[int, float, short, byte, char])\l \l0x001b: ARITH  (r6 I:float) = (r6 I:float) * (r2 I:float) \l0x001d: CMP_L  (r8 I:int) = (r13 I:float), (r15 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x001f|0x001f: IF  (r8 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x0023 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0021|0x0021: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|0x0023: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: INVOKE  (r9 I:float) = (r0 I:float) java.lang.Math.abs(float):float type: STATIC \l0x0028: INVOKE  (r10 I:float) = (r1 I:float) java.lang.Math.abs(float):float type: STATIC \l0x002c: CMP_G  (r9 I:int) = (r9 I:float), (r10 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|0x002e: IF  (r9 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:11:0x0049 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|0x0030: ARITH  (r1 I:float) = (r1 I:float) * (r4 I:float) \l0x0032: ARITH  (r2 I:float) = (r2 I:float) \/ (r1 I:float) \l0x0033: INVOKE  (r0 I:float) = (r2 I:float) java.lang.Math.abs(float):float type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|0x0037: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003d \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: ARITH  (r0 I:float) = (r0 I:float) + (r15 I:float) \l0x003a: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|0x003d: ARITH  (r0 I:float) = (r0 I:float) + (r13 I:float) \l0x003e: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003f: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|0x0040: IGET  (r2 I:float) = (r11 I:android.support.transition.ArcMotion) android.support.transition.ArcMotion.mMinimumVerticalTangent float \l0x0042: ARITH  (r2 I:float) = (r2 I:float) * (r6 I:float) \l0x0044: IGET  (r8 I:float) = (r11 I:android.support.transition.ArcMotion) android.support.transition.ArcMotion.mMinimumVerticalTangent float \l0x0046: ARITH  (r2 I:float) = (r2 I:float) * (r8 I:float) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0049|0x0049: ARITH  (r0 I:float) = (r0 I:float) * (r4 I:float) \l0x004b: ARITH  (r2 I:float) = (r2 I:float) \/ (r0 I:float) \l}"];
Node_12 [shape=record,label="{12\:\ 0x004c|0x004c: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0052 \l}"];
Node_13 [shape=record,label="{13\:\ 0x004e|0x004e: ARITH  (r2 I:float) = (r2 I:float) + (r12 I:float) \l0x004f: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0050: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0052|0x0052: ARITH  (r0 I:float) = (r14 I:float) \- (r2 I:float) \l0x0054: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0055|0x0055: IGET  (r2 I:float) = (r11 I:android.support.transition.ArcMotion) android.support.transition.ArcMotion.mMinimumHorizontalTangent float \l0x0057: ARITH  (r2 I:float) = (r2 I:float) * (r6 I:float) \l0x0059: IGET  (r8 I:float) = (r11 I:android.support.transition.ArcMotion) android.support.transition.ArcMotion.mMinimumHorizontalTangent float \l0x005b: ARITH  (r2 I:float) = (r2 I:float) * (r8 I:float) \l}"];
Node_16 [shape=record,label="{16\:\ 0x005d|0x005d: ARITH  (r8 I:float) = (r3 I:float) \- (r0 I:float) \l0x005f: ARITH  (r9 I:float) = (r5 I:float) \- (r1 I:float) \l0x0061: ARITH  (r8 I:float) = (r8 I:float) * (r8 I:float) \l0x0063: ARITH  (r9 I:float) = (r9 I:float) * (r9 I:float) \l0x0065: ARITH  (r8 I:float) = (r8 I:float) + (r9 I:float) \l0x0066: IGET  (r9 I:float) = (r11 I:android.support.transition.ArcMotion) android.support.transition.ArcMotion.mMaximumTangent float \l0x0068: ARITH  (r6 I:float) = (r6 I:float) * (r9 I:float) \l0x006a: IGET  (r9 I:float) = (r11 I:android.support.transition.ArcMotion) android.support.transition.ArcMotion.mMaximumTangent float \l0x006c: ARITH  (r6 I:float) = (r6 I:float) * (r9 I:float) \l0x006e: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006f: CMP_G  (r10 I:int) = (r8 I:float), (r2 I:float) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0071|0x0071: IF  (r10 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:19:0x0074 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0074|0x0074: CMP_L  (r2 I:int) = (r8 I:float), (r6 I:float) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0076|0x0076: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:22:0x007a \l}"];
Node_21 [shape=record,label="{21\:\ 0x0078|0x0078: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x007a|0x007a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x007b|0x007b: CMP_L  (r6 I:int) = (r2 I:float), (r9 I:float) \l}"];
Node_24 [shape=record,label="{24\:\ 0x007d|0x007d: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x008f \l}"];
Node_25 [shape=record,label="{25\:\ 0x007f|0x007f: ARITH  (r2 I:float) = (r2 I:float) \/ (r8 I:float) \l0x0080: CAST  (r8 I:double) = (double) (r2 I:float) \l0x0081: INVOKE  (r8 I:double) = (r8 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0085: CAST  (r2 I:float) = (float) (r8 I:double) \l0x0086: ARITH  (r0 I:float) = (r0 I:float) \- (r3 I:float) \l0x0087: ARITH  (r0 I:float) = (r0 I:float) * (r2 I:float) \l0x0089: ARITH  (r0 I:float) = (r0 I:float) + (r3 I:float) \l0x008a: ARITH  (r1 I:float) = (r1 I:float) \- (r5 I:float) \l0x008b: ARITH  (r2 I:float) = (r2 I:float) * (r1 I:float) \l0x008d: ARITH  (r1 I:float) = (r5 I:float) + (r2 I:float) \l}"];
Node_26 [shape=record,label="{26\:\ 0x008f|0x008f: ARITH  (r12 I:float) = (r12 I:float) + (r0 I:float) \l0x0090: ARITH  (r12 I:float) = (r12 I:float) \/ (r4 I:float) \l0x0091: ARITH  (r13 I:float) = (r13 I:float) + (r1 I:float) \l0x0092: ARITH  (r2 I:float) = (r13 I:float) \/ (r4 I:float) \l0x0094: ARITH  (r0 I:float) = (r0 I:float) + (r14 I:float) \l0x0095: ARITH  (r3 I:float) = (r0 I:float) \/ (r4 I:float) \l0x0097: ARITH  (r1 I:float) = (r1 I:float) + (r15 I:float) \l0x0098: ARITH  (r4 I:float) = (r1 I:float) \/ (r4 I:float) \l0x009a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x009b: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x009c: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x009d: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x009e: INVOKE  \l  (r0 I:android.graphics.Path)\l  (r1 I:float)\l  (r2 I:float)\l  (r3 I:float)\l  (r4 I:float)\l  (r5 I:float)\l  (r6 I:float)\l android.graphics.Path.cubicTo(float, float, float, float, float, float):void type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x00a1|0x00a1: RETURN  (r7 I:android.graphics.Path) \l}"];
MethodNode[shape=record,label="{public android.graphics.Path android.support.transition.ArcMotion.getPath((r11 'this' I:android.support.transition.ArcMotion A[IMMUTABLE_TYPE, THIS]), (r12 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_23[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
}

