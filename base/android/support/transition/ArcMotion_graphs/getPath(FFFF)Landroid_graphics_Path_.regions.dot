digraph "CFG forandroid.support.transition.ArcMotion.getPath(FFFF)Landroid\/graphics\/Path;" {
subgraph cluster_Region_1401011702 {
label = "R(8:0|1|(3:6|(1:8)(1:9)|10)(3:11|(1:13)(1:14)|15)|16|(1:19)|(1:24)|25|26) | DECL_VAR: float null, float null, float null, float null, float null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.graphics.Path android.graphics.Path r7 = new android.graphics.Path()\lr7.moveTo(r12, r13)\lfloat float r0 = r14 \- r12\lfloat float r1 = r15 \- r13\lfloat float r2 = (r0 * r0) + (r1 * r1)\lfloat float r3 = (r12 + r14) \/ 2.0f\lfloat float r5 = (r13 + r15) \/ 2.0f\lfloat float r6 = 0.25f * r2\l}"];
Node_1 [shape=record,label="{1\:\ 0x001f|boolean r8 = r13 \> r15\l}"];
subgraph cluster_IfRegion_354018559 {
label = "IF [B:5:0x002e] THEN: R(3:6|(1:8)(1:9)|10) ELSE: R(3:11|(1:13)(1:14)|15)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002e|if (java.lang.Math.abs(r0) \< java.lang.Math.abs(r1)) goto L_0x0030\l}"];
subgraph cluster_Region_1602050041 {
label = "R(3:6|(1:8)(1:9)|10)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0030|float float r0 = java.lang.Math.abs(r2 \/ (r1 * 2.0f))\l}"];
subgraph cluster_IfRegion_1537805623 {
label = "IF [B:7:0x0037] THEN: R(1:8) ELSE: R(1:9)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0037|if (r8 == true) goto L_0x0039\l}"];
subgraph cluster_Region_965191897 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0039|r1 = r0 + r15\lr0 = r14\l}"];
}
subgraph cluster_Region_718587905 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x003d|r1 = r0 + r13\lr0 = r12\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x0040|PHI: r0 r1 \l  PHI: (r0v13 float) = (r0v15 float), (r0v17 float) binds: [B:9:0x003d, B:8:0x0039] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v11 float) = (r1v12 float), (r1v13 float) binds: [B:9:0x003d, B:8:0x0039] A[DONT_GENERATE, DONT_INLINE]\l|float r2 = r11.mMinimumVerticalTangent * r6 * r11.mMinimumVerticalTangent\l}"];
}
subgraph cluster_Region_1138615357 {
label = "R(3:11|(1:13)(1:14)|15)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0049|float float r2 = r2 \/ (r0 * 2.0f)\l}"];
subgraph cluster_IfRegion_2004477555 {
label = "IF [B:12:0x004c] THEN: R(1:13) ELSE: R(1:14)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x004c|if (r8 == true) goto L_0x004e\l}"];
subgraph cluster_Region_920899413 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x004e|r1 = r13\lr0 = r2 + r12\l}"];
}
subgraph cluster_Region_981179720 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0052|float r0 = r14 \- r2\lr1 = r15\l}"];
}
}
Node_15 [shape=record,label="{15\:\ 0x0055|PHI: r0 r1 \l  PHI: (r0v9 float) = (r0v10 float), (r0v11 float) binds: [B:14:0x0052, B:13:0x004e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v7 float) = (r1v8 float), (r1v9 float) binds: [B:14:0x0052, B:13:0x004e] A[DONT_GENERATE, DONT_INLINE]\l|float r2 = r11.mMinimumHorizontalTangent * r6 * r11.mMinimumHorizontalTangent\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x005d|PHI: r0 r1 r2 \l  PHI: (r0v1 float) = (r0v9 float), (r0v13 float) binds: [B:15:0x0055, B:10:0x0040] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 float) = (r1v7 float), (r1v11 float) binds: [B:15:0x0055, B:10:0x0040] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 float) = (r2v14 float), (r2v19 float) binds: [B:15:0x0055, B:10:0x0040] A[DONT_GENERATE, DONT_INLINE]\l|float float r8 = r3 \- r0\lfloat float r9 = r5 \- r1\lfloat float r8 = (r8 * r8) + (r9 * r9)\lfloat float r6 = r6 * r11.mMaximumTangent * r11.mMaximumTangent\l}"];
subgraph cluster_IfRegion_32873444 {
label = "IF [B:17:0x0071] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0071|if (r8 \>= r2) goto L_0x0074\l}"];
subgraph cluster_Region_1108256250 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0076|r2 = r8 \> r6 ? r6 : 0.0f\l}"];
}
}
subgraph cluster_IfRegion_898261401 {
label = "IF [B:23:0x007d] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x007d|if (r2 != 0.0f) goto L_0x007f\l}"];
subgraph cluster_Region_30228461 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x007f|float float r2 = (float) java.lang.Math.sqrt((double) (r2 \/ r8))\lfloat r0 = ((r0 \- r3) * r2) + r3\lfloat r1 = r5 + (r2 * (r1 \- r5))\l}"];
}
}
Node_25 [shape=record,label="{25\:\ 0x008f|PHI: r0 r1 \l  PHI: (r0v2 float) = (r0v1 float), (r0v7 float) binds: [B:23:0x007d, B:24:0x007f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 float) = (r1v1 float), (r1v6 float) binds: [B:23:0x007d, B:24:0x007f] A[DONT_GENERATE, DONT_INLINE]\l|r7.cubicTo((r12 + r0) \/ 2.0f, (r13 + r1) \/ 2.0f, (r0 + r14) \/ 2.0f, (r1 + r15) \/ 2.0f, r14, r15)\l}"];
Node_26 [shape=record,label="{26\:\ 0x00a1|RETURN\l|return r7\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0021}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0023}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0024|PHI: r8 \l  PHI: (r8v1 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0074}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0078}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x007a}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x007b|PHI: r2 \l  PHI: (r2v3 float) = (r2v2 float), (r2v10 float) binds: [B:17:0x0071, B:20:0x0078] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public android.graphics.Path android.support.transition.ArcMotion.getPath((r11v0 'this' android.support.transition.ArcMotion A[IMMUTABLE_TYPE, THIS]), (r12v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_5 -> Node_6;
Node_5 -> Node_11[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_22[style=dashed];
Node_19 -> Node_20;
Node_19 -> Node_21;
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_18 -> Node_19;
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
}

