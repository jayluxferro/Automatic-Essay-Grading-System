digraph "CFG forandroid.support.transition.ViewUtilsBase.setAnimationMatrix(Landroid\/view\/View;Landroid\/graphics\/Matrix;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0003: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0060 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r3 I:boolean) = (r11 I:android.graphics.Matrix) android.graphics.Matrix.isIdentity():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000d \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IGET  (r3 I:float[]) = (r9 I:android.support.transition.ViewUtilsBase) android.support.transition.ViewUtilsBase.mMatrixValues float[] \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0017 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: CONST  (r3 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l0x0013: NEW_ARRAY  (r3 I:float[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0015: IPUT  \l  (r3 I:float[])\l  (r9 I:android.support.transition.ViewUtilsBase)\l android.support.transition.ViewUtilsBase.mMatrixValues float[] \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: INVOKE  (r11 I:android.graphics.Matrix), (r3 I:float[]) android.graphics.Matrix.getValues(float[]):void type: VIRTUAL \l0x001a: CONST  (r11 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x001b: AGET  (r11 I:?[int, float]) = (r3 I:?[int, float][]), (r11 I:?[int, short, byte, char]) \l0x001d: ARITH  (r4 I:float) = (r11 I:float) * (r11 I:float) \l0x001f: ARITH  (r0 I:float) = (r0 I:float) \- (r4 I:float) \l0x0020: CAST  (r4 I:double) = (double) (r0 I:float) \l0x0021: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0025: CAST  (r0 I:float) = (float) (r4 I:double) \l0x0026: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0027: AGET  (r5 I:?[int, float]) = (r3 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x0029: CMP_G  (r5 I:int) = (r5 I:float), (r2 I:float) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:11:0x002f \l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|0x002f: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: CAST  (r5 I:float) = (float) (r5 I:int) \l0x0031: ARITH  (r0 I:float) = (r0 I:float) * (r5 I:float) \l0x0033: CAST  (r5 I:double) = (double) (r11 I:float) \l0x0034: CAST  (r7 I:double) = (double) (r0 I:float) \l0x0035: INVOKE  (r5 I:double) = (r5 I:double), (r7 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x0039: INVOKE  (r5 I:double) = (r5 I:double) java.lang.Math.toDegrees(double):double type: STATIC \l0x003d: CAST  (r11 I:float) = (float) (r5 I:double) \l0x003e: AGET  (r4 I:?[int, float]) = (r3 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x0040: ARITH  (r4 I:float) = (r4 I:float) \/ (r0 I:float) \l0x0041: CONST  (r5 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0042: AGET  (r5 I:?[int, float]) = (r3 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l0x0044: ARITH  (r5 I:float) = (r5 I:float) \/ (r0 I:float) \l0x0045: AGET  (r0 I:?[int, float]) = (r3 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x0047: CONST  (r1 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0048: AGET  (r1 I:?[int, float]) = (r3 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x004a: INVOKE  (r10 I:android.view.View), (r2 I:float) android.view.View.setPivotX(float):void type: VIRTUAL \l0x004d: INVOKE  (r10 I:android.view.View), (r2 I:float) android.view.View.setPivotY(float):void type: VIRTUAL \l0x0050: INVOKE  (r10 I:android.view.View), (r0 I:float) android.view.View.setTranslationX(float):void type: VIRTUAL \l0x0053: INVOKE  (r10 I:android.view.View), (r1 I:float) android.view.View.setTranslationY(float):void type: VIRTUAL \l0x0056: INVOKE  (r10 I:android.view.View), (r11 I:float) android.view.View.setRotation(float):void type: VIRTUAL \l0x0059: INVOKE  (r10 I:android.view.View), (r4 I:float) android.view.View.setScaleX(float):void type: VIRTUAL \l0x005c: INVOKE  (r10 I:android.view.View), (r5 I:float) android.view.View.setScaleY(float):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0060|0x0060: INVOKE  (r11 I:int) = (r10 I:android.view.View) android.view.View.getWidth():int type: VIRTUAL \l0x0064: ARITH  (r11 I:int) = (r11 I:int) \/ (r1 I:int) \l0x0065: CAST  (r11 I:float) = (float) (r11 I:int) \l0x0066: INVOKE  (r10 I:android.view.View), (r11 I:float) android.view.View.setPivotX(float):void type: VIRTUAL \l0x0069: INVOKE  (r11 I:int) = (r10 I:android.view.View) android.view.View.getHeight():int type: VIRTUAL \l0x006d: ARITH  (r11 I:int) = (r11 I:int) \/ (r1 I:int) \l0x006e: CAST  (r11 I:float) = (float) (r11 I:int) \l0x006f: INVOKE  (r10 I:android.view.View), (r11 I:float) android.view.View.setPivotY(float):void type: VIRTUAL \l0x0072: INVOKE  (r10 I:android.view.View), (r2 I:float) android.view.View.setTranslationX(float):void type: VIRTUAL \l0x0075: INVOKE  (r10 I:android.view.View), (r2 I:float) android.view.View.setTranslationY(float):void type: VIRTUAL \l0x0078: INVOKE  (r10 I:android.view.View), (r0 I:float) android.view.View.setScaleX(float):void type: VIRTUAL \l0x007b: INVOKE  (r10 I:android.view.View), (r0 I:float) android.view.View.setScaleY(float):void type: VIRTUAL \l0x007e: INVOKE  (r10 I:android.view.View), (r2 I:float) android.view.View.setRotation(float):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0081|0x0081: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.transition.ViewUtilsBase.setAnimationMatrix((r9 'this' I:android.support.transition.ViewUtilsBase A[IMMUTABLE_TYPE, THIS]), (r10 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.graphics.Matrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_13[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_14;
Node_13 -> Node_14;
}

