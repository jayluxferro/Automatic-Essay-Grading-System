digraph "CFG forandroid.support.transition.ViewUtilsBase.transformMatrixToGlobal(Landroid\/view\/View;Landroid\/graphics\/Matrix;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.view.ViewParent) = (r3 I:android.view.View) android.view.View.getParent():android.view.ViewParent type: VIRTUAL \l0x0004: INSTANCE_OF  (r1 I:boolean) = (r0 I:?[OBJECT, ARRAY]) android.view.View \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CHECK_CAST  (r0 I:android.view.View) = (android.view.View) (r0 I:?[OBJECT, ARRAY]) \l0x000a: INVOKE  \l  (r2 I:android.support.transition.ViewUtilsBase)\l  (r0 I:android.view.View)\l  (r4 I:android.graphics.Matrix)\l android.support.transition.ViewUtilsBase.transformMatrixToGlobal(android.view.View, android.graphics.Matrix):void type: VIRTUAL \l0x000d: INVOKE  (r1 I:int) = (r0 I:android.view.View) android.view.View.getScrollX():int type: VIRTUAL \l0x0011: NEG  (r1 I:int) = (r1 I:int) \l0x0012: CAST  (r1 I:float) = (float) (r1 I:int) \l0x0013: INVOKE  (r0 I:int) = (r0 I:android.view.View) android.view.View.getScrollY():int type: VIRTUAL \l0x0017: NEG  (r0 I:int) = (r0 I:int) \l0x0018: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0019: INVOKE  (r4 I:android.graphics.Matrix), (r1 I:float), (r0 I:float) android.graphics.Matrix.preTranslate(float, float):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: INVOKE  (r0 I:int) = (r3 I:android.view.View) android.view.View.getLeft():int type: VIRTUAL \l0x0020: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0021: INVOKE  (r1 I:int) = (r3 I:android.view.View) android.view.View.getTop():int type: VIRTUAL \l0x0025: CAST  (r1 I:float) = (float) (r1 I:int) \l0x0026: INVOKE  (r4 I:android.graphics.Matrix), (r0 I:float), (r1 I:float) android.graphics.Matrix.preTranslate(float, float):boolean type: VIRTUAL \l0x0029: INVOKE  (r3 I:android.graphics.Matrix) = (r3 I:android.view.View) android.view.View.getMatrix():android.graphics.Matrix type: VIRTUAL \l0x002d: INVOKE  (r0 I:boolean) = (r3 I:android.graphics.Matrix) android.graphics.Matrix.isIdentity():boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|0x0031: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0036 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0033|0x0033: INVOKE  \l  (r4 I:android.graphics.Matrix)\l  (r3 I:android.graphics.Matrix)\l android.graphics.Matrix.preConcat(android.graphics.Matrix):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|0x0036: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.transition.ViewUtilsBase.transformMatrixToGlobal((r2 'this' I:android.support.transition.ViewUtilsBase A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.graphics.Matrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
}

