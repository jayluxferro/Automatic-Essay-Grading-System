digraph "CFG forandroid.support.transition.TransitionManager.getTransition(Landroid\/support\/transition\/Scene;)Landroid\/support\/transition\/Transition;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.view.ViewGroup r0 = r3.getSceneRoot()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 == null) goto L_0x001f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|android.support.transition.Scene r0 = android.support.transition.Scene.getCurrentScene(r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r0 == null) goto L_0x001f\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|android.support.v4.util.ArrayMap r1 = r2.mScenePairTransitions.get(r3)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|if (r1 == null) goto L_0x001f\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|android.support.transition.Transition r0 = (android.support.transition.Transition) r1.get(r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|if (r0 == null) goto L_0x001f\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|RETURN\l|return r0\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|android.support.transition.Transition r3 = r2.mSceneTransitions.get(r3)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|if (r3 == null) goto L_0x002a\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return sDefaultTransition\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return r3\l}"];
MethodNode[shape=record,label="{private android.support.transition.Transition android.support.transition.TransitionManager.getTransition((r2v0 'this' android.support.transition.TransitionManager A[IMMUTABLE_TYPE, THIS]), (r3v0 android.support.transition.Scene A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
}

