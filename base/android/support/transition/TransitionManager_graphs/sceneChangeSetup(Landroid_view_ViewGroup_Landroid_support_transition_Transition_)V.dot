digraph "CFG forandroid.support.transition.TransitionManager.sceneChangeSetup(Landroid\/view\/ViewGroup;Landroid\/support\/transition\/Transition;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.ArrayList r0 = getRunningTransitions().get(r2)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r0 == null) goto L_0x0026\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c}"];
Node_3 [shape=record,label="{3\:\ 0x0010|if (r0.size() \<= 0) goto L_0x0026\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|java.util.Iterator r0 = r0.iterator()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|LOOP_START\lLOOP:0: B:5:0x0016\-\>B:7:0x001c\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|if (r0.hasNext() == false) goto L_0x0026\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|LOOP_END\lLOOP:0: B:5:0x0016\-\>B:7:0x001c\l|((android.support.transition.Transition) r0.next()).pause(r2)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|if (r3 == null) goto L_0x002c\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|r3.captureValues(r2, true)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|android.support.transition.Scene r2 = android.support.transition.Scene.getCurrentScene(r2)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|if (r2 == null) goto L_?\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|r2.exit()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private static void android.support.transition.TransitionManager.sceneChangeSetup((r2v0 android.view.ViewGroup A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 android.support.transition.Transition A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_5;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_14;
Node_13 -> Node_8;
}

