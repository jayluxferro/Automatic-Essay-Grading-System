digraph "CFG forandroid.support.transition.AnimatorUtils.resume(Landroid\/animation\/Animator;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 19) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|r5.resume()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|java.util.ArrayList r0 = r5.getListeners()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|if (r0 == null) goto L_?\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|r1 = 0\lint r2 = r0.size()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|LOOP_START\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v3 int) binds: [B:5:0x0010, B:10:0x0026] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0015\-\>B:10:0x0026\l|if (r1 \>= r2) goto L_0x0029\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|android.animation.Animator$AnimatorListener r3 = r0.get(r1)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|if ((r3 instanceof android.support.transition.AnimatorUtils.AnimatorPauseListenerCompat) == false) goto L_0x0026\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|((android.support.transition.AnimatorUtils.AnimatorPauseListenerCompat) r3).onAnimationResume(r5)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|LOOP_END\lLOOP:0: B:6:0x0015\-\>B:10:0x0026\l|int r1 = r1 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{static void android.support.transition.AnimatorUtils.resume((r5v0 android.animation.Animator A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_15;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_12;
Node_10 -> Node_6;
Node_11 -> Node_16;
Node_12 -> Node_10;
Node_13 -> Node_10;
}

