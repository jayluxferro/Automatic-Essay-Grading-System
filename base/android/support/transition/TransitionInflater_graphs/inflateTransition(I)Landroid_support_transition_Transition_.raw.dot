digraph "CFG forandroid.support.transition.TransitionInflater.inflateTransition(I)Landroid\/support\/transition\/Transition;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.content.Context) = (r4 I:android.support.transition.TransitionInflater) android.support.transition.TransitionInflater.mContext android.content.Context \l0x0002: INVOKE  (r0 I:android.content.res.Resources) = (r0 I:android.content.Context) android.content.Context.getResources():android.content.res.Resources type: VIRTUAL \l0x0006: INVOKE  (r5 I:android.content.res.XmlResourceParser) = (r0 I:android.content.res.Resources), (r5 I:int) android.content.res.Resources.getXml(int):android.content.res.XmlResourceParser type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|SYNTHETIC\lSplitter:B:1:0x000a\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x000a\l|0x000a: INVOKE  (r0 I:android.util.AttributeSet) = (r5 I:org.xmlpull.v1.XmlPullParser) android.util.Xml.asAttributeSet(org.xmlpull.v1.XmlPullParser):android.util.AttributeSet type: STATIC A[Catch:\{ XmlPullParserException \-\> 0x003c, IOException \-\> 0x0019 \}, TRY_ENTER]\l0x000e: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ XmlPullParserException \-\> 0x003c, IOException \-\> 0x0019 \}]\l0x000f: INVOKE  (r0 I:android.support.transition.Transition) = \l  (r4 I:android.support.transition.TransitionInflater)\l  (r5 I:org.xmlpull.v1.XmlPullParser)\l  (r0 I:android.util.AttributeSet)\l  (r1 I:android.support.transition.Transition)\l android.support.transition.TransitionInflater.createTransitionFromXml(org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.support.transition.Transition):android.support.transition.Transition type: DIRECT A[Catch:\{ XmlPullParserException \-\> 0x003c, IOException \-\> 0x0019 \}]\l0x0012: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: INVOKE  (r5 I:android.content.res.XmlResourceParser) android.content.res.XmlResourceParser.close():void type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: RETURN  (r0 I:android.support.transition.Transition) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|ExcHandler: all null\lSplitter:B:8:0x001a\l|0x0017: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|ExcHandler: IOException null\lSplitter:B:1:0x000a\l|0x0019: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|SYNTHETIC\lSplitter:B:8:0x001a\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x001a\l|0x001a: NEW_INSTANCE  (r1 I:android.view.InflateException) =  android.view.InflateException A[Catch:\{ all \-\> 0x0017 \}, TRY_ENTER]\l0x001c: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0017 \}]\l0x001e: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0017 \}]\l0x0021: INVOKE  (r3 I:java.lang.String) = (r5 I:android.content.res.XmlResourceParser) android.content.res.XmlResourceParser.getPositionDescription():java.lang.String type: INTERFACE A[Catch:\{ all \-\> 0x0017 \}]\l0x0025: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0017 \}]\l0x0028: CONST_STR  (r3 I:java.lang.String) =  \": \" A[Catch:\{ all \-\> 0x0017 \}]\l0x002a: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0017 \}]\l0x002d: INVOKE  (r3 I:java.lang.String) = (r0 I:java.io.IOException) java.io.IOException.getMessage():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0017 \}]\l0x0031: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0017 \}]\l0x0034: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0017 \}]\l0x0038: INVOKE  \l  (r1 I:android.view.InflateException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.view.InflateException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|0x003b: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|ExcHandler: XmlPullParserException null\lSplitter:B:1:0x000a\l|0x003c: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x003d|0x003d: NEW_INSTANCE  (r1 I:android.view.InflateException) =  android.view.InflateException A[Catch:\{ all \-\> 0x0017 \}]\l0x003f: INVOKE  (r2 I:java.lang.String) = (r0 I:org.xmlpull.v1.XmlPullParserException) org.xmlpull.v1.XmlPullParserException.getMessage():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0017 \}]\l0x0043: INVOKE  \l  (r1 I:android.view.InflateException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.view.InflateException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|0x0046: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0017 \}, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0047|0x0047: INVOKE  (r5 I:android.content.res.XmlResourceParser) android.content.res.XmlResourceParser.close():void type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|0x004a: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public android.support.transition.Transition android.support.transition.TransitionInflater.inflateTransition((r4 'this' I:android.support.transition.TransitionInflater A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_11;
Node_1 -> Node_7;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_5;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

