digraph "CFG forandroid.support.transition.TransitionInflater.getTargetIds(Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/util\/AttributeSet;Landroid\/support\/transition\/Transition;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getDepth():int type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: INVOKE  (r1 I:int) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l0x0008: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: INVOKE  (r3 I:int) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getDepth():int type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IF  (r3 I:?[int, byte, short, char]) \<= (r0 I:?[int, byte, short, char])  \-\> B:42:0x00be \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x00be \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|0x0015: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0018 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|0x0018: INVOKE  (r1 I:java.lang.String) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE \l0x001c: CONST_STR  (r5 I:java.lang.String) =  \"target\" \l0x001e: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x00a3 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: IGET  (r1 I:android.content.Context) = (r7 I:android.support.transition.TransitionInflater) android.support.transition.TransitionInflater.mContext android.content.Context \l0x0026: SGET  (r5 I:int[]) =  android.support.transition.Styleable.TRANSITION_TARGET int[] \l0x0028: INVOKE  (r1 I:android.content.res.TypedArray) = \l  (r1 I:android.content.Context)\l  (r9 I:android.util.AttributeSet)\l  (r5 I:int[])\l android.content.Context.obtainStyledAttributes(android.util.AttributeSet, int[]):android.content.res.TypedArray type: VIRTUAL \l0x002c: CONST_STR  (r5 I:java.lang.String) =  \"targetId\" \l0x002e: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: INVOKE  (r5 I:int) = \l  (r1 I:android.content.res.TypedArray)\l  (r8 I:org.xmlpull.v1.XmlPullParser)\l  (r5 I:java.lang.String)\l  (r3 I:int)\l  (r6 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedResourceId(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int):int type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|0x0033: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0039 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|0x0035: INVOKE  (r10 I:android.support.transition.Transition), (r5 I:int) android.support.transition.Transition.addTarget(int):android.support.transition.Transition type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|0x0039: CONST_STR  (r5 I:java.lang.String) =  \"excludeId\" \l0x003b: INVOKE  (r4 I:int) = \l  (r1 I:android.content.res.TypedArray)\l  (r8 I:org.xmlpull.v1.XmlPullParser)\l  (r5 I:java.lang.String)\l  (r4 I:int)\l  (r6 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedResourceId(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int):int type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0045 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0041|0x0041: INVOKE  \l  (r10 I:android.support.transition.Transition)\l  (r4 I:int)\l  (r3 I:boolean)\l android.support.transition.Transition.excludeTarget(int, boolean):android.support.transition.Transition type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0045|0x0045: CONST_STR  (r4 I:java.lang.String) =  \"targetName\" \l0x0047: CONST  (r5 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0048: INVOKE  (r4 I:java.lang.String) = \l  (r1 I:android.content.res.TypedArray)\l  (r8 I:org.xmlpull.v1.XmlPullParser)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedString(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):java.lang.String type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x004c|0x004c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0052 \l}"];
Node_20 [shape=record,label="{20\:\ 0x004e|0x004e: INVOKE  \l  (r10 I:android.support.transition.Transition)\l  (r4 I:java.lang.String)\l android.support.transition.Transition.addTarget(java.lang.String):android.support.transition.Transition type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0052|0x0052: CONST_STR  (r4 I:java.lang.String) =  \"excludeName\" \l0x0054: CONST  (r5 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0055: INVOKE  (r4 I:java.lang.String) = \l  (r1 I:android.content.res.TypedArray)\l  (r8 I:org.xmlpull.v1.XmlPullParser)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedString(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):java.lang.String type: STATIC \l}"];
Node_22 [shape=record,label="{22\:\ 0x0059|0x0059: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x005f \l}"];
Node_23 [shape=record,label="{23\:\ 0x005b|0x005b: INVOKE  \l  (r10 I:android.support.transition.Transition)\l  (r4 I:java.lang.String)\l  (r3 I:boolean)\l android.support.transition.Transition.excludeTarget(java.lang.String, boolean):android.support.transition.Transition type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x005f|0x005f: CONST_STR  (r4 I:java.lang.String) =  \"excludeClass\" \l0x0061: INVOKE  (r2 I:java.lang.String) = \l  (r1 I:android.content.res.TypedArray)\l  (r8 I:org.xmlpull.v1.XmlPullParser)\l  (r4 I:java.lang.String)\l  (r2 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedString(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):java.lang.String type: STATIC \l}"];
Node_25 [shape=record,label="{25\:\ 0x0065|0x0065: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0071 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0067|SYNTHETIC\lSplitter:B:26:0x0067\l}"];
Node_27 [shape=record,label="{27\:\ ?|Splitter:B:26:0x0067\l|0x0067: INVOKE  (r4 I:java.lang.Class) = (r2 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ ClassNotFoundException \-\> 0x006f \}, TRY_ENTER]\l0x006b: INVOKE  \l  (r10 I:android.support.transition.Transition)\l  (r4 I:java.lang.Class)\l  (r3 I:boolean)\l android.support.transition.Transition.excludeTarget(java.lang.Class, boolean):android.support.transition.Transition type: VIRTUAL A[Catch:\{ ClassNotFoundException \-\> 0x006f \}]\l0x006e: GOTO  \-\> 0x0084 A[Catch:\{ ClassNotFoundException \-\> 0x006f \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x006f|ExcHandler: ClassNotFoundException null\lSplitter:B:26:0x0067\l|0x006f: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  A[Catch:\{ ClassNotFoundException \-\> 0x006f \}]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0070|0x0070: GOTO  \-\> 0x0089 A[Catch:\{ ClassNotFoundException \-\> 0x006f \}]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0071|0x0071: CONST_STR  (r3 I:java.lang.String) =  \"targetClass\" A[Catch:\{ ClassNotFoundException \-\> 0x006f \}]\l0x0073: INVOKE  (r3 I:java.lang.String) = \l  (r1 I:android.content.res.TypedArray)\l  (r8 I:org.xmlpull.v1.XmlPullParser)\l  (r3 I:java.lang.String)\l  (r6 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedString(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):java.lang.String type: STATIC A[Catch:\{ ClassNotFoundException \-\> 0x006f \}]\l0x0076: NOP   A[TRY_LEAVE]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0077|0x0077: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0084 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0079|SYNTHETIC\lSplitter:B:32:0x0079\l}"];
Node_33 [shape=record,label="{33\:\ ?|Splitter:B:32:0x0079\l|0x0079: INVOKE  (r2 I:java.lang.Class) = (r3 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ ClassNotFoundException \-\> 0x0081 \}, TRY_ENTER]\l0x007d: INVOKE  \l  (r10 I:android.support.transition.Transition)\l  (r2 I:java.lang.Class)\l android.support.transition.Transition.addTarget(java.lang.Class):android.support.transition.Transition type: VIRTUAL A[Catch:\{ ClassNotFoundException \-\> 0x0081 \}, TRY_LEAVE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0081|ExcHandler: ClassNotFoundException null\lSplitter:B:32:0x0079\l|0x0081: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_36 [shape=record,label="{36\:\ 0x0082|0x0082: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0084|0x0084: INVOKE  (r1 I:android.content.res.TypedArray) android.content.res.TypedArray.recycle():void type: VIRTUAL \l}"];
Node_38 [shape=record,label="{38\:\ 0x0089|0x0089: INVOKE  (r1 I:android.content.res.TypedArray) android.content.res.TypedArray.recycle():void type: VIRTUAL \l0x008c: NEW_INSTANCE  (r9 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x008e: NEW_INSTANCE  (r10 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0090: INVOKE  (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0093: CONST_STR  (r0 I:java.lang.String) =  \"Could not create \" \l0x0095: INVOKE  (r10 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0098: INVOKE  (r10 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009b: INVOKE  (r10 I:java.lang.String) = (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x009f: INVOKE  \l  (r9 I:java.lang.RuntimeException)\l  (r10 I:java.lang.String)\l  (r8 I:java.lang.Throwable)\l java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_39 [shape=record,label="{39\:\ 0x00a2|0x00a2: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_40 [shape=record,label="{40\:\ 0x00a3|0x00a3: NEW_INSTANCE  (r9 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x00a5: NEW_INSTANCE  (r10 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00a7: INVOKE  (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00aa: CONST_STR  (r0 I:java.lang.String) =  \"Unknown scene name: \" \l0x00ac: INVOKE  (r10 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00af: INVOKE  (r8 I:java.lang.String) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE \l0x00b3: INVOKE  (r10 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00b6: INVOKE  (r8 I:java.lang.String) = (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00ba: INVOKE  (r9 I:java.lang.RuntimeException), (r8 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_41 [shape=record,label="{41\:\ 0x00bd|0x00bd: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_42 [shape=record,label="{42\:\ 0x00be|0x00be: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.transition.TransitionInflater.getTargetIds((r7 'this' I:android.support.transition.TransitionInflater A[IMMUTABLE_TYPE, THIS]), (r8 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.support.transition.Transition A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_42;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_42;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_1[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_40;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_37;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_37;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_37;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_37;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_37;
Node_28 -> Node_29;
Node_29 -> Node_38;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_37;
Node_32 -> Node_33;
Node_32 -> Node_35;
Node_33 -> Node_35;
Node_33 -> Node_37;
Node_35 -> Node_36;
Node_36 -> Node_38;
Node_37 -> Node_1;
Node_38 -> Node_39;
Node_40 -> Node_41;
}

