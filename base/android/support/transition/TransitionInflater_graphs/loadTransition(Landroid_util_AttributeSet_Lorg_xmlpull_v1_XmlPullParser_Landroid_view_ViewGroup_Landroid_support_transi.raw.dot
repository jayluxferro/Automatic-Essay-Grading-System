digraph "CFG forandroid.support.transition.TransitionInflater.loadTransition(Landroid\/util\/AttributeSet;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/view\/ViewGroup;Landroid\/support\/transition\/TransitionManager;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.content.Context) = (r6 I:android.support.transition.TransitionInflater) android.support.transition.TransitionInflater.mContext android.content.Context \l0x0002: SGET  (r1 I:int[]) =  android.support.transition.Styleable.TRANSITION_MANAGER int[] \l0x0004: INVOKE  (r7 I:android.content.res.TypedArray) = \l  (r0 I:android.content.Context)\l  (r7 I:android.util.AttributeSet)\l  (r1 I:int[])\l android.content.Context.obtainStyledAttributes(android.util.AttributeSet, int[]):android.content.res.TypedArray type: VIRTUAL \l0x0008: CONST_STR  (r0 I:java.lang.String) =  \"transition\" \l0x000a: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x000b: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000c: INVOKE  (r0 I:int) = \l  (r7 I:android.content.res.TypedArray)\l  (r8 I:org.xmlpull.v1.XmlPullParser)\l  (r0 I:java.lang.String)\l  (r2 I:int)\l  (r1 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedResourceId(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int):int type: STATIC \l0x0010: CONST_STR  (r2 I:java.lang.String) =  \"fromScene\" \l0x0012: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: INVOKE  (r2 I:int) = \l  (r7 I:android.content.res.TypedArray)\l  (r8 I:org.xmlpull.v1.XmlPullParser)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r1 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedResourceId(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int):int type: STATIC \l0x0017: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|0x001a: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: IGET  (r4 I:android.content.Context) = (r6 I:android.support.transition.TransitionInflater) android.support.transition.TransitionInflater.mContext android.content.Context \l0x001e: INVOKE  (r2 I:android.support.transition.Scene) = \l  (r9 I:android.view.ViewGroup)\l  (r2 I:int)\l  (r4 I:android.content.Context)\l android.support.transition.Scene.getSceneForLayout(android.view.ViewGroup, int, android.content.Context):android.support.transition.Scene type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: CONST_STR  (r4 I:java.lang.String) =  \"toScene\" \l0x0024: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0025: INVOKE  (r8 I:int) = \l  (r7 I:android.content.res.TypedArray)\l  (r8 I:org.xmlpull.v1.XmlPullParser)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r1 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedResourceId(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int):int type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|0x0029: IF  (r8 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:7:0x002c \l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: IGET  (r1 I:android.content.Context) = (r6 I:android.support.transition.TransitionInflater) android.support.transition.TransitionInflater.mContext android.content.Context \l0x002e: INVOKE  (r3 I:android.support.transition.Scene) = \l  (r9 I:android.view.ViewGroup)\l  (r8 I:int)\l  (r1 I:android.content.Context)\l android.support.transition.Scene.getSceneForLayout(android.view.ViewGroup, int, android.content.Context):android.support.transition.Scene type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|0x0032: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:17:0x005d \l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: INVOKE  (r8 I:android.support.transition.Transition) = \l  (r6 I:android.support.transition.TransitionInflater)\l  (r0 I:int)\l android.support.transition.TransitionInflater.inflateTransition(int):android.support.transition.Transition type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x005d \l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|0x003a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0046 \l}"];
Node_12 [shape=record,label="{12\:\ 0x003c|0x003c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0042 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|0x003e: INVOKE  \l  (r10 I:android.support.transition.TransitionManager)\l  (r3 I:android.support.transition.Scene)\l  (r8 I:android.support.transition.Transition)\l android.support.transition.TransitionManager.setTransition(android.support.transition.Scene, android.support.transition.Transition):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|0x0042: INVOKE  \l  (r10 I:android.support.transition.TransitionManager)\l  (r2 I:android.support.transition.Scene)\l  (r3 I:android.support.transition.Scene)\l  (r8 I:android.support.transition.Transition)\l android.support.transition.TransitionManager.setTransition(android.support.transition.Scene, android.support.transition.Scene, android.support.transition.Transition):void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0046|0x0046: NEW_INSTANCE  (r7 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0048: NEW_INSTANCE  (r8 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004a: INVOKE  (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x004d: CONST_STR  (r9 I:java.lang.String) =  \"No toScene for transition ID \" \l0x004f: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0052: INVOKE  (r8 I:java.lang.StringBuilder), (r0 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0055: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0059: INVOKE  (r7 I:java.lang.RuntimeException), (r8 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x005c|0x005c: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ 0x005d|0x005d: INVOKE  (r7 I:android.content.res.TypedArray) android.content.res.TypedArray.recycle():void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0060|0x0060: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.transition.TransitionInflater.loadTransition((r6 'this' I:android.support.transition.TransitionInflater A[IMMUTABLE_TYPE, THIS]), (r7 I:android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.view.ViewGroup A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.support.transition.TransitionManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.content.res.Resources$NotFoundException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_17;
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

