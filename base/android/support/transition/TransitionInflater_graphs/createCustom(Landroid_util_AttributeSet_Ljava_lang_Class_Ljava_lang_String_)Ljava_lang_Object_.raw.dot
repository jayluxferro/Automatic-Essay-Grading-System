digraph "CFG forandroid.support.transition.TransitionInflater.createCustom(Landroid\/util\/AttributeSet;Ljava\/lang\/Class;Ljava\/lang\/String;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"class\" \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  (r0 I:java.lang.String) = \l  (r7 I:android.util.AttributeSet)\l  (r1 I:java.lang.String)\l  (r0 I:java.lang.String)\l android.util.AttributeSet.getAttributeValue(java.lang.String, java.lang.String):java.lang.String type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0068 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|SYNTHETIC\lSplitter:B:2:0x0009\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0009\l|0x0009: SGET  (r9 I:android.support.v4.util.ArrayMap\<java.lang.String, java.lang.reflect.Constructor\>) =  android.support.transition.TransitionInflater.CONSTRUCTORS android.support.v4.util.ArrayMap A[Catch:\{ Exception \-\> 0x0048 \}, TRY_ENTER]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: MONITOR_ENTER  (r9 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x0048 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|SYNTHETIC\lSplitter:B:5:0x000c\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x000c\l|0x000c: SGET  (r1 I:android.support.v4.util.ArrayMap\<java.lang.String, java.lang.reflect.Constructor\>) =  android.support.transition.TransitionInflater.CONSTRUCTORS android.support.v4.util.ArrayMap A[Catch:\{ all \-\> 0x0045 \}, TRY_ENTER]\l0x000e: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:android.support.v4.util.ArrayMap)\l  (r0 I:java.lang.Object)\l android.support.v4.util.ArrayMap.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0045 \}]\l0x0012: CHECK_CAST  (r1 I:java.lang.reflect.Constructor) = (java.lang.reflect.Constructor) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0045 \}]\l0x0014: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0045 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0035 A[Catch:\{ all \-\> 0x0045 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: IGET  (r3 I:android.content.Context) = (r6 I:android.support.transition.TransitionInflater) android.support.transition.TransitionInflater.mContext android.content.Context A[Catch:\{ all \-\> 0x0045 \}]\l0x0019: INVOKE  (r3 I:java.lang.ClassLoader) = (r3 I:android.content.Context) android.content.Context.getClassLoader():java.lang.ClassLoader type: VIRTUAL A[Catch:\{ all \-\> 0x0045 \}]\l0x001d: INVOKE  (r3 I:java.lang.Class) = (r3 I:java.lang.ClassLoader), (r0 I:java.lang.String) java.lang.ClassLoader.loadClass(java.lang.String):java.lang.Class type: VIRTUAL A[Catch:\{ all \-\> 0x0045 \}]\l0x0021: INVOKE  (r3 I:java.lang.Class) = (r3 I:java.lang.Class), (r8 I:java.lang.Class) java.lang.Class.asSubclass(java.lang.Class):java.lang.Class type: VIRTUAL A[Catch:\{ all \-\> 0x0045 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0035 A[Catch:\{ all \-\> 0x0045 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: SGET  (r1 I:java.lang.Class\<?\>[]) =  android.support.transition.TransitionInflater.CONSTRUCTOR_SIGNATURE java.lang.Class[] A[Catch:\{ all \-\> 0x0045 \}]\l0x0029: INVOKE  (r1 I:java.lang.reflect.Constructor) = (r3 I:java.lang.Class), (r1 I:java.lang.Class[]) java.lang.Class.getConstructor(java.lang.Class[]):java.lang.reflect.Constructor type: VIRTUAL A[Catch:\{ all \-\> 0x0045 \}]\l0x002d: INVOKE  (r1 I:java.lang.reflect.Constructor), (r2 I:boolean) java.lang.reflect.Constructor.setAccessible(boolean):void type: VIRTUAL A[Catch:\{ all \-\> 0x0045 \}]\l0x0030: SGET  (r3 I:android.support.v4.util.ArrayMap\<java.lang.String, java.lang.reflect.Constructor\>) =  android.support.transition.TransitionInflater.CONSTRUCTORS android.support.v4.util.ArrayMap A[Catch:\{ all \-\> 0x0045 \}]\l0x0032: INVOKE  \l  (r3 I:android.support.v4.util.ArrayMap)\l  (r0 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l android.support.v4.util.ArrayMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0045 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0045 \}]\l0x0036: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ all \-\> 0x0045 \}]\l0x0038: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0045 \}]\l0x0039: IGET  (r5 I:android.content.Context) = (r6 I:android.support.transition.TransitionInflater) android.support.transition.TransitionInflater.mContext android.content.Context A[Catch:\{ all \-\> 0x0045 \}]\l0x003b: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0045 \}]\l0x003d: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r7 I:?[OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0045 \}]\l0x003f: INVOKE  (r7 I:java.lang.Object) = \l  (r1 I:java.lang.reflect.Constructor)\l  (r3 I:java.lang.Object[])\l java.lang.reflect.Constructor.newInstance(java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0045 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0043|0x0043: MONITOR_EXIT  (r9 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0045 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|0x0044: RETURN  (r7 I:java.lang.Object) A[Catch:\{ all \-\> 0x0045 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0045|ExcHandler: all null\lSplitter:B:5:0x000c\l|0x0045: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0045 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0046|0x0046: MONITOR_EXIT  (r9 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0045 \}, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0047|SYNTHETIC\lSplitter:B:16:0x0047\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x0047\l|0x0047: THROW  (r7 I:java.lang.Throwable) A[Catch:\{ Exception \-\> 0x0048 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0048|ExcHandler: Exception null\lSplitter:B:2:0x0009\l|0x0048: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  \l}"];
Node_19 [shape=record,label="{19\:\ 0x0049|0x0049: NEW_INSTANCE  (r9 I:android.view.InflateException) =  android.view.InflateException \l0x004b: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004d: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0050: CONST_STR  (r2 I:java.lang.String) =  \"Could not instantiate \" \l0x0052: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0055: INVOKE  (r1 I:java.lang.StringBuilder), (r8 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0058: CONST_STR  (r8 I:java.lang.String) =  \" class \" \l0x005a: INVOKE  (r1 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005d: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0060: INVOKE  (r8 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0064: INVOKE  \l  (r9 I:android.view.InflateException)\l  (r8 I:java.lang.String)\l  (r7 I:java.lang.Throwable)\l android.view.InflateException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x0067|0x0067: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0068|0x0068: NEW_INSTANCE  (r7 I:android.view.InflateException) =  android.view.InflateException \l0x006a: NEW_INSTANCE  (r8 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x006c: INVOKE  (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x006f: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0072: CONST_STR  (r9 I:java.lang.String) =  \" tag must have a 'class' attribute\" \l0x0074: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0077: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x007b: INVOKE  \l  (r7 I:android.view.InflateException)\l  (r8 I:java.lang.String)\l android.view.InflateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_22 [shape=record,label="{22\:\ 0x007e|0x007e: THROW  (r7 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private java.lang.Object android.support.transition.TransitionInflater.createCustom((r6 'this' I:android.support.transition.TransitionInflater A[IMMUTABLE_TYPE, THIS]), (r7 I:android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.Class A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_2 -> Node_18;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_22;
}

