digraph "CFG forandroid.support.transition.TransitionInflater.createTransitionManagerFromXml(Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/util\/AttributeSet;Landroid\/view\/ViewGroup;)Landroid\/support\/transition\/TransitionManager;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r5 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getDepth():int type: INTERFACE \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: INVOKE  (r2 I:int) = (r5 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l0x0009: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  (r3 I:int) = (r5 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getDepth():int type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r3 I:?[int, byte, short, char]) \<= (r0 I:?[int, byte, short, char])  \-\> B:19:0x0054 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0054 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0019 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: INVOKE  (r2 I:java.lang.String) = (r5 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE \l0x001d: CONST_STR  (r3 I:java.lang.String) =  \"transitionManager\" \l0x001f: INVOKE  (r3 I:boolean) = (r2 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|0x0025: NEW_INSTANCE  (r1 I:android.support.transition.TransitionManager) =  android.support.transition.TransitionManager \l0x0027: INVOKE  (r1 I:android.support.transition.TransitionManager) android.support.transition.TransitionManager.\<init\>():void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: CONST_STR  (r3 I:java.lang.String) =  \"transition\" \l0x002d: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|0x0031: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0039 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|0x0033: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0039 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|0x0035: INVOKE  \l  (r4 I:android.support.transition.TransitionInflater)\l  (r6 I:android.util.AttributeSet)\l  (r5 I:org.xmlpull.v1.XmlPullParser)\l  (r7 I:android.view.ViewGroup)\l  (r1 I:android.support.transition.TransitionManager)\l android.support.transition.TransitionInflater.loadTransition(android.util.AttributeSet, org.xmlpull.v1.XmlPullParser, android.view.ViewGroup, android.support.transition.TransitionManager):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0039|0x0039: NEW_INSTANCE  (r6 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x003b: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003d: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0040: CONST_STR  (r0 I:java.lang.String) =  \"Unknown scene name: \" \l0x0042: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0045: INVOKE  (r5 I:java.lang.String) = (r5 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE \l0x0049: INVOKE  (r7 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004c: INVOKE  (r5 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0050: INVOKE  (r6 I:java.lang.RuntimeException), (r5 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|0x0053: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0054|0x0054: RETURN  (r1 I:android.support.transition.TransitionManager) \l}"];
MethodNode[shape=record,label="{private android.support.transition.TransitionManager android.support.transition.TransitionInflater.createTransitionManagerFromXml((r4 'this' I:android.support.transition.TransitionInflater A[IMMUTABLE_TYPE, THIS]), (r5 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.view.ViewGroup A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_19;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_19;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_1[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_1;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_1;
Node_17 -> Node_18;
}

