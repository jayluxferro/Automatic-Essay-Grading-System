digraph "CFG forandroid.support.transition.Slide.setSlideEdge(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r2 == 3) goto L_0x0039\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r2 == 5) goto L_0x0034\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006}"];
Node_5 [shape=record,label="{5\:\ 0x0008|if (r2 == 48) goto L_0x002f\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a}"];
Node_7 [shape=record,label="{7\:\ 0x000c|if (r2 == 80) goto L_0x002a\l}"];
Node_8 [shape=record,label="{8\:\ 0x000e}"];
Node_9 [shape=record,label="{9\:\ 0x0011|if (r2 == 8388611) goto L_0x0025\l}"];
Node_10 [shape=record,label="{10\:\ 0x0013}"];
Node_11 [shape=record,label="{11\:\ 0x0016|if (r2 != 8388613) goto L_0x001d\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|r1.mSlideCalculator = sCalculateEnd\l}"];
Node_13 [shape=record,label="{13\:\ 0x001d}"];
Node_14 [shape=record,label="{14\:\ 0x0024|throw new java.lang.IllegalArgumentException(\"Invalid slide direction\")\l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|r1.mSlideCalculator = sCalculateStart\l}"];
Node_16 [shape=record,label="{16\:\ 0x002a|r1.mSlideCalculator = sCalculateBottom\l}"];
Node_17 [shape=record,label="{17\:\ 0x002f|r1.mSlideCalculator = sCalculateTop\l}"];
Node_18 [shape=record,label="{18\:\ 0x0034|r1.mSlideCalculator = sCalculateRight\l}"];
Node_19 [shape=record,label="{19\:\ 0x0039|r1.mSlideCalculator = sCalculateLeft\l}"];
Node_20 [shape=record,label="{20\:\ 0x003d|r1.mSlideEdge = r2\landroid.support.transition.SidePropagation r0 = new android.support.transition.SidePropagation()\lr0.setSide(r2)\lsetPropagation(r0)\l}"];
Node_21 [shape=record,label="{21\:\ 0x004a|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.transition.Slide.setSlideEdge((r1v0 'this' android.support.transition.Slide A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_18;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_16;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_20;
Node_13 -> Node_14;
Node_15 -> Node_20;
Node_16 -> Node_20;
Node_17 -> Node_20;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
}

