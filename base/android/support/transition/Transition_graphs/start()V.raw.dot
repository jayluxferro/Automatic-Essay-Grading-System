digraph "CFG forandroid.support.transition.Transition.start()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r5 I:android.support.transition.Transition) android.support.transition.Transition.mNumInstances int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:java.util.ArrayList\<android.support.transition.Transition$TransitionListener\>) = (r5 I:android.support.transition.Transition) android.support.transition.Transition.mListeners java.util.ArrayList \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002c \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IGET  (r0 I:java.util.ArrayList\<android.support.transition.Transition$TransitionListener\>) = (r5 I:android.support.transition.Transition) android.support.transition.Transition.mListeners java.util.ArrayList \l0x000b: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:9:0x002c \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: IGET  (r0 I:java.util.ArrayList\<android.support.transition.Transition$TransitionListener\>) = (r5 I:android.support.transition.Transition) android.support.transition.Transition.mListeners java.util.ArrayList \l0x0013: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.ArrayList) java.util.ArrayList.clone():java.lang.Object type: VIRTUAL \l0x0017: CHECK_CAST  (r0 I:java.util.ArrayList) = (java.util.ArrayList) (r0 I:?[OBJECT, ARRAY]) \l0x0019: INVOKE  (r2 I:int) = (r0 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x001d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: IF  (r3 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:9:0x002c \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: INVOKE  (r4 I:java.lang.Object) = (r0 I:java.util.ArrayList), (r3 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0024: CHECK_CAST  (r4 I:android.support.transition.Transition$TransitionListener) = (android.support.transition.Transition$TransitionListener) (r4 I:?[OBJECT, ARRAY]) \l0x0026: INVOKE  \l  (r4 I:android.support.transition.Transition$TransitionListener)\l  (r5 I:android.support.transition.Transition)\l android.support.transition.Transition.TransitionListener.onTransitionStart(android.support.transition.Transition):void type: INTERFACE \l0x0029: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: IPUT  \l  (r1 I:boolean)\l  (r5 I:android.support.transition.Transition)\l android.support.transition.Transition.mEnded boolean \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: IGET  (r0 I:int) = (r5 I:android.support.transition.Transition) android.support.transition.Transition.mNumInstances int \l0x0030: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0032: IPUT  (r0 I:int), (r5 I:android.support.transition.Transition) android.support.transition.Transition.mNumInstances int \l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: RETURN   \l}"];
MethodNode[shape=record,label="{protected void android.support.transition.Transition.start((r5 'this' I:android.support.transition.Transition A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.support.annotation.RestrictTo, \{value=[android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP android.support.annotation.RestrictTo$Scope]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_7;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

