digraph "CFG forandroid.support.transition.Transition.animate(Landroid\/animation\/Animator;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 != null) goto L_0x0006\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|end()\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if ((getDuration() \> 0 ? 1 : (getDuration() == 0 ? 0 : \-1)) \< 0) goto L_0x0017\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|r5.setDuration(getDuration())\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017}"];
Node_6 [shape=record,label="{6\:\ 0x001d|if ((getStartDelay() \> 0 ? 1 : (getStartDelay() == 0 ? 0 : \-1)) \< 0) goto L_0x0026\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|r5.setStartDelay(getStartDelay())\l}"];
Node_8 [shape=record,label="{8\:\ 0x0026}"];
Node_9 [shape=record,label="{9\:\ 0x002a|if (getInterpolator() == null) goto L_0x0033\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|r5.setInterpolator(getInterpolator())\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|r5.addListener(new android.support.transition.Transition.C02203(r4))\lr5.start()\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void android.support.transition.Transition.animate((r4v0 'this' android.support.transition.Transition A[IMMUTABLE_TYPE, THIS]), (r5v0 android.animation.Animator A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.RestrictTo, \{value=[android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP android.support.annotation.RestrictTo$Scope]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

