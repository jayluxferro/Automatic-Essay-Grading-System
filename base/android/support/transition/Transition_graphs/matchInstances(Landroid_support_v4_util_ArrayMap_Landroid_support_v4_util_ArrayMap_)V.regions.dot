digraph "CFG forandroid.support.transition.Transition.matchInstances(Landroid\/support\/v4\/util\/ArrayMap;Landroid\/support\/v4\/util\/ArrayMap;)V" {
subgraph cluster_Region_1533827996 {
label = "R(2:0|(3:2|(1:12)|13)) | DECL_VAR: android.support.transition.TransitionValues null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r5.size() \- 1\l}"];
subgraph cluster_LoopRegion_1995467303 {
label = "LOOP:0: (3:2|(1:12)|13)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lPHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v3 int) binds: [B:0:0x0000, B:13:0x003a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:13:0x003a\l|if (r0 \>= 0) goto L_0x0008\l}"];
subgraph cluster_Region_689906964 {
label = "R(3:2|(1:12)|13)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|android.view.View android.view.View r1 = r5.keyAt(r0)\l}"];
subgraph cluster_IfRegion_290843584 {
label = "IF [B:3:0x000e, B:5:0x0014, B:7:0x001c, B:9:0x0020, B:11:0x0028] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000e|ADDED_TO_REGION\l|if (r1 == null) goto L_0x003a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|ADDED_TO_REGION\l|if (isValidTarget(r1) != true) goto L_0x003a\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|ADDED_TO_REGION\l|if ((r1 = r6.remove(r1)) == null) goto L_0x003a\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|ADDED_TO_REGION\l|if (r1.view == null) goto L_0x003a\l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|ADDED_TO_REGION\l|if (isValidTarget(r1.view) != true) goto L_0x003a\l}"];
subgraph cluster_Region_685569532 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002a|r4.mStartValuesList.add(r5.removeAt(r0))\lr4.mEndValuesList.add(r1)\l}"];
}
}
Node_13 [shape=record,label="{13\:\ 0x003a|LOOP_END\lLOOP:0: B:1:0x0006\-\>B:13:0x003a\l|r0\-\-\l}"];
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0010}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0016}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001e}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0022}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x003d}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x003d|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x003a|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x003a|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x003a|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x003a|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x003a|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x003a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.transition.Transition.matchInstances((r4v0 'this' android.support.transition.Transition A[IMMUTABLE_TYPE, THIS]), (r5v0 android.support.v4.util.ArrayMap\<android.view.View, android.support.transition.TransitionValues\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 android.support.v4.util.ArrayMap\<android.view.View, android.support.transition.TransitionValues\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/support\/v4\/util\/ArrayMap\<, Landroid\/view\/View;, Landroid\/support\/transition\/TransitionValues;, \>;, Landroid\/support\/v4\/util\/ArrayMap\<, Landroid\/view\/View;, Landroid\/support\/transition\/TransitionValues;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_15[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_17;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_18;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_19;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_20;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_16;
Node_13 -> Node_1;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_15 -> Node_14;
Node_16 -> Node_13;
Node_17 -> Node_13;
Node_18 -> Node_13;
Node_19 -> Node_13;
Node_20 -> Node_13;
Node_21 -> Node_13;
}

