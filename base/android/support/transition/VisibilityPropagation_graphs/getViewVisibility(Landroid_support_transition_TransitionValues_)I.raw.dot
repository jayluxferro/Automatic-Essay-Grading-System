digraph "CFG forandroid.support.transition.VisibilityPropagation.getViewVisibility(Landroid\/support\/transition\/TransitionValues;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN  (r0 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IGET  (r3 I:java.util.Map\<java.lang.String, java.lang.Object\>) = (r3 I:android.support.transition.TransitionValues) android.support.transition.TransitionValues.values java.util.Map \l0x0007: CONST_STR  (r1 I:java.lang.String) =  \"android:visibilityPropagation:visibility\" \l0x0009: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.Map), (r1 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x000d: CHECK_CAST  (r3 I:java.lang.Integer) = (java.lang.Integer) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0012 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: RETURN  (r0 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: INVOKE  (r3 I:int) = (r3 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{public int android.support.transition.VisibilityPropagation.getViewVisibility((r2 'this' I:android.support.transition.VisibilityPropagation A[IMMUTABLE_TYPE, THIS]), (r3 I:android.support.transition.TransitionValues A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
}

