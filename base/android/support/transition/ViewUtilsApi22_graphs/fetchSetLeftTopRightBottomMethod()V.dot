digraph "CFG forandroid.support.transition.ViewUtilsApi22.fetchSetLeftTopRightBottomMethod()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (sSetLeftTopRightBottomMethodFetched != false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|java.lang.Class\<android.view.View\> r1 = android.view.View.class\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|SYNTHETIC\lSplitter:B:3:0x000a\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ NoSuchMethodException \-\> 0x002b \}\lSplitter:B:3:0x000a\l|java.lang.Class[] r3 = new java.lang.Class[]\{java.lang.Integer.TYPE, java.lang.Integer.TYPE, java.lang.Integer.TYPE, java.lang.Integer.TYPE\}\lsSetLeftTopRightBottomMethod = r1.getDeclaredMethod(\"setLeftTopRightBottom\", r3)     \/\/ Catch:\{ NoSuchMethodException \-\> 0x002b \}\lsSetLeftTopRightBottomMethod.setAccessible(true)     \/\/ Catch:\{ NoSuchMethodException \-\> 0x002b \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x002b|ExcHandler: NoSuchMethodException (r1v1 'e' java.lang.NoSuchMethodException A[CUSTOM_DECLARE])\lSplitter:B:3:0x000a\l|java.lang.NoSuchMethodException r1 = move\-exception\l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|android.util.Log.i(TAG, \"Failed to retrieve setLeftTopRightBottom method\", r1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|sSetLeftTopRightBottomMethodFetched = true\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.transition.ViewUtilsApi22.fetchSetLeftTopRightBottomMethod((r6v0 'this' android.support.transition.ViewUtilsApi22 A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.annotation.SuppressLint, \{value=[PrivateApi]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

