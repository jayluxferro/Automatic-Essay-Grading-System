digraph "CFG forandroid.support.transition.ViewUtilsApi22.setLeftTopRightBottom(Landroid\/view\/View;IIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|fetchSetLeftTopRightBottomMethod()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (sSetLeftTopRightBottomMethod == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|SYNTHETIC\lSplitter:B:2:0x0007\l}"];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ IllegalAccessException \-\> 0x0037, InvocationTargetException \-\> 0x002c \}\lSplitter:B:2:0x0007\l|java.lang.reflect.Method r0 = sSetLeftTopRightBottomMethod     \/\/ Catch:\{ IllegalAccessException \-\> 0x0037, InvocationTargetException \-\> 0x002c \}\ljava.lang.Object[] r1 = new java.lang.Object[]\{java.lang.Integer.valueOf(r5), java.lang.Integer.valueOf(r6), java.lang.Integer.valueOf(r7), java.lang.Integer.valueOf(r8)\}\lr0.invoke(r4, r1)     \/\/ Catch:\{ IllegalAccessException \-\> 0x0037, InvocationTargetException \-\> 0x002c \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|ExcHandler: InvocationTargetException (r4v1 'e' java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE])\lSplitter:B:2:0x0007\l|java.lang.reflect.InvocationTargetException r4 = move\-exception\l}"];
Node_5 [shape=record,label="{5\:\ 0x002d}"];
Node_6 [shape=record,label="{6\:\ 0x0036|throw new java.lang.RuntimeException(r4.getCause())\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lExcHandler: IllegalAccessException (unused java.lang.IllegalAccessException)\lSplitter:B:2:0x0007\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.transition.ViewUtilsApi22.setLeftTopRightBottom((r3v0 'this' android.support.transition.ViewUtilsApi22 A[IMMUTABLE_TYPE, THIS]), (r4v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_2 -> Node_7;
Node_2 -> Node_4;
Node_3 -> Node_7;
Node_3 -> Node_4;
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

