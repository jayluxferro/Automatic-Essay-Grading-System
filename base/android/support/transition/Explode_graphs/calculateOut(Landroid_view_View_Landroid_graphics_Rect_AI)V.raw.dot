digraph "CFG forandroid.support.transition.Explode.calculateOut(Landroid\/view\/View;Landroid\/graphics\/Rect;[I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0001: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0003: IGET  (r2 I:int[]) = (r0 I:android.support.transition.Explode) android.support.transition.Explode.mTempLoc int[] \l0x0005: INVOKE  (r1 I:android.view.View), (r2 I:int[]) android.view.View.getLocationOnScreen(int[]):void type: VIRTUAL \l0x0008: IGET  (r2 I:int[]) = (r0 I:android.support.transition.Explode) android.support.transition.Explode.mTempLoc int[] \l0x000a: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x000d: IGET  (r4 I:int[]) = (r0 I:android.support.transition.Explode) android.support.transition.Explode.mTempLoc int[] \l0x000f: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0010: AGET  (r4 I:?[int, float]) = (r4 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l0x0012: INVOKE  (r6 I:android.graphics.Rect) = (r15 I:android.support.transition.Explode) android.support.transition.Explode.getEpicenter():android.graphics.Rect type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|0x0016: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0039 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|0x0018: INVOKE  (r6 I:int) = (r16 I:android.view.View) android.view.View.getWidth():int type: VIRTUAL \l0x001c: ARITH  (r6 I:int) = (r6 I:int) \/ (2 int) \l0x001e: ARITH  (r6 I:int) = (r6 I:int) + (r2 I:int) \l0x001f: INVOKE  (r7 I:float) = (r16 I:android.view.View) android.view.View.getTranslationX():float type: VIRTUAL \l0x0023: INVOKE  (r7 I:int) = (r7 I:float) java.lang.Math.round(float):int type: STATIC \l0x0027: ARITH  (r6 I:int) = (r6 I:int) + (r7 I:int) \l0x0028: INVOKE  (r7 I:int) = (r16 I:android.view.View) android.view.View.getHeight():int type: VIRTUAL \l0x002c: ARITH  (r7 I:int) = (r7 I:int) \/ (2 int) \l0x002e: ARITH  (r7 I:int) = (r7 I:int) + (r4 I:int) \l0x002f: INVOKE  (r8 I:float) = (r16 I:android.view.View) android.view.View.getTranslationY():float type: VIRTUAL \l0x0033: INVOKE  (r8 I:int) = (r8 I:float) java.lang.Math.round(float):int type: STATIC \l0x0037: ARITH  (r7 I:int) = (r7 I:int) + (r8 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0039|0x0039: INVOKE  (r7 I:int) = (r6 I:android.graphics.Rect) android.graphics.Rect.centerX():int type: VIRTUAL \l0x003d: INVOKE  (r6 I:int) = (r6 I:android.graphics.Rect) android.graphics.Rect.centerY():int type: VIRTUAL \l0x0041: MOVE  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0042: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0043: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0044|0x0044: INVOKE  (r8 I:int) = (r17 I:android.graphics.Rect) android.graphics.Rect.centerX():int type: VIRTUAL \l0x0048: INVOKE  (r9 I:int) = (r17 I:android.graphics.Rect) android.graphics.Rect.centerY():int type: VIRTUAL \l0x004c: ARITH  (r8 I:int) = (r8 I:int) \- (r6 I:int) \l0x004d: CAST  (r8 I:float) = (float) (r8 I:int) \l0x004e: ARITH  (r9 I:int) = (r9 I:int) \- (r7 I:int) \l0x004f: CAST  (r9 I:float) = (float) (r9 I:int) \l0x0050: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0051: CMP_L  (r11 I:int) = (r8 I:float), (r10 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0053|0x0053: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x006e \l}"];
Node_6 [shape=record,label="{6\:\ 0x0055|0x0055: CMP_L  (r10 I:int) = (r9 I:float), (r10 I:float) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0057|0x0057: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x006e \l}"];
Node_8 [shape=record,label="{8\:\ 0x0059|0x0059: INVOKE  (r8 I:double) =  java.lang.Math.random():double type: STATIC \l0x005d: CONST  (r10 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x005f: ARITH  (r8 I:double) = (r8 I:double) * (r10 I:double) \l0x0061: CAST  (r8 I:float) = (float) (r8 I:double) \l0x0062: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0064: ARITH  (r8 I:float) = (r8 I:float) \- (r9 I:float) \l0x0065: INVOKE  (r12 I:double) =  java.lang.Math.random():double type: STATIC \l0x0069: ARITH  (r12 I:double) = (r12 I:double) * (r10 I:double) \l0x006b: CAST  (r10 I:float) = (float) (r12 I:double) \l0x006c: ARITH  (r9 I:float) = (r10 I:float) \- (r9 I:float) \l}"];
Node_9 [shape=record,label="{9\:\ 0x006e|0x006e: INVOKE  (r10 I:float) = (r8 I:float), (r9 I:float) android.support.transition.Explode.calculateDistance(float, float):float type: STATIC \l0x0072: ARITH  (r8 I:float) = (r8 I:float) \/ (r10 I:float) \l0x0073: ARITH  (r9 I:float) = (r9 I:float) \/ (r10 I:float) \l0x0074: ARITH  (r6 I:int) = (r6 I:int) \- (r2 I:int) \l0x0075: ARITH  (r7 I:int) = (r7 I:int) \- (r4 I:int) \l0x0076: INVOKE  (r1 I:float) = (r1 I:android.view.View), (r6 I:int), (r7 I:int) android.support.transition.Explode.calculateMaxDistance(android.view.View, int, int):float type: STATIC \l0x007a: ARITH  (r8 I:float) = (r8 I:float) * (r1 I:float) \l0x007c: INVOKE  (r2 I:int) = (r8 I:float) java.lang.Math.round(float):int type: STATIC \l0x0080: APUT  \l  (r18 I:?[int, float][])\l  (r3 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x0082: ARITH  (r1 I:float) = (r1 I:float) * (r9 I:float) \l0x0084: INVOKE  (r1 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x0088: APUT  \l  (r18 I:?[int, float][])\l  (r5 I:?[int, short, byte, char])\l  (r1 I:?[int, float])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x008a|0x008a: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.transition.Explode.calculateOut((r15 'this' I:android.support.transition.Explode A[IMMUTABLE_TYPE, THIS]), (r16 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

