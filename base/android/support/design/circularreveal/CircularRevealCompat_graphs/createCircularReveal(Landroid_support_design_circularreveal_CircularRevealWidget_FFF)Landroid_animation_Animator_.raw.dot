digraph "CFG forandroid.support.design.circularreveal.CircularRevealCompat.createCircularReveal(Landroid\/support\/design\/circularreveal\/CircularRevealWidget;FFF)Landroid\/animation\/Animator;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:android.util.Property\<android.support.design.circularreveal.CircularRevealWidget, android.support.design.circularreveal.CircularRevealWidget$RevealInfo\>) =  android.support.design.circularreveal.CircularRevealWidget.CircularRevealProperty.CIRCULAR_REVEAL android.util.Property \l0x0002: SGET  (r1 I:android.animation.TypeEvaluator\<android.support.design.circularreveal.CircularRevealWidget$RevealInfo\>) =  android.support.design.circularreveal.CircularRevealWidget.CircularRevealEvaluator.CIRCULAR_REVEAL android.animation.TypeEvaluator \l0x0004: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: NEW_ARRAY  (r3 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: android.support.design.circularreveal.CircularRevealWidget$RevealInfo[] \l0x0007: NEW_INSTANCE  (r4 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo) =  android.support.design.circularreveal.CircularRevealWidget$RevealInfo \l0x0009: INVOKE  \l  (r4 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo)\l  (r7 I:float)\l  (r8 I:float)\l  (r9 I:float)\l android.support.design.circularreveal.CircularRevealWidget.RevealInfo.\<init\>(float, float, float):void type: DIRECT \l0x000c: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x000f: INVOKE  (r0 I:android.animation.ObjectAnimator) = \l  (r6 I:java.lang.Object)\l  (r0 I:android.util.Property)\l  (r1 I:android.animation.TypeEvaluator)\l  (r3 I:java.lang.Object[])\l android.animation.ObjectAnimator.ofObject(java.lang.Object, android.util.Property, android.animation.TypeEvaluator, java.lang.Object[]):android.animation.ObjectAnimator type: STATIC \l0x0013: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0015: CONST  (r3 I:?[int, float, short, byte, char]) = (21 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: IF  (r1 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:8:0x0041 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|0x0019: INVOKE  (r1 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo) = \l  (r6 I:android.support.design.circularreveal.CircularRevealWidget)\l android.support.design.circularreveal.CircularRevealWidget.getRevealInfo():android.support.design.circularreveal.CircularRevealWidget$RevealInfo type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0039 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: IGET  (r1 I:float) = \l  (r1 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo)\l android.support.design.circularreveal.CircularRevealWidget.RevealInfo.radius float \l0x0021: CHECK_CAST  (r6 I:android.view.View) = (android.view.View) (r6 I:?[OBJECT, ARRAY]) \l0x0023: CAST  (r7 I:int) = (int) (r7 I:float) \l0x0024: CAST  (r8 I:int) = (int) (r8 I:float) \l0x0025: INVOKE  (r6 I:android.animation.Animator) = \l  (r6 I:android.view.View)\l  (r7 I:int)\l  (r8 I:int)\l  (r1 I:float)\l  (r9 I:float)\l android.view.ViewAnimationUtils.createCircularReveal(android.view.View, int, int, float, float):android.animation.Animator type: STATIC \l0x0029: NEW_INSTANCE  (r7 I:android.animation.AnimatorSet) =  android.animation.AnimatorSet \l0x002b: INVOKE  (r7 I:android.animation.AnimatorSet) android.animation.AnimatorSet.\<init\>():void type: DIRECT \l0x002e: CONST  (r8 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x002f: NEW_ARRAY  (r8 I:android.animation.Animator[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: android.animation.Animator[] \l0x0031: APUT  \l  (r8 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l \l0x0033: APUT  \l  (r8 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x0035: INVOKE  \l  (r7 I:android.animation.AnimatorSet)\l  (r8 I:android.animation.Animator[])\l android.animation.AnimatorSet.playTogether(android.animation.Animator[]):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0038|0x0038: RETURN  (r7 I:android.animation.Animator) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0039|0x0039: NEW_INSTANCE  (r6 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x003b: CONST_STR  (r7 I:java.lang.String) =  \"Caller must set a non\-null RevealInfo before calling this.\" \l0x003d: INVOKE  \l  (r6 I:java.lang.IllegalStateException)\l  (r7 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0040|0x0040: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0041|0x0041: RETURN  (r0 I:android.animation.Animator) \l}"];
MethodNode[shape=record,label="{public static android.animation.Animator android.support.design.circularreveal.CircularRevealCompat.createCircularReveal((r6 I:android.support.design.circularreveal.CircularRevealWidget A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

