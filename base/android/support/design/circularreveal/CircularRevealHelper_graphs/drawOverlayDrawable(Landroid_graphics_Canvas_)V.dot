digraph "CFG forandroid.support.design.circularreveal.CircularRevealHelper.drawOverlayDrawable(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (shouldDrawOverlayDrawable() == false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|android.graphics.Rect r0 = r4.overlayDrawable.getBounds()\lfloat r1 = r4.revealInfo.centerX \- (((float) r0.width()) \/ 2.0f)\lfloat r2 = r4.revealInfo.centerY \- (((float) r0.height()) \/ 2.0f)\lr5.translate(r1, r2)\lr4.overlayDrawable.draw(r5)\lr5.translate(\-r1, \-r2)\l}"];
Node_3 [shape=record,label="{3\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.design.circularreveal.CircularRevealHelper.drawOverlayDrawable((r4v0 'this' android.support.design.circularreveal.CircularRevealHelper A[IMMUTABLE_TYPE, THIS]), (r5v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

