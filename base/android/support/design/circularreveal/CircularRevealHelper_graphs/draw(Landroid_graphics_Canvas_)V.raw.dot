digraph "CFG forandroid.support.design.circularreveal.CircularRevealHelper.draw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.shouldDrawCircularReveal():boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x009e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: SGET  (r0 I:int) =  android.support.design.circularreveal.CircularRevealHelper.STRATEGY int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2] t:[0x0075, 0x0047, 0x0024] \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: NEW_INSTANCE  (r9 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x000d: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000f: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0012: CONST_STR  (r1 I:java.lang.String) =  \"Unsupported strategy \" \l0x0014: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0017: SGET  (r1 I:int) =  android.support.design.circularreveal.CircularRevealHelper.STRATEGY int \l0x0019: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x001c: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0020: INVOKE  \l  (r9 I:java.lang.IllegalStateException)\l  (r0 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: IGET  (r0 I:android.support.design.circularreveal.CircularRevealHelper$Delegate) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.delegate android.support.design.circularreveal.CircularRevealHelper$Delegate \l0x0026: INVOKE  \l  (r0 I:android.support.design.circularreveal.CircularRevealHelper$Delegate)\l  (r9 I:android.graphics.Canvas)\l android.support.design.circularreveal.CircularRevealHelper.Delegate.actualDraw(android.graphics.Canvas):void type: INTERFACE \l0x0029: INVOKE  (r0 I:boolean) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.shouldDrawScrim():boolean type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x00bf \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0030: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0031: IGET  (r0 I:android.view.View) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.view android.view.View \l0x0033: INVOKE  (r0 I:int) = (r0 I:android.view.View) android.view.View.getWidth():int type: VIRTUAL \l0x0037: CAST  (r4 I:float) = (float) (r0 I:int) \l0x0038: IGET  (r0 I:android.view.View) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.view android.view.View \l0x003a: INVOKE  (r0 I:int) = (r0 I:android.view.View) android.view.View.getHeight():int type: VIRTUAL \l0x003e: CAST  (r5 I:float) = (float) (r0 I:int) \l0x003f: IGET  (r6 I:android.graphics.Paint) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.scrimPaint android.graphics.Paint \l0x0041: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0042: INVOKE  \l  (r1 I:android.graphics.Canvas)\l  (r2 I:float)\l  (r3 I:float)\l  (r4 I:float)\l  (r5 I:float)\l  (r6 I:android.graphics.Paint)\l android.graphics.Canvas.drawRect(float, float, float, float, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0047|0x0047: INVOKE  (r0 I:int) = (r9 I:android.graphics.Canvas) android.graphics.Canvas.save():int type: VIRTUAL \l0x004b: IGET  (r1 I:android.graphics.Path) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.revealPath android.graphics.Path \l0x004d: INVOKE  \l  (r9 I:android.graphics.Canvas)\l  (r1 I:android.graphics.Path)\l android.graphics.Canvas.clipPath(android.graphics.Path):boolean type: VIRTUAL \l0x0050: IGET  (r1 I:android.support.design.circularreveal.CircularRevealHelper$Delegate) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.delegate android.support.design.circularreveal.CircularRevealHelper$Delegate \l0x0052: INVOKE  \l  (r1 I:android.support.design.circularreveal.CircularRevealHelper$Delegate)\l  (r9 I:android.graphics.Canvas)\l android.support.design.circularreveal.CircularRevealHelper.Delegate.actualDraw(android.graphics.Canvas):void type: INTERFACE \l0x0055: INVOKE  (r1 I:boolean) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.shouldDrawScrim():boolean type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0059|0x0059: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0071 \l}"];
Node_11 [shape=record,label="{11\:\ 0x005b|0x005b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005d: IGET  (r1 I:android.view.View) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.view android.view.View \l0x005f: INVOKE  (r1 I:int) = (r1 I:android.view.View) android.view.View.getWidth():int type: VIRTUAL \l0x0063: CAST  (r5 I:float) = (float) (r1 I:int) \l0x0064: IGET  (r1 I:android.view.View) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.view android.view.View \l0x0066: INVOKE  (r1 I:int) = (r1 I:android.view.View) android.view.View.getHeight():int type: VIRTUAL \l0x006a: CAST  (r6 I:float) = (float) (r1 I:int) \l0x006b: IGET  (r7 I:android.graphics.Paint) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.scrimPaint android.graphics.Paint \l0x006d: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x006e: INVOKE  \l  (r2 I:android.graphics.Canvas)\l  (r3 I:float)\l  (r4 I:float)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:android.graphics.Paint)\l android.graphics.Canvas.drawRect(float, float, float, float, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0071|0x0071: INVOKE  (r9 I:android.graphics.Canvas), (r0 I:int) android.graphics.Canvas.restoreToCount(int):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0075|0x0075: IGET  (r0 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.revealInfo android.support.design.circularreveal.CircularRevealWidget$RevealInfo \l0x0077: IGET  (r0 I:float) = \l  (r0 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo)\l android.support.design.circularreveal.CircularRevealWidget.RevealInfo.centerX float \l0x0079: IGET  (r1 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.revealInfo android.support.design.circularreveal.CircularRevealWidget$RevealInfo \l0x007b: IGET  (r1 I:float) = \l  (r1 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo)\l android.support.design.circularreveal.CircularRevealWidget.RevealInfo.centerY float \l0x007d: IGET  (r2 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.revealInfo android.support.design.circularreveal.CircularRevealWidget$RevealInfo \l0x007f: IGET  (r2 I:float) = \l  (r2 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo)\l android.support.design.circularreveal.CircularRevealWidget.RevealInfo.radius float \l0x0081: IGET  (r3 I:android.graphics.Paint) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.revealPaint android.graphics.Paint \l0x0083: INVOKE  \l  (r9 I:android.graphics.Canvas)\l  (r0 I:float)\l  (r1 I:float)\l  (r2 I:float)\l  (r3 I:android.graphics.Paint)\l android.graphics.Canvas.drawCircle(float, float, float, android.graphics.Paint):void type: VIRTUAL \l0x0086: INVOKE  (r0 I:boolean) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.shouldDrawScrim():boolean type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x008a|0x008a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x00bf \l}"];
Node_15 [shape=record,label="{15\:\ 0x008c|0x008c: IGET  (r0 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.revealInfo android.support.design.circularreveal.CircularRevealWidget$RevealInfo \l0x008e: IGET  (r0 I:float) = \l  (r0 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo)\l android.support.design.circularreveal.CircularRevealWidget.RevealInfo.centerX float \l0x0090: IGET  (r1 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.revealInfo android.support.design.circularreveal.CircularRevealWidget$RevealInfo \l0x0092: IGET  (r1 I:float) = \l  (r1 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo)\l android.support.design.circularreveal.CircularRevealWidget.RevealInfo.centerY float \l0x0094: IGET  (r2 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.revealInfo android.support.design.circularreveal.CircularRevealWidget$RevealInfo \l0x0096: IGET  (r2 I:float) = \l  (r2 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo)\l android.support.design.circularreveal.CircularRevealWidget.RevealInfo.radius float \l0x0098: IGET  (r3 I:android.graphics.Paint) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.scrimPaint android.graphics.Paint \l0x009a: INVOKE  \l  (r9 I:android.graphics.Canvas)\l  (r0 I:float)\l  (r1 I:float)\l  (r2 I:float)\l  (r3 I:android.graphics.Paint)\l android.graphics.Canvas.drawCircle(float, float, float, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x009e|0x009e: IGET  (r0 I:android.support.design.circularreveal.CircularRevealHelper$Delegate) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.delegate android.support.design.circularreveal.CircularRevealHelper$Delegate \l0x00a0: INVOKE  \l  (r0 I:android.support.design.circularreveal.CircularRevealHelper$Delegate)\l  (r9 I:android.graphics.Canvas)\l android.support.design.circularreveal.CircularRevealHelper.Delegate.actualDraw(android.graphics.Canvas):void type: INTERFACE \l0x00a3: INVOKE  (r0 I:boolean) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.shouldDrawScrim():boolean type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x00a7|0x00a7: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x00bf \l}"];
Node_18 [shape=record,label="{18\:\ 0x00a9|0x00a9: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00aa: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ab: IGET  (r0 I:android.view.View) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.view android.view.View \l0x00ad: INVOKE  (r0 I:int) = (r0 I:android.view.View) android.view.View.getWidth():int type: VIRTUAL \l0x00b1: CAST  (r4 I:float) = (float) (r0 I:int) \l0x00b2: IGET  (r0 I:android.view.View) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.view android.view.View \l0x00b4: INVOKE  (r0 I:int) = (r0 I:android.view.View) android.view.View.getHeight():int type: VIRTUAL \l0x00b8: CAST  (r5 I:float) = (float) (r0 I:int) \l0x00b9: IGET  (r6 I:android.graphics.Paint) = \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l android.support.design.circularreveal.CircularRevealHelper.scrimPaint android.graphics.Paint \l0x00bb: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x00bc: INVOKE  \l  (r1 I:android.graphics.Canvas)\l  (r2 I:float)\l  (r3 I:float)\l  (r4 I:float)\l  (r5 I:float)\l  (r6 I:android.graphics.Paint)\l android.graphics.Canvas.drawRect(float, float, float, float, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x00bf|0x00bf: INVOKE  \l  (r8 I:android.support.design.circularreveal.CircularRevealHelper)\l  (r9 I:android.graphics.Canvas)\l android.support.design.circularreveal.CircularRevealHelper.drawOverlayDrawable(android.graphics.Canvas):void type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x00c2|0x00c2: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.circularreveal.CircularRevealHelper.draw((r8 'this' I:android.support.design.circularreveal.CircularRevealHelper A[IMMUTABLE_TYPE, THIS]), (r9 I:android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_3 -> Node_9;
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_19;
Node_8 -> Node_19;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_19;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
}

