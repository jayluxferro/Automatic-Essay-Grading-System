digraph "CFG forandroid.support.design.circularreveal.CircularRevealHelper.drawDebugMode(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.delegate.actualDraw(r5)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if (shouldDrawScrim() == false) goto L_0x001c\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|r5.drawCircle(r4.revealInfo.centerX, r4.revealInfo.centerY, r4.revealInfo.radius, r4.scrimPaint)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c}"];
Node_4 [shape=record,label="{4\:\ 0x0020|if (shouldDrawCircularReveal() == false) goto L_0x0030\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|drawDebugCircle(r5, android.support.p000v4.view.ViewCompat.MEASURED_STATE_MASK, 10.0f)\ldrawDebugCircle(r5, android.support.p000v4.internal.view.SupportMenu.CATEGORY_MASK, 5.0f)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|drawOverlayDrawable(r5)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.design.circularreveal.CircularRevealHelper.drawDebugMode((r4v0 'this' android.support.design.circularreveal.CircularRevealHelper A[IMMUTABLE_TYPE, THIS]), (r5v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

