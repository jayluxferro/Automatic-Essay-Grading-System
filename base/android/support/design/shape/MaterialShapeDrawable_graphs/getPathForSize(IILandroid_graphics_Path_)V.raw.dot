digraph "CFG forandroid.support.design.shape.MaterialShapeDrawable.getPathForSize(IILandroid\/graphics\/Path;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:android.graphics.Path) android.graphics.Path.rewind():void type: VIRTUAL \l0x0003: IGET  (r0 I:android.support.design.shape.ShapePathModel) = (r3 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.shapedViewModel android.support.design.shape.ShapePathModel \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:7:0x0016 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: INVOKE  \l  (r3 I:android.support.design.shape.MaterialShapeDrawable)\l  (r1 I:int)\l  (r4 I:int)\l  (r5 I:int)\l android.support.design.shape.MaterialShapeDrawable.setCornerPathAndTransform(int, int, int):void type: DIRECT \l0x0010: INVOKE  \l  (r3 I:android.support.design.shape.MaterialShapeDrawable)\l  (r1 I:int)\l  (r4 I:int)\l  (r5 I:int)\l android.support.design.shape.MaterialShapeDrawable.setEdgeTransform(int, int, int):void type: DIRECT \l0x0013: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IF  (r0 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:9:0x0021 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: INVOKE  \l  (r3 I:android.support.design.shape.MaterialShapeDrawable)\l  (r0 I:int)\l  (r6 I:android.graphics.Path)\l android.support.design.shape.MaterialShapeDrawable.appendCornerPath(int, android.graphics.Path):void type: DIRECT \l0x001b: INVOKE  \l  (r3 I:android.support.design.shape.MaterialShapeDrawable)\l  (r0 I:int)\l  (r6 I:android.graphics.Path)\l android.support.design.shape.MaterialShapeDrawable.appendEdgePath(int, android.graphics.Path):void type: DIRECT \l0x001e: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: INVOKE  (r6 I:android.graphics.Path) android.graphics.Path.close():void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.shape.MaterialShapeDrawable.getPathForSize((r3 'this' I:android.support.design.shape.MaterialShapeDrawable A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.graphics.Path A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_4;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_7;
Node_9 -> Node_10;
}

