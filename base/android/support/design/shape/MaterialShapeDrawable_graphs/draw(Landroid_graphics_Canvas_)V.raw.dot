digraph "CFG forandroid.support.design.shape.MaterialShapeDrawable.draw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.graphics.Paint) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.paint android.graphics.Paint \l0x0002: IGET  (r1 I:android.graphics.PorterDuffColorFilter) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.tintFilter android.graphics.PorterDuffColorFilter \l0x0004: INVOKE  \l  (r0 I:android.graphics.Paint)\l  (r1 I:android.graphics.ColorFilter)\l android.graphics.Paint.setColorFilter(android.graphics.ColorFilter):android.graphics.ColorFilter type: VIRTUAL \l0x0007: IGET  (r0 I:android.graphics.Paint) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.paint android.graphics.Paint \l0x0009: INVOKE  (r0 I:int) = (r0 I:android.graphics.Paint) android.graphics.Paint.getAlpha():int type: VIRTUAL \l0x000d: IGET  (r1 I:android.graphics.Paint) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.paint android.graphics.Paint \l0x000f: IGET  (r2 I:int) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.alpha int \l0x0011: INVOKE  (r2 I:int) = (r0 I:int), (r2 I:int) android.support.design.shape.MaterialShapeDrawable.modulateAlpha(int, int):int type: STATIC \l0x0015: INVOKE  (r1 I:android.graphics.Paint), (r2 I:int) android.graphics.Paint.setAlpha(int):void type: VIRTUAL \l0x0018: IGET  (r1 I:android.graphics.Paint) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.paint android.graphics.Paint \l0x001a: IGET  (r2 I:float) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.strokeWidth float \l0x001c: INVOKE  (r1 I:android.graphics.Paint), (r2 I:float) android.graphics.Paint.setStrokeWidth(float):void type: VIRTUAL \l0x001f: IGET  (r1 I:android.graphics.Paint) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.paint android.graphics.Paint \l0x0021: IGET  (r2 I:android.graphics.Paint$Style) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.paintStyle android.graphics.Paint$Style \l0x0023: INVOKE  \l  (r1 I:android.graphics.Paint)\l  (r2 I:android.graphics.Paint$Style)\l android.graphics.Paint.setStyle(android.graphics.Paint$Style):void type: VIRTUAL \l0x0026: IGET  (r1 I:int) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.shadowElevation int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0028|0x0028: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:5:0x003c \l}"];
Node_2 [shape=record,label="{2\:\ 0x002a|0x002a: IGET  (r1 I:boolean) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.shadowEnabled boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x002c|0x002c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x003c \l}"];
Node_4 [shape=record,label="{4\:\ 0x002e|0x002e: IGET  (r1 I:android.graphics.Paint) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.paint android.graphics.Paint \l0x0030: IGET  (r2 I:int) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.shadowRadius int \l0x0032: CAST  (r2 I:float) = (float) (r2 I:int) \l0x0033: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0034: IGET  (r4 I:int) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.shadowElevation int \l0x0036: CAST  (r4 I:float) = (float) (r4 I:int) \l0x0037: IGET  (r5 I:int) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.shadowColor int \l0x0039: INVOKE  \l  (r1 I:android.graphics.Paint)\l  (r2 I:float)\l  (r3 I:float)\l  (r4 I:float)\l  (r5 I:int)\l android.graphics.Paint.setShadowLayer(float, float, float, int):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x003c|0x003c: IGET  (r1 I:android.support.design.shape.ShapePathModel) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.shapedViewModel android.support.design.shape.ShapePathModel \l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|0x003e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0055 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0040|0x0040: INVOKE  (r1 I:int) = (r10 I:android.graphics.Canvas) android.graphics.Canvas.getWidth():int type: VIRTUAL \l0x0044: INVOKE  (r2 I:int) = (r10 I:android.graphics.Canvas) android.graphics.Canvas.getHeight():int type: VIRTUAL \l0x0048: IGET  (r3 I:android.graphics.Path) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.path android.graphics.Path \l0x004a: INVOKE  \l  (r9 I:android.support.design.shape.MaterialShapeDrawable)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:android.graphics.Path)\l android.support.design.shape.MaterialShapeDrawable.getPath(int, int, android.graphics.Path):void type: DIRECT \l0x004d: IGET  (r1 I:android.graphics.Path) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.path android.graphics.Path \l0x004f: IGET  (r2 I:android.graphics.Paint) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.paint android.graphics.Paint \l0x0051: INVOKE  \l  (r10 I:android.graphics.Canvas)\l  (r1 I:android.graphics.Path)\l  (r2 I:android.graphics.Paint)\l android.graphics.Canvas.drawPath(android.graphics.Path, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0055|0x0055: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0056: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0057: INVOKE  (r1 I:int) = (r10 I:android.graphics.Canvas) android.graphics.Canvas.getWidth():int type: VIRTUAL \l0x005b: CAST  (r6 I:float) = (float) (r1 I:int) \l0x005c: INVOKE  (r1 I:int) = (r10 I:android.graphics.Canvas) android.graphics.Canvas.getHeight():int type: VIRTUAL \l0x0060: CAST  (r7 I:float) = (float) (r1 I:int) \l0x0061: IGET  (r8 I:android.graphics.Paint) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.paint android.graphics.Paint \l0x0063: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0064: INVOKE  \l  (r3 I:android.graphics.Canvas)\l  (r4 I:float)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:android.graphics.Paint)\l android.graphics.Canvas.drawRect(float, float, float, float, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0067|0x0067: IGET  (r10 I:android.graphics.Paint) = (r9 I:android.support.design.shape.MaterialShapeDrawable) android.support.design.shape.MaterialShapeDrawable.paint android.graphics.Paint \l0x0069: INVOKE  (r10 I:android.graphics.Paint), (r0 I:int) android.graphics.Paint.setAlpha(int):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x006c|0x006c: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.shape.MaterialShapeDrawable.draw((r9 'this' I:android.support.design.shape.MaterialShapeDrawable A[IMMUTABLE_TYPE, THIS]), (r10 I:android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

