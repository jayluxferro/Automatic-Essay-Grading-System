digraph "CFG forandroid.support.design.chip.ChipDrawable.setTintMode(Landroid\/graphics\/PorterDuff$Mode;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.graphics.PorterDuff$Mode) = (r1 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.tintMode android.graphics.PorterDuff$Mode \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IPUT  \l  (r2 I:android.graphics.PorterDuff$Mode)\l  (r1 I:android.support.design.chip.ChipDrawable)\l android.support.design.chip.ChipDrawable.tintMode android.graphics.PorterDuff$Mode \l0x0006: IGET  (r0 I:android.content.res.ColorStateList) = (r1 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.tint android.content.res.ColorStateList \l0x0008: INVOKE  (r2 I:android.graphics.PorterDuffColorFilter) = \l  (r1 I:android.graphics.drawable.Drawable)\l  (r0 I:android.content.res.ColorStateList)\l  (r2 I:android.graphics.PorterDuff$Mode)\l android.support.design.drawable.DrawableUtils.updateTintFilter(android.graphics.drawable.Drawable, android.content.res.ColorStateList, android.graphics.PorterDuff$Mode):android.graphics.PorterDuffColorFilter type: STATIC \l0x000c: IPUT  \l  (r2 I:android.graphics.PorterDuffColorFilter)\l  (r1 I:android.support.design.chip.ChipDrawable)\l android.support.design.chip.ChipDrawable.tintFilter android.graphics.PorterDuffColorFilter \l0x000e: INVOKE  (r1 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.invalidateSelf():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.chip.ChipDrawable.setTintMode((r1 'this' I:android.support.design.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r2 I:android.graphics.PorterDuff$Mode A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

