digraph "CFG forandroid.support.design.chip.ChipDrawable.calculateChipTouchBounds(Landroid\/graphics\/Rect;Landroid\/graphics\/RectF;)V" {
subgraph cluster_Region_817120521 {
label = "R(2:0|(2:2|(1:4)(1:5))(0))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.set(r3)\l}"];
subgraph cluster_IfRegion_1294745585 {
label = "IF [B:1:0x0007] THEN: R(2:2|(1:4)(1:5)) ELSE: R(0)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0007|if (showsCloseIcon() == true) goto L_0x0009\l}"];
subgraph cluster_Region_1708823510 {
label = "R(2:2|(1:4)(1:5))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|float float r0 = r2.chipEndPadding + r2.closeIconEndPadding + r2.closeIconSize + r2.closeIconStartPadding + r2.textEndPadding\l}"];
subgraph cluster_IfRegion_1858839046 {
label = "IF [B:3:0x001b] THEN: R(1:4) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001b|if (android.support.p000v4.graphics.drawable.DrawableCompat.getLayoutDirection(r2) == 0) goto L_0x001d\l}"];
subgraph cluster_Region_17860091 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001d|r4.right = ((float) r3.right) \- r0\l}"];
}
subgraph cluster_Region_1278880807 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0024|r4.left = ((float) r3.left) + r0\l}"];
}
}
}
subgraph cluster_Region_1648561311 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.design.chip.ChipDrawable.calculateChipTouchBounds((r2v0 'this' android.support.design.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r3v0 android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.graphics.RectF A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
}

