digraph "CFG forandroid.support.design.chip.ChipDrawable.setCheckedIcon(Landroid\/graphics\/drawable\/Drawable;)V" {
subgraph cluster_Region_1110635287 {
label = "R(1:(1:(2:2|(1:(1:4)))))";
node [shape=record,color=blue];
subgraph cluster_Region_735693169 {
label = "R(1:(2:2|(1:(1:4))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1550779838 {
label = "IF [B:1:0x0002] THEN: R(2:2|(1:(1:4))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.checkedIcon != r3) goto L_0x0004\l}"];
subgraph cluster_Region_630325825 {
label = "R(2:2|(1:(1:4)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|float float r0 = calculateChipIconWidth()\lr2.checkedIcon = r3\lfloat float r3 = calculateChipIconWidth()\lunapplyChildDrawable(r2.checkedIcon)\lapplyChildDrawable(r2.checkedIcon)\linvalidateSelf()\l}"];
subgraph cluster_Region_1930439661 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_307871788 {
label = "IF [B:3:0x001d] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001d|if (r0 != r3) goto L_0x001f\l}"];
subgraph cluster_Region_653251795 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001f|onSizeChange()\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.design.chip.ChipDrawable.setCheckedIcon((r2v0 'this' android.support.design.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r3v0 android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_5;
Node_0 -> Node_1;
}

