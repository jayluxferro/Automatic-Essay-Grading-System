digraph "CFG forandroid.support.design.chip.ChipDrawable.getOutline(Landroid\/graphics\/Outline;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.graphics.Rect r0 = getBounds()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0.isEmpty() != false) goto L_0x0010\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|r9.setRoundRect(r0, r8.chipCornerRadius)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|r2 = r9\lr2.setRoundRect(0, 0, getIntrinsicWidth(), getIntrinsicHeight(), r8.chipCornerRadius)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|r9.setAlpha(((float) getAlpha()) \/ 255.0f)\l}"];
Node_5 [shape=record,label="{5\:\ 0x002b|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.design.chip.ChipDrawable.getOutline((r8v0 'this' android.support.design.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r9v0 android.graphics.Outline A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.annotation.TargetApi, \{value=21\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

