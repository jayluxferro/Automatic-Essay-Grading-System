digraph "CFG forandroid.support.design.chip.ChipDrawable.applyChildDrawable(Landroid\/graphics\/drawable\/Drawable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r3 == null) goto L_?\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|r3.setCallback(r2)\landroid.support.p000v4.graphics.drawable.DrawableCompat.setLayoutDirection(r3, android.support.p000v4.graphics.drawable.DrawableCompat.getLayoutDirection(r2))\lr3.setLevel(getLevel())\lr3.setVisible(isVisible(), false)\l}"];
Node_2 [shape=record,label="{2\:\ 0x001d|if (r3 != r2.closeIcon) goto L_0x0032\l}"];
Node_3 [shape=record,label="{3\:\ 0x001f}"];
Node_4 [shape=record,label="{4\:\ 0x0023|if (r3.isStateful() == false) goto L_0x002c\l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|r3.setState(getCloseIconState())\l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|android.support.p000v4.graphics.drawable.DrawableCompat.setTintList(r3, r2.closeIconTint)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0032}"];
Node_8 [shape=record,label="{8\:\ 0x0036|if (r3.isStateful() == false) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|r3.setState(getState())\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.design.chip.ChipDrawable.applyChildDrawable((r2v0 'this' android.support.design.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r3v0 android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_11;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
}

