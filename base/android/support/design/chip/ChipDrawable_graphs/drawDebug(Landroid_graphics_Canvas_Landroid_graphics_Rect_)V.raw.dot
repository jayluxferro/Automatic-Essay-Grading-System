digraph "CFG forandroid.support.design.chip.ChipDrawable.drawDebug(Landroid\/graphics\/Canvas;Landroid\/graphics\/Rect;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.graphics.Paint) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.debugPaint android.graphics.Paint \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0087 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:android.graphics.Paint) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.debugPaint android.graphics.Paint \l0x0006: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (\-16777216(0xffffffffff000000, float:\-1.7014118E38) ?[int, float, short, byte, char])\l \l0x0008: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (127(0x7f, float:1.78E\-43) ?[int, float, short, byte, char])\l \l0x000a: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) android.support.v4.graphics.ColorUtils.setAlphaComponent(int, int):int type: STATIC \l0x000e: INVOKE  (r0 I:android.graphics.Paint), (r1 I:int) android.graphics.Paint.setColor(int):void type: VIRTUAL \l0x0011: IGET  (r0 I:android.graphics.Paint) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.debugPaint android.graphics.Paint \l0x0013: INVOKE  \l  (r10 I:android.graphics.Canvas)\l  (r11 I:android.graphics.Rect)\l  (r0 I:android.graphics.Paint)\l android.graphics.Canvas.drawRect(android.graphics.Rect, android.graphics.Paint):void type: VIRTUAL \l0x0016: INVOKE  (r0 I:boolean) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.showsChipIcon():boolean type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0022 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: INVOKE  (r0 I:boolean) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.showsCheckedIcon():boolean type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002e \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: IGET  (r0 I:android.graphics.RectF) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.rectF android.graphics.RectF \l0x0024: INVOKE  \l  (r9 I:android.support.design.chip.ChipDrawable)\l  (r11 I:android.graphics.Rect)\l  (r0 I:android.graphics.RectF)\l android.support.design.chip.ChipDrawable.calculateChipIconBounds(android.graphics.Rect, android.graphics.RectF):void type: DIRECT \l0x0027: IGET  (r0 I:android.graphics.RectF) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.rectF android.graphics.RectF \l0x0029: IGET  (r1 I:android.graphics.Paint) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.debugPaint android.graphics.Paint \l0x002b: INVOKE  \l  (r10 I:android.graphics.Canvas)\l  (r0 I:android.graphics.RectF)\l  (r1 I:android.graphics.Paint)\l android.graphics.Canvas.drawRect(android.graphics.RectF, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|0x002e: IGET  (r0 I:java.lang.CharSequence) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.unicodeWrappedText java.lang.CharSequence \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0046 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|0x0032: IGET  (r0 I:int) = (r11 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0034: CAST  (r4 I:float) = (float) (r0 I:int) \l0x0035: INVOKE  (r5 I:float) = (r11 I:android.graphics.Rect) android.graphics.Rect.exactCenterY():float type: VIRTUAL \l0x0039: IGET  (r0 I:int) = (r11 I:android.graphics.Rect) android.graphics.Rect.right int \l0x003b: CAST  (r6 I:float) = (float) (r0 I:int) \l0x003c: INVOKE  (r7 I:float) = (r11 I:android.graphics.Rect) android.graphics.Rect.exactCenterY():float type: VIRTUAL \l0x0040: IGET  (r8 I:android.graphics.Paint) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.debugPaint android.graphics.Paint \l0x0042: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0043: INVOKE  \l  (r3 I:android.graphics.Canvas)\l  (r4 I:float)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:android.graphics.Paint)\l android.graphics.Canvas.drawLine(float, float, float, float, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0046|0x0046: INVOKE  (r0 I:boolean) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.showsCloseIcon():boolean type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x004a|0x004a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0058 \l}"];
Node_12 [shape=record,label="{12\:\ 0x004c|0x004c: IGET  (r0 I:android.graphics.RectF) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.rectF android.graphics.RectF \l0x004e: INVOKE  \l  (r9 I:android.support.design.chip.ChipDrawable)\l  (r11 I:android.graphics.Rect)\l  (r0 I:android.graphics.RectF)\l android.support.design.chip.ChipDrawable.calculateCloseIconBounds(android.graphics.Rect, android.graphics.RectF):void type: DIRECT \l0x0051: IGET  (r0 I:android.graphics.RectF) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.rectF android.graphics.RectF \l0x0053: IGET  (r1 I:android.graphics.Paint) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.debugPaint android.graphics.Paint \l0x0055: INVOKE  \l  (r10 I:android.graphics.Canvas)\l  (r0 I:android.graphics.RectF)\l  (r1 I:android.graphics.Paint)\l android.graphics.Canvas.drawRect(android.graphics.RectF, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0058|0x0058: IGET  (r0 I:android.graphics.Paint) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.debugPaint android.graphics.Paint \l0x005a: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (\-65536(0xffffffffffff0000, float:NaN) ?[int, float, short, byte, char])\l \l0x005c: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) android.support.v4.graphics.ColorUtils.setAlphaComponent(int, int):int type: STATIC \l0x0060: INVOKE  (r0 I:android.graphics.Paint), (r1 I:int) android.graphics.Paint.setColor(int):void type: VIRTUAL \l0x0063: IGET  (r0 I:android.graphics.RectF) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.rectF android.graphics.RectF \l0x0065: INVOKE  \l  (r9 I:android.support.design.chip.ChipDrawable)\l  (r11 I:android.graphics.Rect)\l  (r0 I:android.graphics.RectF)\l android.support.design.chip.ChipDrawable.calculateChipTouchBounds(android.graphics.Rect, android.graphics.RectF):void type: DIRECT \l0x0068: IGET  (r0 I:android.graphics.RectF) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.rectF android.graphics.RectF \l0x006a: IGET  (r1 I:android.graphics.Paint) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.debugPaint android.graphics.Paint \l0x006c: INVOKE  \l  (r10 I:android.graphics.Canvas)\l  (r0 I:android.graphics.RectF)\l  (r1 I:android.graphics.Paint)\l android.graphics.Canvas.drawRect(android.graphics.RectF, android.graphics.Paint):void type: VIRTUAL \l0x006f: IGET  (r0 I:android.graphics.Paint) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.debugPaint android.graphics.Paint \l0x0071: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (\-16711936(0xffffffffff00ff00, float:\-1.7146522E38) ?[int, float, short, byte, char])\l \l0x0074: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) android.support.v4.graphics.ColorUtils.setAlphaComponent(int, int):int type: STATIC \l0x0078: INVOKE  (r0 I:android.graphics.Paint), (r1 I:int) android.graphics.Paint.setColor(int):void type: VIRTUAL \l0x007b: IGET  (r0 I:android.graphics.RectF) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.rectF android.graphics.RectF \l0x007d: INVOKE  \l  (r9 I:android.support.design.chip.ChipDrawable)\l  (r11 I:android.graphics.Rect)\l  (r0 I:android.graphics.RectF)\l android.support.design.chip.ChipDrawable.calculateCloseIconTouchBounds(android.graphics.Rect, android.graphics.RectF):void type: DIRECT \l0x0080: IGET  (r11 I:android.graphics.RectF) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.rectF android.graphics.RectF \l0x0082: IGET  (r0 I:android.graphics.Paint) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.debugPaint android.graphics.Paint \l0x0084: INVOKE  \l  (r10 I:android.graphics.Canvas)\l  (r11 I:android.graphics.RectF)\l  (r0 I:android.graphics.Paint)\l android.graphics.Canvas.drawRect(android.graphics.RectF, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0087|0x0087: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.design.chip.ChipDrawable.drawDebug((r9 'this' I:android.support.design.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r10 I:android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

