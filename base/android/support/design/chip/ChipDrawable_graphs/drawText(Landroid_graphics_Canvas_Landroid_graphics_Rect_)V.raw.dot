digraph "CFG forandroid.support.design.chip.ChipDrawable.drawText(Landroid\/graphics\/Canvas;Landroid\/graphics\/Rect;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.CharSequence) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.unicodeWrappedText java.lang.CharSequence \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x007f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:android.graphics.PointF) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.pointF android.graphics.PointF \l0x0006: INVOKE  (r0 I:android.graphics.Paint$Align) = \l  (r9 I:android.support.design.chip.ChipDrawable)\l  (r11 I:android.graphics.Rect)\l  (r0 I:android.graphics.PointF)\l android.support.design.chip.ChipDrawable.calculateTextOriginAndAlignment(android.graphics.Rect, android.graphics.PointF):android.graphics.Paint$Align type: VIRTUAL \l0x000a: IGET  (r1 I:android.graphics.RectF) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.rectF android.graphics.RectF \l0x000c: INVOKE  \l  (r9 I:android.support.design.chip.ChipDrawable)\l  (r11 I:android.graphics.Rect)\l  (r1 I:android.graphics.RectF)\l android.support.design.chip.ChipDrawable.calculateTextBounds(android.graphics.Rect, android.graphics.RectF):void type: DIRECT \l0x000f: IGET  (r11 I:android.support.design.resources.TextAppearance) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.textAppearance android.support.design.resources.TextAppearance \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0026 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IGET  (r11 I:android.text.TextPaint) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.textPaint android.text.TextPaint \l0x0015: INVOKE  (r1 I:int[]) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.getState():int[] type: VIRTUAL \l0x0019: IPUT  (r1 I:int[]), (r11 I:android.text.TextPaint) android.text.TextPaint.drawableState int[] \l0x001b: IGET  (r11 I:android.support.design.resources.TextAppearance) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.textAppearance android.support.design.resources.TextAppearance \l0x001d: IGET  (r1 I:android.content.Context) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.context android.content.Context \l0x001f: IGET  (r2 I:android.text.TextPaint) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.textPaint android.text.TextPaint \l0x0021: IGET  (r3 I:android.support.v4.content.res.ResourcesCompat$FontCallback) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.fontCallback android.support.v4.content.res.ResourcesCompat$FontCallback \l0x0023: INVOKE  \l  (r11 I:android.support.design.resources.TextAppearance)\l  (r1 I:android.content.Context)\l  (r2 I:android.text.TextPaint)\l  (r3 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l android.support.design.resources.TextAppearance.updateDrawState(android.content.Context, android.text.TextPaint, android.support.v4.content.res.ResourcesCompat$FontCallback):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: IGET  (r11 I:android.text.TextPaint) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.textPaint android.text.TextPaint \l0x0028: INVOKE  \l  (r11 I:android.text.TextPaint)\l  (r0 I:android.graphics.Paint$Align)\l android.text.TextPaint.setTextAlign(android.graphics.Paint$Align):void type: VIRTUAL \l0x002b: INVOKE  (r11 I:float) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.getTextWidth():float type: DIRECT \l0x002f: INVOKE  (r11 I:int) = (r11 I:float) java.lang.Math.round(float):int type: STATIC \l0x0033: IGET  (r0 I:android.graphics.RectF) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.rectF android.graphics.RectF \l0x0035: INVOKE  (r0 I:float) = (r0 I:android.graphics.RectF) android.graphics.RectF.width():float type: VIRTUAL \l0x0039: INVOKE  (r0 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x003d: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|0x003e: IF  (r11 I:?[int, byte, short, char]) \<= (r0 I:?[int, byte, short, char])  \-\> B:8:0x0042 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0040|0x0040: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0042|0x0042: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0043|0x0043: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x004e \l}"];
Node_10 [shape=record,label="{10\:\ 0x0045|0x0045: INVOKE  (r1 I:int) = (r10 I:android.graphics.Canvas) android.graphics.Canvas.save():int type: VIRTUAL \l0x0049: IGET  (r0 I:android.graphics.RectF) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.rectF android.graphics.RectF \l0x004b: INVOKE  \l  (r10 I:android.graphics.Canvas)\l  (r0 I:android.graphics.RectF)\l android.graphics.Canvas.clipRect(android.graphics.RectF):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x004e|0x004e: IGET  (r0 I:java.lang.CharSequence) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.unicodeWrappedText java.lang.CharSequence \l}"];
Node_12 [shape=record,label="{12\:\ 0x0050|0x0050: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0066 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0052|0x0052: IGET  (r2 I:android.text.TextUtils$TruncateAt) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.truncateAt android.text.TextUtils$TruncateAt \l}"];
Node_14 [shape=record,label="{14\:\ 0x0054|0x0054: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0066 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0056|0x0056: IGET  (r0 I:java.lang.CharSequence) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.unicodeWrappedText java.lang.CharSequence \l0x0058: IGET  (r2 I:android.text.TextPaint) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.textPaint android.text.TextPaint \l0x005a: IGET  (r3 I:android.graphics.RectF) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.rectF android.graphics.RectF \l0x005c: INVOKE  (r3 I:float) = (r3 I:android.graphics.RectF) android.graphics.RectF.width():float type: VIRTUAL \l0x0060: IGET  (r4 I:android.text.TextUtils$TruncateAt) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.truncateAt android.text.TextUtils$TruncateAt \l0x0062: INVOKE  (r0 I:java.lang.CharSequence) = \l  (r0 I:java.lang.CharSequence)\l  (r2 I:android.text.TextPaint)\l  (r3 I:float)\l  (r4 I:android.text.TextUtils$TruncateAt)\l android.text.TextUtils.ellipsize(java.lang.CharSequence, android.text.TextPaint, float, android.text.TextUtils$TruncateAt):java.lang.CharSequence type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0066|0x0066: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0067: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0068: INVOKE  (r5 I:int) = (r3 I:java.lang.CharSequence) java.lang.CharSequence.length():int type: INTERFACE \l0x006c: IGET  (r0 I:android.graphics.PointF) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.pointF android.graphics.PointF \l0x006e: IGET  (r6 I:float) = (r0 I:android.graphics.PointF) android.graphics.PointF.x float \l0x0070: IGET  (r0 I:android.graphics.PointF) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.pointF android.graphics.PointF \l0x0072: IGET  (r7 I:float) = (r0 I:android.graphics.PointF) android.graphics.PointF.y float \l0x0074: IGET  (r8 I:android.text.TextPaint) = (r9 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.textPaint android.text.TextPaint \l0x0076: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0077: INVOKE  \l  (r2 I:android.graphics.Canvas)\l  (r3 I:java.lang.CharSequence)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:android.graphics.Paint)\l android.graphics.Canvas.drawText(java.lang.CharSequence, int, int, float, float, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x007a|0x007a: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x007f \l}"];
Node_18 [shape=record,label="{18\:\ 0x007c|0x007c: INVOKE  (r10 I:android.graphics.Canvas), (r1 I:int) android.graphics.Canvas.restoreToCount(int):void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x007f|0x007f: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.design.chip.ChipDrawable.drawText((r9 'this' I:android.support.design.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r10 I:android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
}

