digraph "CFG forandroid.support.design.chip.ChipDrawable.getOutline(Landroid\/graphics\/Outline;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.graphics.Rect) = (r8 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.getBounds():android.graphics.Rect type: VIRTUAL \l0x0004: INVOKE  (r1 I:boolean) = (r0 I:android.graphics.Rect) android.graphics.Rect.isEmpty():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r1 I:float) = (r8 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.chipCornerRadius float \l0x000c: INVOKE  \l  (r9 I:android.graphics.Outline)\l  (r0 I:android.graphics.Rect)\l  (r1 I:float)\l android.graphics.Outline.setRoundRect(android.graphics.Rect, float):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0011: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: INVOKE  (r5 I:int) = (r8 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.getIntrinsicWidth():int type: VIRTUAL \l0x0016: INVOKE  (r6 I:int) = (r8 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.getIntrinsicHeight():int type: VIRTUAL \l0x001a: IGET  (r7 I:float) = (r8 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.chipCornerRadius float \l0x001c: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x001d: INVOKE  \l  (r2 I:android.graphics.Outline)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:float)\l android.graphics.Outline.setRoundRect(int, int, int, int, float):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: INVOKE  (r0 I:int) = (r8 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.getAlpha():int type: VIRTUAL \l0x0024: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0025: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1132396544(0x437f0000, float:255.0) ?[int, float, short, byte, char])\l \l0x0027: ARITH  (r0 I:float) = (r0 I:float) \/ (r1 I:float) \l0x0028: INVOKE  (r9 I:android.graphics.Outline), (r0 I:float) android.graphics.Outline.setAlpha(float):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x002b|0x002b: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.chip.ChipDrawable.getOutline((r8 'this' I:android.support.design.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r9 I:android.graphics.Outline A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.annotation.TargetApi, \{value=21\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

