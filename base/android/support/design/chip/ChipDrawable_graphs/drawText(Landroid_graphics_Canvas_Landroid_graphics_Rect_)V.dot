digraph "CFG forandroid.support.design.chip.ChipDrawable.drawText(Landroid\/graphics\/Canvas;Landroid\/graphics\/Rect;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r9.unicodeWrappedText == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|android.graphics.Paint$Align r0 = calculateTextOriginAndAlignment(r11, r9.pointF)\lcalculateTextBounds(r11, r9.rectF)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|if (r9.textAppearance == null) goto L_0x0026\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|android.text.TextPaint r11 = r9.textPaint\lr11.drawableState = getState()\lr9.textAppearance.updateDrawState(r9.context, r9.textPaint, r9.fontCallback)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|r9.textPaint.setTextAlign(r0)\lr1 = 0\l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|if (java.lang.Math.round(getTextWidth()) \<= java.lang.Math.round(r9.rectF.width())) goto L_0x0042\l}"];
Node_7 [shape=record,label="{7\:\ 0x0040|r11 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x0042|r11 = false\l}"];
Node_9 [shape=record,label="{9\:\ 0x0043|PHI: r11 \l  PHI: (r11v5 boolean) = (r11v6 boolean), (r11v7 boolean) binds: [B:8:0x0042, B:7:0x0040] A[DONT_GENERATE, DONT_INLINE]\l|if (r11 == false) goto L_0x004e\l}"];
Node_10 [shape=record,label="{10\:\ 0x0045|int r1 = r10.save()\lr10.clipRect(r9.rectF)\l}"];
Node_11 [shape=record,label="{11\:\ 0x004e|PHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v3 int) binds: [B:9:0x0043, B:10:0x0045] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.CharSequence r0 = r9.unicodeWrappedText\l}"];
Node_12 [shape=record,label="{12\:\ 0x0050|if (r11 == false) goto L_0x0066\l}"];
Node_13 [shape=record,label="{13\:\ 0x0052}"];
Node_14 [shape=record,label="{14\:\ 0x0054|if (r9.truncateAt == null) goto L_0x0066\l}"];
Node_15 [shape=record,label="{15\:\ 0x0056|java.lang.CharSequence r0 = android.text.TextUtils.ellipsize(r9.unicodeWrappedText, r9.textPaint, r9.rectF.width(), r9.truncateAt)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0066|PHI: r0 \l  PHI: (r0v7 java.lang.CharSequence) = (r0v6 java.lang.CharSequence), (r0v6 java.lang.CharSequence), (r0v11 java.lang.CharSequence) binds: [B:12:0x0050, B:14:0x0054, B:15:0x0056] A[DONT_GENERATE, DONT_INLINE]\l|r3 = r0\lr2 = r10\lr2.drawText(r3, 0, r3.length(), r9.pointF.x, r9.pointF.y, r9.textPaint)\l}"];
Node_17 [shape=record,label="{17\:\ 0x007a|if (r11 == false) goto L_?\l}"];
Node_18 [shape=record,label="{18\:\ 0x007c|r10.restoreToCount(r1)\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.design.chip.ChipDrawable.drawText((r9v0 'this' android.support.design.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r10v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
}

