digraph "CFG forandroid.support.design.chip.ChipDrawable.onStateChange([I[I)Z" {
subgraph cluster_Region_148109050 {
label = "R(20:0|1|(1:6)|8|(1:13)|15|(2:20|(1:22))|24|(1:31)|33|(2:42|(2:(9:44|(1:49)|(1:52)|(1:55)|(1:58)|(1:61)|(1:63)|(1:65)|66)|(1:45)))|46|(0)|(0)|(0)|(0)|(0)|(0)|(0)|66) | DECL_VAR: boolean null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|boolean boolean r0 = super.onStateChange(r6)\lint r2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|int r1 = r5.chipBackgroundColor != null ? r5.chipBackgroundColor.getColorForState(r6, r5.currentChipBackgroundColor) : 0\l}"];
subgraph cluster_IfRegion_1310733368 {
label = "IF [B:5:0x0016] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0016|if (r5.currentChipBackgroundColor != r1) goto L_0x0018\l}"];
subgraph cluster_Region_406551754 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0018|r5.currentChipBackgroundColor = r1\lr0 = true\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x001d|int r1 = r5.chipStrokeColor != null ? r5.chipStrokeColor.getColorForState(r6, r5.currentChipStrokeColor) : 0\l}"];
subgraph cluster_IfRegion_1862985124 {
label = "IF [B:12:0x002b] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002b|if (r5.currentChipStrokeColor != r1) goto L_0x002d\l}"];
subgraph cluster_Region_670091186 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x002d|r5.currentChipStrokeColor = r1\lr0 = true\l}"];
}
}
Node_15 [shape=record,label="{15\:\ 0x0032|int r1 = r5.compatRippleColor != null ? r5.compatRippleColor.getColorForState(r6, r5.currentCompatRippleColor) : 0\l}"];
subgraph cluster_IfRegion_2059181783 {
label = "IF [B:19:0x0040] THEN: R(2:20|(1:22)) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0040|if (r5.currentCompatRippleColor != r1) goto L_0x0042\l}"];
subgraph cluster_Region_847381669 {
label = "R(2:20|(1:22))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0042|r5.currentCompatRippleColor = r1\l}"];
subgraph cluster_IfRegion_993860363 {
label = "IF [B:21:0x0046] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0046|if (r5.useCompatRipple == true) goto L_0x0048\l}"];
subgraph cluster_Region_1125410776 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0048|r0 = true\l}"];
}
}
}
}
Node_24 [shape=record,label="{24\:\ 0x004b|int r1 = (r5.textAppearance == null \|\| r5.textAppearance.textColor == null) ? 0 : r5.textAppearance.textColor.getColorForState(r6, r5.currentTextColor)\l}"];
subgraph cluster_IfRegion_2102159161 {
label = "IF [B:30:0x0061] THEN: R(1:31) ELSE: null";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0061|if (r5.currentTextColor != r1) goto L_0x0063\l}"];
subgraph cluster_Region_1470558484 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0063|r5.currentTextColor = r1\lr0 = true\l}"];
}
}
Node_33 [shape=record,label="{33\:\ 0x0071|boolean r1 = hasState(getState(), 16842912) && r5.checkable\l}"];
subgraph cluster_IfRegion_1171495665 {
label = "IF [B:39:0x007c, B:41:0x0080] THEN: R(2:42|(2:(9:44|(1:49)|(1:52)|(1:55)|(1:58)|(1:61)|(1:63)|(1:65)|66)|(1:45))) ELSE: null";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x007c|ADDED_TO_REGION\l|if (r5.currentChecked == r1) goto L_0x0094\l}"];
Node_41 [shape=record,label="{41\:\ 0x0080|ADDED_TO_REGION\l|if (r5.checkedIcon == null) goto L_0x0094\l}"];
subgraph cluster_Region_1527250618 {
label = "R(2:42|(2:(9:44|(1:49)|(1:52)|(1:55)|(1:58)|(1:61)|(1:63)|(1:65)|66)|(1:45)))";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0082|float float r0 = calculateChipIconWidth()\lr5.currentChecked = r1\l}"];
subgraph cluster_Region_1354413339 {
label = "R(2:(9:44|(1:49)|(1:52)|(1:55)|(1:58)|(1:61)|(1:63)|(1:65)|66)|(1:45))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2030202451 {
label = "IF [B:43:0x008e] THEN: R(9:44|(1:49)|(1:52)|(1:55)|(1:58)|(1:61)|(1:63)|(1:65)|66) ELSE: null";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x008e|if (r0 != calculateChipIconWidth()) goto L_0x0090\l}"];
subgraph cluster_Region_1324233565 {
label = "R(9:44|(1:49)|(1:52)|(1:55)|(1:58)|(1:61)|(1:63)|(1:65)|66)";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0090|r0 = true\lr1 = true\l}"];
subgraph cluster_IfRegion_236960104 {
label = "IF [B:48:0x0097] THEN: R(1:49) ELSE: null";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x0097|if (r5.tint != null) goto L_0x0099\l}"];
subgraph cluster_Region_970132235 {
label = "R(1:49)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0099|int r2 = r5.tint.getColorForState(r6, r5.currentTint)\l}"];
}
}
subgraph cluster_IfRegion_2060320215 {
label = "IF [B:51:0x00a3] THEN: R(1:52) ELSE: null";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x00a3|if (r5.currentTint != r2) goto L_0x00a5\l}"];
subgraph cluster_Region_99760786 {
label = "R(1:52)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x00a5|r5.currentTint = r2\lr5.tintFilter = android.support.design.drawable.DrawableUtils.updateTintFilter(r5, r5.tint, r5.tintMode)\lr0 = true\l}"];
}
}
subgraph cluster_IfRegion_677203943 {
label = "IF [B:54:0x00b8] THEN: R(1:55) ELSE: null";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x00b8|if (isStateful(r5.chipIcon) == true) goto L_0x00ba\l}"];
subgraph cluster_Region_310475294 {
label = "R(1:55)";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x00ba|r0 \|= r5.chipIcon.setState(r6)\l}"];
}
}
subgraph cluster_IfRegion_2070670500 {
label = "IF [B:57:0x00c7] THEN: R(1:58) ELSE: null";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x00c7|if (isStateful(r5.checkedIcon) == true) goto L_0x00c9\l}"];
subgraph cluster_Region_1478227707 {
label = "R(1:58)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x00c9|r0 \|= r5.checkedIcon.setState(r6)\l}"];
}
}
subgraph cluster_IfRegion_2122091711 {
label = "IF [B:60:0x00d6] THEN: R(1:61) ELSE: null";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x00d6|if (isStateful(r5.closeIcon) == true) goto L_0x00d8\l}"];
subgraph cluster_Region_1248903525 {
label = "R(1:61)";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x00d8|r0 \|= r5.closeIcon.setState(r7)\l}"];
}
}
subgraph cluster_IfRegion_2029322376 {
label = "IF [B:62:0x00df] THEN: R(1:63) ELSE: null";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x00df|PHI: r0 \l  PHI: (r0v9 boolean) = (r0v8 boolean), (r0v10 boolean) binds: [B:60:0x00d6, B:61:0x00d8] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == true) goto L_0x00e1\l}"];
subgraph cluster_Region_232505057 {
label = "R(1:63)";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x00e1|invalidateSelf()\l}"];
}
}
subgraph cluster_IfRegion_1329330890 {
label = "IF [B:64:0x00e4] THEN: R(1:65) ELSE: null";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x00e4|if (r1 == true) goto L_0x00e6\l}"];
subgraph cluster_Region_1804677445 {
label = "R(1:65)";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ 0x00e6|onSizeChange()\l}"];
}
}
Node_66 [shape=record,label="{66\:\ 0x00e9|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_1229301920 {
label = "R(1:45)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0093|r0 = true\l}"];
}
}
}
}
Node_46 [shape=record,label="{46\:\ 0x0094|PHI: r0 \l  PHI: (r0v16 boolean) = (r0v4 boolean), (r0v4 boolean), (r0v19 boolean) binds: [B:39:0x007c, B:41:0x0080, B:45:0x0093] A[DONT_GENERATE, DONT_INLINE]\l|r1 = false\l}"];
subgraph cluster_IfRegion_1905410556 {
label = "IF [B:48:0x0097] THEN: R(0) ELSE: null";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x0097|if (r5.tint != null) goto L_0x0099\l}"];
subgraph cluster_Region_569296281 {
label = "R(0)";
node [shape=record,color=blue];
}
}
subgraph cluster_IfRegion_711742278 {
label = "IF [B:51:0x00a3] THEN: R(0) ELSE: null";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x00a3|if (r5.currentTint != r2) goto L_0x00a5\l}"];
subgraph cluster_Region_831755972 {
label = "R(0)";
node [shape=record,color=blue];
}
}
subgraph cluster_IfRegion_1407881898 {
label = "IF [B:54:0x00b8] THEN: R(0) ELSE: null";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x00b8|if (isStateful(r5.chipIcon) == true) goto L_0x00ba\l}"];
subgraph cluster_Region_806659210 {
label = "R(0)";
node [shape=record,color=blue];
}
}
subgraph cluster_IfRegion_1728146716 {
label = "IF [B:57:0x00c7] THEN: R(0) ELSE: null";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x00c7|if (isStateful(r5.checkedIcon) == true) goto L_0x00c9\l}"];
subgraph cluster_Region_1250550414 {
label = "R(0)";
node [shape=record,color=blue];
}
}
subgraph cluster_IfRegion_1307662007 {
label = "IF [B:60:0x00d6] THEN: R(0) ELSE: null";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x00d6|if (isStateful(r5.closeIcon) == true) goto L_0x00d8\l}"];
subgraph cluster_Region_1481939831 {
label = "R(0)";
node [shape=record,color=blue];
}
}
subgraph cluster_IfRegion_406819561 {
label = "IF [B:62:0x00df] THEN: R(0) ELSE: null";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x00df|PHI: r0 \l  PHI: (r0v9 boolean) = (r0v8 boolean), (r0v10 boolean) binds: [B:60:0x00d6, B:61:0x00d8] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == true) goto L_0x00e1\l}"];
subgraph cluster_Region_886138092 {
label = "R(0)";
node [shape=record,color=blue];
}
}
subgraph cluster_IfRegion_826895722 {
label = "IF [B:64:0x00e4] THEN: R(0) ELSE: null";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x00e4|if (r1 == true) goto L_0x00e6\l}"];
subgraph cluster_Region_1992999194 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_66 [shape=record,label="{66\:\ 0x00e9|RETURN\l|return r0\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0009}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0012}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0013|PHI: r1 \l  PHI: (r1v1 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001b|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v0 boolean), (r0v24 boolean) binds: [B:5:0x0016, B:6:0x0018] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001f}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0028}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0029|PHI: r1 \l  PHI: (r1v3 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0030|PHI: r0 \l  PHI: (r0v2 boolean) = (r0v1 boolean), (r0v23 boolean) binds: [B:12:0x002b, B:13:0x002d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0034}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x003d}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x003e|PHI: r1 \l  PHI: (r1v5 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0049|PHI: r0 \l  PHI: (r0v3 boolean) = (r0v2 boolean), (r0v2 boolean), (r0v22 boolean) binds: [B:19:0x0040, B:21:0x0046, B:22:0x0048] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x004d}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0051|REMOVE\lADDED_TO_REGION\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0053}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x005e}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x005f|PHI: r1 \l  PHI: (r1v7 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0066|PHI: r0 \l  PHI: (r0v4 boolean) = (r0v3 boolean), (r0v21 boolean) binds: [B:30:0x0061, B:31:0x0063] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0073}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0075|REMOVE\lADDED_TO_REGION\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0077}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0079}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x007a|PHI: r1 \l  PHI: (r1v10 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x007e}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0095|PHI: r0 r1 \l  PHI: (r0v5 boolean) = (r0v16 boolean), (r0v20 boolean) binds: [B:46:0x0094, B:44:0x0090] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v11 boolean) = (r1v12 boolean), (r1v14 boolean) binds: [B:46:0x0094, B:44:0x0090] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x00a1|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v11 int) binds: [B:48:0x0097, B:49:0x0099] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x00b2|PHI: r0 \l  PHI: (r0v6 boolean) = (r0v5 boolean), (r0v15 boolean) binds: [B:51:0x00a3, B:52:0x00a5] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x00c1|PHI: r0 \l  PHI: (r0v7 boolean) = (r0v6 boolean), (r0v12 boolean) binds: [B:54:0x00b8, B:55:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x00d0|PHI: r0 \l  PHI: (r0v8 boolean) = (r0v7 boolean), (r0v11 boolean) binds: [B:57:0x00c7, B:58:0x00c9] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{private boolean android.support.design.chip.ChipDrawable.onStateChange((r5v0 'this' android.support.design.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r6v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lRemoved duplicated region for block: B:49:0x0099 \lRemoved duplicated region for block: B:52:0x00a5 \lRemoved duplicated region for block: B:55:0x00ba \lRemoved duplicated region for block: B:58:0x00c9 \lRemoved duplicated region for block: B:61:0x00d8 \lRemoved duplicated region for block: B:63:0x00e1 \lRemoved duplicated region for block: B:65:0x00e6 \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_10;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_15 -> Node_17;
Node_19 -> Node_20;
Node_19 -> Node_23[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_24 -> Node_28;
Node_30 -> Node_31;
Node_30 -> Node_32[style=dashed];
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_33 -> Node_37;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_46;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_46;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_43 -> Node_45[style=dashed];
Node_44 -> Node_47;
Node_48 -> Node_49;
Node_48 -> Node_50[style=dashed];
Node_49 -> Node_50;
Node_51 -> Node_52;
Node_51 -> Node_53[style=dashed];
Node_52 -> Node_53;
Node_54 -> Node_55;
Node_54 -> Node_56[style=dashed];
Node_55 -> Node_56;
Node_57 -> Node_58;
Node_57 -> Node_59[style=dashed];
Node_58 -> Node_59;
Node_60 -> Node_61;
Node_60 -> Node_62[style=dashed];
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_62 -> Node_64[style=dashed];
Node_63 -> Node_64;
Node_64 -> Node_65;
Node_64 -> Node_66[style=dashed];
Node_65 -> Node_66;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_48 -> Node_49;
Node_48 -> Node_50[style=dashed];
Node_51 -> Node_52;
Node_51 -> Node_53[style=dashed];
Node_54 -> Node_55;
Node_54 -> Node_56[style=dashed];
Node_57 -> Node_58;
Node_57 -> Node_59[style=dashed];
Node_60 -> Node_61;
Node_60 -> Node_62[style=dashed];
Node_62 -> Node_63;
Node_62 -> Node_64[style=dashed];
Node_64 -> Node_65;
Node_64 -> Node_66[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_7 -> Node_8;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_14 -> Node_15;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_37;
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_40 -> Node_41;
Node_47 -> Node_48;
Node_50 -> Node_51;
Node_53 -> Node_54;
Node_56 -> Node_57;
Node_59 -> Node_60;
}

