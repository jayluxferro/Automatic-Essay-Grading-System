digraph "CFG forandroid.support.design.chip.ChipDrawable.draw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.graphics.Rect r0 = getBounds()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0.isEmpty() != false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (getAlpha() != 0) goto L_0x0011\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|r1 = 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|if (r10.alpha \>= 255) goto L_0x002b\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|r4 = r11\lint r1 = android.support.design.canvas.CanvasCompat.saveLayerAlpha(r4, (float) r0.left, (float) r0.top, (float) r0.right, (float) r0.bottom, r10.alpha)\l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|PHI: r1 \l  PHI: (r1v3 int) = (r1v2 int), (r1v8 int) binds: [B:5:0x0016, B:6:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|drawChipBackground(r11, r0)\ldrawChipStroke(r11, r0)\ldrawCompatRipple(r11, r0)\ldrawChipIcon(r11, r0)\ldrawCheckedIcon(r11, r0)\l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|if (r10.shouldDrawText == false) goto L_0x0041\l}"];
Node_9 [shape=record,label="{9\:\ 0x003e|drawText(r11, r0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|drawCloseIcon(r11, r0)\ldrawDebug(r11, r0)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0049|if (r10.alpha \>= 255) goto L_?\l}"];
Node_12 [shape=record,label="{12\:\ 0x004b|r11.restoreToCount(r1)\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.design.chip.ChipDrawable.draw((r10v0 'this' android.support.design.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r11v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_16[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
}

