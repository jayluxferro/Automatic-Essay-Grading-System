digraph "CFG forandroid.support.design.chip.Chip.2.getOutline(Landroid\/view\/View;Landroid\/graphics\/Outline;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r1 I:android.support.design.chip.Chip) = (r0 I:android.support.design.chip.Chip$2) android.support.design.chip.Chip.2.this$0 android.support.design.chip.Chip \l0x0002: INVOKE  (r1 I:android.support.design.chip.ChipDrawable) = (r1 I:android.support.design.chip.Chip) android.support.design.chip.Chip.access$000(android.support.design.chip.Chip):android.support.design.chip.ChipDrawable type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r1 I:android.support.design.chip.Chip) = (r0 I:android.support.design.chip.Chip$2) android.support.design.chip.Chip.2.this$0 android.support.design.chip.Chip \l0x000a: INVOKE  (r1 I:android.support.design.chip.ChipDrawable) = (r1 I:android.support.design.chip.Chip) android.support.design.chip.Chip.access$000(android.support.design.chip.Chip):android.support.design.chip.ChipDrawable type: STATIC \l0x000e: INVOKE  \l  (r1 I:android.support.design.chip.ChipDrawable)\l  (r2 I:android.graphics.Outline)\l android.support.design.chip.ChipDrawable.getOutline(android.graphics.Outline):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: INVOKE  (r2 I:android.graphics.Outline), (r1 I:float) android.graphics.Outline.setAlpha(float):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.chip.Chip.2.getOutline((r0 'this' I:android.support.design.chip.Chip$2 A[IMMUTABLE_TYPE, THIS]), (r1 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:android.graphics.Outline A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=21\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

