digraph "CFG forandroid.support.design.chip.Chip.\<init\>(Landroid\/content\/Context;Landroid\/util\/AttributeSet;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r1 I:android.support.v7.widget.AppCompatCheckBox)\l  (r2 I:android.content.Context)\l  (r3 I:android.util.AttributeSet)\l  (r4 I:int)\l android.support.v7.widget.AppCompatCheckBox.\<init\>(android.content.Context, android.util.AttributeSet, int):void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (\-2147483648(0xffffffff80000000, float:\-0.0) ?[int, float, short, byte, char])\l \l0x0005: IPUT  (r0 I:int), (r1 I:android.support.design.chip.Chip) android.support.design.chip.Chip.focusedVirtualView int \l0x0007: NEW_INSTANCE  (r0 I:android.graphics.Rect) =  android.graphics.Rect \l0x0009: INVOKE  (r0 I:android.graphics.Rect) android.graphics.Rect.\<init\>():void type: DIRECT \l0x000c: IPUT  \l  (r0 I:android.graphics.Rect)\l  (r1 I:android.support.design.chip.Chip)\l android.support.design.chip.Chip.rect android.graphics.Rect \l0x000e: NEW_INSTANCE  (r0 I:android.graphics.RectF) =  android.graphics.RectF \l0x0010: INVOKE  (r0 I:android.graphics.RectF) android.graphics.RectF.\<init\>():void type: DIRECT \l0x0013: IPUT  \l  (r0 I:android.graphics.RectF)\l  (r1 I:android.support.design.chip.Chip)\l android.support.design.chip.Chip.rectF android.graphics.RectF \l0x0015: NEW_INSTANCE  (r0 I:android.support.design.chip.Chip$1) =  android.support.design.chip.Chip$1 \l0x0017: INVOKE  \l  (r0 I:android.support.design.chip.Chip$1)\l  (r1 I:android.support.design.chip.Chip)\l android.support.design.chip.Chip.1.\<init\>(android.support.design.chip.Chip):void type: DIRECT \l0x001a: IPUT  \l  (r0 I:android.support.v4.content.res.ResourcesCompat$FontCallback)\l  (r1 I:android.support.design.chip.Chip)\l android.support.design.chip.Chip.fontCallback android.support.v4.content.res.ResourcesCompat$FontCallback \l0x001c: INVOKE  \l  (r1 I:android.support.design.chip.Chip)\l  (r3 I:android.util.AttributeSet)\l android.support.design.chip.Chip.validateAttributes(android.util.AttributeSet):void type: DIRECT \l0x001f: SGET  (r0 I:int) =  android.support.design.R.style.Widget_MaterialComponents_Chip_Action int \l0x0021: INVOKE  (r2 I:android.support.design.chip.ChipDrawable) = \l  (r2 I:android.content.Context)\l  (r3 I:android.util.AttributeSet)\l  (r4 I:int)\l  (r0 I:int)\l android.support.design.chip.ChipDrawable.createFromAttributes(android.content.Context, android.util.AttributeSet, int, int):android.support.design.chip.ChipDrawable type: STATIC \l0x0025: INVOKE  \l  (r1 I:android.support.design.chip.Chip)\l  (r2 I:android.support.design.chip.ChipDrawable)\l android.support.design.chip.Chip.setChipDrawable(android.support.design.chip.ChipDrawable):void type: VIRTUAL \l0x0028: NEW_INSTANCE  (r3 I:android.support.design.chip.Chip$ChipTouchHelper) =  android.support.design.chip.Chip$ChipTouchHelper \l0x002a: INVOKE  \l  (r3 I:android.support.design.chip.Chip$ChipTouchHelper)\l  (r1 I:android.support.design.chip.Chip)\l  (r1 I:android.support.design.chip.Chip)\l android.support.design.chip.Chip.ChipTouchHelper.\<init\>(android.support.design.chip.Chip, android.support.design.chip.Chip):void type: DIRECT \l0x002d: IPUT  \l  (r3 I:android.support.design.chip.Chip$ChipTouchHelper)\l  (r1 I:android.support.design.chip.Chip)\l android.support.design.chip.Chip.touchHelper android.support.design.chip.Chip$ChipTouchHelper \l0x002f: IGET  (r3 I:android.support.design.chip.Chip$ChipTouchHelper) = (r1 I:android.support.design.chip.Chip) android.support.design.chip.Chip.touchHelper android.support.design.chip.Chip$ChipTouchHelper \l0x0031: INVOKE  \l  (r1 I:android.view.View)\l  (r3 I:android.support.v4.view.AccessibilityDelegateCompat)\l android.support.v4.view.ViewCompat.setAccessibilityDelegate(android.view.View, android.support.v4.view.AccessibilityDelegateCompat):void type: STATIC \l0x0034: INVOKE  (r1 I:android.support.design.chip.Chip) android.support.design.chip.Chip.initOutlineProvider():void type: DIRECT \l0x0037: IGET  (r3 I:boolean) = (r1 I:android.support.design.chip.Chip) android.support.design.chip.Chip.deferredCheckedValue boolean \l0x0039: INVOKE  (r1 I:android.support.design.chip.Chip), (r3 I:boolean) android.support.design.chip.Chip.setChecked(boolean):void type: VIRTUAL \l0x003c: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003d: INVOKE  \l  (r2 I:android.support.design.chip.ChipDrawable)\l  (r3 I:boolean)\l android.support.design.chip.ChipDrawable.setShouldDrawText(boolean):void type: VIRTUAL \l0x0040: INVOKE  (r4 I:java.lang.CharSequence) = (r2 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.getText():java.lang.CharSequence type: VIRTUAL \l0x0044: INVOKE  \l  (r1 I:android.support.design.chip.Chip)\l  (r4 I:java.lang.CharSequence)\l android.support.design.chip.Chip.setText(java.lang.CharSequence):void type: VIRTUAL \l0x0047: INVOKE  (r2 I:android.text.TextUtils$TruncateAt) = (r2 I:android.support.design.chip.ChipDrawable) android.support.design.chip.ChipDrawable.getEllipsize():android.text.TextUtils$TruncateAt type: VIRTUAL \l0x004b: INVOKE  \l  (r1 I:android.support.design.chip.Chip)\l  (r2 I:android.text.TextUtils$TruncateAt)\l android.support.design.chip.Chip.setEllipsize(android.text.TextUtils$TruncateAt):void type: VIRTUAL \l0x004e: INVOKE  (r1 I:android.support.design.chip.Chip), (r3 I:boolean) android.support.design.chip.Chip.setIncludeFontPadding(boolean):void type: VIRTUAL \l0x0051: INVOKE  (r2 I:android.support.design.resources.TextAppearance) = (r1 I:android.support.design.chip.Chip) android.support.design.chip.Chip.getTextAppearance():android.support.design.resources.TextAppearance type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0055|0x0055: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x005e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0057|0x0057: INVOKE  (r2 I:android.support.design.resources.TextAppearance) = (r1 I:android.support.design.chip.Chip) android.support.design.chip.Chip.getTextAppearance():android.support.design.resources.TextAppearance type: DIRECT \l0x005b: INVOKE  \l  (r1 I:android.support.design.chip.Chip)\l  (r2 I:android.support.design.resources.TextAppearance)\l android.support.design.chip.Chip.updateTextPaintDrawState(android.support.design.resources.TextAppearance):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x005e|0x005e: INVOKE  (r1 I:android.support.design.chip.Chip) android.support.design.chip.Chip.setSingleLine():void type: VIRTUAL \l0x0061: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (8388627(0x800013, float:1.175497E\-38) ?[int, float, short, byte, char])\l \l0x0064: INVOKE  (r1 I:android.support.design.chip.Chip), (r2 I:int) android.support.design.chip.Chip.setGravity(int):void type: VIRTUAL \l0x0067: INVOKE  (r1 I:android.support.design.chip.Chip) android.support.design.chip.Chip.updatePaddingInternal():void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x006a|0x006a: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.chip.Chip.\<init\>((r1 'this' I:android.support.design.chip.Chip A[IMMUTABLE_TYPE, THIS]), (r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

