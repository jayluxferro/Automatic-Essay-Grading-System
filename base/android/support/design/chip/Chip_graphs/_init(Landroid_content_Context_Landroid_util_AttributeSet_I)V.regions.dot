digraph "CFG forandroid.support.design.chip.Chip.\<init\>(Landroid\/content\/Context;Landroid\/util\/AttributeSet;I)V" {
subgraph cluster_Region_1718664827 {
label = "R(3:0|(1:2)|3)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super(r2, r3, r4)\lr1.focusedVirtualView = Integer.MIN_VALUE\lr1.rect = new android.graphics.Rect()\lr1.rectF = new android.graphics.RectF()\lr1.fontCallback = new android.support.design.chip.Chip.C00731()\lvalidateAttributes(r3)\landroid.support.design.chip.ChipDrawable android.support.design.chip.ChipDrawable r2 = android.support.design.chip.ChipDrawable.createFromAttributes(r2, r3, r4, android.support.design.C0059R.C0063style.Widget_MaterialComponents_Chip_Action)\lsetChipDrawable(r2)\lr1.touchHelper = new android.support.design.chip.Chip.ChipTouchHelper(r1)\landroid.support.p000v4.view.ViewCompat.setAccessibilityDelegate(r1, r1.touchHelper)\linitOutlineProvider()\lsetChecked(r1.deferredCheckedValue)\lr2.setShouldDrawText(false)\lsetText(r2.getText())\lsetEllipsize(r2.getEllipsize())\lsetIncludeFontPadding(false)\l}"];
subgraph cluster_IfRegion_740490170 {
label = "IF [B:1:0x0055] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0055|if (getTextAppearance() != null) goto L_0x0057\l}"];
subgraph cluster_Region_696181431 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0057|updateTextPaintDrawState(getTextAppearance())\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x005e|setSingleLine()\lsetGravity(8388627)\lupdatePaddingInternal()\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ 0x006a}"];
MethodNode[shape=record,label="{public void android.support.design.chip.Chip.\<init\>((r1v0 'this' android.support.design.chip.Chip A[IMMUTABLE_TYPE, THIS]), (r2v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
}

