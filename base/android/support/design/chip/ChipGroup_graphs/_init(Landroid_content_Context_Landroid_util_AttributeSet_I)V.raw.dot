digraph "CFG forandroid.support.design.chip.ChipGroup.\<init\>(Landroid\/content\/Context;Landroid\/util\/AttributeSet;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r8 I:android.support.design.internal.FlowLayout)\l  (r9 I:android.content.Context)\l  (r10 I:android.util.AttributeSet)\l  (r11 I:int)\l android.support.design.internal.FlowLayout.\<init\>(android.content.Context, android.util.AttributeSet, int):void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:android.support.design.chip.ChipGroup$CheckedStateTracker) =  android.support.design.chip.ChipGroup$CheckedStateTracker \l0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: INVOKE  \l  (r0 I:android.support.design.chip.ChipGroup$CheckedStateTracker)\l  (r8 I:android.support.design.chip.ChipGroup)\l  (r1 I:android.support.design.chip.ChipGroup$1)\l android.support.design.chip.ChipGroup.CheckedStateTracker.\<init\>(android.support.design.chip.ChipGroup, android.support.design.chip.ChipGroup$1):void type: DIRECT \l0x0009: IPUT  \l  (r0 I:android.support.design.chip.ChipGroup$CheckedStateTracker)\l  (r8 I:android.support.design.chip.ChipGroup)\l android.support.design.chip.ChipGroup.checkedStateTracker android.support.design.chip.ChipGroup$CheckedStateTracker \l0x000b: NEW_INSTANCE  (r0 I:android.support.design.chip.ChipGroup$PassThroughHierarchyChangeListener) =  android.support.design.chip.ChipGroup$PassThroughHierarchyChangeListener \l0x000d: INVOKE  \l  (r0 I:android.support.design.chip.ChipGroup$PassThroughHierarchyChangeListener)\l  (r8 I:android.support.design.chip.ChipGroup)\l  (r1 I:android.support.design.chip.ChipGroup$1)\l android.support.design.chip.ChipGroup.PassThroughHierarchyChangeListener.\<init\>(android.support.design.chip.ChipGroup, android.support.design.chip.ChipGroup$1):void type: DIRECT \l0x0010: IPUT  \l  (r0 I:android.support.design.chip.ChipGroup$PassThroughHierarchyChangeListener)\l  (r8 I:android.support.design.chip.ChipGroup)\l android.support.design.chip.ChipGroup.passThroughListener android.support.design.chip.ChipGroup$PassThroughHierarchyChangeListener \l0x0012: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0013: IPUT  (r0 I:int), (r8 I:android.support.design.chip.ChipGroup) android.support.design.chip.ChipGroup.checkedId int \l0x0015: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0016: IPUT  \l  (r1 I:boolean)\l  (r8 I:android.support.design.chip.ChipGroup)\l android.support.design.chip.ChipGroup.protectFromCheckedChange boolean \l0x0018: SGET  (r4 I:int[]) =  android.support.design.R.styleable.ChipGroup int[] \l0x001a: SGET  (r6 I:int) =  android.support.design.R.style.Widget_MaterialComponents_ChipGroup int \l0x001c: NEW_ARRAY  (r7 I:int[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x001e: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x001f: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0020: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0021: INVOKE  (r9 I:android.content.res.TypedArray) = \l  (r2 I:android.content.Context)\l  (r3 I:android.util.AttributeSet)\l  (r4 I:int[])\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int[])\l android.support.design.internal.ThemeEnforcement.obtainStyledAttributes(android.content.Context, android.util.AttributeSet, int[], int, int, int[]):android.content.res.TypedArray type: STATIC \l0x0025: SGET  (r10 I:int) =  android.support.design.R.styleable.ChipGroup_chipSpacing int \l0x0027: INVOKE  (r10 I:int) = \l  (r9 I:android.content.res.TypedArray)\l  (r10 I:int)\l  (r1 I:int)\l android.content.res.TypedArray.getDimensionPixelOffset(int, int):int type: VIRTUAL \l0x002b: SGET  (r11 I:int) =  android.support.design.R.styleable.ChipGroup_chipSpacingHorizontal int \l0x002d: INVOKE  (r11 I:int) = \l  (r9 I:android.content.res.TypedArray)\l  (r11 I:int)\l  (r10 I:int)\l android.content.res.TypedArray.getDimensionPixelOffset(int, int):int type: VIRTUAL \l0x0031: INVOKE  (r8 I:android.support.design.chip.ChipGroup), (r11 I:int) android.support.design.chip.ChipGroup.setChipSpacingHorizontal(int):void type: VIRTUAL \l0x0034: SGET  (r11 I:int) =  android.support.design.R.styleable.ChipGroup_chipSpacingVertical int \l0x0036: INVOKE  (r10 I:int) = \l  (r9 I:android.content.res.TypedArray)\l  (r11 I:int)\l  (r10 I:int)\l android.content.res.TypedArray.getDimensionPixelOffset(int, int):int type: VIRTUAL \l0x003a: INVOKE  (r8 I:android.support.design.chip.ChipGroup), (r10 I:int) android.support.design.chip.ChipGroup.setChipSpacingVertical(int):void type: VIRTUAL \l0x003d: SGET  (r10 I:int) =  android.support.design.R.styleable.ChipGroup_singleLine int \l0x003f: INVOKE  (r10 I:boolean) = \l  (r9 I:android.content.res.TypedArray)\l  (r10 I:int)\l  (r1 I:boolean)\l android.content.res.TypedArray.getBoolean(int, boolean):boolean type: VIRTUAL \l0x0043: INVOKE  \l  (r8 I:android.support.design.chip.ChipGroup)\l  (r10 I:boolean)\l android.support.design.chip.ChipGroup.setSingleLine(boolean):void type: VIRTUAL \l0x0046: SGET  (r10 I:int) =  android.support.design.R.styleable.ChipGroup_singleSelection int \l0x0048: INVOKE  (r10 I:boolean) = \l  (r9 I:android.content.res.TypedArray)\l  (r10 I:int)\l  (r1 I:boolean)\l android.content.res.TypedArray.getBoolean(int, boolean):boolean type: VIRTUAL \l0x004c: INVOKE  \l  (r8 I:android.support.design.chip.ChipGroup)\l  (r10 I:boolean)\l android.support.design.chip.ChipGroup.setSingleSelection(boolean):void type: VIRTUAL \l0x004f: SGET  (r10 I:int) =  android.support.design.R.styleable.ChipGroup_checkedChip int \l0x0051: INVOKE  (r10 I:int) = \l  (r9 I:android.content.res.TypedArray)\l  (r10 I:int)\l  (r0 I:int)\l android.content.res.TypedArray.getResourceId(int, int):int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0055|0x0055: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0059 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0057|0x0057: IPUT  (r10 I:int), (r8 I:android.support.design.chip.ChipGroup) android.support.design.chip.ChipGroup.checkedId int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0059|0x0059: INVOKE  (r9 I:android.content.res.TypedArray) android.content.res.TypedArray.recycle():void type: VIRTUAL \l0x005c: IGET  (r9 I:android.support.design.chip.ChipGroup$PassThroughHierarchyChangeListener) = (r8 I:android.support.design.chip.ChipGroup) android.support.design.chip.ChipGroup.passThroughListener android.support.design.chip.ChipGroup$PassThroughHierarchyChangeListener \l0x005e: INVOKE  \l  (r8 I:android.support.design.internal.FlowLayout)\l  (r9 I:android.view.ViewGroup$OnHierarchyChangeListener)\l android.support.design.internal.FlowLayout.setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener):void type: SUPER \l}"];
Node_4 [shape=record,label="{4\:\ 0x0061|0x0061: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.chip.ChipGroup.\<init\>((r8 'this' I:android.support.design.chip.ChipGroup A[IMMUTABLE_TYPE, THIS]), (r9 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

