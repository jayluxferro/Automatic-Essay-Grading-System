digraph "CFG forandroid.support.design.widget.TabLayout.SlidingTabIndicator.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r8 I:android.widget.LinearLayout), (r9 I:int), (r10 I:int) android.widget.LinearLayout.onMeasure(int, int):void type: SUPER \l0x0003: INVOKE  (r0 I:int) = (r9 I:int) android.view.View.MeasureSpec.getMode(int):int type: STATIC \l0x0007: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IGET  (r0 I:android.support.design.widget.TabLayout) = \l  (r8 I:android.support.design.widget.TabLayout$SlidingTabIndicator)\l android.support.design.widget.TabLayout.SlidingTabIndicator.this$0 android.support.design.widget.TabLayout \l0x000e: IGET  (r0 I:int) = (r0 I:android.support.design.widget.TabLayout) android.support.design.widget.TabLayout.mode int \l0x0010: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x007d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IGET  (r0 I:android.support.design.widget.TabLayout) = \l  (r8 I:android.support.design.widget.TabLayout$SlidingTabIndicator)\l android.support.design.widget.TabLayout.SlidingTabIndicator.this$0 android.support.design.widget.TabLayout \l0x0015: IGET  (r0 I:int) = (r0 I:android.support.design.widget.TabLayout) android.support.design.widget.TabLayout.tabGravity int \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x007d \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: INVOKE  (r0 I:int) = \l  (r8 I:android.support.design.widget.TabLayout$SlidingTabIndicator)\l android.support.design.widget.TabLayout.SlidingTabIndicator.getChildCount():int type: VIRTUAL \l0x001d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001f: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: IF  (r3 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:13:0x0037 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: INVOKE  (r5 I:android.view.View) = \l  (r8 I:android.support.design.widget.TabLayout$SlidingTabIndicator)\l  (r3 I:int)\l android.support.design.widget.TabLayout.SlidingTabIndicator.getChildAt(int):android.view.View type: VIRTUAL \l0x0026: INVOKE  (r6 I:int) = (r5 I:android.view.View) android.view.View.getVisibility():int type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0034 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: INVOKE  (r5 I:int) = (r5 I:android.view.View) android.view.View.getMeasuredWidth():int type: VIRTUAL \l0x0030: INVOKE  (r4 I:int) = (r4 I:int), (r5 I:int) java.lang.Math.max(int, int):int type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|0x0037: IF  (r4 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:15:0x003a \l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|0x0039: RETURN   \l}"];
Node_15 [shape=record,label="{15\:\ 0x003a|0x003a: IGET  (r3 I:android.support.design.widget.TabLayout) = \l  (r8 I:android.support.design.widget.TabLayout$SlidingTabIndicator)\l android.support.design.widget.TabLayout.SlidingTabIndicator.this$0 android.support.design.widget.TabLayout \l0x003c: CONST  (r5 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x003e: INVOKE  (r3 I:int) = (r3 I:android.support.design.widget.TabLayout), (r5 I:int) android.support.design.widget.TabLayout.dpToPx(int):int type: VIRTUAL \l0x0042: ARITH  (r5 I:int) = (r4 I:int) * (r0 I:int) \l0x0044: INVOKE  (r6 I:int) = \l  (r8 I:android.support.design.widget.TabLayout$SlidingTabIndicator)\l android.support.design.widget.TabLayout.SlidingTabIndicator.getMeasuredWidth():int type: VIRTUAL \l0x0048: ARITH  (r3 I:int) = (r3 I:int) * (2 int) \l0x004a: ARITH  (r6 I:int) = (r6 I:int) \- (r3 I:int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x004b|0x004b: IF  (r5 I:?[int, byte, short, char]) \> (r6 I:?[int, byte, short, char])  \-\> B:26:0x006f \l}"];
Node_17 [shape=record,label="{17\:\ 0x004d|0x004d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x004e|0x004e: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:25:0x006d \l}"];
Node_19 [shape=record,label="{19\:\ 0x0050|0x0050: INVOKE  (r5 I:android.view.View) = \l  (r8 I:android.support.design.widget.TabLayout$SlidingTabIndicator)\l  (r2 I:int)\l android.support.design.widget.TabLayout.SlidingTabIndicator.getChildAt(int):android.view.View type: VIRTUAL \l0x0054: INVOKE  (r5 I:android.view.ViewGroup$LayoutParams) = (r5 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0058: CHECK_CAST  (r5 I:android.widget.LinearLayout$LayoutParams) = (android.widget.LinearLayout$LayoutParams) (r5 I:?[OBJECT, ARRAY]) \l0x005a: IGET  (r6 I:int) = (r5 I:android.widget.LinearLayout$LayoutParams) android.widget.LinearLayout.LayoutParams.width int \l0x005c: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x005d|0x005d: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0065 \l}"];
Node_21 [shape=record,label="{21\:\ 0x005f|0x005f: IGET  (r6 I:float) = (r5 I:android.widget.LinearLayout$LayoutParams) android.widget.LinearLayout.LayoutParams.weight float \l0x0061: CMP_L  (r6 I:int) = (r6 I:float), (r7 I:float) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0063|0x0063: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x006a \l}"];
Node_23 [shape=record,label="{23\:\ 0x0065|0x0065: IPUT  (r4 I:int), (r5 I:android.widget.LinearLayout$LayoutParams) android.widget.LinearLayout.LayoutParams.width int \l0x0067: IPUT  \l  (r7 I:float)\l  (r5 I:android.widget.LinearLayout$LayoutParams)\l android.widget.LinearLayout.LayoutParams.weight float \l0x0069: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x006a|0x006a: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x006d|0x006d: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x006f|0x006f: IGET  (r0 I:android.support.design.widget.TabLayout) = \l  (r8 I:android.support.design.widget.TabLayout$SlidingTabIndicator)\l android.support.design.widget.TabLayout.SlidingTabIndicator.this$0 android.support.design.widget.TabLayout \l0x0071: IPUT  (r2 I:int), (r0 I:android.support.design.widget.TabLayout) android.support.design.widget.TabLayout.tabGravity int \l0x0073: IGET  (r0 I:android.support.design.widget.TabLayout) = \l  (r8 I:android.support.design.widget.TabLayout$SlidingTabIndicator)\l android.support.design.widget.TabLayout.SlidingTabIndicator.this$0 android.support.design.widget.TabLayout \l0x0075: INVOKE  \l  (r0 I:android.support.design.widget.TabLayout)\l  (r2 I:boolean)\l android.support.design.widget.TabLayout.updateTabViews(boolean):void type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x0078|0x0078: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x007d \l}"];
Node_28 [shape=record,label="{28\:\ 0x007a|0x007a: INVOKE  (r8 I:android.widget.LinearLayout), (r9 I:int), (r10 I:int) android.widget.LinearLayout.onMeasure(int, int):void type: SUPER \l}"];
Node_29 [shape=record,label="{29\:\ 0x007d|0x007d: RETURN   \l}"];
MethodNode[shape=record,label="{protected void android.support.design.widget.TabLayout.SlidingTabIndicator.onMeasure((r8 'this' I:android.support.design.widget.TabLayout$SlidingTabIndicator A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_29;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_29;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_26;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_18;
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
}

