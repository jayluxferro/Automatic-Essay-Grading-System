digraph "CFG forandroid.support.design.widget.TabLayout.SlidingTabIndicator.setIndicatorPosition(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = \l  (r1 I:android.support.design.widget.TabLayout$SlidingTabIndicator)\l android.support.design.widget.TabLayout.SlidingTabIndicator.indicatorLeft int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:int) = \l  (r1 I:android.support.design.widget.TabLayout$SlidingTabIndicator)\l android.support.design.widget.TabLayout.SlidingTabIndicator.indicatorRight int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IPUT  \l  (r2 I:int)\l  (r1 I:android.support.design.widget.TabLayout$SlidingTabIndicator)\l android.support.design.widget.TabLayout.SlidingTabIndicator.indicatorLeft int \l0x000a: IPUT  \l  (r3 I:int)\l  (r1 I:android.support.design.widget.TabLayout$SlidingTabIndicator)\l android.support.design.widget.TabLayout.SlidingTabIndicator.indicatorRight int \l0x000c: INVOKE  (r1 I:android.view.View) android.support.v4.view.ViewCompat.postInvalidateOnAnimation(android.view.View):void type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.design.widget.TabLayout.SlidingTabIndicator.setIndicatorPosition((r1 'this' I:android.support.design.widget.TabLayout$SlidingTabIndicator A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
}

