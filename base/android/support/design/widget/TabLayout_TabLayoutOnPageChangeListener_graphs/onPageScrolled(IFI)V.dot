digraph "CFG forandroid.support.design.widget.TabLayout.TabLayoutOnPageChangeListener.onPageScrolled(IFI)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.support.design.widget.TabLayout r8 = (android.support.design.widget.TabLayout) r5.tabLayoutRef.get()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r8 == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|r1 = false\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|if (r5.scrollState != 2) goto L_0x0018\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011}"];
Node_5 [shape=record,label="{5\:\ 0x0013|if (r5.previousScrollState != 1) goto L_0x0016\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|r0 = false\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|r0 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v2 boolean), (r0v4 boolean) binds: [B:7:0x0018, B:6:0x0016] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|if (r5.scrollState != 2) goto L_0x0021\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d}"];
Node_11 [shape=record,label="{11\:\ 0x001f|if (r5.previousScrollState == 0) goto L_0x0022\l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|r1 = true\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v2 boolean), (r1v0 boolean) binds: [B:12:0x0021, B:11:0x001f] A[DONT_GENERATE, DONT_INLINE]\l|r8.setScrollPosition(r6, r7, r0, r1)\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.TabLayout.TabLayoutOnPageChangeListener.onPageScrolled((r5v0 'this' android.support.design.widget.TabLayout$TabLayoutOnPageChangeListener A[IMMUTABLE_TYPE, THIS]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

