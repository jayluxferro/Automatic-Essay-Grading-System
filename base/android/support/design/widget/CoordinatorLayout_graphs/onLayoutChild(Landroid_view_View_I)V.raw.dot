digraph "CFG forandroid.support.design.widget.CoordinatorLayout.onLayoutChild(Landroid\/view\/View;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.view.ViewGroup$LayoutParams) = (r3 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0004: CHECK_CAST  (r0 I:android.support.design.widget.CoordinatorLayout$LayoutParams) = (android.support.design.widget.CoordinatorLayout$LayoutParams) (r0 I:?[OBJECT, ARRAY]) \l0x0006: INVOKE  (r1 I:boolean) = \l  (r0 I:android.support.design.widget.CoordinatorLayout$LayoutParams)\l android.support.design.widget.CoordinatorLayout.LayoutParams.checkAnchorChanged():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0024 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IGET  (r1 I:android.view.View) = \l  (r0 I:android.support.design.widget.CoordinatorLayout$LayoutParams)\l android.support.design.widget.CoordinatorLayout.LayoutParams.mAnchorView android.view.View \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IGET  (r0 I:android.view.View) = \l  (r0 I:android.support.design.widget.CoordinatorLayout$LayoutParams)\l android.support.design.widget.CoordinatorLayout.LayoutParams.mAnchorView android.view.View \l0x0012: INVOKE  \l  (r2 I:android.support.design.widget.CoordinatorLayout)\l  (r3 I:android.view.View)\l  (r0 I:android.view.View)\l  (r4 I:int)\l android.support.design.widget.CoordinatorLayout.layoutChildWithAnchor(android.view.View, android.view.View, int):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IGET  (r1 I:int) = \l  (r0 I:android.support.design.widget.CoordinatorLayout$LayoutParams)\l android.support.design.widget.CoordinatorLayout.LayoutParams.keyline int \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r1 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:8:0x0020 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IGET  (r0 I:int) = \l  (r0 I:android.support.design.widget.CoordinatorLayout$LayoutParams)\l android.support.design.widget.CoordinatorLayout.LayoutParams.keyline int \l0x001c: INVOKE  \l  (r2 I:android.support.design.widget.CoordinatorLayout)\l  (r3 I:android.view.View)\l  (r0 I:int)\l  (r4 I:int)\l android.support.design.widget.CoordinatorLayout.layoutChildWithKeyline(android.view.View, int, int):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: INVOKE  \l  (r2 I:android.support.design.widget.CoordinatorLayout)\l  (r3 I:android.view.View)\l  (r4 I:int)\l android.support.design.widget.CoordinatorLayout.layoutChild(android.view.View, int):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: NEW_INSTANCE  (r3 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0026: CONST_STR  (r4 I:java.lang.String) =  \"An anchor may not be changed after CoordinatorLayout measurement begins before layout is complete.\" \l0x0028: INVOKE  \l  (r3 I:java.lang.IllegalStateException)\l  (r4 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.CoordinatorLayout.onLayoutChild((r2 'this' I:android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

