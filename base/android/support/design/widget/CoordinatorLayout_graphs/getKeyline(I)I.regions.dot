digraph "CFG forandroid.support.design.widget.CoordinatorLayout.getKeyline(I)I" {
subgraph cluster_Region_1291576211 {
label = "R(1:(2:2|3)(1:(1:8)(2:9|10)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2142507983 {
label = "IF [B:1:0x0003] THEN: R(2:2|3) ELSE: R(1:(1:8)(2:9|10))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r4.mKeylines == null) goto L_0x0005\l}"];
subgraph cluster_Region_1215773230 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|android.util.Log.e(TAG, \"No keylines defined for \" + r4 + \" \- attempted index lookup \" + r5)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|RETURN\l|return 0\l}"];
}
subgraph cluster_Region_62216043 {
label = "R(1:(1:8)(2:9|10)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_272751605 {
label = "IF [B:4:0x0024, B:6:0x0029] THEN: R(1:8) ELSE: R(2:9|10) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0024|if (r5 \>= 0) goto L_0x0026\l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|ADDED_TO_REGION\l|if (r5 \< r4.mKeylines.length) goto L_0x002c\l}"];
subgraph cluster_Region_1337231449 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0030|RETURN\l|return r4.mKeylines[r5]\l}"];
}
subgraph cluster_Region_1055092171 {
label = "R(2:9|10)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0031|android.util.Log.e(TAG, \"Keyline index \" + r5 + \" out of range for \" + r4)\l}"];
Node_10 [shape=record,label="{10\:\ 0x004f|RETURN\l|return 0\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0026}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x002c}"];
MethodNode[shape=record,label="{private int android.support.design.widget.CoordinatorLayout.getKeyline((r4v0 'this' android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_9 -> Node_10;
Node_0 -> Node_1;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

