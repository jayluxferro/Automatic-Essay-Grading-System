digraph "CFG forandroid.support.design.widget.CoordinatorLayout.onLayout(ZIIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r2 = android.support.p000v4.view.ViewCompat.getLayoutDirection(r1)\lint r3 = r1.mDependencySortedChildren.size()\lr4 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|LOOP_START\lPHI: r4 \l  PHI: (r4v2 int) = (r4v1 int), (r4v3 int) binds: [B:0:0x0000, B:9:0x0033] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000b\-\>B:9:0x0033\l|if (r4 \>= r3) goto L_0x0036\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|android.view.View r5 = r1.mDependencySortedChildren.get(r4)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|if (r5.getVisibility() != 8) goto L_0x001e\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|android.support.design.widget.CoordinatorLayout$Behavior r6 = ((android.support.design.widget.CoordinatorLayout.LayoutParams) r5.getLayoutParams()).getBehavior()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0028|if (r6 == null) goto L_0x0030\l}"];
Node_6 [shape=record,label="{6\:\ 0x002a}"];
Node_7 [shape=record,label="{7\:\ 0x002e|if (r6.onLayoutChild(r1, r5, r2) != false) goto L_0x0033\l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|onLayoutChild(r5, r2)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|LOOP_END\lLOOP:0: B:1:0x000b\-\>B:9:0x0033\l|int r4 = r4 + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void android.support.design.widget.CoordinatorLayout.onLayout((r1v0 'this' android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r2v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_14[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_12;
Node_9 -> Node_1;
Node_11 -> Node_10;
Node_12 -> Node_9;
Node_13 -> Node_9;
Node_14 -> Node_9;
}

