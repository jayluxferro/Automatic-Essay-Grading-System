digraph "CFG forandroid.support.design.widget.CoordinatorLayout.doViewsOverlap(Landroid\/view\/View;Landroid\/view\/View;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = false\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r5.getVisibility() != 0) goto L_0x0056\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r6.getVisibility() != 0) goto L_0x0056\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|android.graphics.Rect r0 = acquireTempRect()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|if (r5.getParent() == r4) goto L_0x001a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|r2 = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|r2 = false\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|PHI: r2 \l  PHI: (r2v1 boolean) = (r2v10 boolean), (r2v11 boolean) binds: [B:7:0x001a, B:6:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|getChildRect(r5, r2, r0)\landroid.graphics.Rect r5 = acquireTempRect()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|if (r6.getParent() == r4) goto L_0x002a\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|r2 = true\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|r2 = false\l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|PHI: r2 \l  PHI: (r2v3 boolean) = (r2v8 boolean), (r2v9 boolean) binds: [B:11:0x002a, B:10:0x0028] A[DONT_GENERATE, DONT_INLINE]\l|getChildRect(r6, r2, r5)\l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|SYNTHETIC\lSplitter:B:13:0x002e\l}"];
Node_14 [shape=record,label="{14\:\ ?|Catch:\{ all \-\> 0x004e \}\lSplitter:B:13:0x002e\l}"];
Node_15 [shape=record,label="{15\:\ 0x0032|Catch:\{ all \-\> 0x004e \}\l|if (r0.left \> r5.right) goto L_0x0047     \/\/ Catch:\{ all \-\> 0x004e \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|Catch:\{ all \-\> 0x004e \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0038|Catch:\{ all \-\> 0x004e \}\l|if (r0.top \> r5.bottom) goto L_0x0047     \/\/ Catch:\{ all \-\> 0x004e \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x003a|Catch:\{ all \-\> 0x004e \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x003e|Catch:\{ all \-\> 0x004e \}\l|if (r0.right \< r5.left) goto L_0x0047     \/\/ Catch:\{ all \-\> 0x004e \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x0040|Catch:\{ all \-\> 0x004e \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0044|if (r0.bottom \< r5.top) goto L_0x0047\l}"];
Node_22 [shape=record,label="{22\:\ 0x0046|r1 = true\l}"];
Node_23 [shape=record,label="{23\:\ 0x0047|DONT_GENERATE\lPHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v0 boolean), (r1v0 boolean), (r1v0 boolean), (r1v2 boolean) binds: [B:15:0x0032, B:17:0x0038, B:19:0x003e, B:21:0x0044, B:22:0x0046] A[DONT_GENERATE, DONT_INLINE]\l|releaseTempRect(r0)\lreleaseTempRect(r5)\l}"];
Node_24 [shape=record,label="{24\:\ 0x004d|RETURN\l|return r1\l}"];
Node_25 [shape=record,label="{25\:\ 0x004e|ExcHandler:  FINALLY\lSplitter:B:13:0x002e\l|java.lang.Throwable r6 = move\-exception\l}"];
Node_26 [shape=record,label="{26\:\ 0x004f|FINALLY_INSNS\l|releaseTempRect(r0)\lreleaseTempRect(r5)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0055|throw r6\l}"];
Node_28 [shape=record,label="{28\:\ 0x0056|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean android.support.design.widget.CoordinatorLayout.doViewsOverlap((r4v0 'this' android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r5v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_28;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_28;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_25;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_23;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27;
}

