digraph "CFG forandroid.support.design.widget.CoordinatorLayout.onDraw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r4 I:android.view.ViewGroup)\l  (r5 I:android.graphics.Canvas)\l android.view.ViewGroup.onDraw(android.graphics.Canvas):void type: SUPER \l0x0003: IGET  (r0 I:boolean) = (r4 I:android.support.design.widget.CoordinatorLayout) android.support.design.widget.CoordinatorLayout.mDrawStatusBarBackground boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IGET  (r0 I:android.graphics.drawable.Drawable) = (r4 I:android.support.design.widget.CoordinatorLayout) android.support.design.widget.CoordinatorLayout.mStatusBarBackground android.graphics.drawable.Drawable \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IGET  (r0 I:android.support.v4.view.WindowInsetsCompat) = (r4 I:android.support.design.widget.CoordinatorLayout) android.support.design.widget.CoordinatorLayout.mLastInsets android.support.v4.view.WindowInsetsCompat \l0x000d: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0017 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IGET  (r0 I:android.support.v4.view.WindowInsetsCompat) = (r4 I:android.support.design.widget.CoordinatorLayout) android.support.design.widget.CoordinatorLayout.mLastInsets android.support.v4.view.WindowInsetsCompat \l0x0012: INVOKE  (r0 I:int) = (r0 I:android.support.v4.view.WindowInsetsCompat) android.support.v4.view.WindowInsetsCompat.getSystemWindowInsetTop():int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: IGET  (r2 I:android.graphics.drawable.Drawable) = (r4 I:android.support.design.widget.CoordinatorLayout) android.support.design.widget.CoordinatorLayout.mStatusBarBackground android.graphics.drawable.Drawable \l0x001c: INVOKE  (r3 I:int) = (r4 I:android.support.design.widget.CoordinatorLayout) android.support.design.widget.CoordinatorLayout.getWidth():int type: VIRTUAL \l0x0020: INVOKE  \l  (r2 I:android.graphics.drawable.Drawable)\l  (r1 I:int)\l  (r1 I:int)\l  (r3 I:int)\l  (r0 I:int)\l android.graphics.drawable.Drawable.setBounds(int, int, int, int):void type: VIRTUAL \l0x0023: IGET  (r0 I:android.graphics.drawable.Drawable) = (r4 I:android.support.design.widget.CoordinatorLayout) android.support.design.widget.CoordinatorLayout.mStatusBarBackground android.graphics.drawable.Drawable \l0x0025: INVOKE  \l  (r0 I:android.graphics.drawable.Drawable)\l  (r5 I:android.graphics.Canvas)\l android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.CoordinatorLayout.onDraw((r4 'this' I:android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r5 I:android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
}

