digraph "CFG forandroid.support.design.widget.CoordinatorLayout.onStopNestedScroll(Landroid\/view\/View;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r5.mNestedScrollingParentHelper.onStopNestedScroll(r6, r7)\lint r0 = getChildCount()\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:8:0x002c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:8:0x002c\l|if (r1 \>= r0) goto L_0x002f\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|android.view.View r2 = getChildAt(r1)\landroid.support.design.widget.CoordinatorLayout$LayoutParams r3 = (android.support.design.widget.CoordinatorLayout.LayoutParams) r2.getLayoutParams()\l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|if (r3.isNestedScrollAccepted(r7) != false) goto L_0x001d\l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|android.support.design.widget.CoordinatorLayout$Behavior r4 = r3.getBehavior()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|if (r4 == null) goto L_0x0026\l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|r4.onStopNestedScroll(r5, r2, r6, r7)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|r3.resetNestedScroll(r7)\lr3.resetChangedAfterNestedScroll()\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|LOOP_END\lLOOP:0: B:1:0x000a\-\>B:8:0x002c\l|int r1 = r1 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|r5.mNestedScrollingTarget = null\l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.CoordinatorLayout.onStopNestedScroll((r5v0 'this' android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r6v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_13[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_12;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_11 -> Node_9;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

