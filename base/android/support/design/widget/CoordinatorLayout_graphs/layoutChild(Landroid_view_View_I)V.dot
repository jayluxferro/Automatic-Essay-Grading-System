digraph "CFG forandroid.support.design.widget.CoordinatorLayout.layoutChild(Landroid\/view\/View;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.support.design.widget.CoordinatorLayout$LayoutParams r0 = (android.support.design.widget.CoordinatorLayout.LayoutParams) r10.getLayoutParams()\landroid.graphics.Rect r7 = acquireTempRect()\lr7.set(getPaddingLeft() + r0.leftMargin, getPaddingTop() + r0.topMargin, (getWidth() \- getPaddingRight()) \- r0.rightMargin, (getHeight() \- getPaddingBottom()) \- r0.bottomMargin)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0035|if (r9.mLastInsets == null) goto L_0x006f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0037}"];
Node_3 [shape=record,label="{3\:\ 0x003b|if (android.support.p000v4.view.ViewCompat.getFitsSystemWindows(r9) == false) goto L_0x006f\l}"];
Node_4 [shape=record,label="{4\:\ 0x003d}"];
Node_5 [shape=record,label="{5\:\ 0x0041|if (android.support.p000v4.view.ViewCompat.getFitsSystemWindows(r10) != false) goto L_0x006f\l}"];
Node_6 [shape=record,label="{6\:\ 0x0043|r7.left = r7.left + r9.mLastInsets.getSystemWindowInsetLeft()\lr7.top = r7.top + r9.mLastInsets.getSystemWindowInsetTop()\lr7.right = r7.right \- r9.mLastInsets.getSystemWindowInsetRight()\lr7.bottom = r7.bottom \- r9.mLastInsets.getSystemWindowInsetBottom()\l}"];
Node_7 [shape=record,label="{7\:\ 0x006f|android.graphics.Rect r8 = acquireTempRect()\landroid.support.p000v4.view.GravityCompat.apply(resolveGravity(r0.gravity), r10.getMeasuredWidth(), r10.getMeasuredHeight(), r7, r8, r11)\lr10.layout(r8.left, r8.top, r8.right, r8.bottom)\lreleaseTempRect(r7)\lreleaseTempRect(r8)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0098|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.design.widget.CoordinatorLayout.layoutChild((r9v0 'this' android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r10v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

