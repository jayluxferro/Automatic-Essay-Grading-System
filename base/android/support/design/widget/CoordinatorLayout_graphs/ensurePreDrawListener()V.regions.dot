digraph "CFG forandroid.support.design.widget.CoordinatorLayout.ensurePreDrawListener()V" {
subgraph cluster_Region_2124565213 {
label = "R(3:0|(1:(1:12)(1:(2:4|1)(1:5)))|(2:(1:14)|(1:(1:9)(1:10))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = getChildCount()\lboolean r1 = false\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_310598354 {
label = "LOOP:0: (1:(1:12)(1:(2:4|1)(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_1723850902 {
label = "R(1:(1:12)(1:(2:4|1)(1:5)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_177057340 {
label = "IF [B:1:0x0006] THEN: R(1:12) ELSE: R(1:(2:4|1)(1:5))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:5:0x0014] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:5:0x0014\l|if (r2 \>= r0) goto L_0x0017\l}"];
subgraph cluster_Region_328007454 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0017|SYNTHETIC\lEDGE_INSN: B:12:0x0017\-\>B:6:0x0017 ?: BREAK  \l|break\l}"];
}
subgraph cluster_Region_567477324 {
label = "R(1:(2:4|1)(1:5)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2017176471 {
label = "IF [B:3:0x0010] THEN: R(2:4|1) ELSE: R(1:5) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0010|if (hasDependencies(getChildAt(r2)) == true) goto L_0x0012\l}"];
subgraph cluster_Region_214847940 {
label = "R(2:4|1)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012|EDGE_INSN: B:4:0x0012\-\>B:6:0x0017 ?: BREAK  \l|r1 = true\l}"];
Node_InsnContainer_688820078 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_101026530 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|LOOP_END\lLOOP:0: B:1:0x0006\-\>B:5:0x0014\l|r2++\l}"];
}
}
}
}
}
}
subgraph cluster_Region_816603529 {
label = "R(2:(1:14)|(1:(1:9)(1:10)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_226911100 {
label = "IF [B:7:0x0019] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0019|if (r1 == r4.mNeedsPreDrawListener) goto L_?\l}"];
subgraph cluster_Region_1152130189 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_2103738672 {
label = "R(1:(1:9)(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1629369523 {
label = "IF [B:8:0x001b] THEN: R(1:9) ELSE: R(1:10)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001b|if (r1 == true) goto L_0x001d\l}"];
subgraph cluster_Region_541852685 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001d|addPreDrawListener()\l}"];
}
subgraph cluster_Region_1941932452 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0021|removePreDrawListener()\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0017|EDGE_INSN: B:4:0x0012\-\>B:6:0x0017 ?: BREAK  \lEDGE_INSN: B:12:0x0017\-\>B:6:0x0017 ?: BREAK  \lPHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v2 boolean) binds: [B:12:0x0017, B:4:0x0012] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0012|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void android.support.design.widget.CoordinatorLayout.ensurePreDrawListener((r4v0 'this' android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_12 -> Node_6;
Node_3 -> Node_5[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_6;
Node_5 -> Node_1;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_13;
Node_2 -> Node_3;
Node_6 -> Node_7;
Node_11 -> Node_4;
}

