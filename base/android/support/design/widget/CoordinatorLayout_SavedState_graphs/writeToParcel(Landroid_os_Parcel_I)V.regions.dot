digraph "CFG forandroid.support.design.widget.CoordinatorLayout.SavedState.writeToParcel(Landroid\/os\/Parcel;I)V" {
subgraph cluster_Region_555159097 {
label = "R(5:0|1|4|(1:6)|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super.writeToParcel(r6, r7)\lint r1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|int r0 = r5.behaviorStates != null ? r5.behaviorStates.size() : 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|PHI: r0 \l  PHI: (r0v1 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r6.writeInt(r0)\lint[] int[] r2 = new int[r0]\landroid.os.Parcelable[] android.os.Parcelable[] r3 = new android.os.Parcelable[r0]\l}"];
subgraph cluster_LoopRegion_34348300 {
label = "LOOP:0: (1:6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0017|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:4:0x0010, B:6:0x0019] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0017\-\>B:6:0x0019\l|if (r1 \< r0) goto L_0x0019\l}"];
subgraph cluster_Region_1314597807 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0019|LOOP_END\lLOOP:0: B:5:0x0017\-\>B:6:0x0019\l|r2[r1] = r5.behaviorStates.keyAt(r1)\lr3[r1] = r5.behaviorStates.valueAt(r1)\lr1++\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x002e|r6.writeIntArray(r2)\lr6.writeParcelableArray(r3, r7)\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000f}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0034}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.CoordinatorLayout.SavedState.writeToParcel((r5v0 'this' android.support.design.widget.CoordinatorLayout$SavedState A[IMMUTABLE_TYPE, THIS]), (r6v0 android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_9[style=dashed];
Node_6 -> Node_5;
Node_7 -> Node_8;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_9 -> Node_7;
}

