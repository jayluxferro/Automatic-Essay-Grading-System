digraph "CFG forandroid.support.design.widget.BottomSheetDialog.getThemeResId(Landroid\/content\/Context;I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0019 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: NEW_INSTANCE  (r3 I:android.util.TypedValue) =  android.util.TypedValue \l0x0004: INVOKE  (r3 I:android.util.TypedValue) android.util.TypedValue.\<init\>():void type: DIRECT \l0x0007: INVOKE  (r2 I:android.content.res.Resources$Theme) = (r2 I:android.content.Context) android.content.Context.getTheme():android.content.res.Resources$Theme type: VIRTUAL \l0x000b: SGET  (r0 I:int) =  android.support.design.R.attr.bottomSheetDialogTheme int \l0x000d: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000e: INVOKE  (r2 I:boolean) = \l  (r2 I:android.content.res.Resources$Theme)\l  (r0 I:int)\l  (r3 I:android.util.TypedValue)\l  (r1 I:boolean)\l android.content.res.Resources.Theme.resolveAttribute(int, android.util.TypedValue, boolean):boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0017 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IGET  (r3 I:int) = (r3 I:android.util.TypedValue) android.util.TypedValue.resourceId int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: SGET  (r3 I:int) =  android.support.design.R.style.Theme_Design_Light_BottomSheetDialog int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{private static int android.support.design.widget.BottomSheetDialog.getThemeResId((r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
}

