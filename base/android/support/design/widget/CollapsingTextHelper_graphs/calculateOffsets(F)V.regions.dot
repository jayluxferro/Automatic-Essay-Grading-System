digraph "CFG forandroid.support.design.widget.CollapsingTextHelper.calculateOffsets(F)V" {
subgraph cluster_Region_674018527 {
label = "R(3:0|(1:2)(1:3)|4)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|interpolateBounds(r7)\lr6.currentDrawX = lerp(r6.expandedDrawX, r6.collapsedDrawX, r7, r6.positionInterpolator)\lr6.currentDrawY = lerp(r6.expandedDrawY, r6.collapsedDrawY, r7, r6.positionInterpolator)\lsetInterpolatedTextSize(lerp(r6.expandedTextSize, r6.collapsedTextSize, r7, r6.textSizeInterpolator))\l}"];
subgraph cluster_IfRegion_1978290871 {
label = "IF [B:1:0x002c] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x002c|if (r6.collapsedTextColor != r6.expandedTextColor) goto L_0x002e\l}"];
subgraph cluster_Region_1080937918 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x002e|r6.textPaint.setColor(blendColors(getCurrentExpandedTextColor(), getCurrentCollapsedTextColor(), r7))\l}"];
}
subgraph cluster_Region_1233440580 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0040|r6.textPaint.setColor(getCurrentCollapsedTextColor())\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x0049|r6.textPaint.setShadowLayer(lerp(r6.expandedShadowRadius, r6.collapsedShadowRadius, r7, (android.animation.TimeInterpolator) null), lerp(r6.expandedShadowDx, r6.collapsedShadowDx, r7, (android.animation.TimeInterpolator) null), lerp(r6.expandedShadowDy, r6.collapsedShadowDy, r7, (android.animation.TimeInterpolator) null), blendColors(r6.expandedShadowColor, r6.collapsedShadowColor, r7))\landroid.support.p000v4.view.ViewCompat.postInvalidateOnAnimation(r6.view)\l}"];
}
Node_5 [shape=record,color=red,label="{5\:\ 0x0074}"];
MethodNode[shape=record,label="{private void android.support.design.widget.CollapsingTextHelper.calculateOffsets((r6v0 'this' android.support.design.widget.CollapsingTextHelper A[IMMUTABLE_TYPE, THIS]), (r7v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

