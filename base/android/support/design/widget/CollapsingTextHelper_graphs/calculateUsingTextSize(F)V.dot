digraph "CFG forandroid.support.design.widget.CollapsingTextHelper.calculateUsingTextSize(F)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r8.text != null) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|float r0 = (float) r8.collapsedBounds.width()\lfloat r1 = (float) r8.expandedBounds.width()\lr4 = true\l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|if (isClose(r9, r8.collapsedTextSize) == false) goto L_0x0033\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|float r9 = r8.collapsedTextSize\lr8.scale = 1.0f\l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|if (r8.currentTypeface == r8.collapsedTypeface) goto L_0x002f\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|r8.currentTypeface = r8.collapsedTypeface\lr1 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|r1 = false\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|PHI: r1 \l  PHI: (r1v9 boolean) = (r1v10 boolean), (r1v12 boolean) binds: [B:8:0x002f, B:7:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|r2 = r9\lr6 = r1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|float r2 = r8.expandedTextSize\l}"];
Node_11 [shape=record,label="{11\:\ 0x0039|if (r8.currentTypeface == r8.expandedTypeface) goto L_0x0041\l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|r8.currentTypeface = r8.expandedTypeface\lr6 = true\l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|r6 = false\l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|PHI: r6 \l  PHI: (r6v6 boolean) = (r6v7 boolean), (r6v9 boolean) binds: [B:13:0x0041, B:12:0x003b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|if (isClose(r9, r8.expandedTextSize) == false) goto L_0x004d\l}"];
Node_16 [shape=record,label="{16\:\ 0x004a|r8.scale = 1.0f\l}"];
Node_17 [shape=record,label="{17\:\ 0x004d|r8.scale = r9 \/ r8.expandedTextSize\l}"];
Node_18 [shape=record,label="{18\:\ 0x0052|float r9 = r8.collapsedTextSize \/ r8.expandedTextSize\l}"];
Node_19 [shape=record,label="{19\:\ 0x005b|if (((r1 * r9) \> r0 ? 1 : ((r1 * r9) == r0 ? 0 : \-1)) \<= 0) goto L_0x0063\l}"];
Node_20 [shape=record,label="{20\:\ 0x005d|float r0 = java.lang.Math.min(r0 \/ r9, r1)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0063|r0 = r1\l}"];
Node_22 [shape=record,label="{22\:\ 0x0064|PHI: r0 r2 r6 \l  PHI: (r0v4 float) = (r0v7 float), (r0v9 float), (r0v3 float) binds: [B:21:0x0063, B:20:0x005d, B:9:0x0030] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 float) = (r2v4 float), (r2v4 float), (r2v6 float) binds: [B:21:0x0063, B:20:0x005d, B:9:0x0030] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v0 boolean) = (r6v6 boolean), (r6v6 boolean), (r6v10 boolean) binds: [B:21:0x0063, B:20:0x005d, B:9:0x0030] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0067|if ((r0 \> 0.0f ? 1 : (r0 == 0.0f ? 0 : \-1)) \<= 0) goto L_0x007d\l}"];
Node_24 [shape=record,label="{24\:\ 0x0069}"];
Node_25 [shape=record,label="{25\:\ 0x006d|if ((r8.currentTextSize \> r2 ? 1 : (r8.currentTextSize == r2 ? 0 : \-1)) != 0) goto L_0x0078\l}"];
Node_26 [shape=record,label="{26\:\ 0x006f}"];
Node_27 [shape=record,label="{27\:\ 0x0071|if (r8.boundsChanged != false) goto L_0x0078\l}"];
Node_28 [shape=record,label="{28\:\ 0x0073|if (r6 == false) goto L_0x0076\l}"];
Node_29 [shape=record,label="{29\:\ 0x0076|r6 = false\l}"];
Node_30 [shape=record,label="{30\:\ 0x0078|r6 = true\l}"];
Node_31 [shape=record,label="{31\:\ 0x0079|PHI: r6 \l  PHI: (r6v2 boolean) = (r6v3 boolean), (r6v4 boolean) binds: [B:30:0x0078, B:29:0x0076] A[DONT_GENERATE, DONT_INLINE]\l|r8.currentTextSize = r2\lr8.boundsChanged = false\l}"];
Node_32 [shape=record,label="{32\:\ 0x007d|PHI: r6 \l  PHI: (r6v1 boolean) = (r6v0 boolean), (r6v2 boolean) binds: [B:23:0x0067, B:31:0x0079] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_33 [shape=record,label="{33\:\ 0x007f|if (r8.textToDraw == null) goto L_0x0083\l}"];
Node_34 [shape=record,label="{34\:\ 0x0081|if (r6 == false) goto L_?\l}"];
Node_35 [shape=record,label="{35\:\ 0x0083|r8.textPaint.setTextSize(r8.currentTextSize)\lr8.textPaint.setTypeface(r8.currentTypeface)\landroid.text.TextPaint r9 = r8.textPaint\l}"];
Node_36 [shape=record,label="{36\:\ 0x0097|if ((r8.scale \> 1.0f ? 1 : (r8.scale == 1.0f ? 0 : \-1)) == 0) goto L_0x009a\l}"];
Node_37 [shape=record,label="{37\:\ 0x009a|r4 = false\l}"];
Node_38 [shape=record,label="{38\:\ 0x009b|PHI: r4 \l  PHI: (r4v1 boolean) = (r4v0 boolean), (r4v2 boolean) binds: [B:36:0x0097, B:37:0x009a] A[DONT_GENERATE, DONT_INLINE]\l|r9.setLinearText(r4)\ljava.lang.CharSequence r9 = android.text.TextUtils.ellipsize(r8.text, r8.textPaint, r0, android.text.TextUtils.TruncateAt.END)\l}"];
Node_39 [shape=record,label="{39\:\ 0x00ae|if (android.text.TextUtils.equals(r9, r8.textToDraw) != false) goto L_?\l}"];
Node_40 [shape=record,label="{40\:\ 0x00b0|r8.textToDraw = r9\lr8.isRtl = calculateIsRtl(r8.textToDraw)\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.design.widget.CollapsingTextHelper.calculateUsingTextSize((r8v0 'this' android.support.design.widget.CollapsingTextHelper A[IMMUTABLE_TYPE, THIS]), (r9v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_22;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_32;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_28 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_42;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_38[style=dashed];
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_43;
Node_40 -> Node_41;
}

