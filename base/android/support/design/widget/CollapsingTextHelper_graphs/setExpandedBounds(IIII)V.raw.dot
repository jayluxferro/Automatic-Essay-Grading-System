digraph "CFG forandroid.support.design.widget.CollapsingTextHelper.setExpandedBounds(IIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.graphics.Rect) = (r1 I:android.support.design.widget.CollapsingTextHelper) android.support.design.widget.CollapsingTextHelper.expandedBounds android.graphics.Rect \l0x0002: INVOKE  (r0 I:boolean) = \l  (r0 I:android.graphics.Rect)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l android.support.design.widget.CollapsingTextHelper.rectEquals(android.graphics.Rect, int, int, int, int):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:android.graphics.Rect) = (r1 I:android.support.design.widget.CollapsingTextHelper) android.support.design.widget.CollapsingTextHelper.expandedBounds android.graphics.Rect \l0x000a: INVOKE  \l  (r0 I:android.graphics.Rect)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l android.graphics.Rect.set(int, int, int, int):void type: VIRTUAL \l0x000d: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000e: IPUT  \l  (r2 I:boolean)\l  (r1 I:android.support.design.widget.CollapsingTextHelper)\l android.support.design.widget.CollapsingTextHelper.boundsChanged boolean \l0x0010: INVOKE  (r1 I:android.support.design.widget.CollapsingTextHelper) android.support.design.widget.CollapsingTextHelper.onBoundsChanged():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.CollapsingTextHelper.setExpandedBounds((r1 'this' I:android.support.design.widget.CollapsingTextHelper A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

