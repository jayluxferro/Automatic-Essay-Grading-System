digraph "CFG forandroid.support.design.widget.CollapsingTextHelper.setText(Ljava\/lang\/CharSequence;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:java.lang.CharSequence) = (r1 I:android.support.design.widget.CollapsingTextHelper) android.support.design.widget.CollapsingTextHelper.text java.lang.CharSequence \l0x0004: INVOKE  (r0 I:boolean) = (r2 I:java.lang.Object), (r0 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0015 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IPUT  \l  (r2 I:java.lang.CharSequence)\l  (r1 I:android.support.design.widget.CollapsingTextHelper)\l android.support.design.widget.CollapsingTextHelper.text java.lang.CharSequence \l0x000c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: IPUT  \l  (r2 I:java.lang.CharSequence)\l  (r1 I:android.support.design.widget.CollapsingTextHelper)\l android.support.design.widget.CollapsingTextHelper.textToDraw java.lang.CharSequence \l0x000f: INVOKE  (r1 I:android.support.design.widget.CollapsingTextHelper) android.support.design.widget.CollapsingTextHelper.clearTexture():void type: DIRECT \l0x0012: INVOKE  (r1 I:android.support.design.widget.CollapsingTextHelper) android.support.design.widget.CollapsingTextHelper.recalculate():void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.CollapsingTextHelper.setText((r1 'this' I:android.support.design.widget.CollapsingTextHelper A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
}

