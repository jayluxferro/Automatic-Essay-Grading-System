digraph "CFG forandroid.support.design.widget.CircularBorderDrawable.setBorderWidth(F)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:float) = (r2 I:android.support.design.widget.CircularBorderDrawable) android.support.design.widget.CircularBorderDrawable.borderWidth float \l0x0002: CMP_L  (r0 I:int) = (r0 I:float), (r3 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IPUT  \l  (r3 I:float)\l  (r2 I:android.support.design.widget.CircularBorderDrawable)\l android.support.design.widget.CircularBorderDrawable.borderWidth float \l0x0008: IGET  (r0 I:android.graphics.Paint) = (r2 I:android.support.design.widget.CircularBorderDrawable) android.support.design.widget.CircularBorderDrawable.paint android.graphics.Paint \l0x000a: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1068149139(0x3faaa993, float:1.3333) ?[int, float, short, byte, char])\l \l0x000d: ARITH  (r3 I:float) = (r3 I:float) * (r1 I:float) \l0x000f: INVOKE  (r0 I:android.graphics.Paint), (r3 I:float) android.graphics.Paint.setStrokeWidth(float):void type: VIRTUAL \l0x0012: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0013: IPUT  \l  (r3 I:boolean)\l  (r2 I:android.support.design.widget.CircularBorderDrawable)\l android.support.design.widget.CircularBorderDrawable.invalidateShader boolean \l0x0015: INVOKE  (r2 I:android.support.design.widget.CircularBorderDrawable) android.support.design.widget.CircularBorderDrawable.invalidateSelf():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.CircularBorderDrawable.setBorderWidth((r2 'this' I:android.support.design.widget.CircularBorderDrawable A[IMMUTABLE_TYPE, THIS]), (r3 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Dimension, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

