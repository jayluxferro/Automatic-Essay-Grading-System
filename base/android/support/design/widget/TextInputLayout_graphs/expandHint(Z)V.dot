digraph "CFG forandroid.support.design.widget.TextInputLayout.expandHint(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1.animator == null) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r1.animator.isRunning() == false) goto L_0x0011\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|r1.animator.cancel()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011}"];
Node_6 [shape=record,label="{6\:\ 0x0012|if (r2 == false) goto L_0x001c\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014}"];
Node_8 [shape=record,label="{8\:\ 0x0016|if (r1.hintAnimationEnabled == false) goto L_0x001c\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|animateToExpansionFraction(0.0f)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|r1.collapsingTextHelper.setExpansionFraction(0.0f)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021}"];
Node_12 [shape=record,label="{12\:\ 0x0025|if (cutoutEnabled() == false) goto L_0x0034\l}"];
Node_13 [shape=record,label="{13\:\ 0x0027}"];
Node_14 [shape=record,label="{14\:\ 0x002f|if (((android.support.design.widget.CutoutDrawable) r1.boxBackground).hasCutout() == false) goto L_0x0034\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|closeCutout()\l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|r1.hintExpanded = true\l}"];
Node_17 [shape=record,label="{17\:\ 0x0037|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.design.widget.TextInputLayout.expandHint((r1v0 'this' android.support.design.widget.TextInputLayout A[IMMUTABLE_TYPE, THIS]), (r2v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

