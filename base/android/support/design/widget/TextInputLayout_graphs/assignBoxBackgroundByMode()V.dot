digraph "CFG forandroid.support.design.widget.TextInputLayout.assignBoxBackgroundByMode()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.boxBackgroundMode != 0) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r2.boxBackground = null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r2.boxBackgroundMode != 2) goto L_0x001f\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d}"];
Node_6 [shape=record,label="{6\:\ 0x000f|if (r2.hintEnabled == false) goto L_0x001f\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011}"];
Node_8 [shape=record,label="{8\:\ 0x0015|if ((r2.boxBackground instanceof android.support.design.widget.CutoutDrawable) != false) goto L_0x001f\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|r2.boxBackground = new android.support.design.widget.CutoutDrawable()\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f}"];
Node_11 [shape=record,label="{11\:\ 0x0023|if ((r2.boxBackground instanceof android.graphics.drawable.GradientDrawable) != false) goto L_?\l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|r2.boxBackground = new android.graphics.drawable.GradientDrawable()\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.design.widget.TextInputLayout.assignBoxBackgroundByMode((r2v0 'this' android.support.design.widget.TextInputLayout A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13;
}

