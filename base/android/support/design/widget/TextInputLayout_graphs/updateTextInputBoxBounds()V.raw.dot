digraph "CFG forandroid.support.design.widget.TextInputLayout.updateTextInputBoxBounds()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.boxBackgroundMode int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x004d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:android.graphics.drawable.GradientDrawable) = (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.boxBackground android.graphics.drawable.GradientDrawable \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x004d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r0 I:android.widget.EditText) = (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.editText android.widget.EditText \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x004d \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: INVOKE  (r0 I:int) = (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.getRight():int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0013 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: IGET  (r0 I:android.widget.EditText) = (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.editText android.widget.EditText \l0x0015: INVOKE  (r0 I:int) = (r0 I:android.widget.EditText) android.widget.EditText.getLeft():int type: VIRTUAL \l0x0019: INVOKE  (r1 I:int) = (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.calculateBoxBackgroundTop():int type: DIRECT \l0x001d: IGET  (r2 I:android.widget.EditText) = (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.editText android.widget.EditText \l0x001f: INVOKE  (r2 I:int) = (r2 I:android.widget.EditText) android.widget.EditText.getRight():int type: VIRTUAL \l0x0023: IGET  (r3 I:android.widget.EditText) = (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.editText android.widget.EditText \l0x0025: INVOKE  (r3 I:int) = (r3 I:android.widget.EditText) android.widget.EditText.getBottom():int type: VIRTUAL \l0x0029: IGET  (r4 I:int) = (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.boxBottomOffsetPx int \l0x002b: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x002c: IGET  (r4 I:int) = (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.boxBackgroundMode int \l0x002e: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|0x002f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0041 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|0x0031: IGET  (r4 I:int) = (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.boxStrokeWidthFocusedPx int \l0x0033: ARITH  (r4 I:int) = (r4 I:int) \/ (r5 I:int) \l0x0034: ARITH  (r0 I:int) = (r0 I:int) + (r4 I:int) \l0x0035: IGET  (r4 I:int) = (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.boxStrokeWidthFocusedPx int \l0x0037: ARITH  (r4 I:int) = (r4 I:int) \/ (r5 I:int) \l0x0038: ARITH  (r1 I:int) = (r1 I:int) \- (r4 I:int) \l0x0039: IGET  (r4 I:int) = (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.boxStrokeWidthFocusedPx int \l0x003b: ARITH  (r4 I:int) = (r4 I:int) \/ (r5 I:int) \l0x003c: ARITH  (r2 I:int) = (r2 I:int) \- (r4 I:int) \l0x003d: IGET  (r4 I:int) = (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.boxStrokeWidthFocusedPx int \l0x003f: ARITH  (r4 I:int) = (r4 I:int) \/ (r5 I:int) \l0x0040: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|0x0041: IGET  (r4 I:android.graphics.drawable.GradientDrawable) = (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.boxBackground android.graphics.drawable.GradientDrawable \l0x0043: INVOKE  \l  (r4 I:android.graphics.drawable.GradientDrawable)\l  (r0 I:int)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:int)\l android.graphics.drawable.GradientDrawable.setBounds(int, int, int, int):void type: VIRTUAL \l0x0046: INVOKE  (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.applyBoxAttributes():void type: DIRECT \l0x0049: INVOKE  (r6 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.updateEditTextBackgroundBounds():void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x004c|0x004c: RETURN   \l}"];
Node_14 [shape=record,label="{14\:\ 0x004d|0x004d: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.design.widget.TextInputLayout.updateTextInputBoxBounds((r6 'this' I:android.support.design.widget.TextInputLayout A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_14[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

