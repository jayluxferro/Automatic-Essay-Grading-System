digraph "CFG forandroid.support.design.widget.TextInputLayout.setTextAppearanceCompatWithErrorFallback(Landroid\/widget\/TextView;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r3 I:android.widget.TextView), (r4 I:int) android.support.v4.widget.TextViewCompat.setTextAppearance(android.widget.TextView, int):void type: STATIC A[Catch:\{ Exception \-\> 0x001a \}, TRY_ENTER]\l0x0004: SGET  (r4 I:int) =  android.os.Build.VERSION.SDK_INT int A[Catch:\{ Exception \-\> 0x001a \}]\l0x0006: CONST  (r1 I:?[int, float, short, byte, char]) = (23 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x001a \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r4 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:8:0x0018 A[Catch:\{ Exception \-\> 0x001a \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r4 I:android.content.res.ColorStateList) = (r3 I:android.widget.TextView) android.widget.TextView.getTextColors():android.content.res.ColorStateList type: VIRTUAL A[Catch:\{ Exception \-\> 0x001a \}]\l0x000e: INVOKE  (r4 I:int) = (r4 I:android.content.res.ColorStateList) android.content.res.ColorStateList.getDefaultColor():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x001a \}]\l0x0011: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (\-65281(0xffffffffffff00ff, float:NaN) ?[int, float, short, byte, char])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0018 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002e \l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lExcHandler: Exception null\lSplitter:B:1:0x0001\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: SGET  (r4 I:int) =  android.support.design.R.style.TextAppearance_AppCompat_Caption int \l0x001e: INVOKE  (r3 I:android.widget.TextView), (r4 I:int) android.support.v4.widget.TextViewCompat.setTextAppearance(android.widget.TextView, int):void type: STATIC \l0x0021: INVOKE  (r4 I:android.content.Context) = (r2 I:android.support.design.widget.TextInputLayout) android.support.design.widget.TextInputLayout.getContext():android.content.Context type: VIRTUAL \l0x0025: SGET  (r0 I:int) =  android.support.design.R.color.design_error int \l0x0027: INVOKE  (r4 I:int) = (r4 I:android.content.Context), (r0 I:int) android.support.v4.content.ContextCompat.getColor(android.content.Context, int):int type: STATIC \l0x002b: INVOKE  (r3 I:android.widget.TextView), (r4 I:int) android.widget.TextView.setTextColor(int):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|0x002e: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.design.widget.TextInputLayout.setTextAppearanceCompatWithErrorFallback((r2 'this' I:android.support.design.widget.TextInputLayout A[IMMUTABLE_TYPE, THIS]), (r3 I:android.widget.TextView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[BUILD, android.support.annotation.StyleRes, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_11[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_9;
Node_11 -> Node_12;
}

