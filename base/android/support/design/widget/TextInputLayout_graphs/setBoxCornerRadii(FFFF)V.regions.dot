digraph "CFG forandroid.support.design.widget.TextInputLayout.setBoxCornerRadii(FFFF)V" {
subgraph cluster_Region_1490711552 {
label = "R(1:(1:(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_369005252 {
label = "R(1:(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2051518635 {
label = "IF [B:1:0x0004, B:3:0x000a, B:5:0x0010, B:7:0x0016] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r1.boxCornerRadiusTopStart != r2) goto L_0x0018\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|ADDED_TO_REGION\l|if (r1.boxCornerRadiusTopEnd != r3) goto L_0x0018\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|ADDED_TO_REGION\l|if (r1.boxCornerRadiusBottomEnd != r5) goto L_0x0018\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|ADDED_TO_REGION\l|if (r1.boxCornerRadiusBottomStart != r4) goto L_0x0018\l}"];
subgraph cluster_Region_2063720785 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0018|r1.boxCornerRadiusTopStart = r2\lr1.boxCornerRadiusTopEnd = r3\lr1.boxCornerRadiusBottomEnd = r5\lr1.boxCornerRadiusBottomStart = r4\lapplyBoxAttributes()\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000c}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0012}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.TextInputLayout.setBoxCornerRadii((r1v0 'this' android.support.design.widget.TextInputLayout A[IMMUTABLE_TYPE, THIS]), (r2v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_7 -> Node_8;
Node_7 -> Node_10[style=dashed];
Node_8 -> Node_9;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

