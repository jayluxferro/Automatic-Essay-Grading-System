digraph "CFG forandroid.support.design.widget.SwipeDismissBehavior.1.shouldDismiss(Landroid\/view\/View;F)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0003: CMP_L  (r3 I:int) = (r8 I:float), (r0 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x003d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r7 I:int) = (r7 I:android.view.View) android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):int type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IGET  (r4 I:android.support.design.widget.SwipeDismissBehavior) = (r6 I:android.support.design.widget.SwipeDismissBehavior$1) android.support.design.widget.SwipeDismissBehavior.1.this$0 android.support.design.widget.SwipeDismissBehavior \l0x0012: IGET  (r4 I:int) = (r4 I:android.support.design.widget.SwipeDismissBehavior) android.support.design.widget.SwipeDismissBehavior.swipeDirection int \l0x0014: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0018 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: RETURN  (r2 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: IGET  (r4 I:android.support.design.widget.SwipeDismissBehavior) = (r6 I:android.support.design.widget.SwipeDismissBehavior$1) android.support.design.widget.SwipeDismissBehavior.1.this$0 android.support.design.widget.SwipeDismissBehavior \l0x001a: IGET  (r4 I:int) = (r4 I:android.support.design.widget.SwipeDismissBehavior) android.support.design.widget.SwipeDismissBehavior.swipeDirection int \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x002a \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0026 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: CMP_G  (r7 I:int) = (r8 I:float), (r0 I:float) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|0x0022: IF  (r7 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:17:0x0029 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|0x0024: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0026|0x0026: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:17:0x0029 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0029|0x0029: RETURN  (r1 I:boolean) \l}"];
Node_18 [shape=record,label="{18\:\ 0x002a|0x002a: IGET  (r4 I:android.support.design.widget.SwipeDismissBehavior) = (r6 I:android.support.design.widget.SwipeDismissBehavior$1) android.support.design.widget.SwipeDismissBehavior.1.this$0 android.support.design.widget.SwipeDismissBehavior \l0x002c: IGET  (r4 I:int) = (r4 I:android.support.design.widget.SwipeDismissBehavior) android.support.design.widget.SwipeDismissBehavior.swipeDirection int \l}"];
Node_19 [shape=record,label="{19\:\ 0x002e|0x002e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x003c \l}"];
Node_20 [shape=record,label="{20\:\ 0x0030|0x0030: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0036 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0032|0x0032: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:26:0x003b \l}"];
Node_22 [shape=record,label="{22\:\ 0x0034|0x0034: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0036|0x0036: CMP_G  (r7 I:int) = (r8 I:float), (r0 I:float) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0038|0x0038: IF  (r7 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:26:0x003b \l}"];
Node_26 [shape=record,label="{26\:\ 0x003b|0x003b: RETURN  (r1 I:boolean) \l}"];
Node_27 [shape=record,label="{27\:\ 0x003c|0x003c: RETURN  (r1 I:boolean) \l}"];
Node_28 [shape=record,label="{28\:\ 0x003d|0x003d: INVOKE  (r8 I:int) = (r7 I:android.view.View) android.view.View.getLeft():int type: VIRTUAL \l0x0041: IGET  (r0 I:int) = (r6 I:android.support.design.widget.SwipeDismissBehavior$1) android.support.design.widget.SwipeDismissBehavior.1.originalCapturedViewLeft int \l0x0043: ARITH  (r8 I:int) = (r8 I:int) \- (r0 I:int) \l0x0044: INVOKE  (r7 I:int) = (r7 I:android.view.View) android.view.View.getWidth():int type: VIRTUAL \l0x0048: CAST  (r7 I:float) = (float) (r7 I:int) \l0x0049: IGET  (r0 I:android.support.design.widget.SwipeDismissBehavior) = (r6 I:android.support.design.widget.SwipeDismissBehavior$1) android.support.design.widget.SwipeDismissBehavior.1.this$0 android.support.design.widget.SwipeDismissBehavior \l0x004b: IGET  (r0 I:float) = (r0 I:android.support.design.widget.SwipeDismissBehavior) android.support.design.widget.SwipeDismissBehavior.dragDismissThreshold float \l0x004d: ARITH  (r7 I:float) = (r7 I:float) * (r0 I:float) \l0x004f: INVOKE  (r7 I:int) = (r7 I:float) java.lang.Math.round(float):int type: STATIC \l0x0053: INVOKE  (r8 I:int) = (r8 I:int) java.lang.Math.abs(int):int type: STATIC \l}"];
Node_29 [shape=record,label="{29\:\ 0x0057|0x0057: IF  (r8 I:?[int, byte, short, char]) \< (r7 I:?[int, byte, short, char])  \-\> B:31:0x005a \l}"];
Node_30 [shape=record,label="{30\:\ 0x0059|0x0059: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x005a|0x005a: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean android.support.design.widget.SwipeDismissBehavior.1.shouldDismiss((r6 'this' I:android.support.design.widget.SwipeDismissBehavior$1 A[IMMUTABLE_TYPE, THIS]), (r7 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_28;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_18;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_17;
Node_15 -> Node_17;
Node_15 -> Node_14[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_22[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
}

