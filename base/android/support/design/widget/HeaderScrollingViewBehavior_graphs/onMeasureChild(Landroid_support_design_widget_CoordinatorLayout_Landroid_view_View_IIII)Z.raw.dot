digraph "CFG forandroid.support.design.widget.HeaderScrollingViewBehavior.onMeasureChild(Landroid\/support\/design\/widget\/CoordinatorLayout;Landroid\/view\/View;IIII)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0001: INVOKE  (r1 I:android.view.ViewGroup$LayoutParams) = (r14 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0005: IGET  (r1 I:int) = (r1 I:android.view.ViewGroup$LayoutParams) android.view.ViewGroup.LayoutParams.height int \l0x0007: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST  (r3 I:?[int, float, short, byte, char]) = (\-2 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x005d \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r3 I:java.util.List) = \l  (r13 I:android.support.design.widget.CoordinatorLayout)\l  (r14 I:android.view.View)\l android.support.design.widget.CoordinatorLayout.getDependencies(android.view.View):java.util.List type: VIRTUAL \l0x0011: INVOKE  (r3 I:android.view.View) = \l  (r12 I:android.support.design.widget.HeaderScrollingViewBehavior)\l  (r3 I:java.util.List)\l android.support.design.widget.HeaderScrollingViewBehavior.findFirstDependency(java.util.List):android.view.View type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x005d \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: INVOKE  (r4 I:boolean) = (r3 I:android.view.View) android.support.v4.view.ViewCompat.getFitsSystemWindows(android.view.View):boolean type: STATIC \l0x001b: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0032 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: INVOKE  (r4 I:boolean) = (r14 I:android.view.View) android.support.v4.view.ViewCompat.getFitsSystemWindows(android.view.View):boolean type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0032 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0025: INVOKE  (r14 I:android.view.View), (r5 I:boolean) android.support.v4.view.ViewCompat.setFitsSystemWindows(android.view.View, boolean):void type: STATIC \l0x0028: INVOKE  (r6 I:boolean) = (r14 I:android.view.View) android.support.v4.view.ViewCompat.getFitsSystemWindows(android.view.View):boolean type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0033 \l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|0x002e: INVOKE  (r14 I:android.view.View) android.view.View.requestLayout():void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|0x0031: RETURN  (r5 I:boolean) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|0x0033: INVOKE  (r6 I:int) = (r17 I:int) android.view.View.MeasureSpec.getSize(int):int type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|0x0037: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x003d \l}"];
Node_17 [shape=record,label="{17\:\ 0x0039|0x0039: INVOKE  (r6 I:int) = (r13 I:android.support.design.widget.CoordinatorLayout) android.support.design.widget.CoordinatorLayout.getHeight():int type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x003d|0x003d: INVOKE  (r7 I:int) = (r3 I:android.view.View) android.view.View.getMeasuredHeight():int type: VIRTUAL \l0x0041: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x0042: INVOKE  (r3 I:int) = \l  (r12 I:android.support.design.widget.HeaderScrollingViewBehavior)\l  (r3 I:android.view.View)\l android.support.design.widget.HeaderScrollingViewBehavior.getScrollRange(android.view.View):int type: VIRTUAL \l0x0046: ARITH  (r6 I:int) = (r6 I:int) + (r3 I:int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0047|0x0047: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x004c \l}"];
Node_20 [shape=record,label="{20\:\ 0x0049|0x0049: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x004c|0x004c: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (\-2147483648(0xffffffff80000000, float:\-0.0) ?[int, float, short, byte, char])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x004e|0x004e: INVOKE  (r10 I:int) = (r6 I:int), (r1 I:int) android.view.View.MeasureSpec.makeMeasureSpec(int, int):int type: STATIC \l0x0052: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0053: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0054: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0055: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0057: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0059: INVOKE  \l  (r6 I:android.support.design.widget.CoordinatorLayout)\l  (r7 I:android.view.View)\l  (r8 I:int)\l  (r9 I:int)\l  (r10 I:int)\l  (r11 I:int)\l android.support.design.widget.CoordinatorLayout.onMeasureChild(android.view.View, int, int, int, int):void type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x005c|0x005c: RETURN  (r5 I:boolean) \l}"];
Node_24 [shape=record,label="{24\:\ 0x005d|0x005d: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x005e|0x005e: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.design.widget.HeaderScrollingViewBehavior.onMeasureChild((r12 'this' I:android.support.design.widget.HeaderScrollingViewBehavior A[IMMUTABLE_TYPE, THIS]), (r13 I:android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_24;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_24;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_24 -> Node_25;
}

