digraph "CFG forandroid.support.design.widget.ShadowDrawableWrapper.setShadowSize(FF)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CMP_G  (r1 I:int) = (r3 I:float), (r0 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r1 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:17:0x0043 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: CMP_G  (r0 I:int) = (r4 I:float), (r0 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:17:0x0043 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: INVOKE  (r3 I:int) = (r3 I:float) android.support.design.widget.ShadowDrawableWrapper.toEven(float):int type: STATIC \l0x000d: CAST  (r3 I:float) = (float) (r3 I:int) \l0x000e: INVOKE  (r4 I:int) = (r4 I:float) android.support.design.widget.ShadowDrawableWrapper.toEven(float):int type: STATIC \l0x0012: CAST  (r4 I:float) = (float) (r4 I:int) \l0x0013: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0014: CMP_L  (r1 I:int) = (r3 I:float), (r4 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:10:0x001f \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IGET  (r3 I:boolean) = (r2 I:android.support.design.widget.ShadowDrawableWrapper) android.support.design.widget.ShadowDrawableWrapper.printedShadowClipWarning boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001e \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IPUT  \l  (r0 I:boolean)\l  (r2 I:android.support.design.widget.ShadowDrawableWrapper)\l android.support.design.widget.ShadowDrawableWrapper.printedShadowClipWarning boolean \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: IGET  (r1 I:float) = (r2 I:android.support.design.widget.ShadowDrawableWrapper) android.support.design.widget.ShadowDrawableWrapper.rawShadowSize float \l0x0021: CMP_L  (r1 I:int) = (r1 I:float), (r3 I:float) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002c \l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|0x0025: IGET  (r1 I:float) = (r2 I:android.support.design.widget.ShadowDrawableWrapper) android.support.design.widget.ShadowDrawableWrapper.rawMaxShadowSize float \l0x0027: CMP_L  (r1 I:int) = (r1 I:float), (r4 I:float) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|0x0029: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002c \l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|0x002b: RETURN   \l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|0x002c: IPUT  \l  (r3 I:float)\l  (r2 I:android.support.design.widget.ShadowDrawableWrapper)\l android.support.design.widget.ShadowDrawableWrapper.rawShadowSize float \l0x002e: IPUT  \l  (r4 I:float)\l  (r2 I:android.support.design.widget.ShadowDrawableWrapper)\l android.support.design.widget.ShadowDrawableWrapper.rawMaxShadowSize float \l0x0030: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1069547520(0x3fc00000, float:1.5) ?[int, float, short, byte, char])\l \l0x0032: ARITH  (r3 I:float) = (r3 I:float) * (r1 I:float) \l0x0034: INVOKE  (r3 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x0038: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0039: IPUT  \l  (r3 I:float)\l  (r2 I:android.support.design.widget.ShadowDrawableWrapper)\l android.support.design.widget.ShadowDrawableWrapper.shadowSize float \l0x003b: IPUT  \l  (r4 I:float)\l  (r2 I:android.support.design.widget.ShadowDrawableWrapper)\l android.support.design.widget.ShadowDrawableWrapper.maxShadowSize float \l0x003d: IPUT  \l  (r0 I:boolean)\l  (r2 I:android.support.design.widget.ShadowDrawableWrapper)\l android.support.design.widget.ShadowDrawableWrapper.dirty boolean \l0x003f: INVOKE  (r2 I:android.support.design.widget.ShadowDrawableWrapper) android.support.design.widget.ShadowDrawableWrapper.invalidateSelf():void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0042|0x0042: RETURN   \l}"];
Node_17 [shape=record,label="{17\:\ 0x0043|0x0043: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0045: CONST_STR  (r4 I:java.lang.String) =  \"invalid shadow size\" \l0x0047: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|0x004a: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.ShadowDrawableWrapper.setShadowSize((r2 'this' I:android.support.design.widget.ShadowDrawableWrapper A[IMMUTABLE_TYPE, THIS]), (r3 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_17;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

