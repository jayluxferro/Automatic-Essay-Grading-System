digraph "CFG forandroid.support.design.widget.Snackbar.make(Landroid\/view\/View;Ljava\/lang\/CharSequence;I)Landroid\/support\/design\/widget\/Snackbar;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.view.ViewGroup r3 = findSuitableParent(r3)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r3 == null) goto L_0x0030\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|android.view.LayoutInflater r0 = android.view.LayoutInflater.from(r3.getContext())\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|if (hasSnackbarButtonStyleAttr(r3.getContext()) == false) goto L_0x001b\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|int r1 = android.support.design.C0059R.layout.mtrl_layout_snackbar_include\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|int r1 = android.support.design.C0059R.layout.design_layout_snackbar_include\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|PHI: r1 \l  PHI: (r1v2 int) = (r1v4 int), (r1v5 int) binds: [B:5:0x001b, B:4:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|android.support.design.widget.SnackbarContentLayout r0 = (android.support.design.widget.SnackbarContentLayout) r0.inflate(r1, r3, false)\landroid.support.design.widget.Snackbar r1 = new android.support.design.widget.Snackbar(r3, r0, r0)\lr1.setText(r4)\lr1.setDuration(r5)\l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|RETURN\l|return r1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0030}"];
Node_9 [shape=record,label="{9\:\ 0x0037|throw new java.lang.IllegalArgumentException(\"No suitable parent found from the given view. Please provide a valid view.\")\l}"];
MethodNode[shape=record,label="{public static android.support.design.widget.Snackbar android.support.design.widget.Snackbar.make((r3v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], \lAnnotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

