digraph "CFG forandroid.support.design.widget.TabLayout.setScrollPosition(IFZZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = java.lang.Math.round(((float) r3) + r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r0 \< 0) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r0 \< r2.slidingTabIndicator.getChildCount()) goto L_0x0011\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|if (r6 == false) goto L_0x0018\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|r2.slidingTabIndicator.setIndicatorPositionFromTabPosition(r3, r4)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018}"];
Node_7 [shape=record,label="{7\:\ 0x001a|if (r2.scrollAnimator == null) goto L_0x0029\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c}"];
Node_9 [shape=record,label="{9\:\ 0x0022|if (r2.scrollAnimator.isRunning() == false) goto L_0x0029\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|r2.scrollAnimator.cancel()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|scrollTo(calculateScrollXForTab(r3, r4), 0)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|if (r5 == false) goto L_?\l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|setSelectedTabView(r0)\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void android.support.design.widget.TabLayout.setScrollPosition((r2v0 'this' android.support.design.widget.TabLayout A[IMMUTABLE_TYPE, THIS]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_17[style=dashed];
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
}

