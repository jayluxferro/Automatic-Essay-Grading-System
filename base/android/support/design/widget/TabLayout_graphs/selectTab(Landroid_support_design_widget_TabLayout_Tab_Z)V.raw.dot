digraph "CFG forandroid.support.design.widget.TabLayout.selectTab(Landroid\/support\/design\/widget\/TabLayout$Tab;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.design.widget.TabLayout$Tab) = (r4 I:android.support.design.widget.TabLayout) android.support.design.widget.TabLayout.selectedTab android.support.design.widget.TabLayout$Tab \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0040 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  \l  (r4 I:android.support.design.widget.TabLayout)\l  (r5 I:android.support.design.widget.TabLayout$Tab)\l android.support.design.widget.TabLayout.dispatchTabReselected(android.support.design.widget.TabLayout$Tab):void type: DIRECT \l0x0009: INVOKE  (r5 I:int) = (r5 I:android.support.design.widget.TabLayout$Tab) android.support.design.widget.TabLayout.Tab.getPosition():int type: VIRTUAL \l0x000d: INVOKE  (r4 I:android.support.design.widget.TabLayout), (r5 I:int) android.support.design.widget.TabLayout.animateToTab(int):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0019 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: INVOKE  (r2 I:int) = (r5 I:android.support.design.widget.TabLayout$Tab) android.support.design.widget.TabLayout.Tab.getPosition():int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0034 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0024 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: INVOKE  (r6 I:int) = (r0 I:android.support.design.widget.TabLayout$Tab) android.support.design.widget.TabLayout.Tab.getPosition():int type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002c \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002c \l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|0x0026: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0027: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0028: INVOKE  \l  (r4 I:android.support.design.widget.TabLayout)\l  (r2 I:int)\l  (r6 I:float)\l  (r3 I:boolean)\l android.support.design.widget.TabLayout.setScrollPosition(int, float, boolean):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|0x002c: INVOKE  (r4 I:android.support.design.widget.TabLayout), (r2 I:int) android.support.design.widget.TabLayout.animateToTab(int):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|0x002f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0034 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0031|0x0031: INVOKE  (r4 I:android.support.design.widget.TabLayout), (r2 I:int) android.support.design.widget.TabLayout.setSelectedTabView(int):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0034|0x0034: IPUT  \l  (r5 I:android.support.design.widget.TabLayout$Tab)\l  (r4 I:android.support.design.widget.TabLayout)\l android.support.design.widget.TabLayout.selectedTab android.support.design.widget.TabLayout$Tab \l}"];
Node_18 [shape=record,label="{18\:\ 0x0036|0x0036: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x003b \l}"];
Node_19 [shape=record,label="{19\:\ 0x0038|0x0038: INVOKE  \l  (r4 I:android.support.design.widget.TabLayout)\l  (r0 I:android.support.design.widget.TabLayout$Tab)\l android.support.design.widget.TabLayout.dispatchTabUnselected(android.support.design.widget.TabLayout$Tab):void type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x003b|0x003b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0040 \l}"];
Node_21 [shape=record,label="{21\:\ 0x003d|0x003d: INVOKE  \l  (r4 I:android.support.design.widget.TabLayout)\l  (r5 I:android.support.design.widget.TabLayout$Tab)\l android.support.design.widget.TabLayout.dispatchTabSelected(android.support.design.widget.TabLayout$Tab):void type: DIRECT \l}"];
Node_22 [shape=record,label="{22\:\ 0x0040|0x0040: RETURN   \l}"];
MethodNode[shape=record,label="{void android.support.design.widget.TabLayout.selectTab((r4 'this' I:android.support.design.widget.TabLayout A[IMMUTABLE_TYPE, THIS]), (r5 I:android.support.design.widget.TabLayout$Tab A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_22;
Node_3 -> Node_22;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
}

