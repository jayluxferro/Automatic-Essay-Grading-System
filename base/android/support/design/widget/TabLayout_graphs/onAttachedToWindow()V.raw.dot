digraph "CFG forandroid.support.design.widget.TabLayout.onAttachedToWindow()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:android.widget.HorizontalScrollView) android.widget.HorizontalScrollView.onAttachedToWindow():void type: SUPER \l0x0003: IGET  (r0 I:android.support.v4.view.ViewPager) = (r2 I:android.support.design.widget.TabLayout) android.support.design.widget.TabLayout.viewPager android.support.v4.view.ViewPager \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r0 I:android.view.ViewParent) = (r2 I:android.support.design.widget.TabLayout) android.support.design.widget.TabLayout.getParent():android.view.ViewParent type: VIRTUAL \l0x000b: INSTANCE_OF  (r1 I:boolean) = (r0 I:?[OBJECT, ARRAY]) android.support.v4.view.ViewPager \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: CHECK_CAST  (r0 I:android.support.v4.view.ViewPager) = (android.support.v4.view.ViewPager) (r0 I:?[OBJECT, ARRAY]) \l0x0011: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0012: INVOKE  \l  (r2 I:android.support.design.widget.TabLayout)\l  (r0 I:android.support.v4.view.ViewPager)\l  (r1 I:boolean)\l  (r1 I:boolean)\l android.support.design.widget.TabLayout.setupWithViewPager(android.support.v4.view.ViewPager, boolean, boolean):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: RETURN   \l}"];
MethodNode[shape=record,label="{protected void android.support.design.widget.TabLayout.onAttachedToWindow((r2 'this' I:android.support.design.widget.TabLayout A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
}

