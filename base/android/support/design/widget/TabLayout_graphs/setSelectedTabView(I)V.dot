digraph "CFG forandroid.support.design.widget.TabLayout.setSelectedTabView(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r6.slidingTabIndicator.getChildCount()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r7 \>= r0) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|r2 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:2:0x0008, B:11:0x001f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x000a\-\>B:11:0x001f\l|if (r2 \>= r0) goto L_0x0025\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|android.view.View r3 = r6.slidingTabIndicator.getChildAt(r2)\lr4 = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|if (r2 != r7) goto L_0x0017\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|r5 = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|r5 = false\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|PHI: r5 \l  PHI: (r5v0 boolean) = (r5v1 boolean), (r5v2 boolean) binds: [B:7:0x0017, B:6:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|r3.setSelected(r5)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|if (r2 != r7) goto L_0x001e\l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|r4 = false\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|LOOP_END\lPHI: r4 \l  PHI: (r4v1 boolean) = (r4v0 boolean), (r4v2 boolean) binds: [B:14:0x001f, B:13:0x001f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x000a\-\>B:11:0x001f\l|r3.setActivated(r4)\lint r2 = r2 + 1\l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.design.widget.TabLayout.setSelectedTabView((r6v0 'this' android.support.design.widget.TabLayout A[IMMUTABLE_TYPE, THIS]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_14[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_3;
Node_12 -> Node_16;
Node_13 -> Node_11;
Node_14 -> Node_11;
}

