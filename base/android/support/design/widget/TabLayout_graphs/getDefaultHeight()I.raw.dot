digraph "CFG forandroid.support.design.widget.TabLayout.getDefaultHeight()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.ArrayList\<android.support.design.widget.TabLayout$Tab\>) = (r5 I:android.support.design.widget.TabLayout) android.support.design.widget.TabLayout.tabs java.util.ArrayList \l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:10:0x0029 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r3 I:java.util.ArrayList\<android.support.design.widget.TabLayout$Tab\>) = (r5 I:android.support.design.widget.TabLayout) android.support.design.widget.TabLayout.tabs java.util.ArrayList \l0x000c: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.ArrayList), (r2 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0010: CHECK_CAST  (r3 I:android.support.design.widget.TabLayout$Tab) = (android.support.design.widget.TabLayout$Tab) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0026 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: INVOKE  (r4 I:android.graphics.drawable.Drawable) = (r3 I:android.support.design.widget.TabLayout$Tab) android.support.design.widget.TabLayout.Tab.getIcon():android.graphics.drawable.Drawable type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0026 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: INVOKE  (r3 I:java.lang.CharSequence) = (r3 I:android.support.design.widget.TabLayout$Tab) android.support.design.widget.TabLayout.Tab.getText():java.lang.CharSequence type: VIRTUAL \l0x001e: INVOKE  (r3 I:boolean) = (r3 I:java.lang.CharSequence) android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0026 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0032 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: IGET  (r0 I:boolean) = (r5 I:android.support.design.widget.TabLayout) android.support.design.widget.TabLayout.inlineLabel boolean \l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|0x002d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0032 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: CONST  (r0 I:?[int, float, short, byte, char]) = (72 ?[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: CONST  (r0 I:?[int, float, short, byte, char]) = (48 ?[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|0x0034: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{private int android.support.design.widget.TabLayout.getDefaultHeight((r5 'this' I:android.support.design.widget.TabLayout A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.support.annotation.Dimension, \{unit=0\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_1;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
}

