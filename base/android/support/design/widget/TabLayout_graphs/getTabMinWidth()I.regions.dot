digraph "CFG forandroid.support.design.widget.TabLayout.getTabMinWidth()I" {
subgraph cluster_Region_919581541 {
label = "R(1:(2:(1:3)|(1:(2:(1:8)|(1:7)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1747013492 {
label = "R(2:(1:3)|(1:(2:(1:8)|(1:7))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_993513065 {
label = "IF [B:1:0x0003] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r2.requestedTabMinWidth != \-1) goto L_0x0005\l}"];
subgraph cluster_Region_1514210731 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|RETURN\l|return r2.requestedTabMinWidth\l}"];
}
}
subgraph cluster_Region_291426589 {
label = "R(1:(2:(1:8)|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_1944483501 {
label = "R(2:(1:8)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1990703678 {
label = "IF [B:5:0x000a] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000a|if (r2.mode == 0) goto L_0x000c\l}"];
subgraph cluster_Region_605652252 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return r2.scrollableTabMinWidth\l}"];
}
}
subgraph cluster_Region_1135115963 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000f|SYNTHETIC\lRETURN\lORIG_RETURN\l|return 0\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0005}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0008}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000c}"];
MethodNode[shape=record,label="{private int android.support.design.widget.TabLayout.getTabMinWidth((r2v0 'this' android.support.design.widget.TabLayout A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_8;
}

