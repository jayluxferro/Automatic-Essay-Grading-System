digraph "CFG forandroid.support.design.widget.DescendantOffsetUtils.offsetDescendantMatrix(Landroid\/view\/ViewParent;Landroid\/view\/View;Landroid\/graphics\/Matrix;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.view.ViewParent) = (r3 I:android.view.View) android.view.View.getParent():android.view.ViewParent type: VIRTUAL \l0x0004: INSTANCE_OF  (r1 I:boolean) = (r0 I:?[OBJECT, ARRAY]) android.view.View \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001e \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: CHECK_CAST  (r0 I:android.view.View) = (android.view.View) (r0 I:?[OBJECT, ARRAY]) \l0x000c: INVOKE  \l  (r2 I:android.view.ViewParent)\l  (r0 I:android.view.View)\l  (r4 I:android.graphics.Matrix)\l android.support.design.widget.DescendantOffsetUtils.offsetDescendantMatrix(android.view.ViewParent, android.view.View, android.graphics.Matrix):void type: STATIC \l0x000f: INVOKE  (r2 I:int) = (r0 I:android.view.View) android.view.View.getScrollX():int type: VIRTUAL \l0x0013: NEG  (r2 I:int) = (r2 I:int) \l0x0014: CAST  (r2 I:float) = (float) (r2 I:int) \l0x0015: INVOKE  (r0 I:int) = (r0 I:android.view.View) android.view.View.getScrollY():int type: VIRTUAL \l0x0019: NEG  (r0 I:int) = (r0 I:int) \l0x001a: CAST  (r0 I:float) = (float) (r0 I:int) \l0x001b: INVOKE  (r4 I:android.graphics.Matrix), (r2 I:float), (r0 I:float) android.graphics.Matrix.preTranslate(float, float):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: INVOKE  (r2 I:int) = (r3 I:android.view.View) android.view.View.getLeft():int type: VIRTUAL \l0x0022: CAST  (r2 I:float) = (float) (r2 I:int) \l0x0023: INVOKE  (r0 I:int) = (r3 I:android.view.View) android.view.View.getTop():int type: VIRTUAL \l0x0027: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0028: INVOKE  (r4 I:android.graphics.Matrix), (r2 I:float), (r0 I:float) android.graphics.Matrix.preTranslate(float, float):boolean type: VIRTUAL \l0x002b: INVOKE  (r2 I:android.graphics.Matrix) = (r3 I:android.view.View) android.view.View.getMatrix():android.graphics.Matrix type: VIRTUAL \l0x002f: INVOKE  (r2 I:boolean) = (r2 I:android.graphics.Matrix) android.graphics.Matrix.isIdentity():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0033|0x0033: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x003c \l}"];
Node_6 [shape=record,label="{6\:\ 0x0035|0x0035: INVOKE  (r2 I:android.graphics.Matrix) = (r3 I:android.view.View) android.view.View.getMatrix():android.graphics.Matrix type: VIRTUAL \l0x0039: INVOKE  \l  (r4 I:android.graphics.Matrix)\l  (r2 I:android.graphics.Matrix)\l android.graphics.Matrix.preConcat(android.graphics.Matrix):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x003c|0x003c: RETURN   \l}"];
MethodNode[shape=record,label="{private static void android.support.design.widget.DescendantOffsetUtils.offsetDescendantMatrix((r2 I:android.view.ViewParent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.graphics.Matrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
}

