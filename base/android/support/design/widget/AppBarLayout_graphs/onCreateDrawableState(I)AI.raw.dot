digraph "CFG forandroid.support.design.widget.AppBarLayout.onCreateDrawableState(I)[I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int[]) = (r3 I:android.support.design.widget.AppBarLayout) android.support.design.widget.AppBarLayout.tmpStatesArray int[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0005: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0007: IPUT  \l  (r0 I:int[])\l  (r3 I:android.support.design.widget.AppBarLayout)\l android.support.design.widget.AppBarLayout.tmpStatesArray int[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r0 I:int[]) = (r3 I:android.support.design.widget.AppBarLayout) android.support.design.widget.AppBarLayout.tmpStatesArray int[] \l0x000b: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l0x000c: ARITH  (r4 I:int) = (r4 I:int) + (r1 I:int) \l0x000d: INVOKE  (r4 I:int[]) = (r3 I:android.widget.LinearLayout), (r4 I:int) android.widget.LinearLayout.onCreateDrawableState(int):int[] type: SUPER \l0x0011: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: IGET  (r2 I:boolean) = (r3 I:android.support.design.widget.AppBarLayout) android.support.design.widget.AppBarLayout.liftable boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0019 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: SGET  (r2 I:int) =  android.support.design.R.attr.state_liftable int \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: SGET  (r2 I:int) =  android.support.design.R.attr.state_liftable int \l0x001b: NEG  (r2 I:int) = (r2 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x001e: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001f: IGET  (r2 I:boolean) = (r3 I:android.support.design.widget.AppBarLayout) android.support.design.widget.AppBarLayout.liftable boolean \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002a \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: IGET  (r2 I:boolean) = (r3 I:android.support.design.widget.AppBarLayout) android.support.design.widget.AppBarLayout.lifted boolean \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002a \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: SGET  (r2 I:int) =  android.support.design.R.attr.state_lifted int \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: SGET  (r2 I:int) =  android.support.design.R.attr.state_lifted int \l0x002c: NEG  (r2 I:int) = (r2 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x002f: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0030: IGET  (r2 I:boolean) = (r3 I:android.support.design.widget.AppBarLayout) android.support.design.widget.AppBarLayout.liftable boolean \l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0037 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|0x0034: SGET  (r2 I:int) =  android.support.design.R.attr.state_collapsible int \l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|0x0037: SGET  (r2 I:int) =  android.support.design.R.attr.state_collapsible int \l0x0039: NEG  (r2 I:int) = (r2 I:int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x003a|0x003a: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x003c: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x003d: IGET  (r2 I:boolean) = (r3 I:android.support.design.widget.AppBarLayout) android.support.design.widget.AppBarLayout.liftable boolean \l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|0x003f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0048 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0041|0x0041: IGET  (r2 I:boolean) = (r3 I:android.support.design.widget.AppBarLayout) android.support.design.widget.AppBarLayout.lifted boolean \l}"];
Node_20 [shape=record,label="{20\:\ 0x0043|0x0043: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0048 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0045|0x0045: SGET  (r2 I:int) =  android.support.design.R.attr.state_collapsed int \l}"];
Node_22 [shape=record,label="{22\:\ 0x0048|0x0048: SGET  (r2 I:int) =  android.support.design.R.attr.state_collapsed int \l0x004a: NEG  (r2 I:int) = (r2 I:int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x004b|0x004b: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x004d: INVOKE  (r4 I:int[]) = (r4 I:int[]), (r0 I:int[]) android.support.design.widget.AppBarLayout.mergeDrawableStates(int[], int[]):int[] type: STATIC \l}"];
Node_24 [shape=record,label="{24\:\ 0x0051|0x0051: RETURN  (r4 I:int[]) \l}"];
MethodNode[shape=record,label="{protected int[] android.support.design.widget.AppBarLayout.onCreateDrawableState((r3 'this' I:android.support.design.widget.AppBarLayout A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
}

