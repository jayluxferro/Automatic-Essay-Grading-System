digraph "CFG forandroid.support.design.widget.BaseTransientBottomBar.hideView(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r1 I:android.support.design.widget.BaseTransientBottomBar) android.support.design.widget.BaseTransientBottomBar.shouldAnimate():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout) = (r1 I:android.support.design.widget.BaseTransientBottomBar) android.support.design.widget.BaseTransientBottomBar.view android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout \l0x0008: INVOKE  (r0 I:int) = \l  (r0 I:android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout)\l android.support.design.widget.BaseTransientBottomBar.SnackbarBaseLayout.getVisibility():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: INVOKE  \l  (r1 I:android.support.design.widget.BaseTransientBottomBar)\l  (r2 I:int)\l android.support.design.widget.BaseTransientBottomBar.animateViewOut(int):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: INVOKE  \l  (r1 I:android.support.design.widget.BaseTransientBottomBar)\l  (r2 I:int)\l android.support.design.widget.BaseTransientBottomBar.onViewHidden(int):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: RETURN   \l}"];
MethodNode[shape=record,label="{final void android.support.design.widget.BaseTransientBottomBar.hideView((r1 'this' I:android.support.design.widget.BaseTransientBottomBar A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
}

