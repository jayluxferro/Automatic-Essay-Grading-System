digraph "CFG forandroid.support.design.widget.TextInputLayout.AccessibilityDelegate.onInitializeAccessibilityNodeInfo(Landroid\/view\/View;Landroid\/support\/v4\/view\/accessibility\/AccessibilityNodeInfoCompat;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super.onInitializeAccessibilityNodeInfo(r10, r11)\landroid.widget.EditText r10 = r9.layout.getEditText()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r10 == null) goto L_0x0010\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|android.text.Editable r10 = r10.getText()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|r10 = null\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|PHI: r10 \l  PHI: (r10v3 android.text.Editable) = (r10v4 android.text.Editable), (r10v5 android.text.Editable) binds: [B:3:0x0010, B:2:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.CharSequence r0 = r9.layout.getHint()\ljava.lang.CharSequence r1 = r9.layout.getError()\ljava.lang.CharSequence r2 = r9.layout.getCounterOverflowDescription()\lr3 = android.text.TextUtils.isEmpty(r10) ^ true\lr5 = android.text.TextUtils.isEmpty(r0) ^ true\lr6 = android.text.TextUtils.isEmpty(r1) ^ true\lr7 = false\l}"];
Node_5 [shape=record,label="{5\:\ 0x0034|if (r6 != false) goto L_0x003f\l}"];
Node_6 [shape=record,label="{6\:\ 0x0036}"];
Node_7 [shape=record,label="{7\:\ 0x003a|if (android.text.TextUtils.isEmpty(r2) != false) goto L_0x003d\l}"];
Node_8 [shape=record,label="{8\:\ 0x003d|r8 = false\l}"];
Node_9 [shape=record,label="{9\:\ 0x003f|r8 = true\l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|PHI: r8 \l  PHI: (r8v0 boolean) = (r8v1 boolean), (r8v3 boolean) binds: [B:9:0x003f, B:8:0x003d] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == false) goto L_0x0046\l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|r11.setText(r10)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0046|if (r5 == false) goto L_0x004b\l}"];
Node_13 [shape=record,label="{13\:\ 0x0048|r11.setText(r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x004b|if (r5 == false) goto L_0x0058\l}"];
Node_15 [shape=record,label="{15\:\ 0x004d|r11.setHintText(r0)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0050|if (r3 != false) goto L_0x0055\l}"];
Node_17 [shape=record,label="{17\:\ 0x0052|if (r5 == false) goto L_0x0055\l}"];
Node_18 [shape=record,label="{18\:\ 0x0054|r7 = true\l}"];
Node_19 [shape=record,label="{19\:\ 0x0055|PHI: r7 \l  PHI: (r7v1 boolean) = (r7v0 boolean), (r7v0 boolean), (r7v2 boolean) binds: [B:16:0x0050, B:17:0x0052, B:18:0x0054] A[DONT_GENERATE, DONT_INLINE]\l|r11.setShowingHintText(r7)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0058|if (r8 == false) goto L_?\l}"];
Node_21 [shape=record,label="{21\:\ 0x005a|if (r6 == false) goto L_0x005d\l}"];
Node_22 [shape=record,label="{22\:\ 0x005d|r1 = r2\l}"];
Node_23 [shape=record,label="{23\:\ 0x005e|PHI: r1 \l  PHI: (r1v2 java.lang.CharSequence) = (r1v1 java.lang.CharSequence), (r1v3 java.lang.CharSequence) binds: [B:21:0x005a, B:22:0x005d] A[DONT_GENERATE, DONT_INLINE]\l|r11.setError(r1)\lr11.setContentInvalid(true)\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.TextInputLayout.AccessibilityDelegate.onInitializeAccessibilityNodeInfo((r9v0 'this' android.support.design.widget.TextInputLayout$AccessibilityDelegate A[IMMUTABLE_TYPE, THIS]), (r10v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 android.support.v4.view.accessibility.AccessibilityNodeInfoCompat A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_14;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_24;
}

