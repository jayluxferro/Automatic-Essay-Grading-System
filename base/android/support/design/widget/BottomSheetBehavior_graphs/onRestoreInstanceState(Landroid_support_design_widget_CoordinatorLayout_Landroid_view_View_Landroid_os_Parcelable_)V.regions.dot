digraph "CFG forandroid.support.design.widget.BottomSheetBehavior.onRestoreInstanceState(Landroid\/support\/design\/widget\/CoordinatorLayout;Landroid\/view\/View;Landroid\/os\/Parcelable;)V" {
subgraph cluster_Region_1530806415 {
label = "R(2:0|(1:5)(1:4))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.support.design.widget.BottomSheetBehavior$SavedState android.support.design.widget.BottomSheetBehavior.SavedState r4 = (android.support.design.widget.BottomSheetBehavior.SavedState) r4\lsuper.onRestoreInstanceState(r2, r3, r4.getSuperState())\l}"];
subgraph cluster_IfRegion_2079909209 {
label = "IF [B:1:0x000c, B:3:0x0011] THEN: R(1:5) ELSE: R(1:4)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000c|if (r4.state == 1) goto L_0x0019\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|ADDED_TO_REGION\l|if (r4.state == 2) goto L_0x0019\l}"];
subgraph cluster_Region_611692395 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0019|r1.state = 4\l}"];
}
subgraph cluster_Region_460168358 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0014|r1.state = r4.state\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000e}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.BottomSheetBehavior.onRestoreInstanceState((r1v0 'this' android.support.design.widget.BottomSheetBehavior A[IMMUTABLE_TYPE, THIS]), (r2v0 android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 V A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.os.Parcelable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/support\/design\/widget\/CoordinatorLayout;, TV;, Landroid\/os\/Parcelable;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_4 -> Node_7;
Node_2 -> Node_3;
}

