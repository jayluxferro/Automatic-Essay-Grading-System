digraph "CFG forandroid.support.design.widget.BottomSheetBehavior.findScrollingChild(Landroid\/view\/View;)Landroid\/view\/View;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (android.support.p000v4.view.ViewCompat.isNestedScrollingEnabled(r4) == false) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return r4\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007}"];
Node_4 [shape=record,label="{4\:\ 0x0009|if ((r4 instanceof android.view.ViewGroup) == false) goto L_?\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|android.view.ViewGroup r4 = (android.view.ViewGroup) r4\lr0 = 0\lint r1 = r4.getChildCount()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v4 int) binds: [B:5:0x000b, B:10:0x001f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0012\-\>B:10:0x001f\l|if (r0 \>= r1) goto L_0x0022\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|android.view.View r2 = findScrollingChild(r4.getChildAt(r0))\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|if (r2 == null) goto L_0x001f\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|RETURN\l|return r2\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|LOOP_END\lLOOP:0: B:6:0x0012\-\>B:10:0x001f\l|int r0 = r0 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
MethodNode[shape=record,label="{android.view.View android.support.design.widget.BottomSheetBehavior.findScrollingChild((r3v0 'this' android.support.design.widget.BottomSheetBehavior A[IMMUTABLE_TYPE, THIS]), (r4v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.VisibleForTesting, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_12[style=dashed];
Node_10 -> Node_6;
Node_11 -> Node_14;
Node_12 -> Node_9;
}

