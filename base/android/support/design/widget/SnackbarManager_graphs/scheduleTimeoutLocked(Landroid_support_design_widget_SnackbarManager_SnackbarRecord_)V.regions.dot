digraph "CFG forandroid.support.design.widget.SnackbarManager.scheduleTimeoutLocked(Landroid\/support\/design\/widget\/SnackbarManager$SnackbarRecord;)V" {
subgraph cluster_Region_520364480 {
label = "R(1:(1:(3:3|(1:5)(1:(1:8))|9)))";
node [shape=record,color=blue];
subgraph cluster_Region_1381648265 {
label = "R(1:(3:3|(1:5)(1:(1:8))|9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_918757402 {
label = "IF [B:1:0x0003] THEN: R(3:3|(1:5)(1:(1:8))|9) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r5.duration != \-2) goto L_0x0006\l}"];
subgraph cluster_Region_405144108 {
label = "R(3:3|(1:5)(1:(1:8))|9)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|int r0 = LONG_DURATION_MS\l}"];
subgraph cluster_IfRegion_54933637 {
label = "IF [B:4:0x000a] THEN: R(1:5) ELSE: R(1:(1:8))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r5.duration \> 0) goto L_0x000c\l}"];
subgraph cluster_Region_1897319281 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000c|int r0 = r5.duration\l}"];
}
subgraph cluster_Region_1039270668 {
label = "R(1:(1:8)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1033137460 {
label = "IF [B:7:0x0012] THEN: R(1:8) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0012|if (r5.duration == \-1) goto L_0x0014\l}"];
subgraph cluster_Region_887203097 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0014|r0 = 1500\l}"];
}
}
}
}
Node_9 [shape=record,label="{9\:\ 0x0016|PHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v3 int), (r0v4 int) binds: [B:7:0x0012, B:8:0x0014, B:5:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|r4.handler.removeCallbacksAndMessages(r5)\lr4.handler.sendMessageDelayed(android.os.Message.obtain(r4.handler, 0, r5), (long) r0)\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0005}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000f}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0028}"];
MethodNode[shape=record,label="{private void android.support.design.widget.SnackbarManager.scheduleTimeoutLocked((r4v0 'this' android.support.design.widget.SnackbarManager A[IMMUTABLE_TYPE, THIS]), (r5v0 android.support.design.widget.SnackbarManager$SnackbarRecord A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_0 -> Node_1;
Node_6 -> Node_7;
}

