digraph "CFG forandroid.support.design.widget.SnackbarManager.restoreTimeoutIfPaused(Landroid\/support\/design\/widget\/SnackbarManager$Callback;)V" {
subgraph cluster_Region_72236814 {
label = "R(2:0|2)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
subgraph cluster_SynchronizedRegion_1717507437 {
label = "Synchronized:R(2:1|(1:(1:7)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
subgraph cluster_Region_1857649440 {
label = "R(1:(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1845130238 {
label = "IF [B:4:0x0007, B:6:0x000d] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0007|ADDED_TO_REGION\l|if (isCurrentSnackbarLocked(r3) == true) goto L_0x0009\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|ADDED_TO_REGION\l|if (r2.currentSnackbar.paused == true) goto L_0x000f\l}"];
subgraph cluster_Region_414816000 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000f|r2.currentSnackbar.paused = false\lscheduleTimeoutLocked(r2.currentSnackbar)\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,color=red,label="{3\:\ ?}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0009}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0019|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x0019: MONITOR_EXIT  \l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001a}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001b|REMOVE\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001c|REMOVE\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x001d|REMOVE\l|throw r3\l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.SnackbarManager.restoreTimeoutIfPaused((r2v0 'this' android.support.design.widget.SnackbarManager A[IMMUTABLE_TYPE, THIS]), (r3v0 android.support.design.widget.SnackbarManager$Callback A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_4 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

