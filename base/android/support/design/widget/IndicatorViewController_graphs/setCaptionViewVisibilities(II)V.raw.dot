digraph "CFG forandroid.support.design.widget.IndicatorViewController.setCaptionViewVisibilities(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0003 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: RETURN   \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0014 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: INVOKE  (r0 I:android.widget.TextView) = \l  (r2 I:android.support.design.widget.IndicatorViewController)\l  (r4 I:int)\l android.support.design.widget.IndicatorViewController.getCaptionViewFromDisplayState(int):android.widget.TextView type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0014 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: INVOKE  (r0 I:android.widget.TextView), (r1 I:int) android.widget.TextView.setVisibility(int):void type: VIRTUAL \l0x000f: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0011: INVOKE  (r0 I:android.widget.TextView), (r1 I:float) android.widget.TextView.setAlpha(float):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0027 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: INVOKE  (r0 I:android.widget.TextView) = \l  (r2 I:android.support.design.widget.IndicatorViewController)\l  (r3 I:int)\l android.support.design.widget.IndicatorViewController.getCaptionViewFromDisplayState(int):android.widget.TextView type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0027 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x001d: INVOKE  (r0 I:android.widget.TextView), (r1 I:int) android.widget.TextView.setVisibility(int):void type: VIRTUAL \l0x0020: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0027 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0024: INVOKE  \l  (r0 I:android.widget.TextView)\l  (r3 I:java.lang.CharSequence)\l android.widget.TextView.setText(java.lang.CharSequence):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|0x0027: IPUT  \l  (r4 I:int)\l  (r2 I:android.support.design.widget.IndicatorViewController)\l android.support.design.widget.IndicatorViewController.captionDisplayed int \l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|0x0029: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.design.widget.IndicatorViewController.setCaptionViewVisibilities((r2 'this' I:android.support.design.widget.IndicatorViewController A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

