digraph "CFG forandroid.support.design.widget.MathUtils.max(FFFF)F" {
subgraph cluster_Region_194513819 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|RETURN\l|return (r1 \<= r2 \|\| r1 \<= r3 \|\| r1 \<= r4) ? (r2 \<= r3 \|\| r2 \<= r4) ? r3 \> r4 ? r3 : r4 : r2 : r1\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0006|REMOVE\lADDED_TO_REGION\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0008}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000a|REMOVE\lADDED_TO_REGION\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000d}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000f}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0011}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0013|REMOVE\lADDED_TO_REGION\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0015}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0017}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0019}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x001b}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x001d}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static float android.support.design.widget.MathUtils.max((r1v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_18;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_17;
Node_14 -> Node_15;
}

