digraph "CFG forandroid.support.design.widget.AppBarLayout.BaseBehavior.onNestedScroll(Landroid\/support\/design\/widget\/CoordinatorLayout;Landroid\/support\/design\/widget\/AppBarLayout;Landroid\/view\/View;IIIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r13 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:2:0x0012 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r10 I:int) = (r8 I:android.support.design.widget.AppBarLayout) android.support.design.widget.AppBarLayout.getDownNestedScrollRange():int type: VIRTUAL \l0x0006: NEG  (r4 I:int) = (r10 I:int) \l0x0007: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0009: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x000a: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x000b: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: INVOKE  \l  (r0 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l  (r1 I:android.support.design.widget.CoordinatorLayout)\l  (r2 I:android.view.View)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l android.support.design.widget.AppBarLayout.BaseBehavior.scroll(android.support.design.widget.CoordinatorLayout, android.view.View, int, int, int):int type: VIRTUAL \l0x000f: INVOKE  \l  (r6 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l  (r13 I:int)\l  (r8 I:android.support.design.widget.AppBarLayout)\l  (r9 I:android.view.View)\l  (r14 I:int)\l android.support.design.widget.AppBarLayout.BaseBehavior.stopNestedScrollIfNeeded(int, android.support.design.widget.AppBarLayout, android.view.View, int):void type: DIRECT \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: INVOKE  (r7 I:boolean) = (r8 I:android.support.design.widget.AppBarLayout) android.support.design.widget.AppBarLayout.isLiftOnScroll():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0024 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: INVOKE  (r7 I:int) = (r9 I:android.view.View) android.view.View.getScrollY():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: IF  (r7 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x0020 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: INVOKE  \l  (r8 I:android.support.design.widget.AppBarLayout)\l  (r7 I:boolean)\l android.support.design.widget.AppBarLayout.setLiftedState(boolean):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.AppBarLayout.BaseBehavior.onNestedScroll((r6 'this' I:android.support.design.widget.AppBarLayout$BaseBehavior A[IMMUTABLE_TYPE, THIS]), (r7 I:android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/support\/design\/widget\/CoordinatorLayout;, TT;, Landroid\/view\/View;, IIIII)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

