digraph "CFG forandroid.support.design.widget.AppBarLayout.BaseBehavior.onMeasureChild(Landroid\/support\/design\/widget\/CoordinatorLayout;Landroid\/support\/design\/widget\/AppBarLayout;IIII)Z" {
subgraph cluster_Region_1373378085 {
label = "R(1:(2:(1:5)|(2:2|3)))";
node [shape=record,color=blue];
subgraph cluster_Region_93141113 {
label = "R(2:(1:5)|(2:2|3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1569578380 {
label = "IF [B:1:0x0009] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0009|if (((android.support.design.widget.CoordinatorLayout.LayoutParams) r8.getLayoutParams()).height != \-2) goto L_0x001a\l}"];
subgraph cluster_Region_548277152 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001e|RETURN\l|return super.onMeasureChild(r7, r8, r9, r10, r11, r12)\l}"];
}
}
subgraph cluster_Region_292703406 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000b|r7.onMeasureChild(r8, r9, r10, android.view.View.MeasureSpec.makeMeasureSpec(0, 0), r12)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|RETURN\l|return true\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x001a}"];
MethodNode[shape=record,label="{public boolean android.support.design.widget.AppBarLayout.BaseBehavior.onMeasureChild((r6v0 'this' android.support.design.widget.AppBarLayout$BaseBehavior A[IMMUTABLE_TYPE, THIS]), (r7v0 android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/support\/design\/widget\/CoordinatorLayout;, TT;IIII)Z]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_0 -> Node_1;
Node_4 -> Node_5;
}

