digraph "CFG forandroid.support.design.widget.AppBarLayout.BaseBehavior.onNestedScroll(Landroid\/support\/design\/widget\/CoordinatorLayout;Landroid\/support\/design\/widget\/AppBarLayout;Landroid\/view\/View;IIIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r13 \>= 0) goto L_0x0012\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|r0 = r6\lr1 = r7\lr2 = r8\lr3 = r13\lscroll(r1, r2, r3, \-r8.getDownNestedScrollRange(), 0)\lstopNestedScrollIfNeeded(r13, r8, r9, r14)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0012}"];
Node_3 [shape=record,label="{3\:\ 0x0016|if (r8.isLiftOnScroll() == false) goto L_?\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018}"];
Node_5 [shape=record,label="{5\:\ 0x001c|if (r9.getScrollY() \<= 0) goto L_0x0020\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|r7 = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|r7 = false\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|PHI: r7 \l  PHI: (r7v3 boolean) = (r7v4 boolean), (r7v5 boolean) binds: [B:7:0x0020, B:6:0x001e] A[DONT_GENERATE, DONT_INLINE]\l|r8.setLiftedState(r7)\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.AppBarLayout.BaseBehavior.onNestedScroll((r6v0 'this' android.support.design.widget.AppBarLayout$BaseBehavior A[IMMUTABLE_TYPE, THIS]), (r7v0 android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/support\/design\/widget\/CoordinatorLayout;, TT;, Landroid\/view\/View;, IIIII)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

