digraph "CFG forandroid.support.design.widget.AppBarLayout.BaseBehavior.onLayoutChild(Landroid\/support\/design\/widget\/CoordinatorLayout;Landroid\/support\/design\/widget\/AppBarLayout;I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r10 I:boolean) = \l  (r7 I:android.support.design.widget.HeaderBehavior)\l  (r8 I:android.support.design.widget.CoordinatorLayout)\l  (r9 I:android.view.View)\l  (r10 I:int)\l android.support.design.widget.HeaderBehavior.onLayoutChild(android.support.design.widget.CoordinatorLayout, android.view.View, int):boolean type: SUPER \l0x0004: INVOKE  (r0 I:int) = (r9 I:android.support.design.widget.AppBarLayout) android.support.design.widget.AppBarLayout.getPendingAction():int type: VIRTUAL \l0x0008: IGET  (r1 I:int) = \l  (r7 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l android.support.design.widget.AppBarLayout.BaseBehavior.offsetToChildIndexOnLayout int \l0x000a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r1 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:9:0x003d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (8 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IGET  (r0 I:int) = \l  (r7 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l android.support.design.widget.AppBarLayout.BaseBehavior.offsetToChildIndexOnLayout int \l0x0013: INVOKE  (r0 I:android.view.View) = \l  (r9 I:android.support.design.widget.AppBarLayout)\l  (r0 I:int)\l android.support.design.widget.AppBarLayout.getChildAt(int):android.view.View type: VIRTUAL \l0x0017: INVOKE  (r1 I:int) = (r0 I:android.view.View) android.view.View.getBottom():int type: VIRTUAL \l0x001b: NEG  (r1 I:int) = (r1 I:int) \l0x001c: IGET  (r3 I:boolean) = \l  (r7 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l android.support.design.widget.AppBarLayout.BaseBehavior.offsetToChildIndexOnLayoutIsMinHeight boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002b \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: INVOKE  (r0 I:int) = (r0 I:android.view.View) android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):int type: STATIC \l0x0024: INVOKE  (r3 I:int) = (r9 I:android.support.design.widget.AppBarLayout) android.support.design.widget.AppBarLayout.getTopInset():int type: VIRTUAL \l0x0028: ARITH  (r0 I:int) = (r0 I:int) + (r3 I:int) \l0x0029: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: INVOKE  (r0 I:int) = (r0 I:android.view.View) android.view.View.getHeight():int type: VIRTUAL \l0x002f: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0030: IGET  (r3 I:float) = \l  (r7 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l android.support.design.widget.AppBarLayout.BaseBehavior.offsetToChildIndexOnLayoutPerc float \l0x0032: ARITH  (r0 I:float) = (r0 I:float) * (r3 I:float) \l0x0034: INVOKE  (r0 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0038: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: INVOKE  \l  (r7 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l  (r8 I:android.support.design.widget.CoordinatorLayout)\l  (r9 I:android.view.View)\l  (r1 I:int)\l android.support.design.widget.AppBarLayout.BaseBehavior.setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout, android.view.View, int):int type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|0x003d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0067 \l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|0x003f: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (4 ?[int, float, short, byte, char]) \l0x0041: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|0x0042: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0046 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0044|0x0044: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|0x0046: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0047|0x0047: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (2 ?[int, float, short, byte, char]) \l0x0049: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|0x004a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x005b \l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|0x004c: INVOKE  (r0 I:int) = (r9 I:android.support.design.widget.AppBarLayout) android.support.design.widget.AppBarLayout.getUpNestedPreScrollRange():int type: VIRTUAL \l0x0050: NEG  (r0 I:int) = (r0 I:int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0051|0x0051: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0057 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|0x0053: INVOKE  \l  (r7 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l  (r8 I:android.support.design.widget.CoordinatorLayout)\l  (r9 I:android.support.design.widget.AppBarLayout)\l  (r0 I:int)\l  (r5 I:float)\l android.support.design.widget.AppBarLayout.BaseBehavior.animateOffsetTo(android.support.design.widget.CoordinatorLayout, android.support.design.widget.AppBarLayout, int, float):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0057|0x0057: INVOKE  \l  (r7 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l  (r8 I:android.support.design.widget.CoordinatorLayout)\l  (r9 I:android.view.View)\l  (r0 I:int)\l android.support.design.widget.AppBarLayout.BaseBehavior.setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout, android.view.View, int):int type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x005b|0x005b: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (r3 I:?[int, boolean, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x005c|0x005c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0067 \l}"];
Node_22 [shape=record,label="{22\:\ 0x005e|0x005e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0064 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0060|0x0060: INVOKE  \l  (r7 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l  (r8 I:android.support.design.widget.CoordinatorLayout)\l  (r9 I:android.support.design.widget.AppBarLayout)\l  (r2 I:int)\l  (r5 I:float)\l android.support.design.widget.AppBarLayout.BaseBehavior.animateOffsetTo(android.support.design.widget.CoordinatorLayout, android.support.design.widget.AppBarLayout, int, float):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x0064|0x0064: INVOKE  \l  (r7 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l  (r8 I:android.support.design.widget.CoordinatorLayout)\l  (r9 I:android.view.View)\l  (r2 I:int)\l android.support.design.widget.AppBarLayout.BaseBehavior.setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout, android.view.View, int):int type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x0067|0x0067: INVOKE  (r9 I:android.support.design.widget.AppBarLayout) android.support.design.widget.AppBarLayout.resetPendingAction():void type: VIRTUAL \l0x006a: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x006b: IPUT  \l  (r0 I:int)\l  (r7 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l android.support.design.widget.AppBarLayout.BaseBehavior.offsetToChildIndexOnLayout int \l0x006d: INVOKE  (r0 I:int) = \l  (r7 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l android.support.design.widget.AppBarLayout.BaseBehavior.getTopAndBottomOffset():int type: VIRTUAL \l0x0071: INVOKE  (r1 I:int) = (r9 I:android.support.design.widget.AppBarLayout) android.support.design.widget.AppBarLayout.getTotalScrollRange():int type: VIRTUAL \l0x0075: NEG  (r1 I:int) = (r1 I:int) \l0x0076: INVOKE  (r0 I:int) = (r0 I:int), (r1 I:int), (r2 I:int) android.support.v4.math.MathUtils.clamp(int, int, int):int type: STATIC \l0x007a: INVOKE  \l  (r7 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l  (r0 I:int)\l android.support.design.widget.AppBarLayout.BaseBehavior.setTopAndBottomOffset(int):boolean type: VIRTUAL \l0x007d: INVOKE  (r4 I:int) = \l  (r7 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l android.support.design.widget.AppBarLayout.BaseBehavior.getTopAndBottomOffset():int type: VIRTUAL \l0x0081: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0082: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0083: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0084: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0085: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0086: INVOKE  \l  (r1 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l  (r2 I:android.support.design.widget.CoordinatorLayout)\l  (r3 I:android.support.design.widget.AppBarLayout)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:boolean)\l android.support.design.widget.AppBarLayout.BaseBehavior.updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout, android.support.design.widget.AppBarLayout, int, int, boolean):void type: DIRECT \l0x0089: INVOKE  (r8 I:int) = \l  (r7 I:android.support.design.widget.AppBarLayout$BaseBehavior)\l android.support.design.widget.AppBarLayout.BaseBehavior.getTopAndBottomOffset():int type: VIRTUAL \l0x008d: INVOKE  \l  (r9 I:android.support.design.widget.AppBarLayout)\l  (r8 I:int)\l android.support.design.widget.AppBarLayout.dispatchOffsetUpdates(int):void type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0090|0x0090: RETURN  (r10 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.design.widget.AppBarLayout.BaseBehavior.onLayoutChild((r7 'this' I:android.support.design.widget.AppBarLayout$BaseBehavior A[IMMUTABLE_TYPE, THIS]), (r8 I:android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/support\/design\/widget\/CoordinatorLayout;, TT;I)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_25;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_25;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_25;
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
}

