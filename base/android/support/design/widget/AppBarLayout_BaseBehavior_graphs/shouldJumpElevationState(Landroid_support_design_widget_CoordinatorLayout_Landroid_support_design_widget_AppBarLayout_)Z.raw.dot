digraph "CFG forandroid.support.design.widget.AppBarLayout.BaseBehavior.shouldJumpElevationState(Landroid\/support\/design\/widget\/CoordinatorLayout;Landroid\/support\/design\/widget\/AppBarLayout;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r5 I:java.util.List) = \l  (r5 I:android.support.design.widget.CoordinatorLayout)\l  (r6 I:android.view.View)\l android.support.design.widget.CoordinatorLayout.getDependents(android.view.View):java.util.List type: VIRTUAL \l0x0004: INVOKE  (r6 I:int) = (r5 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0008: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r1 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:9:0x002d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r2 I:java.lang.Object) = (r5 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0010: CHECK_CAST  (r2 I:android.view.View) = (android.view.View) (r2 I:?[OBJECT, ARRAY]) \l0x0012: INVOKE  (r2 I:android.view.ViewGroup$LayoutParams) = (r2 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0016: CHECK_CAST  (r2 I:android.support.design.widget.CoordinatorLayout$LayoutParams) = (android.support.design.widget.CoordinatorLayout$LayoutParams) (r2 I:?[OBJECT, ARRAY]) \l0x0018: INVOKE  (r2 I:android.support.design.widget.CoordinatorLayout$Behavior) = \l  (r2 I:android.support.design.widget.CoordinatorLayout$LayoutParams)\l android.support.design.widget.CoordinatorLayout.LayoutParams.getBehavior():android.support.design.widget.CoordinatorLayout$Behavior type: VIRTUAL \l0x001c: INSTANCE_OF  (r3 I:boolean) = (r2 I:?[OBJECT, ARRAY]) android.support.design.widget.AppBarLayout$ScrollingViewBehavior \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: CHECK_CAST  (r2 I:android.support.design.widget.AppBarLayout$ScrollingViewBehavior) = (android.support.design.widget.AppBarLayout$ScrollingViewBehavior) (r2 I:?[OBJECT, ARRAY]) \l0x0022: INVOKE  (r5 I:int) = \l  (r2 I:android.support.design.widget.AppBarLayout$ScrollingViewBehavior)\l android.support.design.widget.AppBarLayout.ScrollingViewBehavior.getOverlayTop():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0029 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: RETURN  (r0 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean android.support.design.widget.AppBarLayout.BaseBehavior.shouldJumpElevationState((r4 'this' I:android.support.design.widget.AppBarLayout$BaseBehavior A[IMMUTABLE_TYPE, THIS]), (r5 I:android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/support\/design\/widget\/CoordinatorLayout;, TT;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_8 -> Node_1;
}

