digraph "CFG forandroid.support.design.widget.BaseTransientBottomBar.SnackbarBaseLayout.\<init\>(Landroid\/content\/Context;Landroid\/util\/AttributeSet;)V" {
subgraph cluster_Region_1611613421 {
label = "R(3:0|(1:2)|3)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super(r3, r4)\landroid.content.res.TypedArray android.content.res.TypedArray r4 = r3.obtainStyledAttributes(r4, android.support.design.C0059R.styleable.SnackbarLayout)\l}"];
subgraph cluster_IfRegion_202714398 {
label = "IF [B:1:0x000f] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000f|if (r4.hasValue(android.support.design.C0059R.styleable.SnackbarLayout_elevation) == true) goto L_0x0011\l}"];
subgraph cluster_Region_728920273 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0011|android.support.p000v4.view.ViewCompat.setElevation(r2, (float) r4.getDimensionPixelSize(android.support.design.C0059R.styleable.SnackbarLayout_elevation, 0))\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x001c|r4.recycle()\lr2.accessibilityManager = (android.view.accessibility.AccessibilityManager) r3.getSystemService(\"accessibility\")\lr2.touchExplorationStateChangeListener = new android.support.design.widget.BaseTransientBottomBar.SnackbarBaseLayout.C01111()\landroid.support.p000v4.view.accessibility.AccessibilityManagerCompat.addTouchExplorationStateChangeListener(r2.accessibilityManager, r2.touchExplorationStateChangeListener)\lsetClickableOrFocusableBasedOnAccessibility(r2.accessibilityManager.isTouchExplorationEnabled())\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0040}"];
MethodNode[shape=record,label="{protected void android.support.design.widget.BaseTransientBottomBar.SnackbarBaseLayout.\<init\>((r2v0 'this' android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout A[IMMUTABLE_TYPE, THIS]), (r3v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
}

