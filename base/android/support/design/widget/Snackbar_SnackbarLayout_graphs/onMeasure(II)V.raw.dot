digraph "CFG forandroid.support.design.widget.Snackbar.SnackbarLayout.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r5 I:android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout)\l  (r6 I:int)\l  (r7 I:int)\l android.support.design.widget.BaseTransientBottomBar.SnackbarBaseLayout.onMeasure(int, int):void type: SUPER \l0x0003: INVOKE  (r6 I:int) = \l  (r5 I:android.support.design.widget.Snackbar$SnackbarLayout)\l android.support.design.widget.Snackbar.SnackbarLayout.getChildCount():int type: VIRTUAL \l0x0007: INVOKE  (r7 I:int) = \l  (r5 I:android.support.design.widget.Snackbar$SnackbarLayout)\l android.support.design.widget.Snackbar.SnackbarLayout.getMeasuredWidth():int type: VIRTUAL \l0x000b: INVOKE  (r0 I:int) = \l  (r5 I:android.support.design.widget.Snackbar$SnackbarLayout)\l android.support.design.widget.Snackbar.SnackbarLayout.getPaddingLeft():int type: VIRTUAL \l0x000f: ARITH  (r7 I:int) = (r7 I:int) \- (r0 I:int) \l0x0010: INVOKE  (r0 I:int) = \l  (r5 I:android.support.design.widget.Snackbar$SnackbarLayout)\l android.support.design.widget.Snackbar.SnackbarLayout.getPaddingRight():int type: VIRTUAL \l0x0014: ARITH  (r7 I:int) = (r7 I:int) \- (r0 I:int) \l0x0015: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|0x0016: IF  (r0 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:6:0x0039 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|0x0018: INVOKE  (r1 I:android.view.View) = \l  (r5 I:android.support.design.widget.Snackbar$SnackbarLayout)\l  (r0 I:int)\l android.support.design.widget.Snackbar.SnackbarLayout.getChildAt(int):android.view.View type: VIRTUAL \l0x001c: INVOKE  (r2 I:android.view.ViewGroup$LayoutParams) = (r1 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0020: IGET  (r2 I:int) = (r2 I:android.view.ViewGroup$LayoutParams) android.view.ViewGroup.LayoutParams.width int \l0x0022: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|0x0023: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0036 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x0027: INVOKE  (r3 I:int) = (r7 I:int), (r2 I:int) android.view.View.MeasureSpec.makeMeasureSpec(int, int):int type: STATIC \l0x002b: INVOKE  (r4 I:int) = (r1 I:android.view.View) android.view.View.getMeasuredHeight():int type: VIRTUAL \l0x002f: INVOKE  (r2 I:int) = (r4 I:int), (r2 I:int) android.view.View.MeasureSpec.makeMeasureSpec(int, int):int type: STATIC \l0x0033: INVOKE  (r1 I:android.view.View), (r3 I:int), (r2 I:int) android.view.View.measure(int, int):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0036|0x0036: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0039|0x0039: RETURN   \l}"];
MethodNode[shape=record,label="{protected void android.support.design.widget.Snackbar.SnackbarLayout.onMeasure((r5 'this' I:android.support.design.widget.Snackbar$SnackbarLayout A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_1;
}

