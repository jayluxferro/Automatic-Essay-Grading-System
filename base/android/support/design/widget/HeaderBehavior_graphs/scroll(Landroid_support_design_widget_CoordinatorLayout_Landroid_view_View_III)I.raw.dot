digraph "CFG forandroid.support.design.widget.HeaderBehavior.scroll(Landroid\/support\/design\/widget\/CoordinatorLayout;Landroid\/view\/View;III)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r7 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.getTopBottomOffsetForScrollingSibling():int type: VIRTUAL \l0x0004: ARITH  (r4 I:int) = (r0 I:int) \- (r10 I:int) \l0x0006: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0007: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0008: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0009: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: INVOKE  (r8 I:int) = \l  (r1 I:android.support.design.widget.HeaderBehavior)\l  (r2 I:android.support.design.widget.CoordinatorLayout)\l  (r3 I:android.view.View)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l android.support.design.widget.HeaderBehavior.setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout, android.view.View, int, int, int):int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN  (r8 I:int) \l}"];
MethodNode[shape=record,label="{final int android.support.design.widget.HeaderBehavior.scroll((r7 'this' I:android.support.design.widget.HeaderBehavior A[IMMUTABLE_TYPE, THIS]), (r8 I:android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:V A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/support\/design\/widget\/CoordinatorLayout;, TV;III)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

