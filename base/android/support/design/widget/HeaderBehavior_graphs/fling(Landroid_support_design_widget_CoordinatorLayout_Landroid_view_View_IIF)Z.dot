digraph "CFG forandroid.support.design.widget.HeaderBehavior.fling(Landroid\/support\/design\/widget\/CoordinatorLayout;Landroid\/view\/View;IIF)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r13\lr1 = r15\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0.flingRunnable == null) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|r15.removeCallbacks(r0.flingRunnable)\lr0.flingRunnable = null\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e}"];
Node_4 [shape=record,label="{4\:\ 0x0010|if (r0.scroller != null) goto L_0x001d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|r0.scroller = new android.widget.OverScroller(r15.getContext())\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|r0.scroller.fling(0, getTopAndBottomOffset(), 0, java.lang.Math.round(r18), 0, 0, r16, r17)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0038|if (r0.scroller.computeScrollOffset() == false) goto L_0x0049\l}"];
Node_8 [shape=record,label="{8\:\ 0x003a|r3 = r14\lr0.flingRunnable = new android.support.design.widget.HeaderBehavior.FlingRunnable(r13, r14, r15)\landroid.support.p000v4.view.ViewCompat.postOnAnimation(r15, r0.flingRunnable)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0048|RETURN\l|return true\l}"];
Node_10 [shape=record,label="{10\:\ 0x0049|r3 = r14\lonFlingFinished(r14, r15)\l}"];
Node_11 [shape=record,label="{11\:\ 0x004e|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{final boolean android.support.design.widget.HeaderBehavior.fling((r13v0 'this' android.support.design.widget.HeaderBehavior A[IMMUTABLE_TYPE, THIS]), (r14v0 android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 V A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/support\/design\/widget\/CoordinatorLayout;, TV;IIF)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

