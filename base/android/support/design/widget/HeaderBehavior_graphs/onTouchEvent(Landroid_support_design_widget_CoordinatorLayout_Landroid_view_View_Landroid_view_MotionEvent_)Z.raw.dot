digraph "CFG forandroid.support.design.widget.HeaderBehavior.onTouchEvent(Landroid\/support\/design\/widget\/CoordinatorLayout;Landroid\/view\/View;Landroid\/view\/MotionEvent;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.touchSlop int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:android.content.Context) = (r12 I:android.support.design.widget.CoordinatorLayout) android.support.design.widget.CoordinatorLayout.getContext():android.content.Context type: VIRTUAL \l0x0008: INVOKE  (r0 I:android.view.ViewConfiguration) = (r0 I:android.content.Context) android.view.ViewConfiguration.get(android.content.Context):android.view.ViewConfiguration type: STATIC \l0x000c: INVOKE  (r0 I:int) = (r0 I:android.view.ViewConfiguration) android.view.ViewConfiguration.getScaledTouchSlop():int type: VIRTUAL \l0x0010: IPUT  \l  (r0 I:int)\l  (r11 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.touchSlop int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: INVOKE  (r0 I:int) = (r14 I:android.view.MotionEvent) android.view.MotionEvent.getActionMasked():int type: VIRTUAL \l0x0016: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0017: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0018: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3] t:[0x008e, 0x0059, 0x001e, 0x007d] \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IGET  (r0 I:int) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.activePointerId int \l0x0020: INVOKE  (r0 I:int) = (r14 I:android.view.MotionEvent), (r0 I:int) android.view.MotionEvent.findPointerIndex(int):int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0027 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: RETURN  (r3 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: INVOKE  (r0 I:float) = (r14 I:android.view.MotionEvent), (r0 I:int) android.view.MotionEvent.getY(int):float type: VIRTUAL \l0x002b: CAST  (r0 I:int) = (int) (r0 I:float) \l0x002c: IGET  (r2 I:int) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.lastMotionY int \l0x002e: ARITH  (r2 I:int) = (r2 I:int) \- (r0 I:int) \l0x002f: IGET  (r3 I:boolean) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.isBeingDragged boolean \l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0046 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: INVOKE  (r3 I:int) = (r2 I:int) java.lang.Math.abs(int):int type: STATIC \l0x0037: IGET  (r4 I:int) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.touchSlop int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|0x0039: IF  (r3 I:?[int, byte, short, char]) \<= (r4 I:?[int, byte, short, char])  \-\> B:17:0x0046 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|0x003b: IPUT  \l  (r1 I:boolean)\l  (r11 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.isBeingDragged boolean \l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|0x003d: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:16:0x0043 \l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|0x003f: IGET  (r3 I:int) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.touchSlop int \l0x0041: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0043|0x0043: IGET  (r3 I:int) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.touchSlop int \l0x0045: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0046|0x0046: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0047: IGET  (r2 I:boolean) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.isBeingDragged boolean \l}"];
Node_18 [shape=record,label="{18\:\ 0x0049|0x0049: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x00b1 \l}"];
Node_19 [shape=record,label="{19\:\ 0x004b|0x004b: IPUT  \l  (r0 I:int)\l  (r11 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.lastMotionY int \l0x004d: INVOKE  (r7 I:int) = \l  (r11 I:android.support.design.widget.HeaderBehavior)\l  (r13 I:android.view.View)\l android.support.design.widget.HeaderBehavior.getMaxDragOffset(android.view.View):int type: VIRTUAL \l0x0051: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0052: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0053: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0054: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0055: INVOKE  \l  (r3 I:android.support.design.widget.HeaderBehavior)\l  (r4 I:android.support.design.widget.CoordinatorLayout)\l  (r5 I:android.view.View)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l android.support.design.widget.HeaderBehavior.scroll(android.support.design.widget.CoordinatorLayout, android.view.View, int, int, int):int type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0059|0x0059: IGET  (r0 I:android.view.VelocityTracker) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.velocityTracker android.view.VelocityTracker \l}"];
Node_21 [shape=record,label="{21\:\ 0x005b|0x005b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x007d \l}"];
Node_22 [shape=record,label="{22\:\ 0x005d|0x005d: IGET  (r0 I:android.view.VelocityTracker) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.velocityTracker android.view.VelocityTracker \l0x005f: INVOKE  \l  (r0 I:android.view.VelocityTracker)\l  (r14 I:android.view.MotionEvent)\l android.view.VelocityTracker.addMovement(android.view.MotionEvent):void type: VIRTUAL \l0x0062: IGET  (r0 I:android.view.VelocityTracker) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.velocityTracker android.view.VelocityTracker \l0x0064: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (1000(0x3e8, float:1.401E\-42) ?[int, float, short, byte, char])\l \l0x0066: INVOKE  (r0 I:android.view.VelocityTracker), (r4 I:int) android.view.VelocityTracker.computeCurrentVelocity(int):void type: VIRTUAL \l0x0069: IGET  (r0 I:android.view.VelocityTracker) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.velocityTracker android.view.VelocityTracker \l0x006b: IGET  (r4 I:int) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.activePointerId int \l0x006d: INVOKE  (r10 I:float) = (r0 I:android.view.VelocityTracker), (r4 I:int) android.view.VelocityTracker.getYVelocity(int):float type: VIRTUAL \l0x0071: INVOKE  (r0 I:int) = \l  (r11 I:android.support.design.widget.HeaderBehavior)\l  (r13 I:android.view.View)\l android.support.design.widget.HeaderBehavior.getScrollRangeForDragFling(android.view.View):int type: VIRTUAL \l0x0075: NEG  (r8 I:int) = (r0 I:int) \l0x0076: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0077: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0078: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0079: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x007a: INVOKE  \l  (r5 I:android.support.design.widget.HeaderBehavior)\l  (r6 I:android.support.design.widget.CoordinatorLayout)\l  (r7 I:android.view.View)\l  (r8 I:int)\l  (r9 I:int)\l  (r10 I:float)\l android.support.design.widget.HeaderBehavior.fling(android.support.design.widget.CoordinatorLayout, android.view.View, int, int, float):boolean type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x007d|0x007d: IPUT  \l  (r3 I:boolean)\l  (r11 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.isBeingDragged boolean \l0x007f: IPUT  \l  (r2 I:int)\l  (r11 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.activePointerId int \l0x0081: IGET  (r12 I:android.view.VelocityTracker) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.velocityTracker android.view.VelocityTracker \l}"];
Node_24 [shape=record,label="{24\:\ 0x0083|0x0083: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x00b1 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0085|0x0085: IGET  (r12 I:android.view.VelocityTracker) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.velocityTracker android.view.VelocityTracker \l0x0087: INVOKE  (r12 I:android.view.VelocityTracker) android.view.VelocityTracker.recycle():void type: VIRTUAL \l0x008a: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x008b: IPUT  \l  (r12 I:android.view.VelocityTracker)\l  (r11 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.velocityTracker android.view.VelocityTracker \l}"];
Node_26 [shape=record,label="{26\:\ 0x008e|0x008e: INVOKE  (r0 I:float) = (r14 I:android.view.MotionEvent) android.view.MotionEvent.getX():float type: VIRTUAL \l0x0092: CAST  (r0 I:int) = (int) (r0 I:float) \l0x0093: INVOKE  (r2 I:float) = (r14 I:android.view.MotionEvent) android.view.MotionEvent.getY():float type: VIRTUAL \l0x0097: CAST  (r2 I:int) = (int) (r2 I:float) \l0x0098: INVOKE  (r12 I:boolean) = \l  (r12 I:android.support.design.widget.CoordinatorLayout)\l  (r13 I:android.view.View)\l  (r0 I:int)\l  (r2 I:int)\l android.support.design.widget.CoordinatorLayout.isPointInChildBounds(android.view.View, int, int):boolean type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x009c|0x009c: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00b0 \l}"];
Node_28 [shape=record,label="{28\:\ 0x009e|0x009e: INVOKE  (r12 I:boolean) = \l  (r11 I:android.support.design.widget.HeaderBehavior)\l  (r13 I:android.view.View)\l android.support.design.widget.HeaderBehavior.canDragView(android.view.View):boolean type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x00a2|0x00a2: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00b0 \l}"];
Node_30 [shape=record,label="{30\:\ 0x00a4|0x00a4: IPUT  \l  (r2 I:int)\l  (r11 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.lastMotionY int \l0x00a6: INVOKE  (r12 I:int) = (r14 I:android.view.MotionEvent), (r3 I:int) android.view.MotionEvent.getPointerId(int):int type: VIRTUAL \l0x00aa: IPUT  \l  (r12 I:int)\l  (r11 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.activePointerId int \l0x00ac: INVOKE  (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.ensureVelocityTracker():void type: DIRECT \l}"];
Node_31 [shape=record,label="{31\:\ 0x00b0|0x00b0: RETURN  (r3 I:boolean) \l}"];
Node_32 [shape=record,label="{32\:\ 0x00b1|0x00b1: IGET  (r12 I:android.view.VelocityTracker) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.velocityTracker android.view.VelocityTracker \l}"];
Node_33 [shape=record,label="{33\:\ 0x00b3|0x00b3: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x00ba \l}"];
Node_34 [shape=record,label="{34\:\ 0x00b5|0x00b5: IGET  (r12 I:android.view.VelocityTracker) = (r11 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.velocityTracker android.view.VelocityTracker \l0x00b7: INVOKE  \l  (r12 I:android.view.VelocityTracker)\l  (r14 I:android.view.MotionEvent)\l android.view.VelocityTracker.addMovement(android.view.MotionEvent):void type: VIRTUAL \l}"];
Node_35 [shape=record,label="{35\:\ 0x00ba|0x00ba: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.design.widget.HeaderBehavior.onTouchEvent((r11 'this' I:android.support.design.widget.HeaderBehavior A[IMMUTABLE_TYPE, THIS]), (r12 I:android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:V A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/support\/design\/widget\/CoordinatorLayout;, TV;, Landroid\/view\/MotionEvent;, )Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_20;
Node_4 -> Node_23;
Node_4 -> Node_26;
Node_4 -> Node_32;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_32;
Node_19 -> Node_32;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_32;
Node_25 -> Node_32;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
}

