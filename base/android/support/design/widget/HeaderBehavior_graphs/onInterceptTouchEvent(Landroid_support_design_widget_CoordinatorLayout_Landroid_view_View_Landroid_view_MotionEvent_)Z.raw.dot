digraph "CFG forandroid.support.design.widget.HeaderBehavior.onInterceptTouchEvent(Landroid\/support\/design\/widget\/CoordinatorLayout;Landroid\/view\/View;Landroid\/view\/MotionEvent;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r4 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.touchSlop int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:android.content.Context) = (r5 I:android.support.design.widget.CoordinatorLayout) android.support.design.widget.CoordinatorLayout.getContext():android.content.Context type: VIRTUAL \l0x0008: INVOKE  (r0 I:android.view.ViewConfiguration) = (r0 I:android.content.Context) android.view.ViewConfiguration.get(android.content.Context):android.view.ViewConfiguration type: STATIC \l0x000c: INVOKE  (r0 I:int) = (r0 I:android.view.ViewConfiguration) android.view.ViewConfiguration.getScaledTouchSlop():int type: VIRTUAL \l0x0010: IPUT  \l  (r0 I:int)\l  (r4 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.touchSlop int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: INVOKE  (r0 I:int) = (r7 I:android.view.MotionEvent) android.view.MotionEvent.getAction():int type: VIRTUAL \l0x0016: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0017: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IGET  (r0 I:boolean) = (r4 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.isBeingDragged boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: RETURN  (r2 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: INVOKE  (r0 I:int) = (r7 I:android.view.MotionEvent) android.view.MotionEvent.getActionMasked():int type: VIRTUAL \l0x0023: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0024: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3] t:[0x005c, 0x004b, 0x0029, 0x004b] \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: IGET  (r5 I:int) = (r4 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.activePointerId int \l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|0x002b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002e \l}"];
Node_14 [shape=record,label="{14\:\ 0x002e|0x002e: INVOKE  (r5 I:int) = (r7 I:android.view.MotionEvent), (r5 I:int) android.view.MotionEvent.findPointerIndex(int):int type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0032|0x0032: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0035 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0035|0x0035: INVOKE  (r5 I:float) = (r7 I:android.view.MotionEvent), (r5 I:int) android.view.MotionEvent.getY(int):float type: VIRTUAL \l0x0039: CAST  (r5 I:int) = (int) (r5 I:float) \l0x003a: IGET  (r6 I:int) = (r4 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.lastMotionY int \l0x003c: ARITH  (r6 I:int) = (r5 I:int) \- (r6 I:int) \l0x003e: INVOKE  (r6 I:int) = (r6 I:int) java.lang.Math.abs(int):int type: STATIC \l0x0042: IGET  (r0 I:int) = (r4 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.touchSlop int \l}"];
Node_18 [shape=record,label="{18\:\ 0x0044|0x0044: IF  (r6 I:?[int, byte, short, char]) \<= (r0 I:?[int, byte, short, char])  \-\> B:28:0x007f \l}"];
Node_19 [shape=record,label="{19\:\ 0x0046|0x0046: IPUT  \l  (r2 I:boolean)\l  (r4 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.isBeingDragged boolean \l0x0048: IPUT  \l  (r5 I:int)\l  (r4 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.lastMotionY int \l}"];
Node_20 [shape=record,label="{20\:\ 0x004b|0x004b: IPUT  \l  (r3 I:boolean)\l  (r4 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.isBeingDragged boolean \l0x004d: IPUT  \l  (r1 I:int)\l  (r4 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.activePointerId int \l0x004f: IGET  (r5 I:android.view.VelocityTracker) = (r4 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.velocityTracker android.view.VelocityTracker \l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|0x0051: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x007f \l}"];
Node_22 [shape=record,label="{22\:\ 0x0053|0x0053: IGET  (r5 I:android.view.VelocityTracker) = (r4 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.velocityTracker android.view.VelocityTracker \l0x0055: INVOKE  (r5 I:android.view.VelocityTracker) android.view.VelocityTracker.recycle():void type: VIRTUAL \l0x0058: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0059: IPUT  \l  (r5 I:android.view.VelocityTracker)\l  (r4 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.velocityTracker android.view.VelocityTracker \l}"];
Node_23 [shape=record,label="{23\:\ 0x005c|0x005c: IPUT  \l  (r3 I:boolean)\l  (r4 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.isBeingDragged boolean \l0x005e: INVOKE  (r0 I:float) = (r7 I:android.view.MotionEvent) android.view.MotionEvent.getX():float type: VIRTUAL \l0x0062: CAST  (r0 I:int) = (int) (r0 I:float) \l0x0063: INVOKE  (r1 I:float) = (r7 I:android.view.MotionEvent) android.view.MotionEvent.getY():float type: VIRTUAL \l0x0067: CAST  (r1 I:int) = (int) (r1 I:float) \l0x0068: INVOKE  (r2 I:boolean) = \l  (r4 I:android.support.design.widget.HeaderBehavior)\l  (r6 I:android.view.View)\l android.support.design.widget.HeaderBehavior.canDragView(android.view.View):boolean type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x006c|0x006c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x007f \l}"];
Node_25 [shape=record,label="{25\:\ 0x006e|0x006e: INVOKE  (r5 I:boolean) = \l  (r5 I:android.support.design.widget.CoordinatorLayout)\l  (r6 I:android.view.View)\l  (r0 I:int)\l  (r1 I:int)\l android.support.design.widget.CoordinatorLayout.isPointInChildBounds(android.view.View, int, int):boolean type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0072|0x0072: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x007f \l}"];
Node_27 [shape=record,label="{27\:\ 0x0074|0x0074: IPUT  \l  (r1 I:int)\l  (r4 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.lastMotionY int \l0x0076: INVOKE  (r5 I:int) = (r7 I:android.view.MotionEvent), (r3 I:int) android.view.MotionEvent.getPointerId(int):int type: VIRTUAL \l0x007a: IPUT  \l  (r5 I:int)\l  (r4 I:android.support.design.widget.HeaderBehavior)\l android.support.design.widget.HeaderBehavior.activePointerId int \l0x007c: INVOKE  (r4 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.ensureVelocityTracker():void type: DIRECT \l}"];
Node_28 [shape=record,label="{28\:\ 0x007f|0x007f: IGET  (r5 I:android.view.VelocityTracker) = (r4 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.velocityTracker android.view.VelocityTracker \l}"];
Node_29 [shape=record,label="{29\:\ 0x0081|0x0081: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0088 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0083|0x0083: IGET  (r5 I:android.view.VelocityTracker) = (r4 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.velocityTracker android.view.VelocityTracker \l0x0085: INVOKE  \l  (r5 I:android.view.VelocityTracker)\l  (r7 I:android.view.MotionEvent)\l android.view.VelocityTracker.addMovement(android.view.MotionEvent):void type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x0088|0x0088: IGET  (r5 I:boolean) = (r4 I:android.support.design.widget.HeaderBehavior) android.support.design.widget.HeaderBehavior.isBeingDragged boolean \l}"];
Node_32 [shape=record,label="{32\:\ 0x008a|0x008a: RETURN  (r5 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.design.widget.HeaderBehavior.onInterceptTouchEvent((r4 'this' I:android.support.design.widget.HeaderBehavior A[IMMUTABLE_TYPE, THIS]), (r5 I:android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:V A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/support\/design\/widget\/CoordinatorLayout;, TV;, Landroid\/view\/MotionEvent;, )Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_20;
Node_9 -> Node_23;
Node_9 -> Node_28;
Node_11 -> Node_12;
Node_12 -> Node_14;
Node_12 -> Node_28[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_28[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_28;
Node_19 -> Node_28;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_28;
Node_22 -> Node_28;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
}

