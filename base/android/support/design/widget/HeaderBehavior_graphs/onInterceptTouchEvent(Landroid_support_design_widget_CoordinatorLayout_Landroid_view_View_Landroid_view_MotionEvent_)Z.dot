digraph "CFG forandroid.support.design.widget.HeaderBehavior.onInterceptTouchEvent(Landroid\/support\/design\/widget\/CoordinatorLayout;Landroid\/view\/View;Landroid\/view\/MotionEvent;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4.touchSlop \>= 0) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r4.touchSlop = android.view.ViewConfiguration.get(r5.getContext()).getScaledTouchSlop()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012}"];
Node_4 [shape=record,label="{4\:\ 0x0018|if (r7.getAction() != 2) goto L_0x001f\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a}"];
Node_6 [shape=record,label="{6\:\ 0x001c|if (r4.isBeingDragged == false) goto L_0x001f\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|RETURN\l|return true\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f}"];
Node_9 [shape=record,label="{9\:\ 0x0025|switch(r7.getActionMasked()) \{\l    case 0: goto L_0x005c;\l    case 1: goto L_0x004b;\l    case 2: goto L_0x0029;\l    case 3: goto L_0x004b;\l    default: goto L_0x0028;\l\}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|int r5 = r4.activePointerId\l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|if (r5 != \-1) goto L_0x002e\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|int r5 = r7.findPointerIndex(r5)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|if (r5 != \-1) goto L_0x0035\l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|int r5 = (int) r7.getY(r5)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|if (java.lang.Math.abs(r5 \- r4.lastMotionY) \<= r4.touchSlop) goto L_0x007f\l}"];
Node_16 [shape=record,label="{16\:\ 0x0046|r4.isBeingDragged = true\lr4.lastMotionY = r5\l}"];
Node_17 [shape=record,label="{17\:\ 0x004b|r4.isBeingDragged = false\lr4.activePointerId = \-1\l}"];
Node_18 [shape=record,label="{18\:\ 0x0051|if (r4.velocityTracker == null) goto L_0x007f\l}"];
Node_19 [shape=record,label="{19\:\ 0x0053|r4.velocityTracker.recycle()\lr4.velocityTracker = null\l}"];
Node_20 [shape=record,label="{20\:\ 0x005c|r4.isBeingDragged = false\lint r0 = (int) r7.getX()\lint r1 = (int) r7.getY()\l}"];
Node_21 [shape=record,label="{21\:\ 0x006c|if (canDragView(r6) == false) goto L_0x007f\l}"];
Node_22 [shape=record,label="{22\:\ 0x006e}"];
Node_23 [shape=record,label="{23\:\ 0x0072|if (r5.isPointInChildBounds(r6, r0, r1) == false) goto L_0x007f\l}"];
Node_24 [shape=record,label="{24\:\ 0x0074|r4.lastMotionY = r1\lr4.activePointerId = r7.getPointerId(0)\lensureVelocityTracker()\l}"];
Node_25 [shape=record,label="{25\:\ 0x007f}"];
Node_26 [shape=record,label="{26\:\ 0x0081|if (r4.velocityTracker == null) goto L_0x0088\l}"];
Node_27 [shape=record,label="{27\:\ 0x0083|r4.velocityTracker.addMovement(r7)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0088}"];
Node_29 [shape=record,label="{29\:\ 0x008a|RETURN\l|return r4.isBeingDragged\l}"];
MethodNode[shape=record,label="{public boolean android.support.design.widget.HeaderBehavior.onInterceptTouchEvent((r4v0 'this' android.support.design.widget.HeaderBehavior A[IMMUTABLE_TYPE, THIS]), (r5v0 android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 V A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/support\/design\/widget\/CoordinatorLayout;, TV;, Landroid\/view\/MotionEvent;, )Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_17;
Node_9 -> Node_20;
Node_9 -> Node_25;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_25[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_25[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_25;
Node_16 -> Node_25;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
}

