digraph "CFG forandroid.support.design.widget.FloatingActionButtonImpl.calculateImageMatrixFromScale(FLandroid\/graphics\/Matrix;)V" {
subgraph cluster_Region_81747733 {
label = "R(2:0|(1:(1:4)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r7.reset()\landroid.graphics.drawable.Drawable android.graphics.drawable.Drawable r0 = r5.view.getDrawable()\l}"];
subgraph cluster_Region_1503048089 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1034092500 {
label = "IF [B:1:0x0009, B:3:0x000d] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r0 != null) goto L_0x000b\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|ADDED_TO_REGION\l|if (r5.maxImageSize != 0) goto L_0x000f\l}"];
subgraph cluster_Region_1523253162 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|android.graphics.RectF android.graphics.RectF r1 = r5.tmpRectF1\landroid.graphics.RectF android.graphics.RectF r2 = r5.tmpRectF2\lr1.set(0.0f, 0.0f, (float) r0.getIntrinsicWidth(), (float) r0.getIntrinsicHeight())\lr2.set(0.0f, 0.0f, (float) r5.maxImageSize, (float) r5.maxImageSize)\lr7.setRectToRect(r1, r2, android.graphics.Matrix.ScaleToFit.CENTER)\lr7.postScale(r6, r6, ((float) r5.maxImageSize) \/ 2.0f, ((float) r5.maxImageSize) \/ 2.0f)\l}"];
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000b}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.design.widget.FloatingActionButtonImpl.calculateImageMatrixFromScale((r5v0 'this' android.support.design.widget.FloatingActionButtonImpl A[IMMUTABLE_TYPE, THIS]), (r6v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 android.graphics.Matrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_5;
Node_2 -> Node_3;
}

