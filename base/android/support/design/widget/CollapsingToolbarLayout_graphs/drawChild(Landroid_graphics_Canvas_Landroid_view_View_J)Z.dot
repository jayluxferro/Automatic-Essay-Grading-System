digraph "CFG forandroid.support.design.widget.CollapsingToolbarLayout.drawChild(Landroid\/graphics\/Canvas;Landroid\/view\/View;J)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r4.contentScrim == null) goto L_0x0022\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r4.scrimAlpha \<= 0) goto L_0x0022\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (isToolbarChild(r6) == false) goto L_0x0022\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|r4.contentScrim.mutate().setAlpha(r4.scrimAlpha)\lr4.contentScrim.draw(r5)\lr0 = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|r0 = false\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v2 boolean), (r0v8 boolean) binds: [B:7:0x0022, B:6:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|if (super.drawChild(r5, r6, r7) != false) goto L_?\l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|if (r0 == false) goto L_0x002c\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{protected boolean android.support.design.widget.CollapsingToolbarLayout.drawChild((r4v0 'this' android.support.design.widget.CollapsingToolbarLayout A[IMMUTABLE_TYPE, THIS]), (r5v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
}

