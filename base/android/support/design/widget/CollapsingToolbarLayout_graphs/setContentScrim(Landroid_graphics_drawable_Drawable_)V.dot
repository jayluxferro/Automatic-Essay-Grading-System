digraph "CFG forandroid.support.design.widget.CollapsingToolbarLayout.setContentScrim(Landroid\/graphics\/drawable\/Drawable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3.contentScrim == r4) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r1 = null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r3.contentScrim == null) goto L_0x000e\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|r3.contentScrim.setCallback((android.graphics.drawable.Drawable.Callback) null)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r4 == null) goto L_0x0014\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|android.graphics.drawable.Drawable r1 = r4.mutate()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|PHI: r1 \l  PHI: (r1v1 android.graphics.drawable.Drawable) = (r1v0 android.graphics.drawable.Drawable), (r1v3 android.graphics.drawable.Drawable) binds: [B:5:0x000e, B:6:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|r3.contentScrim = r1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|if (r3.contentScrim == null) goto L_0x0034\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|r3.contentScrim.setBounds(0, 0, getWidth(), getHeight())\lr3.contentScrim.setCallback(r3)\lr3.contentScrim.setAlpha(r3.scrimAlpha)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|android.support.p000v4.view.ViewCompat.postInvalidateOnAnimation(r3)\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.CollapsingToolbarLayout.setContentScrim((r3v0 'this' android.support.design.widget.CollapsingToolbarLayout A[IMMUTABLE_TYPE, THIS]), (r4v0 android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

