digraph "CFG forandroid.support.design.widget.CollapsingToolbarLayout.setVisibility(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super.setVisibility(r3)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r3 != 0) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|r3 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|r3 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|PHI: r3 \l  PHI: (r3v1 boolean) = (r3v2 boolean), (r3v3 boolean) binds: [B:3:0x0008, B:2:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|if (r2.statusBarScrim == null) goto L_0x001a\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d}"];
Node_7 [shape=record,label="{7\:\ 0x0013|if (r2.statusBarScrim.isVisible() == r3) goto L_0x001a\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|r2.statusBarScrim.setVisible(r3, false)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a}"];
Node_10 [shape=record,label="{10\:\ 0x001c|if (r2.contentScrim == null) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e}"];
Node_12 [shape=record,label="{12\:\ 0x0024|if (r2.contentScrim.isVisible() == r3) goto L_?\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|r2.contentScrim.setVisible(r3, false)\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.design.widget.CollapsingToolbarLayout.setVisibility((r2v0 'this' android.support.design.widget.CollapsingToolbarLayout A[IMMUTABLE_TYPE, THIS]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
}

