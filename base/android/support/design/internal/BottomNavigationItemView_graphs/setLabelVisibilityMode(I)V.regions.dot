digraph "CFG forandroid.support.design.internal.BottomNavigationItemView.setLabelVisibilityMode(I)V" {
subgraph cluster_Region_654415432 {
label = "R(1:(1:(2:2|(1:(1:7)))))";
node [shape=record,color=blue];
subgraph cluster_Region_172931785 {
label = "R(1:(2:2|(1:(1:7))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1071439011 {
label = "IF [B:1:0x0002] THEN: R(2:2|(1:(1:7))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1.labelVisibilityMode != r2) goto L_0x0004\l}"];
subgraph cluster_Region_1437377124 {
label = "R(2:2|(1:(1:7)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|r1.labelVisibilityMode = r2\l}"];
subgraph cluster_Region_2117389647 {
label = "R(1:(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_22259890 {
label = "IF [B:6:0x000d] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000d|PHI: r2 \l  PHI: (r2v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r1.itemData != null) == true) goto L_0x000f\l}"];
subgraph cluster_Region_1479755263 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000f|setChecked(r1.itemData.isChecked())\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0008}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000a}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000c}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.design.internal.BottomNavigationItemView.setLabelVisibilityMode((r1v0 'this' android.support.design.internal.BottomNavigationItemView A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_9[style=dashed];
Node_2 -> Node_3;
Node_6 -> Node_7;
Node_6 -> Node_10[style=dashed];
Node_7 -> Node_8;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
}

