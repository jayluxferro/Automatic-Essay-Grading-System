digraph "CFG forandroid.support.design.internal.BottomNavigationItemView.setIconTintList(Landroid\/content\/res\/ColorStateList;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r1 I:android.content.res.ColorStateList)\l  (r0 I:android.support.design.internal.BottomNavigationItemView)\l android.support.design.internal.BottomNavigationItemView.iconTint android.content.res.ColorStateList \l0x0002: IGET  (r1 I:android.support.v7.view.menu.MenuItemImpl) = \l  (r0 I:android.support.design.internal.BottomNavigationItemView)\l android.support.design.internal.BottomNavigationItemView.itemData android.support.v7.view.menu.MenuItemImpl \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r1 I:android.support.v7.view.menu.MenuItemImpl) = \l  (r0 I:android.support.design.internal.BottomNavigationItemView)\l android.support.design.internal.BottomNavigationItemView.itemData android.support.v7.view.menu.MenuItemImpl \l0x0008: INVOKE  (r1 I:android.graphics.drawable.Drawable) = (r1 I:android.support.v7.view.menu.MenuItemImpl) android.support.v7.view.menu.MenuItemImpl.getIcon():android.graphics.drawable.Drawable type: VIRTUAL \l0x000c: INVOKE  \l  (r0 I:android.support.design.internal.BottomNavigationItemView)\l  (r1 I:android.graphics.drawable.Drawable)\l android.support.design.internal.BottomNavigationItemView.setIcon(android.graphics.drawable.Drawable):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.internal.BottomNavigationItemView.setIconTintList((r0 'this' I:android.support.design.internal.BottomNavigationItemView A[IMMUTABLE_TYPE, THIS]), (r1 I:android.content.res.ColorStateList A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

