digraph "CFG forandroid.support.design.internal.ScrimInsetsFrameLayout.\<init\>(Landroid\/content\/Context;Landroid\/util\/AttributeSet;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r7 I:android.widget.FrameLayout)\l  (r8 I:android.content.Context)\l  (r9 I:android.util.AttributeSet)\l  (r10 I:int)\l android.widget.FrameLayout.\<init\>(android.content.Context, android.util.AttributeSet, int):void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:android.graphics.Rect) =  android.graphics.Rect \l0x0005: INVOKE  (r0 I:android.graphics.Rect) android.graphics.Rect.\<init\>():void type: DIRECT \l0x0008: IPUT  \l  (r0 I:android.graphics.Rect)\l  (r7 I:android.support.design.internal.ScrimInsetsFrameLayout)\l android.support.design.internal.ScrimInsetsFrameLayout.tempRect android.graphics.Rect \l0x000a: SGET  (r3 I:int[]) =  android.support.design.R.styleable.ScrimInsetsFrameLayout int[] \l0x000c: SGET  (r5 I:int) =  android.support.design.R.style.Widget_Design_ScrimInsetsFrameLayout int \l0x000e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000f: NEW_ARRAY  (r6 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0011: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0012: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0013: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: INVOKE  (r8 I:android.content.res.TypedArray) = \l  (r1 I:android.content.Context)\l  (r2 I:android.util.AttributeSet)\l  (r3 I:int[])\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int[])\l android.support.design.internal.ThemeEnforcement.obtainStyledAttributes(android.content.Context, android.util.AttributeSet, int[], int, int, int[]):android.content.res.TypedArray type: STATIC \l0x0018: SGET  (r9 I:int) =  android.support.design.R.styleable.ScrimInsetsFrameLayout_insetForeground int \l0x001a: INVOKE  (r9 I:android.graphics.drawable.Drawable) = (r8 I:android.content.res.TypedArray), (r9 I:int) android.content.res.TypedArray.getDrawable(int):android.graphics.drawable.Drawable type: VIRTUAL \l0x001e: IPUT  \l  (r9 I:android.graphics.drawable.Drawable)\l  (r7 I:android.support.design.internal.ScrimInsetsFrameLayout)\l android.support.design.internal.ScrimInsetsFrameLayout.insetForeground android.graphics.drawable.Drawable \l0x0020: INVOKE  (r8 I:android.content.res.TypedArray) android.content.res.TypedArray.recycle():void type: VIRTUAL \l0x0023: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0024: INVOKE  \l  (r7 I:android.support.design.internal.ScrimInsetsFrameLayout)\l  (r8 I:boolean)\l android.support.design.internal.ScrimInsetsFrameLayout.setWillNotDraw(boolean):void type: VIRTUAL \l0x0027: NEW_INSTANCE  (r8 I:android.support.design.internal.ScrimInsetsFrameLayout$1) =  android.support.design.internal.ScrimInsetsFrameLayout$1 \l0x0029: INVOKE  \l  (r8 I:android.support.design.internal.ScrimInsetsFrameLayout$1)\l  (r7 I:android.support.design.internal.ScrimInsetsFrameLayout)\l android.support.design.internal.ScrimInsetsFrameLayout.1.\<init\>(android.support.design.internal.ScrimInsetsFrameLayout):void type: DIRECT \l0x002c: INVOKE  \l  (r7 I:android.view.View)\l  (r8 I:android.support.v4.view.OnApplyWindowInsetsListener)\l android.support.v4.view.ViewCompat.setOnApplyWindowInsetsListener(android.view.View, android.support.v4.view.OnApplyWindowInsetsListener):void type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x002f|0x002f: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.internal.ScrimInsetsFrameLayout.\<init\>((r7 'this' I:android.support.design.internal.ScrimInsetsFrameLayout A[IMMUTABLE_TYPE, THIS]), (r8 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

