digraph "CFG forandroid.support.design.internal.NavigationMenuItemView.recycle()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.widget.FrameLayout) = \l  (r2 I:android.support.design.internal.NavigationMenuItemView)\l android.support.design.internal.NavigationMenuItemView.actionArea android.widget.FrameLayout \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:android.widget.FrameLayout) = \l  (r2 I:android.support.design.internal.NavigationMenuItemView)\l android.support.design.internal.NavigationMenuItemView.actionArea android.widget.FrameLayout \l0x0006: INVOKE  (r0 I:android.widget.FrameLayout) android.widget.FrameLayout.removeAllViews():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r0 I:android.widget.CheckedTextView) = \l  (r2 I:android.support.design.internal.NavigationMenuItemView)\l android.support.design.internal.NavigationMenuItemView.textView android.widget.CheckedTextView \l0x000b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: INVOKE  \l  (r0 I:android.widget.CheckedTextView)\l  (r1 I:android.graphics.drawable.Drawable)\l  (r1 I:android.graphics.drawable.Drawable)\l  (r1 I:android.graphics.drawable.Drawable)\l  (r1 I:android.graphics.drawable.Drawable)\l android.widget.CheckedTextView.setCompoundDrawables(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.internal.NavigationMenuItemView.recycle((r2 'this' I:android.support.design.internal.NavigationMenuItemView A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

