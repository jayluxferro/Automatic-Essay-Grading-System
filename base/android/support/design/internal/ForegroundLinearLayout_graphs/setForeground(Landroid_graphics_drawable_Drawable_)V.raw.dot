digraph "CFG forandroid.support.design.internal.ForegroundLinearLayout.setForeground(Landroid\/graphics\/drawable\/Drawable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable) = \l  (r2 I:android.support.design.internal.ForegroundLinearLayout)\l android.support.design.internal.ForegroundLinearLayout.foreground android.graphics.drawable.Drawable \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0044 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:android.graphics.drawable.Drawable) = \l  (r2 I:android.support.design.internal.ForegroundLinearLayout)\l android.support.design.internal.ForegroundLinearLayout.foreground android.graphics.drawable.Drawable \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0013 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r0 I:android.graphics.drawable.Drawable) = \l  (r2 I:android.support.design.internal.ForegroundLinearLayout)\l android.support.design.internal.ForegroundLinearLayout.foreground android.graphics.drawable.Drawable \l0x000a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: INVOKE  \l  (r0 I:android.graphics.drawable.Drawable)\l  (r1 I:android.graphics.drawable.Drawable$Callback)\l android.graphics.drawable.Drawable.setCallback(android.graphics.drawable.Drawable$Callback):void type: VIRTUAL \l0x000e: IGET  (r0 I:android.graphics.drawable.Drawable) = \l  (r2 I:android.support.design.internal.ForegroundLinearLayout)\l android.support.design.internal.ForegroundLinearLayout.foreground android.graphics.drawable.Drawable \l0x0010: INVOKE  \l  (r2 I:android.support.design.internal.ForegroundLinearLayout)\l  (r0 I:android.graphics.drawable.Drawable)\l android.support.design.internal.ForegroundLinearLayout.unscheduleDrawable(android.graphics.drawable.Drawable):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IPUT  \l  (r3 I:android.graphics.drawable.Drawable)\l  (r2 I:android.support.design.internal.ForegroundLinearLayout)\l android.support.design.internal.ForegroundLinearLayout.foreground android.graphics.drawable.Drawable \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x003a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0018: INVOKE  \l  (r2 I:android.support.design.internal.ForegroundLinearLayout)\l  (r0 I:boolean)\l android.support.design.internal.ForegroundLinearLayout.setWillNotDraw(boolean):void type: VIRTUAL \l0x001b: INVOKE  \l  (r3 I:android.graphics.drawable.Drawable)\l  (r2 I:android.graphics.drawable.Drawable$Callback)\l android.graphics.drawable.Drawable.setCallback(android.graphics.drawable.Drawable$Callback):void type: VIRTUAL \l0x001e: INVOKE  (r0 I:boolean) = (r3 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.isStateful():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002b \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: INVOKE  (r0 I:int[]) = \l  (r2 I:android.support.design.internal.ForegroundLinearLayout)\l android.support.design.internal.ForegroundLinearLayout.getDrawableState():int[] type: VIRTUAL \l0x0028: INVOKE  (r3 I:android.graphics.drawable.Drawable), (r0 I:int[]) android.graphics.drawable.Drawable.setState(int[]):boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: IGET  (r0 I:int) = \l  (r2 I:android.support.design.internal.ForegroundLinearLayout)\l android.support.design.internal.ForegroundLinearLayout.foregroundGravity int \l0x002d: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (119(0x77, float:1.67E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|0x002f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003e \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: NEW_INSTANCE  (r0 I:android.graphics.Rect) =  android.graphics.Rect \l0x0033: INVOKE  (r0 I:android.graphics.Rect) android.graphics.Rect.\<init\>():void type: DIRECT \l0x0036: INVOKE  \l  (r3 I:android.graphics.drawable.Drawable)\l  (r0 I:android.graphics.Rect)\l android.graphics.drawable.Drawable.getPadding(android.graphics.Rect):boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|0x003a: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x003b: INVOKE  \l  (r2 I:android.support.design.internal.ForegroundLinearLayout)\l  (r3 I:boolean)\l android.support.design.internal.ForegroundLinearLayout.setWillNotDraw(boolean):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|0x003e: INVOKE  \l  (r2 I:android.support.design.internal.ForegroundLinearLayout)\l android.support.design.internal.ForegroundLinearLayout.requestLayout():void type: VIRTUAL \l0x0041: INVOKE  \l  (r2 I:android.support.design.internal.ForegroundLinearLayout)\l android.support.design.internal.ForegroundLinearLayout.invalidate():void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|0x0044: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.design.internal.ForegroundLinearLayout.setForeground((r2 'this' I:android.support.design.internal.ForegroundLinearLayout A[IMMUTABLE_TYPE, THIS]), (r3 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

