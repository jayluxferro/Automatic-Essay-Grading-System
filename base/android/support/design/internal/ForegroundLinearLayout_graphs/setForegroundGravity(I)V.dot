digraph "CFG forandroid.support.design.internal.ForegroundLinearLayout.setForegroundGravity(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1.foregroundGravity == r2) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if ((8388615 & r2) != 0) goto L_0x000e\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|r2 = r2 \| android.support.p000v4.view.GravityCompat.START\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v7 int) binds: [B:3:0x0008, B:4:0x000a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|if ((r2 & 112) != 0) goto L_0x0014\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|r2 = r2 \| 48\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|PHI: r2 \l  PHI: (r2v2 int) = (r2v1 int), (r2v6 int) binds: [B:6:0x0010, B:7:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|r1.foregroundGravity = r2\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|if (r1.foregroundGravity != 119) goto L_0x002a\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c}"];
Node_11 [shape=record,label="{11\:\ 0x001e|if (r1.foreground == null) goto L_0x002a\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|android.graphics.Rect r2 = new android.graphics.Rect()\lr1.foreground.getPadding(r2)\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|requestLayout()\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.design.internal.ForegroundLinearLayout.setForegroundGravity((r1v0 'this' android.support.design.internal.ForegroundLinearLayout A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

