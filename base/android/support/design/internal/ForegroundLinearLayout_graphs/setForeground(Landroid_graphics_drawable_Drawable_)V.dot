digraph "CFG forandroid.support.design.internal.ForegroundLinearLayout.setForeground(Landroid\/graphics\/drawable\/Drawable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.foreground == r3) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r2.foreground == null) goto L_0x0013\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|r2.foreground.setCallback((android.graphics.drawable.Drawable.Callback) null)\lunscheduleDrawable(r2.foreground)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|r2.foreground = r3\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|if (r3 == null) goto L_0x003a\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|setWillNotDraw(false)\lr3.setCallback(r2)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|if (r3.isStateful() == false) goto L_0x002b\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|r3.setState(getDrawableState())\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b}"];
Node_11 [shape=record,label="{11\:\ 0x002f|if (r2.foregroundGravity != 119) goto L_0x003e\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|r3.getPadding(new android.graphics.Rect())\l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|setWillNotDraw(true)\l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|requestLayout()\linvalidate()\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.design.internal.ForegroundLinearLayout.setForeground((r2v0 'this' android.support.design.internal.ForegroundLinearLayout A[IMMUTABLE_TYPE, THIS]), (r3v0 android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

