digraph "CFG forandroid.support.design.internal.ThemeEnforcement.isCustomTextAppearanceValid(Landroid\/content\/Context;Landroid\/util\/AttributeSet;[III[I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.content.res.TypedArray r1 = r1.obtainStyledAttributes(r2, r3, r4, r5)\lint r2 = r6.length\lr4 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|LOOP_START\lPHI: r4 \l  PHI: (r4v2 int) = (r4v1 int), (r4v3 int) binds: [B:0:0x0000, B:6:0x0016] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:6:0x0016\l|if (r4 \>= r2) goto L_0x0019\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009}"];
Node_3 [shape=record,label="{3\:\ 0x0010|if (r1.getResourceId(r6[r4], \-1) != \-1) goto L_0x0016\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|r1.recycle()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|RETURN\l|return false\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|LOOP_END\lLOOP:0: B:1:0x0007\-\>B:6:0x0016\l|int r4 = r4 + 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|r1.recycle()\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|RETURN\l|return true\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static boolean android.support.design.internal.ThemeEnforcement.isCustomTextAppearanceValid((r1v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , , Annotation[BUILD, android.support.annotation.StyleableRes, \{\}], Annotation[BUILD, android.support.annotation.AttrRes, \{\}], Annotation[BUILD, android.support.annotation.StyleRes, \{\}], Annotation[BUILD, android.support.annotation.StyleableRes, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_6;
Node_3 -> Node_9[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_1;
Node_7 -> Node_8;
Node_9 -> Node_4;
Node_10 -> Node_7;
}

