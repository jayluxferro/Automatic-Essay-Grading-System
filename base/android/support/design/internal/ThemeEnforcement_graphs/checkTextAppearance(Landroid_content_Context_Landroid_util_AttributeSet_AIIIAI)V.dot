digraph "CFG forandroid.support.design.internal.ThemeEnforcement.checkTextAppearance(Landroid\/content\/Context;Landroid\/util\/AttributeSet;[III[I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.content.res.TypedArray r0 = r3.obtainStyledAttributes(r4, android.support.design.C0059R.styleable.ThemeEnforcement, r6, r7)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r0.getBoolean(android.support.design.C0059R.styleable.ThemeEnforcement_enforceTextAppearance, false) != false) goto L_0x0013\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|r0.recycle()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|if (r8 == null) goto L_0x001e\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015}"];
Node_6 [shape=record,label="{6\:\ 0x0016|if (r8.length != 0) goto L_0x0019\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|boolean r3 = isCustomTextAppearanceValid(r3, r4, r5, r6, r7, r8)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e}"];
Node_9 [shape=record,label="{9\:\ 0x0025|if (r0.getResourceId(android.support.design.C0059R.styleable.ThemeEnforcement_android_textAppearance, \-1) == \-1) goto L_0x002a\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|r3 = true\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|r3 = false\l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|PHI: r3 \l  PHI: (r3v1 boolean) = (r3v5 boolean), (r3v6 boolean), (r3v7 boolean) binds: [B:11:0x002a, B:10:0x0027, B:7:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|r0.recycle()\l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|if (r3 == false) goto L_0x0031\l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031}"];
Node_16 [shape=record,label="{16\:\ 0x0038|throw new java.lang.IllegalArgumentException(\"This component requires that you specify a valid TextAppearance attribute. Update your app theme to inherit from Theme.MaterialComponents (or a descendant).\")\l}"];
MethodNode[shape=record,label="{private static void android.support.design.internal.ThemeEnforcement.checkTextAppearance((r3v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , , Annotation[BUILD, android.support.annotation.StyleableRes, \{\}], Annotation[BUILD, android.support.annotation.AttrRes, \{\}], Annotation[BUILD, android.support.annotation.StyleRes, \{\}], Annotation[BUILD, android.support.annotation.StyleableRes, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_15 -> Node_16;
}

