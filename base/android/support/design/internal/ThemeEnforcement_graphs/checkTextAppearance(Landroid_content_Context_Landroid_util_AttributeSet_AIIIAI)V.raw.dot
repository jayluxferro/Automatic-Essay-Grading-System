digraph "CFG forandroid.support.design.internal.ThemeEnforcement.checkTextAppearance(Landroid\/content\/Context;Landroid\/util\/AttributeSet;[III[I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int[]) =  android.support.design.R.styleable.ThemeEnforcement int[] \l0x0002: INVOKE  (r0 I:android.content.res.TypedArray) = \l  (r3 I:android.content.Context)\l  (r4 I:android.util.AttributeSet)\l  (r0 I:int[])\l  (r6 I:int)\l  (r7 I:int)\l android.content.Context.obtainStyledAttributes(android.util.AttributeSet, int[], int, int):android.content.res.TypedArray type: VIRTUAL \l0x0006: SGET  (r1 I:int) =  android.support.design.R.styleable.ThemeEnforcement_enforceTextAppearance int \l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: INVOKE  (r1 I:boolean) = \l  (r0 I:android.content.res.TypedArray)\l  (r1 I:int)\l  (r2 I:boolean)\l android.content.res.TypedArray.getBoolean(int, boolean):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: INVOKE  (r0 I:android.content.res.TypedArray) android.content.res.TypedArray.recycle():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: ARRAY_LENGTH  (r1 I:int) = (r8 I:?[]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0019 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: INVOKE  (r3 I:boolean) = \l  (r3 I:android.content.Context)\l  (r4 I:android.util.AttributeSet)\l  (r5 I:int[])\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int[])\l android.support.design.internal.ThemeEnforcement.isCustomTextAppearanceValid(android.content.Context, android.util.AttributeSet, int[], int, int, int[]):boolean type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: SGET  (r3 I:int) =  android.support.design.R.styleable.ThemeEnforcement_android_textAppearance int \l0x0020: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0021: INVOKE  (r3 I:int) = \l  (r0 I:android.content.res.TypedArray)\l  (r3 I:int)\l  (r4 I:int)\l android.content.res.TypedArray.getResourceId(int, int):int type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002a \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0028: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: INVOKE  (r0 I:android.content.res.TypedArray) android.content.res.TypedArray.recycle():void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x002e|0x002e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0031 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0030|0x0030: RETURN   \l}"];
Node_16 [shape=record,label="{16\:\ 0x0031|0x0031: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0033: CONST_STR  (r4 I:java.lang.String) =  \"This component requires that you specify a valid TextAppearance attribute. Update your app theme to inherit from Theme.MaterialComponents (or a descendant).\" \l0x0035: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0038|0x0038: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static void android.support.design.internal.ThemeEnforcement.checkTextAppearance((r3 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , , Annotation[BUILD, android.support.annotation.StyleableRes, \{\}], Annotation[BUILD, android.support.annotation.AttrRes, \{\}], Annotation[BUILD, android.support.annotation.StyleRes, \{\}], Annotation[BUILD, android.support.annotation.StyleableRes, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_16 -> Node_17;
}

