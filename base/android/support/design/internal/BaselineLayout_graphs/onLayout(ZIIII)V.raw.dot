digraph "CFG forandroid.support.design.internal.BaselineLayout.onLayout(ZIIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r7 I:int) = (r6 I:android.support.design.internal.BaselineLayout) android.support.design.internal.BaselineLayout.getChildCount():int type: VIRTUAL \l0x0004: INVOKE  (r9 I:int) = (r6 I:android.support.design.internal.BaselineLayout) android.support.design.internal.BaselineLayout.getPaddingLeft():int type: VIRTUAL \l0x0008: ARITH  (r10 I:int) = (r10 I:int) \- (r8 I:int) \l0x0009: INVOKE  (r8 I:int) = (r6 I:android.support.design.internal.BaselineLayout) android.support.design.internal.BaselineLayout.getPaddingRight():int type: VIRTUAL \l0x000d: ARITH  (r10 I:int) = (r10 I:int) \- (r8 I:int) \l0x000e: ARITH  (r10 I:int) = (r10 I:int) \- (r9 I:int) \l0x000f: INVOKE  (r8 I:int) = (r6 I:android.support.design.internal.BaselineLayout) android.support.design.internal.BaselineLayout.getPaddingTop():int type: VIRTUAL \l0x0013: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: IF  (r11 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:13:0x004d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: INVOKE  (r0 I:android.view.View) = \l  (r6 I:android.support.design.internal.BaselineLayout)\l  (r11 I:int)\l android.support.design.internal.BaselineLayout.getChildAt(int):android.view.View type: VIRTUAL \l0x001a: INVOKE  (r1 I:int) = (r0 I:android.view.View) android.view.View.getVisibility():int type: VIRTUAL \l0x001e: CONST  (r2 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|0x0020: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0023 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: INVOKE  (r1 I:int) = (r0 I:android.view.View) android.view.View.getMeasuredWidth():int type: VIRTUAL \l0x0027: INVOKE  (r2 I:int) = (r0 I:android.view.View) android.view.View.getMeasuredHeight():int type: VIRTUAL \l0x002b: ARITH  (r3 I:int) = (r10 I:int) \- (r1 I:int) \l0x002d: ARITH  (r3 I:int) = (r3 I:int) \/ (2 int) \l0x002f: ARITH  (r3 I:int) = (r3 I:int) + (r9 I:int) \l0x0030: IGET  (r4 I:int) = (r6 I:android.support.design.internal.BaselineLayout) android.support.design.internal.BaselineLayout.baseline int \l0x0032: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0033|0x0033: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0044 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|0x0035: INVOKE  (r4 I:int) = (r0 I:android.view.View) android.view.View.getBaseline():int type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0044 \l}"];
Node_9 [shape=record,label="{9\:\ 0x003b|0x003b: IGET  (r4 I:int) = (r6 I:android.support.design.internal.BaselineLayout) android.support.design.internal.BaselineLayout.baseline int \l0x003d: ARITH  (r4 I:int) = (r4 I:int) + (r8 I:int) \l0x003e: INVOKE  (r5 I:int) = (r0 I:android.view.View) android.view.View.getBaseline():int type: VIRTUAL \l0x0042: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0044|0x0044: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0045|0x0045: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int) \l0x0046: ARITH  (r2 I:int) = (r2 I:int) + (r4 I:int) \l0x0047: INVOKE  \l  (r0 I:android.view.View)\l  (r3 I:int)\l  (r4 I:int)\l  (r1 I:int)\l  (r2 I:int)\l android.view.View.layout(int, int, int, int):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x004a|0x004a: ARITH  (r11 I:int) = (r11 I:int) + (1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x004d|0x004d: RETURN   \l}"];
MethodNode[shape=record,label="{protected void android.support.design.internal.BaselineLayout.onLayout((r6 'this' I:android.support.design.internal.BaselineLayout A[IMMUTABLE_TYPE, THIS]), (r7 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_12[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
}

