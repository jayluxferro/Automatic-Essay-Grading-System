digraph "CFG forandroid.support.design.internal.ScrimInsetsFrameLayout.1.onApplyWindowInsets(Landroid\/view\/View;Landroid\/support\/v4\/view\/WindowInsetsCompat;)Landroid\/support\/v4\/view\/WindowInsetsCompat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r4.this$0.insets != null) goto L_0x000f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|android.support.design.internal.ScrimInsetsFrameLayout r5 = r4.this$0\lr5.insets = new android.graphics.Rect()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|r4.this$0.insets.set(r6.getSystemWindowInsetLeft(), r6.getSystemWindowInsetTop(), r6.getSystemWindowInsetRight(), r6.getSystemWindowInsetBottom())\lr4.this$0.onInsetsChanged(r6)\landroid.support.design.internal.ScrimInsetsFrameLayout r5 = r4.this$0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|if (r6.hasSystemWindowInsets() == false) goto L_0x003c\l}"];
Node_5 [shape=record,label="{5\:\ 0x0033}"];
Node_6 [shape=record,label="{6\:\ 0x0037|if (r4.this$0.insetForeground != null) goto L_0x003a\l}"];
Node_7 [shape=record,label="{7\:\ 0x003a|r0 = false\l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|r0 = true\l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|PHI: r0 \l  PHI: (r0v2 boolean) = (r0v3 boolean), (r0v6 boolean) binds: [B:8:0x003c, B:7:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|r5.setWillNotDraw(r0)\landroid.support.p000v4.view.ViewCompat.postInvalidateOnAnimation(r4.this$0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0049|RETURN\l|return r6.consumeSystemWindowInsets()\l}"];
MethodNode[shape=record,label="{public android.support.v4.view.WindowInsetsCompat android.support.design.internal.ScrimInsetsFrameLayout.1.onApplyWindowInsets((r4v0 'this' android.support.design.internal.ScrimInsetsFrameLayout$1 A[IMMUTABLE_TYPE, THIS]), (r5v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 android.support.v4.view.WindowInsetsCompat A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

