digraph "CFG forandroid.support.design.internal.FlowLayout.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0002: INVOKE  (r1 I:int) = (r21 I:int) android.view.View.MeasureSpec.getSize(int):int type: STATIC \l0x0006: INVOKE  (r2 I:int) = (r21 I:int) android.view.View.MeasureSpec.getMode(int):int type: STATIC \l0x000a: INVOKE  (r3 I:int) = (r22 I:int) android.view.View.MeasureSpec.getSize(int):int type: STATIC \l0x000e: INVOKE  (r4 I:int) = (r22 I:int) android.view.View.MeasureSpec.getMode(int):int type: STATIC \l0x0012: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (\-2147483648(0xffffffff80000000, float:\-0.0) ?[int, float, short, byte, char])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001b \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: INVOKE  (r6 I:int) = (r20 I:android.support.design.internal.FlowLayout) android.support.design.internal.FlowLayout.getPaddingLeft():int type: VIRTUAL \l0x0024: INVOKE  (r7 I:int) = (r20 I:android.support.design.internal.FlowLayout) android.support.design.internal.FlowLayout.getPaddingTop():int type: VIRTUAL \l0x0028: INVOKE  (r8 I:int) = (r20 I:android.support.design.internal.FlowLayout) android.support.design.internal.FlowLayout.getPaddingRight():int type: VIRTUAL \l0x002c: ARITH  (r5 I:int) = (r5 I:int) \- (r8 I:int) \l0x002d: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002e: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0030: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0031: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|0x0032: INVOKE  (r12 I:int) = (r20 I:android.support.design.internal.FlowLayout) android.support.design.internal.FlowLayout.getChildCount():int type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|0x0036: IF  (r6 I:?[int, byte, short, char]) \>= (r12 I:?[int, byte, short, char])  \-\> B:27:0x00a6 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: INVOKE  (r12 I:android.view.View) = \l  (r0 I:android.support.design.internal.FlowLayout)\l  (r6 I:int)\l android.support.design.internal.FlowLayout.getChildAt(int):android.view.View type: VIRTUAL \l0x003c: INVOKE  (r13 I:int) = (r12 I:android.view.View) android.view.View.getVisibility():int type: VIRTUAL \l0x0040: CONST  (r14 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|0x0042: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x004b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0044|0x0044: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0046: MOVE  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0048: CONST  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x004b|0x004b: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004d: MOVE  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004f: INVOKE  \l  (r0 I:android.support.design.internal.FlowLayout)\l  (r12 I:android.view.View)\l  (r13 I:int)\l  (r14 I:int)\l android.support.design.internal.FlowLayout.measureChild(android.view.View, int, int):void type: VIRTUAL \l0x0052: INVOKE  (r15 I:android.view.ViewGroup$LayoutParams) = (r12 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0056: INSTANCE_OF  (r8 I:boolean) = (r15 I:?[OBJECT, ARRAY]) android.view.ViewGroup$MarginLayoutParams \l}"];
Node_14 [shape=record,label="{14\:\ 0x0058|0x0058: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0067 \l}"];
Node_15 [shape=record,label="{15\:\ 0x005a|0x005a: CHECK_CAST  (r15 I:android.view.ViewGroup$MarginLayoutParams) = (android.view.ViewGroup$MarginLayoutParams) (r15 I:?[OBJECT, ARRAY]) \l0x005c: IGET  (r8 I:int) = (r15 I:android.view.ViewGroup$MarginLayoutParams) android.view.ViewGroup.MarginLayoutParams.leftMargin int \l0x005e: CONST  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0060: ARITH  (r8 I:int) = (r8 I:int) + (0 int) \l0x0062: IGET  (r15 I:int) = (r15 I:android.view.ViewGroup$MarginLayoutParams) android.view.ViewGroup.MarginLayoutParams.rightMargin int \l0x0064: ARITH  (r15 I:int) = (r15 I:int) + (0 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0067|0x0067: CONST  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0069: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006a: CONST  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x006b|0x006b: ARITH  (r17 I:int) = (r10 I:int) + (r8 I:int) \l0x006d: INVOKE  (r18 I:int) = (r12 I:android.view.View) android.view.View.getMeasuredWidth():int type: VIRTUAL \l0x0071: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0073: ARITH  (r10 I:int) = (r17 I:int) + (r18 I:int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0075|0x0075: IF  (r10 I:?[int, byte, short, char]) \<= (r5 I:?[int, byte, short, char])  \-\> B:22:0x0086 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0077|0x0077: INVOKE  (r10 I:boolean) = (r20 I:android.support.design.internal.FlowLayout) android.support.design.internal.FlowLayout.isSingleLine():boolean type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x007b|0x007b: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0086 \l}"];
Node_21 [shape=record,label="{21\:\ 0x007d|0x007d: INVOKE  (r10 I:int) = (r20 I:android.support.design.internal.FlowLayout) android.support.design.internal.FlowLayout.getPaddingLeft():int type: VIRTUAL \l0x0081: IGET  (r11 I:int) = (r0 I:android.support.design.internal.FlowLayout) android.support.design.internal.FlowLayout.lineSpacing int \l0x0083: ARITH  (r11 I:int) = (r11 I:int) + (r9 I:int) \l0x0084: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x0086|0x0086: ARITH  (r9 I:int) = (r19 I:int) + (r8 I:int) \l0x0088: INVOKE  (r10 I:int) = (r12 I:android.view.View) android.view.View.getMeasuredWidth():int type: VIRTUAL \l0x008c: ARITH  (r9 I:int) = (r9 I:int) + (r10 I:int) \l0x008d: INVOKE  (r10 I:int) = (r12 I:android.view.View) android.view.View.getMeasuredHeight():int type: VIRTUAL \l0x0091: ARITH  (r10 I:int) = (r10 I:int) + (r11 I:int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0092|0x0092: IF  (r9 I:?[int, byte, short, char]) \<= (r7 I:?[int, byte, short, char])  \-\> B:25:0x0095 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0094|0x0094: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x0095|0x0095: ARITH  (r8 I:int) = (r8 I:int) + (r15 I:int) \l0x0096: INVOKE  (r9 I:int) = (r12 I:android.view.View) android.view.View.getMeasuredWidth():int type: VIRTUAL \l0x009a: ARITH  (r8 I:int) = (r8 I:int) + (r9 I:int) \l0x009b: IGET  (r9 I:int) = (r0 I:android.support.design.internal.FlowLayout) android.support.design.internal.FlowLayout.itemSpacing int \l0x009d: ARITH  (r8 I:int) = (r8 I:int) + (r9 I:int) \l0x009e: ARITH  (r19 I:int) = (r19 I:int) + (r8 I:int) \l0x00a0: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a1: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x00a3|0x00a3: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l}"];
Node_27 [shape=record,label="{27\:\ 0x00a6|0x00a6: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int), (r7 I:int) android.support.design.internal.FlowLayout.getMeasuredDimension(int, int, int):int type: STATIC \l0x00aa: INVOKE  (r2 I:int) = (r3 I:int), (r4 I:int), (r9 I:int) android.support.design.internal.FlowLayout.getMeasuredDimension(int, int, int):int type: STATIC \l0x00ae: INVOKE  \l  (r0 I:android.support.design.internal.FlowLayout)\l  (r1 I:int)\l  (r2 I:int)\l android.support.design.internal.FlowLayout.setMeasuredDimension(int, int):void type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x00b1|0x00b1: RETURN   \l}"];
MethodNode[shape=record,label="{protected void android.support.design.internal.FlowLayout.onMeasure((r20 'this' I:android.support.design.internal.FlowLayout A[IMMUTABLE_TYPE, THIS]), (r21 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_27;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_26;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_8;
Node_27 -> Node_28;
}

