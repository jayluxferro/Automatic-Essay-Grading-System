digraph "CFG forandroid.support.design.internal.FlowLayout.onLayout(ZIIII)V" {
subgraph cluster_Region_669663404 {
label = "R(1:(1:(6:3|(1:5)|6|9|12|(3:15|(7:17|(1:19)(1:20)|21|(1:24)|25|(1:27)(1:28)|29)(0)|30)))) | DECL_VAR: int null, int null\l";
node [shape=record,color=blue];
subgraph cluster_Region_1031577808 {
label = "R(1:(6:3|(1:5)|6|9|12|(3:15|(7:17|(1:19)(1:20)|21|(1:24)|25|(1:27)(1:28)|29)(0)|30)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_555105795 {
label = "IF [B:1:0x0004] THEN: R(6:3|(1:5)|6|9|12|(3:15|(7:17|(1:19)(1:20)|21|(1:24)|25|(1:27)(1:28)|29)(0)|30)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (getChildCount() != 0) goto L_0x0007\l}"];
subgraph cluster_Region_458888490 {
label = "R(6:3|(1:5)|6|9|12|(3:15|(7:17|(1:19)(1:20)|21|(1:24)|25|(1:27)(1:28)|29)(0)|30))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|boolean r11 = true\l}"];
subgraph cluster_IfRegion_20195297 {
label = "IF [B:4:0x000d] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|if (android.support.p000v4.view.ViewCompat.getLayoutDirection(r8) != 1) goto L_0x0010\l}"];
subgraph cluster_Region_1470453601 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|r11 = false\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0011|PHI: r11 \l  PHI: (r11v2 boolean) = (r11v1 boolean), (r11v3 boolean) binds: [B:4:0x000d, B:5:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|int r9 = r11 ? getPaddingRight() : getPaddingLeft()\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|PHI: r9 \l  PHI: (r9v3 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = r11 ? getPaddingLeft() : getPaddingRight()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|PHI: r0 \l  PHI: (r0v0 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r1 = getPaddingTop()\lint int r12 = (r12 \- r10) \- r0\lint r0 = r9\lint r2 = r1\lint r10 = 0\l}"];
subgraph cluster_LoopRegion_1450614457 {
label = "LOOP:0: (3:15|(7:17|(1:19)(1:20)|21|(1:24)|25|(1:27)(1:28)|29)(0)|30)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0034|if (r10 \< getChildCount()) goto L_0x0036\l}"];
subgraph cluster_Region_2049881884 {
label = "R(3:15|(7:17|(1:19)(1:20)|21|(1:24)|25|(1:27)(1:28)|29)(0)|30)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0036|android.view.View android.view.View r3 = getChildAt(r10)\l}"];
subgraph cluster_IfRegion_100956300 {
label = "IF [B:16:0x0040] THEN: R(7:17|(1:19)(1:20)|21|(1:24)|25|(1:27)(1:28)|29) ELSE: R(0)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0040|if (r3.getVisibility() != 8) goto L_0x0043\l}"];
subgraph cluster_Region_480965895 {
label = "R(7:17|(1:19)(1:20)|21|(1:24)|25|(1:27)(1:28)|29)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0043|android.view.ViewGroup$LayoutParams android.view.ViewGroup.LayoutParams r4 = r3.getLayoutParams()\l}"];
subgraph cluster_IfRegion_1640637434 {
label = "IF [B:18:0x0049] THEN: R(1:19) ELSE: R(1:20)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0049|if ((r4 instanceof android.view.ViewGroup.MarginLayoutParams) == true) goto L_0x004b\l}"];
subgraph cluster_Region_53209644 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x004b|android.view.ViewGroup$MarginLayoutParams android.view.ViewGroup.MarginLayoutParams r4 = (android.view.ViewGroup.MarginLayoutParams) r4\lint r5 = android.support.p000v4.view.MarginLayoutParamsCompat.getMarginStart(r4)\lint r4 = android.support.p000v4.view.MarginLayoutParamsCompat.getMarginEnd(r4)\l}"];
}
subgraph cluster_Region_213007106 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0056|r4 = 0\lr5 = 0\l}"];
}
}
Node_21 [shape=record,label="{21\:\ 0x0058|PHI: r4 r5 \l  PHI: (r4v2 int) = (r4v3 int), (r4v5 int) binds: [B:20:0x0056, B:19:0x004b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 int) = (r5v6 int), (r5v7 int) binds: [B:20:0x0056, B:19:0x004b] A[DONT_GENERATE, DONT_INLINE]\l|int int r6 = r0 + r5 + r3.getMeasuredWidth()\l}"];
subgraph cluster_IfRegion_1640605612 {
label = "IF [B:22:0x0061, B:23:0x0063] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0061|ADDED_TO_REGION\l|if (r8.singleLine == false) goto L_0x0063\l}"];
Node_23 [shape=record,label="{23\:\ 0x0063|ADDED_TO_REGION\l|if (r6 \> r12) goto L_0x0065\l}"];
subgraph cluster_Region_1460820362 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0065|int r2 = r1 + r8.lineSpacing\lr0 = r9\l}"];
}
}
Node_25 [shape=record,label="{25\:\ 0x006a|PHI: r0 r2 \l  PHI: (r0v4 int) = (r0v2 int), (r0v2 int), (r0v7 int) binds: [B:22:0x0061, B:23:0x0063, B:24:0x0065] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 int) = (r2v1 int), (r2v1 int), (r2v4 int) binds: [B:22:0x0061, B:23:0x0063, B:24:0x0065] A[DONT_GENERATE, DONT_INLINE]\l|int int r1 = r0 + r5\lint int r6 = r3.getMeasuredWidth() + r1\lint int r7 = r3.getMeasuredHeight() + r2\l}"];
subgraph cluster_IfRegion_2006571447 {
label = "IF [B:26:0x0076] THEN: R(1:27) ELSE: R(1:28)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0076|if (r11 == true) goto L_0x0078\l}"];
subgraph cluster_Region_1478790723 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0078|r3.layout(r12 \- r6, r2, (r12 \- r0) \- r5, r7)\l}"];
}
subgraph cluster_Region_499077828 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0081|r3.layout(r1, r2, r6, r7)\l}"];
}
}
Node_29 [shape=record,label="{29\:\ 0x0084|r0 += r5 + r4 + r3.getMeasuredWidth() + r8.itemSpacing\lr1 = r7\l}"];
}
subgraph cluster_Region_1957623883 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_30 [shape=record,label="{30\:\ 0x008f|LOOP_END\lPHI: r0 r1 r2 \l  PHI: (r0v3 int) = (r0v2 int), (r0v5 int) binds: [B:34:0x008f, B:33:0x008f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 int) = (r1v1 int), (r1v6 int) binds: [B:34:0x008f, B:33:0x008f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int) binds: [B:34:0x008f, B:33:0x008f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:13:0x0030\-\>B:30:0x008f\l|r10++\l}"];
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0013}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0018}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001e}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0023}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0030|LOOP_START\lPHI: r0 r1 r2 r10 \l  PHI: (r0v2 int) = (r0v1 int), (r0v3 int) binds: [B:12:0x0027, B:30:0x008f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:12:0x0027, B:30:0x008f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:12:0x0027, B:30:0x008f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v2 int) = (r10v1 int), (r10v3 int) binds: [B:12:0x0027, B:30:0x008f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:13:0x0030\-\>B:30:0x008f\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0092}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0092|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x008f|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x008f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void android.support.design.internal.FlowLayout.onLayout((r8v0 'this' android.support.design.internal.FlowLayout A[IMMUTABLE_TYPE, THIS]), (r9v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_14 -> Node_32[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_34[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_25[style=dashed];
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_33;
Node_30 -> Node_13;
Node_0 -> Node_1;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_32 -> Node_31;
Node_33 -> Node_30;
Node_34 -> Node_30;
}

