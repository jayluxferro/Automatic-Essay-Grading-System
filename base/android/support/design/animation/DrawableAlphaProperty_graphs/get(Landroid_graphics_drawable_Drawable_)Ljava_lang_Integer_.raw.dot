digraph "CFG forandroid.support.design.animation.DrawableAlphaProperty.get(Landroid\/graphics\/drawable\/Drawable;)Ljava\/lang\/Integer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (19 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r3 I:int) = (r3 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getAlpha():int type: VIRTUAL \l0x000a: INVOKE  (r3 I:java.lang.Integer) = (r3 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: RETURN  (r3 I:java.lang.Integer) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IGET  (r0 I:java.util.WeakHashMap\<android.graphics.drawable.Drawable, java.lang.Integer\>) = \l  (r2 I:android.support.design.animation.DrawableAlphaProperty)\l android.support.design.animation.DrawableAlphaProperty.alphaCache java.util.WeakHashMap \l0x0011: INVOKE  (r0 I:boolean) = (r0 I:java.util.WeakHashMap), (r3 I:java.lang.Object) java.util.WeakHashMap.containsKey(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0020 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IGET  (r0 I:java.util.WeakHashMap\<android.graphics.drawable.Drawable, java.lang.Integer\>) = \l  (r2 I:android.support.design.animation.DrawableAlphaProperty)\l android.support.design.animation.DrawableAlphaProperty.alphaCache java.util.WeakHashMap \l0x0019: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.WeakHashMap), (r3 I:java.lang.Object) java.util.WeakHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x001d: CHECK_CAST  (r3 I:java.lang.Integer) = (java.lang.Integer) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: RETURN  (r3 I:java.lang.Integer) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char])\l \l0x0022: INVOKE  (r3 I:java.lang.Integer) = (r3 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: RETURN  (r3 I:java.lang.Integer) \l}"];
MethodNode[shape=record,label="{public java.lang.Integer android.support.design.animation.DrawableAlphaProperty.get((r2 'this' I:android.support.design.animation.DrawableAlphaProperty A[IMMUTABLE_TYPE, THIS]), (r3 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

