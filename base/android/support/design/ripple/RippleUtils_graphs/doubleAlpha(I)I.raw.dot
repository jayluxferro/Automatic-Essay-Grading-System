digraph "CFG forandroid.support.design.ripple.RippleUtils.doubleAlpha(I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r2 I:int) android.graphics.Color.alpha(int):int type: STATIC \l0x0004: ARITH  (r0 I:int) = (r0 I:int) * (2 int) \l0x0006: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char])\l \l0x0008: INVOKE  (r0 I:int) = (r0 I:int), (r1 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x000c: INVOKE  (r2 I:int) = (r2 I:int), (r0 I:int) android.support.v4.graphics.ColorUtils.setAlphaComponent(int, int):int type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{private static int android.support.design.ripple.RippleUtils.doubleAlpha((r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.ColorInt, \{\}]\lAnnotation[BUILD, android.support.annotation.ColorInt, \{\}], Annotation[BUILD, android.annotation.TargetApi, \{value=21\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

