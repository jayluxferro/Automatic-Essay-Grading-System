digraph "CFG forandroid.support.design.button.MaterialButtonHelper.updateStroke()V" {
subgraph cluster_Region_1623488709 {
label = "R(1:(1:4)(1:(1:7)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1752888396 {
label = "IF [B:1:0x0002, B:3:0x0006] THEN: R(1:4) ELSE: R(1:(1:7)(0))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (IS_LOLLIPOP != false) goto L_0x0004\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|ADDED_TO_REGION\l|if (r2.strokeDrawableLollipop != null) goto L_0x0008\l}"];
subgraph cluster_Region_2107194510 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0008|r2.materialButton.setInternalBackground(createBackgroundLollipop())\l}"];
}
subgraph cluster_Region_1477504227 {
label = "R(1:(1:7)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_458335604 {
label = "IF [B:6:0x0014] THEN: R(1:7) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0014|if (IS_LOLLIPOP == false) goto L_0x0016\l}"];
subgraph cluster_Region_607582918 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0016|r2.materialButton.invalidate()\l}"];
}
subgraph cluster_Region_285200258 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0012}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.design.button.MaterialButtonHelper.updateStroke((r2v0 'this' android.support.design.button.MaterialButtonHelper A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_6 -> Node_7;
Node_6 -> Node_10[style=dashed];
Node_7 -> Node_8;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_5 -> Node_6;
}

