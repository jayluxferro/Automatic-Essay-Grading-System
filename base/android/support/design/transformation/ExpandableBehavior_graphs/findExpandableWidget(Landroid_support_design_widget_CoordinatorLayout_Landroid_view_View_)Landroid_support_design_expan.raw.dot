digraph "CFG forandroid.support.design.transformation.ExpandableBehavior.findExpandableWidget(Landroid\/support\/design\/widget\/CoordinatorLayout;Landroid\/view\/View;)Landroid\/support\/design\/expandable\/ExpandableWidget;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.util.List) = \l  (r6 I:android.support.design.widget.CoordinatorLayout)\l  (r7 I:android.view.View)\l android.support.design.widget.CoordinatorLayout.getDependencies(android.view.View):java.util.List type: VIRTUAL \l0x0004: INVOKE  (r1 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:7:0x001d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x000f: CHECK_CAST  (r3 I:android.view.View) = (android.view.View) (r3 I:?[OBJECT, ARRAY]) \l0x0011: INVOKE  (r4 I:boolean) = \l  (r5 I:android.support.design.transformation.ExpandableBehavior)\l  (r6 I:android.support.design.widget.CoordinatorLayout)\l  (r7 I:android.view.View)\l  (r3 I:android.view.View)\l android.support.design.transformation.ExpandableBehavior.layoutDependsOn(android.support.design.widget.CoordinatorLayout, android.view.View, android.view.View):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: CHECK_CAST  (r3 I:android.support.design.expandable.ExpandableWidget) = (android.support.design.expandable.ExpandableWidget) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: RETURN  (r3 I:android.support.design.expandable.ExpandableWidget) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: RETURN  (r6 I:android.support.design.expandable.ExpandableWidget) \l}"];
MethodNode[shape=record,label="{protected android.support.design.expandable.ExpandableWidget android.support.design.transformation.ExpandableBehavior.findExpandableWidget((r5 'this' I:android.support.design.transformation.ExpandableBehavior A[IMMUTABLE_TYPE, THIS]), (r6 I:android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_1;
Node_7 -> Node_8;
}

