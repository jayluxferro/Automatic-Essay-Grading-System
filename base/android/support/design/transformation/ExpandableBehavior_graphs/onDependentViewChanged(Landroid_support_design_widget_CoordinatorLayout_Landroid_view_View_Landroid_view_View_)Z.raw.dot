digraph "CFG forandroid.support.design.transformation.ExpandableBehavior.onDependentViewChanged(Landroid\/support\/design\/widget\/CoordinatorLayout;Landroid\/view\/View;Landroid\/view\/View;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CHECK_CAST  (r4 I:android.support.design.expandable.ExpandableWidget) = (android.support.design.expandable.ExpandableWidget) (r4 I:?[OBJECT, ARRAY]) \l0x0002: INVOKE  (r2 I:boolean) = (r4 I:android.support.design.expandable.ExpandableWidget) android.support.design.expandable.ExpandableWidget.isExpanded():boolean type: INTERFACE \l0x0006: INVOKE  (r2 I:boolean) = \l  (r1 I:android.support.design.transformation.ExpandableBehavior)\l  (r2 I:boolean)\l android.support.design.transformation.ExpandableBehavior.didStateChange(boolean):boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0024 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r2 I:boolean) = (r4 I:android.support.design.expandable.ExpandableWidget) android.support.design.expandable.ExpandableWidget.isExpanded():boolean type: INTERFACE \l0x0010: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IPUT  \l  (r2 I:int)\l  (r1 I:android.support.design.transformation.ExpandableBehavior)\l android.support.design.transformation.ExpandableBehavior.currentState int \l0x0018: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0019: CHECK_CAST  (r2 I:android.view.View) = (android.view.View) (r2 I:?[OBJECT, ARRAY]) \l0x001b: INVOKE  (r4 I:boolean) = (r4 I:android.support.design.expandable.ExpandableWidget) android.support.design.expandable.ExpandableWidget.isExpanded():boolean type: INTERFACE \l0x001f: INVOKE  (r2 I:boolean) = \l  (r1 I:android.support.design.transformation.ExpandableBehavior)\l  (r2 I:android.view.View)\l  (r3 I:android.view.View)\l  (r4 I:boolean)\l  (r0 I:boolean)\l android.support.design.transformation.ExpandableBehavior.onExpandedStateChange(android.view.View, android.view.View, boolean, boolean):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: RETURN  (r2 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.design.transformation.ExpandableBehavior.onDependentViewChanged((r1 'this' I:android.support.design.transformation.ExpandableBehavior A[IMMUTABLE_TYPE, THIS]), (r2 I:android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.CallSuper, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

