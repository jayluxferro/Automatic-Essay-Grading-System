digraph "CFG forandroid.support.design.transformation.ExpandableBehavior.from(Landroid\/view\/View;Ljava\/lang\/Class;)Landroid\/support\/design\/transformation\/ExpandableBehavior;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:android.view.ViewGroup$LayoutParams) = (r1 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0004: INSTANCE_OF  (r0 I:boolean) = (r1 I:?[OBJECT, ARRAY]) android.support.design.widget.CoordinatorLayout$LayoutParams \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0021 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CHECK_CAST  (r1 I:android.support.design.widget.CoordinatorLayout$LayoutParams) = (android.support.design.widget.CoordinatorLayout$LayoutParams) (r1 I:?[OBJECT, ARRAY]) \l0x000a: INVOKE  (r1 I:android.support.design.widget.CoordinatorLayout$Behavior) = \l  (r1 I:android.support.design.widget.CoordinatorLayout$LayoutParams)\l android.support.design.widget.CoordinatorLayout.LayoutParams.getBehavior():android.support.design.widget.CoordinatorLayout$Behavior type: VIRTUAL \l0x000e: INSTANCE_OF  (r0 I:boolean) = (r1 I:?[OBJECT, ARRAY]) android.support.design.transformation.ExpandableBehavior \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: INVOKE  (r1 I:java.lang.Object) = (r2 I:java.lang.Class), (r1 I:java.lang.Object) java.lang.Class.cast(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0016: CHECK_CAST  (r1 I:android.support.design.transformation.ExpandableBehavior) = (android.support.design.transformation.ExpandableBehavior) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: RETURN  (r1 I:T) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x001b: CONST_STR  (r2 I:java.lang.String) =  \"The view is not associated with ExpandableBehavior\" \l0x001d: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0023: CONST_STR  (r2 I:java.lang.String) =  \"The view is not a child of CoordinatorLayout\" \l0x0025: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static T android.support.design.transformation.ExpandableBehavior.from((r1 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.Class\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Landroid\/support\/design\/transformation\/ExpandableBehavior;, \>(, Landroid\/view\/View;, Ljava\/lang\/Class\<, TT;\>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

