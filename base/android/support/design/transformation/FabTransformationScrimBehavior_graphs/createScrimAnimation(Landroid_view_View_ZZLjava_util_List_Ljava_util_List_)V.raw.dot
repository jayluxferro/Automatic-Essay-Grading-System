digraph "CFG forandroid.support.design.transformation.FabTransformationScrimBehavior.createScrimAnimation(Landroid\/view\/View;ZZLjava\/util\/List;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0005 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r8 I:android.support.design.animation.MotionTiming) = \l  (r3 I:android.support.design.transformation.FabTransformationScrimBehavior)\l android.support.design.transformation.FabTransformationScrimBehavior.expandTiming android.support.design.animation.MotionTiming \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r8 I:android.support.design.animation.MotionTiming) = \l  (r3 I:android.support.design.transformation.FabTransformationScrimBehavior)\l android.support.design.transformation.FabTransformationScrimBehavior.collapseTiming android.support.design.animation.MotionTiming \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0011 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: INVOKE  (r4 I:android.view.View), (r0 I:float) android.view.View.setAlpha(float):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: SGET  (r5 I:android.util.Property) =  android.view.View.ALPHA android.util.Property \l0x0013: NEW_ARRAY  (r6 I:float[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0015: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0017: APUT  \l  (r6 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r0 I:?[int, float])\l \l0x0019: INVOKE  (r4 I:android.animation.ObjectAnimator) = \l  (r4 I:java.lang.Object)\l  (r5 I:android.util.Property)\l  (r6 I:float[])\l android.animation.ObjectAnimator.ofFloat(java.lang.Object, android.util.Property, float[]):android.animation.ObjectAnimator type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: SGET  (r5 I:android.util.Property) =  android.view.View.ALPHA android.util.Property \l0x0020: NEW_ARRAY  (r6 I:float[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0022: APUT  \l  (r6 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r0 I:?[int, float])\l \l0x0024: INVOKE  (r4 I:android.animation.ObjectAnimator) = \l  (r4 I:java.lang.Object)\l  (r5 I:android.util.Property)\l  (r6 I:float[])\l android.animation.ObjectAnimator.ofFloat(java.lang.Object, android.util.Property, float[]):android.animation.ObjectAnimator type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: INVOKE  \l  (r8 I:android.support.design.animation.MotionTiming)\l  (r4 I:android.animation.Animator)\l android.support.design.animation.MotionTiming.apply(android.animation.Animator):void type: VIRTUAL \l0x002b: INVOKE  (r7 I:java.util.List), (r4 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.design.transformation.FabTransformationScrimBehavior.createScrimAnimation((r3 'this' I:android.support.design.transformation.FabTransformationScrimBehavior A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.List\<android.animation.Animator\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.util.List\<android.animation.Animator$AnimatorListener\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/view\/View;, ZZ, Ljava\/util\/List\<, Landroid\/animation\/Animator;, \>;, Ljava\/util\/List\<, Landroid\/animation\/Animator$AnimatorListener;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

