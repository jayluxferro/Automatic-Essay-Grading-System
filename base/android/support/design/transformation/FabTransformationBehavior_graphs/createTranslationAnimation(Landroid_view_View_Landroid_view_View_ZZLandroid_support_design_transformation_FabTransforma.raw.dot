digraph "CFG forandroid.support.design.transformation.FabTransformationBehavior.createTranslationAnimation(Landroid\/view\/View;Landroid\/view\/View;ZZLandroid\/support\/design\/transformation\/FabTransformationBehavior$FabTransformationSpec;Ljava\/util\/List;Ljava\/util\/List;Landroid\/graphics\/RectF;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0004: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0006: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0008: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x000a: IGET  (r4 I:android.support.design.animation.Positioning) = \l  (r3 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l android.support.design.transformation.FabTransformationBehavior.FabTransformationSpec.positioning android.support.design.animation.Positioning \l0x000c: INVOKE  (r4 I:float) = \l  (r10 I:android.support.design.transformation.FabTransformationBehavior)\l  (r0 I:android.view.View)\l  (r1 I:android.view.View)\l  (r4 I:android.support.design.animation.Positioning)\l android.support.design.transformation.FabTransformationBehavior.calculateTranslationX(android.view.View, android.view.View, android.support.design.animation.Positioning):float type: DIRECT \l0x0010: IGET  (r5 I:android.support.design.animation.Positioning) = \l  (r3 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l android.support.design.transformation.FabTransformationBehavior.FabTransformationSpec.positioning android.support.design.animation.Positioning \l0x0012: INVOKE  (r0 I:float) = \l  (r10 I:android.support.design.transformation.FabTransformationBehavior)\l  (r0 I:android.view.View)\l  (r1 I:android.view.View)\l  (r5 I:android.support.design.animation.Positioning)\l android.support.design.transformation.FabTransformationBehavior.calculateTranslationY(android.view.View, android.view.View, android.support.design.animation.Positioning):float type: DIRECT \l0x0016: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0017: CMP_L  (r6 I:int) = (r4 I:float), (r5 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x004c \l}"];
Node_2 [shape=record,label="{2\:\ 0x001b|0x001b: CMP_L  (r6 I:int) = (r0 I:float), (r5 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0020 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: IF  (r19 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0026 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: CMP_G  (r7 I:int) = (r0 I:float), (r5 I:float) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IF  (r7 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:10:0x002a \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: IF  (r19 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x003b \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:11:0x003b \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: IGET  (r6 I:android.support.design.animation.MotionSpec) = \l  (r3 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l android.support.design.transformation.FabTransformationBehavior.FabTransformationSpec.timings android.support.design.animation.MotionSpec \l0x002c: CONST_STR  (r7 I:java.lang.String) =  \"translationXCurveUpwards\" \l0x002e: INVOKE  (r6 I:android.support.design.animation.MotionTiming) = \l  (r6 I:android.support.design.animation.MotionSpec)\l  (r7 I:java.lang.String)\l android.support.design.animation.MotionSpec.getTiming(java.lang.String):android.support.design.animation.MotionTiming type: VIRTUAL \l0x0032: IGET  (r7 I:android.support.design.animation.MotionSpec) = \l  (r3 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l android.support.design.transformation.FabTransformationBehavior.FabTransformationSpec.timings android.support.design.animation.MotionSpec \l0x0034: CONST_STR  (r8 I:java.lang.String) =  \"translationYCurveUpwards\" \l0x0036: INVOKE  (r7 I:android.support.design.animation.MotionTiming) = \l  (r7 I:android.support.design.animation.MotionSpec)\l  (r8 I:java.lang.String)\l android.support.design.animation.MotionSpec.getTiming(java.lang.String):android.support.design.animation.MotionTiming type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|0x003b: IGET  (r6 I:android.support.design.animation.MotionSpec) = \l  (r3 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l android.support.design.transformation.FabTransformationBehavior.FabTransformationSpec.timings android.support.design.animation.MotionSpec \l0x003d: CONST_STR  (r7 I:java.lang.String) =  \"translationXCurveDownwards\" \l0x003f: INVOKE  (r6 I:android.support.design.animation.MotionTiming) = \l  (r6 I:android.support.design.animation.MotionSpec)\l  (r7 I:java.lang.String)\l android.support.design.animation.MotionSpec.getTiming(java.lang.String):android.support.design.animation.MotionTiming type: VIRTUAL \l0x0043: IGET  (r7 I:android.support.design.animation.MotionSpec) = \l  (r3 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l android.support.design.transformation.FabTransformationBehavior.FabTransformationSpec.timings android.support.design.animation.MotionSpec \l0x0045: CONST_STR  (r8 I:java.lang.String) =  \"translationYCurveDownwards\" \l0x0047: INVOKE  (r7 I:android.support.design.animation.MotionTiming) = \l  (r7 I:android.support.design.animation.MotionSpec)\l  (r8 I:java.lang.String)\l android.support.design.animation.MotionSpec.getTiming(java.lang.String):android.support.design.animation.MotionTiming type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x004c|0x004c: IGET  (r6 I:android.support.design.animation.MotionSpec) = \l  (r3 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l android.support.design.transformation.FabTransformationBehavior.FabTransformationSpec.timings android.support.design.animation.MotionSpec \l0x004e: CONST_STR  (r7 I:java.lang.String) =  \"translationXLinear\" \l0x0050: INVOKE  (r6 I:android.support.design.animation.MotionTiming) = \l  (r6 I:android.support.design.animation.MotionSpec)\l  (r7 I:java.lang.String)\l android.support.design.animation.MotionSpec.getTiming(java.lang.String):android.support.design.animation.MotionTiming type: VIRTUAL \l0x0054: IGET  (r7 I:android.support.design.animation.MotionSpec) = \l  (r3 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l android.support.design.transformation.FabTransformationBehavior.FabTransformationSpec.timings android.support.design.animation.MotionSpec \l0x0056: CONST_STR  (r8 I:java.lang.String) =  \"translationYLinear\" \l0x0058: INVOKE  (r7 I:android.support.design.animation.MotionTiming) = \l  (r7 I:android.support.design.animation.MotionSpec)\l  (r8 I:java.lang.String)\l android.support.design.animation.MotionSpec.getTiming(java.lang.String):android.support.design.animation.MotionTiming type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x005c|0x005c: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x005d: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x005e: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005f: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0060|0x0060: IF  (r19 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0092 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0062|0x0062: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x006c \l}"];
Node_16 [shape=record,label="{16\:\ 0x0064|0x0064: NEG  (r2 I:float) = (r4 I:float) \l0x0065: INVOKE  (r1 I:android.view.View), (r2 I:float) android.view.View.setTranslationX(float):void type: VIRTUAL \l0x0068: NEG  (r2 I:float) = (r0 I:float) \l0x0069: INVOKE  (r1 I:android.view.View), (r2 I:float) android.view.View.setTranslationY(float):void type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x006c|0x006c: SGET  (r2 I:android.util.Property) =  android.view.View.TRANSLATION_X android.util.Property \l0x006e: NEW_ARRAY  (r8 I:float[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0070: APUT  \l  (r8 I:?[int, float][])\l  (r6 I:?[int, short, byte, char])\l  (r5 I:?[int, float])\l \l0x0072: INVOKE  (r14 I:android.animation.ObjectAnimator) = \l  (r1 I:java.lang.Object)\l  (r2 I:android.util.Property)\l  (r8 I:float[])\l android.animation.ObjectAnimator.ofFloat(java.lang.Object, android.util.Property, float[]):android.animation.ObjectAnimator type: STATIC \l0x0076: SGET  (r2 I:android.util.Property) =  android.view.View.TRANSLATION_Y android.util.Property \l0x0078: NEW_ARRAY  (r7 I:float[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x007a: APUT  \l  (r7 I:?[int, float][])\l  (r6 I:?[int, short, byte, char])\l  (r5 I:?[int, float])\l \l0x007c: INVOKE  (r15 I:android.animation.ObjectAnimator) = \l  (r1 I:java.lang.Object)\l  (r2 I:android.util.Property)\l  (r7 I:float[])\l android.animation.ObjectAnimator.ofFloat(java.lang.Object, android.util.Property, float[]):android.animation.ObjectAnimator type: STATIC \l0x0080: NEG  (r5 I:float) = (r4 I:float) \l0x0081: NEG  (r6 I:float) = (r0 I:float) \l0x0082: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0083: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0084: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0086: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0088: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x008a: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x008b: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x008c: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x008e: INVOKE  \l  (r0 I:android.support.design.transformation.FabTransformationBehavior)\l  (r1 I:android.view.View)\l  (r2 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l  (r3 I:android.support.design.animation.MotionTiming)\l  (r4 I:android.support.design.animation.MotionTiming)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:float)\l  (r9 I:android.graphics.RectF)\l android.support.design.transformation.FabTransformationBehavior.calculateChildVisibleBoundsAtEndOfExpansion(android.view.View, android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec, android.support.design.animation.MotionTiming, android.support.design.animation.MotionTiming, float, float, float, float, android.graphics.RectF):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x0092|0x0092: SGET  (r2 I:android.util.Property) =  android.view.View.TRANSLATION_X android.util.Property \l0x0094: NEW_ARRAY  (r3 I:float[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0096: NEG  (r4 I:float) = (r4 I:float) \l0x0097: APUT  \l  (r3 I:?[int, float][])\l  (r6 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x0099: INVOKE  (r14 I:android.animation.ObjectAnimator) = \l  (r1 I:java.lang.Object)\l  (r2 I:android.util.Property)\l  (r3 I:float[])\l android.animation.ObjectAnimator.ofFloat(java.lang.Object, android.util.Property, float[]):android.animation.ObjectAnimator type: STATIC \l0x009d: SGET  (r2 I:android.util.Property) =  android.view.View.TRANSLATION_Y android.util.Property \l0x009f: NEW_ARRAY  (r3 I:float[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x00a1: NEG  (r0 I:float) = (r0 I:float) \l0x00a2: APUT  \l  (r3 I:?[int, float][])\l  (r6 I:?[int, short, byte, char])\l  (r0 I:?[int, float])\l \l0x00a4: INVOKE  (r15 I:android.animation.ObjectAnimator) = \l  (r1 I:java.lang.Object)\l  (r2 I:android.util.Property)\l  (r3 I:float[])\l android.animation.ObjectAnimator.ofFloat(java.lang.Object, android.util.Property, float[]):android.animation.ObjectAnimator type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x00a8|0x00a8: INVOKE  \l  (r12 I:android.support.design.animation.MotionTiming)\l  (r14 I:android.animation.Animator)\l android.support.design.animation.MotionTiming.apply(android.animation.Animator):void type: VIRTUAL \l0x00ab: INVOKE  \l  (r13 I:android.support.design.animation.MotionTiming)\l  (r15 I:android.animation.Animator)\l android.support.design.animation.MotionTiming.apply(android.animation.Animator):void type: VIRTUAL \l0x00ae: INVOKE  (r11 I:java.util.List), (r14 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x00b1: INVOKE  (r11 I:java.util.List), (r15 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_20 [shape=record,label="{20\:\ 0x00b4|0x00b4: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.design.transformation.FabTransformationBehavior.createTranslationAnimation((r16 'this' I:android.support.design.transformation.FabTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r17 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:java.util.List\<android.animation.Animator\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:java.util.List\<android.animation.Animator$AnimatorListener\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:android.graphics.RectF A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/view\/View;, Landroid\/view\/View;, ZZ, Landroid\/support\/design\/transformation\/FabTransformationBehavior$FabTransformationSpec;, Ljava\/util\/List\<, Landroid\/animation\/Animator;, \>;, Ljava\/util\/List\<, Landroid\/animation\/Animator$AnimatorListener;, \>;, Landroid\/graphics\/RectF;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_12[style=dashed];
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_13;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
}

