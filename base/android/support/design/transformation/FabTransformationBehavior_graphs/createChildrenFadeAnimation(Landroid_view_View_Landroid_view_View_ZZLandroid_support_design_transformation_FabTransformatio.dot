digraph "CFG forandroid.support.design.transformation.FabTransformationBehavior.createChildrenFadeAnimation(Landroid\/view\/View;Landroid\/view\/View;ZZLandroid\/support\/design\/transformation\/FabTransformationBehavior$FabTransformationSpec;Ljava\/util\/List;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r3 instanceof android.view.ViewGroup) != false) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005}"];
Node_4 [shape=record,label="{4\:\ 0x0007|if ((r3 instanceof android.support.design.circularreveal.CircularRevealWidget) == false) goto L_0x000e\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009}"];
Node_6 [shape=record,label="{6\:\ 0x000b|if (android.support.design.circularreveal.CircularRevealHelper.STRATEGY != 0) goto L_0x000e\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x000e|android.view.ViewGroup r2 = calculateChildContentContainer(r3)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|if (r2 != null) goto L_0x0015\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x0015}"];
Node_12 [shape=record,label="{12\:\ 0x0018|if (r4 == false) goto L_0x0032\l}"];
Node_13 [shape=record,label="{13\:\ 0x001a|if (r5 != false) goto L_0x0025\l}"];
Node_14 [shape=record,label="{14\:\ 0x001c|android.support.design.animation.ChildrenAlphaProperty.CHILDREN_ALPHA.set(r2, java.lang.Float.valueOf(0.0f))\l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|android.util.Property\<android.view.ViewGroup, java.lang.Float\> r3 = android.support.design.animation.ChildrenAlphaProperty.CHILDREN_ALPHA\lfloat[] r4 = new float[]\{1.0f\}\landroid.animation.ObjectAnimator r2 = android.animation.ObjectAnimator.ofFloat(r2, r3, r4)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|android.util.Property\<android.view.ViewGroup, java.lang.Float\> r4 = android.support.design.animation.ChildrenAlphaProperty.CHILDREN_ALPHA\lfloat[] r5 = new float[]\{0.0f\}\landroid.animation.ObjectAnimator r2 = android.animation.ObjectAnimator.ofFloat(r2, r4, r5)\l}"];
Node_17 [shape=record,label="{17\:\ 0x003c|PHI: r2 \l  PHI: (r2v4 android.animation.ObjectAnimator) = (r2v5 android.animation.ObjectAnimator), (r2v6 android.animation.ObjectAnimator) binds: [B:16:0x0032, B:15:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|r6.timings.getTiming(\"contentFade\").apply(r2)\lr7.add(r2)\l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.design.transformation.FabTransformationBehavior.createChildrenFadeAnimation((r1v0 'this' android.support.design.transformation.FabTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r2v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.util.List\<android.animation.Animator\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.util.List\<android.animation.Animator$AnimatorListener\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/view\/View;, Landroid\/view\/View;, ZZ, Landroid\/support\/design\/transformation\/FabTransformationBehavior$FabTransformationSpec;, Ljava\/util\/List\<, Landroid\/animation\/Animator;, \>;, Ljava\/util\/List\<, Landroid\/animation\/Animator$AnimatorListener;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

