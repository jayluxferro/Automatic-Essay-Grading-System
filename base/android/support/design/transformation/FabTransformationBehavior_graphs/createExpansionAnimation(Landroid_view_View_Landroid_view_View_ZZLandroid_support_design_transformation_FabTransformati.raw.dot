digraph "CFG forandroid.support.design.transformation.FabTransformationBehavior.createExpansionAnimation(Landroid\/view\/View;Landroid\/view\/View;ZZLandroid\/support\/design\/transformation\/FabTransformationBehavior$FabTransformationSpec;FFLjava\/util\/List;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0004: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0006: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x0008: INSTANCE_OF  (r2 I:boolean) = (r8 I:?[OBJECT, ARRAY]) android.support.design.circularreveal.CircularRevealWidget \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x000e: CHECK_CAST  (r13 I:android.support.design.circularreveal.CircularRevealWidget) = (android.support.design.circularreveal.CircularRevealWidget) (r13 I:?[OBJECT, ARRAY]) \l0x0010: IGET  (r2 I:android.support.design.animation.Positioning) = \l  (r9 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l android.support.design.transformation.FabTransformationBehavior.FabTransformationSpec.positioning android.support.design.animation.Positioning \l0x0012: INVOKE  (r2 I:float) = \l  (r12 I:android.support.design.transformation.FabTransformationBehavior)\l  (r0 I:android.view.View)\l  (r8 I:android.view.View)\l  (r2 I:android.support.design.animation.Positioning)\l android.support.design.transformation.FabTransformationBehavior.calculateRevealCenterX(android.view.View, android.view.View, android.support.design.animation.Positioning):float type: DIRECT \l0x0016: IGET  (r3 I:android.support.design.animation.Positioning) = \l  (r9 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l android.support.design.transformation.FabTransformationBehavior.FabTransformationSpec.positioning android.support.design.animation.Positioning \l0x0018: INVOKE  (r3 I:float) = \l  (r12 I:android.support.design.transformation.FabTransformationBehavior)\l  (r0 I:android.view.View)\l  (r8 I:android.view.View)\l  (r3 I:android.support.design.animation.Positioning)\l android.support.design.transformation.FabTransformationBehavior.calculateRevealCenterY(android.view.View, android.view.View, android.support.design.animation.Positioning):float type: DIRECT \l0x001c: CHECK_CAST  (r0 I:android.support.design.widget.FloatingActionButton) = (android.support.design.widget.FloatingActionButton) (r0 I:?[OBJECT, ARRAY]) \l0x001e: IGET  (r4 I:android.graphics.Rect) = \l  (r12 I:android.support.design.transformation.FabTransformationBehavior)\l android.support.design.transformation.FabTransformationBehavior.tmpRect android.graphics.Rect \l0x0020: INVOKE  \l  (r0 I:android.support.design.widget.FloatingActionButton)\l  (r4 I:android.graphics.Rect)\l android.support.design.widget.FloatingActionButton.getContentRect(android.graphics.Rect):boolean type: VIRTUAL \l0x0023: IGET  (r0 I:android.graphics.Rect) = \l  (r12 I:android.support.design.transformation.FabTransformationBehavior)\l android.support.design.transformation.FabTransformationBehavior.tmpRect android.graphics.Rect \l0x0025: INVOKE  (r0 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.width():int type: VIRTUAL \l0x0029: CAST  (r0 I:float) = (float) (r0 I:int) \l0x002a: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x002c: ARITH  (r10 I:float) = (r0 I:float) \/ (r4 I:float) \l0x002e: IGET  (r0 I:android.support.design.animation.MotionSpec) = \l  (r9 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l android.support.design.transformation.FabTransformationBehavior.FabTransformationSpec.timings android.support.design.animation.MotionSpec \l0x0030: CONST_STR  (r4 I:java.lang.String) =  \"expansion\" \l0x0032: INVOKE  (r11 I:android.support.design.animation.MotionTiming) = \l  (r0 I:android.support.design.animation.MotionSpec)\l  (r4 I:java.lang.String)\l android.support.design.animation.MotionSpec.getTiming(java.lang.String):android.support.design.animation.MotionTiming type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0036|0x0036: IF  (r23 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x007b \l}"];
Node_5 [shape=record,label="{5\:\ 0x0038|0x0038: IF  (r24 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0042 \l}"];
Node_6 [shape=record,label="{6\:\ 0x003a|0x003a: NEW_INSTANCE  (r0 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo) =  android.support.design.circularreveal.CircularRevealWidget$RevealInfo \l0x003c: INVOKE  \l  (r0 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo)\l  (r2 I:float)\l  (r3 I:float)\l  (r10 I:float)\l android.support.design.circularreveal.CircularRevealWidget.RevealInfo.\<init\>(float, float, float):void type: DIRECT \l0x003f: INVOKE  \l  (r13 I:android.support.design.circularreveal.CircularRevealWidget)\l  (r0 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo)\l android.support.design.circularreveal.CircularRevealWidget.setRevealInfo(android.support.design.circularreveal.CircularRevealWidget$RevealInfo):void type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0042|0x0042: IF  (r24 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x004c \l}"];
Node_8 [shape=record,label="{8\:\ 0x0044|0x0044: INVOKE  (r0 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo) = \l  (r13 I:android.support.design.circularreveal.CircularRevealWidget)\l android.support.design.circularreveal.CircularRevealWidget.getRevealInfo():android.support.design.circularreveal.CircularRevealWidget$RevealInfo type: INTERFACE \l0x0048: IGET  (r0 I:float) = \l  (r0 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo)\l android.support.design.circularreveal.CircularRevealWidget.RevealInfo.radius float \l0x004a: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x004c|0x004c: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x004d|0x004d: CONST  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004f: CONST  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0051: MOVE  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0052: MOVE  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0053: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0055: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0057: INVOKE  (r0 I:float) = \l  (r14 I:float)\l  (r15 I:float)\l  (r16 I:float)\l  (r17 I:float)\l  (r18 I:float)\l  (r19 I:float)\l android.support.design.widget.MathUtils.distanceToFurthestCorner(float, float, float, float, float, float):float type: STATIC \l0x005b: INVOKE  (r9 I:android.animation.Animator) = \l  (r13 I:android.support.design.circularreveal.CircularRevealWidget)\l  (r2 I:float)\l  (r3 I:float)\l  (r0 I:float)\l android.support.design.circularreveal.CircularRevealCompat.createCircularReveal(android.support.design.circularreveal.CircularRevealWidget, float, float, float):android.animation.Animator type: STATIC \l0x005f: NEW_INSTANCE  (r0 I:android.support.design.transformation.FabTransformationBehavior$4) =  android.support.design.transformation.FabTransformationBehavior$4 \l0x0061: INVOKE  \l  (r0 I:android.support.design.transformation.FabTransformationBehavior$4)\l  (r12 I:android.support.design.transformation.FabTransformationBehavior)\l  (r13 I:android.support.design.circularreveal.CircularRevealWidget)\l android.support.design.transformation.FabTransformationBehavior.4.\<init\>(android.support.design.transformation.FabTransformationBehavior, android.support.design.circularreveal.CircularRevealWidget):void type: DIRECT \l0x0064: INVOKE  \l  (r9 I:android.animation.Animator)\l  (r0 I:android.animation.Animator$AnimatorListener)\l android.animation.Animator.addListener(android.animation.Animator$AnimatorListener):void type: VIRTUAL \l0x0067: INVOKE  (r4 I:long) = (r11 I:android.support.design.animation.MotionTiming) android.support.design.animation.MotionTiming.getDelay():long type: VIRTUAL \l0x006b: CAST  (r7 I:int) = (int) (r2 I:float) \l0x006c: CAST  (r10 I:int) = (int) (r3 I:float) \l0x006d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x006f: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0071: MOVE  (r2 I:?[long, double]) = (r4 I:?[long, double]) \l0x0072: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0073: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0074: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x0076: INVOKE  \l  (r0 I:android.support.design.transformation.FabTransformationBehavior)\l  (r1 I:android.view.View)\l  (r2 I:long)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:float)\l  (r7 I:java.util.List)\l android.support.design.transformation.FabTransformationBehavior.createPreFillRadialExpansion(android.view.View, long, int, int, float, java.util.List):void type: DIRECT \l0x0079: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x007b|0x007b: INVOKE  (r0 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo) = \l  (r13 I:android.support.design.circularreveal.CircularRevealWidget)\l android.support.design.circularreveal.CircularRevealWidget.getRevealInfo():android.support.design.circularreveal.CircularRevealWidget$RevealInfo type: INTERFACE \l0x007f: IGET  (r6 I:float) = \l  (r0 I:android.support.design.circularreveal.CircularRevealWidget$RevealInfo)\l android.support.design.circularreveal.CircularRevealWidget.RevealInfo.radius float \l0x0081: INVOKE  (r14 I:android.animation.Animator) = \l  (r13 I:android.support.design.circularreveal.CircularRevealWidget)\l  (r2 I:float)\l  (r3 I:float)\l  (r10 I:float)\l android.support.design.circularreveal.CircularRevealCompat.createCircularReveal(android.support.design.circularreveal.CircularRevealWidget, float, float, float):android.animation.Animator type: STATIC \l0x0085: INVOKE  (r4 I:long) = (r11 I:android.support.design.animation.MotionTiming) android.support.design.animation.MotionTiming.getDelay():long type: VIRTUAL \l0x0089: CAST  (r15 I:int) = (int) (r2 I:float) \l0x008a: CAST  (r7 I:int) = (int) (r3 I:float) \l0x008b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x008d: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x008f: MOVE  (r2 I:?[long, double]) = (r4 I:?[long, double]) \l0x0090: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0091: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0092: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0094: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x0096: INVOKE  \l  (r0 I:android.support.design.transformation.FabTransformationBehavior)\l  (r1 I:android.view.View)\l  (r2 I:long)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:float)\l  (r7 I:java.util.List)\l android.support.design.transformation.FabTransformationBehavior.createPreFillRadialExpansion(android.view.View, long, int, int, float, java.util.List):void type: DIRECT \l0x0099: INVOKE  (r2 I:long) = (r11 I:android.support.design.animation.MotionTiming) android.support.design.animation.MotionTiming.getDelay():long type: VIRTUAL \l0x009d: INVOKE  (r4 I:long) = (r11 I:android.support.design.animation.MotionTiming) android.support.design.animation.MotionTiming.getDuration():long type: VIRTUAL \l0x00a1: IGET  (r0 I:android.support.design.animation.MotionSpec) = \l  (r9 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l android.support.design.transformation.FabTransformationBehavior.FabTransformationSpec.timings android.support.design.animation.MotionSpec \l0x00a3: INVOKE  (r6 I:long) = (r0 I:android.support.design.animation.MotionSpec) android.support.design.animation.MotionSpec.getTotalDuration():long type: VIRTUAL \l0x00a7: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00a9: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00aa: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ac: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x00ad: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x00af: INVOKE  \l  (r0 I:android.support.design.transformation.FabTransformationBehavior)\l  (r1 I:android.view.View)\l  (r2 I:long)\l  (r4 I:long)\l  (r6 I:long)\l  (r8 I:int)\l  (r9 I:int)\l  (r10 I:float)\l  (r11 I:java.util.List)\l android.support.design.transformation.FabTransformationBehavior.createPostFillRadialExpansion(android.view.View, long, long, long, int, int, float, java.util.List):void type: DIRECT \l0x00b2: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x00b3|0x00b3: INVOKE  \l  (r15 I:android.support.design.animation.MotionTiming)\l  (r9 I:android.animation.Animator)\l android.support.design.animation.MotionTiming.apply(android.animation.Animator):void type: VIRTUAL \l0x00b6: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x00b8: INVOKE  (r0 I:java.util.List), (r9 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x00bb: INVOKE  (r0 I:android.animation.Animator$AnimatorListener) = \l  (r13 I:android.support.design.circularreveal.CircularRevealWidget)\l android.support.design.circularreveal.CircularRevealCompat.createCircularRevealListener(android.support.design.circularreveal.CircularRevealWidget):android.animation.Animator$AnimatorListener type: STATIC \l0x00bf: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r29 I:?[OBJECT, ARRAY]) \l0x00c1: INVOKE  (r1 I:java.util.List), (r0 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_13 [shape=record,label="{13\:\ 0x00c4|0x00c4: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.design.transformation.FabTransformationBehavior.createExpansionAnimation((r20 'this' I:android.support.design.transformation.FabTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r21 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:java.util.List\<android.animation.Animator\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:java.util.List\<android.animation.Animator$AnimatorListener\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/view\/View;, Landroid\/view\/View;, ZZ, Landroid\/support\/design\/transformation\/FabTransformationBehavior$FabTransformationSpec;, FF, Ljava\/util\/List\<, Landroid\/animation\/Animator;, \>;, Ljava\/util\/List\<, Landroid\/animation\/Animator$AnimatorListener;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

