digraph "CFG forandroid.support.design.transformation.FabTransformationBehavior.createIconFadeAnimation(Landroid\/view\/View;Landroid\/view\/View;ZZLandroid\/support\/design\/transformation\/FabTransformationBehavior$FabTransformationSpec;Ljava\/util\/List;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r6 I:?[OBJECT, ARRAY]) android.support.design.circularreveal.CircularRevealWidget \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0057 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INSTANCE_OF  (r0 I:boolean) = (r5 I:?[OBJECT, ARRAY]) android.widget.ImageView \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0009 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x000a: CHECK_CAST  (r0 I:android.support.design.circularreveal.CircularRevealWidget) = (android.support.design.circularreveal.CircularRevealWidget) (r0 I:?[OBJECT, ARRAY]) \l0x000c: CHECK_CAST  (r5 I:android.widget.ImageView) = (android.widget.ImageView) (r5 I:?[OBJECT, ARRAY]) \l0x000e: INVOKE  (r5 I:android.graphics.drawable.Drawable) = (r5 I:android.widget.ImageView) android.widget.ImageView.getDrawable():android.graphics.drawable.Drawable type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0015 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|0x0015: INVOKE  (r5 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.mutate():android.graphics.drawable.Drawable type: VIRTUAL \l0x0018: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char])\l \l0x001a: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002e \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0023 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: INVOKE  (r5 I:android.graphics.drawable.Drawable), (r1 I:int) android.graphics.drawable.Drawable.setAlpha(int):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|0x0023: SGET  (r7 I:android.util.Property\<android.graphics.drawable.Drawable, java.lang.Integer\>) =  android.support.design.animation.DrawableAlphaProperty.DRAWABLE_ALPHA_COMPAT android.util.Property \l0x0025: NEW_ARRAY  (r8 I:int[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0027: APUT  \l  (r8 I:?[int, float][])\l  (r3 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x0029: INVOKE  (r7 I:android.animation.ObjectAnimator) = \l  (r5 I:java.lang.Object)\l  (r7 I:android.util.Property)\l  (r8 I:int[])\l android.animation.ObjectAnimator.ofInt(java.lang.Object, android.util.Property, int[]):android.animation.ObjectAnimator type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|0x002e: SGET  (r7 I:android.util.Property\<android.graphics.drawable.Drawable, java.lang.Integer\>) =  android.support.design.animation.DrawableAlphaProperty.DRAWABLE_ALPHA_COMPAT android.util.Property \l0x0030: NEW_ARRAY  (r8 I:int[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0032: APUT  \l  (r8 I:?[int, float][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[int, float])\l \l0x0034: INVOKE  (r7 I:android.animation.ObjectAnimator) = \l  (r5 I:java.lang.Object)\l  (r7 I:android.util.Property)\l  (r8 I:int[])\l android.animation.ObjectAnimator.ofInt(java.lang.Object, android.util.Property, int[]):android.animation.ObjectAnimator type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x0038|0x0038: NEW_INSTANCE  (r8 I:android.support.design.transformation.FabTransformationBehavior$2) =  android.support.design.transformation.FabTransformationBehavior$2 \l0x003a: INVOKE  \l  (r8 I:android.support.design.transformation.FabTransformationBehavior$2)\l  (r4 I:android.support.design.transformation.FabTransformationBehavior)\l  (r6 I:android.view.View)\l android.support.design.transformation.FabTransformationBehavior.2.\<init\>(android.support.design.transformation.FabTransformationBehavior, android.view.View):void type: DIRECT \l0x003d: INVOKE  \l  (r7 I:android.animation.ObjectAnimator)\l  (r8 I:android.animation.ValueAnimator$AnimatorUpdateListener)\l android.animation.ObjectAnimator.addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener):void type: VIRTUAL \l0x0040: IGET  (r6 I:android.support.design.animation.MotionSpec) = \l  (r9 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l android.support.design.transformation.FabTransformationBehavior.FabTransformationSpec.timings android.support.design.animation.MotionSpec \l0x0042: CONST_STR  (r8 I:java.lang.String) =  \"iconFade\" \l0x0044: INVOKE  (r6 I:android.support.design.animation.MotionTiming) = \l  (r6 I:android.support.design.animation.MotionSpec)\l  (r8 I:java.lang.String)\l android.support.design.animation.MotionSpec.getTiming(java.lang.String):android.support.design.animation.MotionTiming type: VIRTUAL \l0x0048: INVOKE  \l  (r6 I:android.support.design.animation.MotionTiming)\l  (r7 I:android.animation.Animator)\l android.support.design.animation.MotionTiming.apply(android.animation.Animator):void type: VIRTUAL \l0x004b: INVOKE  (r10 I:java.util.List), (r7 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x004e: NEW_INSTANCE  (r6 I:android.support.design.transformation.FabTransformationBehavior$3) =  android.support.design.transformation.FabTransformationBehavior$3 \l0x0050: INVOKE  \l  (r6 I:android.support.design.transformation.FabTransformationBehavior$3)\l  (r4 I:android.support.design.transformation.FabTransformationBehavior)\l  (r0 I:android.support.design.circularreveal.CircularRevealWidget)\l  (r5 I:android.graphics.drawable.Drawable)\l android.support.design.transformation.FabTransformationBehavior.3.\<init\>(android.support.design.transformation.FabTransformationBehavior, android.support.design.circularreveal.CircularRevealWidget, android.graphics.drawable.Drawable):void type: DIRECT \l0x0053: INVOKE  (r11 I:java.util.List), (r6 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x0056|0x0056: RETURN   \l}"];
Node_16 [shape=record,label="{16\:\ 0x0057|0x0057: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.design.transformation.FabTransformationBehavior.createIconFadeAnimation((r4 'this' I:android.support.design.transformation.FabTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.util.List\<android.animation.Animator\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.util.List\<android.animation.Animator$AnimatorListener\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/view\/View;, Landroid\/view\/View;, ZZ, Landroid\/support\/design\/transformation\/FabTransformationBehavior$FabTransformationSpec;, Ljava\/util\/List\<, Landroid\/animation\/Animator;, \>;, Ljava\/util\/List\<, Landroid\/animation\/Animator$AnimatorListener;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_16[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

