digraph "CFG forandroid.support.design.transformation.FabTransformationBehavior.createElevationAnimation(Landroid\/view\/View;Landroid\/view\/View;ZZLandroid\/support\/design\/transformation\/FabTransformationBehavior$FabTransformationSpec;Ljava\/util\/List;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r8 I:float) = (r3 I:android.view.View) android.support.v4.view.ViewCompat.getElevation(android.view.View):float type: STATIC \l0x0004: INVOKE  (r2 I:float) = (r2 I:android.view.View) android.support.v4.view.ViewCompat.getElevation(android.view.View):float type: STATIC \l0x0008: ARITH  (r8 I:float) = (r8 I:float) \- (r2 I:float) \l0x0009: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0013 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: NEG  (r4 I:float) = (r8 I:float) \l0x0010: INVOKE  (r3 I:android.view.View), (r4 I:float) android.view.View.setTranslationZ(float):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: SGET  (r4 I:android.util.Property) =  android.view.View.TRANSLATION_Z android.util.Property \l0x0015: NEW_ARRAY  (r5 I:float[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0017: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0018: APUT  \l  (r5 I:?[int, float][])\l  (r2 I:?[int, short, byte, char])\l  (r8 I:?[int, float])\l \l0x001a: INVOKE  (r2 I:android.animation.ObjectAnimator) = \l  (r3 I:java.lang.Object)\l  (r4 I:android.util.Property)\l  (r5 I:float[])\l android.animation.ObjectAnimator.ofFloat(java.lang.Object, android.util.Property, float[]):android.animation.ObjectAnimator type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: SGET  (r4 I:android.util.Property) =  android.view.View.TRANSLATION_Z android.util.Property \l0x0021: NEW_ARRAY  (r5 I:float[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0023: NEG  (r8 I:float) = (r8 I:float) \l0x0024: APUT  \l  (r5 I:?[int, float][])\l  (r2 I:?[int, short, byte, char])\l  (r8 I:?[int, float])\l \l0x0026: INVOKE  (r2 I:android.animation.ObjectAnimator) = \l  (r3 I:java.lang.Object)\l  (r4 I:android.util.Property)\l  (r5 I:float[])\l android.animation.ObjectAnimator.ofFloat(java.lang.Object, android.util.Property, float[]):android.animation.ObjectAnimator type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: IGET  (r3 I:android.support.design.animation.MotionSpec) = \l  (r6 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l android.support.design.transformation.FabTransformationBehavior.FabTransformationSpec.timings android.support.design.animation.MotionSpec \l0x002c: CONST_STR  (r4 I:java.lang.String) =  \"elevation\" \l0x002e: INVOKE  (r3 I:android.support.design.animation.MotionTiming) = \l  (r3 I:android.support.design.animation.MotionSpec)\l  (r4 I:java.lang.String)\l android.support.design.animation.MotionSpec.getTiming(java.lang.String):android.support.design.animation.MotionTiming type: VIRTUAL \l0x0032: INVOKE  \l  (r3 I:android.support.design.animation.MotionTiming)\l  (r2 I:android.animation.Animator)\l android.support.design.animation.MotionTiming.apply(android.animation.Animator):void type: VIRTUAL \l0x0035: INVOKE  (r7 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0038|0x0038: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.design.transformation.FabTransformationBehavior.createElevationAnimation((r1 'this' I:android.support.design.transformation.FabTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r2 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.List\<android.animation.Animator\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.util.List\<android.animation.Animator$AnimatorListener\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=21\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/view\/View;, Landroid\/view\/View;, ZZ, Landroid\/support\/design\/transformation\/FabTransformationBehavior$FabTransformationSpec;, Ljava\/util\/List\<, Landroid\/animation\/Animator;, \>;, Ljava\/util\/List\<, Landroid\/animation\/Animator$AnimatorListener;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

