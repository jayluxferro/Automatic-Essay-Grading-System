digraph "CFG forandroid.support.design.transformation.FabTransformationBehavior.layoutDependsOn(Landroid\/support\/design\/widget\/CoordinatorLayout;Landroid\/view\/View;Landroid\/view\/View;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r3.getVisibility() == 8) goto L_0x001e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if ((r4 instanceof android.support.design.widget.FloatingActionButton) == false) goto L_0x001d\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|int r2 = ((android.support.design.widget.FloatingActionButton) r4).getExpandedComponentIdHint()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|if (r2 == 0) goto L_0x001b\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015}"];
Node_7 [shape=record,label="{7\:\ 0x0019|if (r2 != r3.getId()) goto L_?\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|RETURN\l|return false\l}"];
Node_10 [shape=record,label="{10\:\ 0x001e}"];
Node_11 [shape=record,label="{11\:\ 0x0025|throw new java.lang.IllegalStateException(\"This behavior cannot be attached to a GONE view. Set the view to INVISIBLE instead.\")\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean android.support.design.transformation.FabTransformationBehavior.layoutDependsOn((r1v0 'this' android.support.design.transformation.FabTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r2v0 android.support.design.widget.CoordinatorLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.CallSuper, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_10 -> Node_11;
}

