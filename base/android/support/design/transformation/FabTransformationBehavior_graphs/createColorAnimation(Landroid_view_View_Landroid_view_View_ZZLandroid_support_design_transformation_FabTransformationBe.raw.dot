digraph "CFG forandroid.support.design.transformation.FabTransformationBehavior.createColorAnimation(Landroid\/view\/View;Landroid\/view\/View;ZZLandroid\/support\/design\/transformation\/FabTransformationBehavior$FabTransformationSpec;Ljava\/util\/List;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r9 I:boolean) = (r4 I:?[OBJECT, ARRAY]) android.support.design.circularreveal.CircularRevealWidget \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: CHECK_CAST  (r4 I:android.support.design.circularreveal.CircularRevealWidget) = (android.support.design.circularreveal.CircularRevealWidget) (r4 I:?[OBJECT, ARRAY]) \l0x0007: INVOKE  (r3 I:int) = \l  (r2 I:android.support.design.transformation.FabTransformationBehavior)\l  (r3 I:android.view.View)\l android.support.design.transformation.FabTransformationBehavior.getBackgroundTint(android.view.View):int type: DIRECT \l0x000b: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (16777215(0xffffff, float:2.3509886E\-38) ?[int, float, short, byte, char])\l \l0x000e: ARITH  (r9 I:?[int, boolean, short, byte, char]) = (r9 I:?[int, boolean, short, byte, char]) & (r3 I:?[int, boolean, short, byte, char]) \l0x000f: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0023 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0018 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INVOKE  \l  (r4 I:android.support.design.circularreveal.CircularRevealWidget)\l  (r3 I:int)\l android.support.design.circularreveal.CircularRevealWidget.setCircularRevealScrimColor(int):void type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: SGET  (r3 I:android.util.Property\<android.support.design.circularreveal.CircularRevealWidget, java.lang.Integer\>) =  android.support.design.circularreveal.CircularRevealWidget.CircularRevealScrimColorProperty.CIRCULAR_REVEAL_SCRIM_COLOR android.util.Property \l0x001a: NEW_ARRAY  (r5 I:int[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x001c: APUT  \l  (r5 I:?[int, float][])\l  (r0 I:?[int, short, byte, char])\l  (r9 I:?[int, float])\l \l0x001e: INVOKE  (r3 I:android.animation.ObjectAnimator) = \l  (r4 I:java.lang.Object)\l  (r3 I:android.util.Property)\l  (r5 I:int[])\l android.animation.ObjectAnimator.ofInt(java.lang.Object, android.util.Property, int[]):android.animation.ObjectAnimator type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: SGET  (r5 I:android.util.Property\<android.support.design.circularreveal.CircularRevealWidget, java.lang.Integer\>) =  android.support.design.circularreveal.CircularRevealWidget.CircularRevealScrimColorProperty.CIRCULAR_REVEAL_SCRIM_COLOR android.util.Property \l0x0025: NEW_ARRAY  (r6 I:int[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0027: APUT  \l  (r6 I:?[int, float][])\l  (r0 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x0029: INVOKE  (r3 I:android.animation.ObjectAnimator) = \l  (r4 I:java.lang.Object)\l  (r5 I:android.util.Property)\l  (r6 I:int[])\l android.animation.ObjectAnimator.ofInt(java.lang.Object, android.util.Property, int[]):android.animation.ObjectAnimator type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: INVOKE  (r4 I:android.support.design.animation.ArgbEvaluatorCompat) =  android.support.design.animation.ArgbEvaluatorCompat.getInstance():android.support.design.animation.ArgbEvaluatorCompat type: STATIC \l0x0031: INVOKE  \l  (r3 I:android.animation.ObjectAnimator)\l  (r4 I:android.animation.TypeEvaluator)\l android.animation.ObjectAnimator.setEvaluator(android.animation.TypeEvaluator):void type: VIRTUAL \l0x0034: IGET  (r4 I:android.support.design.animation.MotionSpec) = \l  (r7 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l android.support.design.transformation.FabTransformationBehavior.FabTransformationSpec.timings android.support.design.animation.MotionSpec \l0x0036: CONST_STR  (r5 I:java.lang.String) =  \"color\" \l0x0038: INVOKE  (r4 I:android.support.design.animation.MotionTiming) = \l  (r4 I:android.support.design.animation.MotionSpec)\l  (r5 I:java.lang.String)\l android.support.design.animation.MotionSpec.getTiming(java.lang.String):android.support.design.animation.MotionTiming type: VIRTUAL \l0x003c: INVOKE  \l  (r4 I:android.support.design.animation.MotionTiming)\l  (r3 I:android.animation.Animator)\l android.support.design.animation.MotionTiming.apply(android.animation.Animator):void type: VIRTUAL \l0x003f: INVOKE  (r8 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0042|0x0042: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.design.transformation.FabTransformationBehavior.createColorAnimation((r2 'this' I:android.support.design.transformation.FabTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.util.List\<android.animation.Animator\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.util.List\<android.animation.Animator$AnimatorListener\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/view\/View;, Landroid\/view\/View;, ZZ, Landroid\/support\/design\/transformation\/FabTransformationBehavior$FabTransformationSpec;, Ljava\/util\/List\<, Landroid\/animation\/Animator;, \>;, Ljava\/util\/List\<, Landroid\/animation\/Animator$AnimatorListener;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

