digraph "CFG forandroid.support.design.transformation.FabTransformationBehavior.onCreateExpandedStateChangeAnimation(Landroid\/view\/View;Landroid\/view\/View;ZZ)Landroid\/animation\/AnimatorSet;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0001: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  (r0 I:android.content.Context) = (r17 I:android.view.View) android.view.View.getContext():android.content.Context type: VIRTUAL \l0x0007: INVOKE  (r12 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec) = \l  (r15 I:android.support.design.transformation.FabTransformationBehavior)\l  (r0 I:android.content.Context)\l  (r11 I:boolean)\l android.support.design.transformation.FabTransformationBehavior.onCreateMotionSpec(android.content.Context, boolean):android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec type: VIRTUAL \l0x000b: NEW_INSTANCE  (r13 I:java.util.ArrayList) =  java.util.ArrayList \l0x000d: INVOKE  (r13 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0010: NEW_INSTANCE  (r14 I:java.util.ArrayList) =  java.util.ArrayList \l0x0012: INVOKE  (r14 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0015: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0017: CONST  (r1 I:?[int, float, short, byte, char]) = (21 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:3:0x002a \l}"];
Node_2 [shape=record,label="{2\:\ 0x001b|0x001b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x001c: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x001e: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0020: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0022: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0024: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0025: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0026: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0027: INVOKE  \l  (r0 I:android.support.design.transformation.FabTransformationBehavior)\l  (r1 I:android.view.View)\l  (r2 I:android.view.View)\l  (r3 I:boolean)\l  (r4 I:boolean)\l  (r5 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l  (r6 I:java.util.List)\l  (r7 I:java.util.List)\l android.support.design.transformation.FabTransformationBehavior.createElevationAnimation(android.view.View, android.view.View, boolean, boolean, android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec, java.util.List, java.util.List):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x002a|0x002a: IGET  (r9 I:android.graphics.RectF) = \l  (r10 I:android.support.design.transformation.FabTransformationBehavior)\l android.support.design.transformation.FabTransformationBehavior.tmpRectF1 android.graphics.RectF \l0x002c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x002d: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x002f: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0031: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0033: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0035: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0036: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0037: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0038: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0039: INVOKE  \l  (r0 I:android.support.design.transformation.FabTransformationBehavior)\l  (r1 I:android.view.View)\l  (r2 I:android.view.View)\l  (r3 I:boolean)\l  (r4 I:boolean)\l  (r5 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l  (r6 I:java.util.List)\l  (r7 I:java.util.List)\l  (r8 I:android.graphics.RectF)\l android.support.design.transformation.FabTransformationBehavior.createTranslationAnimation(android.view.View, android.view.View, boolean, boolean, android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec, java.util.List, java.util.List, android.graphics.RectF):void type: DIRECT \l0x003c: INVOKE  (r8 I:float) = (r9 I:android.graphics.RectF) android.graphics.RectF.width():float type: VIRTUAL \l0x0040: INVOKE  (r9 I:float) = (r9 I:android.graphics.RectF) android.graphics.RectF.height():float type: VIRTUAL \l0x0044: INVOKE  \l  (r0 I:android.support.design.transformation.FabTransformationBehavior)\l  (r1 I:android.view.View)\l  (r2 I:android.view.View)\l  (r3 I:boolean)\l  (r4 I:boolean)\l  (r5 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l  (r6 I:java.util.List)\l  (r7 I:java.util.List)\l android.support.design.transformation.FabTransformationBehavior.createIconFadeAnimation(android.view.View, android.view.View, boolean, boolean, android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec, java.util.List, java.util.List):void type: DIRECT \l0x0047: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0048: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0049: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x004a: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x004b: INVOKE  \l  (r0 I:android.support.design.transformation.FabTransformationBehavior)\l  (r1 I:android.view.View)\l  (r2 I:android.view.View)\l  (r3 I:boolean)\l  (r4 I:boolean)\l  (r5 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:java.util.List)\l  (r9 I:java.util.List)\l android.support.design.transformation.FabTransformationBehavior.createExpansionAnimation(android.view.View, android.view.View, boolean, boolean, android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec, float, float, java.util.List, java.util.List):void type: DIRECT \l0x004e: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x004f: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0050: INVOKE  \l  (r0 I:android.support.design.transformation.FabTransformationBehavior)\l  (r1 I:android.view.View)\l  (r2 I:android.view.View)\l  (r3 I:boolean)\l  (r4 I:boolean)\l  (r5 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l  (r6 I:java.util.List)\l  (r7 I:java.util.List)\l android.support.design.transformation.FabTransformationBehavior.createColorAnimation(android.view.View, android.view.View, boolean, boolean, android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec, java.util.List, java.util.List):void type: DIRECT \l0x0053: INVOKE  \l  (r0 I:android.support.design.transformation.FabTransformationBehavior)\l  (r1 I:android.view.View)\l  (r2 I:android.view.View)\l  (r3 I:boolean)\l  (r4 I:boolean)\l  (r5 I:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec)\l  (r6 I:java.util.List)\l  (r7 I:java.util.List)\l android.support.design.transformation.FabTransformationBehavior.createChildrenFadeAnimation(android.view.View, android.view.View, boolean, boolean, android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec, java.util.List, java.util.List):void type: DIRECT \l0x0056: NEW_INSTANCE  (r0 I:android.animation.AnimatorSet) =  android.animation.AnimatorSet \l0x0058: INVOKE  (r0 I:android.animation.AnimatorSet) android.animation.AnimatorSet.\<init\>():void type: DIRECT \l0x005b: INVOKE  \l  (r0 I:android.animation.AnimatorSet)\l  (r13 I:java.util.List)\l android.support.design.animation.AnimatorSetCompat.playTogether(android.animation.AnimatorSet, java.util.List):void type: STATIC \l0x005e: NEW_INSTANCE  (r1 I:android.support.design.transformation.FabTransformationBehavior$1) =  android.support.design.transformation.FabTransformationBehavior$1 \l0x0060: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0062: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0064: INVOKE  \l  (r1 I:android.support.design.transformation.FabTransformationBehavior$1)\l  (r15 I:android.support.design.transformation.FabTransformationBehavior)\l  (r11 I:boolean)\l  (r3 I:android.view.View)\l  (r2 I:android.view.View)\l android.support.design.transformation.FabTransformationBehavior.1.\<init\>(android.support.design.transformation.FabTransformationBehavior, boolean, android.view.View, android.view.View):void type: DIRECT \l0x0067: INVOKE  \l  (r0 I:android.animation.AnimatorSet)\l  (r1 I:android.animation.Animator$AnimatorListener)\l android.animation.AnimatorSet.addListener(android.animation.Animator$AnimatorListener):void type: VIRTUAL \l0x006a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006b: INVOKE  (r2 I:int) = (r14 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x006f|0x006f: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:6:0x007d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0071|0x0071: INVOKE  (r3 I:java.lang.Object) = (r14 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0075: CHECK_CAST  (r3 I:android.animation.Animator$AnimatorListener) = (android.animation.Animator$AnimatorListener) (r3 I:?[OBJECT, ARRAY]) \l0x0077: INVOKE  \l  (r0 I:android.animation.AnimatorSet)\l  (r3 I:android.animation.Animator$AnimatorListener)\l android.animation.AnimatorSet.addListener(android.animation.Animator$AnimatorListener):void type: VIRTUAL \l0x007a: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x007d|0x007d: RETURN  (r0 I:android.animation.AnimatorSet) \l}"];
MethodNode[shape=record,label="{protected android.animation.AnimatorSet android.support.design.transformation.FabTransformationBehavior.onCreateExpandedStateChangeAnimation((r15 'this' I:android.support.design.transformation.FabTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r16 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_4;
}

