digraph "CFG forandroid.support.design.transformation.FabTransformationSheetBehavior.updateImportantForAccessibility(Landroid\/view\/View;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.view.ViewParent) = (r9 I:android.view.View) android.view.View.getParent():android.view.ViewParent type: VIRTUAL \l0x0004: INSTANCE_OF  (r1 I:boolean) = (r0 I:?[OBJECT, ARRAY]) android.support.design.widget.CoordinatorLayout \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: CHECK_CAST  (r0 I:android.support.design.widget.CoordinatorLayout) = (android.support.design.widget.CoordinatorLayout) (r0 I:?[OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:int) = (r0 I:android.support.design.widget.CoordinatorLayout) android.support.design.widget.CoordinatorLayout.getChildCount():int type: VIRTUAL \l0x000f: SGET  (r2 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0011: CONST  (r3 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r2 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:7:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001e \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: NEW_INSTANCE  (r2 I:java.util.HashMap) =  java.util.HashMap \l0x0019: INVOKE  (r2 I:java.util.HashMap), (r1 I:int) java.util.HashMap.\<init\>(int):void type: DIRECT \l0x001c: IPUT  \l  (r2 I:java.util.Map\<android.view.View, java.lang.Integer\>)\l  (r8 I:android.support.design.transformation.FabTransformationSheetBehavior)\l android.support.design.transformation.FabTransformationSheetBehavior.importantForAccessibilityMap java.util.Map \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001f: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: IF  (r4 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:29:0x007a \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: INVOKE  (r5 I:android.view.View) = \l  (r0 I:android.support.design.widget.CoordinatorLayout)\l  (r4 I:int)\l android.support.design.widget.CoordinatorLayout.getChildAt(int):android.view.View type: VIRTUAL \l0x0026: INVOKE  (r6 I:android.view.ViewGroup$LayoutParams) = (r5 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x002a: INSTANCE_OF  (r6 I:boolean) = (r6 I:?[OBJECT, ARRAY]) android.support.design.widget.CoordinatorLayout$LayoutParams \l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003e \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: INVOKE  (r6 I:android.view.ViewGroup$LayoutParams) = (r5 I:android.view.View) android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams type: VIRTUAL \l0x0032: CHECK_CAST  (r6 I:android.support.design.widget.CoordinatorLayout$LayoutParams) = (android.support.design.widget.CoordinatorLayout$LayoutParams) (r6 I:?[OBJECT, ARRAY]) \l0x0034: INVOKE  (r6 I:android.support.design.widget.CoordinatorLayout$Behavior) = \l  (r6 I:android.support.design.widget.CoordinatorLayout$LayoutParams)\l android.support.design.widget.CoordinatorLayout.LayoutParams.getBehavior():android.support.design.widget.CoordinatorLayout$Behavior type: VIRTUAL \l0x0038: INSTANCE_OF  (r6 I:boolean) = (r6 I:?[OBJECT, ARRAY]) android.support.design.transformation.FabTransformationScrimBehavior \l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|0x003a: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003e \l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|0x003c: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|0x003e: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|0x003f: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0077 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0041|0x0041: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0044 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0044|0x0044: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0062 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0046|0x0046: IGET  (r6 I:java.util.Map\<android.view.View, java.lang.Integer\>) = \l  (r8 I:android.support.design.transformation.FabTransformationSheetBehavior)\l android.support.design.transformation.FabTransformationSheetBehavior.importantForAccessibilityMap java.util.Map \l}"];
Node_20 [shape=record,label="{20\:\ 0x0048|0x0048: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0077 \l}"];
Node_21 [shape=record,label="{21\:\ 0x004a|0x004a: IGET  (r6 I:java.util.Map\<android.view.View, java.lang.Integer\>) = \l  (r8 I:android.support.design.transformation.FabTransformationSheetBehavior)\l android.support.design.transformation.FabTransformationSheetBehavior.importantForAccessibilityMap java.util.Map \l0x004c: INVOKE  (r6 I:boolean) = (r6 I:java.util.Map), (r5 I:java.lang.Object) java.util.Map.containsKey(java.lang.Object):boolean type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x0050|0x0050: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0077 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0052|0x0052: IGET  (r6 I:java.util.Map\<android.view.View, java.lang.Integer\>) = \l  (r8 I:android.support.design.transformation.FabTransformationSheetBehavior)\l android.support.design.transformation.FabTransformationSheetBehavior.importantForAccessibilityMap java.util.Map \l0x0054: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.Map), (r5 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0058: CHECK_CAST  (r6 I:java.lang.Integer) = (java.lang.Integer) (r6 I:?[OBJECT, ARRAY]) \l0x005a: INVOKE  (r6 I:int) = (r6 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x005e: INVOKE  (r5 I:android.view.View), (r6 I:int) android.support.v4.view.ViewCompat.setImportantForAccessibility(android.view.View, int):void type: STATIC \l}"];
Node_24 [shape=record,label="{24\:\ 0x0062|0x0062: SGET  (r6 I:int) =  android.os.Build.VERSION.SDK_INT int \l}"];
Node_25 [shape=record,label="{25\:\ 0x0064|0x0064: IF  (r6 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:27:0x0073 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0066|0x0066: IGET  (r6 I:java.util.Map\<android.view.View, java.lang.Integer\>) = \l  (r8 I:android.support.design.transformation.FabTransformationSheetBehavior)\l android.support.design.transformation.FabTransformationSheetBehavior.importantForAccessibilityMap java.util.Map \l0x0068: INVOKE  (r7 I:int) = (r5 I:android.view.View) android.view.View.getImportantForAccessibility():int type: VIRTUAL \l0x006c: INVOKE  (r7 I:java.lang.Integer) = (r7 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0070: INVOKE  \l  (r6 I:java.util.Map)\l  (r5 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_27 [shape=record,label="{27\:\ 0x0073|0x0073: CONST  (r6 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0074: INVOKE  (r5 I:android.view.View), (r6 I:int) android.support.v4.view.ViewCompat.setImportantForAccessibility(android.view.View, int):void type: STATIC \l}"];
Node_28 [shape=record,label="{28\:\ 0x0077|0x0077: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_29 [shape=record,label="{29\:\ 0x007a|0x007a: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x007f \l}"];
Node_30 [shape=record,label="{30\:\ 0x007c|0x007c: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007d: IPUT  \l  (r9 I:java.util.Map\<android.view.View, java.lang.Integer\>)\l  (r8 I:android.support.design.transformation.FabTransformationSheetBehavior)\l android.support.design.transformation.FabTransformationSheetBehavior.importantForAccessibilityMap java.util.Map \l}"];
Node_31 [shape=record,label="{31\:\ 0x007f|0x007f: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.design.transformation.FabTransformationSheetBehavior.updateImportantForAccessibility((r8 'this' I:android.support.design.transformation.FabTransformationSheetBehavior A[IMMUTABLE_TYPE, THIS]), (r9 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_29;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_28;
Node_16 -> Node_18;
Node_16 -> Node_28[style=dashed];
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_28;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_28;
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_8;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
}

