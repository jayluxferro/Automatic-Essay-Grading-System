digraph "CFG forandroid.support.graphics.drawable.ArgbEvaluator.evaluate(FLjava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1166897571 {
label = "R(2:0|1)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r13 = ((java.lang.Integer) r13).intValue()\lfloat float r0 = ((float) ((r13 \>\> 24) & 255)) \/ 255.0f\lint int r14 = ((java.lang.Integer) r14).intValue()\lfloat float r2 = (float) java.lang.Math.pow((double) (((float) ((r13 \>\> 16) & 255)) \/ 255.0f), 2.2d)\lfloat float r3 = (float) java.lang.Math.pow((double) (((float) ((r13 \>\> 8) & 255)) \/ 255.0f), 2.2d)\lfloat float r13 = (float) java.lang.Math.pow((double) (((float) (r13 & 255)) \/ 255.0f), 2.2d)\lfloat float r5 = (float) java.lang.Math.pow((double) (((float) ((r14 \>\> 16) & 255)) \/ 255.0f), 2.2d)\lfloat float r13 = r13 + (r12 * (((float) java.lang.Math.pow((double) (((float) (r14 & 255)) \/ 255.0f), 2.2d)) \- r13))\l}"];
Node_1 [shape=record,label="{1\:\ 0x00af|RETURN\l|return java.lang.Integer.valueOf((java.lang.Math.round(((float) java.lang.Math.pow((double) (r2 + ((r5 \- r2) * r12)), 0.45454545454545453d)) * 255.0f) \<\< 16) \| (java.lang.Math.round((r0 + (((((float) ((r14 \>\> 24) & 255)) \/ 255.0f) \- r0) * r12)) * 255.0f) \<\< 24) \| (java.lang.Math.round(((float) java.lang.Math.pow((double) (r3 + ((((float) java.lang.Math.pow((double) (((float) ((r14 \>\> 8) & 255)) \/ 255.0f), 2.2d)) \- r3) * r12)), 0.45454545454545453d)) * 255.0f) \<\< 8) \| java.lang.Math.round(((float) java.lang.Math.pow((double) r13, 0.45454545454545453d)) * 255.0f))\l}"];
}
MethodNode[shape=record,label="{public java.lang.Object android.support.graphics.drawable.ArgbEvaluator.evaluate((r11v0 'this' android.support.graphics.drawable.ArgbEvaluator A[IMMUTABLE_TYPE, THIS]), (r12v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

