digraph "CFG forandroid.support.graphics.drawable.VectorDrawableCompat.VFullPath.updateStateFromTypedArray(Landroid\/content\/res\/TypedArray;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/content\/res\/Resources$Theme;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IPUT  \l  (r0 I:int[])\l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mThemeAttrs int[] \l0x0003: CONST_STR  (r0 I:java.lang.String) =  \"pathData\" \l0x0005: INVOKE  (r0 I:boolean) = \l  (r9 I:org.xmlpull.v1.XmlPullParser)\l  (r0 I:java.lang.String)\l android.support.v4.content.res.TypedArrayUtils.hasAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: INVOKE  (r0 I:java.lang.String) = (r8 I:android.content.res.TypedArray), (r0 I:int) android.content.res.TypedArray.getString(int):java.lang.String type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0015 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IPUT  \l  (r0 I:java.lang.String)\l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mPathName java.lang.String \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0016: INVOKE  (r0 I:java.lang.String) = (r8 I:android.content.res.TypedArray), (r0 I:int) android.content.res.TypedArray.getString(int):java.lang.String type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0022 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: INVOKE  (r0 I:android.support.v4.graphics.PathParser$PathDataNode[]) = (r0 I:java.lang.String) android.support.v4.graphics.PathParser.createNodesFromPathData(java.lang.String):android.support.v4.graphics.PathParser$PathDataNode[] type: STATIC \l0x0020: IPUT  \l  (r0 I:android.support.v4.graphics.PathParser$PathDataNode[])\l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mNodes android.support.v4.graphics.PathParser$PathDataNode[] \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: CONST_STR  (r4 I:java.lang.String) =  \"fillColor\" \l0x0024: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0025: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0026: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0027: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0028: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0029: INVOKE  (r0 I:android.support.v4.content.res.ComplexColorCompat) = \l  (r1 I:android.content.res.TypedArray)\l  (r2 I:org.xmlpull.v1.XmlPullParser)\l  (r3 I:android.content.res.Resources$Theme)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedComplexColor(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme, java.lang.String, int, int):android.support.v4.content.res.ComplexColorCompat type: STATIC \l0x002d: IPUT  \l  (r0 I:android.support.v4.content.res.ComplexColorCompat)\l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mFillColor android.support.v4.content.res.ComplexColorCompat \l0x002f: CONST_STR  (r0 I:java.lang.String) =  \"fillAlpha\" \l0x0031: CONST  (r1 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l0x0033: IGET  (r2 I:float) = \l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mFillAlpha float \l0x0035: INVOKE  (r0 I:float) = \l  (r8 I:android.content.res.TypedArray)\l  (r9 I:org.xmlpull.v1.XmlPullParser)\l  (r0 I:java.lang.String)\l  (r1 I:int)\l  (r2 I:float)\l android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, float):float type: STATIC \l0x0039: IPUT  \l  (r0 I:float)\l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mFillAlpha float \l0x003b: CONST_STR  (r0 I:java.lang.String) =  \"strokeLineCap\" \l0x003d: CONST  (r1 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x003f: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0040: INVOKE  (r0 I:int) = \l  (r8 I:android.content.res.TypedArray)\l  (r9 I:org.xmlpull.v1.XmlPullParser)\l  (r0 I:java.lang.String)\l  (r1 I:int)\l  (r2 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int):int type: STATIC \l0x0044: IGET  (r1 I:android.graphics.Paint$Cap) = \l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeLineCap android.graphics.Paint$Cap \l0x0046: INVOKE  (r0 I:android.graphics.Paint$Cap) = \l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l  (r0 I:int)\l  (r1 I:android.graphics.Paint$Cap)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.getStrokeLineCap(int, android.graphics.Paint$Cap):android.graphics.Paint$Cap type: DIRECT \l0x004a: IPUT  \l  (r0 I:android.graphics.Paint$Cap)\l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeLineCap android.graphics.Paint$Cap \l0x004c: CONST_STR  (r0 I:java.lang.String) =  \"strokeLineJoin\" \l0x004e: CONST  (r1 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l0x0050: INVOKE  (r0 I:int) = \l  (r8 I:android.content.res.TypedArray)\l  (r9 I:org.xmlpull.v1.XmlPullParser)\l  (r0 I:java.lang.String)\l  (r1 I:int)\l  (r2 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int):int type: STATIC \l0x0054: IGET  (r1 I:android.graphics.Paint$Join) = \l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeLineJoin android.graphics.Paint$Join \l0x0056: INVOKE  (r0 I:android.graphics.Paint$Join) = \l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l  (r0 I:int)\l  (r1 I:android.graphics.Paint$Join)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.getStrokeLineJoin(int, android.graphics.Paint$Join):android.graphics.Paint$Join type: DIRECT \l0x005a: IPUT  \l  (r0 I:android.graphics.Paint$Join)\l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeLineJoin android.graphics.Paint$Join \l0x005c: CONST_STR  (r0 I:java.lang.String) =  \"strokeMiterLimit\" \l0x005e: CONST  (r1 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0060: IGET  (r2 I:float) = \l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeMiterlimit float \l0x0062: INVOKE  (r0 I:float) = \l  (r8 I:android.content.res.TypedArray)\l  (r9 I:org.xmlpull.v1.XmlPullParser)\l  (r0 I:java.lang.String)\l  (r1 I:int)\l  (r2 I:float)\l android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, float):float type: STATIC \l0x0066: IPUT  \l  (r0 I:float)\l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeMiterlimit float \l0x0068: CONST_STR  (r4 I:java.lang.String) =  \"strokeColor\" \l0x006a: CONST  (r5 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x006b: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x006c: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x006d: INVOKE  (r10 I:android.support.v4.content.res.ComplexColorCompat) = \l  (r1 I:android.content.res.TypedArray)\l  (r2 I:org.xmlpull.v1.XmlPullParser)\l  (r3 I:android.content.res.Resources$Theme)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedComplexColor(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme, java.lang.String, int, int):android.support.v4.content.res.ComplexColorCompat type: STATIC \l0x0071: IPUT  \l  (r10 I:android.support.v4.content.res.ComplexColorCompat)\l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeColor android.support.v4.content.res.ComplexColorCompat \l0x0073: CONST_STR  (r10 I:java.lang.String) =  \"strokeAlpha\" \l0x0075: CONST  (r0 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l0x0077: IGET  (r1 I:float) = \l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeAlpha float \l0x0079: INVOKE  (r10 I:float) = \l  (r8 I:android.content.res.TypedArray)\l  (r9 I:org.xmlpull.v1.XmlPullParser)\l  (r10 I:java.lang.String)\l  (r0 I:int)\l  (r1 I:float)\l android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, float):float type: STATIC \l0x007d: IPUT  \l  (r10 I:float)\l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeAlpha float \l0x007f: CONST_STR  (r10 I:java.lang.String) =  \"strokeWidth\" \l0x0081: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0082: IGET  (r1 I:float) = \l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeWidth float \l0x0084: INVOKE  (r10 I:float) = \l  (r8 I:android.content.res.TypedArray)\l  (r9 I:org.xmlpull.v1.XmlPullParser)\l  (r10 I:java.lang.String)\l  (r0 I:int)\l  (r1 I:float)\l android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, float):float type: STATIC \l0x0088: IPUT  \l  (r10 I:float)\l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeWidth float \l0x008a: CONST_STR  (r10 I:java.lang.String) =  \"trimPathEnd\" \l0x008c: CONST  (r0 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x008d: IGET  (r1 I:float) = \l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mTrimPathEnd float \l0x008f: INVOKE  (r10 I:float) = \l  (r8 I:android.content.res.TypedArray)\l  (r9 I:org.xmlpull.v1.XmlPullParser)\l  (r10 I:java.lang.String)\l  (r0 I:int)\l  (r1 I:float)\l android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, float):float type: STATIC \l0x0093: IPUT  \l  (r10 I:float)\l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mTrimPathEnd float \l0x0095: CONST_STR  (r10 I:java.lang.String) =  \"trimPathOffset\" \l0x0097: CONST  (r0 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l0x0098: IGET  (r1 I:float) = \l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mTrimPathOffset float \l0x009a: INVOKE  (r10 I:float) = \l  (r8 I:android.content.res.TypedArray)\l  (r9 I:org.xmlpull.v1.XmlPullParser)\l  (r10 I:java.lang.String)\l  (r0 I:int)\l  (r1 I:float)\l android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, float):float type: STATIC \l0x009e: IPUT  \l  (r10 I:float)\l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mTrimPathOffset float \l0x00a0: CONST_STR  (r10 I:java.lang.String) =  \"trimPathStart\" \l0x00a2: CONST  (r0 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x00a3: IGET  (r1 I:float) = \l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mTrimPathStart float \l0x00a5: INVOKE  (r10 I:float) = \l  (r8 I:android.content.res.TypedArray)\l  (r9 I:org.xmlpull.v1.XmlPullParser)\l  (r10 I:java.lang.String)\l  (r0 I:int)\l  (r1 I:float)\l android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, float):float type: STATIC \l0x00a9: IPUT  \l  (r10 I:float)\l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mTrimPathStart float \l0x00ab: CONST_STR  (r10 I:java.lang.String) =  \"fillType\" \l0x00ad: CONST  (r0 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l0x00af: IGET  (r1 I:int) = \l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mFillRule int \l0x00b1: INVOKE  (r8 I:int) = \l  (r8 I:android.content.res.TypedArray)\l  (r9 I:org.xmlpull.v1.XmlPullParser)\l  (r10 I:java.lang.String)\l  (r0 I:int)\l  (r1 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int):int type: STATIC \l0x00b5: IPUT  \l  (r8 I:int)\l  (r7 I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath)\l android.support.graphics.drawable.VectorDrawableCompat.VFullPath.mFillRule int \l}"];
Node_10 [shape=record,label="{10\:\ 0x00b7|0x00b7: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.support.graphics.drawable.VectorDrawableCompat.VFullPath.updateStateFromTypedArray((r7 'this' I:android.support.graphics.drawable.VectorDrawableCompat$VFullPath A[IMMUTABLE_TYPE, THIS]), (r8 I:android.content.res.TypedArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.content.res.Resources$Theme A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

