digraph "CFG forandroid.support.graphics.drawable.PathInterpolatorCompat.initPath(Landroid\/graphics\/Path;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = 0\landroid.graphics.PathMeasure r0 = new android.graphics.PathMeasure(r11, false)\lfloat r11 = r0.getLength()\lint r2 = java.lang.Math.min(MAX_NUM_POINTS, ((int) (r11 \/ PRECISION)) + 1)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|if (r2 \<= 0) goto L_0x00ff\l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|r10.f21mX = new float[r2]\lr10.f22mY = new float[r2]\lfloat[] r4 = new float[2]\lr5 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0026|LOOP_START\lPHI: r5 \l  PHI: (r5v1 int) = (r5v0 int), (r5v4 int) binds: [B:2:0x001a, B:4:0x0028] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0026\-\>B:4:0x0028\l|if (r5 \>= r2) goto L_0x0042\l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|LOOP_END\lLOOP:0: B:3:0x0026\-\>B:4:0x0028\l|r0.getPosTan((((float) r5) * r11) \/ ((float) (r2 + \-1)), r4, (float[]) null)\lr10.f21mX[r5] = r4[0]\lr10.f22mY[r5] = r4[1]\lint r5 = r5 + 1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0042}"];
Node_6 [shape=record,label="{6\:\ 0x0052|if ((((double) java.lang.Math.abs(r10.f21mX[0])) \> 1.0E\-5d ? 1 : (((double) java.lang.Math.abs(r10.f21mX[0])) == 1.0E\-5d ? 0 : \-1)) \> 0) goto L_0x00bf\l}"];
Node_7 [shape=record,label="{7\:\ 0x0054}"];
Node_8 [shape=record,label="{8\:\ 0x005f|if ((((double) java.lang.Math.abs(r10.f22mY[0])) \> 1.0E\-5d ? 1 : (((double) java.lang.Math.abs(r10.f22mY[0])) == 1.0E\-5d ? 0 : \-1)) \> 0) goto L_0x00bf\l}"];
Node_9 [shape=record,label="{9\:\ 0x0061|int r4 = r2 + \-1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0071|if ((((double) java.lang.Math.abs(r10.f21mX[r4] \- 1.0f)) \> 1.0E\-5d ? 1 : (((double) java.lang.Math.abs(r10.f21mX[r4] \- 1.0f)) == 1.0E\-5d ? 0 : \-1)) \> 0) goto L_0x00bf\l}"];
Node_11 [shape=record,label="{11\:\ 0x0073}"];
Node_12 [shape=record,label="{12\:\ 0x007f|if ((((double) java.lang.Math.abs(r10.f22mY[r4] \- 1.0f)) \> 1.0E\-5d ? 1 : (((double) java.lang.Math.abs(r10.f22mY[r4] \- 1.0f)) == 1.0E\-5d ? 0 : \-1)) \> 0) goto L_0x00bf\l}"];
Node_13 [shape=record,label="{13\:\ 0x0081|r11 = 0\lr3 = 0.0f\l}"];
Node_14 [shape=record,label="{14\:\ 0x0084|LOOP_START\lPHI: r1 r3 r11 \l  PHI: (r1v9 int) = (r1v0 int), (r1v11 int) binds: [B:13:0x0081, B:17:0x0090] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 float) = (r3v1 float), (r3v5 float) binds: [B:13:0x0081, B:17:0x0090] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v24 int) = (r11v23 int), (r11v29 int) binds: [B:13:0x0081, B:17:0x0090] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:14:0x0084\-\>B:17:0x0090\l|if (r1 \>= r2) goto L_0x00b0\l}"];
Node_15 [shape=record,label="{15\:\ 0x0086|int r5 = r11 + 1\lr11 = r10.f21mX[r11]\l}"];
Node_16 [shape=record,label="{16\:\ 0x008e|if ((r11 \> r3 ? 1 : (r11 == r3 ? 0 : \-1)) \< 0) goto L_0x0099\l}"];
Node_17 [shape=record,label="{17\:\ 0x0090|LOOP_END\lLOOP:1: B:14:0x0084\-\>B:17:0x0090\l|r10.f21mX[r1] = r11\lint r1 = r1 + 1\lr3 = r11\lr11 = r5\l}"];
Node_18 [shape=record,label="{18\:\ 0x0099|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"The Path cannot loop back on itself, x :\")\lr1.append(r11)\l}"];
Node_19 [shape=record,label="{19\:\ 0x00af|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
Node_20 [shape=record,label="{20\:\ 0x00b0}"];
Node_21 [shape=record,label="{21\:\ 0x00b4|if (r0.nextContour() != false) goto L_0x00b7\l}"];
Node_22 [shape=record,label="{22\:\ 0x00b6|RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ 0x00b7}"];
Node_24 [shape=record,label="{24\:\ 0x00be|throw new java.lang.IllegalArgumentException(\"The Path should be continuous, can't have 2+ contours\")\l}"];
Node_25 [shape=record,label="{25\:\ 0x00bf|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"The Path must start at (0,0) and end at (1,1) start: \")\lr0.append(r10.f21mX[0])\lr0.append(\",\")\lr0.append(r10.f22mY[0])\lr0.append(\" end:\")\lint r2 = r2 \- 1\lr0.append(r10.f21mX[r2])\lr0.append(\",\")\lr0.append(r10.f22mY[r2])\l}"];
Node_26 [shape=record,label="{26\:\ 0x00fe|throw new java.lang.IllegalArgumentException(r0.toString())\l}"];
Node_27 [shape=record,label="{27\:\ 0x00ff|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"The Path has a invalid length \")\lr1.append(r11)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0115|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
Node_29 [shape=record,label="{29\:\ 0x0042|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x00b0|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0099|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.graphics.drawable.PathInterpolatorCompat.initPath((r10v0 'this' android.support.graphics.drawable.PathInterpolatorCompat A[IMMUTABLE_TYPE, THIS]), (r11v0 android.graphics.Path A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_27;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_29;
Node_4 -> Node_3;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_25;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_25;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_25;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_25;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_30;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_31;
Node_17 -> Node_14;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_29 -> Node_5;
Node_30 -> Node_20;
Node_31 -> Node_18;
}

