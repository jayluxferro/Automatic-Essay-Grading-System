digraph "CFG forandroid.support.graphics.drawable.AnimatorInflaterCompat.setupObjectAnimator(Landroid\/animation\/ValueAnimator;Landroid\/content\/res\/TypedArray;IFLorg\/xmlpull\/v1\/XmlPullParser;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CHECK_CAST  (r5 I:android.animation.ObjectAnimator) = (android.animation.ObjectAnimator) (r5 I:?[OBJECT, ARRAY]) \l0x0002: CONST_STR  (r0 I:java.lang.String) =  \"pathData\" \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: INVOKE  (r0 I:java.lang.String) = \l  (r6 I:android.content.res.TypedArray)\l  (r9 I:org.xmlpull.v1.XmlPullParser)\l  (r0 I:java.lang.String)\l  (r1 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedString(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):java.lang.String type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0048 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: CONST_STR  (r1 I:java.lang.String) =  \"propertyXName\" \l0x000d: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000e: INVOKE  (r1 I:java.lang.String) = \l  (r6 I:android.content.res.TypedArray)\l  (r9 I:org.xmlpull.v1.XmlPullParser)\l  (r1 I:java.lang.String)\l  (r2 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedString(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):java.lang.String type: STATIC \l0x0012: CONST_STR  (r3 I:java.lang.String) =  \"propertyYName\" \l0x0014: CONST  (r4 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0015: INVOKE  (r9 I:java.lang.String) = \l  (r6 I:android.content.res.TypedArray)\l  (r9 I:org.xmlpull.v1.XmlPullParser)\l  (r3 I:java.lang.String)\l  (r4 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedString(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):java.lang.String type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001c \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003c \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0021 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: NEW_INSTANCE  (r5 I:android.view.InflateException) =  android.view.InflateException \l0x0023: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0025: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0028: INVOKE  (r6 I:java.lang.String) = (r6 I:android.content.res.TypedArray) android.content.res.TypedArray.getPositionDescription():java.lang.String type: VIRTUAL \l0x002c: INVOKE  (r7 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002f: CONST_STR  (r6 I:java.lang.String) =  \" propertyXName or propertyYName is needed for PathData\" \l0x0031: INVOKE  (r7 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0034: INVOKE  (r6 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0038: INVOKE  \l  (r5 I:android.view.InflateException)\l  (r6 I:java.lang.String)\l android.view.InflateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x003b|0x003b: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x003c|0x003c: INVOKE  (r6 I:android.graphics.Path) = (r0 I:java.lang.String) android.support.v4.graphics.PathParser.createPathFromPathData(java.lang.String):android.graphics.Path type: STATIC \l0x0040: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (1056964608(0x3f000000, float:0.5) ?[int, float, short, byte, char])\l \l0x0042: ARITH  (r8 I:float) = (r8 I:float) * (r7 I:float) \l0x0044: INVOKE  \l  (r6 I:android.graphics.Path)\l  (r5 I:android.animation.ObjectAnimator)\l  (r8 I:float)\l  (r1 I:java.lang.String)\l  (r9 I:java.lang.String)\l android.support.graphics.drawable.AnimatorInflaterCompat.setupPathMotion(android.graphics.Path, android.animation.ObjectAnimator, float, java.lang.String, java.lang.String):void type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0048|0x0048: CONST_STR  (r7 I:java.lang.String) =  \"propertyName\" \l0x004a: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004b: INVOKE  (r6 I:java.lang.String) = \l  (r6 I:android.content.res.TypedArray)\l  (r9 I:org.xmlpull.v1.XmlPullParser)\l  (r7 I:java.lang.String)\l  (r8 I:int)\l android.support.v4.content.res.TypedArrayUtils.getNamedString(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):java.lang.String type: STATIC \l0x004f: INVOKE  \l  (r5 I:android.animation.ObjectAnimator)\l  (r6 I:java.lang.String)\l android.animation.ObjectAnimator.setPropertyName(java.lang.String):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0052|0x0052: RETURN   \l}"];
MethodNode[shape=record,label="{private static void android.support.graphics.drawable.AnimatorInflaterCompat.setupObjectAnimator((r5 I:android.animation.ValueAnimator A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.content.res.TypedArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_8;
Node_6 -> Node_10[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_12;
Node_11 -> Node_12;
}

