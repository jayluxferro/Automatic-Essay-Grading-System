digraph "CFG forandroid.support.graphics.drawable.AnimatorInflaterCompat.loadAnimator(Landroid\/content\/Context;Landroid\/content\/res\/Resources;Landroid\/content\/res\/Resources$Theme;IF)Landroid\/animation\/Animator;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r1 I:android.content.res.XmlResourceParser) = (r3 I:android.content.res.Resources), (r5 I:int) android.content.res.Resources.getAnimation(int):android.content.res.XmlResourceParser type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0039, IOException \-\> 0x001a \}, TRY_ENTER]\l0x0004: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|SYNTHETIC\lSplitter:B:3:0x0005\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0005\l|0x0005: INVOKE  (r2 I:android.animation.Animator) = \l  (r2 I:android.content.Context)\l  (r3 I:android.content.res.Resources)\l  (r4 I:android.content.res.Resources$Theme)\l  (r1 I:org.xmlpull.v1.XmlPullParser)\l  (r6 I:float)\l android.support.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context, android.content.res.Resources, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser, float):android.animation.Animator type: STATIC A[Catch:\{ XmlPullParserException \-\> 0x0015, IOException \-\> 0x0012, all \-\> 0x000f \}, TRY_ENTER]\l0x0008: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000e \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: INVOKE  (r1 I:android.content.res.XmlResourceParser) android.content.res.XmlResourceParser.close():void type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: RETURN  (r2 I:android.animation.Animator) \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|ExcHandler: all null\lSplitter:B:3:0x0005\l|0x000f: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0010|0x0010: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|ExcHandler: IOException null\lSplitter:B:3:0x0005\l|0x0012: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0013|0x0013: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0015|ExcHandler: XmlPullParserException null\lSplitter:B:3:0x0005\l|0x0015: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x0016|0x0016: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|ExcHandler: all null\lSplitter:B:17:0x001b\l|0x0018: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x001a|ExcHandler: IOException null\lSplitter:B:1:0x0001\l|0x001a: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x001b|SYNTHETIC\lSplitter:B:17:0x001b\l}"];
Node_18 [shape=record,label="{18\:\ ?|Splitter:B:17:0x001b\l|0x001b: NEW_INSTANCE  (r3 I:android.content.res.Resources$NotFoundException) =  android.content.res.Resources$NotFoundException A[Catch:\{ all \-\> 0x0018 \}, TRY_ENTER]\l0x001d: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0018 \}]\l0x001f: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0018 \}]\l0x0022: CONST_STR  (r6 I:java.lang.String) =  \"Can't load animation resource ID #0x\" A[Catch:\{ all \-\> 0x0018 \}]\l0x0024: INVOKE  (r4 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0018 \}]\l0x0027: INVOKE  (r5 I:java.lang.String) = (r5 I:int) java.lang.Integer.toHexString(int):java.lang.String type: STATIC A[Catch:\{ all \-\> 0x0018 \}]\l0x002b: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0018 \}]\l0x002e: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0018 \}]\l0x0032: INVOKE  \l  (r3 I:android.content.res.Resources$NotFoundException)\l  (r4 I:java.lang.String)\l android.content.res.Resources.NotFoundException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0018 \}]\l0x0035: INVOKE  \l  (r3 I:android.content.res.Resources$NotFoundException)\l  (r2 I:java.lang.Throwable)\l android.content.res.Resources.NotFoundException.initCause(java.lang.Throwable):java.lang.Throwable type: VIRTUAL A[Catch:\{ all \-\> 0x0018 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0038|0x0038: THROW  (r3 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0018 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0039|ExcHandler: XmlPullParserException null\lSplitter:B:1:0x0001\l|0x0039: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0018 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x003a|0x003a: NEW_INSTANCE  (r3 I:android.content.res.Resources$NotFoundException) =  android.content.res.Resources$NotFoundException A[Catch:\{ all \-\> 0x0018 \}]\l0x003c: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0018 \}]\l0x003e: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0018 \}]\l0x0041: CONST_STR  (r6 I:java.lang.String) =  \"Can't load animation resource ID #0x\" A[Catch:\{ all \-\> 0x0018 \}]\l0x0043: INVOKE  (r4 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0018 \}]\l0x0046: INVOKE  (r5 I:java.lang.String) = (r5 I:int) java.lang.Integer.toHexString(int):java.lang.String type: STATIC A[Catch:\{ all \-\> 0x0018 \}]\l0x004a: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0018 \}]\l0x004d: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0018 \}]\l0x0051: INVOKE  \l  (r3 I:android.content.res.Resources$NotFoundException)\l  (r4 I:java.lang.String)\l android.content.res.Resources.NotFoundException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0018 \}]\l0x0054: INVOKE  \l  (r3 I:android.content.res.Resources$NotFoundException)\l  (r2 I:java.lang.Throwable)\l android.content.res.Resources.NotFoundException.initCause(java.lang.Throwable):java.lang.Throwable type: VIRTUAL A[Catch:\{ all \-\> 0x0018 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0057|0x0057: THROW  (r3 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0018 \}, TRY_LEAVE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0058|0x0058: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x005d \l}"];
Node_24 [shape=record,label="{24\:\ 0x005a|0x005a: INVOKE  (r0 I:android.content.res.XmlResourceParser) android.content.res.XmlResourceParser.close():void type: INTERFACE \l}"];
Node_25 [shape=record,label="{25\:\ 0x005d|0x005d: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static android.animation.Animator android.support.graphics.drawable.AnimatorInflaterCompat.loadAnimator((r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.content.res.Resources$Theme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , , , Annotation[BUILD, android.support.annotation.AnimatorRes, \{\}], \lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.content.res.Resources$NotFoundException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_20;
Node_1 -> Node_16;
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_12;
Node_3 -> Node_10;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_23;
Node_10 -> Node_11;
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_13 -> Node_21;
Node_14 -> Node_23;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_14;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
}

