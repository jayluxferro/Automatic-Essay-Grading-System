digraph "CFG forandroid.support.graphics.drawable.AnimatorInflaterCompat.inferValueTypeFromValues(Landroid\/content\/res\/TypedArray;II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:android.util.TypedValue) = (r3 I:android.content.res.TypedArray), (r4 I:int) android.content.res.TypedArray.peekValue(int):android.util.TypedValue type: VIRTUAL \l0x0004: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IGET  (r4 I:int) = (r4 I:android.util.TypedValue) android.util.TypedValue.type int \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: INVOKE  (r3 I:android.util.TypedValue) = (r3 I:android.content.res.TypedArray), (r5 I:int) android.content.res.TypedArray.peekValue(int):android.util.TypedValue type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|0x0015: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0018 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|0x0018: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001e \l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|0x001b: IGET  (r3 I:int) = (r3 I:android.util.TypedValue) android.util.TypedValue.type int \l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|0x001e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|0x001f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0027 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0021|0x0021: INVOKE  (r4 I:boolean) = (r4 I:int) android.support.graphics.drawable.AnimatorInflaterCompat.isColorType(int):boolean type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0025|0x0025: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x002f \l}"];
Node_17 [shape=record,label="{17\:\ 0x0027|0x0027: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0030 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0029|0x0029: INVOKE  (r3 I:boolean) = (r3 I:int) android.support.graphics.drawable.AnimatorInflaterCompat.isColorType(int):boolean type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x002d|0x002d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0030 \l}"];
Node_20 [shape=record,label="{20\:\ 0x002f|0x002f: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0030|0x0030: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{private static int android.support.graphics.drawable.AnimatorInflaterCompat.inferValueTypeFromValues((r3 I:android.content.res.TypedArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
}

