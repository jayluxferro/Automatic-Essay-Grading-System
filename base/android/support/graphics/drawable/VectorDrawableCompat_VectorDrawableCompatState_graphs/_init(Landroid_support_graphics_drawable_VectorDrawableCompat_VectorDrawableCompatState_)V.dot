digraph "CFG forandroid.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.\<init\>(Landroid\/support\/graphics\/drawable\/VectorDrawableCompat$VectorDrawableCompatState;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3.mTint = null\lr3.mTintMode = android.support.graphics.drawable.VectorDrawableCompat.DEFAULT_TINT_MODE\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r4 == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|r3.mChangingConfigurations = r4.mChangingConfigurations\lr3.mVPathRenderer = new android.support.graphics.drawable.VectorDrawableCompat.VPathRenderer(r4.mVPathRenderer)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|if (r4.mVPathRenderer.mFillPaint == null) goto L_0x002c\l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer r0 = r3.mVPathRenderer\lr0.mFillPaint = new android.graphics.Paint(r4.mVPathRenderer.mFillPaint)\l}"];
Node_5 [shape=record,label="{5\:\ 0x002c}"];
Node_6 [shape=record,label="{6\:\ 0x0030|if (r4.mVPathRenderer.mStrokePaint == null) goto L_0x003f\l}"];
Node_7 [shape=record,label="{7\:\ 0x0032|android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer r0 = r3.mVPathRenderer\lr0.mStrokePaint = new android.graphics.Paint(r4.mVPathRenderer.mStrokePaint)\l}"];
Node_8 [shape=record,label="{8\:\ 0x003f|r3.mTint = r4.mTint\lr3.mTintMode = r4.mTintMode\lr3.mAutoMirrored = r4.mAutoMirrored\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.\<init\>((r3v0 'this' android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState A[IMMUTABLE_TYPE, THIS]), (r4v0 android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

