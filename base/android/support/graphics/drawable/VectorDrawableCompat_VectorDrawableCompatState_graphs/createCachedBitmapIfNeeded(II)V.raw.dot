digraph "CFG forandroid.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.createCachedBitmapIfNeeded(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.graphics.Bitmap) = \l  (r1 I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mCachedBitmap android.graphics.Bitmap \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:boolean) = \l  (r1 I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l  (r2 I:int)\l  (r3 I:int)\l android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.canReuseBitmap(int, int):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: SGET  (r0 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config \l0x000c: INVOKE  (r2 I:android.graphics.Bitmap) = \l  (r2 I:int)\l  (r3 I:int)\l  (r0 I:android.graphics.Bitmap$Config)\l android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap type: STATIC \l0x0010: IPUT  \l  (r2 I:android.graphics.Bitmap)\l  (r1 I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mCachedBitmap android.graphics.Bitmap \l0x0012: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0013: IPUT  \l  (r2 I:boolean)\l  (r1 I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mCacheDirty boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.createCachedBitmapIfNeeded((r1 'this' I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
}

