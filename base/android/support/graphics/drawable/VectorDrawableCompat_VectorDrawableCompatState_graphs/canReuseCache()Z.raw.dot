digraph "CFG forandroid.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.canReuseCache()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = \l  (r2 I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mCacheDirty boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:android.content.res.ColorStateList) = \l  (r2 I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mCachedTint android.content.res.ColorStateList \l0x0006: IGET  (r1 I:android.content.res.ColorStateList) = \l  (r2 I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mTint android.content.res.ColorStateList \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0022 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IGET  (r0 I:android.graphics.PorterDuff$Mode) = \l  (r2 I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mCachedTintMode android.graphics.PorterDuff$Mode \l0x000c: IGET  (r1 I:android.graphics.PorterDuff$Mode) = \l  (r2 I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mTintMode android.graphics.PorterDuff$Mode \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0022 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IGET  (r0 I:boolean) = \l  (r2 I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mCachedAutoMirrored boolean \l0x0012: IGET  (r1 I:boolean) = \l  (r2 I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mAutoMirrored boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0022 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: IGET  (r0 I:int) = \l  (r2 I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mCachedRootAlpha int \l0x0018: IGET  (r1 I:android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer) = \l  (r2 I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mVPathRenderer android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer \l0x001a: INVOKE  (r1 I:int) = \l  (r1 I:android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer)\l android.support.graphics.drawable.VectorDrawableCompat.VPathRenderer.getRootAlpha():int type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0022 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|0x0020: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: RETURN  (r0 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|0x0023: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.canReuseCache((r2 'this' I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
}

