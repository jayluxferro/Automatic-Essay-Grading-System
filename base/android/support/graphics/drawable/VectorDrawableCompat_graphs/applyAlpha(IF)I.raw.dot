digraph "CFG forandroid.support.graphics.drawable.VectorDrawableCompat.applyAlpha(IF)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r2 I:int) android.graphics.Color.alpha(int):int type: STATIC \l0x0004: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (16777215(0xffffff, float:2.3509886E\-38) ?[int, float, short, byte, char])\l \l0x0007: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (r1 I:?[int, boolean, short, byte, char]) \l0x0008: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0009: ARITH  (r0 I:float) = (r0 I:float) * (r3 I:float) \l0x000b: CAST  (r3 I:int) = (int) (r0 I:float) \l0x000c: ARITH  (r3 I:int) = (r3 I:int) \<\< (24 int) \l0x000e: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) \| (r3 I:?[int, boolean, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{static int android.support.graphics.drawable.VectorDrawableCompat.applyAlpha((r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

