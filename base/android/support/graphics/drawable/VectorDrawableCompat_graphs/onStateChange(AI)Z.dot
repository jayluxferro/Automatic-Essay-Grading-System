digraph "CFG forandroid.support.graphics.drawable.VectorDrawableCompat.onStateChange([I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r5.mDelegateDrawable == null) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return r5.mDelegateDrawable.setState(r6)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|r0 = false\landroid.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState r1 = r5.mVectorState\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|if (r1.mTint == null) goto L_0x0027\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013}"];
Node_7 [shape=record,label="{7\:\ 0x0015|if (r1.mTintMode == null) goto L_0x0027\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|r5.mTintFilter = updateTintFilter(r5.mTintFilter, r1.mTint, r1.mTintMode)\linvalidateSelf()\lr0 = true\l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|PHI: r0 \l  PHI: (r0v2 boolean) = (r0v1 boolean), (r0v1 boolean), (r0v6 boolean) binds: [B:5:0x0011, B:7:0x0015, B:8:0x0017] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|if (r1.isStateful() == false) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d}"];
Node_12 [shape=record,label="{12\:\ 0x0031|if (r1.onStateChanged(r6) == false) goto L_?\l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|invalidateSelf()\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
MethodNode[shape=record,label="{protected boolean android.support.graphics.drawable.VectorDrawableCompat.onStateChange((r5v0 'this' android.support.graphics.drawable.VectorDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r6v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
}

