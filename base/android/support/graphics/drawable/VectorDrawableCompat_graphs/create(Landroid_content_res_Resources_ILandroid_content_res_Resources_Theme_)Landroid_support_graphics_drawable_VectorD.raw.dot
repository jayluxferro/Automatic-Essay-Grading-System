digraph "CFG forandroid.support.graphics.drawable.VectorDrawableCompat.create(Landroid\/content\/res\/Resources;ILandroid\/content\/res\/Resources$Theme;)Landroid\/support\/graphics\/drawable\/VectorDrawableCompat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (24 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:4:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: NEW_INSTANCE  (r0 I:android.support.graphics.drawable.VectorDrawableCompat) =  android.support.graphics.drawable.VectorDrawableCompat \l0x0008: INVOKE  \l  (r0 I:android.support.graphics.drawable.VectorDrawableCompat)\l android.support.graphics.drawable.VectorDrawableCompat.\<init\>():void type: DIRECT \l0x000b: INVOKE  (r4 I:android.graphics.drawable.Drawable) = \l  (r4 I:android.content.res.Resources)\l  (r5 I:int)\l  (r6 I:android.content.res.Resources$Theme)\l android.support.v4.content.res.ResourcesCompat.getDrawable(android.content.res.Resources, int, android.content.res.Resources$Theme):android.graphics.drawable.Drawable type: STATIC \l0x000f: IPUT  \l  (r4 I:android.graphics.drawable.Drawable)\l  (r0 I:android.support.graphics.drawable.VectorDrawableCompat)\l android.support.graphics.drawable.VectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable \l0x0011: NEW_INSTANCE  (r4 I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState) =  android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState \l0x0013: IGET  (r5 I:android.graphics.drawable.Drawable) = \l  (r0 I:android.support.graphics.drawable.VectorDrawableCompat)\l android.support.graphics.drawable.VectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable \l0x0015: INVOKE  (r5 I:android.graphics.drawable.Drawable$ConstantState) = (r5 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getConstantState():android.graphics.drawable.Drawable$ConstantState type: VIRTUAL \l0x0019: INVOKE  \l  (r4 I:android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState)\l  (r5 I:android.graphics.drawable.Drawable$ConstantState)\l android.support.graphics.drawable.VectorDrawableCompat.VectorDrawableDelegateState.\<init\>(android.graphics.drawable.Drawable$ConstantState):void type: DIRECT \l0x001c: IPUT  \l  (r4 I:android.graphics.drawable.Drawable$ConstantState)\l  (r0 I:android.support.graphics.drawable.VectorDrawableCompat)\l android.support.graphics.drawable.VectorDrawableCompat.mCachedConstantStateDelegate android.graphics.drawable.Drawable$ConstantState \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: RETURN  \l  (r0 I:android.support.graphics.drawable.VectorDrawableCompat)\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|SYNTHETIC\lSplitter:B:4:0x001f\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x001f\l|0x001f: INVOKE  (r5 I:android.content.res.XmlResourceParser) = (r4 I:android.content.res.Resources), (r5 I:int) android.content.res.Resources.getXml(int):android.content.res.XmlResourceParser type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x004a, IOException \-\> 0x0041 \}, TRY_ENTER]\l0x0023: INVOKE  (r0 I:android.util.AttributeSet) = (r5 I:org.xmlpull.v1.XmlPullParser) android.util.Xml.asAttributeSet(org.xmlpull.v1.XmlPullParser):android.util.AttributeSet type: STATIC A[Catch:\{ XmlPullParserException \-\> 0x004a, IOException \-\> 0x0041 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: INVOKE  (r1 I:int) = (r5 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x004a, IOException \-\> 0x0041 \}]\l0x002b: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ XmlPullParserException \-\> 0x004a, IOException \-\> 0x0041 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0032 A[Catch:\{ XmlPullParserException \-\> 0x004a, IOException \-\> 0x0041 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ XmlPullParserException \-\> 0x004a, IOException \-\> 0x0041 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0032 A[Catch:\{ XmlPullParserException \-\> 0x004a, IOException \-\> 0x0041 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: GOTO  \-\> 0x0027 A[Catch:\{ XmlPullParserException \-\> 0x004a, IOException \-\> 0x0041 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|0x0032: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0039 A[Catch:\{ XmlPullParserException \-\> 0x004a, IOException \-\> 0x0041 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: INVOKE  (r4 I:android.support.graphics.drawable.VectorDrawableCompat) = \l  (r4 I:android.content.res.Resources)\l  (r5 I:org.xmlpull.v1.XmlPullParser)\l  (r0 I:android.util.AttributeSet)\l  (r6 I:android.content.res.Resources$Theme)\l android.support.graphics.drawable.VectorDrawableCompat.createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):android.support.graphics.drawable.VectorDrawableCompat type: STATIC A[Catch:\{ XmlPullParserException \-\> 0x004a, IOException \-\> 0x0041 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|0x0038: RETURN  \l  (r4 I:android.support.graphics.drawable.VectorDrawableCompat)\l A[Catch:\{ XmlPullParserException \-\> 0x004a, IOException \-\> 0x0041 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|0x0039: NEW_INSTANCE  (r4 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException A[Catch:\{ XmlPullParserException \-\> 0x004a, IOException \-\> 0x0041 \}]\l0x003b: CONST_STR  (r5 I:java.lang.String) =  \"No start tag found\" A[Catch:\{ XmlPullParserException \-\> 0x004a, IOException \-\> 0x0041 \}]\l0x003d: INVOKE  \l  (r4 I:org.xmlpull.v1.XmlPullParserException)\l  (r5 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ XmlPullParserException \-\> 0x004a, IOException \-\> 0x0041 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0040|0x0040: THROW  (r4 I:java.lang.Throwable) A[Catch:\{ XmlPullParserException \-\> 0x004a, IOException \-\> 0x0041 \}, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0041|ExcHandler: IOException null\lSplitter:B:4:0x001f\l|0x0041: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|0x0042: CONST_STR  (r5 I:java.lang.String) =  \"VectorDrawableCompat\" \l0x0044: CONST_STR  (r6 I:java.lang.String) =  \"parser error\" \l0x0046: INVOKE  \l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r4 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|ExcHandler: XmlPullParserException null\lSplitter:B:4:0x001f\l|0x004a: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_19 [shape=record,label="{19\:\ 0x004b|0x004b: CONST_STR  (r5 I:java.lang.String) =  \"VectorDrawableCompat\" \l0x004d: CONST_STR  (r6 I:java.lang.String) =  \"parser error\" \l0x004f: INVOKE  \l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r4 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_20 [shape=record,label="{20\:\ 0x0052|0x0052: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x0053|0x0053: RETURN  \l  (r4 I:android.support.graphics.drawable.VectorDrawableCompat)\l \l}"];
MethodNode[shape=record,label="{public static android.support.graphics.drawable.VectorDrawableCompat android.support.graphics.drawable.VectorDrawableCompat.create((r4 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.content.res.Resources$Theme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.DrawableRes, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_18;
Node_4 -> Node_16;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_6;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
}

