digraph "CFG forandroid.support.graphics.drawable.VectorDrawableCompat.draw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r9.mDelegateDrawable == null) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r9.mDelegateDrawable.draw(r10)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|copyBounds(r9.mTmpBounds)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|if (r9.mTmpBounds.width() \<= 0) goto L_?\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017}"];
Node_7 [shape=record,label="{7\:\ 0x001d|if (r9.mTmpBounds.height() \> 0) goto L_0x0021\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021}"];
Node_9 [shape=record,label="{9\:\ 0x0023|if (r9.mColorFilter != null) goto L_0x0028\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|android.graphics.PorterDuffColorFilter r0 = r9.mTintFilter\l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|android.graphics.ColorFilter r0 = r9.mColorFilter\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|PHI: r0 \l  PHI: (r0v7 android.graphics.ColorFilter) = (r0v8 android.graphics.ColorFilter), (r0v9 android.graphics.ColorFilter) binds: [B:11:0x0028, B:10:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|r10.getMatrix(r9.mTmpMatrix)\lr9.mTmpMatrix.getValues(r9.mTmpFloats)\lfloat r1 = java.lang.Math.abs(r9.mTmpFloats[0])\lfloat r3 = java.lang.Math.abs(r9.mTmpFloats[4])\lfloat r4 = java.lang.Math.abs(r9.mTmpFloats[1])\lfloat r5 = java.lang.Math.abs(r9.mTmpFloats[3])\l}"];
Node_13 [shape=record,label="{13\:\ 0x005f|if ((r4 \> 0.0f ? 1 : (r4 == 0.0f ? 0 : \-1)) != 0) goto L_0x0065\l}"];
Node_14 [shape=record,label="{14\:\ 0x0061}"];
Node_15 [shape=record,label="{15\:\ 0x0063|if ((r5 \> 0.0f ? 1 : (r5 == 0.0f ? 0 : \-1)) == 0) goto L_0x0069\l}"];
Node_16 [shape=record,label="{16\:\ 0x0065|r1 = 1.0f\lr3 = 1.0f\l}"];
Node_17 [shape=record,label="{17\:\ 0x0069|PHI: r1 r3 \l  PHI: (r1v5 float) = (r1v10 float), (r1v4 float) binds: [B:16:0x0065, B:15:0x0063] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v3 float) = (r3v6 float), (r3v2 float) binds: [B:16:0x0065, B:15:0x0063] A[DONT_GENERATE, DONT_INLINE]\l|int r1 = (int) (((float) r9.mTmpBounds.width()) * r1)\lint r1 = java.lang.Math.min(2048, r1)\lint r3 = java.lang.Math.min(2048, (int) (((float) r9.mTmpBounds.height()) * r3))\l}"];
Node_18 [shape=record,label="{18\:\ 0x0087|if (r1 \<= 0) goto L_?\l}"];
Node_19 [shape=record,label="{19\:\ 0x0089|if (r3 \> 0) goto L_0x008c\l}"];
Node_20 [shape=record,label="{20\:\ 0x008c|int r4 = r10.save()\lr10.translate((float) r9.mTmpBounds.left, (float) r9.mTmpBounds.top)\l}"];
Node_21 [shape=record,label="{21\:\ 0x00a1|if (needMirroring() == false) goto L_0x00b2\l}"];
Node_22 [shape=record,label="{22\:\ 0x00a3|r10.translate((float) r9.mTmpBounds.width(), 0.0f)\lr10.scale(\-1.0f, 1.0f)\l}"];
Node_23 [shape=record,label="{23\:\ 0x00b2|r9.mTmpBounds.offsetTo(0, 0)\lr9.mVectorState.createCachedBitmapIfNeeded(r1, r3)\l}"];
Node_24 [shape=record,label="{24\:\ 0x00be|if (r9.mAllowCaching != false) goto L_0x00c6\l}"];
Node_25 [shape=record,label="{25\:\ 0x00c0|r9.mVectorState.updateCachedBitmap(r1, r3)\l}"];
Node_26 [shape=record,label="{26\:\ 0x00c6}"];
Node_27 [shape=record,label="{27\:\ 0x00cc|if (r9.mVectorState.canReuseCache() != false) goto L_0x00d8\l}"];
Node_28 [shape=record,label="{28\:\ 0x00ce|r9.mVectorState.updateCachedBitmap(r1, r3)\lr9.mVectorState.updateCacheStates()\l}"];
Node_29 [shape=record,label="{29\:\ 0x00d8|r9.mVectorState.drawCachedBitmapWithRootAlpha(r10, r0, r9.mTmpBounds)\lr10.restoreToCount(r4)\l}"];
Node_30 [shape=record,label="{30\:\ 0x00e2|RETURN\l|return\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.support.graphics.drawable.VectorDrawableCompat.draw((r9v0 'this' android.support.graphics.drawable.VectorDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r10v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_33;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_34[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_31;
Node_19 -> Node_20;
Node_19 -> Node_32[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
}

