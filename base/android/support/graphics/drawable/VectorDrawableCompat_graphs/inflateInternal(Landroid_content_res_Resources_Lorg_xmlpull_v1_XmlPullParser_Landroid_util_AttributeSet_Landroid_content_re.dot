digraph "CFG forandroid.support.graphics.drawable.VectorDrawableCompat.inflateInternal(Landroid\/content\/res\/Resources;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/util\/AttributeSet;Landroid\/content\/res\/Resources$Theme;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState r0 = r9.mVectorState\landroid.support.graphics.drawable.VectorDrawableCompat$VPathRenderer r1 = r0.mVPathRenderer\ljava.util.ArrayDeque r2 = new java.util.ArrayDeque()\lr2.push(r1.mRootGroup)\lint r3 = r11.getEventType()\lint r4 = r11.getDepth() + 1\lr6 = true\l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|LOOP_START\lPHI: r3 r6 \l  PHI: (r3v2 int) = (r3v1 int), (r3v3 int) binds: [B:0:0x0000, B:29:0x00ca] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 boolean) = (r6v0 boolean), (r6v2 boolean) binds: [B:0:0x0000, B:29:0x00ca] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0019\-\>B:29:0x00ca\l|if (r3 == 1) goto L_0x00d0\l}"];
Node_2 [shape=record,label="{2\:\ 0x001b}"];
Node_3 [shape=record,label="{3\:\ 0x0020|if (r11.getDepth() \>= r4) goto L_0x0024\l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|if (r3 == 3) goto L_0x00d0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0024}"];
Node_6 [shape=record,label="{6\:\ 0x0025|if (r3 != 2) goto L_0x00b9\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|java.lang.String r3 = r11.getName()\landroid.support.graphics.drawable.VectorDrawableCompat$VGroup r7 = (android.support.graphics.drawable.VectorDrawableCompat.VGroup) r2.peek()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|if (SHAPE_PATH.equals(r3) == false) goto L_0x005e\l}"];
Node_9 [shape=record,label="{9\:\ 0x0039|android.support.graphics.drawable.VectorDrawableCompat$VFullPath r3 = new android.support.graphics.drawable.VectorDrawableCompat.VFullPath()\lr3.inflate(r10, r12, r13, r11)\lr7.mChildren.add(r3)\l}"];
Node_10 [shape=record,label="{10\:\ 0x004a|if (r3.getPathName() == null) goto L_0x0055\l}"];
Node_11 [shape=record,label="{11\:\ 0x004c|r1.mVGTargetsMap.put(r3.getPathName(), r3)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0055|r6 = false\lint r7 = r0.mChangingConfigurations\lr0.mChangingConfigurations = r3.mChangingConfigurations \| r7\l}"];
Node_13 [shape=record,label="{13\:\ 0x005e}"];
Node_14 [shape=record,label="{14\:\ 0x0064|if (SHAPE_CLIP_PATH.equals(r3) == false) goto L_0x008a\l}"];
Node_15 [shape=record,label="{15\:\ 0x0066|android.support.graphics.drawable.VectorDrawableCompat$VClipPath r3 = new android.support.graphics.drawable.VectorDrawableCompat.VClipPath()\lr3.inflate(r10, r12, r13, r11)\lr7.mChildren.add(r3)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0077|if (r3.getPathName() == null) goto L_0x0082\l}"];
Node_17 [shape=record,label="{17\:\ 0x0079|r1.mVGTargetsMap.put(r3.getPathName(), r3)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0082|int r7 = r0.mChangingConfigurations\lr0.mChangingConfigurations = r3.mChangingConfigurations \| r7\l}"];
Node_19 [shape=record,label="{19\:\ 0x008a}"];
Node_20 [shape=record,label="{20\:\ 0x0090|if (SHAPE_GROUP.equals(r3) == false) goto L_0x00ca\l}"];
Node_21 [shape=record,label="{21\:\ 0x0092|android.support.graphics.drawable.VectorDrawableCompat$VGroup r3 = new android.support.graphics.drawable.VectorDrawableCompat.VGroup()\lr3.inflate(r10, r12, r13, r11)\lr7.mChildren.add(r3)\lr2.push(r3)\l}"];
Node_22 [shape=record,label="{22\:\ 0x00a6|if (r3.getGroupName() == null) goto L_0x00b1\l}"];
Node_23 [shape=record,label="{23\:\ 0x00a8|r1.mVGTargetsMap.put(r3.getGroupName(), r3)\l}"];
Node_24 [shape=record,label="{24\:\ 0x00b1|int r7 = r0.mChangingConfigurations\lr0.mChangingConfigurations = r3.mChangingConfigurations \| r7\l}"];
Node_25 [shape=record,label="{25\:\ 0x00b9|if (r3 != 3) goto L_0x00ca\l}"];
Node_26 [shape=record,label="{26\:\ 0x00bb}"];
Node_27 [shape=record,label="{27\:\ 0x00c5|if (SHAPE_GROUP.equals(r11.getName()) == false) goto L_0x00ca\l}"];
Node_28 [shape=record,label="{28\:\ 0x00c7|r2.pop()\l}"];
Node_29 [shape=record,label="{29\:\ 0x00ca|LOOP_END\lPHI: r6 \l  PHI: (r6v2 boolean) = (r6v1 boolean), (r6v1 boolean), (r6v1 boolean), (r6v1 boolean), (r6v1 boolean), (r6v1 boolean), (r6v5 boolean) binds: [B:41:0x00ca, B:42:0x00ca, B:36:0x00ca, B:39:0x00ca, B:40:0x00ca, B:38:0x00ca, B:37:0x00ca] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0019\-\>B:29:0x00ca\l|int r3 = r11.next()\l}"];
Node_30 [shape=record,label="{30\:\ 0x00d0|if (r6 != false) goto L_0x00d3\l}"];
Node_31 [shape=record,label="{31\:\ 0x00d2|RETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ 0x00d3}"];
Node_33 [shape=record,label="{33\:\ 0x00da|throw new org.xmlpull.p030v1.XmlPullParserException(\"no path defined\")\l}"];
Node_34 [shape=record,label="{34\:\ 0x00d0|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x00d0|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x00ca|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x00ca|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x00ca|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x00ca|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x00ca|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x00ca|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x00ca|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal((r9v0 'this' android.support.graphics.drawable.VectorDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r10v0 android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 android.content.res.Resources$Theme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_34;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_35;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_25;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_37;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_38;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_39;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_40;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_41;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_42;
Node_28 -> Node_36;
Node_29 -> Node_1;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_34 -> Node_30;
Node_35 -> Node_30;
Node_36 -> Node_29;
Node_37 -> Node_29;
Node_38 -> Node_29;
Node_39 -> Node_29;
Node_40 -> Node_29;
Node_41 -> Node_29;
Node_42 -> Node_29;
}

