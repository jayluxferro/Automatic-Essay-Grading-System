digraph "CFG forandroid.support.graphics.drawable.VectorDrawableCompat.parseTintModeCompat(ILandroid\/graphics\/PorterDuff$Mode;)Landroid\/graphics\/PorterDuff$Mode;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r1 == 3) goto L_0x001d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r1 == 5) goto L_0x001a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006}"];
Node_5 [shape=record,label="{5\:\ 0x0008|if (r1 == 9) goto L_0x0017\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|switch(r1) \{\l    case 14: goto L_0x0014;\l    case 15: goto L_0x0011;\l    case 16: goto L_0x000e;\l    default: goto L_0x000d;\l\}\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|RETURN\l|return r2\l}"];
Node_8 [shape=record,label="{8\:\ 0x000e}"];
Node_9 [shape=record,label="{9\:\ 0x0010|RETURN\l|return android.graphics.PorterDuff.Mode.ADD\l}"];
Node_10 [shape=record,label="{10\:\ 0x0011}"];
Node_11 [shape=record,label="{11\:\ 0x0013|RETURN\l|return android.graphics.PorterDuff.Mode.SCREEN\l}"];
Node_12 [shape=record,label="{12\:\ 0x0014}"];
Node_13 [shape=record,label="{13\:\ 0x0016|RETURN\l|return android.graphics.PorterDuff.Mode.MULTIPLY\l}"];
Node_14 [shape=record,label="{14\:\ 0x0017}"];
Node_15 [shape=record,label="{15\:\ 0x0019|RETURN\l|return android.graphics.PorterDuff.Mode.SRC_ATOP\l}"];
Node_16 [shape=record,label="{16\:\ 0x001a}"];
Node_17 [shape=record,label="{17\:\ 0x001c|RETURN\l|return android.graphics.PorterDuff.Mode.SRC_IN\l}"];
Node_18 [shape=record,label="{18\:\ 0x001d}"];
Node_19 [shape=record,label="{19\:\ 0x001f|RETURN\l|return android.graphics.PorterDuff.Mode.SRC_OVER\l}"];
MethodNode[shape=record,label="{private static android.graphics.PorterDuff$Mode android.support.graphics.drawable.VectorDrawableCompat.parseTintModeCompat((r1v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 android.graphics.PorterDuff$Mode A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_18;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_16;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_6 -> Node_10;
Node_6 -> Node_12;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_18 -> Node_19;
}

