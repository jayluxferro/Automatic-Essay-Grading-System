digraph "CFG forandroid.support.graphics.drawable.AnimatedVectorDrawableCompat.inflate(Landroid\/content\/res\/Resources;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/util\/AttributeSet;Landroid\/content\/res\/Resources$Theme;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable) = \l  (r6 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat)\l android.support.graphics.drawable.AnimatedVectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:android.graphics.drawable.Drawable) = \l  (r6 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat)\l android.support.graphics.drawable.AnimatedVectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable \l0x0006: INVOKE  \l  (r0 I:android.graphics.drawable.Drawable)\l  (r7 I:android.content.res.Resources)\l  (r8 I:org.xmlpull.v1.XmlPullParser)\l  (r9 I:android.util.AttributeSet)\l  (r10 I:android.content.res.Resources$Theme)\l android.support.v4.graphics.drawable.DrawableCompat.inflate(android.graphics.drawable.Drawable, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):void type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r0 I:int) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getEventType():int type: INTERFACE \l0x000e: INVOKE  (r1 I:int) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getDepth():int type: INTERFACE \l0x0012: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0013: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0097 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: INVOKE  (r3 I:int) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getDepth():int type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r3 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:10:0x001f \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0097 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0091 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: INVOKE  (r0 I:java.lang.String) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE \l0x0026: CONST_STR  (r3 I:java.lang.String) =  \"animated\-vector\" \l0x0028: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l0x002c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x005d \l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|0x002f: SGET  (r0 I:int[]) =  android.support.graphics.drawable.AndroidResources.STYLEABLE_ANIMATED_VECTOR_DRAWABLE int[] \l0x0031: INVOKE  (r0 I:android.content.res.TypedArray) = \l  (r7 I:android.content.res.Resources)\l  (r10 I:android.content.res.Resources$Theme)\l  (r9 I:android.util.AttributeSet)\l  (r0 I:int[])\l android.support.v4.content.res.TypedArrayUtils.obtainAttributes(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray type: STATIC \l0x0035: INVOKE  (r3 I:int) = \l  (r0 I:android.content.res.TypedArray)\l  (r4 I:int)\l  (r4 I:int)\l android.content.res.TypedArray.getResourceId(int, int):int type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|0x0039: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0059 \l}"];
Node_16 [shape=record,label="{16\:\ 0x003b|0x003b: INVOKE  (r3 I:android.support.graphics.drawable.VectorDrawableCompat) = \l  (r7 I:android.content.res.Resources)\l  (r3 I:int)\l  (r10 I:android.content.res.Resources$Theme)\l android.support.graphics.drawable.VectorDrawableCompat.create(android.content.res.Resources, int, android.content.res.Resources$Theme):android.support.graphics.drawable.VectorDrawableCompat type: STATIC \l0x003f: INVOKE  \l  (r3 I:android.support.graphics.drawable.VectorDrawableCompat)\l  (r4 I:boolean)\l android.support.graphics.drawable.VectorDrawableCompat.setAllowCaching(boolean):void type: VIRTUAL \l0x0042: IGET  (r4 I:android.graphics.drawable.Drawable$Callback) = \l  (r6 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat)\l android.support.graphics.drawable.AnimatedVectorDrawableCompat.mCallback android.graphics.drawable.Drawable$Callback \l0x0044: INVOKE  \l  (r3 I:android.support.graphics.drawable.VectorDrawableCompat)\l  (r4 I:android.graphics.drawable.Drawable$Callback)\l android.support.graphics.drawable.VectorDrawableCompat.setCallback(android.graphics.drawable.Drawable$Callback):void type: VIRTUAL \l0x0047: IGET  (r4 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState) = \l  (r6 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat)\l android.support.graphics.drawable.AnimatedVectorDrawableCompat.mAnimatedVectorState android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState \l0x0049: IGET  (r4 I:android.support.graphics.drawable.VectorDrawableCompat) = \l  (r4 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState)\l android.support.graphics.drawable.AnimatedVectorDrawableCompat.AnimatedVectorDrawableCompatState.mVectorDrawable android.support.graphics.drawable.VectorDrawableCompat \l}"];
Node_17 [shape=record,label="{17\:\ 0x004b|0x004b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0055 \l}"];
Node_18 [shape=record,label="{18\:\ 0x004d|0x004d: IGET  (r4 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState) = \l  (r6 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat)\l android.support.graphics.drawable.AnimatedVectorDrawableCompat.mAnimatedVectorState android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState \l0x004f: IGET  (r4 I:android.support.graphics.drawable.VectorDrawableCompat) = \l  (r4 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState)\l android.support.graphics.drawable.AnimatedVectorDrawableCompat.AnimatedVectorDrawableCompatState.mVectorDrawable android.support.graphics.drawable.VectorDrawableCompat \l0x0051: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0052: INVOKE  \l  (r4 I:android.support.graphics.drawable.VectorDrawableCompat)\l  (r5 I:android.graphics.drawable.Drawable$Callback)\l android.support.graphics.drawable.VectorDrawableCompat.setCallback(android.graphics.drawable.Drawable$Callback):void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0055|0x0055: IGET  (r4 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState) = \l  (r6 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat)\l android.support.graphics.drawable.AnimatedVectorDrawableCompat.mAnimatedVectorState android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState \l0x0057: IPUT  \l  (r3 I:android.support.graphics.drawable.VectorDrawableCompat)\l  (r4 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState)\l android.support.graphics.drawable.AnimatedVectorDrawableCompat.AnimatedVectorDrawableCompatState.mVectorDrawable android.support.graphics.drawable.VectorDrawableCompat \l}"];
Node_20 [shape=record,label="{20\:\ 0x0059|0x0059: INVOKE  (r0 I:android.content.res.TypedArray) android.content.res.TypedArray.recycle():void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x005d|0x005d: CONST_STR  (r3 I:java.lang.String) =  \"target\" \l0x005f: INVOKE  (r0 I:boolean) = (r3 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x0063|0x0063: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0091 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0065|0x0065: SGET  (r0 I:int[]) =  android.support.graphics.drawable.AndroidResources.STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET int[] \l0x0067: INVOKE  (r0 I:android.content.res.TypedArray) = \l  (r7 I:android.content.res.Resources)\l  (r9 I:android.util.AttributeSet)\l  (r0 I:int[])\l android.content.res.Resources.obtainAttributes(android.util.AttributeSet, int[]):android.content.res.TypedArray type: VIRTUAL \l0x006b: INVOKE  (r3 I:java.lang.String) = (r0 I:android.content.res.TypedArray), (r4 I:int) android.content.res.TypedArray.getString(int):java.lang.String type: VIRTUAL \l0x006f: INVOKE  (r4 I:int) = \l  (r0 I:android.content.res.TypedArray)\l  (r2 I:int)\l  (r4 I:int)\l android.content.res.TypedArray.getResourceId(int, int):int type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0073|0x0073: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x008e \l}"];
Node_25 [shape=record,label="{25\:\ 0x0075|0x0075: IGET  (r5 I:android.content.Context) = \l  (r6 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat)\l android.support.graphics.drawable.AnimatedVectorDrawableCompat.mContext android.content.Context \l}"];
Node_26 [shape=record,label="{26\:\ 0x0077|0x0077: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0083 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0079|0x0079: IGET  (r5 I:android.content.Context) = \l  (r6 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat)\l android.support.graphics.drawable.AnimatedVectorDrawableCompat.mContext android.content.Context \l0x007b: INVOKE  (r4 I:android.animation.Animator) = (r5 I:android.content.Context), (r4 I:int) android.support.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context, int):android.animation.Animator type: STATIC \l0x007f: INVOKE  \l  (r6 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat)\l  (r3 I:java.lang.String)\l  (r4 I:android.animation.Animator)\l android.support.graphics.drawable.AnimatedVectorDrawableCompat.setupAnimatorsForTarget(java.lang.String, android.animation.Animator):void type: DIRECT \l}"];
Node_28 [shape=record,label="{28\:\ 0x0083|0x0083: INVOKE  (r0 I:android.content.res.TypedArray) android.content.res.TypedArray.recycle():void type: VIRTUAL \l0x0086: NEW_INSTANCE  (r7 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0088: CONST_STR  (r8 I:java.lang.String) =  \"Context can't be null when inflating animators\" \l0x008a: INVOKE  \l  (r7 I:java.lang.IllegalStateException)\l  (r8 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_29 [shape=record,label="{29\:\ 0x008d|0x008d: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_30 [shape=record,label="{30\:\ 0x008e|0x008e: INVOKE  (r0 I:android.content.res.TypedArray) android.content.res.TypedArray.recycle():void type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x0091|0x0091: INVOKE  (r0 I:int) = (r8 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l}"];
Node_32 [shape=record,label="{32\:\ 0x0097|0x0097: IGET  (r7 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState) = \l  (r6 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat)\l android.support.graphics.drawable.AnimatedVectorDrawableCompat.mAnimatedVectorState android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState \l0x0099: INVOKE  \l  (r7 I:android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState)\l android.support.graphics.drawable.AnimatedVectorDrawableCompat.AnimatedVectorDrawableCompatState.setupAnimatorSet():void type: VIRTUAL \l}"];
Node_33 [shape=record,label="{33\:\ 0x009c|0x009c: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.support.graphics.drawable.AnimatedVectorDrawableCompat.inflate((r6 'this' I:android.support.graphics.drawable.AnimatedVectorDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r7 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.content.res.Resources$Theme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_32;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_32;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_31;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_21;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_31;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_31;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_30;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_31 -> Node_5;
Node_32 -> Node_33;
}

