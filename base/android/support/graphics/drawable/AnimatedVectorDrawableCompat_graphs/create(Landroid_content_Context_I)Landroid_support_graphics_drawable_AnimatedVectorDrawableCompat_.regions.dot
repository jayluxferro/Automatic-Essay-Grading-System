digraph "CFG forandroid.support.graphics.drawable.AnimatedVectorDrawableCompat.create(Landroid\/content\/Context;I)Landroid\/support\/graphics\/drawable\/AnimatedVectorDrawableCompat;" {
subgraph cluster_Region_2095107741 {
label = "R(1:(2:(2:2|3)|(1:(3:6|(2:7|(1:(1:(2:(1:14)|(1:16)))))|(0)(0))))) | DECL_VAR: int null\l";
node [shape=record,color=blue];
subgraph cluster_Region_1673888833 {
label = "R(2:(2:2|3)|(1:(3:6|(2:7|(1:(1:(2:(1:14)|(1:16)))))|(0)(0))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1589126334 {
label = "IF [B:1:0x0004] THEN: R(2:2|3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 24) goto L_0x0006\l}"];
subgraph cluster_Region_1361351698 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|android.support.graphics.drawable.AnimatedVectorDrawableCompat android.support.graphics.drawable.AnimatedVectorDrawableCompat r0 = new android.support.graphics.drawable.AnimatedVectorDrawableCompat(r4)\lr0.mDelegateDrawable = android.support.p000v4.content.res.ResourcesCompat.getDrawable(r4.getResources(), r5, r4.getTheme())\lr0.mDelegateDrawable.setCallback(r0.mCallback)\lr0.mCachedConstantStateDelegate = new android.support.graphics.drawable.AnimatedVectorDrawableCompat.AnimatedVectorDrawableDelegateState(r0.mDelegateDrawable.getConstantState())\l}"];
Node_3 [shape=record,label="{3\:\ 0x002d|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_1084913620 {
label = "R(1:(3:6|(2:7|(1:(1:(2:(1:14)|(1:16)))))|(0)(0)))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_977587578 {
label = "Try: R(3:6|(2:7|(1:(1:(2:(1:14)|(1:16)))))|(0)(0)) catches: R(3:19|20|23), R(3:17|18|24)";
node [shape=record,color=blue];
subgraph cluster_Region_204729480 {
label = "R(3:6|(2:7|(1:(1:(2:(1:14)|(1:16)))))|(0)(0))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\lSplitter:B:5:0x0032\l|android.content.res.XmlResourceParser android.content.res.XmlResourceParser r5 = r4.getResources().getXml(r5)     \/\/ Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\landroid.util.AttributeSet android.util.AttributeSet r0 = android.util.Xml.asAttributeSet(r5)     \/\/ Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l}"];
subgraph cluster_LoopRegion_1970053631 {
label = "LOOP:0: (2:7|(1:(1:(2:(1:14)|(1:16)))))";
node [shape=record,color=blue];
subgraph cluster_Region_325049425 {
label = "R(2:7|(1:(1:(2:(1:14)|(1:16)))))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x003a|LOOP_START\lCatch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\lLOOP:0: B:7:0x003a\-\>B:11:0x0044\l|int r1 = r5.next()     \/\/ Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l}"];
subgraph cluster_Region_1794045496 {
label = "R(1:(1:(2:(1:14)|(1:16))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_282613595 {
label = "IF [B:8:0x003f, B:10:0x0042] THEN: R(1:(2:(1:14)|(1:16))) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x003f|Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l|if (r1 == 2) goto L_0x0045     \/\/ Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0042|ADDED_TO_REGION\lCatch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l|if (r1 == 1) goto L_0x0045     \/\/ Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l}"];
subgraph cluster_Region_2045323366 {
label = "R(1:(2:(1:14)|(1:16)))";
node [shape=record,color=blue];
subgraph cluster_Region_1708787004 {
label = "R(2:(1:14)|(1:16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_52215396 {
label = "IF [B:12:0x0045] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0045|EDGE_INSN: B:21:0x0045\-\>B:12:0x0045 ?: BREAK  \lEDGE_INSN: B:22:0x0045\-\>B:12:0x0045 ?: BREAK  \lCatch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l|if (r1 != 2) goto L_0x0054     \/\/ Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l}"];
subgraph cluster_Region_1931057616 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0053|RETURN\lCatch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l|return createFromXmlInner(r4, r4.getResources(), r5, r0, r4.getTheme())     \/\/ Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l}"];
}
}
subgraph cluster_Region_1965630241 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x005b|Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l|throw new org.xmlpull.p030v1.XmlPullParserException(\"No start tag found\")     \/\/ Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l}"];
}
}
}
}
}
}
}
subgraph cluster_IfRegion_1858885378 {
label = "IF [B:12:0x0045] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0045|EDGE_INSN: B:21:0x0045\-\>B:12:0x0045 ?: BREAK  \lEDGE_INSN: B:22:0x0045\-\>B:12:0x0045 ?: BREAK  \lCatch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l|if (r1 != 2) goto L_0x0054     \/\/ Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l}"];
subgraph cluster_Region_1760248970 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_1492249577 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_1832384046 {
label = "R(3:19|20|23) | ExcHandler: XmlPullParserException (r4v1 'e' org.xmlpull.v1.XmlPullParserException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0065|ExcHandler: XmlPullParserException (r4v1 'e' org.xmlpull.v1.XmlPullParserException A[CUSTOM_DECLARE])\lSplitter:B:5:0x0032\l}"];
Node_20 [shape=record,label="{20\:\ 0x0066|android.util.Log.e(LOGTAG, \"parser error\", r4)\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
subgraph cluster_Region_1362878594 {
label = "R(3:17|18|24) | ExcHandler: IOException (r4v3 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x005c|ExcHandler: IOException (r4v3 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:5:0x0032\l}"];
Node_18 [shape=record,label="{18\:\ 0x005d|android.util.Log.e(LOGTAG, \"parser error\", r4)\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
}
}
}
subgraph cluster_Region_1832384046 {
label = "R(3:19|20|23) | ExcHandler: XmlPullParserException (r4v1 'e' org.xmlpull.v1.XmlPullParserException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0065|ExcHandler: XmlPullParserException (r4v1 'e' org.xmlpull.v1.XmlPullParserException A[CUSTOM_DECLARE])\lSplitter:B:5:0x0032\l}"];
Node_20 [shape=record,label="{20\:\ 0x0066|android.util.Log.e(LOGTAG, \"parser error\", r4)\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
subgraph cluster_Region_1362878594 {
label = "R(3:17|18|24) | ExcHandler: IOException (r4v3 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x005c|ExcHandler: IOException (r4v3 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:5:0x0032\l}"];
Node_18 [shape=record,label="{18\:\ 0x005d|android.util.Log.e(LOGTAG, \"parser error\", r4)\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x002e}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0032|SYNTHETIC\lSplitter:B:5:0x0032\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0041|Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0044|LOOP_END\lCatch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\lLOOP:0: B:7:0x003a\-\>B:11:0x0044\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0047|Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0054|Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0045|SYNTHETIC\lEDGE_INSN: B:21:0x0045\-\>B:12:0x0045 ?: BREAK  \l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0045|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:22:0x0045\-\>B:12:0x0045 ?: BREAK  \l}"];
MethodNode[shape=record,label="{public static android.support.graphics.drawable.AnimatedVectorDrawableCompat android.support.graphics.drawable.AnimatedVectorDrawableCompat.create((r4v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lAnnotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.DrawableRes, \{\}]\lRemoved duplicated region for block: B:15:0x0054 A[Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}]\lRemoved duplicated region for block: B:13:0x0047 A[Catch:\{ XmlPullParserException \-\> 0x0065, IOException \-\> 0x005c \}]\lAnnotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_22;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_21;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_24;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_19;
Node_5 -> Node_17;
Node_9 -> Node_10;
Node_11 -> Node_7;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_21 -> Node_12;
Node_22 -> Node_12;
}

