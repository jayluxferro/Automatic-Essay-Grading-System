digraph "CFG forandroid.support.graphics.drawable.AnimatedVectorDrawableCompat.draw(Landroid\/graphics\/Canvas;)V" {
subgraph cluster_Region_593992947 {
label = "R(1:(2:(2:2|3)|(2:4|(1:(1:6)))))";
node [shape=record,color=blue];
subgraph cluster_Region_444715315 {
label = "R(2:(2:2|3)|(2:4|(1:(1:6))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1899631046 {
label = "IF [B:1:0x0002] THEN: R(2:2|3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1.mDelegateDrawable != null) goto L_0x0004\l}"];
subgraph cluster_Region_1245349328 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|r1.mDelegateDrawable.draw(r2)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1428490336 {
label = "R(2:4|(1:(1:6)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|r1.mAnimatedVectorState.mVectorDrawable.draw(r2)\l}"];
subgraph cluster_Region_1094276030 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1613553278 {
label = "IF [B:5:0x0019] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0019|if (r1.mAnimatedVectorState.mAnimatorSet.isStarted() == true) goto L_0x001b\l}"];
subgraph cluster_Region_2124858286 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001b|invalidateSelf()\l}"];
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void android.support.graphics.drawable.AnimatedVectorDrawableCompat.draw((r1v0 'this' android.support.graphics.drawable.AnimatedVectorDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r2v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_0 -> Node_1;
}

