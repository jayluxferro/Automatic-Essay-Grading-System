digraph "CFG forandroid.support.graphics.drawable.VectorDrawableCompat.VPathRenderer.getMatrixScale(Landroid\/graphics\/Matrix;)F" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0001: NEW_ARRAY  (r0 I:float[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0003: FILL_ARRAY  (r0 I:?[int, float][]), data: [0, 1065353216, 1065353216, 0] \l0x0006: INVOKE  (r10 I:android.graphics.Matrix), (r0 I:float[]) android.graphics.Matrix.mapVectors(float[]):void type: VIRTUAL \l0x0009: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: AGET  (r1 I:?[int, float]) = (r0 I:?[int, float][]), (r10 I:?[int, short, byte, char]) \l0x000c: CAST  (r1 I:double) = (double) (r1 I:float) \l0x000d: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000e: AGET  (r4 I:?[int, float]) = (r0 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x0010: CAST  (r4 I:double) = (double) (r4 I:float) \l0x0011: INVOKE  (r1 I:double) = (r1 I:double), (r4 I:double) java.lang.Math.hypot(double, double):double type: STATIC \l0x0015: CAST  (r1 I:float) = (float) (r1 I:double) \l0x0016: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0017: AGET  (r4 I:?[int, float]) = (r0 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0019: CAST  (r4 I:double) = (double) (r4 I:float) \l0x001a: CONST  (r6 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x001b: AGET  (r7 I:?[int, float]) = (r0 I:?[int, float][]), (r6 I:?[int, short, byte, char]) \l0x001d: CAST  (r7 I:double) = (double) (r7 I:float) \l0x001e: INVOKE  (r4 I:double) = (r4 I:double), (r7 I:double) java.lang.Math.hypot(double, double):double type: STATIC \l0x0022: CAST  (r4 I:float) = (float) (r4 I:double) \l0x0023: AGET  (r10 I:?[int, float]) = (r0 I:?[int, float][]), (r10 I:?[int, short, byte, char]) \l0x0025: AGET  (r3 I:?[int, float]) = (r0 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x0027: AGET  (r2 I:?[int, float]) = (r0 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0029: AGET  (r0 I:?[int, float]) = (r0 I:?[int, float][]), (r6 I:?[int, short, byte, char]) \l0x002b: INVOKE  (r10 I:float) = (r10 I:float), (r3 I:float), (r2 I:float), (r0 I:float) android.support.graphics.drawable.VectorDrawableCompat.VPathRenderer.cross(float, float, float, float):float type: STATIC \l0x002f: INVOKE  (r0 I:float) = (r1 I:float), (r4 I:float) java.lang.Math.max(float, float):float type: STATIC \l0x0033: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0034: CMP_L  (r2 I:int) = (r0 I:float), (r1 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0036|0x0036: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x003e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0038|0x0038: INVOKE  (r10 I:float) = (r10 I:float) java.lang.Math.abs(float):float type: STATIC \l0x003c: ARITH  (r1 I:float) = (r10 I:float) \/ (r0 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x003e|0x003e: RETURN  (r1 I:float) \l}"];
MethodNode[shape=record,label="{private float android.support.graphics.drawable.VectorDrawableCompat.VPathRenderer.getMatrixScale((r9 'this' I:android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer A[IMMUTABLE_TYPE, THIS]), (r10 I:android.graphics.Matrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

