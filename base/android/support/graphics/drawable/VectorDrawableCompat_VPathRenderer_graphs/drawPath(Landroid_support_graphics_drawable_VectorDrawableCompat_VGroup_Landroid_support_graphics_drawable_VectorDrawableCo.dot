digraph "CFG forandroid.support.graphics.drawable.VectorDrawableCompat.VPathRenderer.drawPath(Landroid\/support\/graphics\/drawable\/VectorDrawableCompat$VGroup;Landroid\/support\/graphics\/drawable\/VectorDrawableCompat$VPath;Landroid\/graphics\/Canvas;IILandroid\/graphics\/ColorFilter;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|float r11 = ((float) r11) \/ r7.mViewportWidth\lfloat r12 = ((float) r12) \/ r7.mViewportHeight\lfloat r0 = java.lang.Math.min(r11, r12)\landroid.graphics.Matrix r8 = r8.mStackedMatrix\lr7.mFinalPathMatrix.set(r8)\lr7.mFinalPathMatrix.postScale(r11, r12)\lfloat r8 = getMatrixScale(r8)\l}"];
Node_1 [shape=record,label="{1\:\ 0x001f|if ((r8 \> 0.0f ? 1 : (r8 == 0.0f ? 0 : \-1)) != 0) goto L_0x0022\l}"];
Node_2 [shape=record,label="{2\:\ 0x0021|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|r9.toPath(r7.mPath)\landroid.graphics.Path r12 = r7.mPath\lr7.mRenderPath.reset()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0032|if (r9.isClipPath() == false) goto L_0x0042\l}"];
Node_5 [shape=record,label="{5\:\ 0x0034|r7.mRenderPath.addPath(r12, r7.mFinalPathMatrix)\lr10.clipPath(r7.mRenderPath)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0042|android.support.graphics.drawable.VectorDrawableCompat$VFullPath r9 = (android.support.graphics.drawable.VectorDrawableCompat.VFullPath) r9\l}"];
Node_7 [shape=record,label="{7\:\ 0x004b|if ((r9.mTrimPathStart \> 0.0f ? 1 : (r9.mTrimPathStart == 0.0f ? 0 : \-1)) != 0) goto L_0x0053\l}"];
Node_8 [shape=record,label="{8\:\ 0x004d}"];
Node_9 [shape=record,label="{9\:\ 0x0051|if ((r9.mTrimPathEnd \> 1.0f ? 1 : (r9.mTrimPathEnd == 1.0f ? 0 : \-1)) == 0) goto L_0x0096\l}"];
Node_10 [shape=record,label="{10\:\ 0x0053|float r1 = (r9.mTrimPathStart + r9.mTrimPathOffset) % 1.0f\lfloat r4 = (r9.mTrimPathEnd + r9.mTrimPathOffset) % 1.0f\l}"];
Node_11 [shape=record,label="{11\:\ 0x0061|if (r7.mPathMeasure != null) goto L_0x006a\l}"];
Node_12 [shape=record,label="{12\:\ 0x0063|r7.mPathMeasure = new android.graphics.PathMeasure()\l}"];
Node_13 [shape=record,label="{13\:\ 0x006a|r7.mPathMeasure.setPath(r7.mPath, false)\lfloat r2 = r7.mPathMeasure.getLength()\lfloat r1 = r1 * r2\lfloat r4 = r4 * r2\lr12.reset()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0081|if ((r1 \> r4 ? 1 : (r1 == r4 ? 0 : \-1)) \<= 0) goto L_0x008e\l}"];
Node_15 [shape=record,label="{15\:\ 0x0083|r7.mPathMeasure.getSegment(r1, r2, r12, true)\lr7.mPathMeasure.getSegment(0.0f, r4, r12, true)\l}"];
Node_16 [shape=record,label="{16\:\ 0x008e|r7.mPathMeasure.getSegment(r1, r4, r12, true)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0093|r12.rLineTo(0.0f, 0.0f)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0096|r7.mRenderPath.addPath(r12, r7.mFinalPathMatrix)\l}"];
Node_19 [shape=record,label="{19\:\ 0x00a5|if (r9.mFillColor.willDraw() == false) goto L_0x00fe\l}"];
Node_20 [shape=record,label="{20\:\ 0x00a7|android.support.v4.content.res.ComplexColorCompat r11 = r9.mFillColor\l}"];
Node_21 [shape=record,label="{21\:\ 0x00ab|if (r7.mFillPaint != null) goto L_0x00bb\l}"];
Node_22 [shape=record,label="{22\:\ 0x00ad|r7.mFillPaint = new android.graphics.Paint(1)\lr7.mFillPaint.setStyle(android.graphics.Paint.Style.FILL)\l}"];
Node_23 [shape=record,label="{23\:\ 0x00bb|android.graphics.Paint r1 = r7.mFillPaint\l}"];
Node_24 [shape=record,label="{24\:\ 0x00c1|if (r11.isGradient() == false) goto L_0x00db\l}"];
Node_25 [shape=record,label="{25\:\ 0x00c3|android.graphics.Shader r11 = r11.getShader()\lr11.setLocalMatrix(r7.mFinalPathMatrix)\lr1.setShader(r11)\lr1.setAlpha(java.lang.Math.round(r9.mFillAlpha * 255.0f))\l}"];
Node_26 [shape=record,label="{26\:\ 0x00db|r1.setColor(android.support.graphics.drawable.VectorDrawableCompat.applyAlpha(r11.getColor(), r9.mFillAlpha))\l}"];
Node_27 [shape=record,label="{27\:\ 0x00e8|r1.setColorFilter(r13)\landroid.graphics.Path r11 = r7.mRenderPath\l}"];
Node_28 [shape=record,label="{28\:\ 0x00ef|if (r9.mFillRule != 0) goto L_0x00f4\l}"];
Node_29 [shape=record,label="{29\:\ 0x00f1|android.graphics.Path$FillType r2 = android.graphics.Path.FillType.WINDING\l}"];
Node_30 [shape=record,label="{30\:\ 0x00f4|android.graphics.Path$FillType r2 = android.graphics.Path.FillType.EVEN_ODD\l}"];
Node_31 [shape=record,label="{31\:\ 0x00f6|PHI: r2 \l  PHI: (r2v11 android.graphics.Path$FillType) = (r2v12 android.graphics.Path$FillType), (r2v13 android.graphics.Path$FillType) binds: [B:30:0x00f4, B:29:0x00f1] A[DONT_GENERATE, DONT_INLINE]\l|r11.setFillType(r2)\lr10.drawPath(r7.mRenderPath, r1)\l}"];
Node_32 [shape=record,label="{32\:\ 0x00fe}"];
Node_33 [shape=record,label="{33\:\ 0x0104|if (r9.mStrokeColor.willDraw() == false) goto L_?\l}"];
Node_34 [shape=record,label="{34\:\ 0x0106|android.support.v4.content.res.ComplexColorCompat r11 = r9.mStrokeColor\l}"];
Node_35 [shape=record,label="{35\:\ 0x010a|if (r7.mStrokePaint != null) goto L_0x011a\l}"];
Node_36 [shape=record,label="{36\:\ 0x010c|r7.mStrokePaint = new android.graphics.Paint(1)\lr7.mStrokePaint.setStyle(android.graphics.Paint.Style.STROKE)\l}"];
Node_37 [shape=record,label="{37\:\ 0x011a|android.graphics.Paint r1 = r7.mStrokePaint\l}"];
Node_38 [shape=record,label="{38\:\ 0x011e|if (r9.mStrokeLineJoin == null) goto L_0x0125\l}"];
Node_39 [shape=record,label="{39\:\ 0x0120|r1.setStrokeJoin(r9.mStrokeLineJoin)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0125}"];
Node_41 [shape=record,label="{41\:\ 0x0127|if (r9.mStrokeLineCap == null) goto L_0x012e\l}"];
Node_42 [shape=record,label="{42\:\ 0x0129|r1.setStrokeCap(r9.mStrokeLineCap)\l}"];
Node_43 [shape=record,label="{43\:\ 0x012e|r1.setStrokeMiter(r9.mStrokeMiterlimit)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0137|if (r11.isGradient() == false) goto L_0x0151\l}"];
Node_45 [shape=record,label="{45\:\ 0x0139|android.graphics.Shader r11 = r11.getShader()\lr11.setLocalMatrix(r7.mFinalPathMatrix)\lr1.setShader(r11)\lr1.setAlpha(java.lang.Math.round(r9.mStrokeAlpha * 255.0f))\l}"];
Node_46 [shape=record,label="{46\:\ 0x0151|r1.setColor(android.support.graphics.drawable.VectorDrawableCompat.applyAlpha(r11.getColor(), r9.mStrokeAlpha))\l}"];
Node_47 [shape=record,label="{47\:\ 0x015e|r1.setColorFilter(r13)\lfloat r0 = r0 * r8\lr1.setStrokeWidth(r9.mStrokeWidth * r0)\lr10.drawPath(r7.mRenderPath, r1)\l}"];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void android.support.graphics.drawable.VectorDrawableCompat.VPathRenderer.drawPath((r7v0 'this' android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer A[IMMUTABLE_TYPE, THIS]), (r8v0 android.support.graphics.drawable.VectorDrawableCompat$VGroup A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 android.support.graphics.drawable.VectorDrawableCompat$VPath A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 android.graphics.ColorFilter A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_49;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_18;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_32;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_50;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_48;
}

