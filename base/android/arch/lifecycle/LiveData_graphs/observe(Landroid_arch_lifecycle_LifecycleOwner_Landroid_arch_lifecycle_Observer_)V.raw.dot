digraph "CFG forandroid.arch.lifecycle.LiveData.observe(Landroid\/arch\/lifecycle\/LifecycleOwner;Landroid\/arch\/lifecycle\/Observer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.arch.lifecycle.Lifecycle) = (r3 I:android.arch.lifecycle.LifecycleOwner) android.arch.lifecycle.LifecycleOwner.getLifecycle():android.arch.lifecycle.Lifecycle type: INTERFACE \l0x0004: INVOKE  (r0 I:android.arch.lifecycle.Lifecycle$State) = (r0 I:android.arch.lifecycle.Lifecycle) android.arch.lifecycle.Lifecycle.getCurrentState():android.arch.lifecycle.Lifecycle$State type: VIRTUAL \l0x0008: SGET  (r1 I:android.arch.lifecycle.Lifecycle$State) =  android.arch.lifecycle.Lifecycle.State.DESTROYED android.arch.lifecycle.Lifecycle$State \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: NEW_INSTANCE  (r0 I:android.arch.lifecycle.LiveData$LifecycleBoundObserver) =  android.arch.lifecycle.LiveData$LifecycleBoundObserver \l0x000f: INVOKE  \l  (r0 I:android.arch.lifecycle.LiveData$LifecycleBoundObserver)\l  (r2 I:android.arch.lifecycle.LiveData)\l  (r3 I:android.arch.lifecycle.LifecycleOwner)\l  (r4 I:android.arch.lifecycle.Observer)\l android.arch.lifecycle.LiveData.LifecycleBoundObserver.\<init\>(android.arch.lifecycle.LiveData, android.arch.lifecycle.LifecycleOwner, android.arch.lifecycle.Observer):void type: DIRECT \l0x0012: IGET  (r1 I:android.arch.core.internal.SafeIterableMap\<android.arch.lifecycle.Observer\<T\>, android.arch.lifecycle.LiveData\<T\>$ObserverWrapper\>) = (r2 I:android.arch.lifecycle.LiveData) android.arch.lifecycle.LiveData.mObservers android.arch.core.internal.SafeIterableMap \l0x0014: INVOKE  (r4 I:java.lang.Object) = \l  (r1 I:android.arch.core.internal.SafeIterableMap)\l  (r4 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l android.arch.core.internal.SafeIterableMap.putIfAbsent(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l0x0018: CHECK_CAST  (r4 I:android.arch.lifecycle.LiveData$ObserverWrapper) = (android.arch.lifecycle.LiveData$ObserverWrapper) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002b \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: INVOKE  (r1 I:boolean) = \l  (r4 I:android.arch.lifecycle.LiveData$ObserverWrapper)\l  (r3 I:android.arch.lifecycle.LifecycleOwner)\l android.arch.lifecycle.LiveData.ObserverWrapper.isAttachedTo(android.arch.lifecycle.LifecycleOwner):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0023 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0025: CONST_STR  (r4 I:java.lang.String) =  \"Cannot add the same observer with different lifecycles\" \l0x0027: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002e \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: RETURN   \l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|0x002e: INVOKE  (r3 I:android.arch.lifecycle.Lifecycle) = (r3 I:android.arch.lifecycle.LifecycleOwner) android.arch.lifecycle.LifecycleOwner.getLifecycle():android.arch.lifecycle.Lifecycle type: INTERFACE \l0x0032: INVOKE  \l  (r3 I:android.arch.lifecycle.Lifecycle)\l  (r0 I:android.arch.lifecycle.LifecycleObserver)\l android.arch.lifecycle.Lifecycle.addObserver(android.arch.lifecycle.LifecycleObserver):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|0x0035: RETURN   \l}"];
MethodNode[shape=record,label="{public void android.arch.lifecycle.LiveData.observe((r2 'this' I:android.arch.lifecycle.LiveData A[IMMUTABLE_TYPE, THIS]), (r3 I:android.arch.lifecycle.LifecycleOwner A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.arch.lifecycle.Observer\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.MainThread, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/arch\/lifecycle\/LifecycleOwner;, Landroid\/arch\/lifecycle\/Observer\<, TT;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_10[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_12 -> Node_13;
}

