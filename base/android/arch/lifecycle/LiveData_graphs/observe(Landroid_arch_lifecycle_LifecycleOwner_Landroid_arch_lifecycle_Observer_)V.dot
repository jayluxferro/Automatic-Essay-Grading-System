digraph "CFG forandroid.arch.lifecycle.LiveData.observe(Landroid\/arch\/lifecycle\/LifecycleOwner;Landroid\/arch\/lifecycle\/Observer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r3.getLifecycle().getCurrentState() != android.arch.lifecycle.Lifecycle.State.DESTROYED) goto L_0x000d\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|android.arch.lifecycle.LiveData$LifecycleBoundObserver r0 = new android.arch.lifecycle.LiveData.LifecycleBoundObserver(r2, r3, r4)\landroid.arch.lifecycle.LiveData$ObserverWrapper r4 = r2.mObservers.putIfAbsent(r4, r0)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|if (r4 == null) goto L_0x002b\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c}"];
Node_6 [shape=record,label="{6\:\ 0x0020|if (r4.isAttachedTo(r3) == false) goto L_0x0023\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023}"];
Node_8 [shape=record,label="{8\:\ 0x002a|throw new java.lang.IllegalArgumentException(\"Cannot add the same observer with different lifecycles\")\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|if (r4 == null) goto L_0x002e\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|r3.getLifecycle().addObserver(r0)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.arch.lifecycle.LiveData.observe((r2v0 'this' android.arch.lifecycle.LiveData A[IMMUTABLE_TYPE, THIS]), (r3v0 android.arch.lifecycle.LifecycleOwner A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.arch.lifecycle.Observer\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.MainThread, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/arch\/lifecycle\/LifecycleOwner;, Landroid\/arch\/lifecycle\/Observer\<, TT;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12;
}

