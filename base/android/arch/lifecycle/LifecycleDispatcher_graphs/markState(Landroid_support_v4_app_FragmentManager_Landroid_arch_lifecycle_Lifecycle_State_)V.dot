digraph "CFG forandroid.arch.lifecycle.LifecycleDispatcher.markState(Landroid\/support\/v4\/app\/FragmentManager;Landroid\/arch\/lifecycle\/Lifecycle$State;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.List r2 = r2.getFragments()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r2 != null) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|java.util.Iterator r2 = r2.iterator()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|LOOP_START\lLOOP:0: B:4:0x000b\-\>B:12:0x000b\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|if (r2.hasNext() == false) goto L_0x002b\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|android.support.v4.app.Fragment r0 = r2.next()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|if (r0 != null) goto L_0x001a\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|markStateIn(r0, r3)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|if (r0.isAdded() == false) goto L_0x000b\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|markState(r0.getChildFragmentManager(), r3)\l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ 0x000b|LOOP_END\lSYNTHETIC\lLOOP:0: B:4:0x000b\-\>B:12:0x000b\l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x000b|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x000b|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x000b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void android.arch.lifecycle.LifecycleDispatcher.markState((r2v0 android.support.v4.app.FragmentManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 android.arch.lifecycle.Lifecycle$State A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_14[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_16;
Node_12 -> Node_4;
Node_13 -> Node_11;
Node_14 -> Node_12;
Node_15 -> Node_12;
Node_16 -> Node_12;
}

