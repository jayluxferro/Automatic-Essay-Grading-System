digraph "CFG forandroid.arch.lifecycle.MediatorLiveData.addSource(Landroid\/arch\/lifecycle\/LiveData;Landroid\/arch\/lifecycle\/Observer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.arch.lifecycle.MediatorLiveData$Source r0 = new android.arch.lifecycle.MediatorLiveData.Source(r3, r4)\landroid.arch.lifecycle.MediatorLiveData$Source r3 = r2.mSources.putIfAbsent(r3, r0)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r3 == null) goto L_0x001c\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f}"];
Node_3 [shape=record,label="{3\:\ 0x0011|if (r3.mObserver != r4) goto L_0x0014\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014}"];
Node_5 [shape=record,label="{5\:\ 0x001b|throw new java.lang.IllegalArgumentException(\"This source was already added with the different observer\")\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|if (r3 == null) goto L_0x001f\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f}"];
Node_9 [shape=record,label="{9\:\ 0x0023|if (hasActiveObservers() == false) goto L_?\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|r0.plug()\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void android.arch.lifecycle.MediatorLiveData.addSource((r2v0 'this' android.arch.lifecycle.MediatorLiveData A[IMMUTABLE_TYPE, THIS]), (r3v0 android.arch.lifecycle.LiveData\<S\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.arch.lifecycle.Observer\<S\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.MainThread, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<S:, Ljava\/lang\/Object;, \>(, Landroid\/arch\/lifecycle\/LiveData\<, TS;\>;, Landroid\/arch\/lifecycle\/Observer\<, TS;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
}

