digraph "CFG forandroid.arch.lifecycle.Transformations.map(Landroid\/arch\/lifecycle\/LiveData;Landroid\/arch\/core\/util\/Function;)Landroid\/arch\/lifecycle\/LiveData;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:android.arch.lifecycle.MediatorLiveData) =  android.arch.lifecycle.MediatorLiveData \l0x0002: INVOKE  (r0 I:android.arch.lifecycle.MediatorLiveData) android.arch.lifecycle.MediatorLiveData.\<init\>():void type: DIRECT \l0x0005: NEW_INSTANCE  (r1 I:android.arch.lifecycle.Transformations$1) =  android.arch.lifecycle.Transformations$1 \l0x0007: INVOKE  \l  (r1 I:android.arch.lifecycle.Transformations$1)\l  (r0 I:android.arch.lifecycle.MediatorLiveData)\l  (r3 I:android.arch.core.util.Function)\l android.arch.lifecycle.Transformations.1.\<init\>(android.arch.lifecycle.MediatorLiveData, android.arch.core.util.Function):void type: DIRECT \l0x000a: INVOKE  \l  (r0 I:android.arch.lifecycle.MediatorLiveData)\l  (r2 I:android.arch.lifecycle.LiveData)\l  (r1 I:android.arch.lifecycle.Observer)\l android.arch.lifecycle.MediatorLiveData.addSource(android.arch.lifecycle.LiveData, android.arch.lifecycle.Observer):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: RETURN  (r0 I:android.arch.lifecycle.LiveData\<Y\>) \l}"];
MethodNode[shape=record,label="{public static android.arch.lifecycle.LiveData\<Y\> android.arch.lifecycle.Transformations.map((r2 I:android.arch.lifecycle.LiveData\<X\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.arch.core.util.Function\<X, Y\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.MainThread, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<X:, Ljava\/lang\/Object;, Y:, Ljava\/lang\/Object;, \>(, Landroid\/arch\/lifecycle\/LiveData\<, TX;\>;, Landroid\/arch\/core\/util\/Function\<, TX;TY;\>;), Landroid\/arch\/lifecycle\/LiveData\<, TY;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

