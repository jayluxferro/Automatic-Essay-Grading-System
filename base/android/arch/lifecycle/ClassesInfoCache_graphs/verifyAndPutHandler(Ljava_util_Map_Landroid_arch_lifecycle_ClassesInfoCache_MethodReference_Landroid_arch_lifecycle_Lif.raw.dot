digraph "CFG forandroid.arch.lifecycle.ClassesInfoCache.verifyAndPutHandler(Ljava\/util\/Map;Landroid\/arch\/lifecycle\/ClassesInfoCache$MethodReference;Landroid\/arch\/lifecycle\/Lifecycle$Event;Ljava\/lang\/Class;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) = (r4 I:java.util.Map), (r5 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0004: CHECK_CAST  (r0 I:android.arch.lifecycle.Lifecycle$Event) = (android.arch.lifecycle.Lifecycle$Event) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0044 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IGET  (r4 I:java.lang.reflect.Method) = \l  (r5 I:android.arch.lifecycle.ClassesInfoCache$MethodReference)\l android.arch.lifecycle.ClassesInfoCache.MethodReference.mMethod java.lang.reflect.Method \l0x000d: NEW_INSTANCE  (r5 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x000f: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0011: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0014: CONST_STR  (r2 I:java.lang.String) =  \"Method \" \l0x0016: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0019: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.reflect.Method) java.lang.reflect.Method.getName():java.lang.String type: VIRTUAL \l0x001d: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0020: CONST_STR  (r4 I:java.lang.String) =  \" in \" \l0x0022: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0025: INVOKE  (r4 I:java.lang.String) = (r7 I:java.lang.Class) java.lang.Class.getName():java.lang.String type: VIRTUAL \l0x0029: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002c: CONST_STR  (r4 I:java.lang.String) =  \" already declared with different @OnLifecycleEvent value: previous value \" \l0x002e: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0031: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0034: CONST_STR  (r4 I:java.lang.String) =  \", new value \" \l0x0036: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0039: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x003c: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0040: INVOKE  \l  (r5 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0043|0x0043: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0044|0x0044: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0049 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0046|0x0046: INVOKE  \l  (r4 I:java.util.Map)\l  (r5 I:java.lang.Object)\l  (r6 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x0049|0x0049: RETURN   \l}"];
MethodNode[shape=record,label="{private void android.arch.lifecycle.ClassesInfoCache.verifyAndPutHandler((r3 'this' I:android.arch.lifecycle.ClassesInfoCache A[IMMUTABLE_TYPE, THIS]), (r4 I:java.util.Map\<android.arch.lifecycle.ClassesInfoCache$MethodReference, android.arch.lifecycle.Lifecycle$Event\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.arch.lifecycle.ClassesInfoCache$MethodReference A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.arch.lifecycle.Lifecycle$Event A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.Class A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Map\<, Landroid\/arch\/lifecycle\/ClassesInfoCache$MethodReference;, Landroid\/arch\/lifecycle\/Lifecycle$Event;, \>;, Landroid\/arch\/lifecycle\/ClassesInfoCache$MethodReference;, Landroid\/arch\/lifecycle\/Lifecycle$Event;, Ljava\/lang\/Class;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_4;
Node_2 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
}

