digraph "CFG forandroid.arch.lifecycle.ClassesInfoCache.createInfo(Ljava\/lang\/Class;[Ljava\/lang\/reflect\/Method;)Landroid\/arch\/lifecycle\/ClassesInfoCache$CallbackInfo;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Class) = (r12 I:java.lang.Class) java.lang.Class.getSuperclass():java.lang.Class type: VIRTUAL \l0x0004: NEW_INSTANCE  (r1 I:java.util.HashMap) =  java.util.HashMap \l0x0006: INVOKE  (r1 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: INVOKE  (r0 I:android.arch.lifecycle.ClassesInfoCache$CallbackInfo) = \l  (r11 I:android.arch.lifecycle.ClassesInfoCache)\l  (r0 I:java.lang.Class)\l android.arch.lifecycle.ClassesInfoCache.getInfo(java.lang.Class):android.arch.lifecycle.ClassesInfoCache$CallbackInfo type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IGET  (r0 I:java.util.Map\<android.arch.lifecycle.ClassesInfoCache$MethodReference, android.arch.lifecycle.Lifecycle$Event\>) = (r0 I:android.arch.lifecycle.ClassesInfoCache$CallbackInfo) android.arch.lifecycle.ClassesInfoCache.CallbackInfo.mHandlerToEvent java.util.Map \l0x0013: INVOKE  (r1 I:java.util.Map), (r0 I:java.util.Map) java.util.Map.putAll(java.util.Map):void type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: INVOKE  (r0 I:java.lang.Class[]) = (r12 I:java.lang.Class) java.lang.Class.getInterfaces():java.lang.Class[] type: VIRTUAL \l0x001a: ARRAY_LENGTH  (r2 I:int) = (r0 I:?[]) \l0x001b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: IF  (r4 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:12:0x004e \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: AGET  (r5 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x0021: INVOKE  (r5 I:android.arch.lifecycle.ClassesInfoCache$CallbackInfo) = \l  (r11 I:android.arch.lifecycle.ClassesInfoCache)\l  (r5 I:java.lang.Class)\l android.arch.lifecycle.ClassesInfoCache.getInfo(java.lang.Class):android.arch.lifecycle.ClassesInfoCache$CallbackInfo type: VIRTUAL \l0x0025: IGET  (r5 I:java.util.Map\<android.arch.lifecycle.ClassesInfoCache$MethodReference, android.arch.lifecycle.Lifecycle$Event\>) = (r5 I:android.arch.lifecycle.ClassesInfoCache$CallbackInfo) android.arch.lifecycle.ClassesInfoCache.CallbackInfo.mHandlerToEvent java.util.Map \l0x0027: INVOKE  (r5 I:java.util.Set) = (r5 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x002b: INVOKE  (r5 I:java.util.Iterator) = (r5 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: INVOKE  (r6 I:boolean) = (r5 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|0x0033: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x004b \l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|0x0035: INVOKE  (r6 I:java.lang.Object) = (r5 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0039: CHECK_CAST  (r6 I:java.util.Map$Entry) = (java.util.Map$Entry) (r6 I:?[OBJECT, ARRAY]) \l0x003b: INVOKE  (r7 I:java.lang.Object) = (r6 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x003f: CHECK_CAST  (r7 I:android.arch.lifecycle.ClassesInfoCache$MethodReference) = (android.arch.lifecycle.ClassesInfoCache$MethodReference) (r7 I:?[OBJECT, ARRAY]) \l0x0041: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x0045: CHECK_CAST  (r6 I:android.arch.lifecycle.Lifecycle$Event) = (android.arch.lifecycle.Lifecycle$Event) (r6 I:?[OBJECT, ARRAY]) \l0x0047: INVOKE  \l  (r11 I:android.arch.lifecycle.ClassesInfoCache)\l  (r1 I:java.util.Map)\l  (r7 I:android.arch.lifecycle.ClassesInfoCache$MethodReference)\l  (r6 I:android.arch.lifecycle.Lifecycle$Event)\l  (r12 I:java.lang.Class)\l android.arch.lifecycle.ClassesInfoCache.verifyAndPutHandler(java.util.Map, android.arch.lifecycle.ClassesInfoCache$MethodReference, android.arch.lifecycle.Lifecycle$Event, java.lang.Class):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x004b|0x004b: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x004e|0x004e: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0051 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0051|0x0051: INVOKE  (r13 I:java.lang.reflect.Method[]) = \l  (r11 I:android.arch.lifecycle.ClassesInfoCache)\l  (r12 I:java.lang.Class)\l android.arch.lifecycle.ClassesInfoCache.getDeclaredMethods(java.lang.Class):java.lang.reflect.Method[] type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0055|0x0055: ARRAY_LENGTH  (r0 I:int) = (r13 I:?[]) \l0x0056: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0057: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0058|0x0058: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:45:0x00c3 \l}"];
Node_17 [shape=record,label="{17\:\ 0x005a|0x005a: AGET  (r5 I:?[OBJECT, ARRAY]) = \l  (r13 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l \l0x005c: CONST_CLASS  (r6 I:java.lang.Class\<android.arch.lifecycle.OnLifecycleEvent\>) =  android.arch.lifecycle.OnLifecycleEvent.class \l0x005e: INVOKE  (r6 I:java.lang.annotation.Annotation) = (r5 I:java.lang.reflect.Method), (r6 I:java.lang.Class) java.lang.reflect.Method.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l0x0062: CHECK_CAST  (r6 I:android.arch.lifecycle.OnLifecycleEvent) = (android.arch.lifecycle.OnLifecycleEvent) (r6 I:?[OBJECT, ARRAY]) \l0x0064: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0065|0x0065: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0068 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0068|0x0068: INVOKE  (r4 I:java.lang.Class[]) = (r5 I:java.lang.reflect.Method) java.lang.reflect.Method.getParameterTypes():java.lang.Class[] type: VIRTUAL \l0x006c: ARRAY_LENGTH  (r8 I:int) = (r4 I:?[]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x006d|0x006d: IF  (r8 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:27:0x0083 \l}"];
Node_22 [shape=record,label="{22\:\ 0x006f|0x006f: AGET  (r8 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0071: CONST_CLASS  (r9 I:java.lang.Class\<android.arch.lifecycle.LifecycleOwner\>) =  android.arch.lifecycle.LifecycleOwner.class \l0x0073: INVOKE  (r8 I:boolean) = (r8 I:java.lang.Class), (r9 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x0077|0x0077: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x007b \l}"];
Node_24 [shape=record,label="{24\:\ 0x0079|0x0079: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x007b|0x007b: NEW_INSTANCE  (r12 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x007d: CONST_STR  (r13 I:java.lang.String) =  \"invalid parameter type. Must be one and instanceof LifecycleOwner\" \l0x007f: INVOKE  \l  (r12 I:java.lang.IllegalArgumentException)\l  (r13 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_26 [shape=record,label="{26\:\ 0x0082|0x0082: THROW  (r12 I:java.lang.Throwable) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0083|0x0083: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_28 [shape=record,label="{28\:\ 0x0084|0x0084: INVOKE  (r6 I:android.arch.lifecycle.Lifecycle$Event) = (r6 I:android.arch.lifecycle.OnLifecycleEvent) android.arch.lifecycle.OnLifecycleEvent.value():android.arch.lifecycle.Lifecycle$Event type: INTERFACE \l0x0088: ARRAY_LENGTH  (r9 I:int) = (r4 I:?[]) \l0x0089: CONST  (r10 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x008a|0x008a: IF  (r9 I:?[int, byte, short, char]) \<= (r7 I:?[int, byte, short, char])  \-\> B:39:0x00ac \l}"];
Node_30 [shape=record,label="{30\:\ 0x008c|0x008c: AGET  (r8 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r7 I:?[int, short, byte, char]) \l0x008e: CONST_CLASS  (r9 I:java.lang.Class\<android.arch.lifecycle.Lifecycle$Event\>) =  android.arch.lifecycle.Lifecycle$Event.class \l0x0090: INVOKE  (r8 I:boolean) = (r8 I:java.lang.Class), (r9 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x0094|0x0094: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x00a4 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0096|0x0096: SGET  (r8 I:android.arch.lifecycle.Lifecycle$Event) =  android.arch.lifecycle.Lifecycle.Event.ON_ANY android.arch.lifecycle.Lifecycle$Event \l}"];
Node_33 [shape=record,label="{33\:\ 0x0098|0x0098: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x009c \l}"];
Node_34 [shape=record,label="{34\:\ 0x009a|0x009a: CONST  (r8 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x009c|0x009c: NEW_INSTANCE  (r12 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x009e: CONST_STR  (r13 I:java.lang.String) =  \"Second arg is supported only for ON_ANY value\" \l0x00a0: INVOKE  \l  (r12 I:java.lang.IllegalArgumentException)\l  (r13 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_36 [shape=record,label="{36\:\ 0x00a3|0x00a3: THROW  (r12 I:java.lang.Throwable) \l}"];
Node_37 [shape=record,label="{37\:\ 0x00a4|0x00a4: NEW_INSTANCE  (r12 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x00a6: CONST_STR  (r13 I:java.lang.String) =  \"invalid parameter type. second arg must be an event\" \l0x00a8: INVOKE  \l  (r12 I:java.lang.IllegalArgumentException)\l  (r13 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_38 [shape=record,label="{38\:\ 0x00ab|0x00ab: THROW  (r12 I:java.lang.Throwable) \l}"];
Node_39 [shape=record,label="{39\:\ 0x00ac|0x00ac: ARRAY_LENGTH  (r4 I:int) = (r4 I:?[]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x00ad|0x00ad: IF  (r4 I:?[int, byte, short, char]) \> (r10 I:?[int, byte, short, char])  \-\> B:43:0x00bb \l}"];
Node_41 [shape=record,label="{41\:\ 0x00af|0x00af: NEW_INSTANCE  (r4 I:android.arch.lifecycle.ClassesInfoCache$MethodReference) =  android.arch.lifecycle.ClassesInfoCache$MethodReference \l0x00b1: INVOKE  \l  (r4 I:android.arch.lifecycle.ClassesInfoCache$MethodReference)\l  (r8 I:int)\l  (r5 I:java.lang.reflect.Method)\l android.arch.lifecycle.ClassesInfoCache.MethodReference.\<init\>(int, java.lang.reflect.Method):void type: DIRECT \l0x00b4: INVOKE  \l  (r11 I:android.arch.lifecycle.ClassesInfoCache)\l  (r1 I:java.util.Map)\l  (r4 I:android.arch.lifecycle.ClassesInfoCache$MethodReference)\l  (r6 I:android.arch.lifecycle.Lifecycle$Event)\l  (r12 I:java.lang.Class)\l android.arch.lifecycle.ClassesInfoCache.verifyAndPutHandler(java.util.Map, android.arch.lifecycle.ClassesInfoCache$MethodReference, android.arch.lifecycle.Lifecycle$Event, java.lang.Class):void type: DIRECT \l0x00b7: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x00b8|0x00b8: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_43 [shape=record,label="{43\:\ 0x00bb|0x00bb: NEW_INSTANCE  (r12 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x00bd: CONST_STR  (r13 I:java.lang.String) =  \"cannot have more than 2 params\" \l0x00bf: INVOKE  \l  (r12 I:java.lang.IllegalArgumentException)\l  (r13 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_44 [shape=record,label="{44\:\ 0x00c2|0x00c2: THROW  (r12 I:java.lang.Throwable) \l}"];
Node_45 [shape=record,label="{45\:\ 0x00c3|0x00c3: NEW_INSTANCE  (r13 I:android.arch.lifecycle.ClassesInfoCache$CallbackInfo) =  android.arch.lifecycle.ClassesInfoCache$CallbackInfo \l0x00c5: INVOKE  \l  (r13 I:android.arch.lifecycle.ClassesInfoCache$CallbackInfo)\l  (r1 I:java.util.Map)\l android.arch.lifecycle.ClassesInfoCache.CallbackInfo.\<init\>(java.util.Map):void type: DIRECT \l0x00c8: IGET  (r0 I:java.util.Map\<java.lang.Class, android.arch.lifecycle.ClassesInfoCache$CallbackInfo\>) = (r11 I:android.arch.lifecycle.ClassesInfoCache) android.arch.lifecycle.ClassesInfoCache.mCallbackMap java.util.Map \l0x00ca: INVOKE  \l  (r0 I:java.util.Map)\l  (r12 I:java.lang.Object)\l  (r13 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x00cd: IGET  (r0 I:java.util.Map\<java.lang.Class, java.lang.Boolean\>) = (r11 I:android.arch.lifecycle.ClassesInfoCache) android.arch.lifecycle.ClassesInfoCache.mHasLifecycleMethods java.util.Map \l0x00cf: INVOKE  (r1 I:java.lang.Boolean) = (r4 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l0x00d3: INVOKE  \l  (r0 I:java.util.Map)\l  (r12 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_46 [shape=record,label="{46\:\ 0x00d6|0x00d6: RETURN  \l  (r13 I:android.arch.lifecycle.ClassesInfoCache$CallbackInfo)\l \l}"];
MethodNode[shape=record,label="{private android.arch.lifecycle.ClassesInfoCache$CallbackInfo android.arch.lifecycle.ClassesInfoCache.createInfo((r11 'this' I:android.arch.lifecycle.ClassesInfoCache A[IMMUTABLE_TYPE, THIS]), (r12 I:java.lang.Class A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.lang.reflect.Method[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_8;
Node_11 -> Node_6;
Node_12 -> Node_14;
Node_12 -> Node_15[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_45;
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_18 -> Node_42[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_39;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_37;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_39;
Node_35 -> Node_36;
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_43;
Node_41 -> Node_42;
Node_42 -> Node_16;
Node_43 -> Node_44;
Node_45 -> Node_46;
}

