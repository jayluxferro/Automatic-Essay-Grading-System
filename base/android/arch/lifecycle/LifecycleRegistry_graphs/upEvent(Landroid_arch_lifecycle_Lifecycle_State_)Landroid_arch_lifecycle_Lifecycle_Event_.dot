digraph "CFG forandroid.arch.lifecycle.LifecycleRegistry.upEvent(Landroid\/arch\/lifecycle\/Lifecycle$State;)Landroid\/arch\/lifecycle\/Lifecycle$Event;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|switch(r3) \{\l    case android.arch.lifecycle.Lifecycle.State.INITIALIZED :android.arch.lifecycle.Lifecycle$State: goto L_0x002e;\l    case android.arch.lifecycle.Lifecycle.State.CREATED :android.arch.lifecycle.Lifecycle$State: goto L_0x002b;\l    case android.arch.lifecycle.Lifecycle.State.STARTED :android.arch.lifecycle.Lifecycle$State: goto L_0x0028;\l    case android.arch.lifecycle.Lifecycle.State.RESUMED :android.arch.lifecycle.Lifecycle$State: goto L_0x0022;\l    case android.arch.lifecycle.Lifecycle.State.DESTROYED :android.arch.lifecycle.Lifecycle$State: goto L_0x002e;\l    default: goto L_0x000b;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Unexpected state value \")\lr1.append(r3)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
Node_4 [shape=record,label="{4\:\ 0x0022}"];
Node_5 [shape=record,label="{5\:\ 0x0027|throw new java.lang.IllegalArgumentException()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0028}"];
Node_7 [shape=record,label="{7\:\ 0x002a|RETURN\l|return android.arch.lifecycle.Lifecycle.Event.ON_RESUME\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b}"];
Node_9 [shape=record,label="{9\:\ 0x002d|RETURN\l|return android.arch.lifecycle.Lifecycle.Event.ON_START\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e}"];
Node_11 [shape=record,label="{11\:\ 0x0030|RETURN\l|return android.arch.lifecycle.Lifecycle.Event.ON_CREATE\l}"];
MethodNode[shape=record,label="{private static android.arch.lifecycle.Lifecycle$Event android.arch.lifecycle.LifecycleRegistry.upEvent((r3v0 android.arch.lifecycle.Lifecycle$State A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_6;
Node_1 -> Node_8;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

