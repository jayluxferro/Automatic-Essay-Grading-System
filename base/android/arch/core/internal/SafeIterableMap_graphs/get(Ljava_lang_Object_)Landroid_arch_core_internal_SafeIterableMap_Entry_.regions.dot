digraph "CFG forandroid.arch.core.internal.SafeIterableMap.get(Ljava\/lang\/Object;)Landroid\/arch\/core\/internal\/SafeIterableMap$Entry;" {
subgraph cluster_Region_1560074309 {
label = "R(3:0|(1:4)|5)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.arch.core.internal.SafeIterableMap$Entry\<K, V\> android.arch.core.internal.SafeIterableMap.Entry\<K, V\> r0 = r2.mStart\l}"];
subgraph cluster_LoopRegion_1666361674 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|LOOP_START\lPHI: r0 \l  PHI: (r0v1 android.arch.core.internal.SafeIterableMap$Entry\<K, V\>) = (r0v0 android.arch.core.internal.SafeIterableMap$Entry\<K, V\>), (r0v2 android.arch.core.internal.SafeIterableMap$Entry\<K, V\>) binds: [B:0:0x0000, B:4:0x000d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0002\-\>B:4:0x000d\l|if (r0 != null) goto L_0x0004\l}"];
subgraph cluster_Region_914680326 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|LOOP_END\lLOOP:0: B:1:0x0002\-\>B:4:0x000d\l|android.arch.core.internal.SafeIterableMap$Entry\<K, V\> r0 = r0.mNext\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0010|RETURN\l|return r0\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000a|ADDED_TO_REGION\l|if (r0.mKey.equals(r3) == false) goto L_0x000d\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0010|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0010|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected android.arch.core.internal.SafeIterableMap$Entry\<K, V\> android.arch.core.internal.SafeIterableMap.get((r2v0 'this' android.arch.core.internal.SafeIterableMap A[IMMUTABLE_TYPE, THIS]), (r3v0 K A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TK;), Landroid\/arch\/core\/internal\/SafeIterableMap$Entry\<, TK;TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_4 -> Node_1;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_6 -> Node_5;
Node_7 -> Node_5;
}

