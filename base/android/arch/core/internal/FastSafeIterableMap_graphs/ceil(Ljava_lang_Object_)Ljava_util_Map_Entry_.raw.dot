digraph "CFG forandroid.arch.core.internal.FastSafeIterableMap.ceil(Ljava\/lang\/Object;)Ljava\/util\/Map$Entry;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r1 I:android.arch.core.internal.FastSafeIterableMap)\l  (r2 I:java.lang.Object)\l android.arch.core.internal.FastSafeIterableMap.contains(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:java.util.HashMap\<K, android.arch.core.internal.SafeIterableMap$Entry\<K, V\>\>) = (r1 I:android.arch.core.internal.FastSafeIterableMap) android.arch.core.internal.FastSafeIterableMap.mHashMap java.util.HashMap \l0x0008: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.HashMap), (r2 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x000c: CHECK_CAST  (r2 I:android.arch.core.internal.SafeIterableMap$Entry) = (android.arch.core.internal.SafeIterableMap$Entry) (r2 I:?[OBJECT, ARRAY]) \l0x000e: IGET  (r2 I:android.arch.core.internal.SafeIterableMap$Entry\<K, V\>) = (r2 I:android.arch.core.internal.SafeIterableMap$Entry) android.arch.core.internal.SafeIterableMap.Entry.mPrevious android.arch.core.internal.SafeIterableMap$Entry \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: RETURN  (r2 I:java.util.Map$Entry\<K, V\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: RETURN  (r2 I:java.util.Map$Entry\<K, V\>) \l}"];
MethodNode[shape=record,label="{public java.util.Map$Entry\<K, V\> android.arch.core.internal.FastSafeIterableMap.ceil((r1 'this' I:android.arch.core.internal.FastSafeIterableMap A[IMMUTABLE_TYPE, THIS]), (r2 I:K A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TK;), Ljava\/util\/Map$Entry\<, TK;TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

