digraph "CFG forandroid.arch.core.executor.ArchTaskExecutor.getInstance()Landroid\/arch\/core\/executor\/ArchTaskExecutor;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (sInstance == null) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0006|RETURN\l|return sInstance\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|java.lang.Class\<android.arch.core.executor.ArchTaskExecutor\> r0 = android.arch.core.executor.ArchTaskExecutor.class\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|monitor\-enter(r0)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|SYNTHETIC\l}"];
Node_7 [shape=record,label="{7\:\ ?}"];
Node_8 [shape=record,label="{8\:\ 0x000c|if (sInstance != null) goto L_0x0015\l}"];
Node_9 [shape=record,label="{9\:\ 0x000e|sInstance = new android.arch.core.executor.ArchTaskExecutor()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|monitor\-exit(r0)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0016}"];
Node_12 [shape=record,label="{12\:\ 0x0018|RETURN\l|return sInstance\l}"];
Node_13 [shape=record,label="{13\:\ 0x0019|LOOP_START\lREMOVE\lLOOP:0: B:13:0x0019\-\>B:17:0x0019\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_14 [shape=record,label="{14\:\ 0x001a|SYNTHETIC\lREMOVE\lSplitter:B:14:0x001a\l}"];
Node_15 [shape=record,label="{15\:\ ?|REMOVE\lSplitter:B:14:0x001a\l}"];
Node_16 [shape=record,label="{16\:\ 0x001b|REMOVE\l|throw r1\l}"];
Node_17 [shape=record,label="{17\:\ 0x0019|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:13:0x0019\-\>B:17:0x0019\l}"];
Node_18 [shape=record,label="{18\:\ 0x001b|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_19 [shape=record,label="{19\:\ 0x0019|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
MethodNode[shape=record,label="{public static android.arch.core.executor.ArchTaskExecutor android.arch.core.executor.ArchTaskExecutor.getInstance()  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_17;
Node_15 -> Node_18;
Node_15 -> Node_19;
Node_17 -> Node_13;
Node_18 -> Node_16;
Node_19 -> Node_17;
}

