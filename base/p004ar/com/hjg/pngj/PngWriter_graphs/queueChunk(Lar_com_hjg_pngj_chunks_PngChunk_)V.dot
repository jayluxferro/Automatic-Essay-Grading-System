digraph "CFG forar.com.hjg.pngj.PngWriter.queueChunk(Lar\/com\/hjg\/pngj\/chunks\/PngChunk;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r0 = r3.chunksList.getQueuedEquivalent(r4).iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|LOOP_START\lLOOP:0: B:1:0x000a\-\>B:3:0x0010\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|if (r0.hasNext() == false) goto L_0x001e\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|LOOP_END\lLOOP:0: B:1:0x000a\-\>B:3:0x0010\l|ar.com.hjg.pngj.chunks.ChunksListForWrite r2 = getChunksList()\lr2.removeChunk(r0.next())\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|r3.chunksList.queue(r4)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.PngWriter.queueChunk((r3v0 'this' ar.com.hjg.pngj.PngWriter A[IMMUTABLE_TYPE, THIS]), (r4v0 ar.com.hjg.pngj.chunks.PngChunk A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_6 -> Node_4;
}

