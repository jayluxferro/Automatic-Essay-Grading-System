digraph "CFG forar.com.hjg.pngj.PngWriter.computeCompressionRatio()D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r4 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.currentChunkGroup int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:4:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r0 I:ar.com.hjg.pngj.PngIDatChunkOutputStream) = (r4 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.datStream ar.com.hjg.pngj.PngIDatChunkOutputStream \l0x0007: INVOKE  (r0 I:long) = (r0 I:ar.com.hjg.pngj.PngIDatChunkOutputStream) ar.com.hjg.pngj.PngIDatChunkOutputStream.getCountFlushed():long type: VIRTUAL \l0x000b: CAST  (r0 I:double) = (double) (r0 I:long) \l0x000c: IGET  (r2 I:ar.com.hjg.pngj.ImageInfo) = (r4 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.imgInfo ar.com.hjg.pngj.ImageInfo \l0x000e: IGET  (r2 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPerRow int \l0x0010: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x0012: IGET  (r3 I:ar.com.hjg.pngj.ImageInfo) = (r4 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.imgInfo ar.com.hjg.pngj.ImageInfo \l0x0014: IGET  (r3 I:int) = (r3 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.rows int \l0x0016: ARITH  (r2 I:int) = (r2 I:int) * (r3 I:int) \l0x0018: CAST  (r2 I:double) = (double) (r2 I:int) \l0x0019: ARITH  (r0 I:double) = (r0 I:double) \/ (r2 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: RETURN  (r0 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.PngjOutputException) =  ar.com.hjg.pngj.PngjOutputException \l0x001d: CONST_STR  (r1 I:java.lang.String) =  \"must be called after end()\" \l0x001f: INVOKE  \l  (r0 I:ar.com.hjg.pngj.PngjOutputException)\l  (r1 I:java.lang.String)\l ar.com.hjg.pngj.PngjOutputException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public double ar.com.hjg.pngj.PngWriter.computeCompressionRatio((r4 'this' I:ar.com.hjg.pngj.PngWriter A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

