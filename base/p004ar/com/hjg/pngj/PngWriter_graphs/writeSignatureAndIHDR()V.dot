digraph "CFG forar.com.hjg.pngj.PngWriter.writeSignatureAndIHDR()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.currentChunkGroup = 0\lp004ar.com.hjg.pngj.PngHelperInternal.writeBytes(r4.f52os, p004ar.com.hjg.pngj.PngHelperInternal.getPngIdSignature())\lar.com.hjg.pngj.chunks.PngChunkIHDR r1 = new p004ar.com.hjg.pngj.chunks.PngChunkIHDR(r4.imgInfo)\lr1.setCols(r4.imgInfo.cols)\lr1.setRows(r4.imgInfo.rows)\lr1.setBitspc(r4.imgInfo.bitDepth)\l}"];
Node_1 [shape=record,label="{1\:\ 0x002c|if (r4.imgInfo.alpha == false) goto L_0x0030\l}"];
Node_2 [shape=record,label="{2\:\ 0x002e|r2 = 4\l}"];
Node_3 [shape=record,label="{3\:\ 0x0030|r2 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|PHI: r2 \l  PHI: (r2v10 int) = (r2v16 int), (r2v17 int) binds: [B:3:0x0030, B:2:0x002e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0035|if (r4.imgInfo.indexed == false) goto L_0x0039\l}"];
Node_6 [shape=record,label="{6\:\ 0x0037|int r2 = r2 + 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0039|PHI: r2 \l  PHI: (r2v11 int) = (r2v10 int), (r2v15 int) binds: [B:5:0x0035, B:6:0x0037] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x003d|if (r4.imgInfo.greyscale != false) goto L_0x0041\l}"];
Node_9 [shape=record,label="{9\:\ 0x003f|int r2 = r2 + 2\l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|PHI: r2 \l  PHI: (r2v12 int) = (r2v11 int), (r2v14 int) binds: [B:8:0x003d, B:9:0x003f] A[DONT_GENERATE, DONT_INLINE]\l|r1.setColormodel(r2)\lr1.setCompmeth(0)\lr1.setFilmeth(0)\lr1.setInterlaced(0)\lr1.createRawChunk().writeChunk(r4.f52os)\lr4.chunksList.getChunks().add(r1)\l}"];
Node_11 [shape=record,label="{11\:\ 0x005f|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void ar.com.hjg.pngj.PngWriter.writeSignatureAndIHDR((r4v0 'this' ar.com.hjg.pngj.PngWriter A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

