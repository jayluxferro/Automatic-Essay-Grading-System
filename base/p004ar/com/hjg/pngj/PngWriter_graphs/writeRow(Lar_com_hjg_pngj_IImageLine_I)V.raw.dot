digraph "CFG forar.com.hjg.pngj.PngWriter.writeRow(Lar\/com\/hjg\/pngj\/IImageLine;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.rowNum int \l0x0002: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0004: IPUT  (r0 I:int), (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.rowNum int \l0x0006: IGET  (r0 I:int) = (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.rowNum int \l0x0008: IGET  (r1 I:ar.com.hjg.pngj.ImageInfo) = (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.imgInfo ar.com.hjg.pngj.ImageInfo \l0x000a: IGET  (r1 I:int) = (r1 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.rows int \l0x000c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: IPUT  (r2 I:int), (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.rowNum int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IGET  (r0 I:ar.com.hjg.pngj.ImageInfo) = (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.imgInfo ar.com.hjg.pngj.ImageInfo \l0x0013: IGET  (r0 I:int) = (r0 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.rows int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r5 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:12:0x0040 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IGET  (r0 I:int) = (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.rowNum int \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001f \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: NEW_INSTANCE  (r4 I:ar.com.hjg.pngj.PngjOutputException) =  ar.com.hjg.pngj.PngjOutputException \l0x0021: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0023: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0026: CONST_STR  (r1 I:java.lang.String) =  \"rows must be written in order: expected:\" \l0x0028: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002b: IGET  (r1 I:int) = (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.rowNum int \l0x002d: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0030: CONST_STR  (r1 I:java.lang.String) =  \" passed:\" \l0x0032: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0035: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0038: INVOKE  (r5 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003c: INVOKE  \l  (r4 I:ar.com.hjg.pngj.PngjOutputException)\l  (r5 I:java.lang.String)\l ar.com.hjg.pngj.PngjOutputException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|0x003f: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|0x0040: IGET  (r0 I:int) = (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.rowNum int \l}"];
Node_13 [shape=record,label="{13\:\ 0x0042|0x0042: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x004a \l}"];
Node_14 [shape=record,label="{14\:\ 0x0044|0x0044: IGET  (r0 I:int) = (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.currentpass int \l0x0046: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0048: IPUT  (r0 I:int), (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.currentpass int \l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|0x004a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0058 \l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|0x004c: IGET  (r5 I:int) = (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.currentpass int \l0x004e: IGET  (r0 I:int) = (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.passes int \l}"];
Node_17 [shape=record,label="{17\:\ 0x0050|0x0050: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0058 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0052|0x0052: INVOKE  (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.initIdat():void type: DIRECT \l0x0055: INVOKE  (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.writeFirstChunks():void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0058|0x0058: IGET  (r5 I:ar.com.hjg.pngj.pixels.PixelsWriter) = (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.pixelsWriter ar.com.hjg.pngj.pixels.PixelsWriter \l0x005a: INVOKE  (r5 I:byte[]) = (r5 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.getRowb():byte[] type: VIRTUAL \l0x005e: INVOKE  (r4 I:ar.com.hjg.pngj.IImageLine), (r5 I:byte[]) ar.com.hjg.pngj.IImageLine.writeToPngRaw(byte[]):void type: INTERFACE \l0x0061: IGET  (r4 I:ar.com.hjg.pngj.pixels.PixelsWriter) = (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.pixelsWriter ar.com.hjg.pngj.pixels.PixelsWriter \l0x0063: INVOKE  (r4 I:ar.com.hjg.pngj.pixels.PixelsWriter), (r5 I:byte[]) ar.com.hjg.pngj.pixels.PixelsWriter.processRow(byte[]):void type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0066|0x0066: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.PngWriter.writeRow((r3 'this' I:ar.com.hjg.pngj.PngWriter A[IMMUTABLE_TYPE, THIS]), (r4 I:ar.com.hjg.pngj.IImageLine A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_12[style=dashed];
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
}

