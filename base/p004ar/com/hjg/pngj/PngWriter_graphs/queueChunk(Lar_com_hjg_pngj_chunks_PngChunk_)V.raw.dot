digraph "CFG forar.com.hjg.pngj.PngWriter.queueChunk(Lar\/com\/hjg\/pngj\/chunks\/PngChunk;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:ar.com.hjg.pngj.chunks.ChunksListForWrite) = (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.chunksList ar.com.hjg.pngj.chunks.ChunksListForWrite \l0x0002: INVOKE  (r0 I:java.util.List) = \l  (r0 I:ar.com.hjg.pngj.chunks.ChunksListForWrite)\l  (r4 I:ar.com.hjg.pngj.chunks.PngChunk)\l ar.com.hjg.pngj.chunks.ChunksListForWrite.getQueuedEquivalent(ar.com.hjg.pngj.chunks.PngChunk):java.util.List type: VIRTUAL \l0x0006: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001e \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0014: CHECK_CAST  (r1 I:ar.com.hjg.pngj.chunks.PngChunk) = (ar.com.hjg.pngj.chunks.PngChunk) (r1 I:?[OBJECT, ARRAY]) \l0x0016: INVOKE  (r2 I:ar.com.hjg.pngj.chunks.ChunksListForWrite) = (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.getChunksList():ar.com.hjg.pngj.chunks.ChunksListForWrite type: VIRTUAL \l0x001a: INVOKE  \l  (r2 I:ar.com.hjg.pngj.chunks.ChunksListForWrite)\l  (r1 I:ar.com.hjg.pngj.chunks.PngChunk)\l ar.com.hjg.pngj.chunks.ChunksListForWrite.removeChunk(ar.com.hjg.pngj.chunks.PngChunk):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: IGET  (r0 I:ar.com.hjg.pngj.chunks.ChunksListForWrite) = (r3 I:ar.com.hjg.pngj.PngWriter) ar.com.hjg.pngj.PngWriter.chunksList ar.com.hjg.pngj.chunks.ChunksListForWrite \l0x0020: INVOKE  \l  (r0 I:ar.com.hjg.pngj.chunks.ChunksListForWrite)\l  (r4 I:ar.com.hjg.pngj.chunks.PngChunk)\l ar.com.hjg.pngj.chunks.ChunksListForWrite.queue(ar.com.hjg.pngj.chunks.PngChunk):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.PngWriter.queueChunk((r3 'this' I:ar.com.hjg.pngj.PngWriter A[IMMUTABLE_TYPE, THIS]), (r4 I:ar.com.hjg.pngj.chunks.PngChunk A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

