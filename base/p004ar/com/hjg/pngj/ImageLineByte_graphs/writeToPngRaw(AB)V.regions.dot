digraph "CFG forar.com.hjg.pngj.ImageLineByte.writeToPngRaw([B)V" {
subgraph cluster_Region_943932705 {
label = "R(2:0|(2:2|(1:5))(1:(1:(1:10))(2:11|(3:14|(1:18)(0)|19))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = 0\lr10[0] = (byte) r9.filterType.val\lint r3 = 1\l}"];
subgraph cluster_IfRegion_316681530 {
label = "IF [B:1:0x000f] THEN: R(2:2|(1:5)) ELSE: R(1:(1:(1:10))(2:11|(3:14|(1:18)(0)|19)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000f|if (r9.imgInfo.bitDepth == 8) goto L_0x0011\l}"];
subgraph cluster_Region_1654740626 {
label = "R(2:2|(1:5))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0011|java.lang.System.arraycopy(r9.scanline, 0, r10, 1, r9.size)\l}"];
subgraph cluster_LoopRegion_1973914067 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001a|if (r1 \< r9.size) goto L_0x001c\l}"];
subgraph cluster_Region_1297859388 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001c|LOOP_END\lLOOP:0: B:3:0x0018\-\>B:5:0x001c\l|int int r0 = r1 + 1\lr10[r0] = r9.scanline[r1]\lr1 = r0\l}"];
}
}
}
subgraph cluster_Region_197044982 {
label = "R(1:(1:(1:10))(2:11|(3:14|(1:18)(0)|19))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1643119744 {
label = "IF [B:7:0x002c] THEN: R(1:(1:10)) ELSE: R(2:11|(3:14|(1:18)(0)|19)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002c|if (r9.imgInfo.bitDepth == 16) goto L_0x002e\l}"];
subgraph cluster_Region_1927965817 {
label = "R(1:(1:10))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1475322946 {
label = "LOOP:1: (1:10)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0030|if (r1 \< r9.size) goto L_0x0032\l}"];
subgraph cluster_Region_1092798829 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0032|LOOP_END\lLOOP:1: B:8:0x002e\-\>B:10:0x0032\l|int int r0 = r3 + 1\lr10[r3] = r9.scanline[r1]\lint r3 = r0 + 1\lr10[r0] = r9.scanline2[r1]\lr1++\l}"];
}
}
}
subgraph cluster_Region_580472747 {
label = "R(2:11|(3:14|(1:18)(0)|19))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0045|int int r0 = r9.imgInfo.bitDepth\lint int r2 = 8 \- r0\lint r6 = r2\lint r4 = 0\lint r5 = 0\lint r7 = 1\l}"];
subgraph cluster_LoopRegion_1376759439 {
label = "LOOP:2: (3:14|(1:18)(0)|19)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0050|if (r4 \< r9.size) goto L_0x0052\l}"];
subgraph cluster_Region_826813159 {
label = "R(3:14|(1:18)(0)|19)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0052|r5 \|= r9.scanline[r4] \<\< r6\lint int r6 = r6 \- r0\l}"];
subgraph cluster_IfRegion_973293426 {
label = "IF [B:15:0x0059, B:17:0x005e] THEN: R(1:18) ELSE: R(0)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0059|if (r6 \< 0) goto L_0x0060\l}"];
Node_17 [shape=record,label="{17\:\ 0x005e|ADDED_TO_REGION\l|if (r4 == (r9.size \- 1)) goto L_0x0060\l}"];
subgraph cluster_Region_464471352 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0060|r10[r7] = (byte) r5\lr7++\lr5 = 0\lr6 = r2\l}"];
}
subgraph cluster_Region_437760368 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_19 [shape=record,label="{19\:\ 0x0068|LOOP_END\lPHI: r5 r6 r7 \l  PHI: (r5v3 int) = (r5v5 int), (r5v2 int) binds: [B:23:0x0068, B:24:0x0068] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v3 int) = (r6v5 int), (r6v2 int) binds: [B:23:0x0068, B:24:0x0068] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v2 int) = (r7v3 int), (r7v1 int) binds: [B:23:0x0068, B:24:0x0068] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:12:0x004e\-\>B:19:0x0068\l|r4++\lr6 = r6\l}"];
}
}
}
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0018|LOOP_START\lPHI: r1 \l  PHI: (r1v3 int) = (r1v0 int), (r1v5 int) binds: [B:2:0x0011, B:5:0x001c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0018\-\>B:5:0x001c\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0026}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x002e|LOOP_START\lPHI: r1 r3 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:7:0x002c, B:10:0x0032] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:7:0x002c, B:10:0x0032] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:8:0x002e\-\>B:10:0x0032\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x004e|LOOP_START\lPHI: r4 r5 r6 r7 \l  PHI: (r4v2 int) = (r4v1 int), (r4v3 int) binds: [B:11:0x0045, B:19:0x0068] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 int) = (r5v0 int), (r5v3 int) binds: [B:11:0x0045, B:19:0x0068] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 int) = (r6v0 int), (r6v6 int) binds: [B:11:0x0045, B:19:0x0068] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 int) = (r7v0 int), (r7v2 int) binds: [B:11:0x0045, B:19:0x0068] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:12:0x004e\-\>B:19:0x0068\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x005b}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x006b|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x006b|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x006b|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0068|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0068|SYNTHETIC\l}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_26 [shape=record,color=red,label="{26\:\ ?|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.ImageLineByte.writeToPngRaw((r9v0 'this' ar.com.hjg.pngj.ImageLineByte A[IMMUTABLE_TYPE, THIS]), (r10v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r6v0, resolved type: byte\}\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r6v1, resolved type: byte\}\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r6v6, resolved type: byte\}\lMulti\-variable type inference failed\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_20[style=dashed];
Node_5 -> Node_3;
Node_7 -> Node_8;
Node_7 -> Node_11[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_21[style=dashed];
Node_10 -> Node_8;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_22[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_17 -> Node_18;
Node_17 -> Node_24[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_12;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_12 -> Node_13;
Node_16 -> Node_17;
Node_20 -> Node_25;
Node_21 -> Node_26;
Node_22 -> Node_27;
Node_23 -> Node_19;
Node_24 -> Node_19;
}

