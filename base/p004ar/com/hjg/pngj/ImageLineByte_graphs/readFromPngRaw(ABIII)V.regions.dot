digraph "CFG forar.com.hjg.pngj.ImageLineByte.readFromPngRaw([BIII)V" {
subgraph cluster_Region_510845118 {
label = "R(2:0|(1:(2:(2:3|45)|(2:4|(3:6|(1:8)(0)|9))))(1:(2:25|(3:27|(6:28|(1:30)|(1:34)|28|(0)|43)|34))(1:(1:(1:15))(2:19|(3:21|(1:23)(0)|24)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = 0\lr11.filterType = p004ar.com.hjg.pngj.FilterType.getByVal(r12[0])\lint int r1 = r13 \- 1\lint int r2 = (r15 \- 1) * r11.imgInfo.channels\lint r5 = 1\l}"];
subgraph cluster_IfRegion_840350250 {
label = "IF [B:1:0x001a] THEN: R(1:(2:(2:3|45)|(2:4|(3:6|(1:8)(0)|9)))) ELSE: R(1:(2:25|(3:27|(6:28|(1:30)|(1:34)|28|(0)|43)|34))(1:(1:(1:15))(2:19|(3:21|(1:23)(0)|24))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x001a|if (r11.imgInfo.bitDepth == 8) goto L_0x001c\l}"];
subgraph cluster_Region_1269409882 {
label = "R(1:(2:(2:3|45)|(2:4|(3:6|(1:8)(0)|9))))";
node [shape=record,color=blue];
subgraph cluster_Region_1520457229 {
label = "R(2:(2:3|45)|(2:4|(3:6|(1:8)(0)|9)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_387453616 {
label = "IF [B:2:0x001c] THEN: R(2:3|45) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x001c|if (r15 == 1) goto L_0x001e\l}"];
subgraph cluster_Region_907492957 {
label = "R(2:3|45)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001e|java.lang.System.arraycopy(r12, 1, r11.scanline, 0, r1)\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
}
}
subgraph cluster_Region_452644389 {
label = "R(2:4|(3:6|(1:8)(0)|9))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0025|int int r14 = r14 * r11.imgInfo.channels\lint r13 = 1\lint r15 = 0\l}"];
subgraph cluster_LoopRegion_1072254769 {
label = "LOOP:0: (3:6|(1:8)(0)|9)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002d|LOOP_START\lPHI: r13 r14 r15 \l  PHI: (r13v20 int) = (r13v19 int), (r13v21 int) binds: [B:4:0x0025, B:9:0x003e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v13 int) = (r14v12 int), (r14v15 int) binds: [B:4:0x0025, B:9:0x003e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v10 int) = (r15v9 int), (r15v12 int) binds: [B:4:0x0025, B:9:0x003e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x002d\-\>B:9:0x003e\l|if (r13 \<= r1) goto L_0x002f\l}"];
subgraph cluster_Region_1128294418 {
label = "R(3:6|(1:8)(0)|9)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x002f|r11.scanline[r14] = r12[r13]\lr15++\l}"];
subgraph cluster_IfRegion_284169235 {
label = "IF [B:7:0x003a] THEN: R(1:8) ELSE: R(0)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x003a|if (r15 == r11.imgInfo.channels) goto L_0x003c\l}"];
subgraph cluster_Region_434953093 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x003c|r14 += r2\lr15 = 0\l}"];
}
subgraph cluster_Region_274218387 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_9 [shape=record,label="{9\:\ 0x003e|LOOP_END\lPHI: r14 r15 \l  PHI: (r14v14 int) = (r14v13 int), (r14v16 int) binds: [B:37:0x003e, B:36:0x003e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v12 int) = (r15v11 int), (r15v13 int) binds: [B:37:0x003e, B:36:0x003e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x002d\-\>B:9:0x003e\l|r13++\lr14++\l}"];
}
}
}
}
}
subgraph cluster_Region_372620474 {
label = "R(1:(2:25|(3:27|(6:28|(1:30)|(1:34)|28|(0)|43)|34))(1:(1:(1:15))(2:19|(3:21|(1:23)(0)|24)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1316851791 {
label = "IF [B:11:0x0048] THEN: R(2:25|(3:27|(6:28|(1:30)|(1:34)|28|(0)|43)|34)) ELSE: R(1:(1:(1:15))(2:19|(3:21|(1:23)(0)|24))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0048|if (r11.imgInfo.bitDepth != 16) goto L_0x0090\l}"];
subgraph cluster_Region_716217813 {
label = "R(2:25|(3:27|(6:28|(1:30)|(1:34)|28|(0)|43)|34))";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0090|int int r15 = r11.imgInfo.bitDepth\lint int r1 = p004ar.com.hjg.pngj.ImageLineHelper.getMaskForPackedFormats(r15)\lint r3 = r14 * r11.imgInfo.channels\lint r14 = 1\lint r6 = 0\l}"];
subgraph cluster_LoopRegion_1879121652 {
label = "LOOP:3: (3:27|(6:28|(1:30)|(1:34)|28|(0)|43)|34)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x00a1|LOOP_START\lPHI: r3 r6 r14 \l  PHI: (r3v9 int) = (r3v8 int), (r3v12 int) binds: [B:25:0x0090, B:34:0x00c2] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v2 int) = (r6v1 int), (r6v6 int) binds: [B:25:0x0090, B:34:0x00c2] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v3 int) = (r14v2 int), (r14v4 int) binds: [B:25:0x0090, B:34:0x00c2] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:26:0x00a1\-\>B:34:0x00c2\l|if (r14 \< r13) goto L_0x00a3\l}"];
subgraph cluster_Region_1434409973 {
label = "R(3:27|(6:28|(1:30)|(1:34)|28|(0)|43)|34)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x00a3|int int r7 = 8 \- r15\lint r8 = r6\lint r6 = r1\l}"];
subgraph cluster_LoopRegion_183268889 {
label = "LOOP:4: (6:28|(1:30)|(1:34)|28|(0)|43)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x00c0|LOOP_END\lLOOP:4: B:28:0x00a7\-\>B:33:0x00c0\l|if (r3 \>= r11.size) goto L_0x00c2\l}"];
subgraph cluster_Region_1946287370 {
label = "R(6:28|(1:30)|(1:34)|28|(0)|43)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x00a7|LOOP_START\lPHI: r3 r6 r7 r8 \l  PHI: (r3v10 int) = (r3v9 int), (r3v12 int) binds: [B:27:0x00a3, B:33:0x00c0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v4 int) = (r6v3 int), (r6v5 int) binds: [B:27:0x00a3, B:33:0x00c0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 int) = (r7v0 int), (r7v2 int) binds: [B:27:0x00a3, B:33:0x00c0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 int) = (r8v0 int), (r8v3 int) binds: [B:27:0x00a3, B:33:0x00c0] A[DONT_GENERATE, DONT_INLINE]\lLOOP:4: B:28:0x00a7\-\>B:33:0x00c0\l|r11.scanline[r3] = (byte) ((r12[r14] & r6) \>\> r7)\lr6 \>\>= r15\lr7 \-= r15\lr3++\lr8++\l}"];
subgraph cluster_IfRegion_431288915 {
label = "IF [B:29:0x00b8] THEN: R(1:30) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x00b8|if (r8 == r11.imgInfo.channels) goto L_0x00ba\l}"];
subgraph cluster_Region_369556275 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x00ba|r3 += r2\lr8 = 0\l}"];
}
}
subgraph cluster_IfRegion_605818020 {
label = "IF [B:31:0x00bc, B:33:0x00c0] THEN: R(1:34) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x00bc|ADDED_TO_REGION\lPHI: r3 r8 \l  PHI: (r3v12 int) = (r3v11 int), (r3v13 int) binds: [B:29:0x00b8, B:30:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v3 int) = (r8v2 int), (r8v4 int) binds: [B:29:0x00b8, B:30:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 == 0) goto L_0x00c2\l}"];
Node_33 [shape=record,label="{33\:\ 0x00c0|LOOP_END\lLOOP:4: B:28:0x00a7\-\>B:33:0x00c0\l|if (r3 \>= r11.size) goto L_0x00c2\l}"];
subgraph cluster_Region_194206497 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x00c2|LOOP_END\lEDGE_INSN: B:43:0x00c2\-\>B:34:0x00c2 ?: BREAK  \lLOOP:3: B:26:0x00a1\-\>B:34:0x00c2\l|r14++\lr6 = r8\l}"];
}
}
Node_28 [shape=record,label="{28\:\ 0x00a7|LOOP_START\lPHI: r3 r6 r7 r8 \l  PHI: (r3v10 int) = (r3v9 int), (r3v12 int) binds: [B:27:0x00a3, B:33:0x00c0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v4 int) = (r6v3 int), (r6v5 int) binds: [B:27:0x00a3, B:33:0x00c0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 int) = (r7v0 int), (r7v2 int) binds: [B:27:0x00a3, B:33:0x00c0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 int) = (r8v0 int), (r8v3 int) binds: [B:27:0x00a3, B:33:0x00c0] A[DONT_GENERATE, DONT_INLINE]\lLOOP:4: B:28:0x00a7\-\>B:33:0x00c0\l|r11.scanline[r3] = (byte) ((r12[r14] & r6) \>\> r7)\lr6 \>\>= r15\lr7 \-= r15\lr3++\lr8++\l}"];
subgraph cluster_IfRegion_1560917229 {
label = "IF [B:29:0x00b8] THEN: R(0) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x00b8|if (r8 == r11.imgInfo.channels) goto L_0x00ba\l}"];
subgraph cluster_Region_422020770 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_43 [shape=record,label="{43\:\ 0x00c2|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:43:0x00c2\-\>B:34:0x00c2 ?: BREAK  \l|break\l}"];
}
}
Node_34 [shape=record,label="{34\:\ 0x00c2|LOOP_END\lEDGE_INSN: B:43:0x00c2\-\>B:34:0x00c2 ?: BREAK  \lLOOP:3: B:26:0x00a1\-\>B:34:0x00c2\l|r14++\lr6 = r8\l}"];
}
}
}
subgraph cluster_Region_1220707504 {
label = "R(1:(1:(1:15))(2:19|(3:21|(1:23)(0)|24))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1940463998 {
label = "IF [B:12:0x004a] THEN: R(1:(1:15)) ELSE: R(2:19|(3:21|(1:23)(0)|24)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x004a|if (r15 == 1) goto L_0x004c\l}"];
subgraph cluster_Region_1374959788 {
label = "R(1:(1:15))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1895960346 {
label = "LOOP:1: (1:15)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0050|if (r0 \< r11.imgInfo.samplesPerRow) goto L_0x0052\l}"];
subgraph cluster_Region_628905142 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0052|LOOP_END\lLOOP:1: B:13:0x004c\-\>B:15:0x0052\l|int int r14 = r5 + 1\lr11.scanline[r0] = r12[r5]\lint r5 = r14 + 1\lr11.scanline2[r0] = r12[r14]\lr0++\l}"];
}
}
}
subgraph cluster_Region_1288873534 {
label = "R(2:19|(3:21|(1:23)(0)|24))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x006f|PHI: r13 \l  PHI: (r13v1 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int r14 = r14 != 0 ? r11.imgInfo.channels * r14 : 0\lint r13 = 1\lint r15 = 0\l}"];
subgraph cluster_LoopRegion_1592978697 {
label = "LOOP:2: (3:21|(1:23)(0)|24)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0072|LOOP_START\lPHI: r13 r14 r15 \l  PHI: (r13v3 int) = (r13v2 int), (r13v8 int) binds: [B:19:0x006f, B:24:0x008d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v6 int) = (r14v5 int), (r14v8 int) binds: [B:19:0x006f, B:24:0x008d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v4 int) = (r15v3 int), (r15v6 int) binds: [B:19:0x006f, B:24:0x008d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:20:0x0072\-\>B:24:0x008d\l|if (r13 \<= r1) goto L_0x0074\l}"];
subgraph cluster_Region_878508014 {
label = "R(3:21|(1:23)(0)|24)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0074|int int r4 = r13 + 1\lr11.scanline[r14] = r12[r13]\lint int r3 = r4 + 1\lr11.scanline2[r14] = r12[r4]\lr15++\l}"];
subgraph cluster_IfRegion_172272988 {
label = "IF [B:22:0x0089] THEN: R(1:23) ELSE: R(0)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0089|if (r15 == r11.imgInfo.channels) goto L_0x008b\l}"];
subgraph cluster_Region_1675869701 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x008b|r14 += r2\lr15 = 0\l}"];
}
subgraph cluster_Region_1950590630 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_24 [shape=record,label="{24\:\ 0x008d|LOOP_END\lPHI: r14 r15 \l  PHI: (r14v7 int) = (r14v6 int), (r14v9 int) binds: [B:41:0x008d, B:40:0x008d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v6 int) = (r15v5 int), (r15v7 int) binds: [B:41:0x008d, B:40:0x008d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:20:0x0072\-\>B:24:0x008d\l|r14++\lr13 = r3\l}"];
}
}
}
}
}
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ 0x0042}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x004c|LOOP_START\lPHI: r0 r5 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:12:0x004a, B:15:0x0052] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:12:0x004a, B:15:0x0052] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:13:0x004c\-\>B:15:0x0052\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0065}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0067}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x006e}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x00be}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x00c6|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x003e|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x003e|SYNTHETIC\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x00c6|SYNTHETIC\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x00c6|SYNTHETIC\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x008d|SYNTHETIC\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x008d|SYNTHETIC\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x00c6|SYNTHETIC\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x00c2|SYNTHETIC\l}"];
Node_46 [shape=record,color=red,label="{46\:\ ?|SYNTHETIC\l}"];
Node_47 [shape=record,color=red,label="{47\:\ ?|SYNTHETIC\l}"];
Node_48 [shape=record,color=red,label="{48\:\ ?|SYNTHETIC\l}"];
Node_49 [shape=record,color=red,label="{49\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.ImageLineByte.readFromPngRaw((r11v0 'this' ar.com.hjg.pngj.ImageLineByte A[IMMUTABLE_TYPE, THIS]), (r12v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lRemoved duplicated region for block: B:30:0x00ba \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10[style=dashed];
Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_3 -> Node_45;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_35[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_37[style=dashed];
Node_8 -> Node_36;
Node_9 -> Node_5;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_42[style=dashed];
Node_27 -> Node_28;
Node_33 -> Node_28[style=dashed];
Node_33 -> Node_44;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_31[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_43;
Node_33 -> Node_28[style=dashed];
Node_33 -> Node_44;
Node_34 -> Node_26;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_31[style=dashed];
Node_43 -> Node_34;
Node_34 -> Node_26;
Node_12 -> Node_13;
Node_12 -> Node_16[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_38[style=dashed];
Node_15 -> Node_13;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_39[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_41[style=dashed];
Node_23 -> Node_40;
Node_24 -> Node_20;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_16 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_32 -> Node_33;
Node_35 -> Node_46;
Node_36 -> Node_9;
Node_37 -> Node_9;
Node_38 -> Node_47;
Node_39 -> Node_48;
Node_40 -> Node_24;
Node_41 -> Node_24;
Node_42 -> Node_49;
Node_44 -> Node_34;
}

