digraph "CFG forar.com.hjg.pngj.ChunkSeqReader.1.\<init\>(Lar\/com\/hjg\/pngj\/ChunkSeqReader;ILjava\/lang\/String;ZJLar\/com\/hjg\/pngj\/DeflatedChunksSet;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r8 I:ar.com.hjg.pngj.ChunkSeqReader)\l  (r7 I:ar.com.hjg.pngj.ChunkSeqReader$1)\l ar.com.hjg.pngj.ChunkSeqReader.1.this$0 ar.com.hjg.pngj.ChunkSeqReader \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0003: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0005: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: MOVE  (r4 I:?[long, double]) = (r12 I:?[long, double]) \l0x0007: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0008: INVOKE  \l  (r0 I:ar.com.hjg.pngj.DeflatedChunkReader)\l  (r1 I:int)\l  (r2 I:java.lang.String)\l  (r3 I:boolean)\l  (r4 I:long)\l  (r6 I:ar.com.hjg.pngj.DeflatedChunksSet)\l ar.com.hjg.pngj.DeflatedChunkReader.\<init\>(int, java.lang.String, boolean, long, ar.com.hjg.pngj.DeflatedChunksSet):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: RETURN   \l}"];
MethodNode[shape=record,label="{void ar.com.hjg.pngj.ChunkSeqReader.1.\<init\>((r7 'this' I:ar.com.hjg.pngj.ChunkSeqReader$1 A[IMMUTABLE_TYPE, THIS]), (r8 I:ar.com.hjg.pngj.ChunkSeqReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:ar.com.hjg.pngj.DeflatedChunksSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | ANONYMOUS_CONSTRUCTOR\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

