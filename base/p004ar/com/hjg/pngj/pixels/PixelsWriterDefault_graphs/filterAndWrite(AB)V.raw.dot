digraph "CFG forar.com.hjg.pngj.pixels.PixelsWriterDefault.filterAndWrite([B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:byte[]) = (r3 I:ar.com.hjg.pngj.pixels.PixelsWriterDefault) ar.com.hjg.pngj.pixels.PixelsWriterDefault.rowb byte[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r3 I:ar.com.hjg.pngj.pixels.PixelsWriterDefault) ar.com.hjg.pngj.pixels.PixelsWriterDefault.decideCurFilterType():void type: VIRTUAL \l0x0007: IGET  (r0 I:ar.com.hjg.pngj.FilterType) = (r3 I:ar.com.hjg.pngj.pixels.PixelsWriterDefault) ar.com.hjg.pngj.pixels.PixelsWriterDefault.curfilterType ar.com.hjg.pngj.FilterType \l0x0009: IGET  (r1 I:byte[]) = (r3 I:ar.com.hjg.pngj.pixels.PixelsWriterDefault) ar.com.hjg.pngj.pixels.PixelsWriterDefault.rowbprev byte[] \l0x000b: IGET  (r2 I:byte[]) = (r3 I:ar.com.hjg.pngj.pixels.PixelsWriterDefault) ar.com.hjg.pngj.pixels.PixelsWriterDefault.rowbfilter byte[] \l0x000d: INVOKE  (r4 I:byte[]) = \l  (r3 I:ar.com.hjg.pngj.pixels.PixelsWriterDefault)\l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r4 I:byte[])\l  (r1 I:byte[])\l  (r2 I:byte[])\l ar.com.hjg.pngj.pixels.PixelsWriterDefault.filterRowWithFilterType(ar.com.hjg.pngj.FilterType, byte[], byte[], byte[]):byte[] type: VIRTUAL \l0x0011: INVOKE  \l  (r3 I:ar.com.hjg.pngj.pixels.PixelsWriterDefault)\l  (r4 I:byte[])\l ar.com.hjg.pngj.pixels.PixelsWriterDefault.sendToCompressedStream(byte[]):void type: VIRTUAL \l0x0014: IGET  (r4 I:byte[]) = (r3 I:ar.com.hjg.pngj.pixels.PixelsWriterDefault) ar.com.hjg.pngj.pixels.PixelsWriterDefault.rowb byte[] \l0x0016: IGET  (r0 I:byte[]) = (r3 I:ar.com.hjg.pngj.pixels.PixelsWriterDefault) ar.com.hjg.pngj.pixels.PixelsWriterDefault.rowbprev byte[] \l0x0018: IPUT  \l  (r0 I:byte[])\l  (r3 I:ar.com.hjg.pngj.pixels.PixelsWriterDefault)\l ar.com.hjg.pngj.pixels.PixelsWriterDefault.rowb byte[] \l0x001a: IPUT  \l  (r4 I:byte[])\l  (r3 I:ar.com.hjg.pngj.pixels.PixelsWriterDefault)\l ar.com.hjg.pngj.pixels.PixelsWriterDefault.rowbprev byte[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: NEW_INSTANCE  (r4 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x001f: CONST_STR  (r0 I:java.lang.String) =  \"??\" \l0x0021: INVOKE  (r4 I:java.lang.RuntimeException), (r0 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected void ar.com.hjg.pngj.pixels.PixelsWriterDefault.filterAndWrite((r3 'this' I:ar.com.hjg.pngj.pixels.PixelsWriterDefault A[IMMUTABLE_TYPE, THIS]), (r4 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

