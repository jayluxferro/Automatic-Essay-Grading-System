digraph "CFG forar.com.hjg.pngj.pixels.PixelsWriterMultiple.filterAndWrite([B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.initdone boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.init():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IGET  (r0 I:java.util.LinkedList\<byte[]\>) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.rows java.util.LinkedList \l0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.LinkedList), (r1 I:int) java.util.LinkedList.get(int):java.lang.Object type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0107 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: INVOKE  (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.setBandFromNewRown():void type: DIRECT \l0x0013: IGET  (r0 I:java.util.LinkedList\<byte[]\>) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.rows java.util.LinkedList \l0x0015: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0016: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.LinkedList), (r2 I:int) java.util.LinkedList.get(int):java.lang.Object type: VIRTUAL \l0x001a: CHECK_CAST  (r0 I:byte[]) = (byte[]) (r0 I:?[OBJECT, ARRAY]) \l0x001c: INVOKE  (r2 I:ar.com.hjg.pngj.FilterType[]) =  ar.com.hjg.pngj.FilterType.getAllStandardNoneLast():ar.com.hjg.pngj.FilterType[] type: STATIC \l0x0020: ARRAY_LENGTH  (r3 I:int) = (r2 I:?[]) \l0x0021: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: IF  (r4 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:23:0x007d \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: AGET  (r5 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x0026: IGET  (r6 I:int) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.currentRow int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0033 \l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: SGET  (r6 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_NONE ar.com.hjg.pngj.FilterType \l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0033 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: SGET  (r6 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_SUB ar.com.hjg.pngj.FilterType \l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0033 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: IGET  (r6 I:byte[][]) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filteredRows byte[][] \l0x0035: IGET  (r7 I:int) = (r5 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.val int \l0x0037: AGET  (r6 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r7 I:?[int, short, byte, char]) \l0x0039: INVOKE  (r6 I:byte[]) = \l  (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple)\l  (r5 I:ar.com.hjg.pngj.FilterType)\l  (r10 I:byte[])\l  (r0 I:byte[])\l  (r6 I:byte[])\l ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filterRowWithFilterType(ar.com.hjg.pngj.FilterType, byte[], byte[], byte[]):byte[] type: VIRTUAL \l0x003d: IGET  (r7 I:ar.com.hjg.pngj.pixels.CompressorStream[]) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filterBank ar.com.hjg.pngj.pixels.CompressorStream[] \l0x003f: IGET  (r8 I:int) = (r5 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.val int \l0x0041: AGET  (r7 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r8 I:?[int, short, byte, char]) \l0x0043: INVOKE  \l  (r7 I:ar.com.hjg.pngj.pixels.CompressorStream)\l  (r6 I:byte[])\l ar.com.hjg.pngj.pixels.CompressorStream.write(byte[]):void type: VIRTUAL \l0x0046: IGET  (r7 I:int) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.currentRow int \l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|0x0048: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x006f \l}"];
Node_16 [shape=record,label="{16\:\ 0x004a|0x004a: SGET  (r7 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_SUB ar.com.hjg.pngj.FilterType \l}"];
Node_17 [shape=record,label="{17\:\ 0x004c|0x004c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x006f \l}"];
Node_18 [shape=record,label="{18\:\ 0x004e|0x004e: IGET  (r7 I:ar.com.hjg.pngj.pixels.CompressorStream[]) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filterBank ar.com.hjg.pngj.pixels.CompressorStream[] \l0x0050: SGET  (r8 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_PAETH ar.com.hjg.pngj.FilterType \l0x0052: IGET  (r8 I:int) = (r8 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.val int \l0x0054: AGET  (r7 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r8 I:?[int, short, byte, char]) \l0x0056: INVOKE  \l  (r7 I:ar.com.hjg.pngj.pixels.CompressorStream)\l  (r6 I:byte[])\l ar.com.hjg.pngj.pixels.CompressorStream.write(byte[]):void type: VIRTUAL \l0x0059: IGET  (r7 I:ar.com.hjg.pngj.pixels.CompressorStream[]) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filterBank ar.com.hjg.pngj.pixels.CompressorStream[] \l0x005b: SGET  (r8 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_AVERAGE ar.com.hjg.pngj.FilterType \l0x005d: IGET  (r8 I:int) = (r8 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.val int \l0x005f: AGET  (r7 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r8 I:?[int, short, byte, char]) \l0x0061: INVOKE  \l  (r7 I:ar.com.hjg.pngj.pixels.CompressorStream)\l  (r6 I:byte[])\l ar.com.hjg.pngj.pixels.CompressorStream.write(byte[]):void type: VIRTUAL \l0x0064: IGET  (r7 I:ar.com.hjg.pngj.pixels.CompressorStream[]) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filterBank ar.com.hjg.pngj.pixels.CompressorStream[] \l0x0066: SGET  (r8 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_UP ar.com.hjg.pngj.FilterType \l0x0068: IGET  (r8 I:int) = (r8 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.val int \l0x006a: AGET  (r7 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r8 I:?[int, short, byte, char]) \l0x006c: INVOKE  \l  (r7 I:ar.com.hjg.pngj.pixels.CompressorStream)\l  (r6 I:byte[])\l ar.com.hjg.pngj.pixels.CompressorStream.write(byte[]):void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x006f|0x006f: IGET  (r7 I:boolean) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.tryAdaptive boolean \l}"];
Node_20 [shape=record,label="{20\:\ 0x0071|0x0071: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x007a \l}"];
Node_21 [shape=record,label="{21\:\ 0x0073|0x0073: IGET  (r7 I:ar.com.hjg.pngj.pixels.FiltersPerformance) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filtersPerf ar.com.hjg.pngj.pixels.FiltersPerformance \l0x0075: IGET  (r8 I:int) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.currentRow int \l0x0077: INVOKE  \l  (r7 I:ar.com.hjg.pngj.pixels.FiltersPerformance)\l  (r5 I:ar.com.hjg.pngj.FilterType)\l  (r6 I:byte[])\l  (r8 I:int)\l ar.com.hjg.pngj.pixels.FiltersPerformance.updateFromFiltered(ar.com.hjg.pngj.FilterType, byte[], int):void type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x007a|0x007a: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x007d|0x007d: IGET  (r0 I:byte[][]) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filteredRows byte[][] \l0x007f: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r10 I:?[OBJECT, ARRAY])\l \l0x0081: IGET  (r10 I:boolean) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.tryAdaptive boolean \l}"];
Node_24 [shape=record,label="{24\:\ 0x0083|0x0083: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0099 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0085|0x0085: IGET  (r10 I:ar.com.hjg.pngj.pixels.FiltersPerformance) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filtersPerf ar.com.hjg.pngj.pixels.FiltersPerformance \l0x0087: INVOKE  (r10 I:ar.com.hjg.pngj.FilterType) = (r10 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.getPreferred():ar.com.hjg.pngj.FilterType type: VIRTUAL \l0x008b: IGET  (r0 I:ar.com.hjg.pngj.pixels.CompressorStream[]) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filterBank ar.com.hjg.pngj.pixels.CompressorStream[] \l0x008d: CONST  (r2 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x008e: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0090: IGET  (r2 I:byte[][]) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filteredRows byte[][] \l0x0092: IGET  (r10 I:int) = (r10 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.val int \l0x0094: AGET  (r10 I:?[OBJECT, ARRAY]) = \l  (r2 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char])\l \l0x0096: INVOKE  \l  (r0 I:ar.com.hjg.pngj.pixels.CompressorStream)\l  (r10 I:byte[])\l ar.com.hjg.pngj.pixels.CompressorStream.write(byte[]):void type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0099|0x0099: IGET  (r10 I:int) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.currentRow int \l0x009b: IGET  (r0 I:int) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.lastRowInThisBand int \l}"];
Node_27 [shape=record,label="{27\:\ 0x009d|0x009d: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x00e7 \l}"];
Node_28 [shape=record,label="{28\:\ 0x009f|0x009f: INVOKE  (r10 I:int) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.getBestCompressor():int type: DIRECT \l0x00a3: IGET  (r0 I:ar.com.hjg.pngj.pixels.CompressorStream[]) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filterBank ar.com.hjg.pngj.pixels.CompressorStream[] \l0x00a5: AGET  (r10 I:?[OBJECT, ARRAY]) = \l  (r0 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char])\l \l0x00a7: INVOKE  (r10 I:byte[]) = (r10 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.getFirstBytes():byte[] type: VIRTUAL \l0x00ab: IGET  (r0 I:int) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.firstRowInThisBand int \l0x00ad: IGET  (r2 I:int) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.lastRowInThisBand int \l0x00af: IGET  (r3 I:int) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.firstRowInThisBand int \l0x00b1: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l}"];
Node_29 [shape=record,label="{29\:\ 0x00b2|0x00b2: IGET  (r3 I:int) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.lastRowInThisBand int \l}"];
Node_30 [shape=record,label="{30\:\ 0x00b4|0x00b4: IF  (r0 I:?[int, byte, short, char]) \> (r3 I:?[int, byte, short, char])  \-\> B:36:0x00e7 \l}"];
Node_31 [shape=record,label="{31\:\ 0x00b6|0x00b6: AGET  (r3 I:byte A[IMMUTABLE_TYPE]) = \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x00b8: IGET  (r4 I:int) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.lastRowInThisBand int \l}"];
Node_32 [shape=record,label="{32\:\ 0x00ba|0x00ba: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x00d9 \l}"];
Node_33 [shape=record,label="{33\:\ 0x00bc|0x00bc: INVOKE  (r3 I:ar.com.hjg.pngj.FilterType) = (r3 I:int) ar.com.hjg.pngj.FilterType.getByVal(int):ar.com.hjg.pngj.FilterType type: STATIC \l0x00c0: IGET  (r4 I:java.util.LinkedList\<byte[]\>) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.rows java.util.LinkedList \l0x00c2: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.LinkedList), (r2 I:int) java.util.LinkedList.get(int):java.lang.Object type: VIRTUAL \l0x00c6: CHECK_CAST  (r4 I:byte[]) = (byte[]) (r4 I:?[OBJECT, ARRAY]) \l0x00c8: IGET  (r5 I:java.util.LinkedList\<byte[]\>) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.rows java.util.LinkedList \l0x00ca: ARITH  (r6 I:int) = (r2 I:int) + (1 int) \l0x00cc: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.util.LinkedList), (r6 I:int) java.util.LinkedList.get(int):java.lang.Object type: VIRTUAL \l0x00d0: CHECK_CAST  (r5 I:byte[]) = (byte[]) (r5 I:?[OBJECT, ARRAY]) \l0x00d2: IGET  (r6 I:byte[]) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filteredRowTmp byte[] \l0x00d4: INVOKE  (r3 I:byte[]) = \l  (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple)\l  (r3 I:ar.com.hjg.pngj.FilterType)\l  (r4 I:byte[])\l  (r5 I:byte[])\l  (r6 I:byte[])\l ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filterRowWithFilterType(ar.com.hjg.pngj.FilterType, byte[], byte[], byte[]):byte[] type: VIRTUAL \l}"];
Node_34 [shape=record,label="{34\:\ 0x00d9|0x00d9: IGET  (r4 I:byte[][]) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filteredRows byte[][] \l0x00db: AGET  (r3 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x00dd|0x00dd: INVOKE  \l  (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple)\l  (r3 I:byte[])\l ar.com.hjg.pngj.pixels.PixelsWriterMultiple.sendToCompressedStream(byte[]):void type: VIRTUAL \l0x00e0: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x00e2: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l0x00e4: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_36 [shape=record,label="{36\:\ 0x00e7|0x00e7: IGET  (r10 I:java.util.LinkedList\<byte[]\>) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.rows java.util.LinkedList \l0x00e9: INVOKE  (r10 I:int) = (r10 I:java.util.LinkedList) java.util.LinkedList.size():int type: VIRTUAL \l0x00ed: IGET  (r0 I:int) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.rowsPerBandCurrent int \l}"];
Node_37 [shape=record,label="{37\:\ 0x00ef|0x00ef: IF  (r10 I:?[int, byte, short, char]) \<= (r0 I:?[int, byte, short, char])  \-\> B:39:0x00fd \l}"];
Node_38 [shape=record,label="{38\:\ 0x00f1|0x00f1: IGET  (r10 I:java.util.LinkedList\<byte[]\>) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.rows java.util.LinkedList \l0x00f3: IGET  (r0 I:java.util.LinkedList\<byte[]\>) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.rows java.util.LinkedList \l0x00f5: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.LinkedList) java.util.LinkedList.removeLast():java.lang.Object type: VIRTUAL \l0x00f9: INVOKE  (r10 I:java.util.LinkedList), (r0 I:java.lang.Object) java.util.LinkedList.addFirst(java.lang.Object):void type: VIRTUAL \l}"];
Node_39 [shape=record,label="{39\:\ 0x00fd|0x00fd: IGET  (r10 I:java.util.LinkedList\<byte[]\>) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.rows java.util.LinkedList \l0x00ff: IGET  (r0 I:int) = (r9 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.buflen int \l0x0101: NEW_ARRAY  (r0 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0103: INVOKE  (r10 I:java.util.LinkedList), (r0 I:java.lang.Object) java.util.LinkedList.addFirst(java.lang.Object):void type: VIRTUAL \l}"];
Node_40 [shape=record,label="{40\:\ 0x0106|0x0106: RETURN   \l}"];
Node_41 [shape=record,label="{41\:\ 0x0107|0x0107: NEW_INSTANCE  (r10 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0109: CONST_STR  (r0 I:java.lang.String) =  \"?\" \l0x010b: INVOKE  (r10 I:java.lang.RuntimeException), (r0 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_42 [shape=record,label="{42\:\ 0x010e|0x010e: THROW  (r10 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected void ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filterAndWrite((r9 'this' I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple A[IMMUTABLE_TYPE, THIS]), (r10 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_41;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_23;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_14;
Node_12 -> Node_22[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_6;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_36;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_36;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_29;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_41 -> Node_42;
}

