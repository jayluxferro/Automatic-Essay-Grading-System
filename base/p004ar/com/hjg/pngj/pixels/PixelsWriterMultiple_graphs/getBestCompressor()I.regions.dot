digraph "CFG forar.com.hjg.pngj.pixels.PixelsWriterMultiple.getBestCompressor()I" {
subgraph cluster_Region_1850199005 {
label = "R(4:1|4|(3:6|(1:8)(0)|9)|10)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|int r0 = r7.tryAdaptive ? 5 : 4\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|PHI: r0 \l  PHI: (r0v1 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int r1 = \-1\ldouble r2 = Double.MAX_VALUE\l}"];
subgraph cluster_LoopRegion_499900007 {
label = "LOOP:0: (3:6|(1:8)(0)|9)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000d|LOOP_START\lPHI: r0 r1 r2 \l  PHI: (r0v2 int) = (r0v1 int), (r0v3 int) binds: [B:4:0x0007, B:9:0x001d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:4:0x0007, B:9:0x001d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 double) = (r2v0 double), (r2v2 double) binds: [B:4:0x0007, B:9:0x001d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x000d\-\>B:9:0x001d\l|if (r0 \>= 0) goto L_0x000f\l}"];
subgraph cluster_Region_47050269 {
label = "R(3:6|(1:8)(0)|9)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000f|double double r4 = r7.filterBank[r0].getCompressionRatio()\l}"];
subgraph cluster_IfRegion_346064055 {
label = "IF [B:7:0x0019] THEN: R(1:8) ELSE: R(0)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0019|if (r4 \<= r2) goto L_0x001b\l}"];
subgraph cluster_Region_1147778756 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001b|r1 = r0\lr2 = r4\l}"];
}
subgraph cluster_Region_1666310322 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_9 [shape=record,label="{9\:\ 0x001d|LOOP_END\lPHI: r1 r2 \l  PHI: (r1v2 int) = (r1v1 int), (r1v3 int) binds: [B:13:0x001d, B:12:0x001d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 double) = (r2v1 double), (r2v3 double) binds: [B:13:0x001d, B:12:0x001d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x000d\-\>B:9:0x001d\l|r0\-\-\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x0020|RETURN\l|return r1\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0006}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0020|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x001d|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x001d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int ar.com.hjg.pngj.pixels.PixelsWriterMultiple.getBestCompressor((r7v0 'this' ar.com.hjg.pngj.pixels.PixelsWriterMultiple A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_11[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_13[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_5;
Node_0 -> Node_1;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_11 -> Node_10;
Node_12 -> Node_9;
Node_13 -> Node_9;
}

