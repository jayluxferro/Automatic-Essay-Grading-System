digraph "CFG forar.com.hjg.pngj.pixels.PixelsWriterMultiple.filterAndWrite([B)V" {
subgraph cluster_Region_1080152897 {
label = "R(3:(1:2)|3|(6:5|(3:7|(3:13|(1:17)|(1:20)(0))(0)|21)|22|(1:24)|(2:27|(3:30|(1:32)(1:33)|34))|(1:37)(1:38))(1:40)) | DECL_VAR: byte[] null\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1773017618 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r9.initdone == false) goto L_0x0004\l}"];
subgraph cluster_Region_75288401 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|init()\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0007|int r1 = 0\l}"];
subgraph cluster_IfRegion_17330114 {
label = "IF [B:4:0x000e] THEN: R(6:5|(3:7|(3:13|(1:17)|(1:20)(0))(0)|21)|22|(1:24)|(2:27|(3:30|(1:32)(1:33)|34))|(1:37)(1:38)) ELSE: R(1:40)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|if (r10 == r9.rows.get(0)) goto L_0x0010\l}"];
subgraph cluster_Region_1515237078 {
label = "R(6:5|(3:7|(3:13|(1:17)|(1:20)(0))(0)|21)|22|(1:24)|(2:27|(3:30|(1:32)(1:33)|34))|(1:37)(1:38))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|setBandFromNewRown()\lbyte[] byte[] r0 = r9.rows.get(1)\lint int r3 = p004ar.com.hjg.pngj.FilterType.getAllStandardNoneLast().length\lint r4 = 0\l}"];
subgraph cluster_LoopRegion_1001680829 {
label = "LOOP:0: (3:7|(3:13|(1:17)|(1:20)(0))(0)|21)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0022|LOOP_START\lPHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v7 int) binds: [B:5:0x0010, B:21:0x007a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0022\-\>B:21:0x007a\l|if (r4 \< r3) goto L_0x0024\l}"];
subgraph cluster_Region_736289017 {
label = "R(3:7|(3:13|(1:17)|(1:20)(0))(0)|21)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0024|r5 = r2[r4]\l}"];
subgraph cluster_IfRegion_584289363 {
label = "IF [B:8:0x0028, B:10:0x002c, B:12:0x0030] THEN: R(3:13|(1:17)|(1:20)(0)) ELSE: R(0)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0028|if (r9.currentRow != 0) goto L_0x0033\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|ADDED_TO_REGION\l|if (r5 == p004ar.com.hjg.pngj.FilterType.FILTER_NONE) goto L_0x0033\l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|ADDED_TO_REGION\l|if (r5 == p004ar.com.hjg.pngj.FilterType.FILTER_SUB) goto L_0x0033\l}"];
subgraph cluster_Region_1700252873 {
label = "R(3:13|(1:17)|(1:20)(0))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0033|byte[] byte[] r6 = filterRowWithFilterType(r5, r10, r0, r9.filteredRows[r5.val])\lr9.filterBank[r5.val].write(r6)\l}"];
subgraph cluster_IfRegion_1077401887 {
label = "IF [B:14:0x0048, B:16:0x004c] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0048|ADDED_TO_REGION\l|if (r9.currentRow == 0) goto L_0x004a\l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|ADDED_TO_REGION\l|if (r5 == p004ar.com.hjg.pngj.FilterType.FILTER_SUB) goto L_0x004e\l}"];
subgraph cluster_Region_1883801635 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x004e|r9.filterBank[p004ar.com.hjg.pngj.FilterType.FILTER_PAETH.val].write(r6)\lr9.filterBank[p004ar.com.hjg.pngj.FilterType.FILTER_AVERAGE.val].write(r6)\lr9.filterBank[p004ar.com.hjg.pngj.FilterType.FILTER_UP.val].write(r6)\l}"];
}
}
subgraph cluster_IfRegion_33806500 {
label = "IF [B:19:0x0071] THEN: R(1:20) ELSE: R(0)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0071|if (r9.tryAdaptive == true) goto L_0x0073\l}"];
subgraph cluster_Region_525843647 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0073|r9.filtersPerf.updateFromFiltered(r5, r6, r9.currentRow)\l}"];
}
subgraph cluster_Region_450008798 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_610087107 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_21 [shape=record,label="{21\:\ 0x007a|LOOP_END\lLOOP:0: B:6:0x0022\-\>B:21:0x007a\l|r4++\l}"];
}
}
Node_22 [shape=record,label="{22\:\ 0x007d|r9.filteredRows[0] = r10\l}"];
subgraph cluster_IfRegion_1516038774 {
label = "IF [B:23:0x0083] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0083|if (r9.tryAdaptive == true) goto L_0x0085\l}"];
subgraph cluster_Region_1183240033 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0085|r9.filterBank[5].write(r9.filteredRows[r9.filtersPerf.getPreferred().val])\l}"];
}
}
subgraph cluster_IfRegion_1215091977 {
label = "IF [B:26:0x009d] THEN: R(2:27|(3:30|(1:32)(1:33)|34)) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x009d|if (r9.currentRow == r9.lastRowInThisBand) goto L_0x009f\l}"];
subgraph cluster_Region_1593124005 {
label = "R(2:27|(3:30|(1:32)(1:33)|34))";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x009f|byte[] byte[] r10 = r9.filterBank[getBestCompressor()].getFirstBytes()\lint int r0 = r9.firstRowInThisBand\lint int r2 = r9.lastRowInThisBand \- r9.firstRowInThisBand\l}"];
subgraph cluster_LoopRegion_17569715 {
label = "LOOP:1: (3:30|(1:32)(1:33)|34)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x00b4|if (r0 \<= r9.lastRowInThisBand) goto L_0x00b6\l}"];
subgraph cluster_Region_12499843 {
label = "R(3:30|(1:32)(1:33)|34)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x00b6|byte byte r3 = r10[r1]\l}"];
subgraph cluster_IfRegion_1525068511 {
label = "IF [B:31:0x00ba] THEN: R(1:32) ELSE: R(1:33)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x00ba|if (r0 != r9.lastRowInThisBand) goto L_0x00bc\l}"];
subgraph cluster_Region_1715434578 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x00bc|byte[] r3 = filterRowWithFilterType(p004ar.com.hjg.pngj.FilterType.getByVal(r3), r9.rows.get(r2), r9.rows.get(r2 + 1), r9.filteredRowTmp)\l}"];
}
subgraph cluster_Region_286827580 {
label = "R(1:33)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x00d9|r3 = r9.filteredRows[r3]\l}"];
}
}
Node_34 [shape=record,label="{34\:\ 0x00dd|LOOP_END\lPHI: r3 \l  PHI: (r3v4 byte[]) = (r3v5 byte[]), (r3v7 byte[]) binds: [B:46:0x00dd, B:47:0x00dd] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:28:0x00b2\-\>B:34:0x00dd\l|sendToCompressedStream(r3)\lr0++\lr2\-\-\lr1++\l}"];
}
}
}
}
subgraph cluster_IfRegion_91893743 {
label = "IF [B:36:0x00ef] THEN: R(1:37) ELSE: R(1:38)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x00ef|if (r9.rows.size() \> r9.rowsPerBandCurrent) goto L_0x00f1\l}"];
subgraph cluster_Region_944269932 {
label = "R(1:37)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x00f1|r9.rows.addFirst(r9.rows.removeLast())\l}"];
}
subgraph cluster_Region_1212499907 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x00fd|r9.rows.addFirst(new byte[r9.buflen])\l}"];
}
}
}
subgraph cluster_Region_1722750815 {
label = "R(1:40)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x010e|throw new java.lang.RuntimeException(\"?\")\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002a}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x002e}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x004a}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x006f}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0099}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x00b2|LOOP_START\lPHI: r0 r1 r2 \l  PHI: (r0v16 int) = (r0v15 int), (r0v17 int) binds: [B:27:0x009f, B:34:0x00dd] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:27:0x009f, B:34:0x00dd] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v4 int) = (r2v3 int), (r2v5 int) binds: [B:27:0x009f, B:34:0x00dd] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:28:0x00b2\-\>B:34:0x00dd\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x00e7}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0107}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x007d|SYNTHETIC\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x007a|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x007a|SYNTHETIC\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x007a|SYNTHETIC\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x00e7|SYNTHETIC\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x00dd|SYNTHETIC\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x00dd|SYNTHETIC\l}"];
Node_48 [shape=record,color=red,label="{48\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_49 [shape=record,color=red,label="{49\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filterAndWrite((r9v0 'this' ar.com.hjg.pngj.pixels.PixelsWriterMultiple A[IMMUTABLE_TYPE, THIS]), (r10v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_39[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_41[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_12 -> Node_13;
Node_12 -> Node_44[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_18[style=dashed];
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_19 -> Node_43[style=dashed];
Node_20 -> Node_42;
Node_21 -> Node_6;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_26 -> Node_35[style=dashed];
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_29 -> Node_45[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_33[style=dashed];
Node_32 -> Node_47;
Node_33 -> Node_46;
Node_34 -> Node_28;
Node_36 -> Node_37;
Node_36 -> Node_38[style=dashed];
Node_37 -> Node_49;
Node_38 -> Node_48;
Node_0 -> Node_1;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_15 -> Node_16;
Node_18 -> Node_19;
Node_25 -> Node_26;
Node_28 -> Node_29;
Node_35 -> Node_36;
Node_39 -> Node_40;
Node_41 -> Node_22;
Node_42 -> Node_21;
Node_43 -> Node_21;
Node_44 -> Node_21;
Node_45 -> Node_35;
Node_46 -> Node_34;
Node_47 -> Node_34;
}

