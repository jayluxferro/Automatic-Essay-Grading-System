digraph "CFG forar.com.hjg.pngj.pixels.PixelsWriterMultiple.close()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.close():void type: SUPER \l0x0003: IGET  (r0 I:java.util.LinkedList\<byte[]\>) = (r4 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.rows java.util.LinkedList \l0x0005: INVOKE  (r0 I:java.util.LinkedList) java.util.LinkedList.clear():void type: VIRTUAL \l0x0008: IGET  (r0 I:ar.com.hjg.pngj.pixels.CompressorStream[]) = (r4 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filterBank ar.com.hjg.pngj.pixels.CompressorStream[] \l0x000a: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l0x000b: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: AGET  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0010: INVOKE  (r3 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.close():void type: VIRTUAL \l0x0013: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.pixels.PixelsWriterMultiple.close((r4 'this' I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

