digraph "CFG forar.com.hjg.pngj.pixels.PixelsWriterMultiple.\<init\>(Lar\/com\/hjg\/pngj\/ImageInfo;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super(r4)\lr3.filterBank = new p004ar.com.hjg.pngj.pixels.CompressorStream[6]\lr3.filteredRows = new byte[5][]\lr0 = 0\lr3.rowsPerBand = 0\lr3.rowsPerBandCurrent = 0\lr3.rowInBand = \-1\lr3.bandNum = \-1\lr3.tryAdaptive = true\lr3.hintMemoryKb = 100\lr3.hintRowsPerBand = 1000\lr3.useLz4 = true\lr3.filtersPerf = new p004ar.com.hjg.pngj.pixels.FiltersPerformance(r4)\lr3.rows = new java.util.LinkedList\<\>()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0032|LOOP_START\lPHI: r0 \l  PHI: (r0v5 int) = (r0v4 int), (r0v6 int) binds: [B:0:0x0000, B:3:0x0035] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0032\-\>B:3:0x0035\l}"];
Node_2 [shape=record,label="{2\:\ 0x0033|if (r0 \>= 2) goto L_0x0041\l}"];
Node_3 [shape=record,label="{3\:\ 0x0035|LOOP_END\lLOOP:0: B:1:0x0032\-\>B:3:0x0035\l|r3.rows.add(new byte[r3.buflen])\lint r0 = r0 + 1\l}"];
Node_4 [shape=record,label="{4\:\ 0x0041|r3.filteredRowTmp = new byte[r3.buflen]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0047|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x0041|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.pixels.PixelsWriterMultiple.\<init\>((r3v0 'this' ar.com.hjg.pngj.pixels.PixelsWriterMultiple A[IMMUTABLE_TYPE, THIS]), (r4v0 ar.com.hjg.pngj.ImageInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_6 -> Node_4;
}

