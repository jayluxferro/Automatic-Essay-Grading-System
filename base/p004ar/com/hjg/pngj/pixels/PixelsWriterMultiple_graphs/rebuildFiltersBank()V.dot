digraph "CFG forar.com.hjg.pngj.pixels.PixelsWriterMultiple.rebuildFiltersBank()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|long r0 = ((long) r11.rowsPerBandCurrent) * ((long) r11.buflen)\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|LOOP_START\lPHI: r2 \l  PHI: (r2v3 int) = (r2v2 int), (r2v4 int) binds: [B:0:0x0000, B:15:0x003f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0009\-\>B:15:0x003f\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|if (r2 \> 5) goto L_0x0048\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|r3 = r11.filterBank[r2]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|if (r3 == null) goto L_0x001d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012}"];
Node_6 [shape=record,label="{6\:\ 0x0016|if ((r3.totalbytes \> r0 ? 1 : (r3.totalbytes == r0 ? 0 : \-1)) == 0) goto L_0x0019\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|r3.reset()\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|if (r3 == null) goto L_0x0022\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|r3.close()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022}"];
Node_11 [shape=record,label="{11\:\ 0x0024|if (r11.useLz4 == false) goto L_0x002f\l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|r3 = new p004ar.com.hjg.pngj.pixels.CompressorStreamLz4((java.io.OutputStream) null, r11.buflen, r0)\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|ar.com.hjg.pngj.pixels.CompressorStreamDeflater r4 = new p004ar.com.hjg.pngj.pixels.CompressorStreamDeflater((java.io.OutputStream) null, r11.buflen, r0, 4, 0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|PHI: r3 \l  PHI: (r3v5 ar.com.hjg.pngj.pixels.CompressorStreamDeflater) = (r4v6 ar.com.hjg.pngj.pixels.CompressorStreamDeflater), (r3v10 ar.com.hjg.pngj.pixels.CompressorStreamDeflater) binds: [B:13:0x002f, B:12:0x0026] A[DONT_GENERATE, DONT_INLINE]\l|r11.filterBank[r2] = r3\l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|LOOP_END\lPHI: r3 \l  PHI: (r3v3 ar.com.hjg.pngj.pixels.CompressorStream) = (r3v8 ar.com.hjg.pngj.pixels.CompressorStream), (r3v9 ar.com.hjg.pngj.pixels.CompressorStreamDeflater) binds: [B:19:0x003f, B:18:0x003f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0009\-\>B:15:0x003f\l|r3.setStoreFirstByte(true, r11.rowsPerBandCurrent)\lint r2 = r2 + 1\l}"];
Node_16 [shape=record,label="{16\:\ 0x0048|RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|SYNTHETIC\l|r3 = r3\l}"];
Node_19 [shape=record,label="{19\:\ 0x003f|SYNTHETIC\l|r3 = r3\l}"];
MethodNode[shape=record,label="{private void ar.com.hjg.pngj.pixels.PixelsWriterMultiple.rebuildFiltersBank((r11v0 'this' ar.com.hjg.pngj.pixels.PixelsWriterMultiple A[IMMUTABLE_TYPE, THIS]))  | INCONSISTENT_CODE\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r3v9, resolved type: ar.com.hjg.pngj.pixels.CompressorStreamDeflater\}\lJADX WARNING: type inference failed for: r3v7, types: [ar.com.hjg.pngj.pixels.CompressorStreamLz4]\lMulti\-variable type inference failed\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_17;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_19;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_18;
Node_15 -> Node_1;
Node_17 -> Node_16;
Node_18 -> Node_15;
Node_19 -> Node_15;
}

