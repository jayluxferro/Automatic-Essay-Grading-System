digraph "CFG forar.com.hjg.pngj.pixels.PixelsWriterMultiple.getBestCompressor()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r7 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.tryAdaptive boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0008: CONST  (r2 I:?[long, double]) = \l  (9218868437227405311(0x7fefffffffffffff, double:1.7976931348623157E308) ?[long, double])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:10:0x0020 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IGET  (r4 I:ar.com.hjg.pngj.pixels.CompressorStream[]) = (r7 I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple) ar.com.hjg.pngj.pixels.PixelsWriterMultiple.filterBank ar.com.hjg.pngj.pixels.CompressorStream[] \l0x0011: AGET  (r4 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0013: INVOKE  (r4 I:double) = (r4 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.getCompressionRatio():double type: VIRTUAL \l0x0017: CMP_G  (r6 I:int) = (r4 I:double), (r2 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: IF  (r6 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:9:0x001d \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001c: MOVE  (r2 I:?[long, double]) = (r4 I:?[long, double]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|0x0020: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{private int ar.com.hjg.pngj.pixels.PixelsWriterMultiple.getBestCompressor((r7 'this' I:ar.com.hjg.pngj.pixels.PixelsWriterMultiple A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_5;
}

