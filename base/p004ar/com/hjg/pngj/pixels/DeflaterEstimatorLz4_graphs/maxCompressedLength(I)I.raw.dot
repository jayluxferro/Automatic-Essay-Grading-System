digraph "CFG forar.com.hjg.pngj.pixels.DeflaterEstimatorLz4.maxCompressedLength(I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: ARITH  (r0 I:int) = (r3 I:int) \/ (255 int) \l0x0004: ARITH  (r3 I:int) = (r3 I:int) + (r0 I:int) \l0x0005: ARITH  (r3 I:int) = (r3 I:int) + (16 int) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r3 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x000a: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000c: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000f: CONST_STR  (r2 I:java.lang.String) =  \"length must be \>= 0, got \" \l0x0011: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0014: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0017: INVOKE  (r3 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x001b: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{static final int ar.com.hjg.pngj.pixels.DeflaterEstimatorLz4.maxCompressedLength((r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

