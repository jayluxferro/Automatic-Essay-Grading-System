digraph "CFG forar.com.hjg.pngj.pixels.DeflaterEstimatorLz4.compress64k([BII)I" {
subgraph cluster_Region_369357743 {
label = "R(5:0|(2:2|(3:3|(2:4|(2:(2:6|1)|(2:7|(2:(1:35)|(1:26)))))|24))(1:27)|28|(1:30)|32) | DECL_VAR: int null, int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r14 + r15\lint int r1 = r0 \- 5\lint int r2 = r0 \- 12\l}"];
subgraph cluster_IfRegion_564694425 {
label = "IF [B:1:0x000c] THEN: R(2:2|(3:3|(2:4|(2:(2:6|1)|(2:7|(2:(1:35)|(1:26)))))|24)) ELSE: R(1:27)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000c|if (r15 \>= 13) goto L_0x000e\l}"];
subgraph cluster_Region_777051327 {
label = "R(2:2|(3:3|(2:4|(2:(2:6|1)|(2:7|(2:(1:35)|(1:26)))))|24))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000e|short[] short[] r15 = new short[8192]\lint int r6 = r14 + 1\lint r7 = r14\lr8 = 0\l}"];
subgraph cluster_LoopRegion_149325637 {
label = "LOOP:0: (3:3|(2:4|(2:(2:6|1)|(2:7|(2:(1:35)|(1:26)))))|24)";
node [shape=record,color=blue];
subgraph cluster_Region_1261271211 {
label = "R(3:3|(2:4|(2:(2:6|1)|(2:7|(2:(1:35)|(1:26)))))|24)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0016|LOOP_START\lPHI: r6 r7 r8 \l  PHI: (r6v2 int) = (r6v1 int), (r6v8 int) binds: [B:2:0x000e, B:24:0x0096] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 int) = (r7v0 int), (r7v6 int) binds: [B:2:0x000e, B:24:0x0096] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v7 int) = (r8v6 int), (r8v13 int) binds: [B:2:0x000e, B:24:0x0096] A[DONT_GENERATE, DONT_INLINE]\lLOOP_LABEL: LOOP:0: B:3:0x0016\-\>B:24:0x0096\lLOOP:0: B:3:0x0016\-\>B:24:0x0096\l|int int r5 = (1 \<\< SKIP_STRENGTH) + 3\l}"];
subgraph cluster_LoopRegion_5117594 {
label = "LOOP:1: (2:4|(2:(2:6|1)|(2:7|(2:(1:35)|(1:26)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1763427336 {
label = "R(2:4|(2:(2:6|1)|(2:7|(2:(1:35)|(1:26)))))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001c|LOOP_START\lPHI: r5 r6 \l  PHI: (r5v4 int) = (r5v3 int), (r5v18 int) binds: [B:3:0x0016, B:26:0x009f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v3 int) = (r6v2 int), (r6v9 int) binds: [B:3:0x0016, B:26:0x009f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:4:0x001c\-\>B:26:0x009f\l|int int r9 = r5 + 1\lint int r5 = (r5 \>\>\> SKIP_STRENGTH) + r6\l}"];
subgraph cluster_Region_231520186 {
label = "R(2:(2:6|1)|(2:7|(2:(1:35)|(1:26))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_310301787 {
label = "IF [B:5:0x0022] THEN: R(2:6|1) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0022|if (r5 \> r2) goto L_0x0024\l}"];
subgraph cluster_Region_1535615868 {
label = "R(2:6|1)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0024|EDGE_INSN: B:6:0x0024\-\>B:28:0x00a4 ?: BREAK  \l|r14 = r7\l}"];
Node_InsnContainer_1760372703 [shape=record,label="{|break loop0\l}"];
}
}
subgraph cluster_Region_1377311694 {
label = "R(2:7|(2:(1:35)|(1:26)))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0027|int int r10 = hash64k(readInt(r13, r6))\lint int r11 = readShort(r15, r10) + r14\lwriteShort(r15, r10, r6 \- r14)\l}"];
subgraph cluster_Region_1418549544 {
label = "R(2:(1:35)|(1:26))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2077189262 {
label = "IF [B:8:0x003d] THEN: R(1:35) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x003d|if (readIntEquals(r13, r11, r6) == true) goto L_0x003f\l}"];
subgraph cluster_Region_604471269 {
label = "R(1:35)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x003f|SYNTHETIC\lEDGE_INSN: B:35:0x003f\-\>B:9:0x003f ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_1672540245 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x009f|LOOP_END\lLOOP:1: B:4:0x001c\-\>B:26:0x009f\l|r6 = r5\lr5 = r9\l}"];
}
}
}
}
}
}
Node_24 [shape=record,label="{24\:\ 0x0096|LOOP_END\lLOOP:0: B:3:0x0016\-\>B:24:0x0096\l|r7 = r6\lr6 = r6 + 1\l}"];
}
}
}
subgraph cluster_Region_659017075 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x00a3|r8 = 0\l}"];
}
}
Node_28 [shape=record,label="{28\:\ 0x00a4|EDGE_INSN: B:6:0x0024\-\>B:28:0x00a4 ?: BREAK  \lEDGE_INSN: B:21:0x006d\-\>B:28:0x00a4 ?: BREAK  \lPHI: r8 r14 \l  PHI: (r8v0 int) = (r8v5 int), (r8v7 int), (r8v13 int) binds: [B:27:0x00a3, B:6:0x0024, B:21:0x006d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v1 int) = (r14v0 int), (r14v2 int), (r14v3 int) binds: [B:27:0x00a3, B:6:0x0024, B:21:0x006d] A[DONT_GENERATE, DONT_INLINE]\l|int int r0 = r0 \- r14\l}"];
subgraph cluster_IfRegion_1256724770 {
label = "IF [B:29:0x00a5] THEN: R(1:30) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x00a5|if (r0 \>= 270) goto L_0x00a7\l}"];
subgraph cluster_Region_267576130 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x00a7|r8 += (r0 \- 15) \/ 255\l}"];
}
}
Node_32 [shape=record,label="{32\:\ 0x00ae|RETURN\l|return r8 + 1 + r0\l}"];
}
Node_9 [shape=record,color=red,label="{9\:\ 0x003f|EDGE_INSN: B:35:0x003f\-\>B:9:0x003f ?: BREAK  \l|int r5 = commonBytesBackward(r13, r11, r6, r14, r7)\lint r6 = r6 \- r5\lint r11 = r11 \- r5\lint r5 = r6 \- r7\lint r8 = r8 + 1\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x004b|if (r5 \< 15) goto L_0x0055\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x004d|if (r5 \<= 15) goto L_0x0054\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x004f|r8 += (r5 \- 15) \/ 255\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0054|PHI: r8 \l  PHI: (r8v18 int) = (r8v8 int), (r8v20 int) binds: [B:11:0x004d, B:12:0x004f] A[DONT_GENERATE, DONT_INLINE]\l|r8++\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0055|PHI: r8 \l  PHI: (r8v9 int) = (r8v8 int), (r8v19 int) binds: [B:10:0x004b, B:13:0x0054] A[DONT_GENERATE, DONT_INLINE]\l|int r8 = r8 + r5\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0056|LOOP_START\lPHI: r6 r8 r11 \l  PHI: (r6v5 int) = (r6v4 int), (r6v7 int) binds: [B:14:0x0055, B:25:0x009c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v11 int) = (r8v10 int), (r8v14 int) binds: [B:14:0x0055, B:25:0x009c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v3 int) = (r11v2 int), (r11v5 int) binds: [B:14:0x0055, B:25:0x009c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:15:0x0056\-\>B:25:0x009c\l|int r8 = r8 + 2\lint r6 = r6 + 4\lint r5 = commonBytes(r13, r11 + 4, r6, r1)\lint r6 = r6 + r5\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0061|if (r5 \< 15) goto L_0x006b\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0063|if (r5 \< 270) goto L_0x006a\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0065|r8 += (r5 \- 15) \/ 255\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x006a|PHI: r8 \l  PHI: (r8v15 int) = (r8v12 int), (r8v17 int) binds: [B:17:0x0063, B:18:0x0065] A[DONT_GENERATE, DONT_INLINE]\l|r8++\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x006b|PHI: r8 \l  PHI: (r8v13 int) = (r8v12 int), (r8v16 int) binds: [B:16:0x0061, B:19:0x006a] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 \<= r2) goto L_0x006f\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x006d|EDGE_INSN: B:21:0x006d\-\>B:28:0x00a4 ?: BREAK  \l|r14 = r6\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x006f|int r5 = r6 \- 2\lwriteShort(r15, hash64k(readInt(r13, r5)), r5 \- r14)\lint r5 = hash64k(readInt(r13, r6))\lint r11 = r14 + readShort(r15, r5)\lwriteShort(r15, r5, r6 \- r14)\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0094|if (readIntEquals(r13, r6, r11) != false) goto L_0x009c\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x009c|LOOP_END\lLOOP:2: B:15:0x0056\-\>B:25:0x009c\l|int r8 = r8 + 1\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x00ac|PHI: r8 \l  PHI: (r8v1 int) = (r8v0 int), (r8v4 int) binds: [B:29:0x00a5, B:30:0x00a7] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0024|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x006d|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0096|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static int ar.com.hjg.pngj.pixels.DeflaterEstimatorLz4.compress64k((r13v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCode restructure failed: missing block: B:9:0x003f, code lost:\l    r5 = commonBytesBackward(r13, r11, r6, r14, r7);\l    r6 = r6 \- r5;\l    r11 = r11 \- r5;\l    r5 = r6 \- r7;\l    r8 = r8 + 1;\l\lCode restructure failed: missing block: B:10:0x004b, code lost:\l    if (r5 \< 15) goto L_0x0055;\l\lCode restructure failed: missing block: B:11:0x004d, code lost:\l    if (r5 \<= 15) goto L_0x0054;\l\lCode restructure failed: missing block: B:12:0x004f, code lost:\l    r8 = r8 + ((r5 \- 15) \/ 255);\l\lCode restructure failed: missing block: B:13:0x0054, code lost:\l    r8 = r8 + 1;\l\lCode restructure failed: missing block: B:14:0x0055, code lost:\l    r8 = r8 + r5;\l\lCode restructure failed: missing block: B:15:0x0056, code lost:\l    r8 = r8 + 2;\l    r6 = r6 + 4;\l    r5 = commonBytes(r13, r11 + 4, r6, r1);\l    r6 = r6 + r5;\l\lCode restructure failed: missing block: B:16:0x0061, code lost:\l    if (r5 \< 15) goto L_0x006b;\l\lCode restructure failed: missing block: B:17:0x0063, code lost:\l    if (r5 \< 270) goto L_0x006a;\l\lCode restructure failed: missing block: B:18:0x0065, code lost:\l    r8 = r8 + ((r5 \- 15) \/ 255);\l\lCode restructure failed: missing block: B:19:0x006a, code lost:\l    r8 = r8 + 1;\l\lCode restructure failed: missing block: B:20:0x006b, code lost:\l    if (r6 \<= r2) goto L_0x006f;\l\lCode restructure failed: missing block: B:21:0x006d, code lost:\l    r14 = r6;\l\lCode restructure failed: missing block: B:22:0x006f, code lost:\l    r5 = r6 \- 2;\l    writeShort(r15, hash64k(readInt(r13, r5)), r5 \- r14);\l    r5 = hash64k(readInt(r13, r6));\l    r11 = r14 + readShort(r15, r5);\l    writeShort(r15, r5, r6 \- r14);\l\lCode restructure failed: missing block: B:23:0x0094, code lost:\l    if (readIntEquals(r13, r6, r11) != false) goto L_0x009c;\l\lCode restructure failed: missing block: B:25:0x009c, code lost:\l    r8 = r8 + 1;\l\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_27[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_7[style=dashed];
Node_5 -> Node_33;
Node_6 -> Node_28;
Node_7 -> Node_8;
Node_8 -> Node_26[style=dashed];
Node_8 -> Node_35;
Node_35 -> Node_9;
Node_26 -> Node_4;
Node_24 -> Node_3;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_31[style=dashed];
Node_30 -> Node_31;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_34[style=dashed];
Node_21 -> Node_28;
Node_22 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_36[style=dashed];
Node_25 -> Node_15;
Node_31 -> Node_32;
Node_33 -> Node_6;
Node_34 -> Node_21;
Node_36 -> Node_24;
}

