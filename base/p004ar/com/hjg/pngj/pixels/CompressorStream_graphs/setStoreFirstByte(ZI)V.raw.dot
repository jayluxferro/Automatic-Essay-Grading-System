digraph "CFG forar.com.hjg.pngj.pixels.CompressorStream.setStoreFirstByte(ZI)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r1 I:boolean)\l  (r0 I:ar.com.hjg.pngj.pixels.CompressorStream)\l ar.com.hjg.pngj.pixels.CompressorStream.storeFirstByte boolean \l0x0002: IGET  (r1 I:boolean) = (r0 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.storeFirstByte boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r1 I:byte[]) = (r0 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.firstBytes byte[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IGET  (r1 I:byte[]) = (r0 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.firstBytes byte[] \l0x000c: ARRAY_LENGTH  (r1 I:int) = (r1 I:?[]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:8:0x0017 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: NEW_ARRAY  (r1 I:byte[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0011: IPUT  \l  (r1 I:byte[])\l  (r0 I:ar.com.hjg.pngj.pixels.CompressorStream)\l ar.com.hjg.pngj.pixels.CompressorStream.firstBytes byte[] \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0015: IPUT  \l  (r1 I:byte[])\l  (r0 I:ar.com.hjg.pngj.pixels.CompressorStream)\l ar.com.hjg.pngj.pixels.CompressorStream.firstBytes byte[] \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.pixels.CompressorStream.setStoreFirstByte((r0 'this' I:ar.com.hjg.pngj.pixels.CompressorStream A[IMMUTABLE_TYPE, THIS]), (r1 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_8;
Node_7 -> Node_8;
}

