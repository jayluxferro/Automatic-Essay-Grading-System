digraph "CFG forar.com.hjg.pngj.pixels.CompressorStream.reset(Ljava\/io\/OutputStream;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.closed boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.done():void type: VIRTUAL \l0x0007: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0009: IPUT  (r0 I:long), (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.bytesIn long \l0x000b: IPUT  (r0 I:long), (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.bytesOut long \l0x000d: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x000e: IPUT  (r0 I:int), (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.block int \l0x0010: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0011: IPUT  \l  (r0 I:boolean)\l  (r2 I:ar.com.hjg.pngj.pixels.CompressorStream)\l ar.com.hjg.pngj.pixels.CompressorStream.done boolean \l0x0013: IPUT  \l  (r3 I:java.io.OutputStream)\l  (r2 I:ar.com.hjg.pngj.pixels.CompressorStream)\l ar.com.hjg.pngj.pixels.CompressorStream.os java.io.OutputStream \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: NEW_INSTANCE  (r3 I:ar.com.hjg.pngj.PngjOutputException) =  ar.com.hjg.pngj.PngjOutputException \l0x0018: CONST_STR  (r0 I:java.lang.String) =  \"cannot reset, discarded object\" \l0x001a: INVOKE  \l  (r3 I:ar.com.hjg.pngj.PngjOutputException)\l  (r0 I:java.lang.String)\l ar.com.hjg.pngj.PngjOutputException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.pixels.CompressorStream.reset((r2 'this' I:ar.com.hjg.pngj.pixels.CompressorStream A[IMMUTABLE_TYPE, THIS]), (r3 I:java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

