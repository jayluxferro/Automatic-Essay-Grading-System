digraph "CFG forar.com.hjg.pngj.pixels.CompressorStream.write([BII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.block int \l0x0002: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0004: IPUT  (r0 I:int), (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.block int \l0x0006: IGET  (r0 I:int) = (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.blockLen int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r5 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:7:0x0021 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  \l  (r2 I:ar.com.hjg.pngj.pixels.CompressorStream)\l  (r3 I:byte[])\l  (r4 I:int)\l  (r5 I:int)\l ar.com.hjg.pngj.pixels.CompressorStream.mywrite(byte[], int, int):void type: VIRTUAL \l0x000d: IGET  (r5 I:boolean) = (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.storeFirstByte boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IGET  (r5 I:int) = (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.block int \l0x0013: IGET  (r0 I:byte[]) = (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.firstBytes byte[] \l0x0015: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r5 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:9:0x002f \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IGET  (r5 I:byte[]) = (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.firstBytes byte[] \l0x001a: IGET  (r0 I:int) = (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.block int \l0x001c: AGET  (r3 I:byte A[IMMUTABLE_TYPE]) = \l  (r3 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x001e: APUT  \l  (r5 I:byte[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l  (r3 I:byte A[IMMUTABLE_TYPE])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:9:0x002f \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: IGET  (r0 I:int) = (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.blockLen int \l0x0025: INVOKE  \l  (r2 I:ar.com.hjg.pngj.pixels.CompressorStream)\l  (r3 I:byte[])\l  (r4 I:int)\l  (r0 I:int)\l ar.com.hjg.pngj.pixels.CompressorStream.mywrite(byte[], int, int):void type: VIRTUAL \l0x0028: IGET  (r0 I:int) = (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.blockLen int \l0x002a: ARITH  (r4 I:int) = (r4 I:int) + (r0 I:int) \l0x002b: IGET  (r0 I:int) = (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.blockLen int \l0x002d: ARITH  (r5 I:int) = (r5 I:int) \- (r0 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: IGET  (r3 I:long) = (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.bytesIn long \l0x0031: IGET  (r0 I:long) = (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.totalbytes long \l0x0033: CMP_L  (r3 I:int) = (r3 I:long), (r0 I:long) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|0x0035: IF  (r3 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:12:0x003a \l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|0x0037: INVOKE  (r2 I:ar.com.hjg.pngj.pixels.CompressorStream) ar.com.hjg.pngj.pixels.CompressorStream.done():void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|0x003a: RETURN   \l}"];
MethodNode[shape=record,label="{public final void ar.com.hjg.pngj.pixels.CompressorStream.write((r2 'this' I:ar.com.hjg.pngj.pixels.CompressorStream A[IMMUTABLE_TYPE, THIS]), (r3 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_9;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_7;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
}

