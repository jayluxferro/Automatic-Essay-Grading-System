digraph "CFG forar.com.hjg.pngj.pixels.FiltersPerformance.computeEntropyFromHistogram()D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:ar.com.hjg.pngj.ImageInfo) = (r15 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.iminfo ar.com.hjg.pngj.ImageInfo \l0x0002: IGET  (r0 I:int) = (r0 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPerRow int \l0x0004: CAST  (r0 I:double) = (double) (r0 I:int) \l0x0005: CONST  (r2 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0007: ARITH  (r2 I:double) = (r2 I:double) \/ (r0 I:double) \l0x0008: INVOKE  (r0 I:double) = (r2 I:double) java.lang.Math.log(double):double type: STATIC \l0x000c: IGET  (r4 I:int[]) = (r15 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.histog int[] \l0x000e: ARRAY_LENGTH  (r5 I:int) = (r4 I:?[]) \l0x000f: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l0x0011: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: MOVE  (r9 I:?[long, double]) = (r6 I:?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: IF  (r8 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:6:0x0025 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: AGET  (r11 I:?[int, float]) = (r4 I:?[int, float][]), (r8 I:?[int, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: IF  (r11 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:5:0x0022 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: CAST  (r11 I:double) = (double) (r11 I:int) \l0x001a: INVOKE  (r13 I:double) = (r11 I:double) java.lang.Math.log(double):double type: STATIC \l0x001e: ARITH  (r13 I:double) = (r13 I:double) + (r0 I:double) \l0x001f: ARITH  (r13 I:double) = (r13 I:double) * (r11 I:double) \l0x0021: ARITH  (r9 I:double) = (r9 I:double) + (r13 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: ARITH  (r8 I:int) = (r8 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: SGET  (r0 I:double) =  ar.com.hjg.pngj.pixels.FiltersPerformance.LOG2NI double \l0x0027: ARITH  (r2 I:double) = (r2 I:double) * (r0 I:double) \l0x0029: ARITH  (r0 I:double) = (r9 I:double) * (r2 I:double) \l0x002b: CMP_G  (r2 I:int) = (r0 I:double), (r6 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:9:0x0030 \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: MOVE  (r0 I:?[long, double]) = (r6 I:?[long, double]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: RETURN  (r0 I:double) \l}"];
MethodNode[shape=record,label="{public final double ar.com.hjg.pngj.pixels.FiltersPerformance.computeEntropyFromHistogram((r15 'this' I:ar.com.hjg.pngj.pixels.FiltersPerformance A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
}

