digraph "CFG forar.com.hjg.pngj.pixels.FiltersPerformance.computeHistogram([B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Arrays.fill(r5.histog, 0)\lr1 = 1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|LOOP_START\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v3 int) binds: [B:0:0x0000, B:3:0x000e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0008\-\>B:3:0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|if (r1 \>= r5.iminfo.bytesPerRow) goto L_0x001c\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|LOOP_END\lLOOP:0: B:1:0x0008\-\>B:3:0x000e\l|int[] r2 = r5.histog\lr3 = r6[r1] & 255\lr2[r3] = r2[r3] + 1\lint r1 = r1 + 1\l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.pixels.FiltersPerformance.computeHistogram((r5v0 'this' ar.com.hjg.pngj.pixels.FiltersPerformance A[IMMUTABLE_TYPE, THIS]), (r6v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_1;
Node_5 -> Node_4;
}

