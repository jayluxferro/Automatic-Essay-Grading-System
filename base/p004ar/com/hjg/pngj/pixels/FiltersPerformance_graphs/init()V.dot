digraph "CFG forar.com.hjg.pngj.pixels.FiltersPerformance.init()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if ((r6.filter_weights[0] \> 0.0d ? 1 : (r6.filter_weights[0] == 0.0d ? 0 : \-1)) \>= 0) goto L_0x004b\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|java.lang.System.arraycopy(FILTER_WEIGHTS_DEFAULT, 0, r6.filter_weights, 0, 5)\lr2 = r6.filter_weights[0]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|if (r6.iminfo.bitDepth != 16) goto L_0x0025\l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|r2 = 1.2d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0025}"];
Node_6 [shape=record,label="{6\:\ 0x0029|if (r6.iminfo.alpha == false) goto L_0x0031\l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|r2 = 0.8d\l}"];
Node_8 [shape=record,label="{8\:\ 0x0031}"];
Node_9 [shape=record,label="{9\:\ 0x0035|if (r6.iminfo.indexed != false) goto L_0x003f\l}"];
Node_10 [shape=record,label="{10\:\ 0x0037}"];
Node_11 [shape=record,label="{11\:\ 0x003d|if (r6.iminfo.bitDepth \>= 8) goto L_0x0044\l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|r2 = 0.4d\l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|PHI: r2 \l  PHI: (r2v3 double) = (r2v5 double), (r2v2 double), (r2v6 double), (r2v7 double) binds: [B:12:0x003f, B:11:0x003d, B:7:0x002b, B:4:0x001f] A[DONT_GENERATE, DONT_INLINE]\l|double[] r0 = r6.filter_weights\lr0[0] = r2 \/ r6.preferenceForNone\l}"];
Node_14 [shape=record,label="{14\:\ 0x004b|java.util.Arrays.fill(r6.cost, 1.0d)\lr6.initdone = true\l}"];
Node_15 [shape=record,label="{15\:\ 0x0055|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void ar.com.hjg.pngj.pixels.FiltersPerformance.init((r6v0 'this' ar.com.hjg.pngj.pixels.FiltersPerformance A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

