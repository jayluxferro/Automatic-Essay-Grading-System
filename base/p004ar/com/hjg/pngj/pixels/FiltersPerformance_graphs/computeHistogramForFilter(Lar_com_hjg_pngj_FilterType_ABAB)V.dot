digraph "CFG forar.com.hjg.pngj.pixels.FiltersPerformance.computeHistogramForFilter(Lar\/com\/hjg\/pngj\/FilterType;[B[B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Arrays.fill(r8.histog, 0)\lint r0 = r8.iminfo.bytesPerRow\l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|switch(r9) \{\l    case ar.com.hjg.pngj.FilterType.FILTER_NONE :ar.com.hjg.pngj.FilterType: goto L_0x00f3;\l    case ar.com.hjg.pngj.FilterType.FILTER_PAETH :ar.com.hjg.pngj.FilterType: goto L_0x00b7;\l    case ar.com.hjg.pngj.FilterType.FILTER_SUB :ar.com.hjg.pngj.FilterType: goto L_0x0088;\l    case ar.com.hjg.pngj.FilterType.FILTER_UP :ar.com.hjg.pngj.FilterType: goto L_0x0070;\l    case ar.com.hjg.pngj.FilterType.FILTER_AVERAGE :ar.com.hjg.pngj.FilterType: goto L_0x002d;\l    default: goto L_0x0016;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|java.lang.StringBuilder r11 = new java.lang.StringBuilder()\lr11.append(\"Bad filter:\")\lr11.append(r9)\l}"];
Node_3 [shape=record,label="{3\:\ 0x002c|throw new p004ar.com.hjg.pngj.PngjExceptionInternal(r11.toString())\l}"];
Node_4 [shape=record,label="{4\:\ 0x002d|r9 = 1\l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|LOOP_START\lPHI: r9 \l  PHI: (r9v24 int) = (r9v23 int), (r9v30 int) binds: [B:4:0x002d, B:7:0x0034] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x002e\-\>B:7:0x0034\l}"];
Node_6 [shape=record,label="{6\:\ 0x0032|if (r9 \> r8.iminfo.bytesPixel) goto L_0x004b\l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|LOOP_END\lLOOP:0: B:5:0x002e\-\>B:7:0x0034\l|int[] r1 = r8.histog\lr2 = ((r10[r9] & 255) \- ((r11[r9] & 255) \/ 2)) & 255\lr1[r2] = r1[r2] + 1\lint r9 = r9 + 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x004b|int r9 = r8.iminfo.bytesPixel + 1\lr1 = 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0051|LOOP_START\lPHI: r1 r9 \l  PHI: (r1v15 int) = (r1v14 int), (r1v16 int) binds: [B:8:0x004b, B:10:0x0053] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v28 int) = (r9v27 int), (r9v29 int) binds: [B:8:0x004b, B:10:0x0053] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:9:0x0051\-\>B:10:0x0053\l|if (r9 \> r0) goto L_0x0104\l}"];
Node_10 [shape=record,label="{10\:\ 0x0053|LOOP_END\lLOOP:1: B:9:0x0051\-\>B:10:0x0053\l|int[] r2 = r8.histog\lr4 = ((r10[r9] & 255) \- (((r11[r9] & 255) + (r10[r1] & 255)) \/ 2)) & 255\lr2[r4] = r2[r4] + 1\lint r9 = r9 + 1\lint r1 = r1 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0070|r9 = 1\l}"];
Node_12 [shape=record,label="{12\:\ 0x0071|LOOP_START\lPHI: r9 \l  PHI: (r9v21 int) = (r9v20 int), (r9v22 int) binds: [B:11:0x0070, B:14:0x0077] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:12:0x0071\-\>B:14:0x0077\l}"];
Node_13 [shape=record,label="{13\:\ 0x0075|if (r9 \> r8.iminfo.bytesPerRow) goto L_0x0104\l}"];
Node_14 [shape=record,label="{14\:\ 0x0077|LOOP_END\lLOOP:2: B:12:0x0071\-\>B:14:0x0077\l|int[] r0 = r8.histog\lr1 = (r10[r9] \- r11[r9]) & 255\lr0[r1] = r0[r1] + 1\lint r9 = r9 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0088|r9 = 1\l}"];
Node_16 [shape=record,label="{16\:\ 0x0089|LOOP_START\lPHI: r9 \l  PHI: (r9v13 int) = (r9v12 int), (r9v19 int) binds: [B:15:0x0088, B:18:0x008f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:16:0x0089\-\>B:18:0x008f\l}"];
Node_17 [shape=record,label="{17\:\ 0x008d|if (r9 \> r8.iminfo.bytesPixel) goto L_0x009d\l}"];
Node_18 [shape=record,label="{18\:\ 0x008f|LOOP_END\lLOOP:3: B:16:0x0089\-\>B:18:0x008f\l|int[] r11 = r8.histog\lr1 = r10[r9] & 255\lr11[r1] = r11[r1] + 1\lint r9 = r9 + 1\l}"];
Node_19 [shape=record,label="{19\:\ 0x009d|int r9 = r8.iminfo.bytesPixel + 1\lr11 = 1\l}"];
Node_20 [shape=record,label="{20\:\ 0x00a3|LOOP_START\lPHI: r9 r11 \l  PHI: (r9v17 int) = (r9v16 int), (r9v18 int) binds: [B:19:0x009d, B:21:0x00a5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v5 int) = (r11v4 int), (r11v6 int) binds: [B:19:0x009d, B:21:0x00a5] A[DONT_GENERATE, DONT_INLINE]\lLOOP:4: B:20:0x00a3\-\>B:21:0x00a5\l|if (r9 \> r0) goto L_0x0104\l}"];
Node_21 [shape=record,label="{21\:\ 0x00a5|LOOP_END\lLOOP:4: B:20:0x00a3\-\>B:21:0x00a5\l|int[] r1 = r8.histog\lr2 = (r10[r9] \- r10[r11]) & 255\lr1[r2] = r1[r2] + 1\lint r9 = r9 + 1\lint r11 = r11 + 1\l}"];
Node_22 [shape=record,label="{22\:\ 0x00b7|r9 = 1\l}"];
Node_23 [shape=record,label="{23\:\ 0x00b8|LOOP_START\lPHI: r9 \l  PHI: (r9v5 int) = (r9v4 int), (r9v11 int) binds: [B:22:0x00b7, B:24:0x00ba] A[DONT_GENERATE, DONT_INLINE]\lLOOP:5: B:23:0x00b8\-\>B:24:0x00ba\l|if (r9 \> r0) goto L_0x00ce\l}"];
Node_24 [shape=record,label="{24\:\ 0x00ba|LOOP_END\lLOOP:5: B:23:0x00b8\-\>B:24:0x00ba\l|int[] r2 = r8.histog\lint r4 = p004ar.com.hjg.pngj.PngHelperInternal.filterRowPaeth(r10[r9], 0, r11[r9] & 255, 0)\lr2[r4] = r2[r4] + 1\lint r9 = r9 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x00ce|int r9 = r8.iminfo.bytesPixel + 1\lr1 = 1\l}"];
Node_26 [shape=record,label="{26\:\ 0x00d4|LOOP_START\lPHI: r1 r9 \l  PHI: (r1v4 int) = (r1v3 int), (r1v5 int) binds: [B:25:0x00ce, B:27:0x00d6] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v9 int) = (r9v8 int), (r9v10 int) binds: [B:25:0x00ce, B:27:0x00d6] A[DONT_GENERATE, DONT_INLINE]\lLOOP:6: B:26:0x00d4\-\>B:27:0x00d6\l|if (r9 \> r0) goto L_0x0104\l}"];
Node_27 [shape=record,label="{27\:\ 0x00d6|LOOP_END\lLOOP:6: B:26:0x00d4\-\>B:27:0x00d6\l|int[] r2 = r8.histog\lint r4 = p004ar.com.hjg.pngj.PngHelperInternal.filterRowPaeth(r10[r9], r10[r1] & 255, r11[r9] & 255, r11[r1] & 255)\lr2[r4] = r2[r4] + 1\lint r9 = r9 + 1\lint r1 = r1 + 1\l}"];
Node_28 [shape=record,label="{28\:\ 0x00f3|r9 = 1\l}"];
Node_29 [shape=record,label="{29\:\ 0x00f4|LOOP_START\lPHI: r9 \l  PHI: (r9v2 int) = (r9v1 int), (r9v3 int) binds: [B:28:0x00f3, B:30:0x00f6] A[DONT_GENERATE, DONT_INLINE]\lLOOP:7: B:29:0x00f4\-\>B:30:0x00f6\l|if (r9 \> r0) goto L_0x0104\l}"];
Node_30 [shape=record,label="{30\:\ 0x00f6|LOOP_END\lLOOP:7: B:29:0x00f4\-\>B:30:0x00f6\l|int[] r11 = r8.histog\lr1 = r10[r9] & 255\lr11[r1] = r11[r1] + 1\lint r9 = r9 + 1\l}"];
Node_31 [shape=record,label="{31\:\ 0x004b|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0104|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0104|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x009d|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0104|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x00ce|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0104|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0104|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public final void ar.com.hjg.pngj.pixels.FiltersPerformance.computeHistogramForFilter((r8v0 'this' ar.com.hjg.pngj.pixels.FiltersPerformance A[IMMUTABLE_TYPE, THIS]), (r9v0 ar.com.hjg.pngj.FilterType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_11;
Node_1 -> Node_15;
Node_1 -> Node_22;
Node_1 -> Node_28;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_31;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_32;
Node_10 -> Node_9;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_33;
Node_14 -> Node_12;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_34;
Node_18 -> Node_16;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_35;
Node_21 -> Node_20;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_36;
Node_24 -> Node_23;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_37;
Node_27 -> Node_26;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_38;
Node_30 -> Node_29;
Node_31 -> Node_8;
Node_32 -> Node_39;
Node_33 -> Node_40;
Node_34 -> Node_19;
Node_35 -> Node_41;
Node_36 -> Node_25;
Node_37 -> Node_42;
Node_38 -> Node_43;
}

