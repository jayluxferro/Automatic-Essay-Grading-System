digraph "CFG forar.com.hjg.pngj.pixels.FiltersPerformance.computeHistogramForFilter(Lar\/com\/hjg\/pngj\/FilterType;[B[B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int[]) = (r8 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.histog int[] \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  (r0 I:int[]), (r1 I:int) java.util.Arrays.fill(int[], int):void type: STATIC \l0x0006: IGET  (r0 I:ar.com.hjg.pngj.ImageInfo) = (r8 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.iminfo ar.com.hjg.pngj.ImageInfo \l0x0008: IGET  (r0 I:int) = (r0 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPerRow int \l0x000a: SGET  (r2 I:int[]) =  ar.com.hjg.pngj.pixels.FiltersPerformance.1.$SwitchMap$ar$com$hjg$pngj$FilterType int[] \l0x000c: INVOKE  (r3 I:int) = (r9 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.ordinal():int type: VIRTUAL \l0x0010: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x0012: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5] t:[0x00f3, 0x00b7, 0x0088, 0x0070, 0x002d] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: NEW_INSTANCE  (r10 I:ar.com.hjg.pngj.PngjExceptionInternal) =  ar.com.hjg.pngj.PngjExceptionInternal \l0x0018: NEW_INSTANCE  (r11 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001a: INVOKE  (r11 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001d: CONST_STR  (r0 I:java.lang.String) =  \"Bad filter:\" \l0x001f: INVOKE  (r11 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0022: INVOKE  (r11 I:java.lang.StringBuilder), (r9 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0025: INVOKE  (r9 I:java.lang.String) = (r11 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0029: INVOKE  \l  (r10 I:ar.com.hjg.pngj.PngjExceptionInternal)\l  (r9 I:java.lang.String)\l ar.com.hjg.pngj.PngjExceptionInternal.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x002c|0x002c: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x002d|0x002d: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|0x002e: IGET  (r1 I:ar.com.hjg.pngj.ImageInfo) = (r8 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.iminfo ar.com.hjg.pngj.ImageInfo \l0x0030: IGET  (r1 I:int) = (r1 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPixel int \l}"];
Node_6 [shape=record,label="{6\:\ 0x0032|0x0032: IF  (r9 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:8:0x004b \l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|0x0034: IGET  (r1 I:int[]) = (r8 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.histog int[] \l0x0036: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l \l0x0038: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x003a: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r11 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l \l0x003c: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x003e: ARITH  (r4 I:int) = (r4 I:int) \/ (2 int) \l0x0040: ARITH  (r2 I:int) = (r2 I:int) \- (r4 I:int) \l0x0041: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0043: AGET  (r4 I:?[int, float]) = (r1 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0045: ARITH  (r4 I:int) = (r4 I:int) + (r3 I:int) \l0x0046: APUT  \l  (r1 I:?[int, float][])\l  (r2 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x0048: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x004b|0x004b: IGET  (r9 I:ar.com.hjg.pngj.ImageInfo) = (r8 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.iminfo ar.com.hjg.pngj.ImageInfo \l0x004d: IGET  (r9 I:int) = (r9 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPixel int \l0x004f: ARITH  (r9 I:int) = (r9 I:int) + (r3 I:int) \l0x0050: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0051|0x0051: IF  (r9 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:31:0x0104 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0053|0x0053: IGET  (r2 I:int[]) = (r8 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.histog int[] \l0x0055: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l \l0x0057: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0059: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r11 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l \l0x005b: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x005d: AGET  (r6 I:byte A[IMMUTABLE_TYPE]) = \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x005f: ARITH  (r6 I:?[int, boolean, short, byte, char]) = (r6 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0061: ARITH  (r5 I:int) = (r5 I:int) + (r6 I:int) \l0x0062: ARITH  (r5 I:int) = (r5 I:int) \/ (2 int) \l0x0064: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x0065: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0067: AGET  (r5 I:?[int, float]) = (r2 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x0069: ARITH  (r5 I:int) = (r5 I:int) + (r3 I:int) \l0x006a: APUT  \l  (r2 I:?[int, float][])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:?[int, float])\l \l0x006c: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l0x006e: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0070|0x0070: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0071|0x0071: IGET  (r0 I:ar.com.hjg.pngj.ImageInfo) = (r8 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.iminfo ar.com.hjg.pngj.ImageInfo \l0x0073: IGET  (r0 I:int) = (r0 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPerRow int \l}"];
Node_13 [shape=record,label="{13\:\ 0x0075|0x0075: IF  (r9 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:31:0x0104 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0077|0x0077: IGET  (r0 I:int[]) = (r8 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.histog int[] \l0x0079: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l \l0x007b: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r11 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l \l0x007d: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x007e: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0080: AGET  (r2 I:?[int, float]) = (r0 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x0082: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0083: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x0085: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0088|0x0088: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0089|0x0089: IGET  (r11 I:ar.com.hjg.pngj.ImageInfo) = (r8 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.iminfo ar.com.hjg.pngj.ImageInfo \l0x008b: IGET  (r11 I:int) = (r11 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPixel int \l}"];
Node_17 [shape=record,label="{17\:\ 0x008d|0x008d: IF  (r9 I:?[int, byte, short, char]) \> (r11 I:?[int, byte, short, char])  \-\> B:19:0x009d \l}"];
Node_18 [shape=record,label="{18\:\ 0x008f|0x008f: IGET  (r11 I:int[]) = (r8 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.histog int[] \l0x0091: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l \l0x0093: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0095: AGET  (r2 I:?[int, float]) = (r11 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x0097: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0098: APUT  \l  (r11 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x009a: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x009d|0x009d: IGET  (r9 I:ar.com.hjg.pngj.ImageInfo) = (r8 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.iminfo ar.com.hjg.pngj.ImageInfo \l0x009f: IGET  (r9 I:int) = (r9 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPixel int \l0x00a1: ARITH  (r9 I:int) = (r9 I:int) + (r3 I:int) \l0x00a2: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x00a3|0x00a3: IF  (r9 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:31:0x0104 \l}"];
Node_21 [shape=record,label="{21\:\ 0x00a5|0x00a5: IGET  (r1 I:int[]) = (r8 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.histog int[] \l0x00a7: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l \l0x00a9: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r11 I:?[int, short, byte, char])\l \l0x00ab: ARITH  (r2 I:int) = (r2 I:int) \- (r4 I:int) \l0x00ac: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x00ae: AGET  (r4 I:?[int, float]) = (r1 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x00b0: ARITH  (r4 I:int) = (r4 I:int) + (r3 I:int) \l0x00b1: APUT  \l  (r1 I:?[int, float][])\l  (r2 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x00b3: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l0x00b5: ARITH  (r11 I:int) = (r11 I:int) + (r3 I:int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x00b7|0x00b7: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x00b8|0x00b8: IF  (r9 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:25:0x00ce \l}"];
Node_24 [shape=record,label="{24\:\ 0x00ba|0x00ba: IGET  (r2 I:int[]) = (r8 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.histog int[] \l0x00bc: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l \l0x00be: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r11 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l \l0x00c0: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x00c2: INVOKE  (r4 I:int) = (r4 I:int), (r1 I:int), (r5 I:int), (r1 I:int) ar.com.hjg.pngj.PngHelperInternal.filterRowPaeth(int, int, int, int):int type: STATIC \l0x00c6: AGET  (r5 I:?[int, float]) = (r2 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x00c8: ARITH  (r5 I:int) = (r5 I:int) + (r3 I:int) \l0x00c9: APUT  \l  (r2 I:?[int, float][])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:?[int, float])\l \l0x00cb: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x00ce|0x00ce: IGET  (r9 I:ar.com.hjg.pngj.ImageInfo) = (r8 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.iminfo ar.com.hjg.pngj.ImageInfo \l0x00d0: IGET  (r9 I:int) = (r9 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPixel int \l0x00d2: ARITH  (r9 I:int) = (r9 I:int) + (r3 I:int) \l0x00d3: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x00d4|0x00d4: IF  (r9 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:31:0x0104 \l}"];
Node_27 [shape=record,label="{27\:\ 0x00d6|0x00d6: IGET  (r2 I:int[]) = (r8 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.histog int[] \l0x00d8: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l \l0x00da: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x00dc: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x00de: AGET  (r6 I:byte A[IMMUTABLE_TYPE]) = \l  (r11 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l \l0x00e0: ARITH  (r6 I:?[int, boolean, short, byte, char]) = (r6 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x00e2: AGET  (r7 I:byte A[IMMUTABLE_TYPE]) = \l  (r11 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x00e4: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x00e6: INVOKE  (r4 I:int) = (r4 I:int), (r5 I:int), (r6 I:int), (r7 I:int) ar.com.hjg.pngj.PngHelperInternal.filterRowPaeth(int, int, int, int):int type: STATIC \l0x00ea: AGET  (r5 I:?[int, float]) = (r2 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x00ec: ARITH  (r5 I:int) = (r5 I:int) + (r3 I:int) \l0x00ed: APUT  \l  (r2 I:?[int, float][])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:?[int, float])\l \l0x00ef: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l0x00f1: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int) \l}"];
Node_28 [shape=record,label="{28\:\ 0x00f3|0x00f3: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x00f4|0x00f4: IF  (r9 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:31:0x0104 \l}"];
Node_30 [shape=record,label="{30\:\ 0x00f6|0x00f6: IGET  (r11 I:int[]) = (r8 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.histog int[] \l0x00f8: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l \l0x00fa: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x00fc: AGET  (r2 I:?[int, float]) = (r11 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x00fe: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x00ff: APUT  \l  (r11 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x0101: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0104|0x0104: RETURN   \l}"];
MethodNode[shape=record,label="{public final void ar.com.hjg.pngj.pixels.FiltersPerformance.computeHistogramForFilter((r8 'this' I:ar.com.hjg.pngj.pixels.FiltersPerformance A[IMMUTABLE_TYPE, THIS]), (r9 I:ar.com.hjg.pngj.FilterType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_11;
Node_1 -> Node_15;
Node_1 -> Node_22;
Node_1 -> Node_28;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_31;
Node_10 -> Node_9;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_31;
Node_14 -> Node_12;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_16;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_31;
Node_21 -> Node_20;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_23;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_31;
Node_27 -> Node_26;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_29;
}

