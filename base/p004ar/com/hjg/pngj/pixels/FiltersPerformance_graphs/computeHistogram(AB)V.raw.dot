digraph "CFG forar.com.hjg.pngj.pixels.FiltersPerformance.computeHistogram([B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int[]) = (r5 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.histog int[] \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  (r0 I:int[]), (r1 I:int) java.util.Arrays.fill(int[], int):void type: STATIC \l0x0006: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IGET  (r2 I:ar.com.hjg.pngj.ImageInfo) = (r5 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.iminfo ar.com.hjg.pngj.ImageInfo \l0x000a: IGET  (r2 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPerRow int \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:4:0x001c \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IGET  (r2 I:int[]) = (r5 I:ar.com.hjg.pngj.pixels.FiltersPerformance) ar.com.hjg.pngj.pixels.FiltersPerformance.histog int[] \l0x0010: AGET  (r3 I:byte A[IMMUTABLE_TYPE]) = \l  (r6 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x0012: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0014: AGET  (r4 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x0016: ARITH  (r4 I:int) = (r4 I:int) + (r0 I:int) \l0x0017: APUT  \l  (r2 I:?[int, float][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x0019: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.pixels.FiltersPerformance.computeHistogram((r5 'this' I:ar.com.hjg.pngj.pixels.FiltersPerformance A[IMMUTABLE_TYPE, THIS]), (r6 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

