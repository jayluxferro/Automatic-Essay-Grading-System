digraph "CFG forar.com.hjg.pngj.pixels.ImageLineBufferedImage.\<init\>(Lar\/com\/hjg\/pngj\/ImageInfo;Ljava\/awt\/image\/BufferedImage;[B)V" {
subgraph cluster_Region_583706137 {
label = "R(3:0|(1:2)(1:3)|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.imgInfo = r2\lr1.image = r3\lr1.bytes = r4\lr1.hasAlpha = r1.image.getColorModel().hasAlpha()\l}"];
subgraph cluster_IfRegion_1454650717 {
label = "IF [B:1:0x001a] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x001a|if (r1.hasAlpha == true) goto L_0x001c\l}"];
subgraph cluster_Region_787358387 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x001c|r1.rowLength = r1.image.getWidth() * 4\l}"];
}
subgraph cluster_Region_24247379 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0027|r1.rowLength = r1.image.getWidth() * 3\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x0043|PHI: r3 \l  PHI: (r3v2 boolean) = (r3v1 boolean), (r3v3 boolean) binds: [B:5:0x0040, B:6:0x0042] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|r1.bgrOrder = r1.image.getSampleModel().getBandOffsets()[0] != 0\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0031}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0040}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0042}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0045}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.pixels.ImageLineBufferedImage.\<init\>((r1v0 'this' ar.com.hjg.pngj.pixels.ImageLineBufferedImage A[IMMUTABLE_TYPE, THIS]), (r2v0 ar.com.hjg.pngj.ImageInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.awt.image.BufferedImage A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
}

