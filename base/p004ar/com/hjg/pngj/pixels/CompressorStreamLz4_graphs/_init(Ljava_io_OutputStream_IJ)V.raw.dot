digraph "CFG forar.com.hjg.pngj.pixels.CompressorStreamLz4.\<init\>(Ljava\/io\/OutputStream;IJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r1 I:ar.com.hjg.pngj.pixels.CompressorStream)\l  (r2 I:java.io.OutputStream)\l  (r3 I:int)\l  (r4 I:long)\l ar.com.hjg.pngj.pixels.CompressorStream.\<init\>(java.io.OutputStream, int, long):void type: DIRECT \l0x0003: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: IPUT  \l  (r2 I:int)\l  (r1 I:ar.com.hjg.pngj.pixels.CompressorStreamLz4)\l ar.com.hjg.pngj.pixels.CompressorStreamLz4.inbuf int \l0x0006: NEW_INSTANCE  (r2 I:ar.com.hjg.pngj.pixels.DeflaterEstimatorLz4) =  ar.com.hjg.pngj.pixels.DeflaterEstimatorLz4 \l0x0008: INVOKE  (r2 I:ar.com.hjg.pngj.pixels.DeflaterEstimatorLz4) ar.com.hjg.pngj.pixels.DeflaterEstimatorLz4.\<init\>():void type: DIRECT \l0x000b: IPUT  \l  (r2 I:ar.com.hjg.pngj.pixels.DeflaterEstimatorLz4)\l  (r1 I:ar.com.hjg.pngj.pixels.CompressorStreamLz4)\l ar.com.hjg.pngj.pixels.CompressorStreamLz4.lz4 ar.com.hjg.pngj.pixels.DeflaterEstimatorLz4 \l0x000d: CONST  (r2 I:?[long, double]) = (16000(0x3e80, double:7.905E\-320) ?[long, double]) \l0x000f: CMP_L  (r0 I:int) = (r4 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x0014 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: MOVE  (r2 I:?[long, double]) = (r4 I:?[long, double]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: CAST  (r2 I:int) = (int) (r2 I:long) \l0x0016: IPUT  \l  (r2 I:int)\l  (r1 I:ar.com.hjg.pngj.pixels.CompressorStreamLz4)\l ar.com.hjg.pngj.pixels.CompressorStreamLz4.buffer_size int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.pixels.CompressorStreamLz4.\<init\>((r1 'this' I:ar.com.hjg.pngj.pixels.CompressorStreamLz4 A[IMMUTABLE_TYPE, THIS]), (r2 I:java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_4[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
}

