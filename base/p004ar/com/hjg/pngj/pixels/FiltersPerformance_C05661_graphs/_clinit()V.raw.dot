digraph "CFG forar.com.hjg.pngj.pixels.FiltersPerformance.1.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:ar.com.hjg.pngj.FilterType[]) =  ar.com.hjg.pngj.FilterType.values():ar.com.hjg.pngj.FilterType[] type: STATIC \l0x0004: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l0x0005: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0007: SPUT  (r0 I:int[]) ar.com.hjg.pngj.pixels.FiltersPerformance.1.$SwitchMap$ar$com$hjg$pngj$FilterType int[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|SYNTHETIC\lSplitter:B:1:0x0009\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0009\l|0x0009: SGET  (r0 I:int[]) =  ar.com.hjg.pngj.pixels.FiltersPerformance.1.$SwitchMap$ar$com$hjg$pngj$FilterType int[] A[Catch:\{ NoSuchFieldError \-\> 0x0014 \}, TRY_ENTER]\l0x000b: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_NONE ar.com.hjg.pngj.FilterType A[Catch:\{ NoSuchFieldError \-\> 0x0014 \}]\l0x000d: INVOKE  (r1 I:int) = (r1 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x0014 \}]\l0x0011: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x0014 \}]\l0x0012: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x0014 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|SYNTHETIC\lSplitter:B:3:0x0014\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0014\l|0x0014: SGET  (r0 I:int[]) =  ar.com.hjg.pngj.pixels.FiltersPerformance.1.$SwitchMap$ar$com$hjg$pngj$FilterType int[] A[Catch:\{ NoSuchFieldError \-\> 0x001f \}, ExcHandler: NoSuchFieldError null, TRY_ENTER]\l0x0016: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_PAETH ar.com.hjg.pngj.FilterType A[Catch:\{ NoSuchFieldError \-\> 0x001f \}]\l0x0018: INVOKE  (r1 I:int) = (r1 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x001f \}]\l0x001c: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x001f \}]\l0x001d: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x001f \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|SYNTHETIC\lSplitter:B:5:0x001f\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x001f\l|0x001f: SGET  (r0 I:int[]) =  ar.com.hjg.pngj.pixels.FiltersPerformance.1.$SwitchMap$ar$com$hjg$pngj$FilterType int[] A[Catch:\{ NoSuchFieldError \-\> 0x002a \}, ExcHandler: NoSuchFieldError null, TRY_ENTER]\l0x0021: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_SUB ar.com.hjg.pngj.FilterType A[Catch:\{ NoSuchFieldError \-\> 0x002a \}]\l0x0023: INVOKE  (r1 I:int) = (r1 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x002a \}]\l0x0027: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x002a \}]\l0x0028: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x002a \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|SYNTHETIC\lSplitter:B:7:0x002a\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x002a\l|0x002a: SGET  (r0 I:int[]) =  ar.com.hjg.pngj.pixels.FiltersPerformance.1.$SwitchMap$ar$com$hjg$pngj$FilterType int[] A[Catch:\{ NoSuchFieldError \-\> 0x0035 \}, ExcHandler: NoSuchFieldError null, TRY_ENTER]\l0x002c: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_UP ar.com.hjg.pngj.FilterType A[Catch:\{ NoSuchFieldError \-\> 0x0035 \}]\l0x002e: INVOKE  (r1 I:int) = (r1 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x0035 \}]\l0x0032: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x0035 \}]\l0x0033: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x0035 \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|SYNTHETIC\lSplitter:B:9:0x0035\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x0035\l|0x0035: SGET  (r0 I:int[]) =  ar.com.hjg.pngj.pixels.FiltersPerformance.1.$SwitchMap$ar$com$hjg$pngj$FilterType int[] A[Catch:\{ NoSuchFieldError \-\> 0x0040 \}, ExcHandler: NoSuchFieldError null, TRY_ENTER]\l0x0037: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_AVERAGE ar.com.hjg.pngj.FilterType A[Catch:\{ NoSuchFieldError \-\> 0x0040 \}]\l0x0039: INVOKE  (r1 I:int) = (r1 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x0040 \}]\l0x003d: CONST  (r2 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x0040 \}]\l0x003e: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x0040 \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: RETURN   \l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lExcHandler: NoSuchFieldError null\lSplitter:B:9:0x0035\l}"];
MethodNode[shape=record,label="{static void ar.com.hjg.pngj.pixels.FiltersPerformance.1.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_11;
}

