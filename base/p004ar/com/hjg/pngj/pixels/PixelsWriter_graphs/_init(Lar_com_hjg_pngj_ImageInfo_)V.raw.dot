digraph "CFG forar.com.hjg.pngj.pixels.PixelsWriter.\<init\>(Lar\/com\/hjg\/pngj\/ImageInfo;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0004: IPUT  (r0 I:int), (r1 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.deflaterCompLevel int \l0x0006: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: IPUT  (r0 I:int), (r1 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.deflaterStrategy int \l0x0009: IPUT  (r0 I:boolean), (r1 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.initdone boolean \l0x000b: CONST  (r0 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x000c: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x000e: IPUT  (r0 I:int[]), (r1 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.filtersUsed int[] \l0x0010: IPUT  \l  (r2 I:ar.com.hjg.pngj.ImageInfo)\l  (r1 I:ar.com.hjg.pngj.pixels.PixelsWriter)\l ar.com.hjg.pngj.pixels.PixelsWriter.imgInfo ar.com.hjg.pngj.ImageInfo \l0x0012: IGET  (r0 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPerRow int \l0x0014: IPUT  (r0 I:int), (r1 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.bytesRow int \l0x0016: IGET  (r0 I:int) = (r1 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.bytesRow int \l0x0018: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x001a: IPUT  (r0 I:int), (r1 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.buflen int \l0x001c: IGET  (r2 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPixel int \l0x001e: IPUT  (r2 I:int), (r1 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.bytesPixel int \l0x0020: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0021: IPUT  (r2 I:int), (r1 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.currentRow int \l0x0023: SGET  (r2 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_DEFAULT ar.com.hjg.pngj.FilterType \l0x0025: IPUT  \l  (r2 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:ar.com.hjg.pngj.pixels.PixelsWriter)\l ar.com.hjg.pngj.pixels.PixelsWriter.filterType ar.com.hjg.pngj.FilterType \l}"];
Node_1 [shape=record,label="{1\:\ 0x0027|0x0027: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.pixels.PixelsWriter.\<init\>((r1 'this' I:ar.com.hjg.pngj.pixels.PixelsWriter A[IMMUTABLE_TYPE, THIS]), (r2 I:ar.com.hjg.pngj.ImageInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

