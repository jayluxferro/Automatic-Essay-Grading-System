digraph "CFG forar.com.hjg.pngj.pixels.PixelsWriter.filterRowWithFilterType(Lar\/com\/hjg\/pngj\/FilterType;[B[B[B)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_NONE ar.com.hjg.pngj.FilterType \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IGET  (r0 I:int) = (r7 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.val int \l0x0007: CAST  (r0 I:byte) = (byte) (r0 I:int) \l0x0008: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: APUT  \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l  (r0 I:byte A[IMMUTABLE_TYPE])\l \l0x000b: SGET  (r0 I:int[]) =  ar.com.hjg.pngj.pixels.PixelsWriter.1.$SwitchMap$ar$com$hjg$pngj$FilterType int[] \l0x000d: INVOKE  (r2 I:int) = (r7 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.ordinal():int type: VIRTUAL \l0x0011: AGET  (r0 I:?[int, float]) = (r0 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0013: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5] t:[0x00c4, 0x008e, 0x006e, 0x003d, 0x002e] \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: NEW_INSTANCE  (r8 I:ar.com.hjg.pngj.PngjOutputException) =  ar.com.hjg.pngj.PngjOutputException \l0x0019: NEW_INSTANCE  (r9 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001b: INVOKE  (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001e: CONST_STR  (r10 I:java.lang.String) =  \"Filter type not recognized: \" \l0x0020: INVOKE  (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0023: INVOKE  (r9 I:java.lang.StringBuilder), (r7 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0026: INVOKE  (r7 I:java.lang.String) = (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002a: INVOKE  \l  (r8 I:ar.com.hjg.pngj.PngjOutputException)\l  (r7 I:java.lang.String)\l ar.com.hjg.pngj.PngjOutputException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|0x002d: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|0x002e: IGET  (r7 I:int) = (r6 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.bytesRow int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: IF  (r2 I:?[int, byte, short, char]) \> (r7 I:?[int, byte, short, char])  \-\> B:34:0x00c4 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|0x0032: AGET  (r7 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x0034: AGET  (r0 I:byte A[IMMUTABLE_TYPE]) = \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x0036: ARITH  (r7 I:int) = (r7 I:int) \- (r0 I:int) \l0x0037: CAST  (r7 I:byte) = (byte) (r7 I:int) \l0x0038: APUT  \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l  (r7 I:byte A[IMMUTABLE_TYPE])\l \l0x003a: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|0x003d: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|0x003e: IGET  (r0 I:int) = (r6 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.bytesPixel int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|0x0040: IF  (r7 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:14:0x0051 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0042|0x0042: AGET  (r0 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l \l0x0044: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l \l0x0046: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0048: ARITH  (r1 I:int) = (r1 I:int) \/ (2 int) \l0x004a: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x004b: CAST  (r0 I:byte) = (byte) (r0 I:int) \l0x004c: APUT  \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l  (r0 I:byte A[IMMUTABLE_TYPE])\l \l0x004e: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0051|0x0051: IGET  (r7 I:int) = (r6 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.bytesPixel int \l0x0053: ARITH  (r7 I:int) = (r7 I:int) + (r2 I:int) \l0x0054: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0055|0x0055: IGET  (r1 I:int) = (r6 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.bytesRow int \l}"];
Node_16 [shape=record,label="{16\:\ 0x0057|0x0057: IF  (r7 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:34:0x00c4 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0059|0x0059: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l \l0x005b: AGET  (r3 I:byte A[IMMUTABLE_TYPE]) = \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l \l0x005d: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x005f: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l \l0x0061: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0063: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x0064: ARITH  (r3 I:int) = (r3 I:int) \/ (2 int) \l0x0066: ARITH  (r1 I:int) = (r1 I:int) \- (r3 I:int) \l0x0067: CAST  (r1 I:byte) = (byte) (r1 I:int) \l0x0068: APUT  \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l  (r1 I:byte A[IMMUTABLE_TYPE])\l \l0x006a: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l0x006c: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x006e|0x006e: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x006f|0x006f: IGET  (r9 I:int) = (r6 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.bytesPixel int \l}"];
Node_20 [shape=record,label="{20\:\ 0x0071|0x0071: IF  (r7 I:?[int, byte, short, char]) \> (r9 I:?[int, byte, short, char])  \-\> B:22:0x007a \l}"];
Node_21 [shape=record,label="{21\:\ 0x0073|0x0073: AGET  (r9 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l \l0x0075: APUT  \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l  (r9 I:byte A[IMMUTABLE_TYPE])\l \l0x0077: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x007a|0x007a: IGET  (r7 I:int) = (r6 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.bytesPixel int \l0x007c: ARITH  (r7 I:int) = (r7 I:int) + (r2 I:int) \l0x007d: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x007e|0x007e: IGET  (r0 I:int) = (r6 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.bytesRow int \l}"];
Node_24 [shape=record,label="{24\:\ 0x0080|0x0080: IF  (r7 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:34:0x00c4 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0082|0x0082: AGET  (r0 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l \l0x0084: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l \l0x0086: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0087: CAST  (r0 I:byte) = (byte) (r0 I:int) \l0x0088: APUT  \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l  (r0 I:byte A[IMMUTABLE_TYPE])\l \l0x008a: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l0x008c: ARITH  (r9 I:int) = (r9 I:int) + (r2 I:int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x008e|0x008e: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x008f|0x008f: IGET  (r0 I:int) = (r6 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.bytesPixel int \l}"];
Node_28 [shape=record,label="{28\:\ 0x0091|0x0091: IF  (r7 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:30:0x00a3 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0093|0x0093: AGET  (r0 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l \l0x0095: AGET  (r3 I:byte A[IMMUTABLE_TYPE]) = \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l \l0x0097: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0099: INVOKE  (r0 I:int) = (r0 I:int), (r1 I:int), (r3 I:int), (r1 I:int) ar.com.hjg.pngj.PngHelperInternal.filterRowPaeth(int, int, int, int):int type: STATIC \l0x009d: CAST  (r0 I:byte) = (byte) (r0 I:int) \l0x009e: APUT  \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l  (r0 I:byte A[IMMUTABLE_TYPE])\l \l0x00a0: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l}"];
Node_30 [shape=record,label="{30\:\ 0x00a3|0x00a3: IGET  (r7 I:int) = (r6 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.bytesPixel int \l0x00a5: ARITH  (r7 I:int) = (r7 I:int) + (r2 I:int) \l0x00a6: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x00a7|0x00a7: IGET  (r1 I:int) = (r6 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.bytesRow int \l}"];
Node_32 [shape=record,label="{32\:\ 0x00a9|0x00a9: IF  (r7 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:34:0x00c4 \l}"];
Node_33 [shape=record,label="{33\:\ 0x00ab|0x00ab: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l \l0x00ad: AGET  (r3 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l \l0x00af: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x00b1: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l \l0x00b3: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x00b5: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l \l0x00b7: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x00b9: INVOKE  (r1 I:int) = (r1 I:int), (r3 I:int), (r4 I:int), (r5 I:int) ar.com.hjg.pngj.PngHelperInternal.filterRowPaeth(int, int, int, int):int type: STATIC \l0x00bd: CAST  (r1 I:byte) = (byte) (r1 I:int) \l0x00be: APUT  \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l  (r1 I:byte A[IMMUTABLE_TYPE])\l \l0x00c0: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l0x00c2: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l}"];
Node_34 [shape=record,label="{34\:\ 0x00c4|0x00c4: RETURN  (r10 I:byte[]) \l}"];
MethodNode[shape=record,label="{protected final byte[] ar.com.hjg.pngj.pixels.PixelsWriter.filterRowWithFilterType((r6 'this' I:ar.com.hjg.pngj.pixels.PixelsWriter A[IMMUTABLE_TYPE, THIS]), (r7 I:ar.com.hjg.pngj.FilterType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_4 -> Node_10;
Node_4 -> Node_18;
Node_4 -> Node_26;
Node_4 -> Node_34;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_34;
Node_9 -> Node_7;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_11;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_34;
Node_17 -> Node_15;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_19;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_34;
Node_25 -> Node_23;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_27;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_31;
}

