digraph "CFG forar.com.hjg.pngj.pixels.PixelsWriter.getFiltersUsed()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"%d,%d,%d,%d,%d\" \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0003: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0005: IGET  (r2 I:int[]) = (r12 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.filtersUsed int[] \l0x0007: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x000a: CAST  (r4 I:double) = (double) (r2 I:int) \l0x000b: CONST  (r6 I:?[long, double]) = \l  (4636737291354636288(0x4059000000000000, double:100.0) ?[long, double])\l \l0x000d: ARITH  (r4 I:double) = (r4 I:double) * (r6 I:double) \l0x000f: IGET  (r2 I:ar.com.hjg.pngj.ImageInfo) = (r12 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.imgInfo ar.com.hjg.pngj.ImageInfo \l0x0011: IGET  (r2 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.rows int \l0x0013: CAST  (r8 I:double) = (double) (r2 I:int) \l0x0014: ARITH  (r4 I:double) = (r4 I:double) \/ (r8 I:double) \l0x0015: CONST  (r8 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x0017: ARITH  (r4 I:double) = (r4 I:double) + (r8 I:double) \l0x0018: CAST  (r2 I:int) = (int) (r4 I:double) \l0x0019: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x001d: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x001f: IGET  (r2 I:int[]) = (r12 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.filtersUsed int[] \l0x0021: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0022: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x0024: CAST  (r4 I:double) = (double) (r2 I:int) \l0x0025: ARITH  (r4 I:double) = (r4 I:double) * (r6 I:double) \l0x0027: IGET  (r2 I:ar.com.hjg.pngj.ImageInfo) = (r12 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.imgInfo ar.com.hjg.pngj.ImageInfo \l0x0029: IGET  (r2 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.rows int \l0x002b: CAST  (r10 I:double) = (double) (r2 I:int) \l0x002c: ARITH  (r4 I:double) = (r4 I:double) \/ (r10 I:double) \l0x002d: ARITH  (r4 I:double) = (r4 I:double) + (r8 I:double) \l0x002e: CAST  (r2 I:int) = (int) (r4 I:double) \l0x002f: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0033: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0035: IGET  (r2 I:int[]) = (r12 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.filtersUsed int[] \l0x0037: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0038: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x003a: CAST  (r4 I:double) = (double) (r2 I:int) \l0x003b: ARITH  (r4 I:double) = (r4 I:double) * (r6 I:double) \l0x003d: IGET  (r2 I:ar.com.hjg.pngj.ImageInfo) = (r12 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.imgInfo ar.com.hjg.pngj.ImageInfo \l0x003f: IGET  (r2 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.rows int \l0x0041: CAST  (r10 I:double) = (double) (r2 I:int) \l0x0042: ARITH  (r4 I:double) = (r4 I:double) \/ (r10 I:double) \l0x0043: ARITH  (r4 I:double) = (r4 I:double) + (r8 I:double) \l0x0044: CAST  (r2 I:int) = (int) (r4 I:double) \l0x0045: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0049: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x004b: IGET  (r2 I:int[]) = (r12 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.filtersUsed int[] \l0x004d: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x004e: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x0050: CAST  (r4 I:double) = (double) (r2 I:int) \l0x0051: ARITH  (r4 I:double) = (r4 I:double) * (r6 I:double) \l0x0053: IGET  (r2 I:ar.com.hjg.pngj.ImageInfo) = (r12 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.imgInfo ar.com.hjg.pngj.ImageInfo \l0x0055: IGET  (r2 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.rows int \l0x0057: CAST  (r10 I:double) = (double) (r2 I:int) \l0x0058: ARITH  (r4 I:double) = (r4 I:double) \/ (r10 I:double) \l0x0059: ARITH  (r4 I:double) = (r4 I:double) + (r8 I:double) \l0x005a: CAST  (r2 I:int) = (int) (r4 I:double) \l0x005b: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x005f: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0061: IGET  (r2 I:int[]) = (r12 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.filtersUsed int[] \l0x0063: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0064: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x0066: CAST  (r4 I:double) = (double) (r2 I:int) \l0x0067: ARITH  (r4 I:double) = (r4 I:double) * (r6 I:double) \l0x0069: IGET  (r2 I:ar.com.hjg.pngj.ImageInfo) = (r12 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.imgInfo ar.com.hjg.pngj.ImageInfo \l0x006b: IGET  (r2 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.rows int \l0x006d: CAST  (r6 I:double) = (double) (r2 I:int) \l0x006e: ARITH  (r4 I:double) = (r4 I:double) \/ (r6 I:double) \l0x006f: ARITH  (r4 I:double) = (r4 I:double) + (r8 I:double) \l0x0070: CAST  (r2 I:int) = (int) (r4 I:double) \l0x0071: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0075: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0077: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String), (r1 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x007b|0x007b: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public final java.lang.String ar.com.hjg.pngj.pixels.PixelsWriter.getFiltersUsed((r12 'this' I:ar.com.hjg.pngj.pixels.PixelsWriter A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

