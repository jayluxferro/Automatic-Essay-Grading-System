digraph "CFG forar.com.hjg.pngj.pixels.PixelsWriter.sendToCompressedStream([B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:ar.com.hjg.pngj.pixels.CompressorStream) = (r3 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.compressorStream ar.com.hjg.pngj.pixels.CompressorStream \l0x0002: ARRAY_LENGTH  (r1 I:int) = (r4 I:?[]) \l0x0003: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: INVOKE  \l  (r0 I:ar.com.hjg.pngj.pixels.CompressorStream)\l  (r4 I:byte[])\l  (r2 I:int)\l  (r1 I:int)\l ar.com.hjg.pngj.pixels.CompressorStream.write(byte[], int, int):void type: VIRTUAL \l0x0007: IGET  (r0 I:int[]) = (r3 I:ar.com.hjg.pngj.pixels.PixelsWriter) ar.com.hjg.pngj.pixels.PixelsWriter.filtersUsed int[] \l0x0009: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r4 I:byte[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x000b: AGET  (r1 I:?[int, float]) = (r0 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x000d: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x000f: APUT  \l  (r0 I:?[int, float][])\l  (r4 I:?[int, short, byte, char])\l  (r1 I:?[int, float])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: RETURN   \l}"];
MethodNode[shape=record,label="{protected void ar.com.hjg.pngj.pixels.PixelsWriter.sendToCompressedStream((r3 'this' I:ar.com.hjg.pngj.pixels.PixelsWriter A[IMMUTABLE_TYPE, THIS]), (r4 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

