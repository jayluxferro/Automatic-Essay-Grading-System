digraph "CFG forar.com.hjg.pngj.pixels.CompressorStreamDeflater.\<init\>(Ljava\/io\/OutputStream;IJII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r5 I:java.util.zip.Deflater) =  java.util.zip.Deflater \l0x0002: INVOKE  (r5 I:java.util.zip.Deflater), (r11 I:int) java.util.zip.Deflater.\<init\>(int):void type: DIRECT \l0x0005: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0006: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0007: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: MOVE  (r3 I:?[long, double]) = (r9 I:?[long, double]) \l0x0009: INVOKE  \l  (r0 I:ar.com.hjg.pngj.pixels.CompressorStreamDeflater)\l  (r1 I:java.io.OutputStream)\l  (r2 I:int)\l  (r3 I:long)\l  (r5 I:java.util.zip.Deflater)\l ar.com.hjg.pngj.pixels.CompressorStreamDeflater.\<init\>(java.io.OutputStream, int, long, java.util.zip.Deflater):void type: DIRECT \l0x000c: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: IPUT  \l  (r7 I:boolean)\l  (r6 I:ar.com.hjg.pngj.pixels.CompressorStreamDeflater)\l ar.com.hjg.pngj.pixels.CompressorStreamDeflater.deflaterIsOwn boolean \l0x000f: IGET  (r7 I:java.util.zip.Deflater) = (r6 I:ar.com.hjg.pngj.pixels.CompressorStreamDeflater) ar.com.hjg.pngj.pixels.CompressorStreamDeflater.deflater java.util.zip.Deflater \l0x0011: INVOKE  (r7 I:java.util.zip.Deflater), (r12 I:int) java.util.zip.Deflater.setStrategy(int):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.pixels.CompressorStreamDeflater.\<init\>((r6 'this' I:ar.com.hjg.pngj.pixels.CompressorStreamDeflater A[IMMUTABLE_TYPE, THIS]), (r7 I:java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

