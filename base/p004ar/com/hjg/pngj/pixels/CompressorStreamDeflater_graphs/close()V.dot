digraph "CFG forar.com.hjg.pngj.pixels.CompressorStreamDeflater.close()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|done()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Exception \-\> 0x000c \}\lSplitter:B:1:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|Catch:\{ Exception \-\> 0x000c \}\l|if (r1.deflaterIsOwn == false) goto L_0x000c     \/\/ Catch:\{ Exception \-\> 0x000c \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|Catch:\{ Exception \-\> 0x000c \}\l|r1.deflater.end()     \/\/ Catch:\{ Exception \-\> 0x000c \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|super.close()\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lExcHandler: Exception (unused java.lang.Exception)\lSplitter:B:1:0x0003\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.pixels.CompressorStreamDeflater.close((r1v0 'this' ar.com.hjg.pngj.pixels.CompressorStreamDeflater A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_6 -> Node_5;
}

