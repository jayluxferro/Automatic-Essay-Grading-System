digraph "CFG forar.com.hjg.pngj.pixels.CompressorStreamDeflater.\<init\>(Ljava\/io\/OutputStream;IJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0003: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: MOVE  (r3 I:?[long, double]) = (r9 I:?[long, double]) \l0x0005: INVOKE  \l  (r0 I:ar.com.hjg.pngj.pixels.CompressorStreamDeflater)\l  (r1 I:java.io.OutputStream)\l  (r2 I:int)\l  (r3 I:long)\l  (r5 I:java.util.zip.Deflater)\l ar.com.hjg.pngj.pixels.CompressorStreamDeflater.\<init\>(java.io.OutputStream, int, long, java.util.zip.Deflater):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.pixels.CompressorStreamDeflater.\<init\>((r6 'this' I:ar.com.hjg.pngj.pixels.CompressorStreamDeflater A[IMMUTABLE_TYPE, THIS]), (r7 I:java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

