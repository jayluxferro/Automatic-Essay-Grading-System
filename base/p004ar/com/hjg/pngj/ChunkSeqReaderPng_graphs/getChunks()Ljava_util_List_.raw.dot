digraph "CFG forar.com.hjg.pngj.ChunkSeqReaderPng.getChunks()Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:ar.com.hjg.pngj.chunks.ChunksList) = (r1 I:ar.com.hjg.pngj.ChunkSeqReaderPng) ar.com.hjg.pngj.ChunkSeqReaderPng.chunksList ar.com.hjg.pngj.chunks.ChunksList \l0x0002: INVOKE  (r0 I:java.util.List) = (r0 I:ar.com.hjg.pngj.chunks.ChunksList) ar.com.hjg.pngj.chunks.ChunksList.getChunks():java.util.List type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: RETURN  (r0 I:java.util.List\<ar.com.hjg.pngj.chunks.PngChunk\>) \l}"];
MethodNode[shape=record,label="{public java.util.List\<ar.com.hjg.pngj.chunks.PngChunk\> ar.com.hjg.pngj.ChunkSeqReaderPng.getChunks((r1 'this' I:ar.com.hjg.pngj.ChunkSeqReaderPng A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/List\<, Lar\/com\/hjg\/pngj\/chunks\/PngChunk;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

