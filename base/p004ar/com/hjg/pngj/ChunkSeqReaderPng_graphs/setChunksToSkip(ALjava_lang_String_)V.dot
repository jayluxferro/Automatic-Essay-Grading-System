digraph "CFG forar.com.hjg.pngj.ChunkSeqReaderPng.setChunksToSkip([Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.chunksToSkip.clear()\lint r0 = r5.length\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:2:0x0009] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:2:0x0009\l|if (r1 \>= r0) goto L_0x0013\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|LOOP_END\lLOOP:0: B:1:0x0007\-\>B:2:0x0009\l|r2 = r5[r1]\lr4.chunksToSkip.add(r2)\lint r1 = r1 + 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.ChunkSeqReaderPng.setChunksToSkip((r4v0 'this' ar.com.hjg.pngj.ChunkSeqReaderPng A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_1;
Node_4 -> Node_3;
}

