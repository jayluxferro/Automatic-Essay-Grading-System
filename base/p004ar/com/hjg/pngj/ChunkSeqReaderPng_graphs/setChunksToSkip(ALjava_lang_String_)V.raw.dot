digraph "CFG forar.com.hjg.pngj.ChunkSeqReaderPng.setChunksToSkip([Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Set\<java.lang.String\>) = (r4 I:ar.com.hjg.pngj.ChunkSeqReaderPng) ar.com.hjg.pngj.ChunkSeqReaderPng.chunksToSkip java.util.Set \l0x0002: INVOKE  (r0 I:java.util.Set) java.util.Set.clear():void type: INTERFACE \l0x0005: ARRAY_LENGTH  (r0 I:int) = (r5 I:?[]) \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:3:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: AGET  (r2 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x000b: IGET  (r3 I:java.util.Set\<java.lang.String\>) = (r4 I:ar.com.hjg.pngj.ChunkSeqReaderPng) ar.com.hjg.pngj.ChunkSeqReaderPng.chunksToSkip java.util.Set \l0x000d: INVOKE  (r3 I:java.util.Set), (r2 I:java.lang.Object) java.util.Set.add(java.lang.Object):boolean type: INTERFACE \l0x0010: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.ChunkSeqReaderPng.setChunksToSkip((r4 'this' I:ar.com.hjg.pngj.ChunkSeqReaderPng A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

