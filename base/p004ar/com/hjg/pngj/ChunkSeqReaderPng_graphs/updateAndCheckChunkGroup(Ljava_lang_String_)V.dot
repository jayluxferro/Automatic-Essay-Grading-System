digraph "CFG forar.com.hjg.pngj.ChunkSeqReaderPng.updateAndCheckChunkGroup(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r4.equals(\"IHDR\") == false) goto L_0x0028\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r3.currentChunkGroup \>= 0) goto L_0x0011\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|r3.currentChunkGroup = 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"unexpected chunk \")\lr1.append(r4)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|throw new p004ar.com.hjg.pngj.PngjInputException(r1.toString())\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028}"];
Node_8 [shape=record,label="{8\:\ 0x002f|if (r4.equals(\"PLTE\") == false) goto L_0x0055\l}"];
Node_9 [shape=record,label="{9\:\ 0x0031}"];
Node_10 [shape=record,label="{10\:\ 0x0033|if (r3.currentChunkGroup == 0) goto L_0x0051\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035}"];
Node_12 [shape=record,label="{12\:\ 0x0037|if (r3.currentChunkGroup != 1) goto L_0x003a\l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"unexpected chunk \")\lr1.append(r4)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0050|throw new p004ar.com.hjg.pngj.PngjInputException(r1.toString())\l}"];
Node_15 [shape=record,label="{15\:\ 0x0051|r3.currentChunkGroup = 2\l}"];
Node_16 [shape=record,label="{16\:\ 0x0055}"];
Node_17 [shape=record,label="{17\:\ 0x005c|if (r4.equals(\"IDAT\") == false) goto L_0x0080\l}"];
Node_18 [shape=record,label="{18\:\ 0x005e}"];
Node_19 [shape=record,label="{19\:\ 0x0060|if (r3.currentChunkGroup \< 0) goto L_0x0069\l}"];
Node_20 [shape=record,label="{20\:\ 0x0062}"];
Node_21 [shape=record,label="{21\:\ 0x0064|if (r3.currentChunkGroup \> 4) goto L_0x0069\l}"];
Node_22 [shape=record,label="{22\:\ 0x0066|r3.currentChunkGroup = 4\l}"];
Node_23 [shape=record,label="{23\:\ 0x0069|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"unexpected chunk \")\lr1.append(r4)\l}"];
Node_24 [shape=record,label="{24\:\ 0x007f|throw new p004ar.com.hjg.pngj.PngjInputException(r1.toString())\l}"];
Node_25 [shape=record,label="{25\:\ 0x0080}"];
Node_26 [shape=record,label="{26\:\ 0x0086|if (r4.equals(\"IEND\") == false) goto L_0x00a7\l}"];
Node_27 [shape=record,label="{27\:\ 0x0088}"];
Node_28 [shape=record,label="{28\:\ 0x008a|if (r3.currentChunkGroup \< 4) goto L_0x0090\l}"];
Node_29 [shape=record,label="{29\:\ 0x008c|r3.currentChunkGroup = 6\l}"];
Node_30 [shape=record,label="{30\:\ 0x0090|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"unexpected chunk \")\lr1.append(r4)\l}"];
Node_31 [shape=record,label="{31\:\ 0x00a6|throw new p004ar.com.hjg.pngj.PngjInputException(r1.toString())\l}"];
Node_32 [shape=record,label="{32\:\ 0x00a7}"];
Node_33 [shape=record,label="{33\:\ 0x00a9|if (r3.currentChunkGroup \> 1) goto L_0x00ae\l}"];
Node_34 [shape=record,label="{34\:\ 0x00ab|r3.currentChunkGroup = 1\l}"];
Node_35 [shape=record,label="{35\:\ 0x00ae}"];
Node_36 [shape=record,label="{36\:\ 0x00b1|if (r3.currentChunkGroup \> 3) goto L_0x00b6\l}"];
Node_37 [shape=record,label="{37\:\ 0x00b3|r3.currentChunkGroup = 3\l}"];
Node_38 [shape=record,label="{38\:\ 0x00b6|r3.currentChunkGroup = 5\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void ar.com.hjg.pngj.ChunkSeqReaderPng.updateAndCheckChunkGroup((r3v0 'this' ar.com.hjg.pngj.ChunkSeqReaderPng A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_40;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_15[style=dashed];
Node_13 -> Node_14;
Node_15 -> Node_41;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_42;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_32;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_43;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_44;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_45;
Node_38 -> Node_39;
}

