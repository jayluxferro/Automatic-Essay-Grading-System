digraph "CFG forar.com.hjg.pngj.PngReaderFilter.readUntilEndAndClose()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.BufferedStreamFeeder) =  ar.com.hjg.pngj.BufferedStreamFeeder \l0x0002: IGET  (r1 I:java.io.InputStream) = (r2 I:ar.com.hjg.pngj.PngReaderFilter) ar.com.hjg.pngj.PngReaderFilter.in java.io.InputStream \l0x0004: INVOKE  \l  (r0 I:ar.com.hjg.pngj.BufferedStreamFeeder)\l  (r1 I:java.io.InputStream)\l ar.com.hjg.pngj.BufferedStreamFeeder.\<init\>(java.io.InputStream):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IGET  (r1 I:ar.com.hjg.pngj.ChunkSeqReaderPng) = (r2 I:ar.com.hjg.pngj.PngReaderFilter) ar.com.hjg.pngj.PngReaderFilter.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng \l0x0009: INVOKE  (r1 I:boolean) = (r1 I:ar.com.hjg.pngj.ChunkSeqReaderPng) ar.com.hjg.pngj.ChunkSeqReaderPng.isDone():boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001b \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: INVOKE  (r1 I:boolean) = (r0 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.hasMoreToFeed():boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001b \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IGET  (r1 I:ar.com.hjg.pngj.ChunkSeqReaderPng) = (r2 I:ar.com.hjg.pngj.PngReaderFilter) ar.com.hjg.pngj.PngReaderFilter.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng \l0x0017: INVOKE  \l  (r0 I:ar.com.hjg.pngj.BufferedStreamFeeder)\l  (r1 I:ar.com.hjg.pngj.IBytesConsumer)\l ar.com.hjg.pngj.BufferedStreamFeeder.feed(ar.com.hjg.pngj.IBytesConsumer):int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: INVOKE  (r2 I:ar.com.hjg.pngj.PngReaderFilter) ar.com.hjg.pngj.PngReaderFilter.close():void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.PngReaderFilter.readUntilEndAndClose((r2 'this' I:ar.com.hjg.pngj.PngReaderFilter A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_1;
Node_6 -> Node_7;
}

