digraph "CFG forar.com.hjg.pngj.PngReaderFilter.createChunkSequenceReader()Lar\/com\/hjg\/pngj\/ChunkSeqReaderPng;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.PngReaderFilter$1) =  ar.com.hjg.pngj.PngReaderFilter$1 \l0x0002: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0003: INVOKE  \l  (r0 I:ar.com.hjg.pngj.PngReaderFilter$1)\l  (r2 I:ar.com.hjg.pngj.PngReaderFilter)\l  (r1 I:boolean)\l ar.com.hjg.pngj.PngReaderFilter.1.\<init\>(ar.com.hjg.pngj.PngReaderFilter, boolean):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: RETURN  (r0 I:ar.com.hjg.pngj.ChunkSeqReaderPng) \l}"];
MethodNode[shape=record,label="{protected ar.com.hjg.pngj.ChunkSeqReaderPng ar.com.hjg.pngj.PngReaderFilter.createChunkSequenceReader((r2 'this' I:ar.com.hjg.pngj.PngReaderFilter A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

