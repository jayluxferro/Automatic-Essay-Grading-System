digraph "CFG forar.com.hjg.pngj.ImageLineSetDefault.imageRowToMatrixRow(I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r2 = (r2 \- r1.offset) \/ r1.step\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r2 \>= 0) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|SYNTHETIC\lRETURN\l|return 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a}"];
Node_4 [shape=record,label="{4\:\ 0x000c|if (r2 \>= r1.nlines) goto L_0x000f\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r1.nlines + \-1\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
MethodNode[shape=record,label="{public int ar.com.hjg.pngj.ImageLineSetDefault.imageRowToMatrixRow((r1v0 'this' ar.com.hjg.pngj.ImageLineSetDefault A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_5 -> Node_6;
}

