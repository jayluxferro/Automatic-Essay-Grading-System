digraph "CFG forar.com.hjg.pngj.ImageLineSetDefault.getImageLine(I)Lar\/com\/hjg\/pngj\/IImageLine;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  (r2 I:int), (r1 I:ar.com.hjg.pngj.ImageLineSetDefault) ar.com.hjg.pngj.ImageLineSetDefault.currentRow int \l0x0002: IGET  (r0 I:boolean) = (r1 I:ar.com.hjg.pngj.ImageLineSetDefault) ar.com.hjg.pngj.ImageLineSetDefault.singleCursor boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r2 I:T) = (r1 I:ar.com.hjg.pngj.ImageLineSetDefault) ar.com.hjg.pngj.ImageLineSetDefault.imageLine ar.com.hjg.pngj.IImageLine \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: RETURN  (r2 I:T) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IGET  (r0 I:java.util.List\<T\>) = (r1 I:ar.com.hjg.pngj.ImageLineSetDefault) ar.com.hjg.pngj.ImageLineSetDefault.imageLines java.util.List \l0x000b: INVOKE  (r2 I:int) = (r1 I:ar.com.hjg.pngj.ImageLineSetDefault), (r2 I:int) ar.com.hjg.pngj.ImageLineSetDefault.imageRowToMatrixRowStrict(int):int type: VIRTUAL \l0x000f: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0013: CHECK_CAST  (r2 I:ar.com.hjg.pngj.IImageLine) = (ar.com.hjg.pngj.IImageLine) (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: RETURN  (r2 I:T) \l}"];
MethodNode[shape=record,label="{public T ar.com.hjg.pngj.ImageLineSetDefault.getImageLine((r1 'this' I:ar.com.hjg.pngj.ImageLineSetDefault A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(I)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

