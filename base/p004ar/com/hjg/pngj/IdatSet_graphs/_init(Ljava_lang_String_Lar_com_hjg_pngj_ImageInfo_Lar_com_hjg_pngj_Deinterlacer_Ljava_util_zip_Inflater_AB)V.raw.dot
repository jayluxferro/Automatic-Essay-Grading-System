digraph "CFG forar.com.hjg.pngj.IdatSet.\<init\>(Ljava\/lang\/String;Lar\/com\/hjg\/pngj\/ImageInfo;Lar\/com\/hjg\/pngj\/Deinterlacer;Ljava\/util\/zip\/Inflater;[B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:int) = (r10 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.getBytesToRead():int type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0008: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IGET  (r0 I:int) = (r9 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPerRow int \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r0 I:int) = (r9 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPerRow int \l0x000f: ARITH  (r4 I:int) = (r0 I:int) + (1 int) \l0x0011: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0012: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0013: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0014: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0015: INVOKE  \l  (r1 I:ar.com.hjg.pngj.DeflatedChunksSet)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:java.util.zip.Inflater)\l  (r6 I:byte[])\l ar.com.hjg.pngj.DeflatedChunksSet.\<init\>(java.lang.String, int, int, java.util.zip.Inflater, byte[]):void type: DIRECT \l0x0018: CONST  (r8 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0019: NEW_ARRAY  (r8 I:int[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x001b: IPUT  (r8 I:int[]), (r7 I:ar.com.hjg.pngj.IdatSet) ar.com.hjg.pngj.IdatSet.filterUseStat int[] \l0x001d: IPUT  \l  (r9 I:ar.com.hjg.pngj.ImageInfo)\l  (r7 I:ar.com.hjg.pngj.IdatSet)\l ar.com.hjg.pngj.IdatSet.imgInfo ar.com.hjg.pngj.ImageInfo \l0x001f: IPUT  \l  (r10 I:ar.com.hjg.pngj.Deinterlacer)\l  (r7 I:ar.com.hjg.pngj.IdatSet)\l ar.com.hjg.pngj.IdatSet.deinterlacer ar.com.hjg.pngj.Deinterlacer \l0x0021: NEW_INSTANCE  (r8 I:ar.com.hjg.pngj.RowInfo) =  ar.com.hjg.pngj.RowInfo \l0x0023: INVOKE  \l  (r8 I:ar.com.hjg.pngj.RowInfo)\l  (r9 I:ar.com.hjg.pngj.ImageInfo)\l  (r10 I:ar.com.hjg.pngj.Deinterlacer)\l ar.com.hjg.pngj.RowInfo.\<init\>(ar.com.hjg.pngj.ImageInfo, ar.com.hjg.pngj.Deinterlacer):void type: DIRECT \l0x0026: IPUT  \l  (r8 I:ar.com.hjg.pngj.RowInfo)\l  (r7 I:ar.com.hjg.pngj.IdatSet)\l ar.com.hjg.pngj.IdatSet.rowinfo ar.com.hjg.pngj.RowInfo \l}"];
Node_5 [shape=record,label="{5\:\ 0x0028|0x0028: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.IdatSet.\<init\>((r7 'this' I:ar.com.hjg.pngj.IdatSet A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:ar.com.hjg.pngj.ImageInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:ar.com.hjg.pngj.Deinterlacer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.util.zip.Inflater A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_2 -> Node_4;
Node_3 -> Node_2;
Node_4 -> Node_5;
}

