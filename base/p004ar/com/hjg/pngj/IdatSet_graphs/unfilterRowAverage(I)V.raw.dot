digraph "CFG forar.com.hjg.pngj.IdatSet.unfilterRowAverage(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:ar.com.hjg.pngj.ImageInfo) = (r6 I:ar.com.hjg.pngj.IdatSet) ar.com.hjg.pngj.IdatSet.imgInfo ar.com.hjg.pngj.ImageInfo \l0x0002: IGET  (r0 I:int) = (r0 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPixel int \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: ARITH  (r0 I:int) = (1 int) \- (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r1 I:?[int, byte, short, char]) \> (r7 I:?[int, byte, short, char])  \-\> B:6:0x002b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:4:0x0012 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r2 I:byte[]) = (r6 I:ar.com.hjg.pngj.IdatSet) ar.com.hjg.pngj.IdatSet.rowUnfiltered byte[] \l0x000d: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l \l0x000f: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IGET  (r3 I:byte[]) = (r6 I:ar.com.hjg.pngj.IdatSet) ar.com.hjg.pngj.IdatSet.rowUnfiltered byte[] \l0x0015: IGET  (r4 I:byte[]) = (r6 I:ar.com.hjg.pngj.IdatSet) ar.com.hjg.pngj.IdatSet.row byte[] \l0x0017: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r4 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x0019: IGET  (r5 I:byte[]) = (r6 I:ar.com.hjg.pngj.IdatSet) ar.com.hjg.pngj.IdatSet.rowUnfilteredPrev byte[] \l0x001b: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r5 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x001d: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x001f: ARITH  (r2 I:int) = (r2 I:int) + (r5 I:int) \l0x0020: ARITH  (r2 I:int) = (r2 I:int) \/ (2 int) \l0x0022: ARITH  (r4 I:int) = (r4 I:int) + (r2 I:int) \l0x0023: CAST  (r2 I:byte) = (byte) (r4 I:int) \l0x0024: APUT  \l  (r3 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:byte A[IMMUTABLE_TYPE])\l \l0x0026: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x0028: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|0x002b: RETURN   \l}"];
MethodNode[shape=record,label="{private void ar.com.hjg.pngj.IdatSet.unfilterRowAverage((r6 'this' I:ar.com.hjg.pngj.IdatSet A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_1;
}

