digraph "CFG forar.com.hjg.pngj.IdatSet.updateCrcs([Ljava\/util\/zip\/Checksum;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r7 I:?[]) \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: AGET  (r2 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: INVOKE  (r3 I:byte[]) = (r6 I:ar.com.hjg.pngj.IdatSet) ar.com.hjg.pngj.IdatSet.getUnfilteredRow():byte[] type: VIRTUAL \l0x000c: INVOKE  (r4 I:int) = (r6 I:ar.com.hjg.pngj.IdatSet) ar.com.hjg.pngj.IdatSet.getRowFilled():int type: VIRTUAL \l0x0010: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0011: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x0012: INVOKE  \l  (r2 I:java.util.zip.Checksum)\l  (r3 I:byte[])\l  (r5 I:int)\l  (r4 I:int)\l java.util.zip.Checksum.update(byte[], int, int):void type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{void ar.com.hjg.pngj.IdatSet.updateCrcs((r6 'this' I:ar.com.hjg.pngj.IdatSet A[IMMUTABLE_TYPE, THIS]), (r7 I:java.util.zip.Checksum[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_1;
}

