digraph "CFG forar.com.hjg.pngj.ChunkSeqReader.checkSignature([B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:byte[]) =  ar.com.hjg.pngj.PngHelperInternal.getPngIdSignature():byte[] type: STATIC \l0x0004: INVOKE  (r2 I:boolean) = (r2 I:byte[]), (r0 I:byte[]) java.util.Arrays.equals(byte[], byte[]):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: NEW_INSTANCE  (r2 I:ar.com.hjg.pngj.PngjInputException) =  ar.com.hjg.pngj.PngjInputException \l0x000d: CONST_STR  (r0 I:java.lang.String) =  \"Bad PNG signature\" \l0x000f: INVOKE  \l  (r2 I:ar.com.hjg.pngj.PngjInputException)\l  (r0 I:java.lang.String)\l ar.com.hjg.pngj.PngjInputException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected void ar.com.hjg.pngj.ChunkSeqReader.checkSignature((r1 'this' I:ar.com.hjg.pngj.ChunkSeqReader A[IMMUTABLE_TYPE, THIS]), (r2 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

