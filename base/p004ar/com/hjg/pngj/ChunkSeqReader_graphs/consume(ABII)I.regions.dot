digraph "CFG forar.com.hjg.pngj.ChunkSeqReader.consume([BII)I" {
subgraph cluster_Region_1721528568 {
label = "R(1:(2:(1:2)|(1:(2:(1:5)|(1:(2:27|28)(1:(6:20|(1:22)|23|(1:25)|26|29)(1:(4:14|(1:16)|17|(2:(1:31)|(2:19|32)))(2:13|30))))))))";
node [shape=record,color=blue];
subgraph cluster_Region_212791543 {
label = "R(2:(1:2)|(1:(2:(1:5)|(1:(2:27|28)(1:(6:20|(1:22)|23|(1:25)|26|29)(1:(4:14|(1:16)|17|(2:(1:31)|(2:19|32)))(2:13|30)))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1181442976 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r8.done == true) goto L_0x0004\l}"];
subgraph cluster_Region_1349935003 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return \-1\l}"];
}
}
subgraph cluster_Region_1441332957 {
label = "R(1:(2:(1:5)|(1:(2:27|28)(1:(6:20|(1:22)|23|(1:25)|26|29)(1:(4:14|(1:16)|17|(2:(1:31)|(2:19|32)))(2:13|30))))))";
node [shape=record,color=blue];
subgraph cluster_Region_783975903 {
label = "R(2:(1:5)|(1:(2:27|28)(1:(6:20|(1:22)|23|(1:25)|26|29)(1:(4:14|(1:16)|17|(2:(1:31)|(2:19|32)))(2:13|30)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_860980683 {
label = "IF [B:4:0x0007] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0007|if (r11 == 0) goto L_0x0009\l}"];
subgraph cluster_Region_1362726589 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0009|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_1135975505 {
label = "R(1:(2:27|28)(1:(6:20|(1:22)|23|(1:25)|26|29)(1:(4:14|(1:16)|17|(2:(1:31)|(2:19|32)))(2:13|30))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_962297221 {
label = "IF [B:6:0x000a] THEN: R(2:27|28) ELSE: R(1:(6:20|(1:22)|23|(1:25)|26|29)(1:(4:14|(1:16)|17|(2:(1:31)|(2:19|32)))(2:13|30)))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000a|if (r11 \< 0) goto L_0x0096\l}"];
subgraph cluster_Region_110876856 {
label = "R(2:27|28)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0096}"];
Node_28 [shape=record,label="{28\:\ 0x00ac|throw new p004ar.com.hjg.pngj.PngjInputException(\"Bad len: \" + r11)\l}"];
}
subgraph cluster_Region_466281136 {
label = "R(1:(6:20|(1:22)|23|(1:25)|26|29)(1:(4:14|(1:16)|17|(2:(1:31)|(2:19|32)))(2:13|30))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1953673868 {
label = "IF [B:8:0x0011] THEN: R(6:20|(1:22)|23|(1:25)|26|29) ELSE: R(1:(4:14|(1:16)|17|(2:(1:31)|(2:19|32)))(2:13|30)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0011|if (r8.signatureDone != true) goto L_0x006c\l}"];
subgraph cluster_Region_152126406 {
label = "R(6:20|(1:22)|23|(1:25)|26|29)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x006c|int int r1 = 8 \- r8.buf0len\l}"];
subgraph cluster_IfRegion_543447156 {
label = "IF [B:21:0x0070] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0070|if (r1 \<= r11) goto L_0x0073\l}"];
subgraph cluster_Region_233478049 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0073|r11 = r1\l}"];
}
}
Node_23 [shape=record,label="{23\:\ 0x0074|PHI: r11 \l  PHI: (r11v1 int) = (r11v0 int), (r11v2 int) binds: [B:21:0x0070, B:22:0x0073] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.System.arraycopy(r9, r10, r8.buf0, r8.buf0len, r11)\lr8.buf0len += r11\l}"];
subgraph cluster_IfRegion_371678930 {
label = "IF [B:24:0x0082] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0082|if (r8.buf0len == 8) goto L_0x0084\l}"];
subgraph cluster_Region_1310788278 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0084|checkSignature(r8.buf0)\lr8.buf0len = 0\lr8.signatureDone = true\l}"];
}
}
Node_26 [shape=record,label="{26\:\ 0x008d|int int r10 = r11 + 0\lr8.bytesCount += (long) r11\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r10\l}"];
}
subgraph cluster_Region_36875936 {
label = "R(1:(4:14|(1:16)|17|(2:(1:31)|(2:19|32)))(2:13|30)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1664457400 {
label = "IF [B:10:0x0015, B:12:0x001d] THEN: R(4:14|(1:16)|17|(2:(1:31)|(2:19|32))) ELSE: R(2:13|30) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0015|if (r8.curChunkReader == null) goto L_0x002f\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|ADDED_TO_REGION\l|if (r8.curChunkReader.isDone() == true) goto L_0x002f\l}"];
subgraph cluster_Region_1796136362 {
label = "R(4:14|(1:16)|17|(2:(1:31)|(2:19|32)))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002f|int int r1 = 8 \- r8.buf0len\l}"];
subgraph cluster_IfRegion_1753394302 {
label = "IF [B:15:0x0033] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0033|if (r1 \<= r11) goto L_0x0036\l}"];
subgraph cluster_Region_1789390562 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0036|r11 = r1\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x0037|PHI: r11 \l  PHI: (r11v3 int) = (r11v0 int), (r11v6 int) binds: [B:15:0x0033, B:16:0x0036] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.System.arraycopy(r9, r10, r8.buf0, r8.buf0len, r11)\lr8.buf0len += r11\lint int r10 = r11 + 0\lr8.bytesCount += (long) r11\l}"];
subgraph cluster_Region_1330158018 {
label = "R(2:(1:31)|(2:19|32))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_167403047 {
label = "IF [B:18:0x004d] THEN: R(1:31) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x004d|if (r8.buf0len != 8) goto L_?\l}"];
subgraph cluster_Region_858336136 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return r10\l}"];
}
}
subgraph cluster_Region_785863626 {
label = "R(2:19|32)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x004f|r8.chunkCount++\lstartNewChunk(p004ar.com.hjg.pngj.PngHelperInternal.readInt4fromBytes(r8.buf0, 0), p004ar.com.hjg.pngj.chunks.ChunkHelper.toString(r8.buf0, 4, 4), r8.bytesCount \- 8)\lr8.buf0len = 0\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return r10\l}"];
}
}
}
subgraph cluster_Region_1405877042 {
label = "R(2:13|30)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0020|int int r9 = r8.curChunkReader.feedBytes(r9, r10, r11)\lint int r10 = r9 + 0\lr8.bytesCount += (long) r9\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return r10\l}"];
}
}
}
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0006}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000c}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0013}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0017}"];
MethodNode[shape=record,label="{public int ar.com.hjg.pngj.ChunkSeqReader.consume((r8v0 'this' ar.com.hjg.pngj.ChunkSeqReader A[IMMUTABLE_TYPE, THIS]), (r9v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_27;
Node_27 -> Node_28;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_29;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_31;
Node_19 -> Node_32;
Node_13 -> Node_30;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

