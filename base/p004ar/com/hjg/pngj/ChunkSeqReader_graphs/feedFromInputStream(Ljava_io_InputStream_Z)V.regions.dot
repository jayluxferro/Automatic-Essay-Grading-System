digraph "CFG forar.com.hjg.pngj.ChunkSeqReader.feedFromInputStream(Ljava\/io\/InputStream;Z)V" {
subgraph cluster_Region_1335496539 {
label = "R(2:0|(1:(1:4)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|ar.com.hjg.pngj.BufferedStreamFeeder p004ar.com.hjg.pngj.BufferedStreamFeeder r0 = new p004ar.com.hjg.pngj.BufferedStreamFeeder(r2)\lr0.setCloseStream(r3)\l}"];
subgraph cluster_LoopRegion_1957526437 {
label = "LOOP:0: (1:(1:4))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|Catch:\{ all \-\> 0x0019 \}\l|if (r0.hasMoreToFeed() != false) goto L_0x000e     \/\/ Catch:\{ all \-\> 0x0019 \}\l}"];
subgraph cluster_Region_721220033 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_365827797 {
label = "Try: R(1:4) finally: R(3:7|8|9)";
node [shape=record,color=blue];
subgraph cluster_Region_776691510 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|LOOP_END\lCatch:\{ all \-\> 0x0019 \}\lLOOP:0: B:1:0x0008\-\>B:4:0x000e\l|r0.feed(r1)     \/\/ Catch:\{ all \-\> 0x0019 \}\l}"];
}
subgraph cluster_Region_886550506 {
label = "R(3:7|8|9) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0019|ExcHandler:  FINALLY\lSplitter:B:1:0x0008\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|FINALLY_INSNS\l|close()\lr0.close()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|throw r2\l}"];
}
}
}
}
}
subgraph cluster_Region_886550506 {
label = "R(3:7|8|9) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0019|ExcHandler:  FINALLY\lSplitter:B:1:0x0008\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|FINALLY_INSNS\l|close()\lr0.close()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|throw r2\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0008|LOOP_START\lSYNTHETIC\lSplitter:B:1:0x0008\lLOOP:0: B:1:0x0008\-\>B:4:0x000e\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?|Catch:\{ all \-\> 0x0019 \}\lSplitter:B:1:0x0008\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0012|DONT_GENERATE\l|close()\lr0.close()\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0018}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0012|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.ChunkSeqReader.feedFromInputStream((r1v0 'this' ar.com.hjg.pngj.ChunkSeqReader A[IMMUTABLE_TYPE, THIS]), (r2v0 java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_3 -> Node_10[style=dashed];
Node_4 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_10 -> Node_5;
}

