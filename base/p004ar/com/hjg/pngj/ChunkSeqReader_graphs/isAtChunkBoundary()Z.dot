digraph "CFG forar.com.hjg.pngj.ChunkSeqReader.isAtChunkBoundary()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if ((r4.bytesCount \> 0 ? 1 : (r4.bytesCount == 0 ? 0 : \-1)) == 0) goto L_0x0023\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if ((r4.bytesCount \> 8 ? 1 : (r4.bytesCount == 8 ? 0 : \-1)) == 0) goto L_0x0023\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010}"];
Node_5 [shape=record,label="{5\:\ 0x0012|if (r4.done != false) goto L_0x0023\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014}"];
Node_7 [shape=record,label="{7\:\ 0x0016|if (r4.curChunkReader == null) goto L_0x0023\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018}"];
Node_9 [shape=record,label="{9\:\ 0x001e|if (r4.curChunkReader.isDone() == false) goto L_0x0021\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|SYNTHETIC\lRETURN\l|return false\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean ar.com.hjg.pngj.ChunkSeqReader.isAtChunkBoundary((r4v0 'this' ar.com.hjg.pngj.ChunkSeqReader A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
}

