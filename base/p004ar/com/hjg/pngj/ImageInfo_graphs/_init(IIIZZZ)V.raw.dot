digraph "CFG forar.com.hjg.pngj.ImageInfo.\<init\>(IIIZZZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[long, double]) = (\-1 ?[long, double]) \l0x0005: IPUT  (r0 I:long), (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.totalPixels long \l0x0007: IPUT  (r0 I:long), (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.totalRawBytes long \l0x0009: IPUT  (r3 I:int), (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.cols int \l0x000b: IPUT  (r4 I:int), (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.rows int \l0x000d: IPUT  (r6 I:boolean), (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.alpha boolean \l0x000f: IPUT  (r8 I:boolean), (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.indexed boolean \l0x0011: IPUT  (r7 I:boolean), (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.greyscale boolean \l0x0013: IGET  (r0 I:boolean) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.greyscale boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001a \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: NEW_INSTANCE  (r3 I:ar.com.hjg.pngj.PngjException) =  ar.com.hjg.pngj.PngjException \l0x001c: CONST_STR  (r4 I:java.lang.String) =  \"palette and greyscale are mutually exclusive\" \l0x001e: INVOKE  \l  (r3 I:ar.com.hjg.pngj.PngjException)\l  (r4 I:java.lang.String)\l ar.com.hjg.pngj.PngjException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0023: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002f \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0029 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002d \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: CONST  (r6 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|0x002d: CONST  (r6 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0033 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|0x0031: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|0x0033: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|0x0034: IPUT  (r6 I:int), (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.channels int \l0x0036: IPUT  (r5 I:int), (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bitDepth int \l0x0038: CONST  (r6 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x003a|0x003a: IF  (r5 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:19:0x003e \l}"];
Node_18 [shape=record,label="{18\:\ 0x003c|0x003c: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x003e|0x003e: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x003f|0x003f: IPUT  (r5 I:boolean), (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.packed boolean \l0x0041: IGET  (r5 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.channels int \l0x0043: IGET  (r7 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bitDepth int \l0x0045: ARITH  (r5 I:int) = (r5 I:int) * (r7 I:int) \l0x0047: IPUT  (r5 I:int), (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bitspPixel int \l0x0049: IGET  (r5 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bitspPixel int \l0x004b: ARITH  (r5 I:int) = (r5 I:int) + (7 int) \l0x004d: ARITH  (r5 I:int) = (r5 I:int) \/ (r6 I:int) \l0x004e: IPUT  (r5 I:int), (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPixel int \l0x0050: IGET  (r5 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bitspPixel int \l0x0052: ARITH  (r5 I:int) = (r5 I:int) * (r3 I:int) \l0x0054: ARITH  (r5 I:int) = (r5 I:int) + (7 int) \l0x0056: ARITH  (r5 I:int) = (r5 I:int) \/ (r6 I:int) \l0x0057: IPUT  (r5 I:int), (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPerRow int \l0x0059: IGET  (r5 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.channels int \l0x005b: IGET  (r7 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.cols int \l0x005d: ARITH  (r5 I:int) = (r5 I:int) * (r7 I:int) \l0x005f: IPUT  (r5 I:int), (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.samplesPerRow int \l0x0061: IGET  (r5 I:boolean) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.packed boolean \l}"];
Node_21 [shape=record,label="{21\:\ 0x0063|0x0063: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0068 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0065|0x0065: IGET  (r5 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bytesPerRow int \l}"];
Node_23 [shape=record,label="{23\:\ 0x0068|0x0068: IGET  (r5 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.samplesPerRow int \l}"];
Node_24 [shape=record,label="{24\:\ 0x006a|0x006a: IPUT  (r5 I:int), (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.samplesPerRowPacked int \l0x006c: IGET  (r5 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bitDepth int \l}"];
Node_25 [shape=record,label="{25\:\ 0x006e|0x006e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x00b0 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0070|0x0070: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x00d2 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0072|0x0072: CONST  (r6 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0074|0x0074: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0092 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0076|0x0076: SWITCH  \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2] t:[0x00b0, 0x00b0] \l}"];
Node_30 [shape=record,label="{30\:\ 0x0079|0x0079: NEW_INSTANCE  (r3 I:ar.com.hjg.pngj.PngjException) =  ar.com.hjg.pngj.PngjException \l0x007b: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x007d: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0080: CONST_STR  (r5 I:java.lang.String) =  \"invalid bitdepth=\" \l0x0082: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0085: IGET  (r5 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bitDepth int \l0x0087: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x008a: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x008e: INVOKE  \l  (r3 I:ar.com.hjg.pngj.PngjException)\l  (r4 I:java.lang.String)\l ar.com.hjg.pngj.PngjException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_31 [shape=record,label="{31\:\ 0x0091|0x0091: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0092|0x0092: IGET  (r5 I:boolean) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.indexed boolean \l}"];
Node_33 [shape=record,label="{33\:\ 0x0094|0x0094: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0097 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0097|0x0097: NEW_INSTANCE  (r3 I:ar.com.hjg.pngj.PngjException) =  ar.com.hjg.pngj.PngjException \l0x0099: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x009b: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x009e: CONST_STR  (r5 I:java.lang.String) =  \"indexed can't have bitdepth=\" \l0x00a0: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a3: IGET  (r5 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bitDepth int \l0x00a5: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x00a8: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00ac: INVOKE  \l  (r3 I:ar.com.hjg.pngj.PngjException)\l  (r4 I:java.lang.String)\l ar.com.hjg.pngj.PngjException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_36 [shape=record,label="{36\:\ 0x00af|0x00af: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_37 [shape=record,label="{37\:\ 0x00b0|0x00b0: IGET  (r5 I:boolean) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.indexed boolean \l}"];
Node_38 [shape=record,label="{38\:\ 0x00b2|0x00b2: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x00d2 \l}"];
Node_39 [shape=record,label="{39\:\ 0x00b4|0x00b4: IGET  (r5 I:boolean) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.greyscale boolean \l}"];
Node_40 [shape=record,label="{40\:\ 0x00b6|0x00b6: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x00b9 \l}"];
Node_42 [shape=record,label="{42\:\ 0x00b9|0x00b9: NEW_INSTANCE  (r3 I:ar.com.hjg.pngj.PngjException) =  ar.com.hjg.pngj.PngjException \l0x00bb: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00bd: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00c0: CONST_STR  (r5 I:java.lang.String) =  \"only indexed or grayscale can have bitdepth=\" \l0x00c2: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c5: IGET  (r5 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bitDepth int \l0x00c7: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x00ca: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00ce: INVOKE  \l  (r3 I:ar.com.hjg.pngj.PngjException)\l  (r4 I:java.lang.String)\l ar.com.hjg.pngj.PngjException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_43 [shape=record,label="{43\:\ 0x00d1|0x00d1: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_44 [shape=record,label="{44\:\ 0x00d2|0x00d2: IF  (r3 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:56:0x0105 \l}"];
Node_45 [shape=record,label="{45\:\ 0x00d4|0x00d4: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (16777216(0x1000000, float:2.3509887E\-38) ?[int, float, short, byte, char])\l \l}"];
Node_46 [shape=record,label="{46\:\ 0x00d6|0x00d6: IF  (r3 I:?[int, byte, short, char]) \> (r5 I:?[int, byte, short, char])  \-\> B:56:0x0105 \l}"];
Node_47 [shape=record,label="{47\:\ 0x00d8|0x00d8: IF  (r4 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:54:0x00e9 \l}"];
Node_48 [shape=record,label="{48\:\ 0x00da|0x00da: IF  (r4 I:?[int, byte, short, char]) \> (r5 I:?[int, byte, short, char])  \-\> B:54:0x00e9 \l}"];
Node_49 [shape=record,label="{49\:\ 0x00dc|0x00dc: IGET  (r3 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.samplesPerRow int \l}"];
Node_50 [shape=record,label="{50\:\ 0x00de|0x00de: IF  (r3 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:52:0x00e1 \l}"];
Node_51 [shape=record,label="{51\:\ 0x00e0|0x00e0: RETURN   \l}"];
Node_52 [shape=record,label="{52\:\ 0x00e1|0x00e1: NEW_INSTANCE  (r3 I:ar.com.hjg.pngj.PngjException) =  ar.com.hjg.pngj.PngjException \l0x00e3: CONST_STR  (r4 I:java.lang.String) =  \"invalid image parameters (overflow?)\" \l0x00e5: INVOKE  \l  (r3 I:ar.com.hjg.pngj.PngjException)\l  (r4 I:java.lang.String)\l ar.com.hjg.pngj.PngjException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_53 [shape=record,label="{53\:\ 0x00e8|0x00e8: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_54 [shape=record,label="{54\:\ 0x00e9|0x00e9: NEW_INSTANCE  (r3 I:ar.com.hjg.pngj.PngjException) =  ar.com.hjg.pngj.PngjException \l0x00eb: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00ed: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00f0: CONST_STR  (r6 I:java.lang.String) =  \"invalid rows=\" \l0x00f2: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00f5: INVOKE  (r5 I:java.lang.StringBuilder), (r4 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x00f8: CONST_STR  (r4 I:java.lang.String) =  \" ???\" \l0x00fa: INVOKE  (r5 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00fd: INVOKE  (r4 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0101: INVOKE  \l  (r3 I:ar.com.hjg.pngj.PngjException)\l  (r4 I:java.lang.String)\l ar.com.hjg.pngj.PngjException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_55 [shape=record,label="{55\:\ 0x0104|0x0104: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0105|0x0105: NEW_INSTANCE  (r4 I:ar.com.hjg.pngj.PngjException) =  ar.com.hjg.pngj.PngjException \l0x0107: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0109: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x010c: CONST_STR  (r6 I:java.lang.String) =  \"invalid cols=\" \l0x010e: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0111: INVOKE  (r5 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0114: CONST_STR  (r3 I:java.lang.String) =  \" ???\" \l0x0116: INVOKE  (r5 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0119: INVOKE  (r3 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x011d: INVOKE  \l  (r4 I:ar.com.hjg.pngj.PngjException)\l  (r3 I:java.lang.String)\l ar.com.hjg.pngj.PngjException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_57 [shape=record,label="{57\:\ 0x0120|0x0120: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.ImageInfo.\<init\>((r2 'this' I:ar.com.hjg.pngj.ImageInfo A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_4;
Node_2 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_10;
Node_8 -> Node_13[style=dashed];
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_16;
Node_12 -> Node_16;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_37;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_44;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_32;
Node_29 -> Node_30;
Node_29 -> Node_37;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_33 -> Node_35;
Node_33 -> Node_44[style=dashed];
Node_35 -> Node_36;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_44;
Node_39 -> Node_40;
Node_40 -> Node_42;
Node_40 -> Node_44[style=dashed];
Node_42 -> Node_43;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_56;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_56;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_54;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_54;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_52 -> Node_53;
Node_54 -> Node_55;
Node_56 -> Node_57;
}

