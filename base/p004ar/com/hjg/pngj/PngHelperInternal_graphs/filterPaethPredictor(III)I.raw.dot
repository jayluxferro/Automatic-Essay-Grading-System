digraph "CFG forar.com.hjg.pngj.PngHelperInternal.filterPaethPredictor(III)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r0 I:int) = (r3 I:int) + (r4 I:int) \l0x0002: ARITH  (r0 I:int) = (r0 I:int) \- (r5 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: ARITH  (r1 I:int) = (r0 I:int) \- (r3 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: ARITH  (r1 I:int) = (r3 I:int) \- (r0 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r0 I:?[int, byte, short, char]) \< (r4 I:?[int, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: ARITH  (r2 I:int) = (r0 I:int) \- (r4 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: ARITH  (r2 I:int) = (r4 I:int) \- (r0 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IF  (r0 I:?[int, byte, short, char]) \< (r5 I:?[int, byte, short, char])  \-\> B:9:0x0015 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: ARITH  (r0 I:int) = (r0 I:int) \- (r5 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: ARITH  (r0 I:int) = (r5 I:int) \- (r0 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|0x0017: IF  (r1 I:?[int, byte, short, char]) \> (r2 I:?[int, byte, short, char])  \-\> B:13:0x001c \l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|0x0019: IF  (r1 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:13:0x001c \l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|0x001b: RETURN  (r3 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|0x001c: IF  (r2 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:15:0x001f \l}"];
Node_14 [shape=record,label="{14\:\ 0x001e|0x001e: RETURN  (r4 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x001f|0x001f: RETURN  (r5 I:int) \l}"];
MethodNode[shape=record,label="{static final int ar.com.hjg.pngj.PngHelperInternal.filterPaethPredictor((r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
}

