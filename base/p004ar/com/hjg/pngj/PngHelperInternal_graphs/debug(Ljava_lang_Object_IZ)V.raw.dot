digraph "CFG forar.com.hjg.pngj.PngHelperInternal.debug(Ljava\/lang\/Object;IZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r3 I:java.lang.Exception) =  java.lang.Exception \l0x0002: INVOKE  (r3 I:java.lang.Exception) java.lang.Exception.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r3 I:java.lang.StackTraceElement[]) = (r3 I:java.lang.Exception) java.lang.Exception.getStackTrace():java.lang.StackTraceElement[] type: VIRTUAL \l0x0009: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x000b: AGET  (r2 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x000d: INVOKE  (r3 I:java.lang.String) = (r2 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getClassName():java.lang.String type: VIRTUAL \l0x0011: CONST  (r0 I:?[int, float, short, byte, char]) = (46 ?[int, float, short, byte, char]) \l0x0013: INVOKE  (r0 I:int) = (r3 I:java.lang.String), (r0 I:int) java.lang.String.lastIndexOf(int):int type: VIRTUAL \l0x0017: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0019: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String), (r0 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL \l0x001d: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001f: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0022: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0025: CONST_STR  (r3 I:java.lang.String) =  \".\" \l0x0027: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002a: INVOKE  (r3 I:java.lang.String) = (r2 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getMethodName():java.lang.String type: VIRTUAL \l0x002e: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0031: CONST_STR  (r3 I:java.lang.String) =  \"(\" \l0x0033: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0036: INVOKE  (r2 I:int) = (r2 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getLineNumber():int type: VIRTUAL \l0x003a: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x003d: CONST_STR  (r2 I:java.lang.String) =  \"): \" \l0x003f: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0042|0x0042: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0046 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0044|0x0044: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0046|0x0046: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) java.lang.Object.toString():java.lang.String type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x004a|0x004a: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004d: INVOKE  (r1 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0051: SGET  (r2 I:java.io.PrintStream) =  java.lang.System.err java.io.PrintStream \l0x0053: INVOKE  (r2 I:java.io.PrintStream), (r1 I:java.lang.String) java.io.PrintStream.println(java.lang.String):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0056|0x0056: RETURN   \l}"];
MethodNode[shape=record,label="{static void ar.com.hjg.pngj.PngHelperInternal.debug((r1 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

