digraph "CFG forar.com.hjg.pngj.PngHelperInternal.readInt4(Ljava\/io\/InputStream;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r0 I:int) = (r4 I:java.io.InputStream) java.io.InputStream.read():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x0026 \}, TRY_ENTER]\l0x0004: INVOKE  (r1 I:int) = (r4 I:java.io.InputStream) java.io.InputStream.read():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x0026 \}]\l0x0008: INVOKE  (r2 I:int) = (r4 I:java.io.InputStream) java.io.InputStream.read():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x0026 \}]\l0x000c: INVOKE  (r4 I:int) = (r4 I:java.io.InputStream) java.io.InputStream.read():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x0026 \}]\l0x000f: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001a \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: ARITH  (r0 I:int) = (r0 I:int) \<\< (24 int) \l0x001c: ARITH  (r1 I:int) = (r1 I:int) \<\< (16 int) \l0x001e: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) \| (r1 I:?[int, boolean, short, byte, char]) \l0x001f: ARITH  (r1 I:int) = (r2 I:int) \<\< (8 int) \l0x0021: ARITH  (r1 I:int) = (r1 I:int) + (r4 I:int) \l0x0022: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) \| (r1 I:?[int, boolean, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: RETURN  (r4 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: RETURN  (r3 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|ExcHandler: IOException null\lSplitter:B:0:0x0000\l|0x0026: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|0x0027: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.PngjInputException) =  ar.com.hjg.pngj.PngjInputException \l0x0029: CONST_STR  (r1 I:java.lang.String) =  \"error reading Int4\" \l0x002b: INVOKE  \l  (r0 I:ar.com.hjg.pngj.PngjInputException)\l  (r1 I:java.lang.String)\l  (r4 I:java.lang.Throwable)\l ar.com.hjg.pngj.PngjInputException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|0x002e: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static int ar.com.hjg.pngj.PngHelperInternal.readInt4((r4 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_11;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_8;
Node_6 -> Node_10[style=dashed];
Node_8 -> Node_9;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

