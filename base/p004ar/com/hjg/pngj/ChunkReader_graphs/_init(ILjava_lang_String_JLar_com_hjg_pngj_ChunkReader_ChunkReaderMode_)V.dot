digraph "CFG forar.com.hjg.pngj.ChunkReader.\<init\>(ILjava\/lang\/String;JLar\/com\/hjg\/pngj\/ChunkReader$ChunkReaderMode;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = false\lr4.read = 0\lr4.crcn = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r9 == null) goto L_0x0032\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a}"];
Node_3 [shape=record,label="{3\:\ 0x000f|if (r6.length() != 4) goto L_0x0032\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|if (r5 \< 0) goto L_0x0032\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|r4.mode = r9\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|if (r9 != p004ar.com.hjg.pngj.ChunkReader.ChunkReaderMode.BUFFER) goto L_0x001e\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|r2 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|r2 = false\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|PHI: r2 \l  PHI: (r2v2 boolean) = (r2v3 boolean), (r2v4 boolean) binds: [B:8:0x001e, B:7:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|r4.chunkRaw = new p004ar.com.hjg.pngj.chunks.ChunkRaw(r5, r6, r2)\lr4.chunkRaw.setOffset(r7)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|if (r9 != p004ar.com.hjg.pngj.ChunkReader.ChunkReaderMode.SKIP) goto L_0x002e\l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|r0 = true\l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v0 boolean), (r0v2 boolean) binds: [B:10:0x002b, B:11:0x002e] A[DONT_GENERATE, DONT_INLINE]\l|r4.crcCheck = r0\l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"Bad chunk paramenters: \")\lr6.append(r9)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|throw new p004ar.com.hjg.pngj.PngjExceptionInternal(r6.toString())\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.ChunkReader.\<init\>((r4v0 'this' ar.com.hjg.pngj.ChunkReader A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 ar.com.hjg.pngj.ChunkReader$ChunkReaderMode A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

