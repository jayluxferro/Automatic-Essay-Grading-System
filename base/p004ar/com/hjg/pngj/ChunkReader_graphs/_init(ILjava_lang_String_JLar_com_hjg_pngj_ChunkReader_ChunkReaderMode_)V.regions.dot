digraph "CFG forar.com.hjg.pngj.ChunkReader.\<init\>(ILjava\/lang\/String;JLar\/com\/hjg\/pngj\/ChunkReader$ChunkReaderMode;)V" {
subgraph cluster_Region_2033299198 {
label = "R(2:0|(2:(2:14|15)|(3:5|9|12)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|boolean r0 = false\l}"];
subgraph cluster_Region_2118376951 {
label = "R(2:(2:14|15)|(3:5|9|12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1104777401 {
label = "IF [B:1:0x0008, B:3:0x000f, B:4:0x0011] THEN: R(2:14|15) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r9 == null) goto L_0x0032\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|ADDED_TO_REGION\l|if (r6.length() != 4) goto L_0x0032\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|ADDED_TO_REGION\l|if (r5 \< 0) goto L_0x0032\l}"];
subgraph cluster_Region_275350092 {
label = "R(2:14|15)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0032}"];
Node_15 [shape=record,label="{15\:\ 0x0048|throw new p004ar.com.hjg.pngj.PngjExceptionInternal(\"Bad chunk paramenters: \" + r9)\l}"];
}
}
subgraph cluster_Region_667305270 {
label = "R(3:5|9|12)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|r4.mode = r9\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|PHI: r2 \l  PHI: (r2v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r4.chunkRaw = new p004ar.com.hjg.pngj.chunks.ChunkRaw(r5, r6, r9 == p004ar.com.hjg.pngj.ChunkReader.ChunkReaderMode.BUFFER)\lr4.chunkRaw.setOffset(r7)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v0 boolean), (r0v2 boolean) binds: [B:10:0x002b, B:11:0x002e] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|r4.crcCheck = r9 != p004ar.com.hjg.pngj.ChunkReader.ChunkReaderMode.SKIP ? true : r0\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000a}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001a}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001c}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001e}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002b}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x002e}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0031}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.ChunkReader.\<init\>((r4v0 'this' ar.com.hjg.pngj.ChunkReader A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 ar.com.hjg.pngj.ChunkReader$ChunkReaderMode A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_14 -> Node_15;
Node_5 -> Node_6;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_2 -> Node_3;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
}

