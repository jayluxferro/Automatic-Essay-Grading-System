digraph "CFG forar.com.hjg.pngj.ChunkSeqSkipping.1.processData(I[BII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:ar.com.hjg.pngj.ChunkSeqSkipping) = (r6 I:ar.com.hjg.pngj.ChunkSeqSkipping$1) ar.com.hjg.pngj.ChunkSeqSkipping.1.this$0 ar.com.hjg.pngj.ChunkSeqSkipping \l0x0002: INVOKE  (r1 I:ar.com.hjg.pngj.chunks.ChunkRaw) = (r6 I:ar.com.hjg.pngj.ChunkSeqSkipping$1) ar.com.hjg.pngj.ChunkSeqSkipping.1.getChunkRaw():ar.com.hjg.pngj.chunks.ChunkRaw type: VIRTUAL \l0x0006: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0008: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: INVOKE  \l  (r0 I:ar.com.hjg.pngj.ChunkSeqSkipping)\l  (r1 I:ar.com.hjg.pngj.chunks.ChunkRaw)\l  (r2 I:int)\l  (r3 I:byte[])\l  (r4 I:int)\l  (r5 I:int)\l ar.com.hjg.pngj.ChunkSeqSkipping.processChunkContent(ar.com.hjg.pngj.chunks.ChunkRaw, int, byte[], int, int):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: RETURN   \l}"];
MethodNode[shape=record,label="{protected void ar.com.hjg.pngj.ChunkSeqSkipping.1.processData((r6 'this' I:ar.com.hjg.pngj.ChunkSeqSkipping$1 A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

