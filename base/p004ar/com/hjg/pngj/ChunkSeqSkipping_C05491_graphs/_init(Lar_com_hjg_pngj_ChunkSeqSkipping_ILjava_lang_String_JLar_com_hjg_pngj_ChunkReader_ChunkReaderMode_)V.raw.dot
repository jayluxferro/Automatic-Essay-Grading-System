digraph "CFG forar.com.hjg.pngj.ChunkSeqSkipping.1.\<init\>(Lar\/com\/hjg\/pngj\/ChunkSeqSkipping;ILjava\/lang\/String;JLar\/com\/hjg\/pngj\/ChunkReader$ChunkReaderMode;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r7 I:ar.com.hjg.pngj.ChunkSeqSkipping)\l  (r6 I:ar.com.hjg.pngj.ChunkSeqSkipping$1)\l ar.com.hjg.pngj.ChunkSeqSkipping.1.this$0 ar.com.hjg.pngj.ChunkSeqSkipping \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0003: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0005: MOVE  (r3 I:?[long, double]) = (r10 I:?[long, double]) \l0x0006: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0007: INVOKE  \l  (r0 I:ar.com.hjg.pngj.ChunkReader)\l  (r1 I:int)\l  (r2 I:java.lang.String)\l  (r3 I:long)\l  (r5 I:ar.com.hjg.pngj.ChunkReader$ChunkReaderMode)\l ar.com.hjg.pngj.ChunkReader.\<init\>(int, java.lang.String, long, ar.com.hjg.pngj.ChunkReader$ChunkReaderMode):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: RETURN   \l}"];
MethodNode[shape=record,label="{void ar.com.hjg.pngj.ChunkSeqSkipping.1.\<init\>((r6 'this' I:ar.com.hjg.pngj.ChunkSeqSkipping$1 A[IMMUTABLE_TYPE, THIS]), (r7 I:ar.com.hjg.pngj.ChunkSeqSkipping A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:ar.com.hjg.pngj.ChunkReader$ChunkReaderMode A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | ANONYMOUS_CONSTRUCTOR\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

