digraph "CFG forar.com.hjg.pngj.chunks.PngChunkPLTE.setEntry(IIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int[]) = (r1 I:ar.com.hjg.pngj.chunks.PngChunkPLTE) ar.com.hjg.pngj.chunks.PngChunkPLTE.entries int[] \l0x0002: ARITH  (r3 I:int) = (r3 I:int) \<\< (16 int) \l0x0004: ARITH  (r4 I:int) = (r4 I:int) \<\< (8 int) \l0x0006: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) \| (r4 I:?[int, boolean, short, byte, char]) \l0x0007: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) \| (r5 I:?[int, boolean, short, byte, char]) \l0x0008: APUT  \l  (r0 I:?[int, float][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.chunks.PngChunkPLTE.setEntry((r1 'this' I:ar.com.hjg.pngj.chunks.PngChunkPLTE A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

