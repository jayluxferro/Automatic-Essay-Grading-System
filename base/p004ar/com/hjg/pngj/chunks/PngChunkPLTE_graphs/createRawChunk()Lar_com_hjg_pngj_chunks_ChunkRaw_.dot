digraph "CFG forar.com.hjg.pngj.chunks.PngChunkPLTE.createRawChunk()Lar\/com\/hjg\/pngj\/chunks\/ChunkRaw;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int[] r1 = new int[3]\lar.com.hjg.pngj.chunks.ChunkRaw r0 = createEmptyChunk(r9.nentries * 3, true)\lr4 = 0\lr5 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|LOOP_START\lPHI: r4 r5 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:0:0x0000, B:3:0x0013] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 int) = (r5v0 int), (r5v4 int) binds: [B:0:0x0000, B:3:0x0013] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000f\-\>B:3:0x0013\l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|if (r4 \>= r9.nentries) goto L_0x0036\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|LOOP_END\lLOOP:0: B:1:0x000f\-\>B:3:0x0013\l|getEntryRgb(r4, r1)\lint r7 = r5 + 1\lr0.data[r5] = (byte) r1[0]\lint r6 = r7 + 1\lr0.data[r7] = (byte) r1[1]\lr0.data[r6] = (byte) r1[2]\lint r4 = r4 + 1\lr5 = r6 + 1\l}"];
Node_4 [shape=record,label="{4\:\ 0x0036|RETURN\l|return r0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0036|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public ar.com.hjg.pngj.chunks.ChunkRaw ar.com.hjg.pngj.chunks.PngChunkPLTE.createRawChunk((r9v0 'this' ar.com.hjg.pngj.chunks.PngChunkPLTE A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_1;
Node_5 -> Node_4;
}

