digraph "CFG forar.com.hjg.pngj.chunks.PngChunkIEND.createRawChunk()Lar\/com\/hjg\/pngj\/chunks\/ChunkRaw;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.chunks.ChunkRaw) =  ar.com.hjg.pngj.chunks.ChunkRaw \l0x0002: SGET  (r1 I:byte[]) =  ar.com.hjg.pngj.chunks.ChunkHelper.b_IEND byte[] \l0x0004: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: INVOKE  \l  (r0 I:ar.com.hjg.pngj.chunks.ChunkRaw)\l  (r2 I:int)\l  (r1 I:byte[])\l  (r2 I:boolean)\l ar.com.hjg.pngj.chunks.ChunkRaw.\<init\>(int, byte[], boolean):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: RETURN  (r0 I:ar.com.hjg.pngj.chunks.ChunkRaw) \l}"];
MethodNode[shape=record,label="{public ar.com.hjg.pngj.chunks.ChunkRaw ar.com.hjg.pngj.chunks.PngChunkIEND.createRawChunk((r3 'this' I:ar.com.hjg.pngj.chunks.PngChunkIEND A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

