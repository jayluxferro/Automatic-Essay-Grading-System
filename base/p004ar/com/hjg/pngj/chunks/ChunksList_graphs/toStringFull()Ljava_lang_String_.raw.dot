digraph "CFG forar.com.hjg.pngj.chunks.ChunksList.toStringFull()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0002: INVOKE  (r1 I:java.lang.String) = (r5 I:ar.com.hjg.pngj.chunks.ChunksList) ar.com.hjg.pngj.chunks.ChunksList.toString():java.lang.String type: VIRTUAL \l0x0006: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.\<init\>(java.lang.String):void type: DIRECT \l0x0009: CONST_STR  (r1 I:java.lang.String) =  \"\l Read:\l\" \l0x000b: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x000e: IGET  (r1 I:java.util.List\<ar.com.hjg.pngj.chunks.PngChunk\>) = (r5 I:ar.com.hjg.pngj.chunks.ChunksList) ar.com.hjg.pngj.chunks.ChunksList.chunks java.util.List \l0x0010: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|0x0018: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0041 \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x001e: CHECK_CAST  (r2 I:ar.com.hjg.pngj.chunks.PngChunk) = (ar.com.hjg.pngj.chunks.PngChunk) (r2 I:?[OBJECT, ARRAY]) \l0x0020: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0023: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0025: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0028: CONST_STR  (r4 I:java.lang.String) =  \" G=\" \l0x002a: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002d: INVOKE  (r2 I:int) = (r2 I:ar.com.hjg.pngj.chunks.PngChunk) ar.com.hjg.pngj.chunks.PngChunk.getChunkGroup():int type: VIRTUAL \l0x0031: INVOKE  (r3 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0034: CONST_STR  (r2 I:java.lang.String) =  \"\l\" \l0x0036: INVOKE  (r3 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0039: INVOKE  (r2 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003d: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0041|0x0041: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0045|0x0045: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String ar.com.hjg.pngj.chunks.ChunksList.toStringFull((r5 'this' I:ar.com.hjg.pngj.chunks.ChunksList A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

