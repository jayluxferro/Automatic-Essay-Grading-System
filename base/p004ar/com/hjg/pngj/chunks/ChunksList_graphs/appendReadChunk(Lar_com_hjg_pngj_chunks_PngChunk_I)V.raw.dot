digraph "CFG forar.com.hjg.pngj.chunks.ChunksList.appendReadChunk(Lar\/com\/hjg\/pngj\/chunks\/PngChunk;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:ar.com.hjg.pngj.chunks.PngChunk), (r2 I:int) ar.com.hjg.pngj.chunks.PngChunk.setChunkGroup(int):void type: VIRTUAL \l0x0003: IGET  (r2 I:java.util.List\<ar.com.hjg.pngj.chunks.PngChunk\>) = (r0 I:ar.com.hjg.pngj.chunks.ChunksList) ar.com.hjg.pngj.chunks.ChunksList.chunks java.util.List \l0x0005: INVOKE  (r2 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0008: IGET  (r1 I:java.lang.String) = (r1 I:ar.com.hjg.pngj.chunks.PngChunk) ar.com.hjg.pngj.chunks.PngChunk.id java.lang.String \l0x000a: CONST_STR  (r2 I:java.lang.String) =  \"PLTE\" \l0x000c: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0013: IPUT  (r1 I:boolean), (r0 I:ar.com.hjg.pngj.chunks.ChunksList) ar.com.hjg.pngj.chunks.ChunksList.withPlte boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.chunks.ChunksList.appendReadChunk((r0 'this' I:ar.com.hjg.pngj.chunks.ChunksList A[IMMUTABLE_TYPE, THIS]), (r1 I:ar.com.hjg.pngj.chunks.PngChunk A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

