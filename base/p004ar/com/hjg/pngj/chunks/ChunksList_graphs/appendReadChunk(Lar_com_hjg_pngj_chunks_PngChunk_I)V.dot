digraph "CFG forar.com.hjg.pngj.chunks.ChunksList.appendReadChunk(Lar\/com\/hjg\/pngj\/chunks\/PngChunk;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.setChunkGroup(r2)\lr0.chunks.add(r1)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|if (r1.f58id.equals(\"PLTE\") == false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|r0.withPlte = true\l}"];
Node_3 [shape=record,label="{3\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.chunks.ChunksList.appendReadChunk((r0v0 'this' ar.com.hjg.pngj.chunks.ChunksList A[IMMUTABLE_TYPE, THIS]), (r1v0 ar.com.hjg.pngj.chunks.PngChunk A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

