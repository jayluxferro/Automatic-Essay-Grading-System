digraph "CFG forar.com.hjg.pngj.chunks.PngChunkTRNS.setIndexEntryAsTransparent(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r4.imgInfo.indexed == false) goto L_0x0021\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|int[] r0 = new int[]\{r5 + 1\}\lr4.paletteAlpha = r0\lr0 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|LOOP_START\lPHI: r0 \l  PHI: (r0v6 int) = (r0v5 int), (r0v8 int) binds: [B:2:0x0006, B:4:0x0013] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0011\-\>B:4:0x0013\l|if (r0 \>= r5) goto L_0x001c\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|LOOP_END\lLOOP:0: B:3:0x0011\-\>B:4:0x0013\l|r4.paletteAlpha[r0] = 255\lint r0 = r0 + 1\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|r4.paletteAlpha[r5] = 0\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021}"];
Node_8 [shape=record,label="{8\:\ 0x0028|throw new p004ar.com.hjg.pngj.PngjException(\"only indexed images support this\")\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.chunks.PngChunkTRNS.setIndexEntryAsTransparent((r4v0 'this' ar.com.hjg.pngj.chunks.PngChunkTRNS A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_3;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_5;
}

