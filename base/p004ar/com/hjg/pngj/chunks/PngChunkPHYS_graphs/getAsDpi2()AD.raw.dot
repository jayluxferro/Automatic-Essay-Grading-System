digraph "CFG forar.com.hjg.pngj.chunks.PngChunkPHYS.getAsDpi2()[D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r7 I:ar.com.hjg.pngj.chunks.PngChunkPHYS) ar.com.hjg.pngj.chunks.PngChunkPHYS.units int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0003: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: NEW_ARRAY  (r0 I:double[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: double[] \l0x0008: FILL_ARRAY  (r0 I:?[long, double][]), data: [\-4616189618054758400, \-4616189618054758400] \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: RETURN  (r0 I:double[]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: NEW_ARRAY  (r0 I:double[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: double[] \l0x000e: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000f: IGET  (r3 I:long) = (r7 I:ar.com.hjg.pngj.chunks.PngChunkPHYS) ar.com.hjg.pngj.chunks.PngChunkPHYS.pixelsxUnitX long \l0x0011: CAST  (r3 I:double) = (double) (r3 I:long) \l0x0012: CONST  (r5 I:?[long, double]) = \l  (4582978272962677414(0x3f9a027525460aa6, double:0.0254) ?[long, double])\l \l0x0017: ARITH  (r3 I:double) = (r3 I:double) * (r5 I:double) \l0x0019: APUT  \l  (r0 I:?[long, double][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[long, double])\l \l0x001b: IGET  (r3 I:long) = (r7 I:ar.com.hjg.pngj.chunks.PngChunkPHYS) ar.com.hjg.pngj.chunks.PngChunkPHYS.pixelsxUnitY long \l0x001d: CAST  (r3 I:double) = (double) (r3 I:long) \l0x001e: ARITH  (r3 I:double) = (r3 I:double) * (r5 I:double) \l0x0020: APUT  \l  (r0 I:?[long, double][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[long, double])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: RETURN  (r0 I:double[]) \l}"];
MethodNode[shape=record,label="{public double[] ar.com.hjg.pngj.chunks.PngChunkPHYS.getAsDpi2((r7 'this' I:ar.com.hjg.pngj.chunks.PngChunkPHYS A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

