digraph "CFG forar.com.hjg.pngj.chunks.PngChunkPHYS.getAsDpi()D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r4.units != 1) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if ((r4.pixelsxUnitX \> r4.pixelsxUnitY ? 1 : (r4.pixelsxUnitX == r4.pixelsxUnitY ? 0 : \-1)) == 0) goto L_0x000e\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e}"];
Node_5 [shape=record,label="{5\:\ 0x0018|RETURN\l|return ((double) r4.pixelsxUnitX) * 0.0254d\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return \-1.0d\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return \-1.0d\l}"];
MethodNode[shape=record,label="{public double ar.com.hjg.pngj.chunks.PngChunkPHYS.getAsDpi((r4v0 'this' ar.com.hjg.pngj.chunks.PngChunkPHYS A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_5;
}

