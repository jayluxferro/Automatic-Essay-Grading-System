digraph "CFG forar.com.hjg.pngj.chunks.PngChunkITXT.createRawChunk()Lar\/com\/hjg\/pngj\/chunks\/ChunkRaw;" {
subgraph cluster_Region_67295912 {
label = "R(1:(2:(1:14)|(1:(4:5|(1:7)|8|9))))";
node [shape=record,color=blue];
subgraph cluster_Region_449423300 {
label = "R(2:(1:14)|(1:(4:5|(1:7)|8|9)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_793313009 {
label = "IF [B:1:0x0002, B:3:0x000e] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4.key == null) goto L_0x0067\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|ADDED_TO_REGION\l|if (r4.key.trim().length() == 0) goto L_0x0067\l}"];
subgraph cluster_Region_401549236 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x006e|throw new p004ar.com.hjg.pngj.PngjException(\"Text chunk key must be non empty\")\l}"];
}
}
subgraph cluster_Region_95058043 {
label = "R(1:(4:5|(1:7)|8|9))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1376389261 {
label = "Try: R(4:5|(1:7)|8|9) catches: R(2:10|12)";
node [shape=record,color=blue];
subgraph cluster_Region_491630372 {
label = "R(4:5|(1:7)|8|9)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ IOException \-\> 0x0060 \}\lSplitter:B:4:0x0010\l|java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream r0 = new java.io.ByteArrayOutputStream()     \/\/ Catch:\{ IOException \-\> 0x0060 \}\lr0.write(p004ar.com.hjg.pngj.chunks.ChunkHelper.toBytes(r4.key))     \/\/ Catch:\{ IOException \-\> 0x0060 \}\lr0.write(0)     \/\/ Catch:\{ IOException \-\> 0x0060 \}\lr0.write(r4.compressed ? 1 : 0)     \/\/ Catch:\{ IOException \-\> 0x0060 \}\lr0.write(0)     \/\/ Catch:\{ IOException \-\> 0x0060 \}\lr0.write(p004ar.com.hjg.pngj.chunks.ChunkHelper.toBytes(r4.langTag))     \/\/ Catch:\{ IOException \-\> 0x0060 \}\lr0.write(0)     \/\/ Catch:\{ IOException \-\> 0x0060 \}\lr0.write(p004ar.com.hjg.pngj.chunks.ChunkHelper.toBytesUTF8(r4.translatedTag))     \/\/ Catch:\{ IOException \-\> 0x0060 \}\lr0.write(0)     \/\/ Catch:\{ IOException \-\> 0x0060 \}\lbyte[] byte[] r2 = p004ar.com.hjg.pngj.chunks.ChunkHelper.toBytesUTF8(r4.val)     \/\/ Catch:\{ IOException \-\> 0x0060 \}\l}"];
subgraph cluster_IfRegion_987614027 {
label = "IF [B:6:0x004a] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x004a|Catch:\{ IOException \-\> 0x0060 \}\l|if (r4.compressed == true) goto L_0x004c     \/\/ Catch:\{ IOException \-\> 0x0060 \}\l}"];
subgraph cluster_Region_1159080121 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x004c|Catch:\{ IOException \-\> 0x0060 \}\l|byte[] r2 = p004ar.com.hjg.pngj.chunks.ChunkHelper.compressBytes(r2, true)     \/\/ Catch:\{ IOException \-\> 0x0060 \}\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0051|Catch:\{ IOException \-\> 0x0060 \}\lPHI: r2 \l  PHI: (r2v7 byte[]) = (r2v6 byte[]), (r2v9 byte[]) binds: [B:6:0x004a, B:7:0x004c] A[DONT_GENERATE, DONT_INLINE]\l|r0.write(r2)     \/\/ Catch:\{ IOException \-\> 0x0060 \}\lbyte[] byte[] r0 = r0.toByteArray()     \/\/ Catch:\{ IOException \-\> 0x0060 \}\lar.com.hjg.pngj.chunks.ChunkRaw p004ar.com.hjg.pngj.chunks.ChunkRaw r1 = createEmptyChunk(r0.length, false)     \/\/ Catch:\{ IOException \-\> 0x0060 \}\lr1.data = r0     \/\/ Catch:\{ IOException \-\> 0x0060 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x005f|RETURN\l|return r1\l}"];
}
subgraph cluster_Region_1424070947 {
label = "R(2:10|12) | ExcHandler: IOException (r0v5 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0060|ExcHandler: IOException (r0v5 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:4:0x0010\l}"];
Node_12 [shape=record,label="{12\:\ 0x0066|throw new p004ar.com.hjg.pngj.PngjException((java.lang.Throwable) r0)\l}"];
}
}
}
}
}
subgraph cluster_Region_1424070947 {
label = "R(2:10|12) | ExcHandler: IOException (r0v5 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0060|ExcHandler: IOException (r0v5 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:4:0x0010\l}"];
Node_12 [shape=record,label="{12\:\ 0x0066|throw new p004ar.com.hjg.pngj.PngjException((java.lang.Throwable) r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0010|SYNTHETIC\lSplitter:B:4:0x0010\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0061}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0067}"];
MethodNode[shape=record,label="{public ar.com.hjg.pngj.chunks.ChunkRaw ar.com.hjg.pngj.chunks.PngChunkITXT.createRawChunk((r4v0 'this' ar.com.hjg.pngj.chunks.PngChunkITXT A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_11;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
}

