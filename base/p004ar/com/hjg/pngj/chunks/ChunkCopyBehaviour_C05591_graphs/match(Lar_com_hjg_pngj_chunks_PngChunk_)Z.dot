digraph "CFG forar.com.hjg.pngj.chunks.ChunkCopyBehaviour.1.match(Lar\/com\/hjg\/pngj\/chunks\/PngChunk;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r6.crit == false) goto L_0x002f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007}"];
Node_3 [shape=record,label="{3\:\ 0x000f|if (r6.f58id.equals(\"PLTE\") == false) goto L_?\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011}"];
Node_5 [shape=record,label="{5\:\ 0x0015|if (r2.indexed == false) goto L_0x0020\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017}"];
Node_7 [shape=record,label="{7\:\ 0x001d|if (p004ar.com.hjg.pngj.chunks.ChunkCopyBehaviour.access$000(r1, 1) == false) goto L_0x0020\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|RETURN\l|return true\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020}"];
Node_10 [shape=record,label="{10\:\ 0x0024|if (r2.greyscale != false) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026}"];
Node_12 [shape=record,label="{12\:\ 0x002c|if (p004ar.com.hjg.pngj.chunks.ChunkCopyBehaviour.access$000(r1, 8) == false) goto L_?\l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|RETURN\l|return true\l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|boolean r0 = r6 instanceof p004ar.com.hjg.pngj.chunks.PngChunkTextVar\lboolean r3 = r6.safe\l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|if (p004ar.com.hjg.pngj.chunks.ChunkCopyBehaviour.access$000(r1, 8) == false) goto L_0x003c\l}"];
Node_16 [shape=record,label="{16\:\ 0x003b|RETURN\l|return true\l}"];
Node_17 [shape=record,label="{17\:\ 0x003c|if (r3 == false) goto L_0x0048\l}"];
Node_18 [shape=record,label="{18\:\ 0x003e}"];
Node_19 [shape=record,label="{19\:\ 0x0045|if (p004ar.com.hjg.pngj.chunks.ChunkCopyBehaviour.access$000(r1, 4) == false) goto L_0x0048\l}"];
Node_20 [shape=record,label="{20\:\ 0x0047|RETURN\l|return true\l}"];
Node_21 [shape=record,label="{21\:\ 0x0048}"];
Node_22 [shape=record,label="{22\:\ 0x0050|if (r6.f58id.equals(\"tRNS\") == false) goto L_0x005d\l}"];
Node_23 [shape=record,label="{23\:\ 0x0052}"];
Node_24 [shape=record,label="{24\:\ 0x005a|if (p004ar.com.hjg.pngj.chunks.ChunkCopyBehaviour.access$000(r1, 64) == false) goto L_0x005d\l}"];
Node_25 [shape=record,label="{25\:\ 0x005c|RETURN\l|return true\l}"];
Node_26 [shape=record,label="{26\:\ 0x005d}"];
Node_27 [shape=record,label="{27\:\ 0x0065|if (r6.f58id.equals(\"pHYs\") == false) goto L_0x0072\l}"];
Node_28 [shape=record,label="{28\:\ 0x0067}"];
Node_29 [shape=record,label="{29\:\ 0x006f|if (p004ar.com.hjg.pngj.chunks.ChunkCopyBehaviour.access$000(r1, 16) == false) goto L_0x0072\l}"];
Node_30 [shape=record,label="{30\:\ 0x0071|RETURN\l|return true\l}"];
Node_31 [shape=record,label="{31\:\ 0x0072|if (r0 == false) goto L_0x007f\l}"];
Node_32 [shape=record,label="{32\:\ 0x0074}"];
Node_33 [shape=record,label="{33\:\ 0x007c|if (p004ar.com.hjg.pngj.chunks.ChunkCopyBehaviour.access$000(r1, 32) == false) goto L_0x007f\l}"];
Node_34 [shape=record,label="{34\:\ 0x007e|RETURN\l|return true\l}"];
Node_35 [shape=record,label="{35\:\ 0x007f}"];
Node_36 [shape=record,label="{36\:\ 0x0087|if (p004ar.com.hjg.pngj.chunks.ChunkCopyBehaviour.access$000(r1, 256) == false) goto L_0x00a6\l}"];
Node_37 [shape=record,label="{37\:\ 0x0089}"];
Node_38 [shape=record,label="{38\:\ 0x008d|if (p004ar.com.hjg.pngj.chunks.ChunkHelper.isUnknown(r6) != false) goto L_0x00a6\l}"];
Node_39 [shape=record,label="{39\:\ 0x008f|if (r0 != false) goto L_0x00a6\l}"];
Node_40 [shape=record,label="{40\:\ 0x0091}"];
Node_41 [shape=record,label="{41\:\ 0x0099|if (r6.f58id.equals(\"hIST\") != false) goto L_0x00a6\l}"];
Node_42 [shape=record,label="{42\:\ 0x009b}"];
Node_43 [shape=record,label="{43\:\ 0x00a3|if (r6.f58id.equals(\"tIME\") != false) goto L_0x00a6\l}"];
Node_44 [shape=record,label="{44\:\ 0x00a5|RETURN\l|return true\l}"];
Node_45 [shape=record,label="{45\:\ 0x00a6}"];
Node_46 [shape=record,label="{46\:\ 0x00ae|if (p004ar.com.hjg.pngj.chunks.ChunkCopyBehaviour.access$000(r1, 128) == false) goto L_?\l}"];
Node_47 [shape=record,label="{47\:\ 0x00b0}"];
Node_48 [shape=record,label="{48\:\ 0x00b4|if (p004ar.com.hjg.pngj.chunks.ChunkHelper.isUnknown(r6) == false) goto L_?\l}"];
Node_49 [shape=record,label="{49\:\ 0x00b6|RETURN\l|return true\l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_52 [shape=record,label="{52\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_53 [shape=record,label="{53\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_54 [shape=record,label="{54\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean ar.com.hjg.pngj.chunks.ChunkCopyBehaviour.1.match((r5v0 'this' ar.com.hjg.pngj.chunks.ChunkCopyBehaviour$1 A[IMMUTABLE_TYPE, THIS]), (r6v0 ar.com.hjg.pngj.chunks.PngChunk A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_50;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_51;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_52;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_45;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_45;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_45;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_45;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_53;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_54;
}

