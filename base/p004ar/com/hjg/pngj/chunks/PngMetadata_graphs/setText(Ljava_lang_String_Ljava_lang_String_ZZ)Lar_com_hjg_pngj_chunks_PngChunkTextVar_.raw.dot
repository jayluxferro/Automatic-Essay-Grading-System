digraph "CFG forar.com.hjg.pngj.chunks.PngMetadata.setText(Ljava\/lang\/String;Ljava\/lang\/String;ZZ)Lar\/com\/hjg\/pngj\/chunks\/PngChunkTextVar;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000d \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: NEW_INSTANCE  (r1 I:ar.com.hjg.pngj.PngjException) =  ar.com.hjg.pngj.PngjException \l0x0007: CONST_STR  (r2 I:java.lang.String) =  \"cannot compress non latin text\" \l0x0009: INVOKE  \l  (r1 I:ar.com.hjg.pngj.PngjException)\l  (r2 I:java.lang.String)\l ar.com.hjg.pngj.PngjException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0025 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001b \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: NEW_INSTANCE  (r3 I:ar.com.hjg.pngj.chunks.PngChunkZTXT) =  ar.com.hjg.pngj.chunks.PngChunkZTXT \l0x0013: IGET  (r4 I:ar.com.hjg.pngj.chunks.ChunksList) = (r0 I:ar.com.hjg.pngj.chunks.PngMetadata) ar.com.hjg.pngj.chunks.PngMetadata.chunkList ar.com.hjg.pngj.chunks.ChunksList \l0x0015: IGET  (r4 I:ar.com.hjg.pngj.ImageInfo) = (r4 I:ar.com.hjg.pngj.chunks.ChunksList) ar.com.hjg.pngj.chunks.ChunksList.imageInfo ar.com.hjg.pngj.ImageInfo \l0x0017: INVOKE  \l  (r3 I:ar.com.hjg.pngj.chunks.PngChunkZTXT)\l  (r4 I:ar.com.hjg.pngj.ImageInfo)\l ar.com.hjg.pngj.chunks.PngChunkZTXT.\<init\>(ar.com.hjg.pngj.ImageInfo):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: NEW_INSTANCE  (r3 I:ar.com.hjg.pngj.chunks.PngChunkTEXT) =  ar.com.hjg.pngj.chunks.PngChunkTEXT \l0x001d: IGET  (r4 I:ar.com.hjg.pngj.chunks.ChunksList) = (r0 I:ar.com.hjg.pngj.chunks.PngMetadata) ar.com.hjg.pngj.chunks.PngMetadata.chunkList ar.com.hjg.pngj.chunks.ChunksList \l0x001f: IGET  (r4 I:ar.com.hjg.pngj.ImageInfo) = (r4 I:ar.com.hjg.pngj.chunks.ChunksList) ar.com.hjg.pngj.chunks.ChunksList.imageInfo ar.com.hjg.pngj.ImageInfo \l0x0021: INVOKE  \l  (r3 I:ar.com.hjg.pngj.chunks.PngChunkTEXT)\l  (r4 I:ar.com.hjg.pngj.ImageInfo)\l ar.com.hjg.pngj.chunks.PngChunkTEXT.\<init\>(ar.com.hjg.pngj.ImageInfo):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: NEW_INSTANCE  (r3 I:ar.com.hjg.pngj.chunks.PngChunkITXT) =  ar.com.hjg.pngj.chunks.PngChunkITXT \l0x0027: IGET  (r4 I:ar.com.hjg.pngj.chunks.ChunksList) = (r0 I:ar.com.hjg.pngj.chunks.PngMetadata) ar.com.hjg.pngj.chunks.PngMetadata.chunkList ar.com.hjg.pngj.chunks.ChunksList \l0x0029: IGET  (r4 I:ar.com.hjg.pngj.ImageInfo) = (r4 I:ar.com.hjg.pngj.chunks.ChunksList) ar.com.hjg.pngj.chunks.ChunksList.imageInfo ar.com.hjg.pngj.ImageInfo \l0x002b: INVOKE  \l  (r3 I:ar.com.hjg.pngj.chunks.PngChunkITXT)\l  (r4 I:ar.com.hjg.pngj.ImageInfo)\l ar.com.hjg.pngj.chunks.PngChunkITXT.\<init\>(ar.com.hjg.pngj.ImageInfo):void type: DIRECT \l0x002e: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x002f: CHECK_CAST  (r4 I:ar.com.hjg.pngj.chunks.PngChunkITXT) = (ar.com.hjg.pngj.chunks.PngChunkITXT) (r4 I:?[OBJECT, ARRAY]) \l0x0031: INVOKE  \l  (r4 I:ar.com.hjg.pngj.chunks.PngChunkITXT)\l  (r1 I:java.lang.String)\l ar.com.hjg.pngj.chunks.PngChunkITXT.setLangtag(java.lang.String):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: INVOKE  \l  (r3 I:ar.com.hjg.pngj.chunks.PngChunkTextVar)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l ar.com.hjg.pngj.chunks.PngChunkTextVar.setKeyVal(java.lang.String, java.lang.String):void type: VIRTUAL \l0x0037: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0038: INVOKE  \l  (r0 I:ar.com.hjg.pngj.chunks.PngMetadata)\l  (r3 I:ar.com.hjg.pngj.chunks.PngChunk)\l  (r1 I:boolean)\l ar.com.hjg.pngj.chunks.PngMetadata.queueChunk(ar.com.hjg.pngj.chunks.PngChunk, boolean):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|0x003b: RETURN  (r3 I:ar.com.hjg.pngj.chunks.PngChunkTextVar) \l}"];
MethodNode[shape=record,label="{public ar.com.hjg.pngj.chunks.PngChunkTextVar ar.com.hjg.pngj.chunks.PngMetadata.setText((r0 'this' I:ar.com.hjg.pngj.chunks.PngMetadata A[IMMUTABLE_TYPE, THIS]), (r1 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_3;
Node_1 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

