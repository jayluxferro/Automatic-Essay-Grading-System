digraph "CFG forar.com.hjg.pngj.chunks.PngMetadata.getDpi()[D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:ar.com.hjg.pngj.chunks.ChunksList) = (r3 I:ar.com.hjg.pngj.chunks.PngMetadata) ar.com.hjg.pngj.chunks.PngMetadata.chunkList ar.com.hjg.pngj.chunks.ChunksList \l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"pHYs\" \l0x0004: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: INVOKE  (r0 I:ar.com.hjg.pngj.chunks.PngChunk) = \l  (r0 I:ar.com.hjg.pngj.chunks.ChunksList)\l  (r1 I:java.lang.String)\l  (r2 I:boolean)\l ar.com.hjg.pngj.chunks.ChunksList.getById1(java.lang.String, boolean):ar.com.hjg.pngj.chunks.PngChunk type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000c: NEW_ARRAY  (r0 I:double[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: double[] \l0x000e: FILL_ARRAY  (r0 I:?[long, double][]), data: [\-4616189618054758400, \-4616189618054758400] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: RETURN  (r0 I:double[]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: CHECK_CAST  (r0 I:ar.com.hjg.pngj.chunks.PngChunkPHYS) = (ar.com.hjg.pngj.chunks.PngChunkPHYS) (r0 I:?[OBJECT, ARRAY]) \l0x0014: INVOKE  (r0 I:double[]) = (r0 I:ar.com.hjg.pngj.chunks.PngChunkPHYS) ar.com.hjg.pngj.chunks.PngChunkPHYS.getAsDpi2():double[] type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: RETURN  (r0 I:double[]) \l}"];
MethodNode[shape=record,label="{public double[] ar.com.hjg.pngj.chunks.PngMetadata.getDpi((r3 'this' I:ar.com.hjg.pngj.chunks.PngMetadata A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

