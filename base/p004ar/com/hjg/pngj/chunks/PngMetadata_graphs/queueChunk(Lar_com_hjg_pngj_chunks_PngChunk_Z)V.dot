digraph "CFG forar.com.hjg.pngj.chunks.PngMetadata.queueChunk(Lar\/com\/hjg\/pngj\/chunks\/PngChunk;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|ar.com.hjg.pngj.chunks.ChunksListForWrite r0 = getChunkListW()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r2.readonly != false) goto L_0x001a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|if (r4 == false) goto L_0x0016\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|p004ar.com.hjg.pngj.chunks.ChunkHelper.trimList(r0.getQueuedChunks(), new p004ar.com.hjg.pngj.chunks.PngMetadata.C05651(r2))\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|r0.queue(r3)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a}"];
Node_7 [shape=record,label="{7\:\ 0x0021|throw new p004ar.com.hjg.pngj.PngjException(\"cannot set chunk : readonly metadata\")\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.chunks.PngMetadata.queueChunk((r2v0 'this' ar.com.hjg.pngj.chunks.PngMetadata A[IMMUTABLE_TYPE, THIS]), (r3v0 ar.com.hjg.pngj.chunks.PngChunk A[DONT_INLINE, IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

