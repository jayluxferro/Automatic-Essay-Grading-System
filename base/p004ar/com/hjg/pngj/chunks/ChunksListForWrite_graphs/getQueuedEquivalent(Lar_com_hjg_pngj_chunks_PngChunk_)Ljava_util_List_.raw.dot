digraph "CFG forar.com.hjg.pngj.chunks.ChunksListForWrite.getQueuedEquivalent(Lar\/com\/hjg\/pngj\/chunks\/PngChunk;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<ar.com.hjg.pngj.chunks.PngChunk\>) = (r2 I:ar.com.hjg.pngj.chunks.ChunksListForWrite) ar.com.hjg.pngj.chunks.ChunksListForWrite.queuedChunks java.util.List \l0x0002: NEW_INSTANCE  (r1 I:ar.com.hjg.pngj.chunks.ChunksListForWrite$1) =  ar.com.hjg.pngj.chunks.ChunksListForWrite$1 \l0x0004: INVOKE  \l  (r1 I:ar.com.hjg.pngj.chunks.ChunksListForWrite$1)\l  (r2 I:ar.com.hjg.pngj.chunks.ChunksListForWrite)\l  (r3 I:ar.com.hjg.pngj.chunks.PngChunk)\l ar.com.hjg.pngj.chunks.ChunksListForWrite.1.\<init\>(ar.com.hjg.pngj.chunks.ChunksListForWrite, ar.com.hjg.pngj.chunks.PngChunk):void type: DIRECT \l0x0007: INVOKE  (r3 I:java.util.List) = \l  (r0 I:java.util.List)\l  (r1 I:ar.com.hjg.pngj.chunks.ChunkPredicate)\l ar.com.hjg.pngj.chunks.ChunkHelper.filterList(java.util.List, ar.com.hjg.pngj.chunks.ChunkPredicate):java.util.List type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: RETURN  (r3 I:java.util.List\<ar.com.hjg.pngj.chunks.PngChunk\>) \l}"];
MethodNode[shape=record,label="{public java.util.List\<ar.com.hjg.pngj.chunks.PngChunk\> ar.com.hjg.pngj.chunks.ChunksListForWrite.getQueuedEquivalent((r2 'this' I:ar.com.hjg.pngj.chunks.ChunksListForWrite A[IMMUTABLE_TYPE, THIS]), (r3 I:ar.com.hjg.pngj.chunks.PngChunk A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lar\/com\/hjg\/pngj\/chunks\/PngChunk;, ), Ljava\/util\/List\<, Lar\/com\/hjg\/pngj\/chunks\/PngChunk;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

