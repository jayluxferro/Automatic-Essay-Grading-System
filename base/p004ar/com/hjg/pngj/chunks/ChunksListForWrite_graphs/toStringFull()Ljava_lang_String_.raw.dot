digraph "CFG forar.com.hjg.pngj.chunks.ChunksListForWrite.toStringFull()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0002: INVOKE  (r1 I:java.lang.String) = (r5 I:ar.com.hjg.pngj.chunks.ChunksListForWrite) ar.com.hjg.pngj.chunks.ChunksListForWrite.toString():java.lang.String type: VIRTUAL \l0x0006: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.\<init\>(java.lang.String):void type: DIRECT \l0x0009: CONST_STR  (r1 I:java.lang.String) =  \"\l Written:\l\" \l0x000b: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x000e: INVOKE  (r1 I:java.util.List) = (r5 I:ar.com.hjg.pngj.chunks.ChunksListForWrite) ar.com.hjg.pngj.chunks.ChunksListForWrite.getChunks():java.util.List type: VIRTUAL \l0x0012: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|0x0016: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|0x001a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0043 \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0020: CHECK_CAST  (r2 I:ar.com.hjg.pngj.chunks.PngChunk) = (ar.com.hjg.pngj.chunks.PngChunk) (r2 I:?[OBJECT, ARRAY]) \l0x0022: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0025: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0027: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002a: CONST_STR  (r4 I:java.lang.String) =  \" G=\" \l0x002c: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002f: INVOKE  (r2 I:int) = (r2 I:ar.com.hjg.pngj.chunks.PngChunk) ar.com.hjg.pngj.chunks.PngChunk.getChunkGroup():int type: VIRTUAL \l0x0033: INVOKE  (r3 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0036: CONST_STR  (r2 I:java.lang.String) =  \"\l\" \l0x0038: INVOKE  (r3 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003b: INVOKE  (r2 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003f: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0043|0x0043: IGET  (r1 I:java.util.List\<ar.com.hjg.pngj.chunks.PngChunk\>) = (r5 I:ar.com.hjg.pngj.chunks.ChunksListForWrite) ar.com.hjg.pngj.chunks.ChunksListForWrite.queuedChunks java.util.List \l0x0045: INVOKE  (r1 I:boolean) = (r1 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0049|0x0049: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x006b \l}"];
Node_6 [shape=record,label="{6\:\ 0x004b|0x004b: CONST_STR  (r1 I:java.lang.String) =  \" Queued:\l\" \l0x004d: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0050: IGET  (r1 I:java.util.List\<ar.com.hjg.pngj.chunks.PngChunk\>) = (r5 I:ar.com.hjg.pngj.chunks.ChunksListForWrite) ar.com.hjg.pngj.chunks.ChunksListForWrite.queuedChunks java.util.List \l0x0052: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0056|0x0056: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x005a|0x005a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x006b \l}"];
Node_9 [shape=record,label="{9\:\ 0x005c|0x005c: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0060: CHECK_CAST  (r2 I:ar.com.hjg.pngj.chunks.PngChunk) = (ar.com.hjg.pngj.chunks.PngChunk) (r2 I:?[OBJECT, ARRAY]) \l0x0062: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0065: CONST_STR  (r2 I:java.lang.String) =  \"\l\" \l0x0067: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x006b|0x006b: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x006f|0x006f: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String ar.com.hjg.pngj.chunks.ChunksListForWrite.toStringFull((r5 'this' I:ar.com.hjg.pngj.chunks.ChunksListForWrite A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_7;
Node_10 -> Node_11;
}

