digraph "CFG forar.com.hjg.pngj.chunks.PngChunk.write(Ljava\/io\/OutputStream;)V" {
subgraph cluster_Region_405698962 {
label = "R(2:(1:4)|(2:(2:7|8)|(2:9|10)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1530754291 {
label = "IF [B:1:0x0002, B:3:0x0008] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|ADDED_TO_REGION\l|if (r2.raw == null) goto L_0x000a\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|ADDED_TO_REGION\l|if (r2.raw.data == null) goto L_0x000a\l}"];
subgraph cluster_Region_1834691117 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|r2.raw = createRawChunk()\l}"];
}
}
subgraph cluster_Region_1056212162 {
label = "R(2:(2:7|8)|(2:9|10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1442682983 {
label = "IF [B:6:0x0012] THEN: R(2:7|8) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0012|if (r2.raw != null) goto L_0x0014\l}"];
subgraph cluster_Region_1708647623 {
label = "R(2:7|8)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0014|r2.raw.writeChunk(r3)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1365880850 {
label = "R(2:9|10)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001a}"];
Node_10 [shape=record,label="{10\:\ 0x0030|throw new p004ar.com.hjg.pngj.PngjExceptionInternal(\"null chunk ! creation failed for \" + r2)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0010}"];
MethodNode[shape=record,label="{final void ar.com.hjg.pngj.chunks.PngChunk.write((r2v0 'this' ar.com.hjg.pngj.chunks.PngChunk A[IMMUTABLE_TYPE, THIS]), (r3v0 java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_5 -> Node_6;
}

