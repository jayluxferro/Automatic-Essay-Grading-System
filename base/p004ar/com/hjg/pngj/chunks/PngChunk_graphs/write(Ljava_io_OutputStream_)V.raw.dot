digraph "CFG forar.com.hjg.pngj.chunks.PngChunk.write(Ljava\/io\/OutputStream;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:ar.com.hjg.pngj.chunks.ChunkRaw) = (r2 I:ar.com.hjg.pngj.chunks.PngChunk) ar.com.hjg.pngj.chunks.PngChunk.raw ar.com.hjg.pngj.chunks.ChunkRaw \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:ar.com.hjg.pngj.chunks.ChunkRaw) = (r2 I:ar.com.hjg.pngj.chunks.PngChunk) ar.com.hjg.pngj.chunks.PngChunk.raw ar.com.hjg.pngj.chunks.ChunkRaw \l0x0006: IGET  (r0 I:byte[]) = (r0 I:ar.com.hjg.pngj.chunks.ChunkRaw) ar.com.hjg.pngj.chunks.ChunkRaw.data byte[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r0 I:ar.com.hjg.pngj.chunks.ChunkRaw) = (r2 I:ar.com.hjg.pngj.chunks.PngChunk) ar.com.hjg.pngj.chunks.PngChunk.createRawChunk():ar.com.hjg.pngj.chunks.ChunkRaw type: VIRTUAL \l0x000e: IPUT  \l  (r0 I:ar.com.hjg.pngj.chunks.ChunkRaw)\l  (r2 I:ar.com.hjg.pngj.chunks.PngChunk)\l ar.com.hjg.pngj.chunks.PngChunk.raw ar.com.hjg.pngj.chunks.ChunkRaw \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IGET  (r0 I:ar.com.hjg.pngj.chunks.ChunkRaw) = (r2 I:ar.com.hjg.pngj.chunks.PngChunk) ar.com.hjg.pngj.chunks.PngChunk.raw ar.com.hjg.pngj.chunks.ChunkRaw \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IGET  (r0 I:ar.com.hjg.pngj.chunks.ChunkRaw) = (r2 I:ar.com.hjg.pngj.chunks.PngChunk) ar.com.hjg.pngj.chunks.PngChunk.raw ar.com.hjg.pngj.chunks.ChunkRaw \l0x0016: INVOKE  \l  (r0 I:ar.com.hjg.pngj.chunks.ChunkRaw)\l  (r3 I:java.io.OutputStream)\l ar.com.hjg.pngj.chunks.ChunkRaw.writeChunk(java.io.OutputStream):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: NEW_INSTANCE  (r3 I:ar.com.hjg.pngj.PngjExceptionInternal) =  ar.com.hjg.pngj.PngjExceptionInternal \l0x001c: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001e: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0021: CONST_STR  (r1 I:java.lang.String) =  \"null chunk ! creation failed for \" \l0x0023: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0026: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0029: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002d: INVOKE  \l  (r3 I:ar.com.hjg.pngj.PngjExceptionInternal)\l  (r0 I:java.lang.String)\l ar.com.hjg.pngj.PngjExceptionInternal.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|0x0030: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{final void ar.com.hjg.pngj.chunks.PngChunk.write((r2 'this' I:ar.com.hjg.pngj.chunks.PngChunk A[IMMUTABLE_TYPE, THIS]), (r3 I:java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
}

