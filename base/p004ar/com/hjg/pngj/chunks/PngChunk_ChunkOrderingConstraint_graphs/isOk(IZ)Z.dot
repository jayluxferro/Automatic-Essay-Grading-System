digraph "CFG forar.com.hjg.pngj.chunks.PngChunk.ChunkOrderingConstraint.isOk(IZ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r5 != NONE) goto L_0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|RETURN\l|return true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006}"];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r5 != BEFORE_IDAT) goto L_0x0011\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|if (r6 \>= 4) goto L_0x000f\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011}"];
Node_8 [shape=record,label="{8\:\ 0x0014|if (r5 != BEFORE_PLTE_AND_IDAT) goto L_0x001b\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|if (r6 \>= 2) goto L_0x0019\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b}"];
Node_12 [shape=record,label="{12\:\ 0x001d|if (r5 != AFTER_PLTE_BEFORE_IDAT) goto L_0x002b\l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|if (r7 == false) goto L_0x0026\l}"];
Node_14 [shape=record,label="{14\:\ 0x0021|if (r6 \>= 4) goto L_0x0024\l}"];
Node_15 [shape=record,label="{15\:\ 0x0024|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_16 [shape=record,label="{16\:\ 0x0026|if (r6 \>= 4) goto L_0x0024\l}"];
Node_17 [shape=record,label="{17\:\ 0x0028|if (r6 \<= 2) goto L_0x0024\l}"];
Node_18 [shape=record,label="{18\:\ 0x002b|RETURN\l|return false\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean ar.com.hjg.pngj.chunks.PngChunk.ChunkOrderingConstraint.isOk((r5v0 'this' ar.com.hjg.pngj.chunks.PngChunk$ChunkOrderingConstraint A[IMMUTABLE_TYPE, THIS]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_5 -> Node_19[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_9 -> Node_20[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_18;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_14 -> Node_22[style=dashed];
Node_16 -> Node_15;
Node_16 -> Node_17[style=dashed];
Node_17 -> Node_15;
Node_17 -> Node_21[style=dashed];
}

