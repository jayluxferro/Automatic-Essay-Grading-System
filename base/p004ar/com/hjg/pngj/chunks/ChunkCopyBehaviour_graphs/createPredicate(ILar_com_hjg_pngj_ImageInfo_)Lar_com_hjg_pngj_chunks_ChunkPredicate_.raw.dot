digraph "CFG forar.com.hjg.pngj.chunks.ChunkCopyBehaviour.createPredicate(ILar\/com\/hjg\/pngj\/ImageInfo;)Lar\/com\/hjg\/pngj\/chunks\/ChunkPredicate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.chunks.ChunkCopyBehaviour$1) =  ar.com.hjg.pngj.chunks.ChunkCopyBehaviour$1 \l0x0002: INVOKE  \l  (r0 I:ar.com.hjg.pngj.chunks.ChunkCopyBehaviour$1)\l  (r2 I:ar.com.hjg.pngj.ImageInfo)\l  (r1 I:int)\l ar.com.hjg.pngj.chunks.ChunkCopyBehaviour.1.\<init\>(ar.com.hjg.pngj.ImageInfo, int):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: RETURN  (r0 I:ar.com.hjg.pngj.chunks.ChunkPredicate) \l}"];
MethodNode[shape=record,label="{public static ar.com.hjg.pngj.chunks.ChunkPredicate ar.com.hjg.pngj.chunks.ChunkCopyBehaviour.createPredicate((r1 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:ar.com.hjg.pngj.ImageInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

