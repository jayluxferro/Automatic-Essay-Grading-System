digraph "CFG forar.com.hjg.pngj.chunks.ChunkFactory.createChunk(Lar\/com\/hjg\/pngj\/chunks\/ChunkRaw;Lar\/com\/hjg\/pngj\/ImageInfo;)Lar\/com\/hjg\/pngj\/chunks\/PngChunk;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|ar.com.hjg.pngj.chunks.PngChunk r0 = createEmptyChunkKnown(r2.f57id, r3)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r0 != null) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|ar.com.hjg.pngj.chunks.PngChunk r0 = createEmptyChunkExtended(r2.f57id, r3)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|PHI: r0 \l  PHI: (r0v2 ar.com.hjg.pngj.chunks.PngChunk) = (r0v1 ar.com.hjg.pngj.chunks.PngChunk), (r0v7 ar.com.hjg.pngj.chunks.PngChunk) binds: [B:1:0x0006, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != null) goto L_0x0016\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|ar.com.hjg.pngj.chunks.PngChunk r0 = createEmptyChunkUnknown(r2.f57id, r3)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|PHI: r0 \l  PHI: (r0v3 ar.com.hjg.pngj.chunks.PngChunk) = (r0v2 ar.com.hjg.pngj.chunks.PngChunk), (r0v5 ar.com.hjg.pngj.chunks.PngChunk) binds: [B:3:0x000e, B:4:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|r0.setRaw(r2)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|if (r1.parse == false) goto L_0x0024\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d}"];
Node_8 [shape=record,label="{8\:\ 0x001f|if (r2.data == null) goto L_0x0024\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|r0.parseFromRaw(r2)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public final ar.com.hjg.pngj.chunks.PngChunk ar.com.hjg.pngj.chunks.ChunkFactory.createChunk((r1v0 'this' ar.com.hjg.pngj.chunks.ChunkFactory A[IMMUTABLE_TYPE, THIS]), (r2v0 ar.com.hjg.pngj.chunks.ChunkRaw A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 ar.com.hjg.pngj.ImageInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
}

