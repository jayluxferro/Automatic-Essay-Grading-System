digraph "CFG forar.com.hjg.pngj.chunks.ChunkFactory.createChunk(Lar\/com\/hjg\/pngj\/chunks\/ChunkRaw;Lar\/com\/hjg\/pngj\/ImageInfo;)Lar\/com\/hjg\/pngj\/chunks\/PngChunk;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.String) = (r2 I:ar.com.hjg.pngj.chunks.ChunkRaw) ar.com.hjg.pngj.chunks.ChunkRaw.id java.lang.String \l0x0002: INVOKE  (r0 I:ar.com.hjg.pngj.chunks.PngChunk) = \l  (r1 I:ar.com.hjg.pngj.chunks.ChunkFactory)\l  (r0 I:java.lang.String)\l  (r3 I:ar.com.hjg.pngj.ImageInfo)\l ar.com.hjg.pngj.chunks.ChunkFactory.createEmptyChunkKnown(java.lang.String, ar.com.hjg.pngj.ImageInfo):ar.com.hjg.pngj.chunks.PngChunk type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:java.lang.String) = (r2 I:ar.com.hjg.pngj.chunks.ChunkRaw) ar.com.hjg.pngj.chunks.ChunkRaw.id java.lang.String \l0x000a: INVOKE  (r0 I:ar.com.hjg.pngj.chunks.PngChunk) = \l  (r1 I:ar.com.hjg.pngj.chunks.ChunkFactory)\l  (r0 I:java.lang.String)\l  (r3 I:ar.com.hjg.pngj.ImageInfo)\l ar.com.hjg.pngj.chunks.ChunkFactory.createEmptyChunkExtended(java.lang.String, ar.com.hjg.pngj.ImageInfo):ar.com.hjg.pngj.chunks.PngChunk type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IGET  (r0 I:java.lang.String) = (r2 I:ar.com.hjg.pngj.chunks.ChunkRaw) ar.com.hjg.pngj.chunks.ChunkRaw.id java.lang.String \l0x0012: INVOKE  (r0 I:ar.com.hjg.pngj.chunks.PngChunk) = \l  (r1 I:ar.com.hjg.pngj.chunks.ChunkFactory)\l  (r0 I:java.lang.String)\l  (r3 I:ar.com.hjg.pngj.ImageInfo)\l ar.com.hjg.pngj.chunks.ChunkFactory.createEmptyChunkUnknown(java.lang.String, ar.com.hjg.pngj.ImageInfo):ar.com.hjg.pngj.chunks.PngChunk type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: INVOKE  \l  (r0 I:ar.com.hjg.pngj.chunks.PngChunk)\l  (r2 I:ar.com.hjg.pngj.chunks.ChunkRaw)\l ar.com.hjg.pngj.chunks.PngChunk.setRaw(ar.com.hjg.pngj.chunks.ChunkRaw):void type: VIRTUAL \l0x0019: IGET  (r3 I:boolean) = (r1 I:ar.com.hjg.pngj.chunks.ChunkFactory) ar.com.hjg.pngj.chunks.ChunkFactory.parse boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0024 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IGET  (r3 I:byte[]) = (r2 I:ar.com.hjg.pngj.chunks.ChunkRaw) ar.com.hjg.pngj.chunks.ChunkRaw.data byte[] \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0024 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: INVOKE  \l  (r0 I:ar.com.hjg.pngj.chunks.PngChunk)\l  (r2 I:ar.com.hjg.pngj.chunks.ChunkRaw)\l ar.com.hjg.pngj.chunks.PngChunk.parseFromRaw(ar.com.hjg.pngj.chunks.ChunkRaw):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: RETURN  (r0 I:ar.com.hjg.pngj.chunks.PngChunk) \l}"];
MethodNode[shape=record,label="{public final ar.com.hjg.pngj.chunks.PngChunk ar.com.hjg.pngj.chunks.ChunkFactory.createChunk((r1 'this' I:ar.com.hjg.pngj.chunks.ChunkFactory A[IMMUTABLE_TYPE, THIS]), (r2 I:ar.com.hjg.pngj.chunks.ChunkRaw A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:ar.com.hjg.pngj.ImageInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
}

