digraph "CFG forar.com.hjg.pngj.chunks.PngChunkGAMA.createRawChunk()Lar\/com\/hjg\/pngj\/chunks\/ChunkRaw;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0001: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0002: INVOKE  (r0 I:ar.com.hjg.pngj.chunks.ChunkRaw) = \l  (r5 I:ar.com.hjg.pngj.chunks.PngChunkGAMA)\l  (r0 I:int)\l  (r1 I:boolean)\l ar.com.hjg.pngj.chunks.PngChunkGAMA.createEmptyChunk(int, boolean):ar.com.hjg.pngj.chunks.ChunkRaw type: VIRTUAL \l0x0006: IGET  (r1 I:double) = (r5 I:ar.com.hjg.pngj.chunks.PngChunkGAMA) ar.com.hjg.pngj.chunks.PngChunkGAMA.gamma double \l0x0008: CONST  (r3 I:?[long, double]) = \l  (4681608360884174848(0x40f86a0000000000, double:100000.0) ?[long, double])\l \l0x000d: ARITH  (r1 I:double) = (r1 I:double) * (r3 I:double) \l0x000f: CONST  (r3 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x0011: ARITH  (r1 I:double) = (r1 I:double) + (r3 I:double) \l0x0012: CAST  (r1 I:int) = (int) (r1 I:double) \l0x0013: IGET  (r2 I:byte[]) = (r0 I:ar.com.hjg.pngj.chunks.ChunkRaw) ar.com.hjg.pngj.chunks.ChunkRaw.data byte[] \l0x0015: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0016: INVOKE  (r1 I:int), (r2 I:byte[]), (r3 I:int) ar.com.hjg.pngj.PngHelperInternal.writeInt4tobytes(int, byte[], int):void type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: RETURN  (r0 I:ar.com.hjg.pngj.chunks.ChunkRaw) \l}"];
MethodNode[shape=record,label="{public ar.com.hjg.pngj.chunks.ChunkRaw ar.com.hjg.pngj.chunks.PngChunkGAMA.createRawChunk((r5 'this' I:ar.com.hjg.pngj.chunks.PngChunkGAMA A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

