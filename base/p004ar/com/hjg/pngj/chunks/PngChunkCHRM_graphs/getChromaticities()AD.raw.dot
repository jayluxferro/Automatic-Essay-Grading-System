digraph "CFG forar.com.hjg.pngj.chunks.PngChunkCHRM.getChromaticities()[D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0002: NEW_ARRAY  (r0 I:double[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: double[] \l0x0004: IGET  (r1 I:double) = (r4 I:ar.com.hjg.pngj.chunks.PngChunkCHRM) ar.com.hjg.pngj.chunks.PngChunkCHRM.whitex double \l0x0006: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: APUT  \l  (r0 I:?[long, double][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[long, double])\l \l0x0009: IGET  (r1 I:double) = (r4 I:ar.com.hjg.pngj.chunks.PngChunkCHRM) ar.com.hjg.pngj.chunks.PngChunkCHRM.whitey double \l0x000b: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000c: APUT  \l  (r0 I:?[long, double][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[long, double])\l \l0x000e: IGET  (r1 I:double) = (r4 I:ar.com.hjg.pngj.chunks.PngChunkCHRM) ar.com.hjg.pngj.chunks.PngChunkCHRM.redx double \l0x0010: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0011: APUT  \l  (r0 I:?[long, double][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[long, double])\l \l0x0013: IGET  (r1 I:double) = (r4 I:ar.com.hjg.pngj.chunks.PngChunkCHRM) ar.com.hjg.pngj.chunks.PngChunkCHRM.redy double \l0x0015: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0016: APUT  \l  (r0 I:?[long, double][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[long, double])\l \l0x0018: IGET  (r1 I:double) = (r4 I:ar.com.hjg.pngj.chunks.PngChunkCHRM) ar.com.hjg.pngj.chunks.PngChunkCHRM.greenx double \l0x001a: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x001b: APUT  \l  (r0 I:?[long, double][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[long, double])\l \l0x001d: IGET  (r1 I:double) = (r4 I:ar.com.hjg.pngj.chunks.PngChunkCHRM) ar.com.hjg.pngj.chunks.PngChunkCHRM.greeny double \l0x001f: CONST  (r3 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0020: APUT  \l  (r0 I:?[long, double][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[long, double])\l \l0x0022: IGET  (r1 I:double) = (r4 I:ar.com.hjg.pngj.chunks.PngChunkCHRM) ar.com.hjg.pngj.chunks.PngChunkCHRM.bluex double \l0x0024: CONST  (r3 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0025: APUT  \l  (r0 I:?[long, double][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[long, double])\l \l0x0027: IGET  (r1 I:double) = (r4 I:ar.com.hjg.pngj.chunks.PngChunkCHRM) ar.com.hjg.pngj.chunks.PngChunkCHRM.bluey double \l0x0029: CONST  (r3 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l0x002a: APUT  \l  (r0 I:?[long, double][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[long, double])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x002c|0x002c: RETURN  (r0 I:double[]) \l}"];
MethodNode[shape=record,label="{public double[] ar.com.hjg.pngj.chunks.PngChunkCHRM.getChromaticities((r4 'this' I:ar.com.hjg.pngj.chunks.PngChunkCHRM A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

