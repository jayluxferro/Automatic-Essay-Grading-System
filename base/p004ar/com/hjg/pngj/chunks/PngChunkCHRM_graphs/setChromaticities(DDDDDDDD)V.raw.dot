digraph "CFG forar.com.hjg.pngj.chunks.PngChunkCHRM.setChromaticities(DDDDDDDD)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0001: MOVE  (r1 I:?[long, double]) = (r4 I:?[long, double]) \l0x0002: IPUT  (r1 I:double), (r0 I:ar.com.hjg.pngj.chunks.PngChunkCHRM) ar.com.hjg.pngj.chunks.PngChunkCHRM.whitex double \l0x0004: MOVE  (r1 I:?[long, double]) = (r8 I:?[long, double]) \l0x0005: IPUT  (r1 I:double), (r0 I:ar.com.hjg.pngj.chunks.PngChunkCHRM) ar.com.hjg.pngj.chunks.PngChunkCHRM.redx double \l0x0007: MOVE  (r1 I:?[long, double]) = (r12 I:?[long, double]) \l0x0008: IPUT  (r1 I:double), (r0 I:ar.com.hjg.pngj.chunks.PngChunkCHRM) ar.com.hjg.pngj.chunks.PngChunkCHRM.greenx double \l0x000a: MOVE  (r1 I:?[long, double]) = (r16 I:?[long, double]) \l0x000c: IPUT  (r1 I:double), (r0 I:ar.com.hjg.pngj.chunks.PngChunkCHRM) ar.com.hjg.pngj.chunks.PngChunkCHRM.bluex double \l0x000e: MOVE  (r1 I:?[long, double]) = (r6 I:?[long, double]) \l0x000f: IPUT  (r1 I:double), (r0 I:ar.com.hjg.pngj.chunks.PngChunkCHRM) ar.com.hjg.pngj.chunks.PngChunkCHRM.whitey double \l0x0011: MOVE  (r1 I:?[long, double]) = (r10 I:?[long, double]) \l0x0012: IPUT  (r1 I:double), (r0 I:ar.com.hjg.pngj.chunks.PngChunkCHRM) ar.com.hjg.pngj.chunks.PngChunkCHRM.redy double \l0x0014: MOVE  (r1 I:?[long, double]) = (r14 I:?[long, double]) \l0x0015: IPUT  (r1 I:double), (r0 I:ar.com.hjg.pngj.chunks.PngChunkCHRM) ar.com.hjg.pngj.chunks.PngChunkCHRM.greeny double \l0x0017: MOVE  (r1 I:?[long, double]) = (r18 I:?[long, double]) \l0x0019: IPUT  (r1 I:double), (r0 I:ar.com.hjg.pngj.chunks.PngChunkCHRM) ar.com.hjg.pngj.chunks.PngChunkCHRM.bluey double \l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|0x001b: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.chunks.PngChunkCHRM.setChromaticities((r3 'this' I:ar.com.hjg.pngj.chunks.PngChunkCHRM A[IMMUTABLE_TYPE, THIS]), (r4 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

