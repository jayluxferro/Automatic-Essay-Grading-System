digraph "CFG forar.com.hjg.pngj.chunks.PngChunkCHRM.parseFromRaw(Lar\/com\/hjg\/pngj\/chunks\/ChunkRaw;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r4.len != 32) goto L_0x0075\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|r3.whitex = p004ar.com.hjg.pngj.PngHelperInternal.intToDouble100000(p004ar.com.hjg.pngj.PngHelperInternal.readInt4fromBytes(r4.data, 0))\lr3.whitey = p004ar.com.hjg.pngj.PngHelperInternal.intToDouble100000(p004ar.com.hjg.pngj.PngHelperInternal.readInt4fromBytes(r4.data, 4))\lr3.redx = p004ar.com.hjg.pngj.PngHelperInternal.intToDouble100000(p004ar.com.hjg.pngj.PngHelperInternal.readInt4fromBytes(r4.data, 8))\lr3.redy = p004ar.com.hjg.pngj.PngHelperInternal.intToDouble100000(p004ar.com.hjg.pngj.PngHelperInternal.readInt4fromBytes(r4.data, 12))\lr3.greenx = p004ar.com.hjg.pngj.PngHelperInternal.intToDouble100000(p004ar.com.hjg.pngj.PngHelperInternal.readInt4fromBytes(r4.data, 16))\lr3.greeny = p004ar.com.hjg.pngj.PngHelperInternal.intToDouble100000(p004ar.com.hjg.pngj.PngHelperInternal.readInt4fromBytes(r4.data, 20))\lr3.bluex = p004ar.com.hjg.pngj.PngHelperInternal.intToDouble100000(p004ar.com.hjg.pngj.PngHelperInternal.readInt4fromBytes(r4.data, 24))\lr3.bluey = p004ar.com.hjg.pngj.PngHelperInternal.intToDouble100000(p004ar.com.hjg.pngj.PngHelperInternal.readInt4fromBytes(r4.data, 28))\l}"];
Node_3 [shape=record,label="{3\:\ 0x0074|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x0075|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"bad chunk \")\lr1.append(r4)\l}"];
Node_5 [shape=record,label="{5\:\ 0x008b|throw new p004ar.com.hjg.pngj.PngjException(r1.toString())\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.chunks.PngChunkCHRM.parseFromRaw((r3v0 'this' ar.com.hjg.pngj.chunks.PngChunkCHRM A[IMMUTABLE_TYPE, THIS]), (r4v0 ar.com.hjg.pngj.chunks.ChunkRaw A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

