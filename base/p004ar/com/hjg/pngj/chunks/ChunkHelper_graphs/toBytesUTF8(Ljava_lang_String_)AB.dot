digraph "CFG forar.com.hjg.pngj.chunks.ChunkHelper.toBytesUTF8(Ljava\/lang\/String;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ UnsupportedEncodingException \-\> 0x0007 \}\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return r1.getBytes(p004ar.com.hjg.pngj.PngHelperInternal.charsetUTF8name)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|ExcHandler: UnsupportedEncodingException (r1v1 'e' java.io.UnsupportedEncodingException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.io.UnsupportedEncodingException r1 = move\-exception\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008}"];
Node_5 [shape=record,label="{5\:\ 0x000d|throw new p004ar.com.hjg.pngj.chunks.PngBadCharsetException((java.lang.Throwable) r1)\l}"];
MethodNode[shape=record,label="{public static byte[] ar.com.hjg.pngj.chunks.ChunkHelper.toBytesUTF8((r1v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

