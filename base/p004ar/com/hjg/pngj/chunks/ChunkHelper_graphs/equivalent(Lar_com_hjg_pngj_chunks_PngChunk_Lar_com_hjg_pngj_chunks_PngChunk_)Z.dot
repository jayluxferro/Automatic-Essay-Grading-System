digraph "CFG forar.com.hjg.pngj.chunks.ChunkHelper.equivalent(Lar\/com\/hjg\/pngj\/chunks\/PngChunk;Lar\/com\/hjg\/pngj\/chunks\/PngChunk;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r4 != r5) goto L_0x0004\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004}"];
Node_4 [shape=record,label="{4\:\ 0x0005|if (r4 == null) goto L_0x0056\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|if (r5 == null) goto L_0x0056\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009}"];
Node_7 [shape=record,label="{7\:\ 0x0011|if (r4.f58id.equals(r5.f58id) != false) goto L_0x0014\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014}"];
Node_9 [shape=record,label="{9\:\ 0x0016|if (r4.crit == false) goto L_0x0019\l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|RETURN\l|return false\l}"];
Node_11 [shape=record,label="{11\:\ 0x0019}"];
Node_12 [shape=record,label="{12\:\ 0x0021|if (r4.getClass() == r5.getClass()) goto L_0x0024\l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|RETURN\l|return false\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024}"];
Node_15 [shape=record,label="{15\:\ 0x0028|if (r5.allowsMultiple() != false) goto L_0x002b\l}"];
Node_16 [shape=record,label="{16\:\ 0x002a|RETURN\l|return true\l}"];
Node_17 [shape=record,label="{17\:\ 0x002b}"];
Node_18 [shape=record,label="{18\:\ 0x002d|if ((r4 instanceof p004ar.com.hjg.pngj.chunks.PngChunkTextVar) == false) goto L_0x0040\l}"];
Node_19 [shape=record,label="{19\:\ 0x002f}"];
Node_20 [shape=record,label="{20\:\ 0x003f|RETURN\l|return ((p004ar.com.hjg.pngj.chunks.PngChunkTextVar) r4).getKey().equals(((p004ar.com.hjg.pngj.chunks.PngChunkTextVar) r5).getKey())\l}"];
Node_21 [shape=record,label="{21\:\ 0x0040}"];
Node_22 [shape=record,label="{22\:\ 0x0042|if ((r4 instanceof p004ar.com.hjg.pngj.chunks.PngChunkSPLT) == false) goto L_0x0055\l}"];
Node_23 [shape=record,label="{23\:\ 0x0044}"];
Node_24 [shape=record,label="{24\:\ 0x0054|RETURN\l|return ((p004ar.com.hjg.pngj.chunks.PngChunkSPLT) r4).getPalName().equals(((p004ar.com.hjg.pngj.chunks.PngChunkSPLT) r5).getPalName())\l}"];
Node_25 [shape=record,label="{25\:\ 0x0055|RETURN\l|return false\l}"];
Node_26 [shape=record,label="{26\:\ 0x0056|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static final boolean ar.com.hjg.pngj.chunks.ChunkHelper.equivalent((r4v0 ar.com.hjg.pngj.chunks.PngChunk A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 ar.com.hjg.pngj.chunks.PngChunk A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_26;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_26;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_26[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
}

