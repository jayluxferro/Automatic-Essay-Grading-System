digraph "CFG forar.com.hjg.pngj.chunks.ChunkRaw.writeChunk(Ljava\/io\/OutputStream;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|writeChunkHeader(r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r3.len \<= 0) goto L_0x0032\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r3.data == null) goto L_0x0014\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|p004ar.com.hjg.pngj.PngHelperInternal.writeBytes(r4, r3.data, 0, r3.len)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"cannot write chunk, raw chunk data is null [\")\lr0.append(r3.f57id)\lr0.append(\"]\")\l}"];
Node_6 [shape=record,label="{6\:\ 0x0031|throw new p004ar.com.hjg.pngj.PngjOutputException(r0.toString())\l}"];
Node_7 [shape=record,label="{7\:\ 0x0032|computeCrcForWriting()\lwriteChunkCrc(r4)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0038|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.chunks.ChunkRaw.writeChunk((r3v0 'this' ar.com.hjg.pngj.chunks.ChunkRaw A[IMMUTABLE_TYPE, THIS]), (r4v0 java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

