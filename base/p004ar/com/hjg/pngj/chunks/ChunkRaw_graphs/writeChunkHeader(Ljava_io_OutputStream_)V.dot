digraph "CFG forar.com.hjg.pngj.chunks.ChunkRaw.writeChunkHeader(Ljava\/io\/OutputStream;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r2.idbytes.length != 4) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|p004ar.com.hjg.pngj.PngHelperInternal.writeInt4(r3, r2.len)\lp004ar.com.hjg.pngj.PngHelperInternal.writeBytes(r3, r2.idbytes)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"bad chunkid [\")\lr0.append(r2.f57id)\lr0.append(\"]\")\l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|throw new p004ar.com.hjg.pngj.PngjOutputException(r0.toString())\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.chunks.ChunkRaw.writeChunkHeader((r2v0 'this' ar.com.hjg.pngj.chunks.ChunkRaw A[IMMUTABLE_TYPE, THIS]), (r3v0 java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

