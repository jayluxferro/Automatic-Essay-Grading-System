digraph "CFG forar.com.hjg.pngj.chunks.ChunkRaw.writeChunkHeader(Ljava\/io\/OutputStream;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:byte[]) = (r2 I:ar.com.hjg.pngj.chunks.ChunkRaw) ar.com.hjg.pngj.chunks.ChunkRaw.idbytes byte[] \l0x0002: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l0x0003: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:int) = (r2 I:ar.com.hjg.pngj.chunks.ChunkRaw) ar.com.hjg.pngj.chunks.ChunkRaw.len int \l0x0008: INVOKE  (r3 I:java.io.OutputStream), (r0 I:int) ar.com.hjg.pngj.PngHelperInternal.writeInt4(java.io.OutputStream, int):void type: STATIC \l0x000b: IGET  (r0 I:byte[]) = (r2 I:ar.com.hjg.pngj.chunks.ChunkRaw) ar.com.hjg.pngj.chunks.ChunkRaw.idbytes byte[] \l0x000d: INVOKE  (r3 I:java.io.OutputStream), (r0 I:byte[]) ar.com.hjg.pngj.PngHelperInternal.writeBytes(java.io.OutputStream, byte[]):void type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: NEW_INSTANCE  (r3 I:ar.com.hjg.pngj.PngjOutputException) =  ar.com.hjg.pngj.PngjOutputException \l0x0013: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0015: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0018: CONST_STR  (r1 I:java.lang.String) =  \"bad chunkid [\" \l0x001a: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001d: IGET  (r1 I:java.lang.String) = (r2 I:ar.com.hjg.pngj.chunks.ChunkRaw) ar.com.hjg.pngj.chunks.ChunkRaw.id java.lang.String \l0x001f: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0022: CONST_STR  (r1 I:java.lang.String) =  \"]\" \l0x0024: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0027: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002b: INVOKE  \l  (r3 I:ar.com.hjg.pngj.PngjOutputException)\l  (r0 I:java.lang.String)\l ar.com.hjg.pngj.PngjOutputException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|0x002e: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.chunks.ChunkRaw.writeChunkHeader((r2 'this' I:ar.com.hjg.pngj.chunks.ChunkRaw A[IMMUTABLE_TYPE, THIS]), (r3 I:java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

