digraph "CFG forar.com.hjg.pngj.PngIDatChunkOutputStream.\<init\>(Ljava\/io\/OutputStream;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r2 \<= 0) goto L_0x0003\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|r2 = 32768\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v3 int) binds: [B:0:0x0000, B:1:0x0003] A[DONT_GENERATE, DONT_INLINE]\l|super(r2)\lr0.prefix = null\lr0.outputStream = r1\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.PngIDatChunkOutputStream.\<init\>((r0v0 'this' ar.com.hjg.pngj.PngIDatChunkOutputStream A[IMMUTABLE_TYPE, THIS]), (r1v0 java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2[style=dashed];
Node_1 -> Node_2;
Node_2 -> Node_3;
}

