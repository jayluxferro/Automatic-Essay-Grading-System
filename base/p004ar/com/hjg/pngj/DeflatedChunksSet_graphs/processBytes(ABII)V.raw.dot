digraph "CFG forar.com.hjg.pngj.DeflatedChunksSet.processBytes([BII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:long) = (r4 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.nBytesIn long \l0x0002: CAST  (r2 I:long) = (long) (r7 I:int) \l0x0003: ARITH  (r0 I:long) = (r0 I:long) + (r2 I:long) \l0x0004: IPUT  (r0 I:long), (r4 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.nBytesIn long \l0x0006: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r7 I:?[int, byte, short, char]) \< (r0 I:?[int, byte, short, char])  \-\> B:24:0x005e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r0 I:ar.com.hjg.pngj.DeflatedChunksSet$State) = (r4 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.state ar.com.hjg.pngj.DeflatedChunksSet$State \l0x000b: INVOKE  (r0 I:boolean) = (r0 I:ar.com.hjg.pngj.DeflatedChunksSet$State) ar.com.hjg.pngj.DeflatedChunksSet.State.isDone():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IGET  (r0 I:ar.com.hjg.pngj.DeflatedChunksSet$State) = (r4 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.state ar.com.hjg.pngj.DeflatedChunksSet$State \l0x0014: SGET  (r1 I:ar.com.hjg.pngj.DeflatedChunksSet$State) =  ar.com.hjg.pngj.DeflatedChunksSet.State.ROW_READY ar.com.hjg.pngj.DeflatedChunksSet$State \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0056 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IGET  (r0 I:java.util.zip.Inflater) = (r4 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.inf java.util.zip.Inflater \l0x001a: INVOKE  (r0 I:boolean) = (r0 I:java.util.zip.Inflater) java.util.zip.Inflater.needsDictionary():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004e \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: IGET  (r0 I:java.util.zip.Inflater) = (r4 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.inf java.util.zip.Inflater \l0x0022: INVOKE  (r0 I:boolean) = (r0 I:java.util.zip.Inflater) java.util.zip.Inflater.needsInput():boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004e \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: IGET  (r0 I:java.util.zip.Inflater) = (r4 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.inf java.util.zip.Inflater \l0x002a: INVOKE  \l  (r0 I:java.util.zip.Inflater)\l  (r5 I:byte[])\l  (r6 I:int)\l  (r7 I:int)\l java.util.zip.Inflater.setInput(byte[], int, int):void type: VIRTUAL \l0x002d: INVOKE  (r5 I:boolean) = (r4 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.isCallbackMode():boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x004a \l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|0x0033: INVOKE  (r5 I:boolean) = (r4 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.inflateData():boolean type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x004d \l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|0x0039: INVOKE  (r5 I:int) = (r4 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.processRowCallback():int type: VIRTUAL \l0x003d: INVOKE  (r4 I:ar.com.hjg.pngj.DeflatedChunksSet), (r5 I:int) ar.com.hjg.pngj.DeflatedChunksSet.prepareForNextRow(int):void type: VIRTUAL \l0x0040: INVOKE  (r5 I:boolean) = (r4 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.isDone():boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0044|0x0044: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0033 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0046|0x0046: INVOKE  (r4 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.processDoneCallback():void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|0x004a: INVOKE  (r4 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.inflateData():boolean type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x004d|0x004d: RETURN   \l}"];
Node_20 [shape=record,label="{20\:\ 0x004e|0x004e: NEW_INSTANCE  (r5 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0050: CONST_STR  (r6 I:java.lang.String) =  \"should not happen\" \l0x0052: INVOKE  (r5 I:java.lang.RuntimeException), (r6 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x0055|0x0055: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0056|0x0056: NEW_INSTANCE  (r5 I:ar.com.hjg.pngj.PngjInputException) =  ar.com.hjg.pngj.PngjInputException \l0x0058: CONST_STR  (r6 I:java.lang.String) =  \"this should only be called if waitingForMoreInput\" \l0x005a: INVOKE  \l  (r5 I:ar.com.hjg.pngj.PngjInputException)\l  (r6 I:java.lang.String)\l ar.com.hjg.pngj.PngjInputException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x005d|0x005d: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x005e|0x005e: RETURN   \l}"];
MethodNode[shape=record,label="{protected void ar.com.hjg.pngj.DeflatedChunksSet.processBytes((r4 'this' I:ar.com.hjg.pngj.DeflatedChunksSet A[IMMUTABLE_TYPE, THIS]), (r5 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_24;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_24[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_22;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_20;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_20;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_18;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_13;
Node_16 -> Node_17[style=dashed];
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_22 -> Node_23;
}

