digraph "CFG forar.com.hjg.pngj.DeflatedChunksSet.prepareForNextRow(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IPUT  (r0 I:int), (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.rowfilled int \l0x0003: IGET  (r1 I:int) = (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.rown int \l0x0005: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0006: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x0007: IPUT  (r1 I:int), (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.rown int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r4 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:3:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IPUT  (r0 I:int), (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.rowlen int \l0x000d: INVOKE  (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.done():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IGET  (r1 I:java.util.zip.Inflater) = (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.inf java.util.zip.Inflater \l0x0013: INVOKE  (r1 I:boolean) = (r1 I:java.util.zip.Inflater) java.util.zip.Inflater.finished():boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001f \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: IPUT  (r0 I:int), (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.rowlen int \l0x001b: INVOKE  (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.done():void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: SGET  (r0 I:ar.com.hjg.pngj.DeflatedChunksSet$State) =  ar.com.hjg.pngj.DeflatedChunksSet.State.WAITING_FOR_INPUT ar.com.hjg.pngj.DeflatedChunksSet$State \l0x0021: IPUT  \l  (r0 I:ar.com.hjg.pngj.DeflatedChunksSet$State)\l  (r3 I:ar.com.hjg.pngj.DeflatedChunksSet)\l ar.com.hjg.pngj.DeflatedChunksSet.state ar.com.hjg.pngj.DeflatedChunksSet$State \l0x0023: IPUT  (r4 I:int), (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.rowlen int \l0x0025: IGET  (r4 I:boolean) = (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.callbackMode boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002c \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: INVOKE  (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.inflateData():boolean type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.DeflatedChunksSet.prepareForNextRow((r3 'this' I:ar.com.hjg.pngj.DeflatedChunksSet A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
}

