digraph "CFG forar.com.hjg.pngj.DeflatedChunksSet.close()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:ar.com.hjg.pngj.DeflatedChunksSet$State) = (r1 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.state ar.com.hjg.pngj.DeflatedChunksSet$State A[Catch:\{ Exception \-\> 0x001c \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:ar.com.hjg.pngj.DeflatedChunksSet$State) ar.com.hjg.pngj.DeflatedChunksSet.State.isTerminated():boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x001c \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000c A[Catch:\{ Exception \-\> 0x001c \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: SGET  (r0 I:ar.com.hjg.pngj.DeflatedChunksSet$State) =  ar.com.hjg.pngj.DeflatedChunksSet.State.TERMINATED ar.com.hjg.pngj.DeflatedChunksSet$State A[Catch:\{ Exception \-\> 0x001c \}]\l0x000a: IPUT  \l  (r0 I:ar.com.hjg.pngj.DeflatedChunksSet$State)\l  (r1 I:ar.com.hjg.pngj.DeflatedChunksSet)\l ar.com.hjg.pngj.DeflatedChunksSet.state ar.com.hjg.pngj.DeflatedChunksSet$State A[Catch:\{ Exception \-\> 0x001c \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IGET  (r0 I:boolean) = (r1 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.infOwn boolean A[Catch:\{ Exception \-\> 0x001c \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001c A[Catch:\{ Exception \-\> 0x001c \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IGET  (r0 I:java.util.zip.Inflater) = (r1 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.inf java.util.zip.Inflater A[Catch:\{ Exception \-\> 0x001c \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001c A[Catch:\{ Exception \-\> 0x001c \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: IGET  (r0 I:java.util.zip.Inflater) = (r1 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.inf java.util.zip.Inflater A[Catch:\{ Exception \-\> 0x001c \}]\l0x0016: INVOKE  (r0 I:java.util.zip.Inflater) java.util.zip.Inflater.end():void type: VIRTUAL A[Catch:\{ Exception \-\> 0x001c \}]\l0x0019: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x001c \}]\l0x001a: IPUT  \l  (r0 I:java.util.zip.Inflater)\l  (r1 I:ar.com.hjg.pngj.DeflatedChunksSet)\l ar.com.hjg.pngj.DeflatedChunksSet.inf java.util.zip.Inflater A[Catch:\{ Exception \-\> 0x001c \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lExcHandler: Exception null\lSplitter:B:0:0x0000\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.DeflatedChunksSet.close((r1 'this' I:ar.com.hjg.pngj.DeflatedChunksSet A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_10 -> Node_9;
}

