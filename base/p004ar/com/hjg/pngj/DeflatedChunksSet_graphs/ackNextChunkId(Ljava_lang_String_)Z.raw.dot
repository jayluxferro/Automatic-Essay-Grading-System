digraph "CFG forar.com.hjg.pngj.DeflatedChunksSet.ackNextChunkId(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:ar.com.hjg.pngj.DeflatedChunksSet$State) = (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.state ar.com.hjg.pngj.DeflatedChunksSet$State \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:ar.com.hjg.pngj.DeflatedChunksSet$State) ar.com.hjg.pngj.DeflatedChunksSet.State.isTerminated():boolean type: VIRTUAL \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IGET  (r0 I:java.lang.String) = (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.chunkid java.lang.String \l0x000c: INVOKE  (r0 I:boolean) = (r4 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l0x0010: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0014 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: RETURN  (r2 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: INVOKE  (r0 I:boolean) = \l  (r3 I:ar.com.hjg.pngj.DeflatedChunksSet)\l  (r4 I:java.lang.String)\l ar.com.hjg.pngj.DeflatedChunksSet.allowOtherChunksInBetween(java.lang.String):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0052 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IGET  (r0 I:ar.com.hjg.pngj.DeflatedChunksSet$State) = (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.state ar.com.hjg.pngj.DeflatedChunksSet$State \l0x001c: INVOKE  (r0 I:boolean) = (r0 I:ar.com.hjg.pngj.DeflatedChunksSet$State) ar.com.hjg.pngj.DeflatedChunksSet.State.isDone():boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002c \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: INVOKE  (r4 I:boolean) = (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.isTerminated():boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: INVOKE  (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.terminate():void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: RETURN  (r1 I:boolean) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|0x002c: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.PngjInputException) =  ar.com.hjg.pngj.PngjInputException \l0x002e: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0030: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0033: CONST_STR  (r2 I:java.lang.String) =  \"Unexpected chunk \" \l0x0035: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0038: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003b: CONST_STR  (r4 I:java.lang.String) =  \" while \" \l0x003d: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0040: IGET  (r4 I:java.lang.String) = (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.chunkid java.lang.String \l0x0042: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0045: CONST_STR  (r4 I:java.lang.String) =  \" set is not done\" \l0x0047: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004a: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004e: INVOKE  \l  (r0 I:ar.com.hjg.pngj.PngjInputException)\l  (r4 I:java.lang.String)\l ar.com.hjg.pngj.PngjInputException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0051|0x0051: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0052|0x0052: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean ar.com.hjg.pngj.DeflatedChunksSet.ackNextChunkId((r3 'this' I:ar.com.hjg.pngj.DeflatedChunksSet A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_16;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

