digraph "CFG forar.com.hjg.pngj.DeflatedChunksSet.\<init\>(Ljava\/lang\/String;IILjava\/util\/zip\/Inflater;[B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: SGET  (r0 I:ar.com.hjg.pngj.DeflatedChunksSet$State) =  ar.com.hjg.pngj.DeflatedChunksSet.State.WAITING_FOR_INPUT ar.com.hjg.pngj.DeflatedChunksSet$State \l0x0005: IPUT  \l  (r0 I:ar.com.hjg.pngj.DeflatedChunksSet$State)\l  (r3 I:ar.com.hjg.pngj.DeflatedChunksSet)\l ar.com.hjg.pngj.DeflatedChunksSet.state ar.com.hjg.pngj.DeflatedChunksSet$State \l0x0007: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0008: IPUT  (r0 I:boolean), (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.callbackMode boolean \l0x000a: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l0x000c: IPUT  (r1 I:long), (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.nBytesIn long \l0x000e: IPUT  (r1 I:long), (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.nBytesOut long \l0x0010: IPUT  \l  (r4 I:java.lang.String)\l  (r3 I:ar.com.hjg.pngj.DeflatedChunksSet)\l ar.com.hjg.pngj.DeflatedChunksSet.chunkid java.lang.String \l0x0012: IPUT  (r5 I:int), (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.rowlen int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: IF  (r5 I:?[int, byte, short, char]) \< (r0 I:?[int, byte, short, char])  \-\> B:18:0x0043 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: IF  (r6 I:?[int, byte, short, char]) \< (r5 I:?[int, byte, short, char])  \-\> B:18:0x0043 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0020 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: IPUT  \l  (r7 I:java.util.zip.Inflater)\l  (r3 I:ar.com.hjg.pngj.DeflatedChunksSet)\l ar.com.hjg.pngj.DeflatedChunksSet.inf java.util.zip.Inflater \l0x001c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001d: IPUT  (r4 I:boolean), (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.infOwn boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: NEW_INSTANCE  (r4 I:java.util.zip.Inflater) =  java.util.zip.Inflater \l0x0022: INVOKE  (r4 I:java.util.zip.Inflater) java.util.zip.Inflater.\<init\>():void type: DIRECT \l0x0025: IPUT  \l  (r4 I:java.util.zip.Inflater)\l  (r3 I:ar.com.hjg.pngj.DeflatedChunksSet)\l ar.com.hjg.pngj.DeflatedChunksSet.inf java.util.zip.Inflater \l0x0027: IPUT  (r0 I:boolean), (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.infOwn boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|0x0029: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002f \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: ARRAY_LENGTH  (r4 I:int) = (r8 I:?[]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|0x002c: IF  (r4 I:?[int, byte, short, char]) \< (r5 I:?[int, byte, short, char])  \-\> B:10:0x002f \l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|0x002f: NEW_ARRAY  (r8 I:byte[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: byte[] \l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|0x0031: IPUT  (r8 I:byte[]), (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.row byte[] \l0x0033: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0034: IPUT  (r4 I:int), (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.rown int \l0x0036: SGET  (r4 I:ar.com.hjg.pngj.DeflatedChunksSet$State) =  ar.com.hjg.pngj.DeflatedChunksSet.State.WAITING_FOR_INPUT ar.com.hjg.pngj.DeflatedChunksSet$State \l0x0038: IPUT  \l  (r4 I:ar.com.hjg.pngj.DeflatedChunksSet$State)\l  (r3 I:ar.com.hjg.pngj.DeflatedChunksSet)\l ar.com.hjg.pngj.DeflatedChunksSet.state ar.com.hjg.pngj.DeflatedChunksSet$State \l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|SYNTHETIC\lSplitter:B:12:0x003a\l}"];
Node_13 [shape=record,label="{13\:\ ?|Splitter:B:12:0x003a\l|0x003a: INVOKE  (r3 I:ar.com.hjg.pngj.DeflatedChunksSet), (r5 I:int) ar.com.hjg.pngj.DeflatedChunksSet.prepareForNextRow(int):void type: VIRTUAL A[Catch:\{ RuntimeException \-\> 0x003e \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|0x003d: RETURN   \l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|ExcHandler: RuntimeException null\lSplitter:B:12:0x003a\l|0x003e: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: INVOKE  (r3 I:ar.com.hjg.pngj.DeflatedChunksSet) ar.com.hjg.pngj.DeflatedChunksSet.close():void type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|0x0042: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0043|0x0043: NEW_INSTANCE  (r4 I:ar.com.hjg.pngj.PngjException) =  ar.com.hjg.pngj.PngjException \l0x0045: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0047: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x004a: CONST_STR  (r7 I:java.lang.String) =  \"bad inital row len \" \l0x004c: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004f: INVOKE  (r6 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0052: INVOKE  (r5 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0056: INVOKE  \l  (r4 I:ar.com.hjg.pngj.PngjException)\l  (r5 I:java.lang.String)\l ar.com.hjg.pngj.PngjException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0059|0x0059: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.DeflatedChunksSet.\<init\>((r3 'this' I:ar.com.hjg.pngj.DeflatedChunksSet A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.zip.Inflater A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_18;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_18;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
}

