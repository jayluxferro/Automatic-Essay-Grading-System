digraph "CFG forar.com.hjg.pngj.DeflatedChunksSet.inflateData()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|if (r6.state == p004ar.com.hjg.pngj.DeflatedChunksSet.State.ROW_READY) goto L_0x007e     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|if (r6.state.isDone() == false) goto L_0x0010     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|RETURN\lCatch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|return false     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|if (r6.row == null) goto L_0x001b     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|if (r6.row.length \>= r6.rowlen) goto L_0x0021     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|r6.row = new byte[r6.rowlen]     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|if (r6.rowfilled \>= r6.rowlen) goto L_0x0053     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|if (r6.inf.finished() != false) goto L_0x0053\l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|SYNTHETIC\lSplitter:B:15:0x002f\l}"];
Node_16 [shape=record,label="{16\:\ ?|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\lSplitter:B:15:0x002f\l|int r0 = r6.inf.inflate(r6.row, r6.rowfilled, r6.rowlen \- r6.rowfilled)     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x003e|SYNTHETIC\lSplitter:B:17:0x003e\l}"];
Node_18 [shape=record,label="{18\:\ ?|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\lSplitter:B:17:0x003e\l|r6.rowfilled = r6.rowfilled + r0     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\lr6.nBytesOut = r6.nBytesOut + ((long) r0)     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\lExcHandler: DataFormatException (r0v20 'e' java.util.zip.DataFormatException A[CUSTOM_DECLARE, Catch:\{  \}])\lSplitter:B:15:0x002f\l|java.util.zip.DataFormatException r0 = move\-exception     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x004b|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0052|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|throw new p004ar.com.hjg.pngj.PngjInputException(\"error decompressing zlib stream \", r0)     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x0053|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x0057|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|if (r6.rowfilled != r6.rowlen) goto L_0x005c     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_24 [shape=record,label="{24\:\ 0x0059|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|ar.com.hjg.pngj.DeflatedChunksSet$State r0 = p004ar.com.hjg.pngj.DeflatedChunksSet.State.ROW_READY     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x005c|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_26 [shape=record,label="{26\:\ 0x0062|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|if (r6.inf.finished() != false) goto L_0x0067     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_27 [shape=record,label="{27\:\ 0x0064|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|ar.com.hjg.pngj.DeflatedChunksSet$State r0 = p004ar.com.hjg.pngj.DeflatedChunksSet.State.WAITING_FOR_INPUT     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_28 [shape=record,label="{28\:\ 0x0067|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x0069|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|if (r6.rowfilled \<= 0) goto L_0x006e     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_30 [shape=record,label="{30\:\ 0x006b|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|ar.com.hjg.pngj.DeflatedChunksSet$State r0 = p004ar.com.hjg.pngj.DeflatedChunksSet.State.ROW_READY     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_31 [shape=record,label="{31\:\ 0x006e|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|ar.com.hjg.pngj.DeflatedChunksSet$State r0 = p004ar.com.hjg.pngj.DeflatedChunksSet.State.WORK_DONE     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_32 [shape=record,label="{32\:\ 0x0070|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\lPHI: r0 \l  PHI: (r0v8 ar.com.hjg.pngj.DeflatedChunksSet$State) = (r0v14 ar.com.hjg.pngj.DeflatedChunksSet$State), (r0v15 ar.com.hjg.pngj.DeflatedChunksSet$State), (r0v16 ar.com.hjg.pngj.DeflatedChunksSet$State), (r0v17 ar.com.hjg.pngj.DeflatedChunksSet$State) binds: [B:31:0x006e, B:30:0x006b, B:27:0x0064, B:24:0x0059] A[DONT_GENERATE, DONT_INLINE]\l|r6.state = r0     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_33 [shape=record,label="{33\:\ 0x0076|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|if (r6.state != p004ar.com.hjg.pngj.DeflatedChunksSet.State.ROW_READY) goto L_0x007d     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_34 [shape=record,label="{34\:\ 0x0078|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|preProcessRow()     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_35 [shape=record,label="{35\:\ 0x007c|RETURN\lCatch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|return true     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_36 [shape=record,label="{36\:\ 0x007d|RETURN\lCatch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|return false     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_37 [shape=record,label="{37\:\ 0x007e|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_38 [shape=record,label="{38\:\ 0x0085|Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l|throw new p004ar.com.hjg.pngj.PngjException(\"invalid state\")     \/\/ Catch:\{ DataFormatException \-\> 0x004a, RuntimeException \-\> 0x0086 \}\l}"];
Node_39 [shape=record,label="{39\:\ 0x0086|ExcHandler: RuntimeException (r0v0 'e' java.lang.RuntimeException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.lang.RuntimeException r0 = move\-exception\l}"];
Node_40 [shape=record,label="{40\:\ 0x0087|close()\l}"];
Node_41 [shape=record,label="{41\:\ 0x008a|throw r0\l}"];
MethodNode[shape=record,label="{private boolean ar.com.hjg.pngj.DeflatedChunksSet.inflateData((r6v0 'this' ar.com.hjg.pngj.DeflatedChunksSet A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_39;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_37;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_22;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_22;
Node_15 -> Node_16;
Node_15 -> Node_19;
Node_15 -> Node_39;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_39;
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_32;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_32;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_40 -> Node_41;
}

