digraph "CFG forar.com.hjg.pngj.ImageLineInt.readFromPngRaw([BIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = 0\lsetFilterType(p004ar.com.hjg.pngj.FilterType.getByVal(r12[0]))\lint r1 = r13 + \-1\lint r2 = (r15 + \-1) * r11.imgInfo.channels\lr5 = 1\l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|if (r11.imgInfo.bitDepth != 8) goto L_0x004e\l}"];
Node_2 [shape=record,label="{2\:\ 0x001d|if (r15 != 1) goto L_0x002f\l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v0 int), (r0v4 int) binds: [B:2:0x001d, B:5:0x0023] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x001f\-\>B:5:0x0023\l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|if (r0 \>= r11.size) goto L_0x00d2\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|LOOP_END\lLOOP:0: B:3:0x001f\-\>B:5:0x0023\l|int r14 = r0 + 1\lr11.scanline[r0] = r12[r14] & 255\lr0 = r14\l}"];
Node_6 [shape=record,label="{6\:\ 0x002f|int r14 = r14 * r11.imgInfo.channels\lr13 = 1\lr15 = 0\l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|LOOP_START\lPHI: r13 r14 r15 \l  PHI: (r13v20 int) = (r13v19 int), (r13v21 int) binds: [B:6:0x002f, B:11:0x004a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v15 int) = (r14v14 int), (r14v17 int) binds: [B:6:0x002f, B:11:0x004a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v12 int) = (r15v11 int), (r15v14 int) binds: [B:6:0x002f, B:11:0x004a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:7:0x0037\-\>B:11:0x004a\l|if (r13 \> r1) goto L_0x00d2\l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|r11.scanline[r14] = r12[r13] & 255\lint r15 = r15 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0046|if (r15 != r11.imgInfo.channels) goto L_0x004a\l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|int r14 = r14 + r2\lr15 = 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x004a|LOOP_END\lPHI: r14 r15 \l  PHI: (r14v16 int) = (r14v15 int), (r14v18 int) binds: [B:40:0x004a, B:39:0x004a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v14 int) = (r15v13 int), (r15v15 int) binds: [B:40:0x004a, B:39:0x004a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:7:0x0037\-\>B:11:0x004a\l|int r13 = r13 + 1\lint r14 = r14 + 1\l}"];
Node_12 [shape=record,label="{12\:\ 0x004e}"];
Node_13 [shape=record,label="{13\:\ 0x0054|if (r11.imgInfo.bitDepth != 16) goto L_0x009d\l}"];
Node_14 [shape=record,label="{14\:\ 0x0056|if (r15 != 1) goto L_0x0071\l}"];
Node_15 [shape=record,label="{15\:\ 0x0058|LOOP_START\lPHI: r0 r5 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:14:0x0056, B:17:0x005c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:14:0x0056, B:17:0x005c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:15:0x0058\-\>B:17:0x005c\l}"];
Node_16 [shape=record,label="{16\:\ 0x005a|if (r0 \>= r11.size) goto L_0x00d2\l}"];
Node_17 [shape=record,label="{17\:\ 0x005c|LOOP_END\lLOOP:2: B:15:0x0058\-\>B:17:0x005c\l|int[] r13 = r11.scanline\lint r14 = r5 + 1\lint r5 = r14 + 1\lr14 = r12[r14] & 255\lr13[r0] = r14 \| ((r12[r5] & 255) \<\< 8)\lint r0 = r0 + 1\l}"];
Node_18 [shape=record,label="{18\:\ 0x0071|if (r14 == 0) goto L_0x007a\l}"];
Node_19 [shape=record,label="{19\:\ 0x0073|int r13 = r11.imgInfo.channels * r14\l}"];
Node_20 [shape=record,label="{20\:\ 0x007a|r13 = 0\l}"];
Node_21 [shape=record,label="{21\:\ 0x007b|PHI: r13 \l  PHI: (r13v1 int) = (r13v11 int), (r13v14 int) binds: [B:20:0x007a, B:19:0x0073] A[DONT_GENERATE, DONT_INLINE]\l|r14 = r13\lr13 = 1\lr15 = 0\l}"];
Node_22 [shape=record,label="{22\:\ 0x007e|LOOP_START\lPHI: r13 r14 r15 \l  PHI: (r13v3 int) = (r13v2 int), (r13v10 int) binds: [B:21:0x007b, B:26:0x0099] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v6 int) = (r14v5 int), (r14v8 int) binds: [B:21:0x007b, B:26:0x0099] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v4 int) = (r15v3 int), (r15v6 int) binds: [B:21:0x007b, B:26:0x0099] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:22:0x007e\-\>B:26:0x0099\l|if (r13 \> r1) goto L_0x00d2\l}"];
Node_23 [shape=record,label="{23\:\ 0x0080|int r6 = r13 + 1\lr11.scanline[r14] = ((r12[r13] & 255) \<\< 8) \| (r12[r6] & 255)\lint r15 = r15 + 1\l}"];
Node_24 [shape=record,label="{24\:\ 0x0095|if (r15 != r11.imgInfo.channels) goto L_0x0099\l}"];
Node_25 [shape=record,label="{25\:\ 0x0097|int r14 = r14 + r2\lr15 = 0\l}"];
Node_26 [shape=record,label="{26\:\ 0x0099|LOOP_END\lPHI: r14 r15 \l  PHI: (r14v7 int) = (r14v6 int), (r14v9 int) binds: [B:44:0x0099, B:43:0x0099] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v6 int) = (r15v5 int), (r15v7 int) binds: [B:44:0x0099, B:43:0x0099] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:22:0x007e\-\>B:26:0x0099\l|int r13 = r6 + 1\lint r14 = r14 + 1\l}"];
Node_27 [shape=record,label="{27\:\ 0x009d|int r15 = r11.imgInfo.bitDepth\lint r1 = p004ar.com.hjg.pngj.ImageLineHelper.getMaskForPackedFormats(r15)\lr3 = r14 * r11.imgInfo.channels\lr14 = 1\lr6 = 0\l}"];
Node_28 [shape=record,label="{28\:\ 0x00ae|LOOP_START\lPHI: r3 r6 r14 \l  PHI: (r3v9 int) = (r3v8 int), (r3v12 int) binds: [B:27:0x009d, B:36:0x00ce] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v2 int) = (r6v1 int), (r6v6 int) binds: [B:27:0x009d, B:36:0x00ce] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v3 int) = (r14v2 int), (r14v4 int) binds: [B:27:0x009d, B:36:0x00ce] A[DONT_GENERATE, DONT_INLINE]\lLOOP:4: B:28:0x00ae\-\>B:36:0x00ce\l|if (r14 \>= r13) goto L_0x00d2\l}"];
Node_29 [shape=record,label="{29\:\ 0x00b0|int r7 = 8 \- r15\lr8 = r6\lr6 = r1\l}"];
Node_30 [shape=record,label="{30\:\ 0x00b4|LOOP_START\lPHI: r3 r6 r7 r8 \l  PHI: (r3v10 int) = (r3v9 int), (r3v12 int) binds: [B:29:0x00b0, B:35:0x00cc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v4 int) = (r6v3 int), (r6v5 int) binds: [B:29:0x00b0, B:35:0x00cc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 int) = (r7v0 int), (r7v2 int) binds: [B:29:0x00b0, B:35:0x00cc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 int) = (r8v0 int), (r8v3 int) binds: [B:29:0x00b0, B:35:0x00cc] A[DONT_GENERATE, DONT_INLINE]\lLOOP:5: B:30:0x00b4\-\>B:35:0x00cc\l|r11.scanline[r3] = (r12[r14] & r6) \>\> r7\lint r6 = r6 \>\> r15\lint r7 = r7 \- r15\lint r3 = r3 + 1\lint r8 = r8 + 1\l}"];
Node_31 [shape=record,label="{31\:\ 0x00c4|if (r8 != r11.imgInfo.channels) goto L_0x00c8\l}"];
Node_32 [shape=record,label="{32\:\ 0x00c6|int r3 = r3 + r2\lr8 = 0\l}"];
Node_33 [shape=record,label="{33\:\ 0x00c8|PHI: r3 r8 \l  PHI: (r3v12 int) = (r3v11 int), (r3v13 int) binds: [B:31:0x00c4, B:32:0x00c6] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v3 int) = (r8v2 int), (r8v4 int) binds: [B:31:0x00c4, B:32:0x00c6] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 == 0) goto L_0x00ce\l}"];
Node_34 [shape=record,label="{34\:\ 0x00ca}"];
Node_35 [shape=record,label="{35\:\ 0x00cc|LOOP_END\lLOOP:5: B:30:0x00b4\-\>B:35:0x00cc\l|if (r3 \< r11.size) goto L_0x00b4\l}"];
Node_36 [shape=record,label="{36\:\ 0x00ce|LOOP_END\lLOOP:4: B:28:0x00ae\-\>B:36:0x00ce\l|int r14 = r14 + 1\lr6 = r8\l}"];
Node_37 [shape=record,label="{37\:\ 0x00d2|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x00d2|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x004a|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x004a|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x00d2|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x00d2|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0099|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0099|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x00d2|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x00ce|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x00ce|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_52 [shape=record,label="{52\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.ImageLineInt.readFromPngRaw((r11v0 'this' ar.com.hjg.pngj.ImageLineInt A[IMMUTABLE_TYPE, THIS]), (r12v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_37;
Node_5 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_38;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_40;
Node_10 -> Node_39;
Node_11 -> Node_7;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_27;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_41;
Node_17 -> Node_15;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_42;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_44;
Node_25 -> Node_43;
Node_26 -> Node_22;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_45;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_46;
Node_34 -> Node_35;
Node_35 -> Node_30;
Node_35 -> Node_47[style=dashed];
Node_36 -> Node_28;
Node_37 -> Node_48;
Node_38 -> Node_49;
Node_39 -> Node_11;
Node_40 -> Node_11;
Node_41 -> Node_50;
Node_42 -> Node_51;
Node_43 -> Node_26;
Node_44 -> Node_26;
Node_45 -> Node_52;
Node_46 -> Node_36;
Node_47 -> Node_36;
}

