digraph "CFG forar.com.hjg.pngj.ImageLineInt.\<init\>(Lar\/com\/hjg\/pngj\/ImageInfo;[I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: SGET  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_UNKNOWN ar.com.hjg.pngj.FilterType \l0x0005: IPUT  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:ar.com.hjg.pngj.ImageLineInt)\l ar.com.hjg.pngj.ImageLineInt.filterType ar.com.hjg.pngj.FilterType \l0x0007: IPUT  \l  (r2 I:ar.com.hjg.pngj.ImageInfo)\l  (r1 I:ar.com.hjg.pngj.ImageLineInt)\l ar.com.hjg.pngj.ImageLineInt.imgInfo ar.com.hjg.pngj.ImageInfo \l0x0009: SGET  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_UNKNOWN ar.com.hjg.pngj.FilterType \l0x000b: IPUT  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:ar.com.hjg.pngj.ImageLineInt)\l ar.com.hjg.pngj.ImageLineInt.filterType ar.com.hjg.pngj.FilterType \l0x000d: IGET  (r2 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.samplesPerRow int \l0x000f: IPUT  (r2 I:int), (r1 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.size int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0019 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: ARRAY_LENGTH  (r2 I:int) = (r3 I:?[]) \l0x0014: IGET  (r0 I:int) = (r1 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.size int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r2 I:?[int, byte, short, char]) \< (r0 I:?[int, byte, short, char])  \-\> B:5:0x0019 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: IGET  (r2 I:int) = (r1 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.size int \l0x001b: NEW_ARRAY  (r3 I:int[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: int[] \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: IPUT  (r3 I:int[]), (r1 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: RETURN   \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.ImageLineInt.\<init\>((r1 'this' I:ar.com.hjg.pngj.ImageLineInt A[IMMUTABLE_TYPE, THIS]), (r2 I:ar.com.hjg.pngj.ImageInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
}

