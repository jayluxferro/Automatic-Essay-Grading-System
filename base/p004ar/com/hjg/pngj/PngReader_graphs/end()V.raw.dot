digraph "CFG forar.com.hjg.pngj.PngReader.end()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:ar.com.hjg.pngj.ChunkSeqReaderPng) = (r2 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng A[Catch:\{ all \-\> 0x003c \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:ar.com.hjg.pngj.ChunkSeqReaderPng) ar.com.hjg.pngj.ChunkSeqReaderPng.firstChunksNotYetRead():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r2 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.readFirstChunks():void type: VIRTUAL A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IGET  (r0 I:ar.com.hjg.pngj.ChunkSeqReaderPng) = (r2 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng A[Catch:\{ all \-\> 0x003c \}]\l0x000d: INVOKE  (r0 I:ar.com.hjg.pngj.IdatSet) = (r0 I:ar.com.hjg.pngj.ChunkSeqReaderPng) ar.com.hjg.pngj.ChunkSeqReaderPng.getIdatSet():ar.com.hjg.pngj.IdatSet type: VIRTUAL A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0028 A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IGET  (r0 I:ar.com.hjg.pngj.ChunkSeqReaderPng) = (r2 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng A[Catch:\{ all \-\> 0x003c \}]\l0x0015: INVOKE  (r0 I:ar.com.hjg.pngj.IdatSet) = (r0 I:ar.com.hjg.pngj.ChunkSeqReaderPng) ar.com.hjg.pngj.ChunkSeqReaderPng.getIdatSet():ar.com.hjg.pngj.IdatSet type: VIRTUAL A[Catch:\{ all \-\> 0x003c \}]\l0x0019: INVOKE  (r0 I:boolean) = (r0 I:ar.com.hjg.pngj.IdatSet) ar.com.hjg.pngj.IdatSet.isDone():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0028 A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: IGET  (r0 I:ar.com.hjg.pngj.ChunkSeqReaderPng) = (r2 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng A[Catch:\{ all \-\> 0x003c \}]\l0x0021: INVOKE  (r0 I:ar.com.hjg.pngj.IdatSet) = (r0 I:ar.com.hjg.pngj.ChunkSeqReaderPng) ar.com.hjg.pngj.ChunkSeqReaderPng.getIdatSet():ar.com.hjg.pngj.IdatSet type: VIRTUAL A[Catch:\{ all \-\> 0x003c \}]\l0x0025: INVOKE  (r0 I:ar.com.hjg.pngj.IdatSet) ar.com.hjg.pngj.IdatSet.done():void type: VIRTUAL A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: IGET  (r0 I:ar.com.hjg.pngj.ChunkSeqReaderPng) = (r2 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng A[Catch:\{ all \-\> 0x003c \}]\l0x002a: INVOKE  (r0 I:boolean) = (r0 I:ar.com.hjg.pngj.ChunkSeqReaderPng) ar.com.hjg.pngj.ChunkSeqReaderPng.isDone():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0038 A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: IGET  (r0 I:ar.com.hjg.pngj.BufferedStreamFeeder) = (r2 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.streamFeeder ar.com.hjg.pngj.BufferedStreamFeeder A[Catch:\{ all \-\> 0x003c \}]\l0x0032: IGET  (r1 I:ar.com.hjg.pngj.ChunkSeqReaderPng) = (r2 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng A[Catch:\{ all \-\> 0x003c \}]\l0x0034: INVOKE  \l  (r0 I:ar.com.hjg.pngj.BufferedStreamFeeder)\l  (r1 I:ar.com.hjg.pngj.IBytesConsumer)\l ar.com.hjg.pngj.BufferedStreamFeeder.feed(ar.com.hjg.pngj.IBytesConsumer):int type: VIRTUAL A[Catch:\{ all \-\> 0x003c \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|0x0038: INVOKE  (r2 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.close():void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|0x003b: RETURN   \l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|ExcHandler: all null\lSplitter:B:0:0x0000\l|0x003c: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|0x003d: INVOKE  (r2 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.close():void type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0040|0x0040: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.PngReader.end((r2 'this' I:ar.com.hjg.pngj.PngReader A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_15;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_9;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

