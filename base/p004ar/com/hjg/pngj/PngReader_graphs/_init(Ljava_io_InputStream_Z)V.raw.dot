digraph "CFG forar.com.hjg.pngj.PngReader.\<init\>(Ljava\/io\/InputStream;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0004: IPUT  (r0 I:int), (r4 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.rowNum int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|SYNTHETIC\lSplitter:B:1:0x0006\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0006\l|0x0006: NEW_INSTANCE  (r1 I:ar.com.hjg.pngj.BufferedStreamFeeder) =  ar.com.hjg.pngj.BufferedStreamFeeder A[Catch:\{ RuntimeException \-\> 0x006e \}, TRY_ENTER]\l0x0008: INVOKE  \l  (r1 I:ar.com.hjg.pngj.BufferedStreamFeeder)\l  (r5 I:java.io.InputStream)\l ar.com.hjg.pngj.BufferedStreamFeeder.\<init\>(java.io.InputStream):void type: DIRECT A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x000b: IPUT  \l  (r1 I:ar.com.hjg.pngj.BufferedStreamFeeder)\l  (r4 I:ar.com.hjg.pngj.PngReader)\l ar.com.hjg.pngj.PngReader.streamFeeder ar.com.hjg.pngj.BufferedStreamFeeder A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x000d: IGET  (r5 I:ar.com.hjg.pngj.BufferedStreamFeeder) = (r4 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.streamFeeder ar.com.hjg.pngj.BufferedStreamFeeder A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x000f: INVOKE  (r5 I:ar.com.hjg.pngj.BufferedStreamFeeder), (r6 I:boolean) ar.com.hjg.pngj.BufferedStreamFeeder.setCloseStream(boolean):void type: VIRTUAL A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0012: NEW_INSTANCE  (r5 I:ar.com.hjg.pngj.ChunkSeqReaderPng) =  ar.com.hjg.pngj.ChunkSeqReaderPng A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0014: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0015: INVOKE  (r5 I:ar.com.hjg.pngj.ChunkSeqReaderPng), (r6 I:boolean) ar.com.hjg.pngj.ChunkSeqReaderPng.\<init\>(boolean):void type: DIRECT A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0018: IPUT  \l  (r5 I:ar.com.hjg.pngj.ChunkSeqReaderPng)\l  (r4 I:ar.com.hjg.pngj.PngReader)\l ar.com.hjg.pngj.PngReader.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x001a: IGET  (r5 I:ar.com.hjg.pngj.BufferedStreamFeeder) = (r4 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.streamFeeder ar.com.hjg.pngj.BufferedStreamFeeder A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x001c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x001d: INVOKE  (r5 I:ar.com.hjg.pngj.BufferedStreamFeeder), (r1 I:boolean) ar.com.hjg.pngj.BufferedStreamFeeder.setFailIfNoFeed(boolean):void type: VIRTUAL A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0020: IGET  (r5 I:ar.com.hjg.pngj.BufferedStreamFeeder) = (r4 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.streamFeeder ar.com.hjg.pngj.BufferedStreamFeeder A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0022: IGET  (r2 I:ar.com.hjg.pngj.ChunkSeqReaderPng) = (r4 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0024: CONST  (r3 I:?[int, float, short, byte, char]) = (36 ?[int, float, short, byte, char]) A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0026: INVOKE  (r5 I:boolean) = \l  (r5 I:ar.com.hjg.pngj.BufferedStreamFeeder)\l  (r2 I:ar.com.hjg.pngj.IBytesConsumer)\l  (r3 I:int)\l ar.com.hjg.pngj.BufferedStreamFeeder.feedFixed(ar.com.hjg.pngj.IBytesConsumer, int):boolean type: VIRTUAL A[Catch:\{ RuntimeException \-\> 0x006e \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x002a|0x002a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0066 A[Catch:\{ RuntimeException \-\> 0x006e \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|0x002c: IGET  (r5 I:ar.com.hjg.pngj.ChunkSeqReaderPng) = (r4 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x002e: INVOKE  (r5 I:ar.com.hjg.pngj.ImageInfo) = (r5 I:ar.com.hjg.pngj.ChunkSeqReaderPng) ar.com.hjg.pngj.ChunkSeqReaderPng.getImageInfo():ar.com.hjg.pngj.ImageInfo type: VIRTUAL A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0032: IPUT  \l  (r5 I:ar.com.hjg.pngj.ImageInfo)\l  (r4 I:ar.com.hjg.pngj.PngReader)\l ar.com.hjg.pngj.PngReader.imgInfo ar.com.hjg.pngj.ImageInfo A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0034: IGET  (r5 I:ar.com.hjg.pngj.ChunkSeqReaderPng) = (r4 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0036: INVOKE  (r5 I:ar.com.hjg.pngj.Deinterlacer) = (r5 I:ar.com.hjg.pngj.ChunkSeqReaderPng) ar.com.hjg.pngj.ChunkSeqReaderPng.getDeinterlacer():ar.com.hjg.pngj.Deinterlacer type: VIRTUAL A[Catch:\{ RuntimeException \-\> 0x006e \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x003a|0x003a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x003d A[Catch:\{ RuntimeException \-\> 0x006e \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x003c|0x003c: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ RuntimeException \-\> 0x006e \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|0x003d: IPUT  (r6 I:boolean), (r4 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.interlaced boolean A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x003f: CONST  (r5 I:?[long, double]) = (5024024(0x4ca918, double:2.4821977E\-317) ?[long, double]) A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0042: INVOKE  (r4 I:ar.com.hjg.pngj.PngReader), (r5 I:long) ar.com.hjg.pngj.PngReader.setMaxBytesMetadata(long):void type: VIRTUAL A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0045: CONST  (r5 I:?[long, double]) = \l  (901001001(0x35b42f29, double:4.451536415E\-315) ?[long, double])\l A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0048: INVOKE  (r4 I:ar.com.hjg.pngj.PngReader), (r5 I:long) ar.com.hjg.pngj.PngReader.setMaxTotalBytesRead(long):void type: VIRTUAL A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x004b: CONST  (r5 I:?[long, double]) = (2024024(0x1ee258, double:1.0000007E\-317) ?[long, double]) A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x004e: INVOKE  (r4 I:ar.com.hjg.pngj.PngReader), (r5 I:long) ar.com.hjg.pngj.PngReader.setSkipChunkMaxSize(long):void type: VIRTUAL A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0051: NEW_INSTANCE  (r5 I:ar.com.hjg.pngj.chunks.PngMetadata) =  ar.com.hjg.pngj.chunks.PngMetadata A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0053: IGET  (r6 I:ar.com.hjg.pngj.ChunkSeqReaderPng) = (r4 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0055: IGET  (r6 I:ar.com.hjg.pngj.chunks.ChunksList) = (r6 I:ar.com.hjg.pngj.ChunkSeqReaderPng) ar.com.hjg.pngj.ChunkSeqReaderPng.chunksList ar.com.hjg.pngj.chunks.ChunksList A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0057: INVOKE  \l  (r5 I:ar.com.hjg.pngj.chunks.PngMetadata)\l  (r6 I:ar.com.hjg.pngj.chunks.ChunksList)\l ar.com.hjg.pngj.chunks.PngMetadata.\<init\>(ar.com.hjg.pngj.chunks.ChunksList):void type: DIRECT A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x005a: IPUT  \l  (r5 I:ar.com.hjg.pngj.chunks.PngMetadata)\l  (r4 I:ar.com.hjg.pngj.PngReader)\l ar.com.hjg.pngj.PngReader.metadata ar.com.hjg.pngj.chunks.PngMetadata A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x005c: INVOKE  (r5 I:ar.com.hjg.pngj.IImageLineSetFactory) =  ar.com.hjg.pngj.ImageLineSetDefault.getFactoryInt():ar.com.hjg.pngj.IImageLineSetFactory type: STATIC A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0060: INVOKE  \l  (r4 I:ar.com.hjg.pngj.PngReader)\l  (r5 I:ar.com.hjg.pngj.IImageLineSetFactory)\l ar.com.hjg.pngj.PngReader.setLineSetFactory(ar.com.hjg.pngj.IImageLineSetFactory):void type: VIRTUAL A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0063: IPUT  (r0 I:int), (r4 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.rowNum int A[Catch:\{ RuntimeException \-\> 0x006e \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0065|0x0065: RETURN   A[Catch:\{ RuntimeException \-\> 0x006e \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0066|0x0066: NEW_INSTANCE  (r5 I:ar.com.hjg.pngj.PngjInputException) =  ar.com.hjg.pngj.PngjInputException A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x0068: CONST_STR  (r6 I:java.lang.String) =  \"error reading first 21 bytes\" A[Catch:\{ RuntimeException \-\> 0x006e \}]\l0x006a: INVOKE  \l  (r5 I:ar.com.hjg.pngj.PngjInputException)\l  (r6 I:java.lang.String)\l ar.com.hjg.pngj.PngjInputException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ RuntimeException \-\> 0x006e \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x006d|0x006d: THROW  (r5 I:java.lang.Throwable) A[Catch:\{ RuntimeException \-\> 0x006e \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x006e|ExcHandler: RuntimeException null\lSplitter:B:1:0x0006\l|0x006e: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x006f|0x006f: IGET  (r6 I:ar.com.hjg.pngj.BufferedStreamFeeder) = (r4 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.streamFeeder ar.com.hjg.pngj.BufferedStreamFeeder \l0x0071: INVOKE  (r6 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.close():void type: VIRTUAL \l0x0074: IGET  (r6 I:ar.com.hjg.pngj.ChunkSeqReaderPng) = (r4 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng \l}"];
Node_13 [shape=record,label="{13\:\ 0x0076|0x0076: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x007d \l}"];
Node_14 [shape=record,label="{14\:\ 0x0078|0x0078: IGET  (r6 I:ar.com.hjg.pngj.ChunkSeqReaderPng) = (r4 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng \l0x007a: INVOKE  (r6 I:ar.com.hjg.pngj.ChunkSeqReaderPng) ar.com.hjg.pngj.ChunkSeqReaderPng.close():void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x007d|0x007d: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.PngReader.\<init\>((r4 'this' I:ar.com.hjg.pngj.PngReader A[IMMUTABLE_TYPE, THIS]), (r5 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
}

