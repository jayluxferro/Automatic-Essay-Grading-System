digraph "CFG forar.com.hjg.pngj.PngReader.\<init\>(Ljava\/io\/InputStream;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.rowNum = \-1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|SYNTHETIC\lSplitter:B:1:0x0006\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ RuntimeException \-\> 0x006e \}\lSplitter:B:1:0x0006\l|r4.streamFeeder = new p004ar.com.hjg.pngj.BufferedStreamFeeder(r5)     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\lr4.streamFeeder.setCloseStream(r6)     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\lr6 = false     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\lr4.chunkseq = new p004ar.com.hjg.pngj.ChunkSeqReaderPng(false)     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\lr4.streamFeeder.setFailIfNoFeed(true)     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x002a|Catch:\{ RuntimeException \-\> 0x006e \}\l|if (r4.streamFeeder.feedFixed(r4.chunkseq, 36) == false) goto L_0x0066     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|Catch:\{ RuntimeException \-\> 0x006e \}\l|r4.imgInfo = r4.chunkseq.getImageInfo()     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x003a|Catch:\{ RuntimeException \-\> 0x006e \}\l|if (r4.chunkseq.getDeinterlacer() == null) goto L_0x003d     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x003c|Catch:\{ RuntimeException \-\> 0x006e \}\l|r6 = true     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|Catch:\{ RuntimeException \-\> 0x006e \}\lPHI: r6 \l  PHI: (r6v6 boolean) = (r6v4 boolean), (r6v9 boolean) binds: [B:5:0x003a, B:6:0x003c] A[DONT_GENERATE, DONT_INLINE]\l|r4.interlaced = r6     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\lsetMaxBytesMetadata(MAX_BYTES_METADATA_DEFAULT)     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\lsetMaxTotalBytesRead(MAX_TOTAL_BYTES_READ_DEFAULT)     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\lsetSkipChunkMaxSize(MAX_CHUNK_SIZE_SKIP)     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\lr4.metadata = new p004ar.com.hjg.pngj.chunks.PngMetadata(r4.chunkseq.chunksList)     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\lsetLineSetFactory(p004ar.com.hjg.pngj.ImageLineSetDefault.getFactoryInt())     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\lr4.rowNum = \-1     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0065|RETURN\lCatch:\{ RuntimeException \-\> 0x006e \}\l|return     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0066|Catch:\{ RuntimeException \-\> 0x006e \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x006d|Catch:\{ RuntimeException \-\> 0x006e \}\l|throw new p004ar.com.hjg.pngj.PngjInputException(\"error reading first 21 bytes\")     \/\/ Catch:\{ RuntimeException \-\> 0x006e \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x006e|ExcHandler: RuntimeException (r5v1 'e' java.lang.RuntimeException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0006\l|java.lang.RuntimeException r5 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x006f|r4.streamFeeder.close()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0076|if (r4.chunkseq == null) goto L_0x007d\l}"];
Node_14 [shape=record,label="{14\:\ 0x0078|r4.chunkseq.close()\l}"];
Node_15 [shape=record,label="{15\:\ 0x007d|throw r5\l}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.PngReader.\<init\>((r4v0 'this' ar.com.hjg.pngj.PngReader A[IMMUTABLE_TYPE, THIS]), (r5v0 java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
}

