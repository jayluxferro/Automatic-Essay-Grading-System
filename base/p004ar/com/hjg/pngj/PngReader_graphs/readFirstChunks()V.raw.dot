digraph "CFG forar.com.hjg.pngj.PngReader.readFirstChunks()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:ar.com.hjg.pngj.ChunkSeqReaderPng) = (r2 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng \l0x0002: IGET  (r0 I:int) = (r0 I:ar.com.hjg.pngj.ChunkSeqReaderPng) ar.com.hjg.pngj.ChunkSeqReaderPng.currentChunkGroup int \l0x0004: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IGET  (r0 I:ar.com.hjg.pngj.BufferedStreamFeeder) = (r2 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.streamFeeder ar.com.hjg.pngj.BufferedStreamFeeder \l0x0009: IGET  (r1 I:ar.com.hjg.pngj.ChunkSeqReaderPng) = (r2 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.chunkseq ar.com.hjg.pngj.ChunkSeqReaderPng \l0x000b: INVOKE  \l  (r0 I:ar.com.hjg.pngj.BufferedStreamFeeder)\l  (r1 I:ar.com.hjg.pngj.IBytesConsumer)\l ar.com.hjg.pngj.BufferedStreamFeeder.feed(ar.com.hjg.pngj.IBytesConsumer):int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: RETURN   \l}"];
MethodNode[shape=record,label="{protected void ar.com.hjg.pngj.PngReader.readFirstChunks((r2 'this' I:ar.com.hjg.pngj.PngReader A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_0;
}

