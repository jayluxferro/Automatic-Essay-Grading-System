digraph "CFG forar.com.hjg.pngj.PngReader.getSimpleDigest()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.zip.CRC32) = (r5 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.idatCrca java.util.zip.CRC32 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: RETURN  (r0 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IGET  (r0 I:java.util.zip.CRC32) = (r5 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.idatCrca java.util.zip.CRC32 \l0x0009: INVOKE  (r0 I:long) = (r0 I:java.util.zip.CRC32) java.util.zip.CRC32.getValue():long type: VIRTUAL \l0x000d: IGET  (r2 I:java.util.zip.Adler32) = (r5 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.idatCrcb java.util.zip.Adler32 \l0x000f: INVOKE  (r2 I:long) = (r2 I:java.util.zip.Adler32) java.util.zip.Adler32.getValue():long type: VIRTUAL \l0x0013: CONST  (r4 I:?[int, float, short, byte, char]) = (31 ?[int, float, short, byte, char]) \l0x0015: ARITH  (r2 I:long) = (r2 I:long) \<\< (r4 I:long) \l0x0016: ARITH  (r0 I:long) = (r0 I:long) ^ (r2 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: RETURN  (r0 I:long) \l}"];
MethodNode[shape=record,label="{long ar.com.hjg.pngj.PngReader.getSimpleDigest((r5 'this' I:ar.com.hjg.pngj.PngReader A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

