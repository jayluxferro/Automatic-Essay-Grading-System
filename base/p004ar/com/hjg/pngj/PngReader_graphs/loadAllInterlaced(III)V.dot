digraph "CFG forar.com.hjg.pngj.PngReader.loadAllInterlaced(III)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|ar.com.hjg.pngj.IdatSet r0 = r8.chunkseq.getIdatSet()\lr1 = 0\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:17:0x0008] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0008\-\>B:17:0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|if (r8.chunkseq.getIdatSet().isRowReady() != false) goto L_0x001c\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|r8.streamFeeder.feed(r8.chunkseq)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|ar.com.hjg.pngj.IdatSet r3 = r8.chunkseq.getIdatSet()\lr6 = true\ljava.util.zip.Checksum[] r4 = new java.util.zip.Checksum[]\{r8.idatCrca, r8.idatCrcb\}\lr3.updateCrcs(r4)\lint r3 = r0.rowinfo.rowNreal\l}"];
Node_5 [shape=record,label="{5\:\ 0x0038|if (((r3 \- r10) % r11) != 0) goto L_0x003b\l}"];
Node_6 [shape=record,label="{6\:\ 0x003b|r6 = false\l}"];
Node_7 [shape=record,label="{7\:\ 0x003c|PHI: r6 \l  PHI: (r6v1 boolean) = (r6v0 boolean), (r6v4 boolean) binds: [B:5:0x0038, B:6:0x003b] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 == false) goto L_0x0059\l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|r8.imlinesSet.getImageLine(r3).readFromPngRaw(r0.getUnfilteredRow(), r0.rowinfo.buflen, r0.rowinfo.f55oX, r0.rowinfo.f53dX)\lint r2 = r2 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0059|PHI: r2 \l  PHI: (r2v3 int) = (r2v1 int), (r2v4 int) binds: [B:7:0x003c, B:8:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|r0.advanceToNextRow()\l}"];
Node_10 [shape=record,label="{10\:\ 0x005c|if (r2 \< r9) goto L_0x0008\l}"];
Node_11 [shape=record,label="{11\:\ 0x005e}"];
Node_12 [shape=record,label="{12\:\ 0x0062|if (r0.isDone() == false) goto L_0x0008\l}"];
Node_13 [shape=record,label="{13\:\ 0x0064|r0.done()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0067|LOOP_START\lPHI: r1 r10 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:13:0x0064, B:15:0x0069] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 int) = (r10v0 int), (r10v2 int) binds: [B:13:0x0064, B:15:0x0069] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:14:0x0067\-\>B:15:0x0069\l|if (r1 \>= r9) goto L_0x0076\l}"];
Node_15 [shape=record,label="{15\:\ 0x0069|LOOP_END\lLOOP:1: B:14:0x0067\-\>B:15:0x0069\l|r8.imlinesSet.getImageLine(r10).endReadFromPngRaw()\lint r1 = r1 + 1\lint r10 = r10 + r11\l}"];
Node_16 [shape=record,label="{16\:\ 0x0076|RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|LOOP_END\lSYNTHETIC\lPHI: r2 \l  PHI: (r2v2 int) = (r2v3 int), (r2v3 int), (r2v1 int) binds: [B:20:0x0008, B:21:0x0008, B:19:0x0008] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0008\-\>B:17:0x0008\l}"];
Node_18 [shape=record,label="{18\:\ 0x0064|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0076|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void ar.com.hjg.pngj.PngReader.loadAllInterlaced((r8v0 'this' ar.com.hjg.pngj.PngReader A[IMMUTABLE_TYPE, THIS]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_19;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_20;
Node_11 -> Node_12;
Node_12 -> Node_18[style=dashed];
Node_12 -> Node_21;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_22;
Node_15 -> Node_14;
Node_17 -> Node_1;
Node_18 -> Node_13;
Node_19 -> Node_17;
Node_20 -> Node_17;
Node_21 -> Node_17;
Node_22 -> Node_16;
}

