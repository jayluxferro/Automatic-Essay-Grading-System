digraph "CFG forar.com.hjg.pngj.ProgressiveOutputStream.flush()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.flush():void type: SUPER \l0x0003: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0004: INVOKE  \l  (r1 I:ar.com.hjg.pngj.ProgressiveOutputStream)\l  (r0 I:boolean)\l ar.com.hjg.pngj.ProgressiveOutputStream.checkFlushBuffer(boolean):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: RETURN   \l}"];
MethodNode[shape=record,label="{public final void ar.com.hjg.pngj.ProgressiveOutputStream.flush((r1 'this' I:ar.com.hjg.pngj.ProgressiveOutputStream A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

