digraph "CFG forar.com.hjg.pngj.BufferedStreamFeeder.refillBuffer()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.pendinglen int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:15:0x0026 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:boolean) = (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.eof boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0009 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|SYNTHETIC\lSplitter:B:6:0x000a\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x000a\l|0x000a: IPUT  (r0 I:int), (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.offset int A[Catch:\{ IOException \-\> 0x001f \}, TRY_ENTER]\l0x000c: IGET  (r0 I:java.io.InputStream) = (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.stream java.io.InputStream A[Catch:\{ IOException \-\> 0x001f \}]\l0x000e: IGET  (r1 I:byte[]) = (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.buf byte[] A[Catch:\{ IOException \-\> 0x001f \}]\l0x0010: INVOKE  (r0 I:int) = (r0 I:java.io.InputStream), (r1 I:byte[]) java.io.InputStream.read(byte[]):int type: VIRTUAL A[Catch:\{ IOException \-\> 0x001f \}]\l0x0014: IPUT  (r0 I:int), (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.pendinglen int A[Catch:\{ IOException \-\> 0x001f \}]\l0x0016: IGET  (r0 I:int) = (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.pendinglen int A[Catch:\{ IOException \-\> 0x001f \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:11:0x001e A[Catch:\{ IOException \-\> 0x001f \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: INVOKE  (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x001f \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: RETURN   \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: RETURN   \l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|ExcHandler: IOException null\lSplitter:B:6:0x000a\l|0x001f: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|0x0020: NEW_INSTANCE  (r1 I:ar.com.hjg.pngj.PngjInputException) =  ar.com.hjg.pngj.PngjInputException \l0x0022: INVOKE  \l  (r1 I:ar.com.hjg.pngj.PngjInputException)\l  (r0 I:java.lang.Throwable)\l ar.com.hjg.pngj.PngjInputException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|0x0025: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0026|0x0026: RETURN   \l}"];
MethodNode[shape=record,label="{protected void ar.com.hjg.pngj.BufferedStreamFeeder.refillBuffer((r2 'this' I:ar.com.hjg.pngj.BufferedStreamFeeder A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_15[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

