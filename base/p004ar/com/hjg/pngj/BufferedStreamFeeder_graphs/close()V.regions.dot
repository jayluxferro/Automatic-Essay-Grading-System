digraph "CFG forar.com.hjg.pngj.BufferedStreamFeeder.close()V" {
subgraph cluster_Region_749802814 {
label = "R(3:0|(1:(1:5))|6)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.eof = true\lr2.buf = null\lr2.pendinglen = 0\lr2.offset = 0\l}"];
subgraph cluster_IfRegion_2056991057 {
label = "IF [B:1:0x000d, B:3:0x0011] THEN: R(1:(1:5)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000d|ADDED_TO_REGION\l|if (r2.stream != null) goto L_0x000f\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|ADDED_TO_REGION\l|if (r2.closeStream == true) goto L_0x0013\l}"];
subgraph cluster_Region_1932990806 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1096364079 {
label = "Try: R(1:5) catches: R(0)";
node [shape=record,color=blue];
subgraph cluster_Region_1709561311 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ Exception \-\> 0x0018 \}\lSplitter:B:4:0x0013\l|r2.stream.close()     \/\/ Catch:\{ Exception \-\> 0x0018 \}\l}"];
}
subgraph cluster_Region_1188524427 {
label = "R(0) | ExcHandler: Exception (unused java.lang.Exception)\l";
node [shape=record,color=blue];
}
}
}
}
Node_6 [shape=record,label="{6\:\ 0x0018|r2.stream = null\l}"];
}
subgraph cluster_Region_1188524427 {
label = "R(0) | ExcHandler: Exception (unused java.lang.Exception)\l";
node [shape=record,color=blue];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000f}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0013|SYNTHETIC\lSplitter:B:4:0x0013\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lExcHandler: Exception (unused java.lang.Exception)\lSplitter:B:4:0x0013\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001a}"];
MethodNode[shape=record,label="{public void ar.com.hjg.pngj.BufferedStreamFeeder.close((r2v0 'this' ar.com.hjg.pngj.BufferedStreamFeeder A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_7 -> Node_6;
}

