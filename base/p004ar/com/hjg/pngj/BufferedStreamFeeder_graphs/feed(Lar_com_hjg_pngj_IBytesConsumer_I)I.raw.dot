digraph "CFG forar.com.hjg.pngj.BufferedStreamFeeder.feed(Lar\/com\/hjg\/pngj\/IBytesConsumer;I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.pendinglen int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.refillBuffer():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x000e \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IGET  (r0 I:int) = (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.pendinglen int \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r4 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:7:0x000e \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IGET  (r4 I:int) = (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.pendinglen int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x0027 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: IGET  (r0 I:byte[]) = (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.buf byte[] \l0x0014: IGET  (r1 I:int) = (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.offset int \l0x0016: INVOKE  (r3 I:int) = \l  (r3 I:ar.com.hjg.pngj.IBytesConsumer)\l  (r0 I:byte[])\l  (r1 I:int)\l  (r4 I:int)\l ar.com.hjg.pngj.IBytesConsumer.consume(byte[], int, int):int type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:13:0x0028 \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: IGET  (r4 I:int) = (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.offset int \l0x001e: ARITH  (r4 I:int) = (r4 I:int) + (r3 I:int) \l0x001f: IPUT  (r4 I:int), (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.offset int \l0x0021: IGET  (r4 I:int) = (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.pendinglen int \l0x0023: ARITH  (r4 I:int) = (r4 I:int) \- (r3 I:int) \l0x0024: IPUT  (r4 I:int), (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.pendinglen int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|0x0027: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|0x0028: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|0x0029: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:20:0x0038 \l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|0x002b: IGET  (r4 I:boolean) = (r2 I:ar.com.hjg.pngj.BufferedStreamFeeder) ar.com.hjg.pngj.BufferedStreamFeeder.failIfNoFeed boolean \l}"];
Node_16 [shape=record,label="{16\:\ 0x002d|0x002d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0030 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0030|0x0030: NEW_INSTANCE  (r3 I:ar.com.hjg.pngj.PngjInputException) =  ar.com.hjg.pngj.PngjInputException \l0x0032: CONST_STR  (r4 I:java.lang.String) =  \"failed feed bytes\" \l0x0034: INVOKE  \l  (r3 I:ar.com.hjg.pngj.PngjInputException)\l  (r4 I:java.lang.String)\l ar.com.hjg.pngj.PngjInputException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0037|0x0037: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0038|0x0038: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{public int ar.com.hjg.pngj.BufferedStreamFeeder.feed((r2 'this' I:ar.com.hjg.pngj.BufferedStreamFeeder A[IMMUTABLE_TYPE, THIS]), (r3 I:ar.com.hjg.pngj.IBytesConsumer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_20[style=dashed];
Node_18 -> Node_19;
}

