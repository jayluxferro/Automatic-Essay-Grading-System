digraph "CFG forar.com.hjg.pngj.Deinterlacer.setPass(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.pass int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IPUT  (r4 I:int), (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.pass int \l0x0007: INVOKE  (r4 I:byte[]) = (r4 I:int) ar.com.hjg.pngj.Deinterlacer.paramsForPass(int):byte[] type: STATIC \l0x000b: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r4 I:byte[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l \l0x000e: IPUT  (r1 I:int), (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.dX int \l0x0010: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0011: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r4 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x0013: IPUT  (r2 I:int), (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.dY int \l0x0015: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0016: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r4 I:byte[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x0018: IPUT  (r2 I:int), (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.oX int \l0x001a: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x001b: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r4 I:byte[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x001d: IPUT  (r4 I:int), (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.oY int \l0x001f: IGET  (r4 I:ar.com.hjg.pngj.ImageInfo) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.imi ar.com.hjg.pngj.ImageInfo \l0x0021: IGET  (r4 I:int) = (r4 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.rows int \l0x0023: IGET  (r2 I:int) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.oY int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: IF  (r4 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:6:0x0036 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|0x0027: IGET  (r4 I:ar.com.hjg.pngj.ImageInfo) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.imi ar.com.hjg.pngj.ImageInfo \l0x0029: IGET  (r4 I:int) = (r4 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.rows int \l0x002b: IGET  (r2 I:int) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.dY int \l0x002d: ARITH  (r4 I:int) = (r4 I:int) + (r2 I:int) \l0x002e: ARITH  (r4 I:int) = (r4 I:int) \- (r1 I:int) \l0x002f: IGET  (r2 I:int) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.oY int \l0x0031: ARITH  (r4 I:int) = (r4 I:int) \- (r2 I:int) \l0x0032: IGET  (r2 I:int) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.dY int \l0x0034: ARITH  (r4 I:int) = (r4 I:int) \/ (r2 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|0x0036: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|0x0037: IPUT  (r4 I:int), (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.rows int \l0x0039: IGET  (r4 I:ar.com.hjg.pngj.ImageInfo) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.imi ar.com.hjg.pngj.ImageInfo \l0x003b: IGET  (r4 I:int) = (r4 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.cols int \l0x003d: IGET  (r2 I:int) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.oX int \l}"];
Node_8 [shape=record,label="{8\:\ 0x003f|0x003f: IF  (r4 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:10:0x0050 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|0x0041: IGET  (r4 I:ar.com.hjg.pngj.ImageInfo) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.imi ar.com.hjg.pngj.ImageInfo \l0x0043: IGET  (r4 I:int) = (r4 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.cols int \l0x0045: IGET  (r2 I:int) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.dX int \l0x0047: ARITH  (r4 I:int) = (r4 I:int) + (r2 I:int) \l0x0048: ARITH  (r4 I:int) = (r4 I:int) \- (r1 I:int) \l0x0049: IGET  (r1 I:int) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.oX int \l0x004b: ARITH  (r4 I:int) = (r4 I:int) \- (r1 I:int) \l0x004c: IGET  (r1 I:int) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.dX int \l0x004e: ARITH  (r4 I:int) = (r4 I:int) \/ (r1 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0050|0x0050: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0051|0x0051: IPUT  (r4 I:int), (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.cols int \l0x0053: IGET  (r4 I:int) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.cols int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0055|0x0055: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0059 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0057|0x0057: IPUT  (r0 I:int), (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.rows int \l}"];
Node_14 [shape=record,label="{14\:\ 0x0059|0x0059: IGET  (r4 I:int) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.dX int \l0x005b: IGET  (r0 I:ar.com.hjg.pngj.ImageInfo) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.imi ar.com.hjg.pngj.ImageInfo \l0x005d: IGET  (r0 I:int) = (r0 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.channels int \l0x005f: ARITH  (r4 I:int) = (r4 I:int) * (r0 I:int) \l0x0061: IPUT  (r4 I:int), (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.dXsamples int \l0x0063: IGET  (r4 I:int) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.oX int \l0x0065: IGET  (r0 I:ar.com.hjg.pngj.ImageInfo) = (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.imi ar.com.hjg.pngj.ImageInfo \l0x0067: IGET  (r0 I:int) = (r0 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.channels int \l0x0069: ARITH  (r4 I:int) = (r4 I:int) * (r0 I:int) \l0x006b: IPUT  (r4 I:int), (r3 I:ar.com.hjg.pngj.Deinterlacer) ar.com.hjg.pngj.Deinterlacer.oXsamples int \l}"];
Node_15 [shape=record,label="{15\:\ 0x006d|0x006d: RETURN   \l}"];
MethodNode[shape=record,label="{void ar.com.hjg.pngj.Deinterlacer.setPass((r3 'this' I:ar.com.hjg.pngj.Deinterlacer A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

