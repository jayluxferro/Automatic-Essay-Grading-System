digraph "CFG forar.com.hjg.pngj.Deinterlacer.paramsForPass(I)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6, 7] t:[0x003f, 0x0039, 0x0033, 0x002d, 0x0027, 0x0021, 0x001b] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.PngjExceptionInternal) =  ar.com.hjg.pngj.PngjExceptionInternal \l0x0006: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0008: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000b: CONST_STR  (r2 I:java.lang.String) =  \"bad interlace pass\" \l0x000d: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0010: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0013: INVOKE  (r3 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0017: INVOKE  \l  (r0 I:ar.com.hjg.pngj.PngjExceptionInternal)\l  (r3 I:java.lang.String)\l ar.com.hjg.pngj.PngjExceptionInternal.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: NEW_ARRAY  (r3 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x001d: FILL_ARRAY  (r3 I:?[boolean, byte][]), data: [1, 2, 0, 1] \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: RETURN  (r3 I:byte[]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: NEW_ARRAY  (r3 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0023: FILL_ARRAY  (r3 I:?[boolean, byte][]), data: [2, 2, 1, 0] \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: RETURN  (r3 I:byte[]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: NEW_ARRAY  (r3 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0029: FILL_ARRAY  (r3 I:?[boolean, byte][]), data: [2, 4, 0, 2] \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: RETURN  (r3 I:byte[]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: NEW_ARRAY  (r3 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x002f: FILL_ARRAY  (r3 I:?[boolean, byte][]), data: [4, 4, 2, 0] \l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|0x0032: RETURN  (r3 I:byte[]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|0x0033: NEW_ARRAY  (r3 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0035: FILL_ARRAY  (r3 I:?[boolean, byte][]), data: [4, 8, 0, 4] \l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|0x0038: RETURN  (r3 I:byte[]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|0x0039: NEW_ARRAY  (r3 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x003b: FILL_ARRAY  (r3 I:?[boolean, byte][]), data: [8, 8, 4, 0] \l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|0x003e: RETURN  (r3 I:byte[]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: NEW_ARRAY  (r3 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0041: FILL_ARRAY  (r3 I:?[boolean, byte][]), data: [8, 8, 0, 0] \l}"];
Node_17 [shape=record,label="{17\:\ 0x0044|0x0044: RETURN  (r3 I:byte[]) \l}"];
MethodNode[shape=record,label="{static byte[] ar.com.hjg.pngj.Deinterlacer.paramsForPass((r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_6;
Node_1 -> Node_8;
Node_1 -> Node_10;
Node_1 -> Node_12;
Node_1 -> Node_14;
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

