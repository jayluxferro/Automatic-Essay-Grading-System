digraph "CFG forar.com.hjg.pngj.FilterType.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType \l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"FILTER_NONE\" \l0x0004: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: INVOKE  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:java.lang.String)\l  (r2 I:int)\l  (r2 I:int)\l ar.com.hjg.pngj.FilterType.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0008: SPUT  (r0 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.FILTER_NONE ar.com.hjg.pngj.FilterType \l0x000a: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType \l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"FILTER_SUB\" \l0x000e: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000f: INVOKE  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:java.lang.String)\l  (r3 I:int)\l  (r3 I:int)\l ar.com.hjg.pngj.FilterType.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0012: SPUT  (r0 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.FILTER_SUB ar.com.hjg.pngj.FilterType \l0x0014: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType \l0x0016: CONST_STR  (r1 I:java.lang.String) =  \"FILTER_UP\" \l0x0018: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0019: INVOKE  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:java.lang.String)\l  (r4 I:int)\l  (r4 I:int)\l ar.com.hjg.pngj.FilterType.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x001c: SPUT  (r0 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.FILTER_UP ar.com.hjg.pngj.FilterType \l0x001e: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType \l0x0020: CONST_STR  (r1 I:java.lang.String) =  \"FILTER_AVERAGE\" \l0x0022: CONST  (r5 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0023: INVOKE  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:java.lang.String)\l  (r5 I:int)\l  (r5 I:int)\l ar.com.hjg.pngj.FilterType.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0026: SPUT  (r0 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.FILTER_AVERAGE ar.com.hjg.pngj.FilterType \l0x0028: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType \l0x002a: CONST_STR  (r1 I:java.lang.String) =  \"FILTER_PAETH\" \l0x002c: CONST  (r6 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x002d: INVOKE  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:java.lang.String)\l  (r6 I:int)\l  (r6 I:int)\l ar.com.hjg.pngj.FilterType.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0030: SPUT  (r0 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.FILTER_PAETH ar.com.hjg.pngj.FilterType \l0x0032: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType \l0x0034: CONST_STR  (r1 I:java.lang.String) =  \"FILTER_DEFAULT\" \l0x0036: CONST  (r7 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0037: CONST  (r8 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0038: INVOKE  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:java.lang.String)\l  (r7 I:int)\l  (r8 I:int)\l ar.com.hjg.pngj.FilterType.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x003b: SPUT  (r0 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.FILTER_DEFAULT ar.com.hjg.pngj.FilterType \l0x003d: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType \l0x003f: CONST_STR  (r1 I:java.lang.String) =  \"FILTER_AGGRESSIVE\" \l0x0041: CONST  (r8 I:?[int, float, short, byte, char]) = (\-2 ?[int, float, short, byte, char]) \l0x0042: CONST  (r9 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0043: INVOKE  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:java.lang.String)\l  (r9 I:int)\l  (r8 I:int)\l ar.com.hjg.pngj.FilterType.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0046: SPUT  (r0 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.FILTER_AGGRESSIVE ar.com.hjg.pngj.FilterType \l0x0048: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType \l0x004a: CONST_STR  (r1 I:java.lang.String) =  \"FILTER_VERYAGGRESSIVE\" \l0x004c: CONST  (r10 I:?[int, float, short, byte, char]) = (\-4 ?[int, float, short, byte, char]) \l0x004d: CONST  (r11 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l0x004e: INVOKE  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:java.lang.String)\l  (r11 I:int)\l  (r10 I:int)\l ar.com.hjg.pngj.FilterType.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0051: SPUT  (r0 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.FILTER_VERYAGGRESSIVE ar.com.hjg.pngj.FilterType \l0x0053: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType \l0x0055: CONST_STR  (r1 I:java.lang.String) =  \"FILTER_ADAPTIVE_FULL\" \l0x0057: CONST  (r12 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0059: INVOKE  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:java.lang.String)\l  (r12 I:int)\l  (r10 I:int)\l ar.com.hjg.pngj.FilterType.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x005c: SPUT  (r0 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.FILTER_ADAPTIVE_FULL ar.com.hjg.pngj.FilterType \l0x005e: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType \l0x0060: CONST_STR  (r1 I:java.lang.String) =  \"FILTER_ADAPTIVE_MEDIUM\" \l0x0062: CONST  (r10 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l0x0064: CONST  (r13 I:?[int, float, short, byte, char]) = (\-3 ?[int, float, short, byte, char]) \l0x0065: INVOKE  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:java.lang.String)\l  (r10 I:int)\l  (r13 I:int)\l ar.com.hjg.pngj.FilterType.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0068: SPUT  (r0 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.FILTER_ADAPTIVE_MEDIUM ar.com.hjg.pngj.FilterType \l0x006a: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType \l0x006c: CONST_STR  (r1 I:java.lang.String) =  \"FILTER_ADAPTIVE_FAST\" \l0x006e: CONST  (r13 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0070: INVOKE  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:java.lang.String)\l  (r13 I:int)\l  (r8 I:int)\l ar.com.hjg.pngj.FilterType.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0073: SPUT  (r0 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.FILTER_ADAPTIVE_FAST ar.com.hjg.pngj.FilterType \l0x0075: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType \l0x0077: CONST_STR  (r1 I:java.lang.String) =  \"FILTER_SUPER_ADAPTIVE\" \l0x0079: CONST  (r8 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l0x007b: CONST  (r14 I:?[int, float, short, byte, char]) = (\-10 ?[int, float, short, byte, char]) \l0x007d: INVOKE  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:java.lang.String)\l  (r8 I:int)\l  (r14 I:int)\l ar.com.hjg.pngj.FilterType.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0080: SPUT  (r0 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.FILTER_SUPER_ADAPTIVE ar.com.hjg.pngj.FilterType \l0x0082: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType \l0x0084: CONST_STR  (r1 I:java.lang.String) =  \"FILTER_PRESERVE\" \l0x0086: CONST  (r14 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l0x0088: CONST  (r15 I:?[int, float, short, byte, char]) = (\-40 ?[int, float, short, byte, char]) \l0x008a: INVOKE  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:java.lang.String)\l  (r14 I:int)\l  (r15 I:int)\l ar.com.hjg.pngj.FilterType.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x008d: SPUT  (r0 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.FILTER_PRESERVE ar.com.hjg.pngj.FilterType \l0x008f: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType \l0x0091: CONST_STR  (r1 I:java.lang.String) =  \"FILTER_CYCLIC\" \l0x0093: CONST  (r15 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l0x0095: CONST  (r14 I:?[int, float, short, byte, char]) = (\-50 ?[int, float, short, byte, char]) \l0x0097: INVOKE  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:java.lang.String)\l  (r15 I:int)\l  (r14 I:int)\l ar.com.hjg.pngj.FilterType.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x009a: SPUT  (r0 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.FILTER_CYCLIC ar.com.hjg.pngj.FilterType \l0x009c: NEW_INSTANCE  (r0 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType \l0x009e: CONST_STR  (r1 I:java.lang.String) =  \"FILTER_UNKNOWN\" \l0x00a0: CONST  (r14 I:?[int, float, short, byte, char]) = (14 ?[int, float, short, byte, char]) \l0x00a2: CONST  (r15 I:?[int, float, short, byte, char]) = (\-100 ?[int, float, short, byte, char]) \l0x00a4: INVOKE  \l  (r0 I:ar.com.hjg.pngj.FilterType)\l  (r1 I:java.lang.String)\l  (r14 I:int)\l  (r15 I:int)\l ar.com.hjg.pngj.FilterType.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x00a7: SPUT  (r0 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.FILTER_UNKNOWN ar.com.hjg.pngj.FilterType \l0x00a9: CONST  (r0 I:?[int, float, short, byte, char]) = (15 ?[int, float, short, byte, char]) \l0x00ab: NEW_ARRAY  (r0 I:ar.com.hjg.pngj.FilterType[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: ar.com.hjg.pngj.FilterType[] \l0x00ad: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_NONE ar.com.hjg.pngj.FilterType \l0x00af: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00b1: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_SUB ar.com.hjg.pngj.FilterType \l0x00b3: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00b5: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_UP ar.com.hjg.pngj.FilterType \l0x00b7: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00b9: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_AVERAGE ar.com.hjg.pngj.FilterType \l0x00bb: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00bd: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_PAETH ar.com.hjg.pngj.FilterType \l0x00bf: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r6 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00c1: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_DEFAULT ar.com.hjg.pngj.FilterType \l0x00c3: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00c5: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_AGGRESSIVE ar.com.hjg.pngj.FilterType \l0x00c7: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r9 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00c9: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_VERYAGGRESSIVE ar.com.hjg.pngj.FilterType \l0x00cb: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r11 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00cd: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_ADAPTIVE_FULL ar.com.hjg.pngj.FilterType \l0x00cf: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r12 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00d1: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_ADAPTIVE_MEDIUM ar.com.hjg.pngj.FilterType \l0x00d3: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00d5: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_ADAPTIVE_FAST ar.com.hjg.pngj.FilterType \l0x00d7: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r13 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00d9: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_SUPER_ADAPTIVE ar.com.hjg.pngj.FilterType \l0x00db: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r8 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00dd: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_PRESERVE ar.com.hjg.pngj.FilterType \l0x00df: CONST  (r3 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l0x00e1: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00e3: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_CYCLIC ar.com.hjg.pngj.FilterType \l0x00e5: CONST  (r3 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l0x00e7: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00e9: SGET  (r1 I:ar.com.hjg.pngj.FilterType) =  ar.com.hjg.pngj.FilterType.FILTER_UNKNOWN ar.com.hjg.pngj.FilterType \l0x00eb: CONST  (r3 I:?[int, float, short, byte, char]) = (14 ?[int, float, short, byte, char]) \l0x00ed: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00ef: SPUT  (r0 I:ar.com.hjg.pngj.FilterType[]) ar.com.hjg.pngj.FilterType.$VALUES ar.com.hjg.pngj.FilterType[] \l0x00f1: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x00f3: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x00f6: SPUT  \l  (r0 I:java.util.HashMap\<java.lang.Integer, ar.com.hjg.pngj.FilterType\>)\l ar.com.hjg.pngj.FilterType.byVal java.util.HashMap \l0x00f8: INVOKE  (r0 I:ar.com.hjg.pngj.FilterType[]) =  ar.com.hjg.pngj.FilterType.values():ar.com.hjg.pngj.FilterType[] type: STATIC \l0x00fc: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x00fd|0x00fd: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x010f \l}"];
Node_2 [shape=record,label="{2\:\ 0x00ff|0x00ff: AGET  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0101: SGET  (r4 I:java.util.HashMap\<java.lang.Integer, ar.com.hjg.pngj.FilterType\>) =  ar.com.hjg.pngj.FilterType.byVal java.util.HashMap \l0x0103: IGET  (r5 I:int) = (r3 I:ar.com.hjg.pngj.FilterType) ar.com.hjg.pngj.FilterType.val int \l0x0105: INVOKE  (r5 I:java.lang.Integer) = (r5 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0109: INVOKE  \l  (r4 I:java.util.HashMap)\l  (r5 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l0x010c: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x010f|0x010f: RETURN   \l}"];
MethodNode[shape=record,label="{static void ar.com.hjg.pngj.FilterType.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

