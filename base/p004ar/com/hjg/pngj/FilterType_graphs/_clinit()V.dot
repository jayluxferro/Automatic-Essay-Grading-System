digraph "CFG forar.com.hjg.pngj.FilterType.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2 = 0\lFILTER_NONE = new p004ar.com.hjg.pngj.FilterType(\"FILTER_NONE\", 0, 0)\lFILTER_SUB = new p004ar.com.hjg.pngj.FilterType(\"FILTER_SUB\", 1, 1)\lFILTER_UP = new p004ar.com.hjg.pngj.FilterType(\"FILTER_UP\", 2, 2)\lFILTER_AVERAGE = new p004ar.com.hjg.pngj.FilterType(\"FILTER_AVERAGE\", 3, 3)\lFILTER_PAETH = new p004ar.com.hjg.pngj.FilterType(\"FILTER_PAETH\", 4, 4)\lFILTER_DEFAULT = new p004ar.com.hjg.pngj.FilterType(\"FILTER_DEFAULT\", 5, \-1)\lFILTER_AGGRESSIVE = new p004ar.com.hjg.pngj.FilterType(\"FILTER_AGGRESSIVE\", 6, \-2)\lFILTER_VERYAGGRESSIVE = new p004ar.com.hjg.pngj.FilterType(\"FILTER_VERYAGGRESSIVE\", 7, \-4)\lFILTER_ADAPTIVE_FULL = new p004ar.com.hjg.pngj.FilterType(\"FILTER_ADAPTIVE_FULL\", 8, \-4)\lFILTER_ADAPTIVE_MEDIUM = new p004ar.com.hjg.pngj.FilterType(\"FILTER_ADAPTIVE_MEDIUM\", 9, \-3)\lFILTER_ADAPTIVE_FAST = new p004ar.com.hjg.pngj.FilterType(\"FILTER_ADAPTIVE_FAST\", 10, \-2)\lFILTER_SUPER_ADAPTIVE = new p004ar.com.hjg.pngj.FilterType(\"FILTER_SUPER_ADAPTIVE\", 11, \-10)\lFILTER_PRESERVE = new p004ar.com.hjg.pngj.FilterType(\"FILTER_PRESERVE\", 12, \-40)\lFILTER_CYCLIC = new p004ar.com.hjg.pngj.FilterType(\"FILTER_CYCLIC\", 13, \-50)\lFILTER_UNKNOWN = new p004ar.com.hjg.pngj.FilterType(\"FILTER_UNKNOWN\", 14, \-100)\lar.com.hjg.pngj.FilterType[] r0 = new p004ar.com.hjg.pngj.FilterType[]\{FILTER_NONE, FILTER_SUB, FILTER_UP, FILTER_AVERAGE, FILTER_PAETH, FILTER_DEFAULT, FILTER_AGGRESSIVE, FILTER_VERYAGGRESSIVE, FILTER_ADAPTIVE_FULL, FILTER_ADAPTIVE_MEDIUM, FILTER_ADAPTIVE_FAST, FILTER_SUPER_ADAPTIVE, FILTER_PRESERVE, FILTER_CYCLIC, FILTER_UNKNOWN\}\l$VALUES = r0\lbyVal = new java.util.HashMap\<\>()\lar.com.hjg.pngj.FilterType[] r0 = values()\lint r1 = r0.length\l}"];
Node_1 [shape=record,label="{1\:\ 0x00fd|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:2:0x00ff] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x00fd\-\>B:2:0x00ff\l|if (r2 \>= r1) goto L_0x010f\l}"];
Node_2 [shape=record,label="{2\:\ 0x00ff|LOOP_END\lLOOP:0: B:1:0x00fd\-\>B:2:0x00ff\l|r3 = r0[r2]\lbyVal.put(java.lang.Integer.valueOf(r3.val), r3)\lint r2 = r2 + 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x010f|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x010f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static void ar.com.hjg.pngj.FilterType.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_1;
Node_4 -> Node_3;
}

