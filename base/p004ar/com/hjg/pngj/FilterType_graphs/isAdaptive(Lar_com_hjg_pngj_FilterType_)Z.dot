digraph "CFG forar.com.hjg.pngj.FilterType.isAdaptive(Lar\/com\/hjg\/pngj\/FilterType;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r2.val \> \-2) goto L_0x000c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r2.val \< \-4) goto L_0x000c\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|SYNTHETIC\lRETURN\l|return true\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static boolean ar.com.hjg.pngj.FilterType.isAdaptive((r2v0 ar.com.hjg.pngj.FilterType A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
}

