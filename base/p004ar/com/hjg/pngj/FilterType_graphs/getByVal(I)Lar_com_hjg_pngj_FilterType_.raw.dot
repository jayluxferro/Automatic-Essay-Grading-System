digraph "CFG forar.com.hjg.pngj.FilterType.getByVal(I)Lar\/com\/hjg\/pngj\/FilterType;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:java.util.HashMap\<java.lang.Integer, ar.com.hjg.pngj.FilterType\>) =  ar.com.hjg.pngj.FilterType.byVal java.util.HashMap \l0x0002: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0006: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.HashMap), (r1 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x000a: CHECK_CAST  (r1 I:ar.com.hjg.pngj.FilterType) = (ar.com.hjg.pngj.FilterType) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: RETURN  (r1 I:ar.com.hjg.pngj.FilterType) \l}"];
MethodNode[shape=record,label="{public static ar.com.hjg.pngj.FilterType ar.com.hjg.pngj.FilterType.getByVal((r1 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

