digraph "CFG forar.com.hjg.pngj.ImageLineHelper.initDepthScale()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|DEPTH_UNPACK_1 = new int[2]\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v3 int) binds: [B:0:0x0000, B:2:0x0009] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:2:0x0009\l|if (r2 \>= 2) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|LOOP_END\lLOOP:0: B:1:0x0007\-\>B:2:0x0009\l|DEPTH_UNPACK_1[r2] = r2 * 255\lint r2 = r2 + 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|DEPTH_UNPACK_2 = new int[4]\lr3 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|LOOP_START\lPHI: r3 \l  PHI: (r3v2 int) = (r3v1 int), (r3v6 int) binds: [B:3:0x0012, B:6:0x001b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:4:0x0018\-\>B:6:0x001b\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|if (r3 \>= 4) goto L_0x0025\l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|LOOP_END\lLOOP:1: B:4:0x0018\-\>B:6:0x001b\l|DEPTH_UNPACK_2[r3] = (r3 * 255) \/ 3\lint r3 = r3 + 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|DEPTH_UNPACK_4 = new int[16]\lr5 = 0\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|LOOP_START\lPHI: r5 \l  PHI: (r5v2 int) = (r5v1 int), (r5v4 int) binds: [B:7:0x0025, B:9:0x002e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:8:0x002c\-\>B:9:0x002e\l|if (r5 \>= 16) goto L_0x0039\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|LOOP_END\lLOOP:2: B:8:0x002c\-\>B:9:0x002e\l|DEPTH_UNPACK_4[r5] = (r5 * 255) \/ 15\lint r5 = r5 + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|int[][] r3 = new int[][]\{null, DEPTH_UNPACK_1, DEPTH_UNPACK_2, null, DEPTH_UNPACK_4\}\lDEPTH_UNPACK = r3\l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ 0x0012|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void ar.com.hjg.pngj.ImageLineHelper.initDepthScale() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_1;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_8;
Node_10 -> Node_11;
Node_12 -> Node_3;
Node_13 -> Node_7;
Node_14 -> Node_10;
}

