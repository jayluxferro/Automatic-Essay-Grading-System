digraph "CFG forar.com.hjg.pngj.ImageLineHelper.getMaskForPackedFormatsLs(I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: CONST  (r1 I:?[int, float, short, byte, char]) = (15 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: RETURN  (r1 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000b \l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|0x000a: RETURN  (r1 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x000b|0x000b: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x000c|0x000c: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{static int ar.com.hjg.pngj.ImageLineHelper.getMaskForPackedFormatsLs((r1 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

