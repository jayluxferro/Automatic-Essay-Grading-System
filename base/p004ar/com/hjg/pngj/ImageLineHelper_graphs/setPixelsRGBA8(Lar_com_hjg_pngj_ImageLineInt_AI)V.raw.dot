digraph "CFG forar.com.hjg.pngj.ImageLineHelper.setPixelsRGBA8(Lar\/com\/hjg\/pngj\/ImageLineInt;[I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r2 I:ar.com.hjg.pngj.ImageInfo) = (r5 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.imgInfo ar.com.hjg.pngj.ImageInfo \l0x0004: IGET  (r2 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.cols int \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:4:0x003a \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r2 I:int[]) = (r5 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l0x000a: ARITH  (r3 I:int) = (r1 I:int) + (1 int) \l0x000c: AGET  (r4 I:?[int, float]) = (r6 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l0x000e: ARITH  (r4 I:int) = (r4 I:int) \>\> (16 int) \l0x0010: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0012: APUT  \l  (r2 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x0014: IGET  (r1 I:int[]) = (r5 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l0x0016: ARITH  (r2 I:int) = (r3 I:int) + (1 int) \l0x0018: AGET  (r4 I:?[int, float]) = (r6 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l0x001a: ARITH  (r4 I:int) = (r4 I:int) \>\> (8 int) \l0x001c: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x001e: APUT  \l  (r1 I:?[int, float][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x0020: IGET  (r1 I:int[]) = (r5 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l0x0022: ARITH  (r3 I:int) = (r2 I:int) + (1 int) \l0x0024: AGET  (r4 I:?[int, float]) = (r6 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l0x0026: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0028: APUT  \l  (r1 I:?[int, float][])\l  (r2 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x002a: IGET  (r1 I:int[]) = (r5 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l0x002c: ARITH  (r2 I:int) = (r3 I:int) + (1 int) \l0x002e: AGET  (r4 I:?[int, float]) = (r6 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l0x0030: ARITH  (r4 I:int) = (r4 I:int) \>\> (24 int) \l0x0032: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0034: APUT  \l  (r1 I:?[int, float][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x0036: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0038: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x003a|0x003a: RETURN   \l}"];
MethodNode[shape=record,label="{public static void ar.com.hjg.pngj.ImageLineHelper.setPixelsRGBA8((r5 I:ar.com.hjg.pngj.ImageLineInt A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

