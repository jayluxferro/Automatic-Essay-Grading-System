digraph "CFG forar.com.hjg.pngj.ImageLineHelper.lineToRGB888(Lar\/com\/hjg\/pngj\/ImageLineByte;Lar\/com\/hjg\/pngj\/chunks\/PngChunkPLTE;[B)[B" {
subgraph cluster_Region_1747484401 {
label = "R(5:0|(1:4)|5|(2:7|(1:9))(1:(2:12|(2:14|15))(1:(1:19)(2:20|(1:22))))|23)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|boolean boolean r0 = r8.imgInfo.alpha\lint int r1 = r8.imgInfo.cols\lint int r2 = r1 * 3\l}"];
subgraph cluster_IfRegion_1400377306 {
label = "IF [B:1:0x000a, B:3:0x000d] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|ADDED_TO_REGION\l|if (r10 == null) goto L_0x000f\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|ADDED_TO_REGION\l|if (r10.length \< r2) goto L_0x000f\l}"];
subgraph cluster_Region_564556431 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|byte[] r10 = new byte[r2]\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0011|PHI: r10 \l  PHI: (r10v1 byte[]) = (r10v2 byte[]), (r10v0 byte[]) binds: [B:4:0x000f, B:3:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|int[] int[] r3 = new int[3]\lint r5 = 0\l}"];
subgraph cluster_IfRegion_2126902487 {
label = "IF [B:6:0x001a] THEN: R(2:7|(1:9)) ELSE: R(1:(2:12|(2:14|15))(1:(1:19)(2:20|(1:22))))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001a|if (r8.imgInfo.indexed == true) goto L_0x001c\l}"];
subgraph cluster_Region_1653318618 {
label = "R(2:7|(1:9))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001c|int r0 = 0\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_2014067164 {
label = "LOOP:0: (1:9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001e|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v6 int) = (r0v5 int), (r0v7 int) binds: [B:7:0x001c, B:9:0x0020] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 int) = (r2v1 int), (r2v4 int) binds: [B:7:0x001c, B:9:0x0020] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x001e\-\>B:9:0x0020\l|if (r0 \< r1) goto L_0x0020\l}"];
subgraph cluster_Region_817113966 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0020|LOOP_END\lLOOP:0: B:8:0x001e\-\>B:9:0x0020\l|r9.getEntryRgb(r8.scanline[r0] & 255, r3)\lint int r4 = r2 + 1\lr10[r2] = (byte) r3[0]\lint int r2 = r4 + 1\lr10[r4] = (byte) r3[1]\lr10[r2] = (byte) r3[2]\lr0++\lr2 = r2 + 1\l}"];
}
}
}
subgraph cluster_Region_2068440266 {
label = "R(1:(2:12|(2:14|15))(1:(1:19)(2:20|(1:22)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_905382812 {
label = "IF [B:11:0x0047] THEN: R(2:12|(2:14|15)) ELSE: R(1:(1:19)(2:20|(1:22))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0047|if (r8.imgInfo.greyscale == true) goto L_0x0049\l}"];
subgraph cluster_Region_1945438609 {
label = "R(2:12|(2:14|15))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0049|int r9 = 0\l}"];
subgraph cluster_LoopRegion_677037714 {
label = "LOOP:1: (2:14|15)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x004a|LOOP_START\lPHI: r5 r9 \l  PHI: (r5v3 int) = (r5v0 int), (r5v4 int) binds: [B:12:0x0049, B:25:0x004a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v9 int) = (r9v8 int), (r9v11 int) binds: [B:12:0x0049, B:25:0x004a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:13:0x004a\-\>B:25:0x004a\l|if (r5 \< r2) goto L_0x004c\l}"];
subgraph cluster_Region_1815335905 {
label = "R(2:14|15)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x004c|int int r3 = r9 + 1\lbyte byte r9 = r8.scanline[r9]\lint int r1 = r5 + 1\lr10[r5] = r9\lint int r4 = r1 + 1\lr10[r1] = r9\lint r5 = r4 + 1\lr10[r4] = r9\l}"];
Node_15 [shape=record,label="{15\:\ 0x005e|r9 = r0 ? r3 + 1 : r3\l}"];
}
}
}
subgraph cluster_Region_777794986 {
label = "R(1:(1:19)(2:20|(1:22))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2027824492 {
label = "IF [B:18:0x0065] THEN: R(1:19) ELSE: R(2:20|(1:22)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0065|if (r0 == false) goto L_0x0067\l}"];
subgraph cluster_Region_822204572 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0067|java.lang.System.arraycopy(r8.scanline, 0, r10, 0, r2)\l}"];
}
subgraph cluster_Region_1902047708 {
label = "R(2:20|(1:22))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x006d|int r9 = 0\l}"];
subgraph cluster_LoopRegion_580130745 {
label = "LOOP:2: (1:22)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x006e|LOOP_START\lPHI: r5 r9 \l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:20:0x006d, B:22:0x0070] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v4 int) = (r9v3 int), (r9v7 int) binds: [B:20:0x006d, B:22:0x0070] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:21:0x006e\-\>B:22:0x0070\l|if (r5 \< r2) goto L_0x0070\l}"];
subgraph cluster_Region_1310987708 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0070|LOOP_END\lLOOP:2: B:21:0x006e\-\>B:22:0x0070\l|int int r0 = r5 + 1\lint int r3 = r9 + 1\lr10[r5] = r8.scanline[r9]\lint int r9 = r0 + 1\lint int r4 = r3 + 1\lr10[r0] = r8.scanline[r3]\lint r5 = r9 + 1\lr10[r9] = r8.scanline[r4]\lint r9 = r4 + 1 + 1\l}"];
}
}
}
}
}
}
}
}
Node_23 [shape=record,label="{23\:\ 0x0091|RETURN\l|return r10\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000c}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0043}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0060}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0063}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0091|SYNTHETIC\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x004a|LOOP_END\lSYNTHETIC\lPHI: r9 \l  PHI: (r9v11 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:13:0x004a\-\>B:25:0x004a\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0091|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x004a|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x004a|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0091|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static byte[] ar.com.hjg.pngj.ImageLineHelper.lineToRGB888((r8v0 ar.com.hjg.pngj.ImageLineByte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 ar.com.hjg.pngj.chunks.PngChunkPLTE A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_10[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_24[style=dashed];
Node_9 -> Node_8;
Node_11 -> Node_12;
Node_11 -> Node_18[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_26[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17;
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_29[style=dashed];
Node_22 -> Node_21;
Node_2 -> Node_3;
Node_10 -> Node_11;
Node_16 -> Node_27;
Node_17 -> Node_28;
Node_24 -> Node_23;
Node_25 -> Node_13;
Node_26 -> Node_23;
Node_27 -> Node_25;
Node_28 -> Node_25;
Node_29 -> Node_23;
}

