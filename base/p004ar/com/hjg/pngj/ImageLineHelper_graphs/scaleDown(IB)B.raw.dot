digraph "CFG forar.com.hjg.pngj.ImageLineHelper.scaleDown(IB)B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0005: ARITH  (r1 I:int) = (r2 I:int) \>\> (r0 I:int) \l0x0007: CAST  (r2 I:byte) = (byte) (r1 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: RETURN  (r2 I:byte) \l}"];
MethodNode[shape=record,label="{public static byte ar.com.hjg.pngj.ImageLineHelper.scaleDown((r1 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

