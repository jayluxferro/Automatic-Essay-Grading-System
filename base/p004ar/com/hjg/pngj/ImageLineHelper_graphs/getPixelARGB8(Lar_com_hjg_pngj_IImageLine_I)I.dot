digraph "CFG forar.com.hjg.pngj.ImageLineHelper.getPixelARGB8(Lar\/com\/hjg\/pngj\/IImageLine;I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r2 instanceof p004ar.com.hjg.pngj.ImageLineInt) == false) goto L_0x0028\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|ar.com.hjg.pngj.ImageLineInt r2 = (p004ar.com.hjg.pngj.ImageLineInt) r2\lint r3 = r3 * r2.imgInfo.channels\lint[] r2 = r2.getScanline()\lr2 = r2[r3 + 2]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|RETURN\l|return r2 \| (((r2[r3 + 3] \<\< 24) \| (r2[r3] \<\< 16)) \| (r2[r3 + 1] \<\< 8))\l}"];
Node_4 [shape=record,label="{4\:\ 0x0028}"];
Node_5 [shape=record,label="{5\:\ 0x002a|if ((r2 instanceof p004ar.com.hjg.pngj.ImageLineByte) == false) goto L_0x0058\l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|ar.com.hjg.pngj.ImageLineByte r2 = (p004ar.com.hjg.pngj.ImageLineByte) r2\lint r3 = r3 * r2.imgInfo.channels\lbyte[] r2 = r2.getScanline()\lr2 = r2[r3 + 2] & 255\l}"];
Node_7 [shape=record,label="{7\:\ 0x0057|RETURN\l|return r2 \| ((((r2[r3 + 3] & 255) \<\< 24) \| ((r2[r3] & 255) \<\< 16)) \| ((r2[r3 + 1] & 255) \<\< 8))\l}"];
Node_8 [shape=record,label="{8\:\ 0x0058|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Not supported \")\lr0.append(r2.getClass())\l}"];
Node_9 [shape=record,label="{9\:\ 0x0072|throw new p004ar.com.hjg.pngj.PngjException(r0.toString())\l}"];
MethodNode[shape=record,label="{public static int ar.com.hjg.pngj.ImageLineHelper.getPixelARGB8((r2v0 ar.com.hjg.pngj.IImageLine A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

