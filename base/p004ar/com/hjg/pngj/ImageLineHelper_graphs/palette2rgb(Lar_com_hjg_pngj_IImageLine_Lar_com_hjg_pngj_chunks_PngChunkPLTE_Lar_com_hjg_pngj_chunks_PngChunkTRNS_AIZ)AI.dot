digraph "CFG forar.com.hjg.pngj.ImageLineHelper.palette2rgb(Lar\/com\/hjg\/pngj\/IImageLine;Lar\/com\/hjg\/pngj\/chunks\/PngChunkPLTE;Lar\/com\/hjg\/pngj\/chunks\/PngChunkTRNS;[IZ)[I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r13 = true\lr0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r11 == null) goto L_0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r1 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|r1 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|PHI: r1 \l  PHI: (r1v0 boolean) = (r1v1 boolean), (r1v2 boolean) binds: [B:3:0x0006, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L_0x000b\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|r2 = 4\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|r2 = 3\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|PHI: r2 \l  PHI: (r2v0 int) = (r2v1 int), (r2v2 int) binds: [B:6:0x000b, B:5:0x0009] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|if ((r9 instanceof p004ar.com.hjg.pngj.ImageLineInt) == false) goto L_0x0013\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|r3 = r9\l}"];
Node_10 [shape=record,label="{10\:\ 0x0013|r3 = null\l}"];
Node_11 [shape=record,label="{11\:\ 0x0014|PHI: r3 \l  PHI: (r3v1 ar.com.hjg.pngj.ImageLineInt) = (r3v3 ar.com.hjg.pngj.ImageLineInt), (r3v4 ar.com.hjg.pngj.IImageLine) binds: [B:10:0x0013, B:9:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|ar.com.hjg.pngj.ImageLineInt r3 = r3\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|if ((r9 instanceof p004ar.com.hjg.pngj.ImageLineByte) == false) goto L_0x001b\l}"];
Node_13 [shape=record,label="{13\:\ 0x001b|r9 = null\l}"];
Node_14 [shape=record,label="{14\:\ 0x001c|PHI: r9 \l  PHI: (r9v1 ar.com.hjg.pngj.IImageLine) = (r9v0 ar.com.hjg.pngj.IImageLine), (r9v3 ar.com.hjg.pngj.IImageLine) binds: [B:12:0x0018, B:13:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|ar.com.hjg.pngj.ImageLineByte r9 = (p004ar.com.hjg.pngj.ImageLineByte) r9\l}"];
Node_15 [shape=record,label="{15\:\ 0x001e|if (r9 == null) goto L_0x0021\l}"];
Node_16 [shape=record,label="{16\:\ 0x0021|r13 = false\l}"];
Node_17 [shape=record,label="{17\:\ 0x0022|PHI: r13 \l  PHI: (r13v2 boolean) = (r13v1 boolean), (r13v3 boolean) binds: [B:15:0x001e, B:16:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == null) goto L_0x0029\l}"];
Node_18 [shape=record,label="{18\:\ 0x0024|ar.com.hjg.pngj.ImageInfo r4 = r3.imgInfo\l}"];
Node_19 [shape=record,label="{19\:\ 0x0026|PHI: r4 \l  PHI: (r4v2 ar.com.hjg.pngj.ImageInfo) = (r4v1 ar.com.hjg.pngj.ImageInfo), (r4v4 ar.com.hjg.pngj.ImageInfo) binds: [B:20:0x0029, B:18:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|int r4 = r4.cols\l}"];
Node_20 [shape=record,label="{20\:\ 0x0029|ar.com.hjg.pngj.ImageInfo r4 = r9.imgInfo\l}"];
Node_21 [shape=record,label="{21\:\ 0x002c|int r5 = r4 * r2\l}"];
Node_22 [shape=record,label="{22\:\ 0x002e|if (r12 == null) goto L_0x0033\l}"];
Node_23 [shape=record,label="{23\:\ 0x0030}"];
Node_24 [shape=record,label="{24\:\ 0x0031|if (r12.length \>= r5) goto L_0x0035\l}"];
Node_25 [shape=record,label="{25\:\ 0x0033|int[] r12 = new int[r5]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0035|PHI: r12 \l  PHI: (r12v1 int[]) = (r12v2 int[]), (r12v0 int[]) binds: [B:25:0x0033, B:24:0x0031] A[DONT_GENERATE, DONT_INLINE]\l|if (r11 == null) goto L_0x003d\l}"];
Node_27 [shape=record,label="{27\:\ 0x0037|int r5 = r11.getPalletteAlpha().length\l}"];
Node_28 [shape=record,label="{28\:\ 0x003d|r5 = 0\l}"];
Node_29 [shape=record,label="{29\:\ 0x003e|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:44:0x003e, B:39:0x0061] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:29:0x003e\-\>B:39:0x0061\l|if (r0 \>= r4) goto L_0x0064\l}"];
Node_30 [shape=record,label="{30\:\ 0x0040|r6 = 255\l}"];
Node_31 [shape=record,label="{31\:\ 0x0042|if (r13 == false) goto L_0x004a\l}"];
Node_32 [shape=record,label="{32\:\ 0x0044|r7 = r9.scanline[r0] & 255\l}"];
Node_33 [shape=record,label="{33\:\ 0x004a|r7 = r3.scanline[r0]\l}"];
Node_34 [shape=record,label="{34\:\ 0x004e|PHI: r7 \l  PHI: (r7v0 int) = (r7v2 int), (r7v5 int) binds: [B:33:0x004a, B:32:0x0044] A[DONT_GENERATE, DONT_INLINE]\l|int r8 = r0 * r2\lr10.getEntryRgb(r7, r12, r8)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0053|if (r1 == false) goto L_0x0061\l}"];
Node_36 [shape=record,label="{36\:\ 0x0055|if (r7 \>= r5) goto L_0x005d\l}"];
Node_37 [shape=record,label="{37\:\ 0x0057|r6 = r11.getPalletteAlpha()[r7]\l}"];
Node_38 [shape=record,label="{38\:\ 0x005d|PHI: r6 \l  PHI: (r6v1 int) = (r6v0 int), (r6v3 int) binds: [B:36:0x0055, B:37:0x0057] A[DONT_GENERATE, DONT_INLINE]\l|r12[r8 + 3] = r6\l}"];
Node_39 [shape=record,label="{39\:\ 0x0061|LOOP_END\lLOOP:0: B:29:0x003e\-\>B:39:0x0061\l|int r0 = r0 + 1\l}"];
Node_40 [shape=record,label="{40\:\ 0x0064|RETURN\l|return r12\l}"];
Node_41 [shape=record,label="{41\:\ 0x0064|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0061|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0061|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x003e|SYNTHETIC\lPHI: r5 \l  PHI: (r5v2 int) = (r5v3 int), (r5v5 int) binds: [B:28:0x003d, B:27:0x0037] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{private static int[] ar.com.hjg.pngj.ImageLineHelper.palette2rgb((r9v0 ar.com.hjg.pngj.IImageLine A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 ar.com.hjg.pngj.chunks.PngChunkPLTE A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 ar.com.hjg.pngj.chunks.PngChunkTRNS A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_20 -> Node_19;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_44;
Node_28 -> Node_44;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_41;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_43;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_42;
Node_39 -> Node_29;
Node_41 -> Node_40;
Node_42 -> Node_39;
Node_43 -> Node_39;
Node_44 -> Node_29;
}

