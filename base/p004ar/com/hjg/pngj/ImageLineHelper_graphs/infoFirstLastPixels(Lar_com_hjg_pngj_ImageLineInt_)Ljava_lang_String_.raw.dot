digraph "CFG forar.com.hjg.pngj.ImageLineHelper.infoFirstLastPixels(Lar\/com\/hjg\/pngj\/ImageLineInt;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:ar.com.hjg.pngj.ImageInfo) = (r8 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.imgInfo ar.com.hjg.pngj.ImageInfo \l0x0002: IGET  (r0 I:int) = (r0 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.channels int \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0006: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x002a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CONST_STR  (r0 I:java.lang.String) =  \"first=(%d) last=(%d)\" \l0x000b: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x000d: IGET  (r4 I:int[]) = (r8 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l0x000f: AGET  (r4 I:?[int, float]) = (r4 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x0011: INVOKE  (r4 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0015: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x0017: IGET  (r1 I:int[]) = (r8 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l0x0019: IGET  (r8 I:int[]) = (r8 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l0x001b: ARRAY_LENGTH  (r8 I:int) = (r8 I:?[]) \l0x001c: ARITH  (r8 I:int) = (r8 I:int) \- (r3 I:int) \l0x001d: AGET  (r8 I:?[int, float]) = (r1 I:?[int, float][]), (r8 I:?[int, short, byte, char]) \l0x001f: INVOKE  (r8 I:java.lang.Integer) = (r8 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0023: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r8 I:?[OBJECT, ARRAY])\l \l0x0025: INVOKE  (r8 I:java.lang.String) = (r0 I:java.lang.String), (r2 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x002a|0x002a: CONST_STR  (r0 I:java.lang.String) =  \"first=(%d %d %d) last=(%d %d %d)\" \l0x002c: CONST  (r4 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x002d: NEW_ARRAY  (r4 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x002f: IGET  (r5 I:int[]) = (r8 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l0x0031: AGET  (r5 I:?[int, float]) = (r5 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x0033: INVOKE  (r5 I:java.lang.Integer) = (r5 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0037: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x0039: IGET  (r1 I:int[]) = (r8 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l0x003b: AGET  (r1 I:?[int, float]) = (r1 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x003d: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0041: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0043: IGET  (r1 I:int[]) = (r8 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l0x0045: AGET  (r1 I:?[int, float]) = (r1 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0047: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x004b: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x004d: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x004e: IGET  (r5 I:int[]) = (r8 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l0x0050: IGET  (r6 I:int[]) = (r8 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l0x0052: ARRAY_LENGTH  (r6 I:int) = (r6 I:?[]) \l0x0053: IGET  (r7 I:ar.com.hjg.pngj.ImageInfo) = (r8 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.imgInfo ar.com.hjg.pngj.ImageInfo \l0x0055: IGET  (r7 I:int) = (r7 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.channels int \l0x0057: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x0058: AGET  (r5 I:?[int, float]) = (r5 I:?[int, float][]), (r6 I:?[int, short, byte, char]) \l0x005a: INVOKE  (r5 I:java.lang.Integer) = (r5 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x005e: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x0060: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0061: IGET  (r5 I:int[]) = (r8 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l0x0063: IGET  (r6 I:int[]) = (r8 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l0x0065: ARRAY_LENGTH  (r6 I:int) = (r6 I:?[]) \l0x0066: IGET  (r7 I:ar.com.hjg.pngj.ImageInfo) = (r8 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.imgInfo ar.com.hjg.pngj.ImageInfo \l0x0068: IGET  (r7 I:int) = (r7 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.channels int \l0x006a: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x006b: ARITH  (r6 I:int) = (r6 I:int) + (r3 I:int) \l0x006c: AGET  (r3 I:?[int, float]) = (r5 I:?[int, float][]), (r6 I:?[int, short, byte, char]) \l0x006e: INVOKE  (r3 I:java.lang.Integer) = (r3 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0072: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0074: CONST  (r1 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0075: IGET  (r3 I:int[]) = (r8 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l0x0077: IGET  (r5 I:int[]) = (r8 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.scanline int[] \l0x0079: ARRAY_LENGTH  (r5 I:int) = (r5 I:?[]) \l0x007a: IGET  (r8 I:ar.com.hjg.pngj.ImageInfo) = (r8 I:ar.com.hjg.pngj.ImageLineInt) ar.com.hjg.pngj.ImageLineInt.imgInfo ar.com.hjg.pngj.ImageInfo \l0x007c: IGET  (r8 I:int) = (r8 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.channels int \l0x007e: ARITH  (r5 I:int) = (r5 I:int) \- (r8 I:int) \l0x007f: ARITH  (r5 I:int) = (r5 I:int) + (r2 I:int) \l0x0080: AGET  (r8 I:?[int, float]) = (r3 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l0x0082: INVOKE  (r8 I:java.lang.Integer) = (r8 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0086: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r8 I:?[OBJECT, ARRAY])\l \l0x0088: INVOKE  (r8 I:java.lang.String) = (r0 I:java.lang.String), (r4 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x008c|0x008c: RETURN  (r8 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static java.lang.String ar.com.hjg.pngj.ImageLineHelper.infoFirstLastPixels((r8 I:ar.com.hjg.pngj.ImageLineInt A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

