digraph "CFG forretrofit2.Response.error(ILokhttp3\/ResponseBody;)Lretrofit2\/Response;" {
subgraph cluster_Region_1945843055 {
label = "R(1:(2:(1:3)|(2:4|5)))";
node [shape=record,color=blue];
subgraph cluster_Region_310455033 {
label = "R(2:(1:3)|(2:4|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_388049087 {
label = "IF [B:1:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2 \>= 400) goto L_0x0004\l}"];
subgraph cluster_Region_732100067 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0034|RETURN\l|return error(r3, new okhttp3.Response.Builder().code(r2).message(\"Response.error()\").protocol(okhttp3.Protocol.HTTP_1_1).request(new okhttp3.Request.Builder().url(\"http:\/\/localhost\/\").build()).build())\l}"];
}
}
subgraph cluster_Region_30993845 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0035}"];
Node_5 [shape=record,label="{5\:\ 0x004b|throw new java.lang.IllegalArgumentException(\"code \< 400: \" + r2)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
MethodNode[shape=record,label="{public static retrofit2.Response\<T\> retrofit2.Response.error((r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 okhttp3.ResponseBody A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(I, Lokhttp3\/ResponseBody;, ), Lretrofit2\/Response\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_4 -> Node_5;
Node_0 -> Node_1;
Node_2 -> Node_3;
}

