digraph "CFG forretrofit2.Response.success(Ljava\/lang\/Object;Lokhttp3\/Headers;)Lretrofit2\/Response;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"headers == null\" \l0x0002: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) retrofit2.Utils.checkNotNull(java.lang.Object, java.lang.String):java.lang.Object type: STATIC \l0x0005: NEW_INSTANCE  (r0 I:okhttp3.Response$Builder) =  okhttp3.Response$Builder \l0x0007: INVOKE  (r0 I:okhttp3.Response$Builder) okhttp3.Response.Builder.\<init\>():void type: DIRECT \l0x000a: CONST  (r1 I:?[int, float, short, byte, char]) = (200(0xc8, float:2.8E\-43) ?[int, float, short, byte, char]) \l0x000c: INVOKE  (r0 I:okhttp3.Response$Builder) = (r0 I:okhttp3.Response$Builder), (r1 I:int) okhttp3.Response.Builder.code(int):okhttp3.Response$Builder type: VIRTUAL \l0x0010: CONST_STR  (r1 I:java.lang.String) =  \"OK\" \l0x0012: INVOKE  (r0 I:okhttp3.Response$Builder) = (r0 I:okhttp3.Response$Builder), (r1 I:java.lang.String) okhttp3.Response.Builder.message(java.lang.String):okhttp3.Response$Builder type: VIRTUAL \l0x0016: SGET  (r1 I:okhttp3.Protocol) =  okhttp3.Protocol.HTTP_1_1 okhttp3.Protocol \l0x0018: INVOKE  (r0 I:okhttp3.Response$Builder) = (r0 I:okhttp3.Response$Builder), (r1 I:okhttp3.Protocol) okhttp3.Response.Builder.protocol(okhttp3.Protocol):okhttp3.Response$Builder type: VIRTUAL \l0x001c: INVOKE  (r3 I:okhttp3.Response$Builder) = (r0 I:okhttp3.Response$Builder), (r3 I:okhttp3.Headers) okhttp3.Response.Builder.headers(okhttp3.Headers):okhttp3.Response$Builder type: VIRTUAL \l0x0020: NEW_INSTANCE  (r0 I:okhttp3.Request$Builder) =  okhttp3.Request$Builder \l0x0022: INVOKE  (r0 I:okhttp3.Request$Builder) okhttp3.Request.Builder.\<init\>():void type: DIRECT \l0x0025: CONST_STR  (r1 I:java.lang.String) =  \"http:\/\/localhost\/\" \l0x0027: INVOKE  (r0 I:okhttp3.Request$Builder) = (r0 I:okhttp3.Request$Builder), (r1 I:java.lang.String) okhttp3.Request.Builder.url(java.lang.String):okhttp3.Request$Builder type: VIRTUAL \l0x002b: INVOKE  (r0 I:okhttp3.Request) = (r0 I:okhttp3.Request$Builder) okhttp3.Request.Builder.build():okhttp3.Request type: VIRTUAL \l0x002f: INVOKE  (r3 I:okhttp3.Response$Builder) = (r3 I:okhttp3.Response$Builder), (r0 I:okhttp3.Request) okhttp3.Response.Builder.request(okhttp3.Request):okhttp3.Response$Builder type: VIRTUAL \l0x0033: INVOKE  (r3 I:okhttp3.Response) = (r3 I:okhttp3.Response$Builder) okhttp3.Response.Builder.build():okhttp3.Response type: VIRTUAL \l0x0037: INVOKE  (r2 I:retrofit2.Response) = (r2 I:java.lang.Object), (r3 I:okhttp3.Response) retrofit2.Response.success(java.lang.Object, okhttp3.Response):retrofit2.Response type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x003b|0x003b: RETURN  (r2 I:retrofit2.Response\<T\>) \l}"];
MethodNode[shape=record,label="{public static retrofit2.Response\<T\> retrofit2.Response.success((r2 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:okhttp3.Headers A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, javax.annotation.Nullable, \{\}], \lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(TT;, Lokhttp3\/Headers;, ), Lretrofit2\/Response\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

