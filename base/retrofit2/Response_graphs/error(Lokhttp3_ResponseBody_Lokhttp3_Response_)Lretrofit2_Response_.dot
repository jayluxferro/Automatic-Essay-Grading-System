digraph "CFG forretrofit2.Response.error(Lokhttp3\/ResponseBody;Lokhttp3\/Response;)Lretrofit2\/Response;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|retrofit2.Utils.checkNotNull(r2, \"body == null\")\lretrofit2.Utils.checkNotNull(r3, \"rawResponse == null\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r3.isSuccessful() != false) goto L_0x0017\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010}"];
Node_3 [shape=record,label="{3\:\ 0x0016|RETURN\l|return new retrofit2.Response\<\>(r3, (java.lang.Object) null, r2)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017}"];
Node_5 [shape=record,label="{5\:\ 0x001e|throw new java.lang.IllegalArgumentException(\"rawResponse should not be successful response\")\l}"];
MethodNode[shape=record,label="{public static retrofit2.Response\<T\> retrofit2.Response.error((r2v0 okhttp3.ResponseBody A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 okhttp3.Response A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lokhttp3\/ResponseBody;, Lokhttp3\/Response;, ), Lretrofit2\/Response\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

