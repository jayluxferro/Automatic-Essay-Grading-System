digraph "CFG forretrofit2.converter.gson.GsonResponseBodyConverter.convert(Lokhttp3\/ResponseBody;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.google.gson.Gson) = (r3 I:retrofit2.converter.gson.GsonResponseBodyConverter) retrofit2.converter.gson.GsonResponseBodyConverter.gson com.google.gson.Gson \l0x0002: INVOKE  (r1 I:java.io.Reader) = (r4 I:okhttp3.ResponseBody) okhttp3.ResponseBody.charStream():java.io.Reader type: VIRTUAL \l0x0006: INVOKE  (r0 I:com.google.gson.stream.JsonReader) = (r0 I:com.google.gson.Gson), (r1 I:java.io.Reader) com.google.gson.Gson.newJsonReader(java.io.Reader):com.google.gson.stream.JsonReader type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|SYNTHETIC\lSplitter:B:1:0x000a\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x000a\l|0x000a: IGET  (r1 I:com.google.gson.TypeAdapter\<T\>) = (r3 I:retrofit2.converter.gson.GsonResponseBodyConverter) retrofit2.converter.gson.GsonResponseBodyConverter.adapter com.google.gson.TypeAdapter A[Catch:\{ all \-\> 0x0024 \}, TRY_ENTER]\l0x000c: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:com.google.gson.TypeAdapter)\l  (r0 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0024 \}]\l0x0010: INVOKE  (r0 I:com.google.gson.stream.JsonToken) = (r0 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL A[Catch:\{ all \-\> 0x0024 \}]\l0x0014: SGET  (r2 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.END_DOCUMENT com.google.gson.stream.JsonToken A[Catch:\{ all \-\> 0x0024 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001c \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: INVOKE  (r4 I:okhttp3.ResponseBody) okhttp3.ResponseBody.close():void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: RETURN  (r1 I:T) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|SYNTHETIC\lSplitter:B:6:0x001c\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x001c\l|0x001c: NEW_INSTANCE  (r0 I:com.google.gson.JsonIOException) =  com.google.gson.JsonIOException A[Catch:\{ all \-\> 0x0024 \}, TRY_ENTER]\l0x001e: CONST_STR  (r1 I:java.lang.String) =  \"JSON document was not fully consumed.\" A[Catch:\{ all \-\> 0x0024 \}]\l0x0020: INVOKE  \l  (r0 I:com.google.gson.JsonIOException)\l  (r1 I:java.lang.String)\l com.google.gson.JsonIOException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0024 \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|ExcHandler: all null\lSplitter:B:1:0x000a\l|0x0024: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: INVOKE  (r4 I:okhttp3.ResponseBody) okhttp3.ResponseBody.close():void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public T retrofit2.converter.gson.GsonResponseBodyConverter.convert((r3 'this' I:retrofit2.converter.gson.GsonResponseBodyConverter A[IMMUTABLE_TYPE, THIS]), (r4 I:okhttp3.ResponseBody A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lokhttp3\/ResponseBody;, )TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

