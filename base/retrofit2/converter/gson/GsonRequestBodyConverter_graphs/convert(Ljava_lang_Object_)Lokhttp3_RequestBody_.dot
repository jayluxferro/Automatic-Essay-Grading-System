digraph "CFG forretrofit2.converter.gson.GsonRequestBodyConverter.convert(Ljava\/lang\/Object;)Lokhttp3\/RequestBody;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|okio.Buffer r0 = new okio.Buffer()\ljava.io.OutputStreamWriter r1 = new java.io.OutputStreamWriter(r0.outputStream(), UTF_8)\lcom.google.gson.stream.JsonWriter r1 = r4.gson.newJsonWriter(r1)\lr4.adapter.write(r1, r5)\lr1.close()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0028|RETURN\l|return okhttp3.RequestBody.create(MEDIA_TYPE, r0.readByteString())\l}"];
MethodNode[shape=record,label="{public okhttp3.RequestBody retrofit2.converter.gson.GsonRequestBodyConverter.convert((r4v0 'this' retrofit2.converter.gson.GsonRequestBodyConverter A[IMMUTABLE_TYPE, THIS]), (r5v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;), Lokhttp3\/RequestBody;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

