digraph "CFG forretrofit2.converter.gson.GsonRequestBodyConverter.convert(Ljava\/lang\/Object;)Lokhttp3\/RequestBody;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:okio.Buffer) =  okio.Buffer \l0x0002: INVOKE  (r0 I:okio.Buffer) okio.Buffer.\<init\>():void type: DIRECT \l0x0005: NEW_INSTANCE  (r1 I:java.io.OutputStreamWriter) =  java.io.OutputStreamWriter \l0x0007: INVOKE  (r2 I:java.io.OutputStream) = (r0 I:okio.Buffer) okio.Buffer.outputStream():java.io.OutputStream type: VIRTUAL \l0x000b: SGET  (r3 I:java.nio.charset.Charset) =  retrofit2.converter.gson.GsonRequestBodyConverter.UTF_8 java.nio.charset.Charset \l0x000d: INVOKE  \l  (r1 I:java.io.OutputStreamWriter)\l  (r2 I:java.io.OutputStream)\l  (r3 I:java.nio.charset.Charset)\l java.io.OutputStreamWriter.\<init\>(java.io.OutputStream, java.nio.charset.Charset):void type: DIRECT \l0x0010: IGET  (r2 I:com.google.gson.Gson) = (r4 I:retrofit2.converter.gson.GsonRequestBodyConverter) retrofit2.converter.gson.GsonRequestBodyConverter.gson com.google.gson.Gson \l0x0012: INVOKE  (r1 I:com.google.gson.stream.JsonWriter) = (r2 I:com.google.gson.Gson), (r1 I:java.io.Writer) com.google.gson.Gson.newJsonWriter(java.io.Writer):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0016: IGET  (r2 I:com.google.gson.TypeAdapter\<T\>) = (r4 I:retrofit2.converter.gson.GsonRequestBodyConverter) retrofit2.converter.gson.GsonRequestBodyConverter.adapter com.google.gson.TypeAdapter \l0x0018: INVOKE  \l  (r2 I:com.google.gson.TypeAdapter)\l  (r1 I:com.google.gson.stream.JsonWriter)\l  (r5 I:java.lang.Object)\l com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter, java.lang.Object):void type: VIRTUAL \l0x001b: INVOKE  (r1 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.close():void type: VIRTUAL \l0x001e: SGET  (r5 I:okhttp3.MediaType) =  retrofit2.converter.gson.GsonRequestBodyConverter.MEDIA_TYPE okhttp3.MediaType \l0x0020: INVOKE  (r0 I:okio.ByteString) = (r0 I:okio.Buffer) okio.Buffer.readByteString():okio.ByteString type: VIRTUAL \l0x0024: INVOKE  (r5 I:okhttp3.RequestBody) = (r5 I:okhttp3.MediaType), (r0 I:okio.ByteString) okhttp3.RequestBody.create(okhttp3.MediaType, okio.ByteString):okhttp3.RequestBody type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0028|0x0028: RETURN  (r5 I:okhttp3.RequestBody) \l}"];
MethodNode[shape=record,label="{public okhttp3.RequestBody retrofit2.converter.gson.GsonRequestBodyConverter.convert((r4 'this' I:retrofit2.converter.gson.GsonRequestBodyConverter A[IMMUTABLE_TYPE, THIS]), (r5 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;), Lokhttp3\/RequestBody;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

