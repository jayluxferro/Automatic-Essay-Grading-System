digraph "CFG forretrofit2.Utils.hasUnresolvableType(Ljava\/lang\/reflect\/Type;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if ((r5 instanceof java.lang.Class) == false) goto L_0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|RETURN\l|return false\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006}"];
Node_4 [shape=record,label="{4\:\ 0x0009|if ((r5 instanceof java.lang.reflect.ParameterizedType) == false) goto L_0x0022\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|java.lang.reflect.Type[] r5 = ((java.lang.reflect.ParameterizedType) r5).getActualTypeArguments()\lint r0 = r5.length\lr3 = 0\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|LOOP_START\lPHI: r3 \l  PHI: (r3v2 int) = (r3v1 int), (r3v3 int) binds: [B:5:0x000b, B:10:0x001e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0013\-\>B:10:0x001e\l|if (r3 \>= r0) goto L_0x0021\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015}"];
Node_8 [shape=record,label="{8\:\ 0x001b|if (hasUnresolvableType(r5[r3]) == false) goto L_0x001e\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|RETURN\l|return true\l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|LOOP_END\lLOOP:0: B:6:0x0013\-\>B:10:0x001e\l|int r3 = r3 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|RETURN\l|return false\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022}"];
Node_13 [shape=record,label="{13\:\ 0x0024|if ((r5 instanceof java.lang.reflect.GenericArrayType) == false) goto L_0x0031\l}"];
Node_14 [shape=record,label="{14\:\ 0x0026}"];
Node_15 [shape=record,label="{15\:\ 0x0030|RETURN\l|return hasUnresolvableType(((java.lang.reflect.GenericArrayType) r5).getGenericComponentType())\l}"];
Node_16 [shape=record,label="{16\:\ 0x0031}"];
Node_17 [shape=record,label="{17\:\ 0x0033|if ((r5 instanceof java.lang.reflect.TypeVariable) == false) goto L_0x0036\l}"];
Node_18 [shape=record,label="{18\:\ 0x0035|RETURN\l|return true\l}"];
Node_19 [shape=record,label="{19\:\ 0x0036}"];
Node_20 [shape=record,label="{20\:\ 0x0038|if ((r5 instanceof java.lang.reflect.WildcardType) == false) goto L_0x003b\l}"];
Node_21 [shape=record,label="{21\:\ 0x003a|RETURN\l|return true\l}"];
Node_22 [shape=record,label="{22\:\ 0x003b|if (r5 != null) goto L_0x0040\l}"];
Node_23 [shape=record,label="{23\:\ 0x003d|java.lang.String r0 = \"null\"\l}"];
Node_24 [shape=record,label="{24\:\ 0x0040|java.lang.String r0 = r5.getClass().getName()\l}"];
Node_25 [shape=record,label="{25\:\ 0x0048|PHI: r0 \l  PHI: (r0v5 java.lang.String) = (r0v7 java.lang.String), (r0v8 java.lang.String) binds: [B:24:0x0040, B:23:0x003d] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Expected a Class, ParameterizedType, or GenericArrayType, but \<\")\lr2.append(r5)\lr2.append(\"\> is of type \")\lr2.append(r0)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0066|throw new java.lang.IllegalArgumentException(r2.toString())\l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x001d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static boolean retrofit2.Utils.hasUnresolvableType((r5v0 java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_27;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_28[style=dashed];
Node_10 -> Node_6;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_27 -> Node_11;
Node_28 -> Node_9;
}

