digraph "CFG forretrofit2.Utils.resolve(Ljava\/lang\/reflect\/Type;Ljava\/lang\/Class;Ljava\/lang\/reflect\/Type;)Ljava\/lang\/reflect\/Type;" {
subgraph cluster_Region_1097330384 {
label = "R(3:(2:2|(2:(1:4)|(1:5)))|(2:8|(2:10|11))|(2:(2:15|16)|(2:18|(5:20|21|24|(3:26|(2:(1:29)|30)(0)|31)|32)(1:(1:53)(3:37|(2:39|(1:42))(1:(2:47|(1:51)))|52)))))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1580129278 {
label = "LOOP:0: (2:2|(2:(1:4)|(1:5)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r10 instanceof java.lang.reflect.TypeVariable) != false) goto L_0x0004\l}"];
subgraph cluster_Region_1681787140 {
label = "R(2:2|(2:(1:4)|(1:5)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|java.lang.reflect.TypeVariable java.lang.reflect.TypeVariable r10 = (java.lang.reflect.TypeVariable) r10\ljava.lang.reflect.Type java.lang.reflect.Type r0 = resolveTypeVariable(r8, r9, r10)\l}"];
subgraph cluster_Region_581993441 {
label = "R(2:(1:4)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1544965233 {
label = "IF [B:3:0x000a] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r0 == r10) goto L_0x000c\l}"];
subgraph cluster_Region_862830361 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_2100573976 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000d|LOOP_END\lLOOP:0: B:0:0x0000\-\>B:5:0x000d\l|r10 = r0\l}"];
}
}
}
}
subgraph cluster_IfRegion_1028793172 {
label = "IF [B:7:0x0011] THEN: R(2:8|(2:10|11)) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0011|if ((r10 instanceof java.lang.Class) == true) goto L_0x0013\l}"];
subgraph cluster_Region_1344078251 {
label = "R(2:8|(2:10|11))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0013|java.lang.Class java.lang.Class r0 = (java.lang.Class) r10\l}"];
subgraph cluster_IfRegion_1836080262 {
label = "IF [B:9:0x001a] THEN: R(2:10|11) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001a|if (r0.isArray() == true) goto L_0x001c\l}"];
subgraph cluster_Region_798761317 {
label = "R(2:10|11)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001c|java.lang.Class java.lang.reflect.Type r10 = r0.getComponentType()\ljava.lang.reflect.Type java.lang.reflect.Type r8 = resolve(r8, r9, r10)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|RETURN\l|return r10 == r8 ? r0 : new retrofit2.Utils.GenericArrayTypeImpl(r8)\l}"];
}
}
}
}
subgraph cluster_Region_1136479040 {
label = "R(2:(2:15|16)|(2:18|(5:20|21|24|(3:26|(2:(1:29)|30)(0)|31)|32)(1:(1:53)(3:37|(2:39|(1:42))(1:(2:47|(1:51)))|52))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1810143714 {
label = "IF [B:14:0x002f] THEN: R(2:15|16) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002f|if ((r10 instanceof java.lang.reflect.GenericArrayType) == true) goto L_0x0031\l}"];
subgraph cluster_Region_273380438 {
label = "R(2:15|16)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0031|java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType r10 = (java.lang.reflect.GenericArrayType) r10\ljava.lang.reflect.Type java.lang.reflect.Type r0 = r10.getGenericComponentType()\ljava.lang.reflect.Type java.lang.reflect.Type r8 = resolve(r8, r9, r0)\l}"];
Node_16 [shape=record,label="{16\:\ 0x003b|RETURN\l|return r0 == r8 ? r10 : new retrofit2.Utils.GenericArrayTypeImpl(r8)\l}"];
}
}
subgraph cluster_Region_1897143458 {
label = "R(2:18|(5:20|21|24|(3:26|(2:(1:29)|30)(0)|31)|32)(1:(1:53)(3:37|(2:39|(1:42))(1:(2:47|(1:51)))|52)))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0044|int r2 = 0\l}"];
subgraph cluster_IfRegion_1299030260 {
label = "IF [B:19:0x0048] THEN: R(5:20|21|24|(3:26|(2:(1:29)|30)(0)|31)|32) ELSE: R(1:(1:53)(3:37|(2:39|(1:42))(1:(2:47|(1:51)))|52))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0048|if ((r10 instanceof java.lang.reflect.ParameterizedType) == true) goto L_0x004a\l}"];
subgraph cluster_Region_853428501 {
label = "R(5:20|21|24|(3:26|(2:(1:29)|30)(0)|31)|32)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x004a|java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType r10 = (java.lang.reflect.ParameterizedType) r10\ljava.lang.reflect.Type java.lang.reflect.Type r0 = r10.getOwnerType()\ljava.lang.reflect.Type java.lang.reflect.Type r3 = resolve(r8, r9, r0)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0054|boolean r0 = r3 != r0\l}"];
Node_24 [shape=record,label="{24\:\ 0x0059|PHI: r0 \l  PHI: (r0v11 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.reflect.Type[] java.lang.reflect.Type[] r4 = r10.getActualTypeArguments()\lint int r5 = r4.length\l}"];
subgraph cluster_LoopRegion_1726655232 {
label = "LOOP:1: (3:26|(2:(1:29)|30)(0)|31)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x005e|LOOP_START\lPHI: r0 r2 r4 \l  PHI: (r0v12 boolean) = (r0v11 boolean), (r0v13 boolean) binds: [B:24:0x0059, B:31:0x0076] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:24:0x0059, B:31:0x0076] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 java.lang.reflect.Type[]) = (r4v1 java.lang.reflect.Type[]), (r4v3 java.lang.reflect.Type[]) binds: [B:24:0x0059, B:31:0x0076] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:25:0x005e\-\>B:31:0x0076\l|if (r2 \< r5) goto L_0x0060\l}"];
subgraph cluster_Region_1608835527 {
label = "R(3:26|(2:(1:29)|30)(0)|31)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0060|java.lang.reflect.Type java.lang.reflect.Type r6 = resolve(r8, r9, r4[r2])\l}"];
subgraph cluster_IfRegion_2047369956 {
label = "IF [B:27:0x0068] THEN: R(2:(1:29)|30) ELSE: R(0)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0068|if (r6 != r4[r2]) goto L_0x006a\l}"];
subgraph cluster_Region_724074507 {
label = "R(2:(1:29)|30)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_278546067 {
label = "IF [B:28:0x006a] THEN: R(1:29) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x006a|if (r0 == false) goto L_0x006c\l}"];
subgraph cluster_Region_1462591417 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x006c|java.lang.reflect.Type[] r4 = r4.clone()\lr0 = true\l}"];
}
}
Node_30 [shape=record,label="{30\:\ 0x0074|PHI: r0 r4 \l  PHI: (r0v14 boolean) = (r0v12 boolean), (r0v16 boolean) binds: [B:28:0x006a, B:29:0x006c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v4 java.lang.reflect.Type[]) = (r4v2 java.lang.reflect.Type[]), (r4v6 java.lang.reflect.Type[]) binds: [B:28:0x006a, B:29:0x006c] A[DONT_GENERATE, DONT_INLINE]\l|r4[r2] = r6\l}"];
}
subgraph cluster_Region_1628009102 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_31 [shape=record,label="{31\:\ 0x0076|LOOP_END\lPHI: r0 r4 \l  PHI: (r0v13 boolean) = (r0v12 boolean), (r0v14 boolean) binds: [B:60:0x0076, B:59:0x0076] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 java.lang.reflect.Type[]) = (r4v2 java.lang.reflect.Type[]), (r4v4 java.lang.reflect.Type[]) binds: [B:60:0x0076, B:59:0x0076] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:25:0x005e\-\>B:31:0x0076\l|r2++\l}"];
}
}
Node_32 [shape=record,label="{32\:\ 0x0079|RETURN\l|return r0 ? new retrofit2.Utils.ParameterizedTypeImpl(r3, r10.getRawType(), r4) : r10\l}"];
}
subgraph cluster_Region_1212662436 {
label = "R(1:(1:53)(3:37|(2:39|(1:42))(1:(2:47|(1:51)))|52)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_128149959 {
label = "IF [B:36:0x0089] THEN: R(1:53) ELSE: R(3:37|(2:39|(1:42))(1:(2:47|(1:51)))|52) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0089|if ((r10 instanceof java.lang.reflect.WildcardType) != true) goto L_0x00cc\l}"];
subgraph cluster_Region_661197767 {
label = "R(1:53)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x00cc|RETURN\l|return r10\l}"];
}
subgraph cluster_Region_413768901 {
label = "R(3:37|(2:39|(1:42))(1:(2:47|(1:51)))|52)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x008b|java.lang.reflect.WildcardType java.lang.reflect.WildcardType r10 = (java.lang.reflect.WildcardType) r10\ljava.lang.reflect.Type[] java.lang.reflect.Type[] r0 = r10.getLowerBounds()\ljava.lang.reflect.Type[] java.lang.reflect.Type[] r3 = r10.getUpperBounds()\l}"];
subgraph cluster_IfRegion_1622912206 {
label = "IF [B:38:0x0096] THEN: R(2:39|(1:42)) ELSE: R(1:(2:47|(1:51)))";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0096|if (r0.length == 1) goto L_0x0098\l}"];
subgraph cluster_Region_1495133567 {
label = "R(2:39|(1:42))";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0098|java.lang.reflect.Type java.lang.reflect.Type r8 = resolve(r8, r9, r0[0])\l}"];
subgraph cluster_IfRegion_911873679 {
label = "IF [B:40:0x00a0] THEN: R(1:42) ELSE: null";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x00a0|if (r8 != r0[0]) goto L_0x00a2\l}"];
subgraph cluster_Region_1646021031 {
label = "R(1:42)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x00b1|RETURN\l|return new retrofit2.Utils.WildcardTypeImpl(new java.lang.reflect.Type[]\{java.lang.Object.class\}, new java.lang.reflect.Type[]\{r8\})\l}"];
}
}
}
subgraph cluster_Region_224299174 {
label = "R(1:(2:47|(1:51))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1648487221 {
label = "IF [B:44:0x00b3] THEN: R(2:47|(1:51)) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x00b3|if (r3.length == 1) goto L_0x00b5\l}"];
subgraph cluster_Region_1604445807 {
label = "R(2:47|(1:51))";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ ?|java.lang.reflect.Type java.lang.reflect.Type r8 = resolve(r8, r9, r3[0])\l}"];
subgraph cluster_IfRegion_1768001265 {
label = "IF [B:49:0x00bd] THEN: R(1:51) ELSE: null";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x00bd|if (r8 != r3[0]) goto L_0x00bf\l}"];
subgraph cluster_Region_258544444 {
label = "R(1:51)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x00ca|RETURN\l|return new retrofit2.Utils.WildcardTypeImpl(new java.lang.reflect.Type[]\{r8\}, EMPTY_TYPE_ARRAY)\l}"];
}
}
}
}
}
}
Node_52 [shape=record,label="{52\:\ 0x00cb|RETURN\l|return r10\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lPHI: r10 \l  PHI: (r10v1 java.lang.reflect.Type) = (r10v0 java.lang.reflect.Type), (r10v10 java.lang.reflect.Type) binds: [B:0:0x0000, B:5:0x000d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:5:0x000d\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000f}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0027}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x002d}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x003e}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0056}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0058}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x007b}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0085}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0087}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x00a2}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x00b2}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x00b5}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x00b7|SYNTHETIC\l}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x00bb}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x00bf}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x00cd|REMOVE\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x00ce|REMOVE\l|throw r8\l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x000f|SYNTHETIC\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x000c|SYNTHETIC\l}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x0079|SYNTHETIC\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x0076|SYNTHETIC\l}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x0076|SYNTHETIC\l}"];
Node_61 [shape=record,color=red,label="{61\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_62 [shape=record,color=red,label="{62\:\ ?|SYNTHETIC\l}"];
Node_63 [shape=record,color=red,label="{63\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_64 [shape=record,color=red,label="{64\:\ ?|SYNTHETIC\l}"];
Node_65 [shape=record,color=red,label="{65\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_66 [shape=record,color=red,label="{66\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static java.lang.reflect.Type retrofit2.Utils.resolve((r8v0 java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r0v15, resolved type: java.lang.Object\}\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r4v5, resolved type: java.lang.reflect.Type[]\}\lMulti\-variable type inference failed\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/reflect\/Type;, Ljava\/lang\/Class\<, *\>;, Ljava\/lang\/reflect\/Type;, ), Ljava\/lang\/reflect\/Type;]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_56[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_5[style=dashed];
Node_3 -> Node_57;
Node_5 -> Node_0;
Node_7 -> Node_8;
Node_7 -> Node_13[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_13[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_62;
Node_14 -> Node_15;
Node_14 -> Node_18[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_64;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_35[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_58[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_60[style=dashed];
Node_28 -> Node_29;
Node_28 -> Node_30[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_59;
Node_31 -> Node_25;
Node_32 -> Node_33;
Node_32 -> Node_34;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_53;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_38 -> Node_43[style=dashed];
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_40 -> Node_52[style=dashed];
Node_44 -> Node_45;
Node_44 -> Node_52[style=dashed];
Node_47 -> Node_48;
Node_49 -> Node_50;
Node_49 -> Node_52[style=dashed];
Node_0 -> Node_1;
Node_6 -> Node_7;
Node_12 -> Node_61;
Node_13 -> Node_14;
Node_17 -> Node_63;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_33 -> Node_66;
Node_34 -> Node_65;
Node_35 -> Node_36;
Node_41 -> Node_42;
Node_43 -> Node_44;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_46 -> Node_54;
Node_48 -> Node_49;
Node_50 -> Node_51;
Node_54 -> Node_55;
Node_56 -> Node_6;
Node_57 -> Node_4;
Node_58 -> Node_32;
Node_59 -> Node_31;
Node_60 -> Node_31;
}

