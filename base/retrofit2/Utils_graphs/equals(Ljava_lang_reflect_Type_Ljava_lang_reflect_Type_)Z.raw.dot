digraph "CFG forretrofit2.Utils.equals(Ljava\/lang\/reflect\/Type;Ljava\/lang\/reflect\/Type;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INSTANCE_OF  (r1 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.Class \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Object), (r5 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: RETURN  (r4 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: INSTANCE_OF  (r1 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.reflect.ParameterizedType \l0x000f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x004c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: INSTANCE_OF  (r1 I:boolean) = (r5 I:?[OBJECT, ARRAY]) java.lang.reflect.ParameterizedType \l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0017 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|0x0016: RETURN  (r2 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|0x0017: CHECK_CAST  (r4 I:java.lang.reflect.ParameterizedType) = (java.lang.reflect.ParameterizedType) (r4 I:?[OBJECT, ARRAY]) \l0x0019: CHECK_CAST  (r5 I:java.lang.reflect.ParameterizedType) = (java.lang.reflect.ParameterizedType) (r5 I:?[OBJECT, ARRAY]) \l0x001b: INVOKE  (r1 I:java.lang.reflect.Type) = (r4 I:java.lang.reflect.ParameterizedType) java.lang.reflect.ParameterizedType.getOwnerType():java.lang.reflect.Type type: INTERFACE \l0x001f: INVOKE  (r3 I:java.lang.reflect.Type) = (r5 I:java.lang.reflect.ParameterizedType) java.lang.reflect.ParameterizedType.getOwnerType():java.lang.reflect.Type type: INTERFACE \l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|0x0023: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x002d \l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|0x0025: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x004a \l}"];
Node_15 [shape=record,label="{15\:\ 0x0027|0x0027: INVOKE  (r1 I:boolean) = (r1 I:java.lang.Object), (r3 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x002b|0x002b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x004a \l}"];
Node_17 [shape=record,label="{17\:\ 0x002d|0x002d: INVOKE  (r1 I:java.lang.reflect.Type) = (r4 I:java.lang.reflect.ParameterizedType) java.lang.reflect.ParameterizedType.getRawType():java.lang.reflect.Type type: INTERFACE \l0x0031: INVOKE  (r3 I:java.lang.reflect.Type) = (r5 I:java.lang.reflect.ParameterizedType) java.lang.reflect.ParameterizedType.getRawType():java.lang.reflect.Type type: INTERFACE \l0x0035: INVOKE  (r1 I:boolean) = (r1 I:java.lang.Object), (r3 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0039|0x0039: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x004a \l}"];
Node_19 [shape=record,label="{19\:\ 0x003b|0x003b: INVOKE  (r4 I:java.lang.reflect.Type[]) = (r4 I:java.lang.reflect.ParameterizedType) java.lang.reflect.ParameterizedType.getActualTypeArguments():java.lang.reflect.Type[] type: INTERFACE \l0x003f: INVOKE  (r5 I:java.lang.reflect.Type[]) = (r5 I:java.lang.reflect.ParameterizedType) java.lang.reflect.ParameterizedType.getActualTypeArguments():java.lang.reflect.Type[] type: INTERFACE \l0x0043: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Object[]), (r5 I:java.lang.Object[]) java.util.Arrays.equals(java.lang.Object[], java.lang.Object[]):boolean type: STATIC \l}"];
Node_20 [shape=record,label="{20\:\ 0x0047|0x0047: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x004a \l}"];
Node_22 [shape=record,label="{22\:\ 0x004a|0x004a: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x004b|0x004b: RETURN  (r0 I:boolean) \l}"];
Node_24 [shape=record,label="{24\:\ 0x004c|0x004c: INSTANCE_OF  (r1 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.reflect.GenericArrayType \l}"];
Node_25 [shape=record,label="{25\:\ 0x004e|0x004e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0066 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0050|0x0050: INSTANCE_OF  (r0 I:boolean) = (r5 I:?[OBJECT, ARRAY]) java.lang.reflect.GenericArrayType \l}"];
Node_27 [shape=record,label="{27\:\ 0x0052|0x0052: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0055 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0054|0x0054: RETURN  (r2 I:boolean) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0055|0x0055: CHECK_CAST  (r4 I:java.lang.reflect.GenericArrayType) = (java.lang.reflect.GenericArrayType) (r4 I:?[OBJECT, ARRAY]) \l0x0057: CHECK_CAST  (r5 I:java.lang.reflect.GenericArrayType) = (java.lang.reflect.GenericArrayType) (r5 I:?[OBJECT, ARRAY]) \l0x0059: INVOKE  (r4 I:java.lang.reflect.Type) = (r4 I:java.lang.reflect.GenericArrayType) java.lang.reflect.GenericArrayType.getGenericComponentType():java.lang.reflect.Type type: INTERFACE \l0x005d: INVOKE  (r5 I:java.lang.reflect.Type) = (r5 I:java.lang.reflect.GenericArrayType) java.lang.reflect.GenericArrayType.getGenericComponentType():java.lang.reflect.Type type: INTERFACE \l0x0061: INVOKE  (r4 I:boolean) = \l  (r4 I:java.lang.reflect.Type)\l  (r5 I:java.lang.reflect.Type)\l retrofit2.Utils.equals(java.lang.reflect.Type, java.lang.reflect.Type):boolean type: STATIC \l}"];
Node_30 [shape=record,label="{30\:\ 0x0065|0x0065: RETURN  (r4 I:boolean) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0066|0x0066: INSTANCE_OF  (r1 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.reflect.WildcardType \l}"];
Node_32 [shape=record,label="{32\:\ 0x0068|0x0068: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0092 \l}"];
Node_33 [shape=record,label="{33\:\ 0x006a|0x006a: INSTANCE_OF  (r1 I:boolean) = (r5 I:?[OBJECT, ARRAY]) java.lang.reflect.WildcardType \l}"];
Node_34 [shape=record,label="{34\:\ 0x006c|0x006c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x006f \l}"];
Node_35 [shape=record,label="{35\:\ 0x006e|0x006e: RETURN  (r2 I:boolean) \l}"];
Node_36 [shape=record,label="{36\:\ 0x006f|0x006f: CHECK_CAST  (r4 I:java.lang.reflect.WildcardType) = (java.lang.reflect.WildcardType) (r4 I:?[OBJECT, ARRAY]) \l0x0071: CHECK_CAST  (r5 I:java.lang.reflect.WildcardType) = (java.lang.reflect.WildcardType) (r5 I:?[OBJECT, ARRAY]) \l0x0073: INVOKE  (r1 I:java.lang.reflect.Type[]) = (r4 I:java.lang.reflect.WildcardType) java.lang.reflect.WildcardType.getUpperBounds():java.lang.reflect.Type[] type: INTERFACE \l0x0077: INVOKE  (r3 I:java.lang.reflect.Type[]) = (r5 I:java.lang.reflect.WildcardType) java.lang.reflect.WildcardType.getUpperBounds():java.lang.reflect.Type[] type: INTERFACE \l0x007b: INVOKE  (r1 I:boolean) = (r1 I:java.lang.Object[]), (r3 I:java.lang.Object[]) java.util.Arrays.equals(java.lang.Object[], java.lang.Object[]):boolean type: STATIC \l}"];
Node_37 [shape=record,label="{37\:\ 0x007f|0x007f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0090 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0081|0x0081: INVOKE  (r4 I:java.lang.reflect.Type[]) = (r4 I:java.lang.reflect.WildcardType) java.lang.reflect.WildcardType.getLowerBounds():java.lang.reflect.Type[] type: INTERFACE \l0x0085: INVOKE  (r5 I:java.lang.reflect.Type[]) = (r5 I:java.lang.reflect.WildcardType) java.lang.reflect.WildcardType.getLowerBounds():java.lang.reflect.Type[] type: INTERFACE \l0x0089: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Object[]), (r5 I:java.lang.Object[]) java.util.Arrays.equals(java.lang.Object[], java.lang.Object[]):boolean type: STATIC \l}"];
Node_39 [shape=record,label="{39\:\ 0x008d|0x008d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0090 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0090|0x0090: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_42 [shape=record,label="{42\:\ 0x0091|0x0091: RETURN  (r0 I:boolean) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0092|0x0092: INSTANCE_OF  (r1 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.reflect.TypeVariable \l}"];
Node_44 [shape=record,label="{44\:\ 0x0094|0x0094: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x00ba \l}"];
Node_45 [shape=record,label="{45\:\ 0x0096|0x0096: INSTANCE_OF  (r1 I:boolean) = (r5 I:?[OBJECT, ARRAY]) java.lang.reflect.TypeVariable \l}"];
Node_46 [shape=record,label="{46\:\ 0x0098|0x0098: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x009b \l}"];
Node_47 [shape=record,label="{47\:\ 0x009a|0x009a: RETURN  (r2 I:boolean) \l}"];
Node_48 [shape=record,label="{48\:\ 0x009b|0x009b: CHECK_CAST  (r4 I:java.lang.reflect.TypeVariable) = (java.lang.reflect.TypeVariable) (r4 I:?[OBJECT, ARRAY]) \l0x009d: CHECK_CAST  (r5 I:java.lang.reflect.TypeVariable) = (java.lang.reflect.TypeVariable) (r5 I:?[OBJECT, ARRAY]) \l0x009f: INVOKE  (r1 I:java.lang.reflect.GenericDeclaration) = (r4 I:java.lang.reflect.TypeVariable) java.lang.reflect.TypeVariable.getGenericDeclaration():java.lang.reflect.GenericDeclaration type: INTERFACE \l0x00a3: INVOKE  (r3 I:java.lang.reflect.GenericDeclaration) = (r5 I:java.lang.reflect.TypeVariable) java.lang.reflect.TypeVariable.getGenericDeclaration():java.lang.reflect.GenericDeclaration type: INTERFACE \l}"];
Node_49 [shape=record,label="{49\:\ 0x00a7|0x00a7: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x00b8 \l}"];
Node_50 [shape=record,label="{50\:\ 0x00a9|0x00a9: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.reflect.TypeVariable) java.lang.reflect.TypeVariable.getName():java.lang.String type: INTERFACE \l0x00ad: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.reflect.TypeVariable) java.lang.reflect.TypeVariable.getName():java.lang.String type: INTERFACE \l0x00b1: INVOKE  (r4 I:boolean) = (r4 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_51 [shape=record,label="{51\:\ 0x00b5|0x00b5: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x00b8 \l}"];
Node_53 [shape=record,label="{53\:\ 0x00b8|0x00b8: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_54 [shape=record,label="{54\:\ 0x00b9|0x00b9: RETURN  (r0 I:boolean) \l}"];
Node_55 [shape=record,label="{55\:\ 0x00ba|0x00ba: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{static boolean retrofit2.Utils.equals((r4 I:java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_24;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_22;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_22;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_23[style=dashed];
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_43;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_41;
Node_38 -> Node_39;
Node_39 -> Node_41;
Node_39 -> Node_42[style=dashed];
Node_41 -> Node_42;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_55;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_53;
Node_50 -> Node_51;
Node_51 -> Node_53;
Node_51 -> Node_54[style=dashed];
Node_53 -> Node_54;
}

