digraph "CFG forretrofit2.Utils.indexOf([Ljava\/lang\/Object;Ljava\/lang\/Object;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: ARRAY_LENGTH  (r1 I:int) = (r2 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0002|0x0002: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:7:0x0010 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: AGET  (r1 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0006: INVOKE  (r1 I:boolean) = (r3 I:java.lang.Object), (r1 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000d \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: RETURN  (r0 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: NEW_INSTANCE  (r2 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException \l0x0012: INVOKE  (r2 I:java.util.NoSuchElementException) java.util.NoSuchElementException.\<init\>():void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|0x0015: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static int retrofit2.Utils.indexOf((r2 I:java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_1;
Node_7 -> Node_8;
}

