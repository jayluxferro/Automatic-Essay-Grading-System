digraph "CFG forretrofit2.Utils.getParameterUpperBound(ILjava\/lang\/reflect\/ParameterizedType;)Ljava\/lang\/reflect\/Type;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.reflect.Type[] r0 = r5.getActualTypeArguments()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r4 \< 0) goto L_0x001a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r4 \>= r0.length) goto L_0x001a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|r4 = r0[r4]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|if ((r4 instanceof java.lang.reflect.WildcardType) == false) goto L_0x0019\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f}"];
Node_7 [shape=record,label="{7\:\ 0x0018|RETURN\l|return ((java.lang.reflect.WildcardType) r4).getUpperBounds()[0]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|RETURN\l|return r4\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Index \")\lr2.append(r4)\lr2.append(\" not in range [0,\")\lr2.append(r0.length)\lr2.append(\") for \")\lr2.append(r5)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|throw new java.lang.IllegalArgumentException(r2.toString())\l}"];
MethodNode[shape=record,label="{static java.lang.reflect.Type retrofit2.Utils.getParameterUpperBound((r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.reflect.ParameterizedType A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_9 -> Node_10;
}

