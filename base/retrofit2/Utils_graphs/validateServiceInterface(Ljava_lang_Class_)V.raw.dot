digraph "CFG forretrofit2.Utils.validateServiceInterface(Ljava\/lang\/Class;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r1 I:java.lang.Class) java.lang.Class.isInterface():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r1 I:java.lang.Class[]) = (r1 I:java.lang.Class) java.lang.Class.getInterfaces():java.lang.Class[] type: VIRTUAL \l0x000a: ARRAY_LENGTH  (r1 I:int) = (r1 I:?[]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r1 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:5:0x000e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0010: CONST_STR  (r0 I:java.lang.String) =  \"API interfaces must not extend other interfaces.\" \l0x0012: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0018: CONST_STR  (r0 I:java.lang.String) =  \"API declarations must be interfaces.\" \l0x001a: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{static void retrofit2.Utils.validateServiceInterface((r1 I:java.lang.Class\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Class\<, TT;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

