digraph "CFG forretrofit2.Utils.buffer(Lokhttp3\/ResponseBody;)Lokhttp3\/ResponseBody;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:okio.Buffer) =  okio.Buffer \l0x0002: INVOKE  (r0 I:okio.Buffer) okio.Buffer.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r1 I:okio.BufferedSource) = (r4 I:okhttp3.ResponseBody) okhttp3.ResponseBody.source():okio.BufferedSource type: VIRTUAL \l0x0009: INVOKE  (r1 I:okio.BufferedSource), (r0 I:okio.Sink) okio.BufferedSource.readAll(okio.Sink):long type: INTERFACE \l0x000c: INVOKE  (r1 I:okhttp3.MediaType) = (r4 I:okhttp3.ResponseBody) okhttp3.ResponseBody.contentType():okhttp3.MediaType type: VIRTUAL \l0x0010: INVOKE  (r2 I:long) = (r4 I:okhttp3.ResponseBody) okhttp3.ResponseBody.contentLength():long type: VIRTUAL \l0x0014: INVOKE  (r4 I:okhttp3.ResponseBody) = \l  (r1 I:okhttp3.MediaType)\l  (r2 I:long)\l  (r0 I:okio.BufferedSource)\l okhttp3.ResponseBody.create(okhttp3.MediaType, long, okio.BufferedSource):okhttp3.ResponseBody type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: RETURN  (r4 I:okhttp3.ResponseBody) \l}"];
MethodNode[shape=record,label="{static okhttp3.ResponseBody retrofit2.Utils.buffer((r4 I:okhttp3.ResponseBody A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

