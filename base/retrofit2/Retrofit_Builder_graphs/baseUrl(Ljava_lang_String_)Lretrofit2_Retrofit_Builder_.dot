digraph "CFG forretrofit2.Retrofit.Builder.baseUrl(Ljava\/lang\/String;)Lretrofit2\/Retrofit$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|retrofit2.Utils.checkNotNull(r4, \"baseUrl == null\")\lokhttp3.HttpUrl r0 = okhttp3.HttpUrl.parse(r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r0 == null) goto L_0x0010\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b}"];
Node_3 [shape=record,label="{3\:\ 0x000f|RETURN\l|return baseUrl(r0)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Illegal URL: \")\lr1.append(r4)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
MethodNode[shape=record,label="{public retrofit2.Retrofit$Builder retrofit2.Retrofit.Builder.baseUrl((r3v0 'this' retrofit2.Retrofit$Builder A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

