digraph "CFG forretrofit2.Retrofit.Builder.client(Lokhttp3\/OkHttpClient;)Lretrofit2\/Retrofit$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"client == null\" \l0x0002: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.lang.Object), (r0 I:java.lang.String) retrofit2.Utils.checkNotNull(java.lang.Object, java.lang.String):java.lang.Object type: STATIC \l0x0006: CHECK_CAST  (r2 I:okhttp3.Call$Factory) = (okhttp3.Call$Factory) (r2 I:?[OBJECT, ARRAY]) \l0x0008: INVOKE  (r2 I:retrofit2.Retrofit$Builder) = \l  (r1 I:retrofit2.Retrofit$Builder)\l  (r2 I:okhttp3.Call$Factory)\l retrofit2.Retrofit.Builder.callFactory(okhttp3.Call$Factory):retrofit2.Retrofit$Builder type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: RETURN  (r2 I:retrofit2.Retrofit$Builder) \l}"];
MethodNode[shape=record,label="{public retrofit2.Retrofit$Builder retrofit2.Retrofit.Builder.client((r1 'this' I:retrofit2.Retrofit$Builder A[IMMUTABLE_TYPE, THIS]), (r2 I:okhttp3.OkHttpClient A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

