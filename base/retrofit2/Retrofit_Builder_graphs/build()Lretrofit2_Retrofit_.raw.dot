digraph "CFG forretrofit2.Retrofit.Builder.build()Lretrofit2\/Retrofit;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.HttpUrl) = (r9 I:retrofit2.Retrofit$Builder) retrofit2.Retrofit.Builder.baseUrl okhttp3.HttpUrl \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0056 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:okhttp3.Call$Factory) = (r9 I:retrofit2.Retrofit$Builder) retrofit2.Retrofit.Builder.callFactory okhttp3.Call$Factory \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: NEW_INSTANCE  (r0 I:okhttp3.OkHttpClient) =  okhttp3.OkHttpClient \l0x000a: INVOKE  (r0 I:okhttp3.OkHttpClient) okhttp3.OkHttpClient.\<init\>():void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x000e: IGET  (r0 I:java.util.concurrent.Executor) = (r9 I:retrofit2.Retrofit$Builder) retrofit2.Retrofit.Builder.callbackExecutor java.util.concurrent.Executor \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0018 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: IGET  (r0 I:retrofit2.Platform) = (r9 I:retrofit2.Retrofit$Builder) retrofit2.Retrofit.Builder.platform retrofit2.Platform \l0x0014: INVOKE  (r0 I:java.util.concurrent.Executor) = (r0 I:retrofit2.Platform) retrofit2.Platform.defaultCallbackExecutor():java.util.concurrent.Executor type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0019: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x001b: IGET  (r1 I:java.util.List\<retrofit2.CallAdapter$Factory\>) = (r9 I:retrofit2.Retrofit$Builder) retrofit2.Retrofit.Builder.callAdapterFactories java.util.List \l0x001d: INVOKE  (r0 I:java.util.ArrayList), (r1 I:java.util.Collection) java.util.ArrayList.\<init\>(java.util.Collection):void type: DIRECT \l0x0020: IGET  (r1 I:retrofit2.Platform) = (r9 I:retrofit2.Retrofit$Builder) retrofit2.Retrofit.Builder.platform retrofit2.Platform \l0x0022: INVOKE  (r1 I:retrofit2.CallAdapter$Factory) = \l  (r1 I:retrofit2.Platform)\l  (r6 I:java.util.concurrent.Executor)\l retrofit2.Platform.defaultCallAdapterFactory(java.util.concurrent.Executor):retrofit2.CallAdapter$Factory type: VIRTUAL \l0x0026: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0029: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x002b: IGET  (r3 I:java.util.List\<retrofit2.Converter$Factory\>) = (r9 I:retrofit2.Retrofit$Builder) retrofit2.Retrofit.Builder.converterFactories java.util.List \l0x002d: INVOKE  (r3 I:int) = (r3 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0031: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l0x0033: INVOKE  (r1 I:java.util.ArrayList), (r3 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x0036: NEW_INSTANCE  (r3 I:retrofit2.BuiltInConverters) =  retrofit2.BuiltInConverters \l0x0038: INVOKE  (r3 I:retrofit2.BuiltInConverters) retrofit2.BuiltInConverters.\<init\>():void type: DIRECT \l0x003b: INVOKE  (r1 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x003e: IGET  (r3 I:java.util.List\<retrofit2.Converter$Factory\>) = (r9 I:retrofit2.Retrofit$Builder) retrofit2.Retrofit.Builder.converterFactories java.util.List \l0x0040: INVOKE  (r1 I:java.util.List), (r3 I:java.util.Collection) java.util.List.addAll(java.util.Collection):boolean type: INTERFACE \l0x0043: NEW_INSTANCE  (r8 I:retrofit2.Retrofit) =  retrofit2.Retrofit \l0x0045: IGET  (r3 I:okhttp3.HttpUrl) = (r9 I:retrofit2.Retrofit$Builder) retrofit2.Retrofit.Builder.baseUrl okhttp3.HttpUrl \l0x0047: INVOKE  (r4 I:java.util.List) = (r1 I:java.util.List) java.util.Collections.unmodifiableList(java.util.List):java.util.List type: STATIC \l0x004b: INVOKE  (r5 I:java.util.List) = (r0 I:java.util.List) java.util.Collections.unmodifiableList(java.util.List):java.util.List type: STATIC \l0x004f: IGET  (r7 I:boolean) = (r9 I:retrofit2.Retrofit$Builder) retrofit2.Retrofit.Builder.validateEagerly boolean \l0x0051: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0052: INVOKE  \l  (r1 I:retrofit2.Retrofit)\l  (r2 I:okhttp3.Call$Factory)\l  (r3 I:okhttp3.HttpUrl)\l  (r4 I:java.util.List)\l  (r5 I:java.util.List)\l  (r6 I:java.util.concurrent.Executor)\l  (r7 I:boolean)\l retrofit2.Retrofit.\<init\>(okhttp3.Call$Factory, okhttp3.HttpUrl, java.util.List, java.util.List, java.util.concurrent.Executor, boolean):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0055|0x0055: RETURN  (r8 I:retrofit2.Retrofit) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0056|0x0056: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0058: CONST_STR  (r1 I:java.lang.String) =  \"Base URL required.\" \l0x005a: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x005d|0x005d: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public retrofit2.Retrofit retrofit2.Retrofit.Builder.build((r9 'this' I:retrofit2.Retrofit$Builder A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

