digraph "CFG forretrofit2.BuiltInConverters.requestBodyConverter(Ljava\/lang\/reflect\/Type;[Ljava\/lang\/annotation\/Annotation;[Ljava\/lang\/annotation\/Annotation;Lretrofit2\/Retrofit;)Lretrofit2\/Converter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_CLASS  (r2 I:java.lang.Class\<okhttp3.RequestBody\>) =  okhttp3.RequestBody.class \l0x0002: INVOKE  (r1 I:java.lang.Class) = (r1 I:java.lang.reflect.Type) retrofit2.Utils.getRawType(java.lang.reflect.Type):java.lang.Class type: STATIC \l0x0006: INVOKE  (r1 I:boolean) = (r2 I:java.lang.Class), (r1 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: SGET  (r1 I:retrofit2.BuiltInConverters$RequestBodyConverter) =  retrofit2.BuiltInConverters.RequestBodyConverter.INSTANCE retrofit2.BuiltInConverters$RequestBodyConverter \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: RETURN  (r1 I:retrofit2.Converter\<?, okhttp3.RequestBody\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: RETURN  (r1 I:retrofit2.Converter\<?, okhttp3.RequestBody\>) \l}"];
MethodNode[shape=record,label="{public retrofit2.Converter\<?, okhttp3.RequestBody\> retrofit2.BuiltInConverters.requestBodyConverter((r0 'this' I:retrofit2.BuiltInConverters A[IMMUTABLE_TYPE, THIS]), (r1 I:java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.annotation.Annotation[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.annotation.Annotation[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:retrofit2.Retrofit A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/reflect\/Type;, [, Ljava\/lang\/annotation\/Annotation;, [, Ljava\/lang\/annotation\/Annotation;, Lretrofit2\/Retrofit;, ), Lretrofit2\/Converter\<, *, Lokhttp3\/RequestBody;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

