digraph "CFG forretrofit2.ParameterHandler.Body.apply(Lretrofit2\/RequestBuilder;Ljava\/lang\/Object;)V" {
subgraph cluster_Region_516582618 {
label = "R(1:(1:(1:3))(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_498089930 {
label = "IF [B:0:0x0000] THEN: R(1:(1:3)) ELSE: R(1:9)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 != null) goto L_0x0002\l}"];
subgraph cluster_Region_1306308649 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1033763008 {
label = "Try: R(1:3) catches: R(3:5|6|7)";
node [shape=record,color=blue];
subgraph cluster_Region_1887239957 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|r4.setBody(r3.converter.convert(r5))\l}"];
}
subgraph cluster_Region_1823391935 {
label = "R(3:5|6|7) | ExcHandler: IOException (r4v2 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|ExcHandler: IOException (r4v2 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0002\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f}"];
Node_7 [shape=record,label="{7\:\ 0x002a|throw new java.lang.RuntimeException(\"Unable to convert \" + r5 + \" to RequestBody\", r4)\l}"];
}
}
}
subgraph cluster_Region_1155229947 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0032|throw new java.lang.IllegalArgumentException(\"Body parameter value must not be null.\")\l}"];
}
}
}
subgraph cluster_Region_1823391935 {
label = "R(3:5|6|7) | ExcHandler: IOException (r4v2 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|ExcHandler: IOException (r4v2 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0002\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f}"];
Node_7 [shape=record,label="{7\:\ 0x002a|throw new java.lang.RuntimeException(\"Unable to convert \" + r5 + \" to RequestBody\", r4)\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?|Catch:\{ IOException \-\> 0x000e \}\lSplitter:B:1:0x0002\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000d}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x002b}"];
MethodNode[shape=record,label="{void retrofit2.ParameterHandler.Body.apply((r3v0 'this' retrofit2.ParameterHandler$Body A[IMMUTABLE_TYPE, THIS]), (r4v0 retrofit2.RequestBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lretrofit2\/RequestBuilder;, TT;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_8[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_8 -> Node_9;
}

