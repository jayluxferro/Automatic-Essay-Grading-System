digraph "CFG forretrofit2.RequestBuilder.addHeader(Ljava\/lang\/String;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (p018io.fabric.sdk.android.services.network.HttpRequest.HEADER_CONTENT_TYPE.equalsIgnoreCase(r3) == false) goto L_0x0028\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|okhttp3.MediaType r3 = okhttp3.MediaType.parse(r4)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r3 == null) goto L_0x0011\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|r2.contentType = r3\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Malformed content type: \")\lr0.append(r4)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|throw new java.lang.IllegalArgumentException(r0.toString())\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|r2.requestBuilder.addHeader(r3, r4)\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void retrofit2.RequestBuilder.addHeader((r2v0 'this' retrofit2.RequestBuilder A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

