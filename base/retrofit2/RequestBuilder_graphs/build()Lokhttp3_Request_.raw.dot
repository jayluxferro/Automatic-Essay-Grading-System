digraph "CFG forretrofit2.RequestBuilder.build()Lokhttp3\/Request;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.HttpUrl$Builder) = (r5 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.urlBuilder okhttp3.HttpUrl$Builder \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:okhttp3.HttpUrl) = (r0 I:okhttp3.HttpUrl$Builder) okhttp3.HttpUrl.Builder.build():okhttp3.HttpUrl type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r0 I:okhttp3.HttpUrl) = (r5 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.baseUrl okhttp3.HttpUrl \l0x000b: IGET  (r1 I:java.lang.String) = (r5 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.relativeUrl java.lang.String \l0x000d: INVOKE  (r0 I:okhttp3.HttpUrl) = (r0 I:okhttp3.HttpUrl), (r1 I:java.lang.String) okhttp3.HttpUrl.resolve(java.lang.String):okhttp3.HttpUrl type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0062 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IGET  (r1 I:okhttp3.RequestBody) = (r5 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.body okhttp3.RequestBody \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0039 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: IGET  (r2 I:okhttp3.FormBody$Builder) = (r5 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.formBuilder okhttp3.FormBody$Builder \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0022 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: IGET  (r1 I:okhttp3.FormBody$Builder) = (r5 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.formBuilder okhttp3.FormBody$Builder \l0x001d: INVOKE  (r1 I:okhttp3.FormBody) = (r1 I:okhttp3.FormBody$Builder) okhttp3.FormBody.Builder.build():okhttp3.FormBody type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: IGET  (r2 I:okhttp3.MultipartBody$Builder) = (r5 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.multipartBuilder okhttp3.MultipartBody$Builder \l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|0x0024: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002d \l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|0x0026: IGET  (r1 I:okhttp3.MultipartBody$Builder) = (r5 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.multipartBuilder okhttp3.MultipartBody$Builder \l0x0028: INVOKE  (r1 I:okhttp3.MultipartBody) = (r1 I:okhttp3.MultipartBody$Builder) okhttp3.MultipartBody.Builder.build():okhttp3.MultipartBody type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: IGET  (r2 I:boolean) = (r5 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.hasBody boolean \l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|0x002f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0039 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0031: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0032: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0033: NEW_ARRAY  (r2 I:byte[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0035: INVOKE  (r1 I:okhttp3.RequestBody) = (r1 I:okhttp3.MediaType), (r2 I:byte[]) okhttp3.RequestBody.create(okhttp3.MediaType, byte[]):okhttp3.RequestBody type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|0x0039: IGET  (r2 I:okhttp3.MediaType) = (r5 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.contentType okhttp3.MediaType \l}"];
Node_17 [shape=record,label="{17\:\ 0x003b|0x003b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0051 \l}"];
Node_18 [shape=record,label="{18\:\ 0x003d|0x003d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0046 \l}"];
Node_19 [shape=record,label="{19\:\ 0x003f|0x003f: NEW_INSTANCE  (r3 I:retrofit2.RequestBuilder$ContentTypeOverridingRequestBody) =  retrofit2.RequestBuilder$ContentTypeOverridingRequestBody \l0x0041: INVOKE  \l  (r3 I:retrofit2.RequestBuilder$ContentTypeOverridingRequestBody)\l  (r1 I:okhttp3.RequestBody)\l  (r2 I:okhttp3.MediaType)\l retrofit2.RequestBuilder.ContentTypeOverridingRequestBody.\<init\>(okhttp3.RequestBody, okhttp3.MediaType):void type: DIRECT \l0x0044: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0046|0x0046: IGET  (r3 I:okhttp3.Request$Builder) = (r5 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.requestBuilder okhttp3.Request$Builder \l0x0048: CONST_STR  (r4 I:java.lang.String) =  \"Content\-Type\" \l0x004a: INVOKE  (r2 I:java.lang.String) = (r2 I:okhttp3.MediaType) okhttp3.MediaType.toString():java.lang.String type: VIRTUAL \l0x004e: INVOKE  \l  (r3 I:okhttp3.Request$Builder)\l  (r4 I:java.lang.String)\l  (r2 I:java.lang.String)\l okhttp3.Request.Builder.addHeader(java.lang.String, java.lang.String):okhttp3.Request$Builder type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|0x0051: IGET  (r2 I:okhttp3.Request$Builder) = (r5 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.requestBuilder okhttp3.Request$Builder \l0x0053: INVOKE  (r0 I:okhttp3.Request$Builder) = (r2 I:okhttp3.Request$Builder), (r0 I:okhttp3.HttpUrl) okhttp3.Request.Builder.url(okhttp3.HttpUrl):okhttp3.Request$Builder type: VIRTUAL \l0x0057: IGET  (r2 I:java.lang.String) = (r5 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.method java.lang.String \l0x0059: INVOKE  (r0 I:okhttp3.Request$Builder) = \l  (r0 I:okhttp3.Request$Builder)\l  (r2 I:java.lang.String)\l  (r1 I:okhttp3.RequestBody)\l okhttp3.Request.Builder.method(java.lang.String, okhttp3.RequestBody):okhttp3.Request$Builder type: VIRTUAL \l0x005d: INVOKE  (r0 I:okhttp3.Request) = (r0 I:okhttp3.Request$Builder) okhttp3.Request.Builder.build():okhttp3.Request type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x0061|0x0061: RETURN  (r0 I:okhttp3.Request) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0062|0x0062: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0064: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0066: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0069: CONST_STR  (r2 I:java.lang.String) =  \"Malformed URL. Base: \" \l0x006b: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006e: IGET  (r2 I:okhttp3.HttpUrl) = (r5 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.baseUrl okhttp3.HttpUrl \l0x0070: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0073: CONST_STR  (r2 I:java.lang.String) =  \", Relative: \" \l0x0075: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0078: IGET  (r2 I:java.lang.String) = (r5 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.relativeUrl java.lang.String \l0x007a: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007d: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0081: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r1 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x0084|0x0084: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{okhttp3.Request retrofit2.RequestBuilder.build((r5 'this' I:retrofit2.RequestBuilder A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_23;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_16;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_23 -> Node_24;
}

