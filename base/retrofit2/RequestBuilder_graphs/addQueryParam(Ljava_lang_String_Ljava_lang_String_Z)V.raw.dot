digraph "CFG forretrofit2.RequestBuilder.addQueryParam(Ljava\/lang\/String;Ljava\/lang\/String;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.String) = (r2 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.relativeUrl java.lang.String \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0039 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:okhttp3.HttpUrl) = (r2 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.baseUrl okhttp3.HttpUrl \l0x0006: IGET  (r1 I:java.lang.String) = (r2 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.relativeUrl java.lang.String \l0x0008: INVOKE  (r0 I:okhttp3.HttpUrl$Builder) = (r0 I:okhttp3.HttpUrl), (r1 I:java.lang.String) okhttp3.HttpUrl.newBuilder(java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l0x000c: IPUT  \l  (r0 I:okhttp3.HttpUrl$Builder)\l  (r2 I:retrofit2.RequestBuilder)\l retrofit2.RequestBuilder.urlBuilder okhttp3.HttpUrl$Builder \l0x000e: IGET  (r0 I:okhttp3.HttpUrl$Builder) = (r2 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.urlBuilder okhttp3.HttpUrl$Builder \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: IPUT  (r0 I:java.lang.String), (r2 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.relativeUrl java.lang.String \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0018: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001a: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001d: CONST_STR  (r5 I:java.lang.String) =  \"Malformed URL. Base: \" \l0x001f: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0022: IGET  (r5 I:okhttp3.HttpUrl) = (r2 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.baseUrl okhttp3.HttpUrl \l0x0024: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0027: CONST_STR  (r5 I:java.lang.String) =  \", Relative: \" \l0x0029: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002c: IGET  (r5 I:java.lang.String) = (r2 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.relativeUrl java.lang.String \l0x002e: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0031: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0035: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0038|0x0038: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0039|0x0039: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0041 \l}"];
Node_8 [shape=record,label="{8\:\ 0x003b|0x003b: IGET  (r5 I:okhttp3.HttpUrl$Builder) = (r2 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.urlBuilder okhttp3.HttpUrl$Builder \l0x003d: INVOKE  \l  (r5 I:okhttp3.HttpUrl$Builder)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l okhttp3.HttpUrl.Builder.addEncodedQueryParameter(java.lang.String, java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|0x0041: IGET  (r5 I:okhttp3.HttpUrl$Builder) = (r2 I:retrofit2.RequestBuilder) retrofit2.RequestBuilder.urlBuilder okhttp3.HttpUrl$Builder \l0x0043: INVOKE  \l  (r5 I:okhttp3.HttpUrl$Builder)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l okhttp3.HttpUrl.Builder.addQueryParameter(java.lang.String, java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0046|0x0046: RETURN   \l}"];
MethodNode[shape=record,label="{void retrofit2.RequestBuilder.addQueryParam((r2 'this' I:retrofit2.RequestBuilder A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[RUNTIME, javax.annotation.Nullable, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
}

