digraph "CFG forretrofit2.OkHttpCall.ExceptionCatchingRequestBody.1.read(Lokio\/Buffer;J)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r1 I:long) = \l  (r0 I:okio.ForwardingSource)\l  (r1 I:okio.Buffer)\l  (r2 I:long)\l okio.ForwardingSource.read(okio.Buffer, long):long type: SUPER A[Catch:\{ IOException \-\> 0x0005 \}, TRY_ENTER]\l0x0003: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN  (r1 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|ExcHandler: IOException null\lSplitter:B:0:0x0000\l|0x0005: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IGET  (r2 I:retrofit2.OkHttpCall$ExceptionCatchingRequestBody) = (r0 I:retrofit2.OkHttpCall$ExceptionCatchingRequestBody$1) retrofit2.OkHttpCall.ExceptionCatchingRequestBody.1.this$0 retrofit2.OkHttpCall$ExceptionCatchingRequestBody \l0x0008: IPUT  \l  (r1 I:java.io.IOException)\l  (r2 I:retrofit2.OkHttpCall$ExceptionCatchingRequestBody)\l retrofit2.OkHttpCall.ExceptionCatchingRequestBody.thrownException java.io.IOException \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public long retrofit2.OkHttpCall.ExceptionCatchingRequestBody.1.read((r0 'this' I:retrofit2.OkHttpCall$ExceptionCatchingRequestBody$1 A[IMMUTABLE_TYPE, THIS]), (r1 I:okio.Buffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

