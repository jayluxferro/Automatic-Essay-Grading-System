digraph "CFG forretrofit2.OkHttpCall.enqueue(Lretrofit2\/Callback;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"callback == null\" \l0x0002: INVOKE  (r4 I:java.lang.Object), (r0 I:java.lang.String) retrofit2.Utils.checkNotNull(java.lang.Object, java.lang.String):java.lang.Object type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: MONITOR_ENTER  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|SYNTHETIC\lSplitter:B:2:0x0006\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0006\l|0x0006: IGET  (r0 I:boolean) = (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.executed boolean A[Catch:\{ all \-\> 0x0042 \}, TRY_ENTER]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x003a A[Catch:\{ all \-\> 0x0042 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0042 \}]\l0x000b: IPUT  (r0 I:boolean), (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.executed boolean A[Catch:\{ all \-\> 0x0042 \}]\l0x000d: IGET  (r0 I:okhttp3.Call) = (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.rawCall okhttp3.Call A[Catch:\{ all \-\> 0x0042 \}]\l0x000f: IGET  (r1 I:java.lang.Throwable) = (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.creationFailure java.lang.Throwable A[Catch:\{ all \-\> 0x0042 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0023 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0023 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|SYNTHETIC\lSplitter:B:8:0x0015\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0015\l|0x0015: INVOKE  (r2 I:okhttp3.Call) = (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.createRawCall():okhttp3.Call type: DIRECT A[Catch:\{ Throwable \-\> 0x001d \}, TRY_ENTER]\l0x0019: IPUT  (r2 I:okhttp3.Call), (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.rawCall okhttp3.Call A[Catch:\{ Throwable \-\> 0x001d \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|ExcHandler: Throwable null\lSplitter:B:8:0x0015\l|0x001d: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|SYNTHETIC\lSplitter:B:12:0x001e\l}"];
Node_13 [shape=record,label="{13\:\ ?|Splitter:B:12:0x001e\l|0x001e: INVOKE  (r1 I:java.lang.Throwable) retrofit2.Utils.throwIfFatal(java.lang.Throwable):void type: STATIC A[Catch:\{ all \-\> 0x0042 \}, TRY_ENTER]\l0x0021: IPUT  (r1 I:java.lang.Throwable), (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.creationFailure java.lang.Throwable A[Catch:\{ all \-\> 0x0042 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|0x0023: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0042 \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0024|0x0024: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x002a \l}"];
Node_16 [shape=record,label="{16\:\ 0x0026|0x0026: INVOKE  \l  (r4 I:retrofit2.Callback)\l  (r3 I:retrofit2.Call)\l  (r1 I:java.lang.Throwable)\l retrofit2.Callback.onFailure(retrofit2.Call, java.lang.Throwable):void type: INTERFACE \l}"];
Node_17 [shape=record,label="{17\:\ 0x0029|0x0029: RETURN   \l}"];
Node_18 [shape=record,label="{18\:\ 0x002a|0x002a: IGET  (r1 I:boolean) = (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.canceled boolean \l}"];
Node_19 [shape=record,label="{19\:\ 0x002c|0x002c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0031 \l}"];
Node_20 [shape=record,label="{20\:\ 0x002e|0x002e: INVOKE  (r0 I:okhttp3.Call) okhttp3.Call.cancel():void type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x0031|0x0031: NEW_INSTANCE  (r1 I:retrofit2.OkHttpCall$1) =  retrofit2.OkHttpCall$1 \l0x0033: INVOKE  \l  (r1 I:retrofit2.OkHttpCall$1)\l  (r3 I:retrofit2.OkHttpCall)\l  (r4 I:retrofit2.Callback)\l retrofit2.OkHttpCall.1.\<init\>(retrofit2.OkHttpCall, retrofit2.Callback):void type: DIRECT \l0x0036: INVOKE  (r0 I:okhttp3.Call), (r1 I:okhttp3.Callback) okhttp3.Call.enqueue(okhttp3.Callback):void type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x0039|0x0039: RETURN   \l}"];
Node_23 [shape=record,label="{23\:\ 0x003a|SYNTHETIC\lSplitter:B:23:0x003a\l}"];
Node_24 [shape=record,label="{24\:\ ?|Splitter:B:23:0x003a\l|0x003a: NEW_INSTANCE  (r4 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException A[Catch:\{ all \-\> 0x0042 \}, TRY_ENTER]\l0x003c: CONST_STR  (r0 I:java.lang.String) =  \"Already executed.\" A[Catch:\{ all \-\> 0x0042 \}]\l0x003e: INVOKE  \l  (r4 I:java.lang.IllegalStateException)\l  (r0 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0042 \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0041|0x0041: THROW  (r4 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0042 \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0042|ExcHandler: all null\lSplitter:B:2:0x0006\l|0x0042: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0042 \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0043|0x0043: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0042 \}, TRY_LEAVE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0044|0x0044: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void retrofit2.OkHttpCall.enqueue((r3 'this' I:retrofit2.OkHttpCall A[IMMUTABLE_TYPE, THIS]), (r4 I:retrofit2.Callback\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lretrofit2\/Callback\<, TT;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_26;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_23;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_26;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_28;
}

