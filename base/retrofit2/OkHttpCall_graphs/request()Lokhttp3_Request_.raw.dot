digraph "CFG forretrofit2.OkHttpCall.request()Lokhttp3\/Request;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:okhttp3.Call) = (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.rawCall okhttp3.Call A[Catch:\{ all \-\> 0x004d \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000b A[Catch:\{ all \-\> 0x004d \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: INVOKE  (r0 I:okhttp3.Request) = (r0 I:okhttp3.Call) okhttp3.Call.request():okhttp3.Request type: INTERFACE A[Catch:\{ all \-\> 0x004d \}]\l0x0008: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: RETURN  (r0 I:okhttp3.Request) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|SYNTHETIC\lSplitter:B:7:0x000b\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x000b\l|0x000b: IGET  (r0 I:java.lang.Throwable) = (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.creationFailure java.lang.Throwable A[Catch:\{ all \-\> 0x004d \}, TRY_ENTER]\l}"];
Node_9 [shape=record,label="{9\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x002f A[Catch:\{ all \-\> 0x004d \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x000f|0x000f: IGET  (r0 I:java.lang.Throwable) = (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.creationFailure java.lang.Throwable A[Catch:\{ all \-\> 0x004d \}]\l0x0011: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) java.io.IOException A[Catch:\{ all \-\> 0x004d \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0025 A[Catch:\{ all \-\> 0x004d \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0015|0x0015: IGET  (r0 I:java.lang.Throwable) = (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.creationFailure java.lang.Throwable A[Catch:\{ all \-\> 0x004d \}]\l0x0017: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) java.lang.RuntimeException A[Catch:\{ all \-\> 0x004d \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0020 A[Catch:\{ all \-\> 0x004d \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x001b|0x001b: IGET  (r0 I:java.lang.Throwable) = (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.creationFailure java.lang.Throwable A[Catch:\{ all \-\> 0x004d \}]\l0x001d: CHECK_CAST  (r0 I:java.lang.RuntimeException) = (java.lang.RuntimeException) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x004d \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001f|0x001f: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x004d \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0020|0x0020: IGET  (r0 I:java.lang.Throwable) = (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.creationFailure java.lang.Throwable A[Catch:\{ all \-\> 0x004d \}]\l0x0022: CHECK_CAST  (r0 I:java.lang.Error) = (java.lang.Error) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x004d \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0024|0x0024: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x004d \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0025|0x0025: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException A[Catch:\{ all \-\> 0x004d \}]\l0x0027: CONST_STR  (r1 I:java.lang.String) =  \"Unable to create request.\" A[Catch:\{ all \-\> 0x004d \}]\l0x0029: IGET  (r2 I:java.lang.Throwable) = (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.creationFailure java.lang.Throwable A[Catch:\{ all \-\> 0x004d \}]\l0x002b: INVOKE  \l  (r0 I:java.lang.RuntimeException)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Throwable)\l java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x004d \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x002e|0x002e: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x004d \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x002f|SYNTHETIC\lSplitter:B:20:0x002f\l}"];
Node_21 [shape=record,label="{21\:\ ?|Splitter:B:20:0x002f\l|0x002f: INVOKE  (r0 I:okhttp3.Call) = (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.createRawCall():okhttp3.Call type: DIRECT A[Catch:\{ Error \| RuntimeException \-\> 0x0046, IOException \-\> 0x003b \}, TRY_ENTER]\l0x0033: IPUT  (r0 I:okhttp3.Call), (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.rawCall okhttp3.Call A[Catch:\{ Error \| RuntimeException \-\> 0x0046, IOException \-\> 0x003b \}]\l0x0035: INVOKE  (r0 I:okhttp3.Request) = (r0 I:okhttp3.Call) okhttp3.Call.request():okhttp3.Request type: INTERFACE A[Catch:\{ Error \| RuntimeException \-\> 0x0046, IOException \-\> 0x003b \}]\l0x0038: NOP   A[TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0039|0x0039: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x003a|0x003a: RETURN  (r0 I:okhttp3.Request) \l}"];
Node_24 [shape=record,label="{24\:\ 0x003b|ExcHandler: IOException null\lSplitter:B:20:0x002f\l|0x003b: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_25 [shape=record,label="{25\:\ 0x003c|SYNTHETIC\lSplitter:B:25:0x003c\l}"];
Node_26 [shape=record,label="{26\:\ ?|Splitter:B:25:0x003c\l|0x003c: IPUT  (r0 I:java.lang.Throwable), (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.creationFailure java.lang.Throwable A[Catch:\{ all \-\> 0x004d \}, TRY_ENTER]\l0x003e: NEW_INSTANCE  (r1 I:java.lang.RuntimeException) =  java.lang.RuntimeException A[Catch:\{ all \-\> 0x004d \}]\l0x0040: CONST_STR  (r2 I:java.lang.String) =  \"Unable to create request.\" A[Catch:\{ all \-\> 0x004d \}]\l0x0042: INVOKE  \l  (r1 I:java.lang.RuntimeException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x004d \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0045|0x0045: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x004d \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0046|ExcHandler: Error \| RuntimeException null\lSplitter:B:20:0x002f\l|0x0046: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x004d \}]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0047|0x0047: INVOKE  (r0 I:java.lang.Throwable) retrofit2.Utils.throwIfFatal(java.lang.Throwable):void type: STATIC A[Catch:\{ all \-\> 0x004d \}]\l0x004a: IPUT  (r0 I:java.lang.Throwable), (r3 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.creationFailure java.lang.Throwable A[Catch:\{ all \-\> 0x004d \}]\l}"];
Node_30 [shape=record,label="{30\:\ 0x004c|0x004c: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x004d \}, TRY_LEAVE]\l}"];
Node_31 [shape=record,label="{31\:\ 0x004d|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x004d: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_32 [shape=record,label="{32\:\ 0x004e|0x004e: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x004f|0x004f: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized okhttp3.Request retrofit2.OkHttpCall.request((r3 'this' I:retrofit2.OkHttpCall A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_31;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_31;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_20;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_20 -> Node_28;
Node_20 -> Node_24;
Node_20 -> Node_31;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_32 -> Node_33;
}

