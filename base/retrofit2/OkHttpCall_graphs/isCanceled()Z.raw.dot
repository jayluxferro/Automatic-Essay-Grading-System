digraph "CFG forretrofit2.OkHttpCall.isCanceled()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r2 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.canceled boolean \l0x0002: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|SYNTHETIC\lSplitter:B:4:0x0007\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x0007\l|0x0007: IGET  (r0 I:okhttp3.Call) = (r2 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.rawCall okhttp3.Call A[Catch:\{ all \-\> 0x0017 \}, TRY_ENTER]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0014 A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|0x000b: IGET  (r0 I:okhttp3.Call) = (r2 I:retrofit2.OkHttpCall) retrofit2.OkHttpCall.rawCall okhttp3.Call A[Catch:\{ all \-\> 0x0017 \}]\l0x000d: INVOKE  (r0 I:boolean) = (r0 I:okhttp3.Call) okhttp3.Call.isCanceled():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0014 A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: GOTO  \-\> 0x0015 A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|0x0014: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|0x0015: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0016|0x0016: RETURN  (r1 I:boolean) A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0017|ExcHandler: all null\lSplitter:B:4:0x0007\l|0x0017: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|0x0018: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0017 \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0019|0x0019: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public boolean retrofit2.OkHttpCall.isCanceled((r2 'this' I:retrofit2.OkHttpCall A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

