digraph "CFG forretrofit2.ParameterHandler.HeaderMap.apply(Lretrofit2\/RequestBuilder;Ljava\/util\/Map;)V" {
subgraph cluster_Region_632176543 {
label = "R(1:(2:(3:1|(2:4|(2:6|(1:8)(2:9|10))(1:12))|13)|(1:15)))";
node [shape=record,color=blue];
subgraph cluster_Region_1476213040 {
label = "R(2:(3:1|(2:4|(2:6|(1:8)(2:9|10))(1:12))|13)|(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1558732913 {
label = "IF [B:0:0x0000] THEN: R(3:1|(2:4|(2:6|(1:8)(2:9|10))(1:12))|13) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 != null) goto L_0x0002\l}"];
subgraph cluster_Region_2127447675 {
label = "R(3:1|(2:4|(2:6|(1:8)(2:9|10))(1:12))|13)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|java.util.Iterator r5 = r5.entrySet().iterator()\l}"];
subgraph cluster_LoopRegion_709414138 {
label = "LOOP:0: (2:4|(2:6|(1:8)(2:9|10))(1:12))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r5.hasNext() != false) goto L_0x0010\l}"];
subgraph cluster_Region_853853593 {
label = "R(2:4|(2:6|(1:8)(2:9|10))(1:12))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|java.util.Map$Entry r0 = r5.next()\ljava.lang.String java.lang.String r1 = (java.lang.String) r0.getKey()\l}"];
subgraph cluster_IfRegion_1614875087 {
label = "IF [B:5:0x001c] THEN: R(2:6|(1:8)(2:9|10)) ELSE: R(1:12)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001c|if (r1 != null) goto L_0x001e\l}"];
subgraph cluster_Region_916003148 {
label = "R(2:6|(1:8)(2:9|10))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001e|java.lang.Object java.lang.Object r0 = r0.getValue()\l}"];
subgraph cluster_IfRegion_1585344801 {
label = "IF [B:7:0x0022] THEN: R(1:8) ELSE: R(2:9|10)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0022|if (r0 != null) goto L_0x0024\l}"];
subgraph cluster_Region_640237103 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0024|LOOP_END\lLOOP:0: B:2:0x000a\-\>B:8:0x0024\l|r4.addHeader(r1, r3.valueConverter.convert(r0))\l}"];
}
subgraph cluster_Region_574998672 {
label = "R(2:9|10)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0030}"];
Node_10 [shape=record,label="{10\:\ 0x004b|throw new java.lang.IllegalArgumentException(\"Header map contained null value for key '\" + r1 + \"'.\")\l}"];
}
}
}
subgraph cluster_Region_339887162 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0053|throw new java.lang.IllegalArgumentException(\"Header map contained null key.\")\l}"];
}
}
}
}
Node_13 [shape=record,label="{13\:\ 0x0054|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_188106027 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x005c|throw new java.lang.IllegalArgumentException(\"Header map was null.\")\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000a|LOOP_START\lLOOP:0: B:2:0x000a\-\>B:8:0x0024\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x004c}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0055}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0030|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x004c|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0054|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void retrofit2.ParameterHandler.HeaderMap.apply((r3v0 'this' retrofit2.ParameterHandler$HeaderMap A[IMMUTABLE_TYPE, THIS]), (r4v0 retrofit2.RequestBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.util.Map\<java.lang.String, T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\laccess modifiers changed from: package\-private\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lretrofit2\/RequestBuilder;, Ljava\/util\/Map\<, Ljava\/lang\/String;, TT;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_14[style=dashed];
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_3 -> Node_18[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_17[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_16[style=dashed];
Node_8 -> Node_2;
Node_9 -> Node_10;
Node_2 -> Node_3;
Node_11 -> Node_12;
Node_14 -> Node_15;
Node_16 -> Node_9;
Node_17 -> Node_11;
Node_18 -> Node_13;
}

