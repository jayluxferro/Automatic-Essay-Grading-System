digraph "CFG forretrofit2.ServiceMethod.boxIfPrimitive(Ljava\/lang\/Class;)Ljava\/lang\/Class;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:java.lang.Class) =  java.lang.Boolean.TYPE java.lang.Class \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Boolean\>) =  java.lang.Boolean.class \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: RETURN  (r1 I:java.lang.Class\<?\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: SGET  (r0 I:java.lang.Class) =  java.lang.Byte.TYPE java.lang.Class \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000e \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Byte\>) =  java.lang.Byte.class \l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: RETURN  (r1 I:java.lang.Class\<?\>) \l}"];
Node_8 [shape=record,label="{8\:\ 0x000e|0x000e: SGET  (r0 I:java.lang.Class) =  java.lang.Character.TYPE java.lang.Class \l}"];
Node_9 [shape=record,label="{9\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0015 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|0x0012: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Character\>) =  java.lang.Character.class \l}"];
Node_11 [shape=record,label="{11\:\ 0x0014|0x0014: RETURN  (r1 I:java.lang.Class\<?\>) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0015|0x0015: SGET  (r0 I:java.lang.Class) =  java.lang.Double.TYPE java.lang.Class \l}"];
Node_13 [shape=record,label="{13\:\ 0x0017|0x0017: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x001c \l}"];
Node_14 [shape=record,label="{14\:\ 0x0019|0x0019: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Double\>) =  java.lang.Double.class \l}"];
Node_15 [shape=record,label="{15\:\ 0x001b|0x001b: RETURN  (r1 I:java.lang.Class\<?\>) \l}"];
Node_16 [shape=record,label="{16\:\ 0x001c|0x001c: SGET  (r0 I:java.lang.Class) =  java.lang.Float.TYPE java.lang.Class \l}"];
Node_17 [shape=record,label="{17\:\ 0x001e|0x001e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0023 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0020|0x0020: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Float\>) =  java.lang.Float.class \l}"];
Node_19 [shape=record,label="{19\:\ 0x0022|0x0022: RETURN  (r1 I:java.lang.Class\<?\>) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0023|0x0023: SGET  (r0 I:java.lang.Class) =  java.lang.Integer.TYPE java.lang.Class \l}"];
Node_21 [shape=record,label="{21\:\ 0x0025|0x0025: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x002a \l}"];
Node_22 [shape=record,label="{22\:\ 0x0027|0x0027: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Integer\>) =  java.lang.Integer.class \l}"];
Node_23 [shape=record,label="{23\:\ 0x0029|0x0029: RETURN  (r1 I:java.lang.Class\<?\>) \l}"];
Node_24 [shape=record,label="{24\:\ 0x002a|0x002a: SGET  (r0 I:java.lang.Class) =  java.lang.Long.TYPE java.lang.Class \l}"];
Node_25 [shape=record,label="{25\:\ 0x002c|0x002c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0031 \l}"];
Node_26 [shape=record,label="{26\:\ 0x002e|0x002e: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Long\>) =  java.lang.Long.class \l}"];
Node_27 [shape=record,label="{27\:\ 0x0030|0x0030: RETURN  (r1 I:java.lang.Class\<?\>) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0031|0x0031: SGET  (r0 I:java.lang.Class) =  java.lang.Short.TYPE java.lang.Class \l}"];
Node_29 [shape=record,label="{29\:\ 0x0033|0x0033: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0038 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0035|0x0035: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Short\>) =  java.lang.Short.class \l}"];
Node_31 [shape=record,label="{31\:\ 0x0037|0x0037: RETURN  (r1 I:java.lang.Class\<?\>) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0038|0x0038: RETURN  (r1 I:java.lang.Class\<?\>) \l}"];
MethodNode[shape=record,label="{static java.lang.Class\<?\> retrofit2.ServiceMethod.boxIfPrimitive((r1 I:java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/Class\<, *\>;), Ljava\/lang\/Class\<, *\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
}

