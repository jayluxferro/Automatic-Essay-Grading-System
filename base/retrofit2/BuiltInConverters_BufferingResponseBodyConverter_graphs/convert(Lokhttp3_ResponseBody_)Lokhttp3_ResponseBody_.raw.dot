digraph "CFG forretrofit2.BuiltInConverters.BufferingResponseBodyConverter.convert(Lokhttp3\/ResponseBody;)Lokhttp3\/ResponseBody;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r0 I:okhttp3.ResponseBody) = (r2 I:okhttp3.ResponseBody) retrofit2.Utils.buffer(okhttp3.ResponseBody):okhttp3.ResponseBody type: STATIC A[Catch:\{ all \-\> 0x0008 \}, TRY_ENTER]\l0x0003: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r2 I:okhttp3.ResponseBody) okhttp3.ResponseBody.close():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: RETURN  (r0 I:okhttp3.ResponseBody) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|ExcHandler: all null\lSplitter:B:0:0x0000\l|0x0008: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: INVOKE  (r2 I:okhttp3.ResponseBody) okhttp3.ResponseBody.close():void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public okhttp3.ResponseBody retrofit2.BuiltInConverters.BufferingResponseBodyConverter.convert((r1 'this' I:retrofit2.BuiltInConverters$BufferingResponseBodyConverter A[IMMUTABLE_TYPE, THIS]), (r2 I:okhttp3.ResponseBody A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

