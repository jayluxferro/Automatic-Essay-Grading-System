digraph "CFG forretrofit2.DefaultCallAdapterFactory.get(Ljava\/lang\/reflect\/Type;[Ljava\/lang\/annotation\/Annotation;Lretrofit2\/Retrofit;)Lretrofit2\/CallAdapter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.Class) = (r1 I:java.lang.reflect.Type) retrofit2.DefaultCallAdapterFactory.getRawType(java.lang.reflect.Type):java.lang.Class type: STATIC \l0x0004: CONST_CLASS  (r3 I:java.lang.Class\<retrofit2.Call\>) =  retrofit2.Call.class \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: RETURN  (r1 I:retrofit2.CallAdapter\<?, ?\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r1 I:java.lang.reflect.Type) = (r1 I:java.lang.reflect.Type) retrofit2.Utils.getCallResponseType(java.lang.reflect.Type):java.lang.reflect.Type type: STATIC \l0x000e: NEW_INSTANCE  (r2 I:retrofit2.DefaultCallAdapterFactory$1) =  retrofit2.DefaultCallAdapterFactory$1 \l0x0010: INVOKE  \l  (r2 I:retrofit2.DefaultCallAdapterFactory$1)\l  (r0 I:retrofit2.DefaultCallAdapterFactory)\l  (r1 I:java.lang.reflect.Type)\l retrofit2.DefaultCallAdapterFactory.1.\<init\>(retrofit2.DefaultCallAdapterFactory, java.lang.reflect.Type):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: RETURN  (r2 I:retrofit2.CallAdapter\<?, ?\>) \l}"];
MethodNode[shape=record,label="{public retrofit2.CallAdapter\<?, ?\> retrofit2.DefaultCallAdapterFactory.get((r0 'this' I:retrofit2.DefaultCallAdapterFactory A[IMMUTABLE_TYPE, THIS]), (r1 I:java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.annotation.Annotation[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:retrofit2.Retrofit A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/reflect\/Type;, [, Ljava\/lang\/annotation\/Annotation;, Lretrofit2\/Retrofit;, ), Lretrofit2\/CallAdapter\<, **\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

