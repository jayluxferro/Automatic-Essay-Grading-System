digraph "CFG forretrofit2.ServiceMethod.Builder.validatePathName(ILjava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|if (retrofit2.ServiceMethod.PARAM_NAME_REGEX.matcher(r6).matches() == false) goto L_0x0027\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f}"];
Node_3 [shape=record,label="{3\:\ 0x0015|if (r4.relativeUrlParamNames.contains(r6) == false) goto L_0x0018\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|java.lang.Object[] r0 = new java.lang.Object[]\{r4.relativeUrl, r6\}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|throw parameterError(r5, \"URL \"%s\" does not contain \"\{%s\}\".\", r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|java.lang.Object[] r0 = new java.lang.Object[]\{retrofit2.ServiceMethod.PARAM_URL_REGEX.pattern(), r6\}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|throw parameterError(r5, \"@Path parameter name must match %s. Found: %s\", r0)\l}"];
MethodNode[shape=record,label="{private void retrofit2.ServiceMethod.Builder.validatePathName((r4v0 'this' retrofit2.ServiceMethod$Builder A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

