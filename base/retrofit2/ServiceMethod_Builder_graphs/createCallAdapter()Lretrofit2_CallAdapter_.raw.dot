digraph "CFG forretrofit2.ServiceMethod.Builder.createCallAdapter()Lretrofit2\/CallAdapter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.reflect.Method) = (r5 I:retrofit2.ServiceMethod$Builder) retrofit2.ServiceMethod.Builder.method java.lang.reflect.Method \l0x0002: INVOKE  (r0 I:java.lang.reflect.Type) = (r0 I:java.lang.reflect.Method) java.lang.reflect.Method.getGenericReturnType():java.lang.reflect.Type type: VIRTUAL \l0x0006: INVOKE  (r1 I:boolean) = (r0 I:java.lang.reflect.Type) retrofit2.Utils.hasUnresolvableType(java.lang.reflect.Type):boolean type: STATIC \l0x000a: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0034 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: SGET  (r1 I:java.lang.Class) =  java.lang.Void.TYPE java.lang.Class \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IGET  (r1 I:java.lang.reflect.Method) = (r5 I:retrofit2.ServiceMethod$Builder) retrofit2.ServiceMethod.Builder.method java.lang.reflect.Method \l0x0014: INVOKE  (r1 I:java.lang.annotation.Annotation[]) = (r1 I:java.lang.reflect.Method) java.lang.reflect.Method.getAnnotations():java.lang.annotation.Annotation[] type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|SYNTHETIC\lSplitter:B:5:0x0018\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0018\l|0x0018: IGET  (r4 I:retrofit2.Retrofit) = (r5 I:retrofit2.ServiceMethod$Builder) retrofit2.ServiceMethod.Builder.retrofit retrofit2.Retrofit A[Catch:\{ RuntimeException \-\> 0x001f \}, TRY_ENTER]\l0x001a: INVOKE  (r1 I:retrofit2.CallAdapter) = \l  (r4 I:retrofit2.Retrofit)\l  (r0 I:java.lang.reflect.Type)\l  (r1 I:java.lang.annotation.Annotation[])\l retrofit2.Retrofit.callAdapter(java.lang.reflect.Type, java.lang.annotation.Annotation[]):retrofit2.CallAdapter type: VIRTUAL A[Catch:\{ RuntimeException \-\> 0x001f \}]\l0x001d: NOP   A[TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: RETURN  (r1 I:retrofit2.CallAdapter\<T, R\>) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|ExcHandler: RuntimeException null\lSplitter:B:5:0x0018\l|0x001f: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0022: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l \l0x0024: CONST_STR  (r0 I:java.lang.String) =  \"Unable to create call adapter for %s\" \l0x0026: INVOKE  (r0 I:java.lang.RuntimeException) = \l  (r5 I:retrofit2.ServiceMethod$Builder)\l  (r1 I:java.lang.Throwable)\l  (r0 I:java.lang.String)\l  (r2 I:java.lang.Object[])\l retrofit2.ServiceMethod.Builder.methodError(java.lang.Throwable, java.lang.String, java.lang.Object[]):java.lang.RuntimeException type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x002d: CONST_STR  (r1 I:java.lang.String) =  \"Service methods cannot return void.\" \l0x002f: INVOKE  (r0 I:java.lang.RuntimeException) = \l  (r5 I:retrofit2.ServiceMethod$Builder)\l  (r1 I:java.lang.String)\l  (r0 I:java.lang.Object[])\l retrofit2.ServiceMethod.Builder.methodError(java.lang.String, java.lang.Object[]):java.lang.RuntimeException type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|0x0033: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|0x0034: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0036: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l \l0x0038: CONST_STR  (r0 I:java.lang.String) =  \"Method return type must not include a type variable or wildcard: %s\" \l0x003a: INVOKE  (r0 I:java.lang.RuntimeException) = \l  (r5 I:retrofit2.ServiceMethod$Builder)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Object[])\l retrofit2.ServiceMethod.Builder.methodError(java.lang.String, java.lang.Object[]):java.lang.RuntimeException type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|0x003e: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private retrofit2.CallAdapter\<T, R\> retrofit2.ServiceMethod.Builder.createCallAdapter((r5 'this' I:retrofit2.ServiceMethod$Builder A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Lretrofit2\/CallAdapter\<, TT;TR;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
}

