digraph "CFG forretrofit2.ParameterHandler.QueryMap.apply(Lretrofit2\/RequestBuilder;Ljava\/util\/Map;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 == null) goto L_0x008f\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|java.util.Iterator r5 = r5.entrySet().iterator()\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|LOOP_START\lLOOP:0: B:2:0x000a\-\>B:10:0x002e\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r5.hasNext() == false) goto L_0x008e\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|java.util.Map$Entry r0 = r5.next()\ljava.lang.String r1 = (java.lang.String) r0.getKey()\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|if (r1 == null) goto L_0x0086\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|java.lang.Object r0 = r0.getValue()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|if (r0 == null) goto L_0x006a\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|java.lang.String r2 = r3.valueConverter.convert(r0)\l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|if (r2 == null) goto L_0x0034\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|LOOP_END\lLOOP:0: B:2:0x000a\-\>B:10:0x002e\l|r4.addQueryParam(r1, r2, r3.encoded)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|java.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(\"Query map value '\")\lr5.append(r0)\lr5.append(\"' converted to null by \")\lr5.append(r3.valueConverter.getClass().getName())\lr5.append(\" for key '\")\lr5.append(r1)\lr5.append(\"'.\")\l}"];
Node_12 [shape=record,label="{12\:\ 0x0069|throw new java.lang.IllegalArgumentException(r5.toString())\l}"];
Node_13 [shape=record,label="{13\:\ 0x006a|java.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(\"Query map contained null value for key '\")\lr5.append(r1)\lr5.append(\"'.\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x0085|throw new java.lang.IllegalArgumentException(r5.toString())\l}"];
Node_15 [shape=record,label="{15\:\ 0x0086}"];
Node_16 [shape=record,label="{16\:\ 0x008d|throw new java.lang.IllegalArgumentException(\"Query map contained null key.\")\l}"];
Node_17 [shape=record,label="{17\:\ 0x008e|RETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ 0x008f}"];
Node_19 [shape=record,label="{19\:\ 0x0096|throw new java.lang.IllegalArgumentException(\"Query map was null.\")\l}"];
Node_20 [shape=record,label="{20\:\ 0x006a|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0034|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0086|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x008e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void retrofit2.ParameterHandler.QueryMap.apply((r3v0 'this' retrofit2.ParameterHandler$QueryMap A[IMMUTABLE_TYPE, THIS]), (r4v0 retrofit2.RequestBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.util.Map\<java.lang.String, T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lretrofit2\/RequestBuilder;, Ljava\/util\/Map\<, Ljava\/lang\/String;, TT;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_18;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_23;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_22;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_20;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_21;
Node_10 -> Node_2;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_18 -> Node_19;
Node_20 -> Node_13;
Node_21 -> Node_11;
Node_22 -> Node_15;
Node_23 -> Node_17;
}

