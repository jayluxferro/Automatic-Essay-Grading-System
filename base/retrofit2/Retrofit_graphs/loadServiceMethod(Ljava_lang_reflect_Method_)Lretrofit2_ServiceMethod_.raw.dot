digraph "CFG forretrofit2.Retrofit.loadServiceMethod(Ljava\/lang\/reflect\/Method;)Lretrofit2\/ServiceMethod;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Map\<java.lang.reflect.Method, retrofit2.ServiceMethod\<?, ?\>\>) = (r3 I:retrofit2.Retrofit) retrofit2.Retrofit.serviceMethodCache java.util.Map \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r4 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0006: CHECK_CAST  (r0 I:retrofit2.ServiceMethod) = (retrofit2.ServiceMethod) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: RETURN  (r0 I:retrofit2.ServiceMethod\<?, ?\>) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r0 I:java.util.Map\<java.lang.reflect.Method, retrofit2.ServiceMethod\<?, ?\>\>) = (r3 I:retrofit2.Retrofit) retrofit2.Retrofit.serviceMethodCache java.util.Map \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|SYNTHETIC\lSplitter:B:5:0x000e\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x000e\l|0x000e: IGET  (r1 I:java.util.Map\<java.lang.reflect.Method, retrofit2.ServiceMethod\<?, ?\>\>) = (r3 I:retrofit2.Retrofit) retrofit2.Retrofit.serviceMethodCache java.util.Map A[Catch:\{ all \-\> 0x0028 \}, TRY_ENTER]\l0x0010: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.Map), (r4 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0028 \}]\l0x0014: CHECK_CAST  (r1 I:retrofit2.ServiceMethod) = (retrofit2.ServiceMethod) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0028 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0026 A[Catch:\{ all \-\> 0x0028 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: NEW_INSTANCE  (r1 I:retrofit2.ServiceMethod$Builder) =  retrofit2.ServiceMethod$Builder A[Catch:\{ all \-\> 0x0028 \}]\l0x001a: INVOKE  \l  (r1 I:retrofit2.ServiceMethod$Builder)\l  (r3 I:retrofit2.Retrofit)\l  (r4 I:java.lang.reflect.Method)\l retrofit2.ServiceMethod.Builder.\<init\>(retrofit2.Retrofit, java.lang.reflect.Method):void type: DIRECT A[Catch:\{ all \-\> 0x0028 \}]\l0x001d: INVOKE  (r1 I:retrofit2.ServiceMethod) = (r1 I:retrofit2.ServiceMethod$Builder) retrofit2.ServiceMethod.Builder.build():retrofit2.ServiceMethod type: VIRTUAL A[Catch:\{ all \-\> 0x0028 \}]\l0x0021: IGET  (r2 I:java.util.Map\<java.lang.reflect.Method, retrofit2.ServiceMethod\<?, ?\>\>) = (r3 I:retrofit2.Retrofit) retrofit2.Retrofit.serviceMethodCache java.util.Map A[Catch:\{ all \-\> 0x0028 \}]\l0x0023: INVOKE  \l  (r2 I:java.util.Map)\l  (r4 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0028 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0028 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: RETURN  (r1 I:retrofit2.ServiceMethod\<?, ?\>) A[Catch:\{ all \-\> 0x0028 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|ExcHandler: all null\lSplitter:B:5:0x000e\l|0x0028: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0028 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0028 \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|0x002a: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{retrofit2.ServiceMethod\<?, ?\> retrofit2.Retrofit.loadServiceMethod((r3 'this' I:retrofit2.Retrofit A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.reflect.Method A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/reflect\/Method;, ), Lretrofit2\/ServiceMethod\<, **\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

