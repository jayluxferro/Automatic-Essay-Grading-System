digraph "CFG forretrofit2.Retrofit.create(Ljava\/lang\/Class;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:java.lang.Class) retrofit2.Utils.validateServiceInterface(java.lang.Class):void type: STATIC \l0x0003: IGET  (r0 I:boolean) = (r3 I:retrofit2.Retrofit) retrofit2.Retrofit.validateEagerly boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r3 I:retrofit2.Retrofit), (r4 I:java.lang.Class) retrofit2.Retrofit.eagerlyValidateMethods(java.lang.Class):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: INVOKE  (r0 I:java.lang.ClassLoader) = (r4 I:java.lang.Class) java.lang.Class.getClassLoader():java.lang.ClassLoader type: VIRTUAL \l0x000e: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000f: NEW_ARRAY  (r1 I:java.lang.Class[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] \l0x0011: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x0014: NEW_INSTANCE  (r2 I:retrofit2.Retrofit$1) =  retrofit2.Retrofit$1 \l0x0016: INVOKE  \l  (r2 I:retrofit2.Retrofit$1)\l  (r3 I:retrofit2.Retrofit)\l  (r4 I:java.lang.Class)\l retrofit2.Retrofit.1.\<init\>(retrofit2.Retrofit, java.lang.Class):void type: DIRECT \l0x0019: INVOKE  (r4 I:java.lang.Object) = \l  (r0 I:java.lang.ClassLoader)\l  (r1 I:java.lang.Class[])\l  (r2 I:java.lang.reflect.InvocationHandler)\l java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader, java.lang.Class[], java.lang.reflect.InvocationHandler):java.lang.Object type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: RETURN  (r4 I:T) \l}"];
MethodNode[shape=record,label="{public T retrofit2.Retrofit.create((r3 'this' I:retrofit2.Retrofit A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.Class\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Class\<, TT;\>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

