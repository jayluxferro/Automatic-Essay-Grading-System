digraph "CFG forretrofit2.Retrofit.requestBodyConverter(Ljava\/lang\/reflect\/Type;[Ljava\/lang\/annotation\/Annotation;[Ljava\/lang\/annotation\/Annotation;)Lretrofit2\/Converter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r2 I:retrofit2.Converter) = \l  (r1 I:retrofit2.Retrofit)\l  (r0 I:retrofit2.Converter$Factory)\l  (r2 I:java.lang.reflect.Type)\l  (r3 I:java.lang.annotation.Annotation[])\l  (r4 I:java.lang.annotation.Annotation[])\l retrofit2.Retrofit.nextRequestBodyConverter(retrofit2.Converter$Factory, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.annotation.Annotation[]):retrofit2.Converter type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: RETURN  (r2 I:retrofit2.Converter\<T, okhttp3.RequestBody\>) \l}"];
MethodNode[shape=record,label="{public retrofit2.Converter\<T, okhttp3.RequestBody\> retrofit2.Retrofit.requestBodyConverter((r1 'this' I:retrofit2.Retrofit A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.annotation.Annotation[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.annotation.Annotation[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/reflect\/Type;, [, Ljava\/lang\/annotation\/Annotation;, [, Ljava\/lang\/annotation\/Annotation;, ), Lretrofit2\/Converter\<, TT;, Lokhttp3\/RequestBody;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

