digraph "CFG forretrofit2.ParameterHandler.PartMap.apply(Lretrofit2\/RequestBuilder;Ljava\/util\/Map;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0084 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r8 I:java.util.Set) = (r8 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x0006: INVOKE  (r8 I:java.util.Iterator) = (r8 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  (r0 I:boolean) = (r8 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0083 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: INVOKE  (r0 I:java.lang.Object) = (r8 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0014: CHECK_CAST  (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:?[OBJECT, ARRAY]) \l0x0016: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x001a: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x007b \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x005f \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0025: NEW_ARRAY  (r2 I:java.lang.String[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x0027: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0028: CONST_STR  (r4 I:java.lang.String) =  \"Content\-Disposition\" \l0x002a: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x002c: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x002d: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002f: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0032: CONST_STR  (r5 I:java.lang.String) =  \"form\-data; name=\"\" \l0x0034: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0037: INVOKE  (r4 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003a: CONST_STR  (r1 I:java.lang.String) =  \"\"\" \l0x003c: INVOKE  (r4 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003f: INVOKE  (r1 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0043: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0045: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0046: CONST_STR  (r3 I:java.lang.String) =  \"Content\-Transfer\-Encoding\" \l0x0048: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x004a: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x004b: IGET  (r3 I:java.lang.String) = (r6 I:retrofit2.ParameterHandler$PartMap) retrofit2.ParameterHandler.PartMap.transferEncoding java.lang.String \l0x004d: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x004f: INVOKE  (r1 I:okhttp3.Headers) = (r2 I:java.lang.String[]) okhttp3.Headers.of(java.lang.String[]):okhttp3.Headers type: STATIC \l0x0053: IGET  (r2 I:retrofit2.Converter\<T, okhttp3.RequestBody\>) = (r6 I:retrofit2.ParameterHandler$PartMap) retrofit2.ParameterHandler.PartMap.valueConverter retrofit2.Converter \l0x0055: INVOKE  (r0 I:java.lang.Object) = (r2 I:retrofit2.Converter), (r0 I:java.lang.Object) retrofit2.Converter.convert(java.lang.Object):java.lang.Object type: INTERFACE \l0x0059: CHECK_CAST  (r0 I:okhttp3.RequestBody) = (okhttp3.RequestBody) (r0 I:?[OBJECT, ARRAY]) \l0x005b: INVOKE  \l  (r7 I:retrofit2.RequestBuilder)\l  (r1 I:okhttp3.Headers)\l  (r0 I:okhttp3.RequestBody)\l retrofit2.RequestBuilder.addPart(okhttp3.Headers, okhttp3.RequestBody):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x005f|0x005f: NEW_INSTANCE  (r7 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0061: NEW_INSTANCE  (r8 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0063: INVOKE  (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0066: CONST_STR  (r0 I:java.lang.String) =  \"Part map contained null value for key '\" \l0x0068: INVOKE  (r8 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006b: INVOKE  (r8 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006e: CONST_STR  (r0 I:java.lang.String) =  \"'.\" \l0x0070: INVOKE  (r8 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0073: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0077: INVOKE  \l  (r7 I:java.lang.IllegalArgumentException)\l  (r8 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x007a|0x007a: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x007b|0x007b: NEW_INSTANCE  (r7 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x007d: CONST_STR  (r8 I:java.lang.String) =  \"Part map contained null key.\" \l0x007f: INVOKE  \l  (r7 I:java.lang.IllegalArgumentException)\l  (r8 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0082|0x0082: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0083|0x0083: RETURN   \l}"];
Node_14 [shape=record,label="{14\:\ 0x0084|0x0084: NEW_INSTANCE  (r7 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0086: CONST_STR  (r8 I:java.lang.String) =  \"Part map was null.\" \l0x0088: INVOKE  \l  (r7 I:java.lang.IllegalArgumentException)\l  (r8 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x008b|0x008b: THROW  (r7 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{void retrofit2.ParameterHandler.PartMap.apply((r6 'this' I:retrofit2.ParameterHandler$PartMap A[IMMUTABLE_TYPE, THIS]), (r7 I:retrofit2.RequestBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.util.Map\<java.lang.String, T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lretrofit2\/RequestBuilder;, Ljava\/util\/Map\<, Ljava\/lang\/String;, TT;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_14;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_2;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_14 -> Node_15;
}

