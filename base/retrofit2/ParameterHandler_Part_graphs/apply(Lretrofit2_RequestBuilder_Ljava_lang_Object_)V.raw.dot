digraph "CFG forretrofit2.ParameterHandler.Part.apply(Lretrofit2\/RequestBuilder;Ljava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0003 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: RETURN   \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: IGET  (r0 I:retrofit2.Converter\<T, okhttp3.RequestBody\>) = (r3 I:retrofit2.ParameterHandler$Part) retrofit2.ParameterHandler.Part.converter retrofit2.Converter A[Catch:\{ IOException \-\> 0x0011 \}, TRY_ENTER]\l0x0005: INVOKE  (r0 I:java.lang.Object) = (r0 I:retrofit2.Converter), (r5 I:java.lang.Object) retrofit2.Converter.convert(java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ IOException \-\> 0x0011 \}]\l0x0009: CHECK_CAST  (r0 I:okhttp3.RequestBody) = (okhttp3.RequestBody) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x0011 \}, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IGET  (r5 I:okhttp3.Headers) = (r3 I:retrofit2.ParameterHandler$Part) retrofit2.ParameterHandler.Part.headers okhttp3.Headers \l0x000d: INVOKE  \l  (r4 I:retrofit2.RequestBuilder)\l  (r5 I:okhttp3.Headers)\l  (r0 I:okhttp3.RequestBody)\l retrofit2.RequestBuilder.addPart(okhttp3.Headers, okhttp3.RequestBody):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|ExcHandler: IOException null\lSplitter:B:2:0x0003\l|0x0011: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0014: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0016: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0019: CONST_STR  (r2 I:java.lang.String) =  \"Unable to convert \" \l0x001b: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001e: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0021: CONST_STR  (r5 I:java.lang.String) =  \" to RequestBody\" \l0x0023: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0026: INVOKE  (r5 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002a: INVOKE  \l  (r0 I:java.lang.RuntimeException)\l  (r5 I:java.lang.String)\l  (r4 I:java.lang.Throwable)\l java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{void retrofit2.ParameterHandler.Part.apply((r3 'this' I:retrofit2.ParameterHandler$Part A[IMMUTABLE_TYPE, THIS]), (r4 I:retrofit2.RequestBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lretrofit2\/RequestBuilder;, TT;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

