digraph "CFG forretrofit2.Platform.Java8.invokeDefaultMethod(Ljava\/lang\/reflect\/Method;Ljava\/lang\/Class;Ljava\/lang\/Object;[Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_CLASS  (r0 I:java.lang.Class\<java.lang.invoke.MethodHandles$Lookup\>) =  java.lang.invoke.MethodHandles$Lookup.class \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0003: NEW_ARRAY  (r2 I:java.lang.Class[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] \l0x0005: CONST_CLASS  (r3 I:java.lang.Class\<java.lang.Class\>) =  java.lang.Class.class \l0x0007: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x000a: SGET  (r3 I:java.lang.Class) =  java.lang.Integer.TYPE java.lang.Class \l0x000c: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x000f: INVOKE  (r0 I:java.lang.reflect.Constructor) = (r0 I:java.lang.Class), (r2 I:java.lang.Class[]) java.lang.Class.getDeclaredConstructor(java.lang.Class[]):java.lang.reflect.Constructor type: VIRTUAL \l0x0013: INVOKE  (r0 I:java.lang.reflect.Constructor), (r5 I:boolean) java.lang.reflect.Constructor.setAccessible(boolean):void type: VIRTUAL \l0x0016: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0018: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r8 I:?[OBJECT, ARRAY])\l \l0x001a: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x001b: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x001f: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0021: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Constructor)\l  (r1 I:java.lang.Object[])\l java.lang.reflect.Constructor.newInstance(java.lang.Object[]):java.lang.Object type: VIRTUAL \l0x0025: CHECK_CAST  (r0 I:java.lang.invoke.MethodHandles$Lookup) = (java.lang.invoke.MethodHandles$Lookup) (r0 I:?[OBJECT, ARRAY]) \l0x0027: INVOKE  (r7 I:java.lang.invoke.MethodHandle) = \l  (r0 I:java.lang.invoke.MethodHandles$Lookup)\l  (r7 I:java.lang.reflect.Method)\l  (r8 I:java.lang.Class)\l java.lang.invoke.MethodHandles.Lookup.unreflectSpecial(java.lang.reflect.Method, java.lang.Class):java.lang.invoke.MethodHandle type: VIRTUAL \l0x002b: INVOKE  (r7 I:java.lang.invoke.MethodHandle) = \l  (r7 I:java.lang.invoke.MethodHandle)\l  (r9 I:java.lang.Object)\l java.lang.invoke.MethodHandle.bindTo(java.lang.Object):java.lang.invoke.MethodHandle type: VIRTUAL \l0x002f: INVOKE  (r7 I:java.lang.Object) = \l  (r7 I:java.lang.invoke.MethodHandle)\l  (r10 I:java.lang.Object[])\l java.lang.invoke.MethodHandle.invokeWithArguments(java.lang.Object[]):java.lang.Object type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0033|0x0033: RETURN  (r7 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{java.lang.Object retrofit2.Platform.Java8.invokeDefaultMethod((r6 'this' I:retrofit2.Platform$Java8 A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.reflect.Method A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , , , Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Throwable]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/reflect\/Method;, Ljava\/lang\/Class\<, *\>;, Ljava\/lang\/Object;, [, Ljava\/lang\/Object;, ), Ljava\/lang\/Object;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

