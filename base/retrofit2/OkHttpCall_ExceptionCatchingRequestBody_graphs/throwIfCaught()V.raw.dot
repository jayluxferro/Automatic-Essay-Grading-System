digraph "CFG forretrofit2.OkHttpCall.ExceptionCatchingRequestBody.throwIfCaught()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.io.IOException) = (r1 I:retrofit2.OkHttpCall$ExceptionCatchingRequestBody) retrofit2.OkHttpCall.ExceptionCatchingRequestBody.thrownException java.io.IOException \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IGET  (r0 I:java.io.IOException) = (r1 I:retrofit2.OkHttpCall$ExceptionCatchingRequestBody) retrofit2.OkHttpCall.ExceptionCatchingRequestBody.thrownException java.io.IOException \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{void retrofit2.OkHttpCall.ExceptionCatchingRequestBody.throwIfCaught((r1 'this' I:retrofit2.OkHttpCall$ExceptionCatchingRequestBody A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

