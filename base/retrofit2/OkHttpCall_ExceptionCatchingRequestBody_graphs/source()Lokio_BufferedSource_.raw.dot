digraph "CFG forretrofit2.OkHttpCall.ExceptionCatchingRequestBody.source()Lokio\/BufferedSource;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:retrofit2.OkHttpCall$ExceptionCatchingRequestBody$1) =  retrofit2.OkHttpCall$ExceptionCatchingRequestBody$1 \l0x0002: IGET  (r1 I:okhttp3.ResponseBody) = (r2 I:retrofit2.OkHttpCall$ExceptionCatchingRequestBody) retrofit2.OkHttpCall.ExceptionCatchingRequestBody.delegate okhttp3.ResponseBody \l0x0004: INVOKE  (r1 I:okio.BufferedSource) = (r1 I:okhttp3.ResponseBody) okhttp3.ResponseBody.source():okio.BufferedSource type: VIRTUAL \l0x0008: INVOKE  \l  (r0 I:retrofit2.OkHttpCall$ExceptionCatchingRequestBody$1)\l  (r2 I:retrofit2.OkHttpCall$ExceptionCatchingRequestBody)\l  (r1 I:okio.Source)\l retrofit2.OkHttpCall.ExceptionCatchingRequestBody.1.\<init\>(retrofit2.OkHttpCall$ExceptionCatchingRequestBody, okio.Source):void type: DIRECT \l0x000b: INVOKE  (r0 I:okio.BufferedSource) = (r0 I:okio.Source) okio.Okio.buffer(okio.Source):okio.BufferedSource type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN  (r0 I:okio.BufferedSource) \l}"];
MethodNode[shape=record,label="{public okio.BufferedSource retrofit2.OkHttpCall.ExceptionCatchingRequestBody.source((r2 'this' I:retrofit2.OkHttpCall$ExceptionCatchingRequestBody A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

