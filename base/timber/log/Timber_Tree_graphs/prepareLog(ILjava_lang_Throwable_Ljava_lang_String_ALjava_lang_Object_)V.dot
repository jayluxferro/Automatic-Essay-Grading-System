digraph "CFG fortimber.log.Timber.Tree.prepareLog(ILjava\/lang\/Throwable;Ljava\/lang\/String;[Ljava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r0 = getTag()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (isLoggable(r0, r3) != false) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r5 == null) goto L_0x0014\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d}"];
Node_5 [shape=record,label="{5\:\ 0x0011|if (r5.length() != 0) goto L_0x0014\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|r5 = null\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|PHI: r5 \l  PHI: (r5v1 java.lang.String) = (r5v0 java.lang.String), (r5v0 java.lang.String), (r5v9 java.lang.String) binds: [B:3:0x000b, B:5:0x0011, B:6:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 != null) goto L_0x001e\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|if (r4 != null) goto L_0x0019\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|java.lang.String r5 = getStackTraceString(r4)\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|if (r6 == null) goto L_0x0027\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020}"];
Node_13 [shape=record,label="{13\:\ 0x0021|if (r6.length \<= 0) goto L_0x0027\l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|java.lang.String r5 = formatMessage(r5, r6)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0027|PHI: r5 \l  PHI: (r5v3 java.lang.String) = (r5v1 java.lang.String), (r5v1 java.lang.String), (r5v7 java.lang.String) binds: [B:11:0x001e, B:13:0x0021, B:14:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == null) goto L_0x0041\l}"];
Node_16 [shape=record,label="{16\:\ 0x0029|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(r5)\lr6.append(\"n\")\lr6.append(getStackTraceString(r4))\ljava.lang.String r5 = r6.toString()\l}"];
Node_17 [shape=record,label="{17\:\ 0x0041|PHI: r5 \l  PHI: (r5v2 java.lang.String) = (r5v3 java.lang.String), (r5v6 java.lang.String), (r5v8 java.lang.String) binds: [B:15:0x0027, B:16:0x0029, B:10:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|log(r3, r0, r5, r4)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0044|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void timber.log.Timber.Tree.prepareLog((r2v0 'this' timber.log.Timber$Tree A[IMMUTABLE_TYPE, THIS]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Throwable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_10 -> Node_17;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

