digraph "CFG fortimber.log.Timber.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: NEW_ARRAY  (r0 I:timber.log.Timber$Tree[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: timber.log.Timber$Tree[] \l0x0003: SPUT  (r0 I:timber.log.Timber$Tree[]) timber.log.Timber.TREE_ARRAY_EMPTY timber.log.Timber$Tree[] \l0x0005: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0007: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x000a: SPUT  (r0 I:java.util.List\<timber.log.Timber$Tree\>) timber.log.Timber.FOREST java.util.List \l0x000c: SGET  (r0 I:timber.log.Timber$Tree[]) =  timber.log.Timber.TREE_ARRAY_EMPTY timber.log.Timber$Tree[] \l0x000e: SPUT  (r0 I:timber.log.Timber$Tree[]) timber.log.Timber.forestAsArray timber.log.Timber$Tree[] \l0x0010: NEW_INSTANCE  (r0 I:timber.log.Timber$1) =  timber.log.Timber$1 \l0x0012: INVOKE  (r0 I:timber.log.Timber$1) timber.log.Timber.1.\<init\>():void type: DIRECT \l0x0015: SPUT  (r0 I:timber.log.Timber$Tree) timber.log.Timber.TREE_OF_SOULS timber.log.Timber$Tree \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: RETURN   \l}"];
MethodNode[shape=record,label="{static void timber.log.Timber.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

