digraph "CFG fortimber.log.Timber.uproot(Ltimber\/log\/Timber$Tree;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.List\<timber.log.Timber$Tree\> r0 = FOREST\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|monitor\-enter(r0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?}"];
Node_4 [shape=record,label="{4\:\ 0x0009|if (FOREST.remove(r4) == false) goto L_0x001f\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|forestAsArray = (timber.log.Timber.Tree[]) FOREST.toArray(new timber.log.Timber.Tree[FOREST.size()])\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|monitor\-exit(r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|java.lang.StringBuilder r2 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr2.append(\"Cannot uproot tree which is not planted: \")\lr2.append(r4)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|throw new java.lang.IllegalArgumentException(r2.toString())\l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|REMOVE\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|REMOVE\l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|REMOVE\l|throw r4\l}"];
MethodNode[shape=record,label="{public static void timber.log.Timber.uproot((r4v0 timber.log.Timber$Tree A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

