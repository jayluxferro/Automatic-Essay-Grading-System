digraph "CFG forandroidx.versionedparcelable.VersionedParcel.writeSparseBooleanArray(Landroid\/util\/SparseBooleanArray;I)V" {
subgraph cluster_Region_898039963 {
label = "R(2:0|(2:(2:2|3)|(2:4|(1:6))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|setOutputField(r4)\l}"];
subgraph cluster_Region_1537766721 {
label = "R(2:(2:2|3)|(2:4|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2110531445 {
label = "IF [B:1:0x0003] THEN: R(2:2|3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r3 == null) goto L_0x0005\l}"];
subgraph cluster_Region_1381821123 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|writeInt(\-1)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_605638455 {
label = "R(2:4|(1:6))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|int int r4 = r3.size()\lwriteInt(r4)\lint r0 = 0\l}"];
subgraph cluster_LoopRegion_480862633 {
label = "LOOP:0: (1:6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:4:0x000a, B:6:0x0014] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0012\-\>B:6:0x0014\l|if (r0 \< r4) goto L_0x0014\l}"];
subgraph cluster_Region_775663579 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0014|LOOP_END\lLOOP:0: B:5:0x0012\-\>B:6:0x0014\l|writeInt(r3.keyAt(r0))\lwriteBoolean(r3.valueAt(r0))\lr0++\l}"];
}
}
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ 0x0025}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0025|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.versionedparcelable.VersionedParcel.writeSparseBooleanArray((r2v0 'this' androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS]), (r3v0 android.util.SparseBooleanArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_6 -> Node_5;
Node_8 -> Node_7;
}

