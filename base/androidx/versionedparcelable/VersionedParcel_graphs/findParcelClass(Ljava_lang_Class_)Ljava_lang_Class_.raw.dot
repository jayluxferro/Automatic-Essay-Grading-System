digraph "CFG forandroidx.versionedparcelable.VersionedParcel.findParcelClass(Ljava\/lang\/Class;)Ljava\/lang\/Class;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Package) = (r5 I:java.lang.Class) java.lang.Class.getPackage():java.lang.Package type: VIRTUAL \l0x0004: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Package) java.lang.Package.getName():java.lang.String type: VIRTUAL \l0x0008: CONST_STR  (r1 I:java.lang.String) =  \"%s.%sParcelizer\" \l0x000a: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000b: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x000d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l \l0x0010: INVOKE  (r0 I:java.lang.String) = (r5 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x0014: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0015: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l \l0x0017: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.String), (r2 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x001b: INVOKE  (r5 I:java.lang.ClassLoader) = (r5 I:java.lang.Class) java.lang.Class.getClassLoader():java.lang.ClassLoader type: VIRTUAL \l0x001f: INVOKE  (r5 I:java.lang.Class) = \l  (r0 I:java.lang.String)\l  (r3 I:boolean)\l  (r5 I:java.lang.ClassLoader)\l java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader):java.lang.Class type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0023|0x0023: RETURN  (r5 I:java.lang.Class) \l}"];
MethodNode[shape=record,label="{private static java.lang.Class androidx.versionedparcelable.VersionedParcel.findParcelClass((r5 I:java.lang.Class\<? extends androidx.versionedparcelable.VersionedParcelable\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.ClassNotFoundException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/Class\<, +, Landroidx\/versionedparcelable\/VersionedParcelable;, \>;), Ljava\/lang\/Class;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

