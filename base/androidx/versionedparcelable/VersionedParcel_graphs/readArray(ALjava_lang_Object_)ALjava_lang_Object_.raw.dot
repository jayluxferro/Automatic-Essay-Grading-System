digraph "CFG forandroidx.versionedparcelable.VersionedParcel.readArray([Ljava\/lang\/Object;)[Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r4 I:androidx.versionedparcelable.VersionedParcel) androidx.versionedparcelable.VersionedParcel.readInt():int type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r1 I:T[]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x000a: INVOKE  (r2 I:java.util.ArrayList), (r0 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0056 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: INVOKE  (r3 I:int) = (r4 I:androidx.versionedparcelable.VersionedParcel) androidx.versionedparcelable.VersionedParcel.readInt():int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:8:0x0016 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: RETURN  (r1 I:T[]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5] t:[0x004a, 0x003e, 0x0032, 0x0026, 0x001a] \l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:20:0x0056 \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: INVOKE  (r1 I:android.os.IBinder) = (r4 I:androidx.versionedparcelable.VersionedParcel) androidx.versionedparcelable.VersionedParcel.readStrongBinder():android.os.IBinder type: VIRTUAL \l0x0020: INVOKE  (r2 I:java.util.ArrayList), (r1 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x0023: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|0x0026: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:20:0x0056 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|0x0028: INVOKE  (r1 I:java.lang.String) = (r4 I:androidx.versionedparcelable.VersionedParcel) androidx.versionedparcelable.VersionedParcel.readString():java.lang.String type: VIRTUAL \l0x002c: INVOKE  (r2 I:java.util.ArrayList), (r1 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x002f: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:20:0x0056 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|0x0034: INVOKE  (r1 I:java.io.Serializable) = (r4 I:androidx.versionedparcelable.VersionedParcel) androidx.versionedparcelable.VersionedParcel.readSerializable():java.io.Serializable type: VIRTUAL \l0x0038: INVOKE  (r2 I:java.util.ArrayList), (r1 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x003b: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|0x003e: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:20:0x0056 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0040|0x0040: INVOKE  (r1 I:android.os.Parcelable) = (r4 I:androidx.versionedparcelable.VersionedParcel) androidx.versionedparcelable.VersionedParcel.readParcelable():android.os.Parcelable type: VIRTUAL \l0x0044: INVOKE  (r2 I:java.util.ArrayList), (r1 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x0047: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|0x004a: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:20:0x0056 \l}"];
Node_19 [shape=record,label="{19\:\ 0x004c|0x004c: INVOKE  (r1 I:androidx.versionedparcelable.VersionedParcelable) = (r4 I:androidx.versionedparcelable.VersionedParcel) androidx.versionedparcelable.VersionedParcel.readVersionedParcelable():androidx.versionedparcelable.VersionedParcelable type: VIRTUAL \l0x0050: INVOKE  (r2 I:java.util.ArrayList), (r1 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x0053: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0056|0x0056: INVOKE  (r5 I:java.lang.Object[]) = (r2 I:java.util.ArrayList), (r5 I:java.lang.Object[]) java.util.ArrayList.toArray(java.lang.Object[]):java.lang.Object[] type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x005a|0x005a: RETURN  (r5 I:T[]) \l}"];
MethodNode[shape=record,label="{protected T[] androidx.versionedparcelable.VersionedParcel.readArray((r4 'this' I:androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS]), (r5 I:T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>([TT;)[TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_20;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_12;
Node_8 -> Node_14;
Node_8 -> Node_16;
Node_8 -> Node_18;
Node_8 -> Node_20;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_20;
Node_11 -> Node_10;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_20;
Node_13 -> Node_12;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_14;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_16;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_18;
Node_20 -> Node_21;
}

