digraph "CFG forandroidx.versionedparcelable.VersionedParcel.readFloatArray()[F" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r4 I:androidx.versionedparcelable.VersionedParcel) androidx.versionedparcelable.VersionedParcel.readInt():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:4:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: RETURN  (r0 I:float[]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: NEW_ARRAY  (r1 I:float[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x000a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:7:0x0016 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: INVOKE  (r3 I:float) = (r4 I:androidx.versionedparcelable.VersionedParcel) androidx.versionedparcelable.VersionedParcel.readFloat():float type: VIRTUAL \l0x0011: APUT  \l  (r1 I:?[int, float][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x0013: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: RETURN  (r1 I:float[]) \l}"];
MethodNode[shape=record,label="{protected float[] androidx.versionedparcelable.VersionedParcel.readFloatArray((r4 'this' I:androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_5;
}

