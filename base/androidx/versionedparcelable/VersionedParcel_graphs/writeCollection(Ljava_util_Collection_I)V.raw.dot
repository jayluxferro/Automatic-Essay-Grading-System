digraph "CFG forandroidx.versionedparcelable.VersionedParcel.writeCollection(Ljava\/util\/Collection;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r0 I:androidx.versionedparcelable.VersionedParcel)\l  (r2 I:int)\l androidx.versionedparcelable.VersionedParcel.setOutputField(int):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0006: INVOKE  \l  (r0 I:androidx.versionedparcelable.VersionedParcel)\l  (r1 I:int)\l androidx.versionedparcelable.VersionedParcel.writeInt(int):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r2 I:int) = (r1 I:java.util.Collection) java.util.Collection.size():int type: INTERFACE \l0x000e: INVOKE  \l  (r0 I:androidx.versionedparcelable.VersionedParcel)\l  (r2 I:int)\l androidx.versionedparcelable.VersionedParcel.writeInt(int):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:29:0x008a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: INVOKE  (r2 I:java.util.Iterator) = (r1 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE \l0x0017: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x001b: INVOKE  (r2 I:int) = \l  (r0 I:androidx.versionedparcelable.VersionedParcel)\l  (r2 I:java.lang.Object)\l androidx.versionedparcelable.VersionedParcel.getType(java.lang.Object):int type: DIRECT \l0x001f: INVOKE  \l  (r0 I:androidx.versionedparcelable.VersionedParcel)\l  (r2 I:int)\l androidx.versionedparcelable.VersionedParcel.writeInt(int):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5] t:[0x0076, 0x0062, 0x004e, 0x003a, 0x0026] \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x008a \l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0034: CHECK_CAST  (r2 I:android.os.IBinder) = (android.os.IBinder) (r2 I:?[OBJECT, ARRAY]) \l0x0036: INVOKE  \l  (r0 I:androidx.versionedparcelable.VersionedParcel)\l  (r2 I:android.os.IBinder)\l androidx.versionedparcelable.VersionedParcel.writeStrongBinder(android.os.IBinder):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|0x003a: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|0x003e: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|0x0042: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x008a \l}"];
Node_16 [shape=record,label="{16\:\ 0x0044|0x0044: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0048: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x004a: INVOKE  \l  (r0 I:androidx.versionedparcelable.VersionedParcel)\l  (r2 I:java.lang.String)\l androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String):void type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x004e|0x004e: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x0052|0x0052: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_19 [shape=record,label="{19\:\ 0x0056|0x0056: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x008a \l}"];
Node_20 [shape=record,label="{20\:\ 0x0058|0x0058: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x005c: CHECK_CAST  (r2 I:java.io.Serializable) = (java.io.Serializable) (r2 I:?[OBJECT, ARRAY]) \l0x005e: INVOKE  \l  (r0 I:androidx.versionedparcelable.VersionedParcel)\l  (r2 I:java.io.Serializable)\l androidx.versionedparcelable.VersionedParcel.writeSerializable(java.io.Serializable):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x0062|0x0062: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x0066|0x0066: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_23 [shape=record,label="{23\:\ 0x006a|0x006a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x008a \l}"];
Node_24 [shape=record,label="{24\:\ 0x006c|0x006c: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0070: CHECK_CAST  (r2 I:android.os.Parcelable) = (android.os.Parcelable) (r2 I:?[OBJECT, ARRAY]) \l0x0072: INVOKE  \l  (r0 I:androidx.versionedparcelable.VersionedParcel)\l  (r2 I:android.os.Parcelable)\l androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable):void type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x0076|0x0076: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_26 [shape=record,label="{26\:\ 0x007a|0x007a: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_27 [shape=record,label="{27\:\ 0x007e|0x007e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x008a \l}"];
Node_28 [shape=record,label="{28\:\ 0x0080|0x0080: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0084: CHECK_CAST  (r2 I:androidx.versionedparcelable.VersionedParcelable) = (androidx.versionedparcelable.VersionedParcelable) (r2 I:?[OBJECT, ARRAY]) \l0x0086: INVOKE  \l  (r0 I:androidx.versionedparcelable.VersionedParcel)\l  (r2 I:androidx.versionedparcelable.VersionedParcelable)\l androidx.versionedparcelable.VersionedParcel.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):void type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x008a|0x008a: RETURN   \l}"];
MethodNode[shape=record,label="{private void androidx.versionedparcelable.VersionedParcel.writeCollection((r0 'this' I:androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS]), (r1 I:java.util.Collection\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/util\/Collection\<, TT;\>;I)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_29;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_13;
Node_7 -> Node_17;
Node_7 -> Node_21;
Node_7 -> Node_25;
Node_7 -> Node_29;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_29;
Node_12 -> Node_10;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_29;
Node_16 -> Node_14;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_29;
Node_20 -> Node_18;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_22;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_26;
}

