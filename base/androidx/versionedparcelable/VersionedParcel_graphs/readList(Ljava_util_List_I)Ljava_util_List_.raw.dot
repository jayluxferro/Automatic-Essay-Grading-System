digraph "CFG forandroidx.versionedparcelable.VersionedParcel.readList(Ljava\/util\/List;I)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r1 I:androidx.versionedparcelable.VersionedParcel)\l  (r3 I:int)\l androidx.versionedparcelable.VersionedParcel.readField(int):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN  (r2 I:java.util.List\<T\>) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x0009: INVOKE  (r2 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x000c: INVOKE  (r2 I:java.util.Collection) = \l  (r1 I:androidx.versionedparcelable.VersionedParcel)\l  (r3 I:int)\l  (r2 I:java.util.Collection)\l androidx.versionedparcelable.VersionedParcel.readCollection(int, java.util.Collection):java.util.Collection type: DIRECT \l0x0010: CHECK_CAST  (r2 I:java.util.List) = (java.util.List) (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: RETURN  (r2 I:java.util.List\<T\>) \l}"];
MethodNode[shape=record,label="{public java.util.List\<T\> androidx.versionedparcelable.VersionedParcel.readList((r1 'this' I:androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS]), (r2 I:java.util.List\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/util\/List\<, TT;\>;I), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

