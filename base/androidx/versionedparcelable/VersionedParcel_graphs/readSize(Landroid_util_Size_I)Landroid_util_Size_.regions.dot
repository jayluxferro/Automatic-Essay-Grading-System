digraph "CFG forandroidx.versionedparcelable.VersionedParcel.readSize(Landroid\/util\/Size;I)Landroid\/util\/Size;" {
subgraph cluster_Region_558581183 {
label = "R(1:(2:(1:2)|(1:(2:(1:6)|(1:7)))))";
node [shape=record,color=blue];
subgraph cluster_Region_555179514 {
label = "R(2:(1:2)|(1:(2:(1:6)|(1:7))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1418786619 {
label = "IF [B:1:0x0004] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (readField(r3) == false) goto L_0x0006\l}"];
subgraph cluster_Region_115331500 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_2101484149 {
label = "R(1:(2:(1:6)|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_1713463466 {
label = "R(2:(1:6)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_903576186 {
label = "IF [B:4:0x000b] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|if (readBoolean() == true) goto L_0x000d\l}"];
subgraph cluster_Region_1307680732 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001a|RETURN\l|return new android.util.Size(readInt(), readInt())\l}"];
}
}
subgraph cluster_Region_537769381 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001b|RETURN\l|return null\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0007}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000d}"];
MethodNode[shape=record,label="{public android.util.Size androidx.versionedparcelable.VersionedParcel.readSize((r1v0 'this' androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS]), (r2v0 android.util.Size A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.RequiresApi, \{api=21\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_5 -> Node_6;
}

