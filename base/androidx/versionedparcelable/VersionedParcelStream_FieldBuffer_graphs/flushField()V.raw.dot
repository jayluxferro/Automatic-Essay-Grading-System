digraph "CFG forandroidx.versionedparcelable.VersionedParcelStream.FieldBuffer.flushField()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.io.DataOutputStream) = \l  (r4 I:androidx.versionedparcelable.VersionedParcelStream$FieldBuffer)\l androidx.versionedparcelable.VersionedParcelStream.FieldBuffer.mDataStream java.io.DataOutputStream \l0x0002: INVOKE  (r0 I:java.io.DataOutputStream) java.io.DataOutputStream.flush():void type: VIRTUAL \l0x0005: IGET  (r0 I:java.io.ByteArrayOutputStream) = \l  (r4 I:androidx.versionedparcelable.VersionedParcelStream$FieldBuffer)\l androidx.versionedparcelable.VersionedParcelStream.FieldBuffer.mOutput java.io.ByteArrayOutputStream \l0x0007: INVOKE  (r0 I:int) = (r0 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.size():int type: VIRTUAL \l0x000b: IGET  (r1 I:int) = \l  (r4 I:androidx.versionedparcelable.VersionedParcelStream$FieldBuffer)\l androidx.versionedparcelable.VersionedParcelStream.FieldBuffer.mFieldId int \l0x000d: ARITH  (r1 I:int) = (r1 I:int) \<\< (16 int) \l0x000f: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (65535(0xffff, float:9.1834E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: IF  (r0 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:3:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (65535(0xffff, float:9.1834E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) \| (r3 I:?[int, boolean, short, byte, char]) \l0x001a: IGET  (r3 I:java.io.DataOutputStream) = \l  (r4 I:androidx.versionedparcelable.VersionedParcelStream$FieldBuffer)\l androidx.versionedparcelable.VersionedParcelStream.FieldBuffer.mTarget java.io.DataOutputStream \l0x001c: INVOKE  (r3 I:java.io.DataOutputStream), (r1 I:int) java.io.DataOutputStream.writeInt(int):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: IF  (r0 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:7:0x0026 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: IGET  (r1 I:java.io.DataOutputStream) = \l  (r4 I:androidx.versionedparcelable.VersionedParcelStream$FieldBuffer)\l androidx.versionedparcelable.VersionedParcelStream.FieldBuffer.mTarget java.io.DataOutputStream \l0x0023: INVOKE  (r1 I:java.io.DataOutputStream), (r0 I:int) java.io.DataOutputStream.writeInt(int):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: IGET  (r0 I:java.io.ByteArrayOutputStream) = \l  (r4 I:androidx.versionedparcelable.VersionedParcelStream$FieldBuffer)\l androidx.versionedparcelable.VersionedParcelStream.FieldBuffer.mOutput java.io.ByteArrayOutputStream \l0x0028: IGET  (r1 I:java.io.DataOutputStream) = \l  (r4 I:androidx.versionedparcelable.VersionedParcelStream$FieldBuffer)\l androidx.versionedparcelable.VersionedParcelStream.FieldBuffer.mTarget java.io.DataOutputStream \l0x002a: INVOKE  \l  (r0 I:java.io.ByteArrayOutputStream)\l  (r1 I:java.io.OutputStream)\l java.io.ByteArrayOutputStream.writeTo(java.io.OutputStream):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: RETURN   \l}"];
MethodNode[shape=record,label="{void androidx.versionedparcelable.VersionedParcelStream.FieldBuffer.flushField((r4 'this' I:androidx.versionedparcelable.VersionedParcelStream$FieldBuffer A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

