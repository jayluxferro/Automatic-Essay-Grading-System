digraph "CFG forandroidx.versionedparcelable.ParcelUtils.toOutputStream(Landroidx\/versionedparcelable\/VersionedParcelable;Ljava\/io\/OutputStream;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:androidx.versionedparcelable.VersionedParcelStream) =  androidx.versionedparcelable.VersionedParcelStream \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  \l  (r0 I:androidx.versionedparcelable.VersionedParcelStream)\l  (r1 I:java.io.InputStream)\l  (r3 I:java.io.OutputStream)\l androidx.versionedparcelable.VersionedParcelStream.\<init\>(java.io.InputStream, java.io.OutputStream):void type: DIRECT \l0x0006: INVOKE  \l  (r0 I:androidx.versionedparcelable.VersionedParcelStream)\l  (r2 I:androidx.versionedparcelable.VersionedParcelable)\l androidx.versionedparcelable.VersionedParcelStream.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):void type: VIRTUAL \l0x0009: INVOKE  (r0 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.closeField():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: RETURN   \l}"];
MethodNode[shape=record,label="{public static void androidx.versionedparcelable.ParcelUtils.toOutputStream((r2 I:androidx.versionedparcelable.VersionedParcelable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

