digraph "CFG forandroidx.versionedparcelable.VersionedParcelStream.InputBuffer.\<init\>(IILjava\/io\/DataInputStream;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r2 I:int)\l  (r0 I:androidx.versionedparcelable.VersionedParcelStream$InputBuffer)\l androidx.versionedparcelable.VersionedParcelStream.InputBuffer.mSize int \l0x0005: IPUT  \l  (r1 I:int)\l  (r0 I:androidx.versionedparcelable.VersionedParcelStream$InputBuffer)\l androidx.versionedparcelable.VersionedParcelStream.InputBuffer.mFieldId int \l0x0007: IGET  (r1 I:int) = \l  (r0 I:androidx.versionedparcelable.VersionedParcelStream$InputBuffer)\l androidx.versionedparcelable.VersionedParcelStream.InputBuffer.mSize int \l0x0009: NEW_ARRAY  (r1 I:byte[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x000b: INVOKE  (r3 I:java.io.DataInputStream), (r1 I:byte[]) java.io.DataInputStream.readFully(byte[]):void type: VIRTUAL \l0x000e: NEW_INSTANCE  (r2 I:java.io.DataInputStream) =  java.io.DataInputStream \l0x0010: NEW_INSTANCE  (r3 I:java.io.ByteArrayInputStream) =  java.io.ByteArrayInputStream \l0x0012: INVOKE  (r3 I:java.io.ByteArrayInputStream), (r1 I:byte[]) java.io.ByteArrayInputStream.\<init\>(byte[]):void type: DIRECT \l0x0015: INVOKE  (r2 I:java.io.DataInputStream), (r3 I:java.io.InputStream) java.io.DataInputStream.\<init\>(java.io.InputStream):void type: DIRECT \l0x0018: IPUT  \l  (r2 I:java.io.DataInputStream)\l  (r0 I:androidx.versionedparcelable.VersionedParcelStream$InputBuffer)\l androidx.versionedparcelable.VersionedParcelStream.InputBuffer.mInputStream java.io.DataInputStream \l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|0x001a: RETURN   \l}"];
MethodNode[shape=record,label="{void androidx.versionedparcelable.VersionedParcelStream.InputBuffer.\<init\>((r0 'this' I:androidx.versionedparcelable.VersionedParcelStream$InputBuffer A[IMMUTABLE_TYPE, THIS]), (r1 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.io.DataInputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

