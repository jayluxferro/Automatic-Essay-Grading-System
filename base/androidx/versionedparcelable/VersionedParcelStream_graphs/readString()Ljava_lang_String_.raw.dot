digraph "CFG forandroidx.versionedparcelable.VersionedParcelStream.readString()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:java.io.DataInputStream) = (r3 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCurrentInput java.io.DataInputStream A[Catch:\{ IOException \-\> 0x0019 \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:int) = (r0 I:java.io.DataInputStream) java.io.DataInputStream.readInt():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x0019 \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:5:0x0017 A[Catch:\{ IOException \-\> 0x0019 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: NEW_ARRAY  (r0 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] A[Catch:\{ IOException \-\> 0x0019 \}]\l0x000a: IGET  (r1 I:java.io.DataInputStream) = (r3 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCurrentInput java.io.DataInputStream A[Catch:\{ IOException \-\> 0x0019 \}]\l0x000c: INVOKE  (r1 I:java.io.DataInputStream), (r0 I:byte[]) java.io.DataInputStream.readFully(byte[]):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0019 \}]\l0x000f: NEW_INSTANCE  (r1 I:java.lang.String) =  java.lang.String A[Catch:\{ IOException \-\> 0x0019 \}]\l0x0011: SGET  (r2 I:java.nio.charset.Charset) =  androidx.versionedparcelable.VersionedParcelStream.UTF_16 java.nio.charset.Charset A[Catch:\{ IOException \-\> 0x0019 \}]\l0x0013: INVOKE  \l  (r1 I:java.lang.String)\l  (r0 I:byte[])\l  (r2 I:java.nio.charset.Charset)\l java.lang.String.\<init\>(byte[], java.nio.charset.Charset):void type: DIRECT A[Catch:\{ IOException \-\> 0x0019 \}, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: RETURN  (r1 I:java.lang.String) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: RETURN  (r0 I:java.lang.String) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|ExcHandler: IOException null\lSplitter:B:0:0x0000\l|0x0019: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: NEW_INSTANCE  (r1 I:androidx.versionedparcelable.VersionedParcel$ParcelException) =  androidx.versionedparcelable.VersionedParcel$ParcelException \l0x001c: INVOKE  \l  (r1 I:androidx.versionedparcelable.VersionedParcel$ParcelException)\l  (r0 I:java.lang.Throwable)\l androidx.versionedparcelable.VersionedParcel.ParcelException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.lang.String androidx.versionedparcelable.VersionedParcelStream.readString((r3 'this' I:androidx.versionedparcelable.VersionedParcelStream A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_7;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

