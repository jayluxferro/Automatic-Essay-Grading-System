digraph "CFG forandroidx.versionedparcelable.VersionedParcelStream.writeString(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r3 == null) goto L_0x0016\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IOException \-\> 0x0014 \}\lSplitter:B:1:0x0002\l|byte[] r3 = r3.getBytes(UTF_16)     \/\/ Catch:\{ IOException \-\> 0x0014 \}\lr2.mCurrentOutput.writeInt(r3.length)     \/\/ Catch:\{ IOException \-\> 0x0014 \}\lr2.mCurrentOutput.write(r3)     \/\/ Catch:\{ IOException \-\> 0x0014 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|Catch:\{ IOException \-\> 0x0014 \}\lExcHandler: IOException (r3v2 'e' java.io.IOException A[CUSTOM_DECLARE, Catch:\{ IOException \-\> 0x0014 \}])\lSplitter:B:1:0x0002\l|java.io.IOException r3 = move\-exception     \/\/ Catch:\{ IOException \-\> 0x0014 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|Catch:\{ IOException \-\> 0x0014 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|Catch:\{ IOException \-\> 0x0014 \}\l|r2.mCurrentOutput.writeInt(\-1)     \/\/ Catch:\{ IOException \-\> 0x0014 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d}"];
Node_7 [shape=record,label="{7\:\ 0x0022|throw new androidx.versionedparcelable.VersionedParcel.ParcelException(r3)\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.versionedparcelable.VersionedParcelStream.writeString((r2v0 'this' androidx.versionedparcelable.VersionedParcelStream A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_7;
}

