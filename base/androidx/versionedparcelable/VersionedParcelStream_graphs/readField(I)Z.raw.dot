digraph "CFG forandroidx.versionedparcelable.VersionedParcelStream.readField(I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.util.SparseArray\<androidx.versionedparcelable.VersionedParcelStream$InputBuffer\>) = (r5 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCachedFields android.util.SparseArray \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:android.util.SparseArray), (r6 I:int) android.util.SparseArray.get(int):java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:androidx.versionedparcelable.VersionedParcelStream$InputBuffer) = (androidx.versionedparcelable.VersionedParcelStream$InputBuffer) (r0 I:?[OBJECT, ARRAY]) \l0x0008: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IGET  (r2 I:android.util.SparseArray\<androidx.versionedparcelable.VersionedParcelStream$InputBuffer\>) = (r5 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCachedFields android.util.SparseArray \l0x000d: INVOKE  (r2 I:android.util.SparseArray), (r6 I:int) android.util.SparseArray.remove(int):void type: VIRTUAL \l0x0010: IGET  (r6 I:java.io.DataInputStream) = \l  (r0 I:androidx.versionedparcelable.VersionedParcelStream$InputBuffer)\l androidx.versionedparcelable.VersionedParcelStream.InputBuffer.mInputStream java.io.DataInputStream \l0x0012: IPUT  \l  (r6 I:java.io.DataInputStream)\l  (r5 I:androidx.versionedparcelable.VersionedParcelStream)\l androidx.versionedparcelable.VersionedParcelStream.mCurrentInput java.io.DataInputStream \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: RETURN  (r1 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|SYNTHETIC\lSplitter:B:4:0x0015\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x0015\l|0x0015: IGET  (r0 I:java.io.DataInputStream) = (r5 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mMasterInput java.io.DataInputStream A[Catch:\{ IOException \-\> 0x0043 \}, TRY_ENTER]\l0x0017: INVOKE  (r0 I:int) = (r0 I:java.io.DataInputStream) java.io.DataInputStream.readInt():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x0043 \}]\l0x001b: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (65535(0xffff, float:9.1834E\-41) ?[int, float, short, byte, char])\l A[Catch:\{ IOException \-\> 0x0043 \}]\l0x001e: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (r2 I:?[int, boolean, short, byte, char]) A[Catch:\{ IOException \-\> 0x0043 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0028 A[Catch:\{ IOException \-\> 0x0043 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: IGET  (r3 I:java.io.DataInputStream) = (r5 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mMasterInput java.io.DataInputStream A[Catch:\{ IOException \-\> 0x0043 \}]\l0x0024: INVOKE  (r3 I:int) = (r3 I:java.io.DataInputStream) java.io.DataInputStream.readInt():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x0043 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: NEW_INSTANCE  (r4 I:androidx.versionedparcelable.VersionedParcelStream$InputBuffer) =  androidx.versionedparcelable.VersionedParcelStream$InputBuffer A[Catch:\{ IOException \-\> 0x0043 \}]\l0x002a: ARITH  (r0 I:int) = (r0 I:int) \>\> (16 int) A[Catch:\{ IOException \-\> 0x0043 \}]\l0x002c: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (r2 I:?[int, boolean, short, byte, char]) A[Catch:\{ IOException \-\> 0x0043 \}]\l0x002d: IGET  (r2 I:java.io.DataInputStream) = (r5 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mMasterInput java.io.DataInputStream A[Catch:\{ IOException \-\> 0x0043 \}]\l0x002f: INVOKE  \l  (r4 I:androidx.versionedparcelable.VersionedParcelStream$InputBuffer)\l  (r0 I:int)\l  (r3 I:int)\l  (r2 I:java.io.DataInputStream)\l androidx.versionedparcelable.VersionedParcelStream.InputBuffer.\<init\>(int, int, java.io.DataInputStream):void type: DIRECT A[Catch:\{ IOException \-\> 0x0043 \}]\l0x0032: IGET  (r0 I:int) = \l  (r4 I:androidx.versionedparcelable.VersionedParcelStream$InputBuffer)\l androidx.versionedparcelable.VersionedParcelStream.InputBuffer.mFieldId int A[Catch:\{ IOException \-\> 0x0043 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003b A[Catch:\{ IOException \-\> 0x0043 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: IGET  (r6 I:java.io.DataInputStream) = \l  (r4 I:androidx.versionedparcelable.VersionedParcelStream$InputBuffer)\l androidx.versionedparcelable.VersionedParcelStream.InputBuffer.mInputStream java.io.DataInputStream A[Catch:\{ IOException \-\> 0x0043 \}]\l0x0038: IPUT  \l  (r6 I:java.io.DataInputStream)\l  (r5 I:androidx.versionedparcelable.VersionedParcelStream)\l androidx.versionedparcelable.VersionedParcelStream.mCurrentInput java.io.DataInputStream A[Catch:\{ IOException \-\> 0x0043 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|0x003a: RETURN  (r1 I:boolean) A[Catch:\{ IOException \-\> 0x0043 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: IGET  (r0 I:android.util.SparseArray\<androidx.versionedparcelable.VersionedParcelStream$InputBuffer\>) = (r5 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCachedFields android.util.SparseArray A[Catch:\{ IOException \-\> 0x0043 \}]\l0x003d: IGET  (r2 I:int) = \l  (r4 I:androidx.versionedparcelable.VersionedParcelStream$InputBuffer)\l androidx.versionedparcelable.VersionedParcelStream.InputBuffer.mFieldId int A[Catch:\{ IOException \-\> 0x0043 \}]\l0x003f: INVOKE  \l  (r0 I:android.util.SparseArray)\l  (r2 I:int)\l  (r4 I:java.lang.Object)\l android.util.SparseArray.put(int, java.lang.Object):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0043 \}, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0043|0x0043: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:4:0x0015\l}"];
Node_16 [shape=record,label="{16\:\ 0x0044|0x0044: RETURN  (r6 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.versionedparcelable.VersionedParcelStream.readField((r5 'this' I:androidx.versionedparcelable.VersionedParcelStream A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_15;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_4;
Node_14 -> Node_16;
Node_15 -> Node_14;
}

