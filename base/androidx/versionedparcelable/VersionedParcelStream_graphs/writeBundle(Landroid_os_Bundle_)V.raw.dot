digraph "CFG forandroidx.versionedparcelable.VersionedParcelStream.writeBundle(Landroid\/os\/Bundle;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002c \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0002\l|0x0002: INVOKE  (r0 I:java.util.Set) = (r4 I:android.os.Bundle) android.os.Bundle.keySet():java.util.Set type: VIRTUAL A[Catch:\{ IOException \-\> 0x002a \}, TRY_ENTER]\l0x0006: IGET  (r1 I:java.io.DataOutputStream) = (r3 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCurrentOutput java.io.DataOutputStream A[Catch:\{ IOException \-\> 0x002a \}]\l0x0008: INVOKE  (r2 I:int) = (r0 I:java.util.Set) java.util.Set.size():int type: INTERFACE A[Catch:\{ IOException \-\> 0x002a \}]\l0x000c: INVOKE  (r1 I:java.io.DataOutputStream), (r2 I:int) java.io.DataOutputStream.writeInt(int):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x002a \}]\l0x000f: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ IOException \-\> 0x002a \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ IOException \-\> 0x002a \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0032 A[Catch:\{ IOException \-\> 0x002a \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ IOException \-\> 0x002a \}]\l0x001d: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x002a \}]\l0x001f: INVOKE  \l  (r3 I:androidx.versionedparcelable.VersionedParcelStream)\l  (r1 I:java.lang.String)\l androidx.versionedparcelable.VersionedParcelStream.writeString(java.lang.String):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x002a \}]\l0x0022: INVOKE  (r1 I:java.lang.Object) = (r4 I:android.os.Bundle), (r1 I:java.lang.String) android.os.Bundle.get(java.lang.String):java.lang.Object type: VIRTUAL A[Catch:\{ IOException \-\> 0x002a \}]\l0x0026: INVOKE  \l  (r3 I:androidx.versionedparcelable.VersionedParcelStream)\l  (r1 I:java.lang.Object)\l androidx.versionedparcelable.VersionedParcelStream.writeObject(java.lang.Object):void type: DIRECT A[Catch:\{ IOException \-\> 0x002a \}]\l0x0029: GOTO  \-\> 0x0013 A[Catch:\{ IOException \-\> 0x002a \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|ExcHandler: IOException null\lSplitter:B:1:0x0002\l|0x002a: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  A[Catch:\{ IOException \-\> 0x002a \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: GOTO  \-\> 0x0033 A[Catch:\{ IOException \-\> 0x002a \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|0x002c: IGET  (r4 I:java.io.DataOutputStream) = (r3 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCurrentOutput java.io.DataOutputStream A[Catch:\{ IOException \-\> 0x002a \}]\l0x002e: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ IOException \-\> 0x002a \}]\l0x002f: INVOKE  (r4 I:java.io.DataOutputStream), (r0 I:int) java.io.DataOutputStream.writeInt(int):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x002a \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|0x0032: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|0x0033: NEW_INSTANCE  (r0 I:androidx.versionedparcelable.VersionedParcel$ParcelException) =  androidx.versionedparcelable.VersionedParcel$ParcelException \l0x0035: INVOKE  \l  (r0 I:androidx.versionedparcelable.VersionedParcel$ParcelException)\l  (r4 I:java.lang.Throwable)\l androidx.versionedparcelable.VersionedParcel.ParcelException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.versionedparcelable.VersionedParcelStream.writeBundle((r3 'this' I:androidx.versionedparcelable.VersionedParcelStream A[IMMUTABLE_TYPE, THIS]), (r4 I:android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_8;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

