digraph "CFG forandroidx.versionedparcelable.VersionedParcelStream.closeField()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:androidx.versionedparcelable.VersionedParcelStream$FieldBuffer) = (r2 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mFieldBuffer androidx.versionedparcelable.VersionedParcelStream$FieldBuffer \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|SYNTHETIC\lSplitter:B:2:0x0004\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0004\l|0x0004: IGET  (r0 I:androidx.versionedparcelable.VersionedParcelStream$FieldBuffer) = (r2 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mFieldBuffer androidx.versionedparcelable.VersionedParcelStream$FieldBuffer A[Catch:\{ IOException \-\> 0x0017 \}, TRY_ENTER]\l0x0006: IGET  (r0 I:java.io.ByteArrayOutputStream) = \l  (r0 I:androidx.versionedparcelable.VersionedParcelStream$FieldBuffer)\l androidx.versionedparcelable.VersionedParcelStream.FieldBuffer.mOutput java.io.ByteArrayOutputStream A[Catch:\{ IOException \-\> 0x0017 \}]\l0x0008: INVOKE  (r0 I:int) = (r0 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.size():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x0017 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 A[Catch:\{ IOException \-\> 0x0017 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IGET  (r0 I:androidx.versionedparcelable.VersionedParcelStream$FieldBuffer) = (r2 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mFieldBuffer androidx.versionedparcelable.VersionedParcelStream$FieldBuffer A[Catch:\{ IOException \-\> 0x0017 \}]\l0x0010: INVOKE  \l  (r0 I:androidx.versionedparcelable.VersionedParcelStream$FieldBuffer)\l androidx.versionedparcelable.VersionedParcelStream.FieldBuffer.flushField():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0017 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: IPUT  \l  (r0 I:androidx.versionedparcelable.VersionedParcelStream$FieldBuffer)\l  (r2 I:androidx.versionedparcelable.VersionedParcelStream)\l androidx.versionedparcelable.VersionedParcelStream.mFieldBuffer androidx.versionedparcelable.VersionedParcelStream$FieldBuffer \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|ExcHandler: IOException null\lSplitter:B:2:0x0004\l|0x0017: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: NEW_INSTANCE  (r1 I:androidx.versionedparcelable.VersionedParcel$ParcelException) =  androidx.versionedparcelable.VersionedParcel$ParcelException \l0x001a: INVOKE  \l  (r1 I:androidx.versionedparcelable.VersionedParcel$ParcelException)\l  (r0 I:java.lang.Throwable)\l androidx.versionedparcelable.VersionedParcel.ParcelException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: RETURN   \l}"];
MethodNode[shape=record,label="{public void androidx.versionedparcelable.VersionedParcelStream.closeField((r2 'this' I:androidx.versionedparcelable.VersionedParcelStream A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

