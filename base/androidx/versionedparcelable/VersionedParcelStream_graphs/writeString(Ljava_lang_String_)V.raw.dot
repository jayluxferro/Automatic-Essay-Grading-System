digraph "CFG forandroidx.versionedparcelable.VersionedParcelStream.writeString(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0002\l|0x0002: SGET  (r0 I:java.nio.charset.Charset) =  androidx.versionedparcelable.VersionedParcelStream.UTF_16 java.nio.charset.Charset A[Catch:\{ IOException \-\> 0x0014 \}, TRY_ENTER]\l0x0004: INVOKE  (r3 I:byte[]) = (r3 I:java.lang.String), (r0 I:java.nio.charset.Charset) java.lang.String.getBytes(java.nio.charset.Charset):byte[] type: VIRTUAL A[Catch:\{ IOException \-\> 0x0014 \}]\l0x0008: IGET  (r0 I:java.io.DataOutputStream) = (r2 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCurrentOutput java.io.DataOutputStream A[Catch:\{ IOException \-\> 0x0014 \}]\l0x000a: ARRAY_LENGTH  (r1 I:int) = (r3 I:?[]) A[Catch:\{ IOException \-\> 0x0014 \}]\l0x000b: INVOKE  (r0 I:java.io.DataOutputStream), (r1 I:int) java.io.DataOutputStream.writeInt(int):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0014 \}]\l0x000e: IGET  (r0 I:java.io.DataOutputStream) = (r2 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCurrentOutput java.io.DataOutputStream A[Catch:\{ IOException \-\> 0x0014 \}]\l0x0010: INVOKE  (r0 I:java.io.DataOutputStream), (r3 I:byte[]) java.io.DataOutputStream.write(byte[]):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0014 \}]\l0x0013: GOTO  \-\> 0x001c A[Catch:\{ IOException \-\> 0x0014 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|ExcHandler: IOException null\lSplitter:B:1:0x0002\l|0x0014: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  A[Catch:\{ IOException \-\> 0x0014 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: GOTO  \-\> 0x001d A[Catch:\{ IOException \-\> 0x0014 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IGET  (r3 I:java.io.DataOutputStream) = (r2 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCurrentOutput java.io.DataOutputStream A[Catch:\{ IOException \-\> 0x0014 \}]\l0x0018: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ IOException \-\> 0x0014 \}]\l0x0019: INVOKE  (r3 I:java.io.DataOutputStream), (r0 I:int) java.io.DataOutputStream.writeInt(int):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0014 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: NEW_INSTANCE  (r0 I:androidx.versionedparcelable.VersionedParcel$ParcelException) =  androidx.versionedparcelable.VersionedParcel$ParcelException \l0x001f: INVOKE  \l  (r0 I:androidx.versionedparcelable.VersionedParcel$ParcelException)\l  (r3 I:java.lang.Throwable)\l androidx.versionedparcelable.VersionedParcel.ParcelException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.versionedparcelable.VersionedParcelStream.writeString((r2 'this' I:androidx.versionedparcelable.VersionedParcelStream A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

