digraph "CFG forokhttp3.Response.Builder.\<init\>(Lokhttp3\/Response;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0004: IPUT  (r0 I:int), (r2 I:okhttp3.Response$Builder) okhttp3.Response.Builder.code int \l0x0006: IGET  (r0 I:okhttp3.Request) = (r3 I:okhttp3.Response) okhttp3.Response.request okhttp3.Request \l0x0008: IPUT  (r0 I:okhttp3.Request), (r2 I:okhttp3.Response$Builder) okhttp3.Response.Builder.request okhttp3.Request \l0x000a: IGET  (r0 I:okhttp3.Protocol) = (r3 I:okhttp3.Response) okhttp3.Response.protocol okhttp3.Protocol \l0x000c: IPUT  (r0 I:okhttp3.Protocol), (r2 I:okhttp3.Response$Builder) okhttp3.Response.Builder.protocol okhttp3.Protocol \l0x000e: IGET  (r0 I:int) = (r3 I:okhttp3.Response) okhttp3.Response.code int \l0x0010: IPUT  (r0 I:int), (r2 I:okhttp3.Response$Builder) okhttp3.Response.Builder.code int \l0x0012: IGET  (r0 I:java.lang.String) = (r3 I:okhttp3.Response) okhttp3.Response.message java.lang.String \l0x0014: IPUT  (r0 I:java.lang.String), (r2 I:okhttp3.Response$Builder) okhttp3.Response.Builder.message java.lang.String \l0x0016: IGET  (r0 I:okhttp3.Handshake) = (r3 I:okhttp3.Response) okhttp3.Response.handshake okhttp3.Handshake \l0x0018: IPUT  (r0 I:okhttp3.Handshake), (r2 I:okhttp3.Response$Builder) okhttp3.Response.Builder.handshake okhttp3.Handshake \l0x001a: IGET  (r0 I:okhttp3.Headers) = (r3 I:okhttp3.Response) okhttp3.Response.headers okhttp3.Headers \l0x001c: INVOKE  (r0 I:okhttp3.Headers$Builder) = (r0 I:okhttp3.Headers) okhttp3.Headers.newBuilder():okhttp3.Headers$Builder type: VIRTUAL \l0x0020: IPUT  \l  (r0 I:okhttp3.Headers$Builder)\l  (r2 I:okhttp3.Response$Builder)\l okhttp3.Response.Builder.headers okhttp3.Headers$Builder \l0x0022: IGET  (r0 I:okhttp3.ResponseBody) = (r3 I:okhttp3.Response) okhttp3.Response.body okhttp3.ResponseBody \l0x0024: IPUT  \l  (r0 I:okhttp3.ResponseBody)\l  (r2 I:okhttp3.Response$Builder)\l okhttp3.Response.Builder.body okhttp3.ResponseBody \l0x0026: IGET  (r0 I:okhttp3.Response) = (r3 I:okhttp3.Response) okhttp3.Response.networkResponse okhttp3.Response \l0x0028: IPUT  (r0 I:okhttp3.Response), (r2 I:okhttp3.Response$Builder) okhttp3.Response.Builder.networkResponse okhttp3.Response \l0x002a: IGET  (r0 I:okhttp3.Response) = (r3 I:okhttp3.Response) okhttp3.Response.cacheResponse okhttp3.Response \l0x002c: IPUT  (r0 I:okhttp3.Response), (r2 I:okhttp3.Response$Builder) okhttp3.Response.Builder.cacheResponse okhttp3.Response \l0x002e: IGET  (r0 I:okhttp3.Response) = (r3 I:okhttp3.Response) okhttp3.Response.priorResponse okhttp3.Response \l0x0030: IPUT  (r0 I:okhttp3.Response), (r2 I:okhttp3.Response$Builder) okhttp3.Response.Builder.priorResponse okhttp3.Response \l0x0032: IGET  (r0 I:long) = (r3 I:okhttp3.Response) okhttp3.Response.sentRequestAtMillis long \l0x0034: IPUT  (r0 I:long), (r2 I:okhttp3.Response$Builder) okhttp3.Response.Builder.sentRequestAtMillis long \l0x0036: IGET  (r0 I:long) = (r3 I:okhttp3.Response) okhttp3.Response.receivedResponseAtMillis long \l0x0038: IPUT  (r0 I:long), (r2 I:okhttp3.Response$Builder) okhttp3.Response.Builder.receivedResponseAtMillis long \l}"];
Node_1 [shape=record,label="{1\:\ 0x003a|0x003a: RETURN   \l}"];
MethodNode[shape=record,label="{void okhttp3.Response.Builder.\<init\>((r2 'this' I:okhttp3.Response$Builder A[IMMUTABLE_TYPE, THIS]), (r3 I:okhttp3.Response A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

