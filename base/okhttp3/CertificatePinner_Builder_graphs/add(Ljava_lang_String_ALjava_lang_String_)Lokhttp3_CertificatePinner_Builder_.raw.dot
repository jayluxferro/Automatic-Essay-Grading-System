digraph "CFG forokhttp3.CertificatePinner.Builder.add(Ljava\/lang\/String;[Ljava\/lang\/String;)Lokhttp3\/CertificatePinner$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: ARRAY_LENGTH  (r0 I:int) = (r7 I:?[]) \l0x0003: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:4:0x0015 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: AGET  (r2 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0008: IGET  (r3 I:java.util.List\<okhttp3.CertificatePinner$Pin\>) = (r5 I:okhttp3.CertificatePinner$Builder) okhttp3.CertificatePinner.Builder.pins java.util.List \l0x000a: NEW_INSTANCE  (r4 I:okhttp3.CertificatePinner$Pin) =  okhttp3.CertificatePinner$Pin \l0x000c: INVOKE  \l  (r4 I:okhttp3.CertificatePinner$Pin)\l  (r6 I:java.lang.String)\l  (r2 I:java.lang.String)\l okhttp3.CertificatePinner.Pin.\<init\>(java.lang.String, java.lang.String):void type: DIRECT \l0x000f: INVOKE  (r3 I:java.util.List), (r4 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0012: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: RETURN  (r5 I:okhttp3.CertificatePinner$Builder) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: NEW_INSTANCE  (r6 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x0018: CONST_STR  (r7 I:java.lang.String) =  \"pattern == null\" \l0x001a: INVOKE  \l  (r6 I:java.lang.NullPointerException)\l  (r7 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public okhttp3.CertificatePinner$Builder okhttp3.CertificatePinner.Builder.add((r5 'this' I:okhttp3.CertificatePinner$Builder A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_2;
Node_5 -> Node_6;
}

