digraph "CFG forokhttp3.Request.Builder.url(Ljava\/lang\/String;)Lokhttp3\/Request$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0052 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0003: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: CONST_STR  (r3 I:java.lang.String) =  \"ws:\" \l0x0006: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CONST  (r5 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0008: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0009: INVOKE  (r0 I:boolean) = \l  (r0 I:java.lang.String)\l  (r1 I:boolean)\l  (r2 I:int)\l  (r3 I:java.lang.String)\l  (r4 I:int)\l  (r5 I:int)\l java.lang.String.regionMatches(boolean, int, java.lang.String, int, int):boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0026 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0011: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0014: CONST_STR  (r1 I:java.lang.String) =  \"http:\" \l0x0016: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0019: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x001a: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.String), (r1 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL \l0x001e: INVOKE  (r0 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0021: INVOKE  (r7 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|0x0026: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0027: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0028: CONST_STR  (r3 I:java.lang.String) =  \"wss:\" \l0x002a: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002b: CONST  (r5 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x002c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x002d: INVOKE  (r0 I:boolean) = \l  (r0 I:java.lang.String)\l  (r1 I:boolean)\l  (r2 I:int)\l  (r3 I:java.lang.String)\l  (r4 I:int)\l  (r5 I:int)\l java.lang.String.regionMatches(boolean, int, java.lang.String, int, int):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|0x0031: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0049 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0033|0x0033: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0035: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0038: CONST_STR  (r1 I:java.lang.String) =  \"https:\" \l0x003a: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003d: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x003e: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.String), (r1 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL \l0x0042: INVOKE  (r0 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0045: INVOKE  (r7 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0049|0x0049: INVOKE  (r7 I:okhttp3.HttpUrl) = (r7 I:java.lang.String) okhttp3.HttpUrl.get(java.lang.String):okhttp3.HttpUrl type: STATIC \l0x004d: INVOKE  (r7 I:okhttp3.Request$Builder) = (r6 I:okhttp3.Request$Builder), (r7 I:okhttp3.HttpUrl) okhttp3.Request.Builder.url(okhttp3.HttpUrl):okhttp3.Request$Builder type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0051|0x0051: RETURN  (r7 I:okhttp3.Request$Builder) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0052|0x0052: NEW_INSTANCE  (r7 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x0054: CONST_STR  (r0 I:java.lang.String) =  \"url == null\" \l0x0056: INVOKE  \l  (r7 I:java.lang.NullPointerException)\l  (r0 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0059|0x0059: THROW  (r7 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public okhttp3.Request$Builder okhttp3.Request.Builder.url((r6 'this' I:okhttp3.Request$Builder A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_9;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
}

