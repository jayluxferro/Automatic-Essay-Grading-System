digraph "CFG forokhttp3.Cookie.matches(Lokhttp3\/HttpUrl;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r2 I:okhttp3.Cookie) okhttp3.Cookie.hostOnly boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:java.lang.String) = (r3 I:okhttp3.HttpUrl) okhttp3.HttpUrl.host():java.lang.String type: VIRTUAL \l0x0008: IGET  (r1 I:java.lang.String) = (r2 I:okhttp3.Cookie) okhttp3.Cookie.domain java.lang.String \l0x000a: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: INVOKE  (r0 I:java.lang.String) = (r3 I:okhttp3.HttpUrl) okhttp3.HttpUrl.host():java.lang.String type: VIRTUAL \l0x0013: IGET  (r1 I:java.lang.String) = (r2 I:okhttp3.Cookie) okhttp3.Cookie.domain java.lang.String \l0x0015: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.String) okhttp3.Cookie.domainMatch(java.lang.String, java.lang.String):boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001d \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: RETURN  (r1 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IGET  (r0 I:java.lang.String) = (r2 I:okhttp3.Cookie) okhttp3.Cookie.path java.lang.String \l0x001f: INVOKE  (r0 I:boolean) = (r3 I:okhttp3.HttpUrl), (r0 I:java.lang.String) okhttp3.Cookie.pathMatch(okhttp3.HttpUrl, java.lang.String):boolean type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0026 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: RETURN  (r1 I:boolean) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: IGET  (r0 I:boolean) = (r2 I:okhttp3.Cookie) okhttp3.Cookie.secure boolean \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0031 \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: INVOKE  (r3 I:boolean) = (r3 I:okhttp3.HttpUrl) okhttp3.HttpUrl.isHttps():boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|0x002e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0031 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|0x0030: RETURN  (r1 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0031: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|0x0032: RETURN  (r3 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean okhttp3.Cookie.matches((r2 'this' I:okhttp3.Cookie A[IMMUTABLE_TYPE, THIS]), (r3 I:okhttp3.HttpUrl A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_15 -> Node_16;
}

