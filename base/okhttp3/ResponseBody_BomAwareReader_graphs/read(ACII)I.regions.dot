digraph "CFG forokhttp3.ResponseBody.BomAwareReader.read([CII)I" {
subgraph cluster_Region_2112924371 {
label = "R(1:(2:(3:2|(1:4)|6)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1431615432 {
label = "R(2:(3:2|(1:4)|6)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1823459609 {
label = "IF [B:1:0x0002] THEN: R(3:2|(1:4)|6) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3.closed == false) goto L_0x0004\l}"];
subgraph cluster_Region_888441003 {
label = "R(3:2|(1:4)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|java.io.Reader java.io.Reader r0 = r3.delegate\l}"];
subgraph cluster_IfRegion_1931799261 {
label = "IF [B:3:0x0006] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r0 == null) goto L_0x0008\l}"];
subgraph cluster_Region_250303440 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0008|java.io.InputStreamReader java.io.InputStreamReader r1 = new java.io.InputStreamReader(r3.source.inputStream(), okhttp3.internal.Util.bomAwareCharset(r3.source, r3.charset))\lr3.delegate = r1\lr0 = r1\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0022|RETURN\l|return r0.read(r4, r5, r6)\l}"];
}
}
subgraph cluster_Region_1086635445 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002a|throw new java.io.IOException(\"Stream closed\")\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001e|PHI: r0 \l  PHI: (r0v2 java.io.Reader) = (r0v1 java.io.Reader), (r0v5 java.io.Reader) binds: [B:3:0x0006, B:4:0x0008] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0023}"];
MethodNode[shape=record,label="{public int okhttp3.ResponseBody.BomAwareReader.read((r3v0 'this' okhttp3.ResponseBody$BomAwareReader A[IMMUTABLE_TYPE, THIS]), (r4v0 char[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_0 -> Node_1;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

