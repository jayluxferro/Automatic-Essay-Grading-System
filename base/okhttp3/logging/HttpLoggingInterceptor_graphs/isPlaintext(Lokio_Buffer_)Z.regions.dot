digraph "CFG forokhttp3.logging.HttpLoggingInterceptor.isPlaintext(Lokio\/Buffer;)Z" {
subgraph cluster_Region_812968914 {
label = "R(1:(4:2|6|(1:(2:(1:25)|(2:12|(2:(1:16)|(1:17)))))|26))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_199942841 {
label = "Try: R(4:2|6|(1:(2:(1:25)|(2:12|(2:(1:16)|(1:17)))))|26) catches: R(1:18)";
node [shape=record,color=blue];
subgraph cluster_Region_1446407296 {
label = "R(4:2|6|(1:(2:(1:25)|(2:12|(2:(1:16)|(1:17)))))|26)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ EOFException \-\> 0x0040 \}\lSplitter:B:1:0x0001\l|okio.Buffer okio.Buffer r7 = new okio.Buffer()     \/\/ Catch:\{ EOFException \-\> 0x0040 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|Catch:\{ EOFException \-\> 0x0040 \}\lPHI: r5 \l  PHI: (r5v0 long) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r8.copyTo(r7, 0, r8.size() \< 64 ? r8.size() : 64)     \/\/ Catch:\{ EOFException \-\> 0x0040 \}\lint r8 = 0     \/\/ Catch:\{ EOFException \-\> 0x0040 \}\l}"];
subgraph cluster_LoopRegion_1077199210 {
label = "LOOP:0: (1:(2:(1:25)|(2:12|(2:(1:16)|(1:17)))))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0021|Catch:\{ EOFException \-\> 0x0040 \}\l|if (r8 \< 16) goto L_0x0023     \/\/ Catch:\{ EOFException \-\> 0x0040 \}\l}"];
subgraph cluster_Region_293370495 {
label = "R(1:(2:(1:25)|(2:12|(2:(1:16)|(1:17)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1064854205 {
label = "R(2:(1:25)|(2:12|(2:(1:16)|(1:17))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_104979974 {
label = "IF [B:10:0x0027] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0027|Catch:\{ EOFException \-\> 0x0040 \}\l|if (r7.exhausted() == true) goto L_0x0029     \/\/ Catch:\{ EOFException \-\> 0x0040 \}\l}"];
subgraph cluster_Region_675620091 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_625862775 {
label = "R(2:12|(2:(1:16)|(1:17)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002a|Catch:\{ EOFException \-\> 0x0040 \}\l|int int r1 = r7.readUtf8CodePoint()     \/\/ Catch:\{ EOFException \-\> 0x0040 \}\l}"];
subgraph cluster_Region_1952900192 {
label = "R(2:(1:16)|(1:17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_758824152 {
label = "IF [B:13:0x0032, B:15:0x0038] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0032|Catch:\{ EOFException \-\> 0x0040 \}\l|if (java.lang.Character.isISOControl(r1) != false) goto L_0x0034     \/\/ Catch:\{ EOFException \-\> 0x0040 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|ADDED_TO_REGION\l|if (java.lang.Character.isWhitespace(r1) != true) goto L_0x003a\l}"];
subgraph cluster_Region_104580881 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x003a|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_629405568 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x003b|LOOP_END\lLOOP:0: B:7:0x001f\-\>B:17:0x003b\l|r8++\l}"];
}
}
}
}
}
}
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
subgraph cluster_Region_2049585377 {
label = "R(1:18) | ExcHandler: EOFException (unused java.io.EOFException)\l";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0040|RETURN\l|return false\l}"];
}
}
}
subgraph cluster_Region_2049585377 {
label = "R(1:18) | ExcHandler: EOFException (unused java.io.EOFException)\l";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0040|RETURN\l|return false\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000e|Catch:\{ EOFException \-\> 0x0040 \}\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0010|Catch:\{ EOFException \-\> 0x0040 \}\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0016|Catch:\{ EOFException \-\> 0x0040 \}\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001f|LOOP_START\lCatch:\{ EOFException \-\> 0x0040 \}\lPHI: r8 \l  PHI: (r8v2 int) = (r8v1 int), (r8v5 int) binds: [B:6:0x0017, B:17:0x003b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x001f\-\>B:17:0x003b\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0023|Catch:\{ EOFException \-\> 0x0040 \}\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0029|Catch:\{ EOFException \-\> 0x0040 \}\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0034|Catch:\{ EOFException \-\> 0x0040 \}\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\lExcHandler: EOFException (unused java.io.EOFException)\lSplitter:B:1:0x0001\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x003e|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0029|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x003a|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x003b|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x003b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static boolean okhttp3.logging.HttpLoggingInterceptor.isPlaintext((r8v0 okio.Buffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_20[style=dashed];
Node_10 -> Node_12[style=dashed];
Node_10 -> Node_21;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_23[style=dashed];
Node_15 -> Node_22;
Node_15 -> Node_24[style=dashed];
Node_17 -> Node_7;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_19;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_25;
Node_14 -> Node_15;
Node_19 -> Node_18;
Node_20 -> Node_26;
Node_21 -> Node_11;
Node_22 -> Node_16;
Node_23 -> Node_17;
Node_24 -> Node_17;
}

