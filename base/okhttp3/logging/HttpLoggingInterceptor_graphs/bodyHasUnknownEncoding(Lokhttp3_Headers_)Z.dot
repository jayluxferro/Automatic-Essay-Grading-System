digraph "CFG forokhttp3.logging.HttpLoggingInterceptor.bodyHasUnknownEncoding(Lokhttp3\/Headers;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r2 = r2.get(p018io.fabric.sdk.android.services.network.HttpRequest.HEADER_CONTENT_ENCODING)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r2 == null) goto L_0x001a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r2.equalsIgnoreCase(\"identity\") != false) goto L_0x001a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010}"];
Node_5 [shape=record,label="{5\:\ 0x0016|if (r2.equalsIgnoreCase(p018io.fabric.sdk.android.services.network.HttpRequest.ENCODING_GZIP) != false) goto L_0x001a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|SYNTHETIC\lRETURN\l|return true\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{private boolean okhttp3.logging.HttpLoggingInterceptor.bodyHasUnknownEncoding((r1v0 'this' okhttp3.logging.HttpLoggingInterceptor A[IMMUTABLE_TYPE, THIS]), (r2v0 okhttp3.Headers A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
}

