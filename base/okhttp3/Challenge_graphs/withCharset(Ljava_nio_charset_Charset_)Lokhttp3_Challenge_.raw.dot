digraph "CFG forokhttp3.Challenge.withCharset(Ljava\/nio\/charset\/Charset;)Lokhttp3\/Challenge;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:okhttp3.Challenge) =  okhttp3.Challenge \l0x0002: IGET  (r1 I:java.lang.String) = (r3 I:okhttp3.Challenge) okhttp3.Challenge.scheme java.lang.String \l0x0004: IGET  (r2 I:java.lang.String) = (r3 I:okhttp3.Challenge) okhttp3.Challenge.realm java.lang.String \l0x0006: INVOKE  \l  (r0 I:okhttp3.Challenge)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r4 I:java.nio.charset.Charset)\l okhttp3.Challenge.\<init\>(java.lang.String, java.lang.String, java.nio.charset.Charset):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN  (r0 I:okhttp3.Challenge) \l}"];
MethodNode[shape=record,label="{public okhttp3.Challenge okhttp3.Challenge.withCharset((r3 'this' I:okhttp3.Challenge A[IMMUTABLE_TYPE, THIS]), (r4 I:java.nio.charset.Charset A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

