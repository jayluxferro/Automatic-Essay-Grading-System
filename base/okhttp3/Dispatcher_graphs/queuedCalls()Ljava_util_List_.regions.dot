digraph "CFG forokhttp3.Dispatcher.queuedCalls()Ljava\/util\/List;" {
subgraph cluster_Region_35250341 {
label = "R(2:(1:(3:2|(1:5)|6))|8) | DECL_VAR: java.util.ArrayList null\l";
node [shape=record,color=blue];
subgraph cluster_Region_1247218439 {
label = "R(1:(3:2|(1:5)|6))";
node [shape=record,color=blue];
subgraph cluster_Region_1002050446 {
label = "R(3:2|(1:5)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|java.util.ArrayList r0 = new java.util.ArrayList()     \/\/ Catch:\{  \}\ljava.util.Iterator r1 = r3.readyAsyncCalls.iterator()\l}"];
subgraph cluster_LoopRegion_80187938 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|if (r1.hasNext() != false) goto L_0x0012\l}"];
subgraph cluster_Region_425808253 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|LOOP_END\lLOOP:0: B:3:0x000c\-\>B:5:0x0012\l|r0.add(r2.get())\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0020}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0025|RETURN\l|return java.util.Collections.unmodifiableList(r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000c|LOOP_START\lLOOP:0: B:3:0x000c\-\>B:5:0x0012\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0024|DONT_GENERATE\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0026|REMOVE\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0027|REMOVE\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0028|REMOVE\l|throw r0\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0020|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public synchronized java.util.List\<okhttp3.Call\> okhttp3.Dispatcher.queuedCalls((r3v0 'this' okhttp3.Dispatcher A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/List\<, Lokhttp3\/Call;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_12[style=dashed];
Node_5 -> Node_3;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_6;
}

