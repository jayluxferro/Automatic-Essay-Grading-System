digraph "CFG forokhttp3.Dispatcher.\<init\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, short, byte, char]) = (64 ?[int, float, short, byte, char]) \l0x0005: IPUT  (r0 I:int), (r1 I:okhttp3.Dispatcher) okhttp3.Dispatcher.maxRequests int \l0x0007: CONST  (r0 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0008: IPUT  (r0 I:int), (r1 I:okhttp3.Dispatcher) okhttp3.Dispatcher.maxRequestsPerHost int \l0x000a: NEW_INSTANCE  (r0 I:java.util.ArrayDeque) =  java.util.ArrayDeque \l0x000c: INVOKE  (r0 I:java.util.ArrayDeque) java.util.ArrayDeque.\<init\>():void type: DIRECT \l0x000f: IPUT  \l  (r0 I:java.util.Deque\<okhttp3.RealCall$AsyncCall\>)\l  (r1 I:okhttp3.Dispatcher)\l okhttp3.Dispatcher.readyAsyncCalls java.util.Deque \l0x0011: NEW_INSTANCE  (r0 I:java.util.ArrayDeque) =  java.util.ArrayDeque \l0x0013: INVOKE  (r0 I:java.util.ArrayDeque) java.util.ArrayDeque.\<init\>():void type: DIRECT \l0x0016: IPUT  \l  (r0 I:java.util.Deque\<okhttp3.RealCall$AsyncCall\>)\l  (r1 I:okhttp3.Dispatcher)\l okhttp3.Dispatcher.runningAsyncCalls java.util.Deque \l0x0018: NEW_INSTANCE  (r0 I:java.util.ArrayDeque) =  java.util.ArrayDeque \l0x001a: INVOKE  (r0 I:java.util.ArrayDeque) java.util.ArrayDeque.\<init\>():void type: DIRECT \l0x001d: IPUT  \l  (r0 I:java.util.Deque\<okhttp3.RealCall\>)\l  (r1 I:okhttp3.Dispatcher)\l okhttp3.Dispatcher.runningSyncCalls java.util.Deque \l}"];
Node_1 [shape=record,label="{1\:\ 0x001f|0x001f: RETURN   \l}"];
MethodNode[shape=record,label="{public void okhttp3.Dispatcher.\<init\>((r1 'this' I:okhttp3.Dispatcher A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

