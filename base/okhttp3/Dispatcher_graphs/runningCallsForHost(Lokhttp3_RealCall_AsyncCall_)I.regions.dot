digraph "CFG forokhttp3.Dispatcher.runningCallsForHost(Lokhttp3\/RealCall$AsyncCall;)I" {
subgraph cluster_Region_2024979149 {
label = "R(3:0|(2:3|(1:7))|8)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r0 = r4.runningAsyncCalls.iterator()\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_2027993639 {
label = "LOOP:0: (2:3|(1:7))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000b|if (r0.hasNext() != false) goto L_0x000d\l}"];
subgraph cluster_Region_289269770 {
label = "R(2:3|(1:7))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000d|okhttp3.RealCall$AsyncCall r2 = r0.next()\l}"];
subgraph cluster_IfRegion_788213835 {
label = "IF [B:4:0x0019, B:6:0x0028] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0019|ADDED_TO_REGION\l|if (r2.get().forWebSocket == false) goto L_0x001c\l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|ADDED_TO_REGION\l|if (r2.host().equals(r5.host()) == true) goto L_0x002a\l}"];
subgraph cluster_Region_545034081 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002a|r1++\l}"];
}
}
}
}
Node_8 [shape=record,label="{8\:\ 0x002d|RETURN\l|return r1\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0007|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:9:0x0007] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:9:0x0007\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001c}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0007|LOOP_END\lSYNTHETIC\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v1 int), (r1v3 int) binds: [B:11:0x0007, B:12:0x0007, B:13:0x0007] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:9:0x0007\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002d|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0007|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0007|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0007|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int okhttp3.Dispatcher.runningCallsForHost((r4v0 'this' okhttp3.Dispatcher A[IMMUTABLE_TYPE, THIS]), (r5v0 okhttp3.RealCall$AsyncCall A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_10[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_11[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_12[style=dashed];
Node_7 -> Node_13;
Node_1 -> Node_2;
Node_5 -> Node_6;
Node_9 -> Node_1;
Node_10 -> Node_8;
Node_11 -> Node_9;
Node_12 -> Node_9;
Node_13 -> Node_9;
}

