digraph "CFG forokhttp3.Dispatcher.runningCallsCount()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:java.util.Deque\<okhttp3.RealCall$AsyncCall\>) = (r2 I:okhttp3.Dispatcher) okhttp3.Dispatcher.runningAsyncCalls java.util.Deque A[Catch:\{ all \-\> 0x0010 \}, TRY_ENTER]\l0x0003: INVOKE  (r0 I:int) = (r0 I:java.util.Deque) java.util.Deque.size():int type: INTERFACE A[Catch:\{ all \-\> 0x0010 \}]\l0x0007: IGET  (r1 I:java.util.Deque\<okhttp3.RealCall\>) = (r2 I:okhttp3.Dispatcher) okhttp3.Dispatcher.runningSyncCalls java.util.Deque A[Catch:\{ all \-\> 0x0010 \}]\l0x0009: INVOKE  (r1 I:int) = (r1 I:java.util.Deque) java.util.Deque.size():int type: INTERFACE A[Catch:\{ all \-\> 0x0010 \}]\l0x000c: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: RETURN  (r0 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0010: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized int okhttp3.Dispatcher.runningCallsCount((r2 'this' I:okhttp3.Dispatcher A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

