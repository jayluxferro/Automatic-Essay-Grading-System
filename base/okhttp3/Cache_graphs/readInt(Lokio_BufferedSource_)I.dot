digraph "CFG forokhttp3.Cache.readInt(Lokio\/BufferedSource;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ NumberFormatException \-\> 0x003c \}\lSplitter:B:0:0x0000\l|long r0 = r5.readDecimalLong()     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\ljava.lang.String r5 = r5.readUtf8LineStrict()     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|Catch:\{ NumberFormatException \-\> 0x003c \}\l|if ((r0 \> 0 ? 1 : (r0 == 0 ? 0 : \-1)) \< 0) goto L_0x001d     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|Catch:\{ NumberFormatException \-\> 0x003c \}\l|if ((r0 \> 2147483647L ? 1 : (r0 == 2147483647L ? 0 : \-1)) \> 0) goto L_0x001d     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|Catch:\{ NumberFormatException \-\> 0x003c \}\l|if (r5.isEmpty() == false) goto L_0x001d     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|RETURN\lCatch:\{ NumberFormatException \-\> 0x003c \}\l|return (int) r0     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|Catch:\{ NumberFormatException \-\> 0x003c \}\l|java.lang.StringBuilder r3 = new java.lang.StringBuilder()     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\lr3.append(\"expected an int but was \"\")     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\lr3.append(r0)     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\lr3.append(r5)     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\lr3.append(org.osgeo.proj4j.units.AngleFormat.STR_SEC_SYMBOL)     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|Catch:\{ NumberFormatException \-\> 0x003c \}\l|throw new java.io.IOException(r3.toString())     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|ExcHandler: NumberFormatException (r5v1 'e' java.lang.NumberFormatException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.lang.NumberFormatException r5 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x003d}"];
Node_13 [shape=record,label="{13\:\ 0x0046|throw new java.io.IOException(r5.getMessage())\l}"];
MethodNode[shape=record,label="{static int okhttp3.Cache.readInt((r5v0 okio.BufferedSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_11;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

