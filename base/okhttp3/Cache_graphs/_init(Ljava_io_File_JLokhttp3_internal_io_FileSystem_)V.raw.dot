digraph "CFG forokhttp3.Cache.\<init\>(Ljava\/io\/File;JLokhttp3\/internal\/io\/FileSystem;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r7 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:okhttp3.Cache$1) =  okhttp3.Cache$1 \l0x0005: INVOKE  (r0 I:okhttp3.Cache$1), (r7 I:okhttp3.Cache) okhttp3.Cache.1.\<init\>(okhttp3.Cache):void type: DIRECT \l0x0008: IPUT  \l  (r0 I:okhttp3.internal.cache.InternalCache)\l  (r7 I:okhttp3.Cache)\l okhttp3.Cache.internalCache okhttp3.internal.cache.InternalCache \l0x000a: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (201105(0x31191, float:2.81808E\-40) ?[int, float, short, byte, char])\l \l0x000d: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000e: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x000f: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0010: MOVE  (r5 I:?[long, double]) = (r9 I:?[long, double]) \l0x0011: INVOKE  (r8 I:okhttp3.internal.cache.DiskLruCache) = \l  (r1 I:okhttp3.internal.io.FileSystem)\l  (r2 I:java.io.File)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:long)\l okhttp3.internal.cache.DiskLruCache.create(okhttp3.internal.io.FileSystem, java.io.File, int, int, long):okhttp3.internal.cache.DiskLruCache type: STATIC \l0x0015: IPUT  \l  (r8 I:okhttp3.internal.cache.DiskLruCache)\l  (r7 I:okhttp3.Cache)\l okhttp3.Cache.cache okhttp3.internal.cache.DiskLruCache \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: RETURN   \l}"];
MethodNode[shape=record,label="{void okhttp3.Cache.\<init\>((r7 'this' I:okhttp3.Cache A[IMMUTABLE_TYPE, THIS]), (r8 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:okhttp3.internal.io.FileSystem A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

