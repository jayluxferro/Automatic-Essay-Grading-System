digraph "CFG forokhttp3.Cache.readInt(Lokio\/BufferedSource;)I" {
subgraph cluster_Region_1533285591 {
label = "R(1:(2:1|(2:(1:8)|(2:9|10))))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_342744831 {
label = "Try: R(2:1|(2:(1:8)|(2:9|10))) catches: R(2:11|13)";
node [shape=record,color=blue];
subgraph cluster_Region_1886876454 {
label = "R(2:1|(2:(1:8)|(2:9|10)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ NumberFormatException \-\> 0x003c \}\lSplitter:B:0:0x0000\l|long long r0 = r5.readDecimalLong()     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\ljava.lang.String java.lang.String r5 = r5.readUtf8LineStrict()     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
subgraph cluster_Region_1335982174 {
label = "R(2:(1:8)|(2:9|10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1826445915 {
label = "IF [B:2:0x000c, B:4:0x0013, B:6:0x0019] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000c|Catch:\{ NumberFormatException \-\> 0x003c \}\l|if (r0 \>= 0) goto L_0x000e     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|ADDED_TO_REGION\lCatch:\{ NumberFormatException \-\> 0x003c \}\l|if (r0 \<= 2147483647L) goto L_0x0015     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|ADDED_TO_REGION\lCatch:\{ NumberFormatException \-\> 0x003c \}\l|if (r5.isEmpty() != false) goto L_0x001b     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
subgraph cluster_Region_533306770 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001c|RETURN\lCatch:\{ NumberFormatException \-\> 0x003c \}\l|return (int) r0     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
}
}
subgraph cluster_Region_77927208 {
label = "R(2:9|10)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001d|Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|Catch:\{ NumberFormatException \-\> 0x003c \}\l|throw new java.io.IOException(\"expected an int but was \"\" + r0 + r5 + org.osgeo.proj4j.units.AngleFormat.STR_SEC_SYMBOL)     \/\/ Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
}
}
}
subgraph cluster_Region_333121681 {
label = "R(2:11|13) | ExcHandler: NumberFormatException (r5v1 'e' java.lang.NumberFormatException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x003c|ExcHandler: NumberFormatException (r5v1 'e' java.lang.NumberFormatException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|throw new java.io.IOException(r5.getMessage())\l}"];
}
}
}
subgraph cluster_Region_333121681 {
label = "R(2:11|13) | ExcHandler: NumberFormatException (r5v1 'e' java.lang.NumberFormatException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x003c|ExcHandler: NumberFormatException (r5v1 'e' java.lang.NumberFormatException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|throw new java.io.IOException(r5.getMessage())\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000e|Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0015|Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001b|Catch:\{ NumberFormatException \-\> 0x003c \}\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x003d}"];
MethodNode[shape=record,label="{static int okhttp3.Cache.readInt((r5v0 okio.BufferedSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_11 -> Node_12;
Node_0 -> Node_1;
Node_0 -> Node_11;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_12 -> Node_13;
}

