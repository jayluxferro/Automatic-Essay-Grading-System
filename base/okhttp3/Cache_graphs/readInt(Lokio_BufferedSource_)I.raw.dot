digraph "CFG forokhttp3.Cache.readInt(Lokio\/BufferedSource;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r0 I:long) = (r5 I:okio.BufferedSource) okio.BufferedSource.readDecimalLong():long type: INTERFACE A[Catch:\{ NumberFormatException \-\> 0x003c \}, TRY_ENTER]\l0x0004: INVOKE  (r5 I:java.lang.String) = (r5 I:okio.BufferedSource) okio.BufferedSource.readUtf8LineStrict():java.lang.String type: INTERFACE A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l0x0008: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l0x000a: CMP_L  (r2 I:int) = (r0 I:long), (r2 I:long) A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r2 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:9:0x001d A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: CONST  (r2 I:?[long, double]) = \l  (2147483647(0x7fffffff, double:1.060997895E\-314) ?[long, double])\l A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l0x0011: CMP_L  (r2 I:int) = (r0 I:long), (r2 I:long) A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r2 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:9:0x001d A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: INVOKE  (r2 I:boolean) = (r5 I:java.lang.String) java.lang.String.isEmpty():boolean type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001d A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: CAST  (r5 I:int) = (int) (r0 I:long) A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: RETURN  (r5 I:int) A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: NEW_INSTANCE  (r2 I:java.io.IOException) =  java.io.IOException A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l0x001f: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l0x0021: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l0x0024: CONST_STR  (r4 I:java.lang.String) =  \"expected an int but was \"\" A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l0x0026: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l0x0029: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l0x002c: INVOKE  (r3 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l0x002f: CONST_STR  (r5 I:java.lang.String) =  \"\"\" A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l0x0031: INVOKE  (r3 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l0x0034: INVOKE  (r5 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l0x0038: INVOKE  (r2 I:java.io.IOException), (r5 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ NumberFormatException \-\> 0x003c \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|0x003b: THROW  (r2 I:java.lang.Throwable) A[Catch:\{ NumberFormatException \-\> 0x003c \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|ExcHandler: NumberFormatException null\lSplitter:B:0:0x0000\l|0x003c: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x003d|0x003d: NEW_INSTANCE  (r0 I:java.io.IOException) =  java.io.IOException \l0x003f: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.NumberFormatException) java.lang.NumberFormatException.getMessage():java.lang.String type: VIRTUAL \l0x0043: INVOKE  (r0 I:java.io.IOException), (r5 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|0x0046: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{static int okhttp3.Cache.readInt((r5 I:okio.BufferedSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_11;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

