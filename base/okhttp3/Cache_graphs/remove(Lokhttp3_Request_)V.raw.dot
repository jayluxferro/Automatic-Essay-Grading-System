digraph "CFG forokhttp3.Cache.remove(Lokhttp3\/Request;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.internal.cache.DiskLruCache) = (r1 I:okhttp3.Cache) okhttp3.Cache.cache okhttp3.internal.cache.DiskLruCache \l0x0002: INVOKE  (r2 I:okhttp3.HttpUrl) = (r2 I:okhttp3.Request) okhttp3.Request.url():okhttp3.HttpUrl type: VIRTUAL \l0x0006: INVOKE  (r2 I:java.lang.String) = (r2 I:okhttp3.HttpUrl) okhttp3.Cache.key(okhttp3.HttpUrl):java.lang.String type: STATIC \l0x000a: INVOKE  \l  (r0 I:okhttp3.internal.cache.DiskLruCache)\l  (r2 I:java.lang.String)\l okhttp3.internal.cache.DiskLruCache.remove(java.lang.String):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: RETURN   \l}"];
MethodNode[shape=record,label="{void okhttp3.Cache.remove((r1 'this' I:okhttp3.Cache A[IMMUTABLE_TYPE, THIS]), (r2 I:okhttp3.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

