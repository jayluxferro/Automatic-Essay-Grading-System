digraph "CFG forokhttp3.Response.peekBody(J)Lokhttp3\/ResponseBody;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.ResponseBody) = (r3 I:okhttp3.Response) okhttp3.Response.body okhttp3.ResponseBody \l0x0002: INVOKE  (r0 I:okio.BufferedSource) = (r0 I:okhttp3.ResponseBody) okhttp3.ResponseBody.source():okio.BufferedSource type: VIRTUAL \l0x0006: INVOKE  (r0 I:okio.BufferedSource), (r4 I:long) okio.BufferedSource.request(long):boolean type: INTERFACE \l0x0009: INVOKE  (r0 I:okio.Buffer) = (r0 I:okio.BufferedSource) okio.BufferedSource.buffer():okio.Buffer type: INTERFACE \l0x000d: INVOKE  (r0 I:okio.Buffer) = (r0 I:okio.Buffer) okio.Buffer.clone():okio.Buffer type: VIRTUAL \l0x0011: INVOKE  (r1 I:long) = (r0 I:okio.Buffer) okio.Buffer.size():long type: VIRTUAL \l0x0015: CMP_L  (r1 I:int) = (r1 I:long), (r4 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x0025 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|0x0019: NEW_INSTANCE  (r1 I:okio.Buffer) =  okio.Buffer \l0x001b: INVOKE  (r1 I:okio.Buffer) okio.Buffer.\<init\>():void type: DIRECT \l0x001e: INVOKE  (r1 I:okio.Buffer), (r0 I:okio.Buffer), (r4 I:long) okio.Buffer.write(okio.Buffer, long):void type: VIRTUAL \l0x0021: INVOKE  (r0 I:okio.Buffer) okio.Buffer.clear():void type: VIRTUAL \l0x0024: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0025|0x0025: IGET  (r4 I:okhttp3.ResponseBody) = (r3 I:okhttp3.Response) okhttp3.Response.body okhttp3.ResponseBody \l0x0027: INVOKE  (r4 I:okhttp3.MediaType) = (r4 I:okhttp3.ResponseBody) okhttp3.ResponseBody.contentType():okhttp3.MediaType type: VIRTUAL \l0x002b: INVOKE  (r1 I:long) = (r0 I:okio.Buffer) okio.Buffer.size():long type: VIRTUAL \l0x002f: INVOKE  (r4 I:okhttp3.ResponseBody) = \l  (r4 I:okhttp3.MediaType)\l  (r1 I:long)\l  (r0 I:okio.BufferedSource)\l okhttp3.ResponseBody.create(okhttp3.MediaType, long, okio.BufferedSource):okhttp3.ResponseBody type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0033|0x0033: RETURN  (r4 I:okhttp3.ResponseBody) \l}"];
MethodNode[shape=record,label="{public okhttp3.ResponseBody okhttp3.Response.peekBody((r3 'this' I:okhttp3.Response A[IMMUTABLE_TYPE, THIS]), (r4 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

