digraph "CFG forokhttp3.Response.\<init\>(Lokhttp3\/Response$Builder;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IGET  (r0 I:okhttp3.Request) = (r3 I:okhttp3.Response$Builder) okhttp3.Response.Builder.request okhttp3.Request \l0x0005: IPUT  (r0 I:okhttp3.Request), (r2 I:okhttp3.Response) okhttp3.Response.request okhttp3.Request \l0x0007: IGET  (r0 I:okhttp3.Protocol) = (r3 I:okhttp3.Response$Builder) okhttp3.Response.Builder.protocol okhttp3.Protocol \l0x0009: IPUT  (r0 I:okhttp3.Protocol), (r2 I:okhttp3.Response) okhttp3.Response.protocol okhttp3.Protocol \l0x000b: IGET  (r0 I:int) = (r3 I:okhttp3.Response$Builder) okhttp3.Response.Builder.code int \l0x000d: IPUT  (r0 I:int), (r2 I:okhttp3.Response) okhttp3.Response.code int \l0x000f: IGET  (r0 I:java.lang.String) = (r3 I:okhttp3.Response$Builder) okhttp3.Response.Builder.message java.lang.String \l0x0011: IPUT  (r0 I:java.lang.String), (r2 I:okhttp3.Response) okhttp3.Response.message java.lang.String \l0x0013: IGET  (r0 I:okhttp3.Handshake) = (r3 I:okhttp3.Response$Builder) okhttp3.Response.Builder.handshake okhttp3.Handshake \l0x0015: IPUT  (r0 I:okhttp3.Handshake), (r2 I:okhttp3.Response) okhttp3.Response.handshake okhttp3.Handshake \l0x0017: IGET  (r0 I:okhttp3.Headers$Builder) = (r3 I:okhttp3.Response$Builder) okhttp3.Response.Builder.headers okhttp3.Headers$Builder \l0x0019: INVOKE  (r0 I:okhttp3.Headers) = (r0 I:okhttp3.Headers$Builder) okhttp3.Headers.Builder.build():okhttp3.Headers type: VIRTUAL \l0x001d: IPUT  (r0 I:okhttp3.Headers), (r2 I:okhttp3.Response) okhttp3.Response.headers okhttp3.Headers \l0x001f: IGET  (r0 I:okhttp3.ResponseBody) = (r3 I:okhttp3.Response$Builder) okhttp3.Response.Builder.body okhttp3.ResponseBody \l0x0021: IPUT  (r0 I:okhttp3.ResponseBody), (r2 I:okhttp3.Response) okhttp3.Response.body okhttp3.ResponseBody \l0x0023: IGET  (r0 I:okhttp3.Response) = (r3 I:okhttp3.Response$Builder) okhttp3.Response.Builder.networkResponse okhttp3.Response \l0x0025: IPUT  (r0 I:okhttp3.Response), (r2 I:okhttp3.Response) okhttp3.Response.networkResponse okhttp3.Response \l0x0027: IGET  (r0 I:okhttp3.Response) = (r3 I:okhttp3.Response$Builder) okhttp3.Response.Builder.cacheResponse okhttp3.Response \l0x0029: IPUT  (r0 I:okhttp3.Response), (r2 I:okhttp3.Response) okhttp3.Response.cacheResponse okhttp3.Response \l0x002b: IGET  (r0 I:okhttp3.Response) = (r3 I:okhttp3.Response$Builder) okhttp3.Response.Builder.priorResponse okhttp3.Response \l0x002d: IPUT  (r0 I:okhttp3.Response), (r2 I:okhttp3.Response) okhttp3.Response.priorResponse okhttp3.Response \l0x002f: IGET  (r0 I:long) = (r3 I:okhttp3.Response$Builder) okhttp3.Response.Builder.sentRequestAtMillis long \l0x0031: IPUT  (r0 I:long), (r2 I:okhttp3.Response) okhttp3.Response.sentRequestAtMillis long \l0x0033: IGET  (r0 I:long) = (r3 I:okhttp3.Response$Builder) okhttp3.Response.Builder.receivedResponseAtMillis long \l0x0035: IPUT  (r0 I:long), (r2 I:okhttp3.Response) okhttp3.Response.receivedResponseAtMillis long \l}"];
Node_1 [shape=record,label="{1\:\ 0x0037|0x0037: RETURN   \l}"];
MethodNode[shape=record,label="{void okhttp3.Response.\<init\>((r2 'this' I:okhttp3.Response A[IMMUTABLE_TYPE, THIS]), (r3 I:okhttp3.Response$Builder A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

