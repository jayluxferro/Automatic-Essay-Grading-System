digraph "CFG forokhttp3.MultipartBody.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"multipart\/mixed\" \l0x0002: INVOKE  (r0 I:okhttp3.MediaType) = (r0 I:java.lang.String) okhttp3.MediaType.get(java.lang.String):okhttp3.MediaType type: STATIC \l0x0006: SPUT  (r0 I:okhttp3.MediaType) okhttp3.MultipartBody.MIXED okhttp3.MediaType \l0x0008: CONST_STR  (r0 I:java.lang.String) =  \"multipart\/alternative\" \l0x000a: INVOKE  (r0 I:okhttp3.MediaType) = (r0 I:java.lang.String) okhttp3.MediaType.get(java.lang.String):okhttp3.MediaType type: STATIC \l0x000e: SPUT  (r0 I:okhttp3.MediaType) okhttp3.MultipartBody.ALTERNATIVE okhttp3.MediaType \l0x0010: CONST_STR  (r0 I:java.lang.String) =  \"multipart\/digest\" \l0x0012: INVOKE  (r0 I:okhttp3.MediaType) = (r0 I:java.lang.String) okhttp3.MediaType.get(java.lang.String):okhttp3.MediaType type: STATIC \l0x0016: SPUT  (r0 I:okhttp3.MediaType) okhttp3.MultipartBody.DIGEST okhttp3.MediaType \l0x0018: CONST_STR  (r0 I:java.lang.String) =  \"multipart\/parallel\" \l0x001a: INVOKE  (r0 I:okhttp3.MediaType) = (r0 I:java.lang.String) okhttp3.MediaType.get(java.lang.String):okhttp3.MediaType type: STATIC \l0x001e: SPUT  (r0 I:okhttp3.MediaType) okhttp3.MultipartBody.PARALLEL okhttp3.MediaType \l0x0020: CONST_STR  (r0 I:java.lang.String) =  \"multipart\/form\-data\" \l0x0022: INVOKE  (r0 I:okhttp3.MediaType) = (r0 I:java.lang.String) okhttp3.MediaType.get(java.lang.String):okhttp3.MediaType type: STATIC \l0x0026: SPUT  (r0 I:okhttp3.MediaType) okhttp3.MultipartBody.FORM okhttp3.MediaType \l0x0028: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0029: NEW_ARRAY  (r1 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x002b: FILL_ARRAY  (r1 I:?[boolean, byte][]), data: [58, 32] \l0x002e: SPUT  (r1 I:byte[]) okhttp3.MultipartBody.COLONSPACE byte[] \l0x0030: NEW_ARRAY  (r1 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0032: FILL_ARRAY  (r1 I:?[boolean, byte][]), data: [13, 10] \l0x0035: SPUT  (r1 I:byte[]) okhttp3.MultipartBody.CRLF byte[] \l0x0037: NEW_ARRAY  (r0 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0039: FILL_ARRAY  (r0 I:?[boolean, byte][]), data: [45, 45] \l0x003c: SPUT  (r0 I:byte[]) okhttp3.MultipartBody.DASHDASH byte[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x003e|0x003e: RETURN   \l}"];
MethodNode[shape=record,label="{static void okhttp3.MultipartBody.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

