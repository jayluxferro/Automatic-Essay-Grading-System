digraph "CFG forokhttp3.MultipartBody.contentLength()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:long) = (r4 I:okhttp3.MultipartBody) okhttp3.MultipartBody.contentLength long \l0x0002: CONST  (r2 I:?[long, double]) = (\-1 ?[long, double]) \l0x0004: CMP_L  (r2 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: RETURN  (r0 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000b: INVOKE  (r0 I:long) = \l  (r4 I:okhttp3.MultipartBody)\l  (r0 I:okio.BufferedSink)\l  (r1 I:boolean)\l okhttp3.MultipartBody.writeOrCountBytes(okio.BufferedSink, boolean):long type: DIRECT \l0x000f: IPUT  (r0 I:long), (r4 I:okhttp3.MultipartBody) okhttp3.MultipartBody.contentLength long \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: RETURN  (r0 I:long) \l}"];
MethodNode[shape=record,label="{public long okhttp3.MultipartBody.contentLength((r4 'this' I:okhttp3.MultipartBody A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

