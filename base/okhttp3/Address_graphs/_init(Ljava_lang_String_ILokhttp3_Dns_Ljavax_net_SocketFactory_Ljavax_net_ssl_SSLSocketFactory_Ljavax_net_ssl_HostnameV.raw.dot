digraph "CFG forokhttp3.Address.\<init\>(Ljava\/lang\/String;ILokhttp3\/Dns;Ljavax\/net\/SocketFactory;Ljavax\/net\/ssl\/SSLSocketFactory;Ljavax\/net\/ssl\/HostnameVerifier;Lokhttp3\/CertificatePinner;Lokhttp3\/Authenticator;Ljava\/net\/Proxy;Ljava\/util\/List;Ljava\/util\/List;Ljava\/net\/ProxySelector;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:okhttp3.HttpUrl$Builder) =  okhttp3.HttpUrl$Builder \l0x0005: INVOKE  (r0 I:okhttp3.HttpUrl$Builder) okhttp3.HttpUrl.Builder.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST_STR  (r1 I:java.lang.String) =  \"https\" \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: CONST_STR  (r1 I:java.lang.String) =  \"http\" \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: INVOKE  (r0 I:okhttp3.HttpUrl$Builder) = (r0 I:okhttp3.HttpUrl$Builder), (r1 I:java.lang.String) okhttp3.HttpUrl.Builder.scheme(java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l0x0013: INVOKE  (r3 I:okhttp3.HttpUrl$Builder) = (r0 I:okhttp3.HttpUrl$Builder), (r3 I:java.lang.String) okhttp3.HttpUrl.Builder.host(java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l0x0017: INVOKE  (r3 I:okhttp3.HttpUrl$Builder) = (r3 I:okhttp3.HttpUrl$Builder), (r4 I:int) okhttp3.HttpUrl.Builder.port(int):okhttp3.HttpUrl$Builder type: VIRTUAL \l0x001b: INVOKE  (r3 I:okhttp3.HttpUrl) = (r3 I:okhttp3.HttpUrl$Builder) okhttp3.HttpUrl.Builder.build():okhttp3.HttpUrl type: VIRTUAL \l0x001f: IPUT  (r3 I:okhttp3.HttpUrl), (r2 I:okhttp3.Address) okhttp3.Address.url okhttp3.HttpUrl \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0072 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: IPUT  (r5 I:okhttp3.Dns), (r2 I:okhttp3.Address) okhttp3.Address.dns okhttp3.Dns \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x006a \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: IPUT  (r6 I:javax.net.SocketFactory), (r2 I:okhttp3.Address) okhttp3.Address.socketFactory javax.net.SocketFactory \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0062 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: IPUT  (r10 I:okhttp3.Authenticator), (r2 I:okhttp3.Address) okhttp3.Address.proxyAuthenticator okhttp3.Authenticator \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x005a \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: INVOKE  (r3 I:java.util.List) = (r12 I:java.util.List) okhttp3.internal.Util.immutableList(java.util.List):java.util.List type: STATIC \l0x0033: IPUT  \l  (r3 I:java.util.List\<okhttp3.Protocol\>)\l  (r2 I:okhttp3.Address)\l okhttp3.Address.protocols java.util.List \l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|0x0035: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0052 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: INVOKE  (r3 I:java.util.List) = (r13 I:java.util.List) okhttp3.internal.Util.immutableList(java.util.List):java.util.List type: STATIC \l0x003b: IPUT  \l  (r3 I:java.util.List\<okhttp3.ConnectionSpec\>)\l  (r2 I:okhttp3.Address)\l okhttp3.Address.connectionSpecs java.util.List \l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|0x003d: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x004a \l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: IPUT  (r14 I:java.net.ProxySelector), (r2 I:okhttp3.Address) okhttp3.Address.proxySelector java.net.ProxySelector \l0x0041: IPUT  (r11 I:java.net.Proxy), (r2 I:okhttp3.Address) okhttp3.Address.proxy java.net.Proxy \l0x0043: IPUT  \l  (r7 I:javax.net.ssl.SSLSocketFactory)\l  (r2 I:okhttp3.Address)\l okhttp3.Address.sslSocketFactory javax.net.ssl.SSLSocketFactory \l0x0045: IPUT  \l  (r8 I:javax.net.ssl.HostnameVerifier)\l  (r2 I:okhttp3.Address)\l okhttp3.Address.hostnameVerifier javax.net.ssl.HostnameVerifier \l0x0047: IPUT  (r9 I:okhttp3.CertificatePinner), (r2 I:okhttp3.Address) okhttp3.Address.certificatePinner okhttp3.CertificatePinner \l}"];
Node_17 [shape=record,label="{17\:\ 0x0049|0x0049: RETURN   \l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|0x004a: NEW_INSTANCE  (r3 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x004c: CONST_STR  (r4 I:java.lang.String) =  \"proxySelector == null\" \l0x004e: INVOKE  \l  (r3 I:java.lang.NullPointerException)\l  (r4 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0051|0x0051: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0052|0x0052: NEW_INSTANCE  (r3 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x0054: CONST_STR  (r4 I:java.lang.String) =  \"connectionSpecs == null\" \l0x0056: INVOKE  \l  (r3 I:java.lang.NullPointerException)\l  (r4 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x0059|0x0059: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_22 [shape=record,label="{22\:\ 0x005a|0x005a: NEW_INSTANCE  (r3 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x005c: CONST_STR  (r4 I:java.lang.String) =  \"protocols == null\" \l0x005e: INVOKE  \l  (r3 I:java.lang.NullPointerException)\l  (r4 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x0061|0x0061: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0062|0x0062: NEW_INSTANCE  (r3 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x0064: CONST_STR  (r4 I:java.lang.String) =  \"proxyAuthenticator == null\" \l0x0066: INVOKE  \l  (r3 I:java.lang.NullPointerException)\l  (r4 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_25 [shape=record,label="{25\:\ 0x0069|0x0069: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_26 [shape=record,label="{26\:\ 0x006a|0x006a: NEW_INSTANCE  (r3 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x006c: CONST_STR  (r4 I:java.lang.String) =  \"socketFactory == null\" \l0x006e: INVOKE  \l  (r3 I:java.lang.NullPointerException)\l  (r4 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_27 [shape=record,label="{27\:\ 0x0071|0x0071: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0072|0x0072: NEW_INSTANCE  (r3 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x0074: CONST_STR  (r4 I:java.lang.String) =  \"dns == null\" \l0x0076: INVOKE  \l  (r3 I:java.lang.NullPointerException)\l  (r4 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_29 [shape=record,label="{29\:\ 0x0079|0x0079: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void okhttp3.Address.\<init\>((r2 'this' I:okhttp3.Address A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:okhttp3.Dns A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:javax.net.SocketFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:javax.net.ssl.SSLSocketFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:javax.net.ssl.HostnameVerifier A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:okhttp3.CertificatePinner A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:okhttp3.Authenticator A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.net.Proxy A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.util.List\<okhttp3.Protocol\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.util.List\<okhttp3.ConnectionSpec\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:java.net.ProxySelector A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , , , , Annotation[RUNTIME, javax.annotation.Nullable, \{\}], Annotation[RUNTIME, javax.annotation.Nullable, \{\}], Annotation[RUNTIME, javax.annotation.Nullable, \{\}], , Annotation[RUNTIME, javax.annotation.Nullable, \{\}], , , \lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, I, Lokhttp3\/Dns;, Ljavax\/net\/SocketFactory;, Ljavax\/net\/ssl\/SSLSocketFactory;, Ljavax\/net\/ssl\/HostnameVerifier;, Lokhttp3\/CertificatePinner;, Lokhttp3\/Authenticator;, Ljava\/net\/Proxy;, Ljava\/util\/List\<, Lokhttp3\/Protocol;, \>;, Ljava\/util\/List\<, Lokhttp3\/ConnectionSpec;, \>;, Ljava\/net\/ProxySelector;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_28;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_26;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_24;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_22;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_28 -> Node_29;
}

