digraph "CFG forokhttp3.HttpUrl.Builder.parsePort(Ljava\/lang\/String;II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|SYNTHETIC\lSplitter:B:1:0x000b\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ NumberFormatException \-\> 0x001c \}\lSplitter:B:1:0x000b\l|int r10 = java.lang.Integer.parseInt(okhttp3.HttpUrl.canonicalize(r10, r11, r12, \"\", false, false, false, true, (java.nio.charset.Charset) null))     \/\/ Catch:\{ NumberFormatException \-\> 0x001c \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|if (r10 \<= 0) goto L_0x001b\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015}"];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r10 \> 65535) goto L_0x001b\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|RETURN\l|return r10\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|RETURN\l|return \-1\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|RETURN\l|return \-1\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lExcHandler: NumberFormatException (unused java.lang.NumberFormatException)\lSplitter:B:1:0x000b\l}"];
MethodNode[shape=record,label="{private static int okhttp3.HttpUrl.Builder.parsePort((r10v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_9 -> Node_8;
}

