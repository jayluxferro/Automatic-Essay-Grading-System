digraph "CFG forokhttp3.HttpUrl.Builder.host(Ljava\/lang\/String;)Lokhttp3\/HttpUrl$Builder;" {
subgraph cluster_Region_1537597336 {
label = "R(1:(2:(2:1|(2:(2:3|4)|(2:5|6)))|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1911237433 {
label = "R(2:(2:1|(2:(2:3|4)|(2:5|6)))|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_106460164 {
label = "IF [B:0:0x0000] THEN: R(2:1|(2:(2:3|4)|(2:5|6))) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r4 != null) goto L_0x0002\l}"];
subgraph cluster_Region_1218318806 {
label = "R(2:1|(2:(2:3|4)|(2:5|6)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|java.lang.String java.lang.String r0 = canonicalizeHost(r4, 0, r4.length())\l}"];
subgraph cluster_Region_1971323702 {
label = "R(2:(2:3|4)|(2:5|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1359635102 {
label = "IF [B:2:0x000b] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000b|if (r0 != null) goto L_0x000d\l}"];
subgraph cluster_Region_687375339 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000d|r3.host = r0\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|RETURN\l|return r3\l}"];
}
}
subgraph cluster_Region_2902785 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010}"];
Node_6 [shape=record,label="{6\:\ 0x0026|throw new java.lang.IllegalArgumentException(\"unexpected host: \" + r4)\l}"];
}
}
}
}
subgraph cluster_Region_674630366 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002e|throw new java.lang.NullPointerException(\"host == null\")\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ 0x0027}"];
MethodNode[shape=record,label="{public okhttp3.HttpUrl$Builder okhttp3.HttpUrl.Builder.host((r3v0 'this' okhttp3.HttpUrl$Builder A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_7[style=dashed];
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

