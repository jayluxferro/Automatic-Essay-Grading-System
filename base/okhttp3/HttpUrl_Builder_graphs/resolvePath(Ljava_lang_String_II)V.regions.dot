digraph "CFG forokhttp3.HttpUrl.Builder.resolvePath(Ljava\/lang\/String;II)V" {
subgraph cluster_Region_529587962 {
label = "R(1:(3:2|(1:7)(1:6)|(2:8|(4:10|11|14|(1:16)(0))(1:17)))(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_83895211 {
label = "IF [B:0:0x0000] THEN: R(3:2|(1:7)(1:6)|(2:8|(4:10|11|14|(1:16)(0))(1:17))) ELSE: R(0)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r11 != r12) goto L_0x0003\l}"];
subgraph cluster_Region_1132072227 {
label = "R(3:2|(1:7)(1:6)|(2:8|(4:10|11|14|(1:16)(0))(1:17)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|char char r0 = r10.charAt(r11)\l}"];
subgraph cluster_IfRegion_1554298114 {
label = "IF [B:3:0x000a, B:5:0x000e] THEN: R(1:7) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r0 == '\/') goto L_0x0020\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|ADDED_TO_REGION\l|if (r0 == '') goto L_0x0020\l}"];
subgraph cluster_Region_2131686514 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0020|r9.encodedPathSegments.clear()\lr9.encodedPathSegments.add(\"\")\lr11++\l}"];
}
subgraph cluster_Region_1009780100 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0011|r9.encodedPathSegments.set(r9.encodedPathSegments.size() \- 1, \"\")\l}"];
}
}
subgraph cluster_LoopRegion_634289142 {
label = "LOOP:0: (2:8|(4:10|11|14|(1:16)(0))(1:17))";
node [shape=record,color=blue];
subgraph cluster_Region_1801497690 {
label = "R(2:8|(4:10|11|14|(1:16)(0))(1:17))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002e|LOOP_START\lPHI: r11 \l  PHI: (r11v2 int) = (r11v1 int), (r11v5 int) binds: [B:22:0x002e, B:18:0x002e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x002e\-\>B:18:0x002e\l|int r5 = r11\l}"];
subgraph cluster_IfRegion_2029960242 {
label = "IF [B:9:0x002f] THEN: R(4:10|11|14|(1:16)(0)) ELSE: R(1:17)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002f|if (r5 \< r12) goto L_0x0031\l}"];
subgraph cluster_Region_1803466011 {
label = "R(4:10|11|14|(1:16)(0))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0031|int r11 = okhttp3.internal.Util.delimiterOffset(r10, r5, r12, \"\/\")\l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|boolean r0 = r11 \< r12\l}"];
Node_14 [shape=record,label="{14\:\ 0x003c|PHI: r0 \l  PHI: (r0v1 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|push(r10, r5, r11, r0, true)\l}"];
subgraph cluster_IfRegion_311099859 {
label = "IF [B:15:0x0044] THEN: R(1:16) ELSE: R(0)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0044|if (r0 == true) goto L_0x0046\l}"];
subgraph cluster_Region_559356319 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0046|r11++\l}"];
}
subgraph cluster_Region_703775907 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_366143548 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0049|RETURN\l|return\l}"];
}
}
}
}
}
subgraph cluster_Region_1133846715 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000c}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0039}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x003b}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x002e|LOOP_END\lSYNTHETIC\lPHI: r11 \l  PHI: (r11v5 int) = (r11v4 int), (r11v6 int) binds: [B:20:0x002e, B:21:0x002e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x002e\-\>B:18:0x002e\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0049|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x002e|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x002e|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x002e|SYNTHETIC\lPHI: r11 \l  PHI: (r11v1 int) = (r11v7 int), (r11v0 int) binds: [B:7:0x0020, B:6:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{private void okhttp3.HttpUrl.Builder.resolvePath((r9v0 'this' okhttp3.HttpUrl$Builder A[IMMUTABLE_TYPE, THIS]), (r10v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_22;
Node_6 -> Node_22;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_19[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_20[style=dashed];
Node_16 -> Node_21;
Node_4 -> Node_5;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_18 -> Node_8;
Node_19 -> Node_17;
Node_20 -> Node_18;
Node_21 -> Node_18;
Node_22 -> Node_8;
}

