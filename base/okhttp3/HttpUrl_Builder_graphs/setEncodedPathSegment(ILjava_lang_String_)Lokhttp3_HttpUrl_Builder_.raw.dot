digraph "CFG forokhttp3.HttpUrl.Builder.setEncodedPathSegment(ILjava\/lang\/String;)Lokhttp3\/HttpUrl$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x003c \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  (r2 I:int) = (r11 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0007: CONST_STR  (r3 I:java.lang.String) =  \" \"\<\>^`\{\}\|\/?#\" \l0x0009: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000a: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x000f: INVOKE  (r0 I:java.lang.String) = \l  (r0 I:java.lang.String)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:java.lang.String)\l  (r4 I:boolean)\l  (r5 I:boolean)\l  (r6 I:boolean)\l  (r7 I:boolean)\l  (r8 I:java.nio.charset.Charset)\l okhttp3.HttpUrl.canonicalize(java.lang.String, int, int, java.lang.String, boolean, boolean, boolean, boolean, java.nio.charset.Charset):java.lang.String type: STATIC \l0x0013: IGET  (r1 I:java.util.List\<java.lang.String\>) = (r9 I:okhttp3.HttpUrl$Builder) okhttp3.HttpUrl.Builder.encodedPathSegments java.util.List \l0x0015: INVOKE  (r1 I:java.util.List), (r10 I:int), (r0 I:java.lang.Object) java.util.List.set(int, java.lang.Object):java.lang.Object type: INTERFACE \l0x0018: INVOKE  (r10 I:boolean) = (r9 I:okhttp3.HttpUrl$Builder), (r0 I:java.lang.String) okhttp3.HttpUrl.Builder.isDot(java.lang.String):boolean type: DIRECT \l}"];
Node_2 [shape=record,label="{2\:\ 0x001c|0x001c: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0025 \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: INVOKE  (r10 I:boolean) = (r9 I:okhttp3.HttpUrl$Builder), (r0 I:java.lang.String) okhttp3.HttpUrl.Builder.isDotDot(java.lang.String):boolean type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0025 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: RETURN  (r9 I:okhttp3.HttpUrl$Builder) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: NEW_INSTANCE  (r10 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0027: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0029: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002c: CONST_STR  (r1 I:java.lang.String) =  \"unexpected path segment: \" \l0x002e: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0031: INVOKE  (r0 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0034: INVOKE  (r11 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0038: INVOKE  \l  (r10 I:java.lang.IllegalArgumentException)\l  (r11 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x003b|0x003b: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|0x003c: NEW_INSTANCE  (r10 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x003e: CONST_STR  (r11 I:java.lang.String) =  \"encodedPathSegment == null\" \l0x0040: INVOKE  \l  (r10 I:java.lang.NullPointerException)\l  (r11 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0043|0x0043: THROW  (r10 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public okhttp3.HttpUrl$Builder okhttp3.HttpUrl.Builder.setEncodedPathSegment((r9 'this' I:okhttp3.HttpUrl$Builder A[IMMUTABLE_TYPE, THIS]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_8;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

