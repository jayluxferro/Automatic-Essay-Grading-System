digraph "CFG forokhttp3.HttpUrl.Builder.removeAllCanonicalQueryParameters(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<java.lang.String\>) = (r3 I:okhttp3.HttpUrl$Builder) okhttp3.HttpUrl.Builder.encodedQueryNamesAndValues java.util.List \l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0006: ARITH  (r0 I:int) = (r0 I:int) + (\-2 int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:9:0x0031 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r1 I:java.util.List\<java.lang.String\>) = (r3 I:okhttp3.HttpUrl$Builder) okhttp3.HttpUrl.Builder.encodedQueryNamesAndValues java.util.List \l0x000c: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0010: INVOKE  (r1 I:boolean) = (r4 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002e \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IGET  (r1 I:java.util.List\<java.lang.String\>) = (r3 I:okhttp3.HttpUrl$Builder) okhttp3.HttpUrl.Builder.encodedQueryNamesAndValues java.util.List \l0x0018: ARITH  (r2 I:int) = (r0 I:int) + (1 int) \l0x001a: INVOKE  (r1 I:java.util.List), (r2 I:int) java.util.List.remove(int):java.lang.Object type: INTERFACE \l0x001d: IGET  (r1 I:java.util.List\<java.lang.String\>) = (r3 I:okhttp3.HttpUrl$Builder) okhttp3.HttpUrl.Builder.encodedQueryNamesAndValues java.util.List \l0x001f: INVOKE  (r1 I:java.util.List), (r0 I:int) java.util.List.remove(int):java.lang.Object type: INTERFACE \l0x0022: IGET  (r1 I:java.util.List\<java.lang.String\>) = (r3 I:okhttp3.HttpUrl$Builder) okhttp3.HttpUrl.Builder.encodedQueryNamesAndValues java.util.List \l0x0024: INVOKE  (r1 I:boolean) = (r1 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0028|0x0028: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002e \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002b: IPUT  \l  (r4 I:java.util.List\<java.lang.String\>)\l  (r3 I:okhttp3.HttpUrl$Builder)\l okhttp3.HttpUrl.Builder.encodedQueryNamesAndValues java.util.List \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: ARITH  (r0 I:int) = (r0 I:int) + (\-2 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: RETURN   \l}"];
MethodNode[shape=record,label="{private void okhttp3.HttpUrl.Builder.removeAllCanonicalQueryParameters((r3 'this' I:okhttp3.HttpUrl$Builder A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_1;
}

