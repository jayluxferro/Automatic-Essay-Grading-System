digraph "CFG forokhttp3.HttpUrl.Builder.query(Ljava\/lang\/String;)Lokhttp3\/HttpUrl$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0012 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST_STR  (r1 I:java.lang.String) =  \" \"'\<\>#\" \l0x0004: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0008: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0009: INVOKE  (r7 I:java.lang.String) = \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r2 I:boolean)\l  (r3 I:boolean)\l  (r4 I:boolean)\l  (r5 I:boolean)\l okhttp3.HttpUrl.canonicalize(java.lang.String, java.lang.String, boolean, boolean, boolean, boolean):java.lang.String type: STATIC \l0x000d: INVOKE  (r7 I:java.util.List) = (r7 I:java.lang.String) okhttp3.HttpUrl.queryStringToNamesAndValues(java.lang.String):java.util.List type: STATIC \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IPUT  \l  (r7 I:java.util.List\<java.lang.String\>)\l  (r6 I:okhttp3.HttpUrl$Builder)\l okhttp3.HttpUrl.Builder.encodedQueryNamesAndValues java.util.List \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: RETURN  (r6 I:okhttp3.HttpUrl$Builder) \l}"];
MethodNode[shape=record,label="{public okhttp3.HttpUrl$Builder okhttp3.HttpUrl.Builder.query((r6 'this' I:okhttp3.HttpUrl$Builder A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

