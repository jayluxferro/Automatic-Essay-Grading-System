digraph "CFG forokhttp3.HttpUrl.Builder.resolvePath(Ljava\/lang\/String;II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r11 != r12) goto L_0x0003\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|RETURN\l|return\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|char r0 = r10.charAt(r11)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r0 == '\/') goto L_0x0020\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r0 != '') goto L_0x0011\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|r9.encodedPathSegments.set(r9.encodedPathSegments.size() \- 1, \"\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|r9.encodedPathSegments.clear()\lr9.encodedPathSegments.add(\"\")\lint r11 = r11 + 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|LOOP_START\lPHI: r11 \l  PHI: (r11v2 int) = (r11v1 int), (r11v5 int) binds: [B:22:0x002e, B:18:0x002e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x002e\-\>B:18:0x002e\l|r5 = r11\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|if (r5 \>= r12) goto L_0x0049\l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|int r11 = okhttp3.internal.Util.delimiterOffset(r10, r5, r12, \"\/\")\l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|if (r11 \>= r12) goto L_0x003b\l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|r0 = true\l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|r0 = false\l}"];
Node_14 [shape=record,label="{14\:\ 0x003c|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v2 boolean), (r0v3 boolean) binds: [B:13:0x003b, B:12:0x0039] A[DONT_GENERATE, DONT_INLINE]\l|push(r10, r5, r11, r0, true)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|if (r0 == false) goto L_0x002e\l}"];
Node_16 [shape=record,label="{16\:\ 0x0046|int r11 = r11 + 1\l}"];
Node_17 [shape=record,label="{17\:\ 0x0049|RETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ 0x002e|LOOP_END\lSYNTHETIC\lPHI: r11 \l  PHI: (r11v5 int) = (r11v4 int), (r11v6 int) binds: [B:20:0x002e, B:21:0x002e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x002e\-\>B:18:0x002e\l}"];
Node_19 [shape=record,label="{19\:\ 0x0049|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x002e|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x002e|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x002e|SYNTHETIC\lPHI: r11 \l  PHI: (r11v1 int) = (r11v7 int), (r11v0 int) binds: [B:7:0x0020, B:6:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{private void okhttp3.HttpUrl.Builder.resolvePath((r9v0 'this' okhttp3.HttpUrl$Builder A[IMMUTABLE_TYPE, THIS]), (r10v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_22;
Node_7 -> Node_22;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_19;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_21;
Node_18 -> Node_8;
Node_19 -> Node_17;
Node_20 -> Node_18;
Node_21 -> Node_18;
Node_22 -> Node_8;
}

