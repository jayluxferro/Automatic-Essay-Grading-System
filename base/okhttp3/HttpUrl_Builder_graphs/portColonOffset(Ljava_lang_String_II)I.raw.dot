digraph "CFG forokhttp3.HttpUrl.Builder.portColonOffset(Ljava\/lang\/String;II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:12:0x001f \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:char) = (r2 I:java.lang.String), (r3 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x0006: CONST  (r1 I:?[int, float, short, byte, char]) = (58 ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001e \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: CONST  (r1 I:?[int, float, short, byte, char]) = (91 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:10:0x001b \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: INVOKE  (r0 I:char) = (r2 I:java.lang.String), (r3 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x0017: CONST  (r1 I:?[int, float, short, byte, char]) = (93 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: RETURN  (r3 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|0x001f: RETURN  (r4 I:int) \l}"];
MethodNode[shape=record,label="{private static int okhttp3.HttpUrl.Builder.portColonOffset((r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_12;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_10[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_6;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_0;
}

