digraph "CFG forokhttp3.Headers.names()Ljava\/util\/Set;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.TreeSet) =  java.util.TreeSet \l0x0002: SGET  (r1 I:java.util.Comparator) =  java.lang.String.CASE_INSENSITIVE_ORDER java.util.Comparator \l0x0004: INVOKE  (r0 I:java.util.TreeSet), (r1 I:java.util.Comparator) java.util.TreeSet.\<init\>(java.util.Comparator):void type: DIRECT \l0x0007: INVOKE  (r1 I:int) = (r4 I:okhttp3.Headers) okhttp3.Headers.size():int type: VIRTUAL \l0x000b: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: INVOKE  (r3 I:java.lang.String) = (r4 I:okhttp3.Headers), (r2 I:int) okhttp3.Headers.name(int):java.lang.String type: VIRTUAL \l0x0012: INVOKE  (r0 I:java.util.TreeSet), (r3 I:java.lang.Object) java.util.TreeSet.add(java.lang.Object):boolean type: VIRTUAL \l0x0015: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: INVOKE  (r0 I:java.util.Set) = (r0 I:java.util.Set) java.util.Collections.unmodifiableSet(java.util.Set):java.util.Set type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: RETURN  (r0 I:java.util.Set\<java.lang.String\>) \l}"];
MethodNode[shape=record,label="{public java.util.Set\<java.lang.String\> okhttp3.Headers.names((r4 'this' I:okhttp3.Headers A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/Set\<, Ljava\/lang\/String;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
Node_3 -> Node_4;
}

