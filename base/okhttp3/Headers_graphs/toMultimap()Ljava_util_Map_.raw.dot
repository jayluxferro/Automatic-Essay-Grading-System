digraph "CFG forokhttp3.Headers.toMultimap()Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.TreeMap) =  java.util.TreeMap \l0x0002: SGET  (r1 I:java.util.Comparator) =  java.lang.String.CASE_INSENSITIVE_ORDER java.util.Comparator \l0x0004: INVOKE  (r0 I:java.util.TreeMap), (r1 I:java.util.Comparator) java.util.TreeMap.\<init\>(java.util.Comparator):void type: DIRECT \l0x0007: INVOKE  (r1 I:int) = (r6 I:okhttp3.Headers) okhttp3.Headers.size():int type: VIRTUAL \l0x000b: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:6:0x0033 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: INVOKE  (r3 I:java.lang.String) = (r6 I:okhttp3.Headers), (r2 I:int) okhttp3.Headers.name(int):java.lang.String type: VIRTUAL \l0x0012: SGET  (r4 I:java.util.Locale) =  java.util.Locale.US java.util.Locale \l0x0014: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String), (r4 I:java.util.Locale) java.lang.String.toLowerCase(java.util.Locale):java.lang.String type: VIRTUAL \l0x0018: INVOKE  (r4 I:java.lang.Object) = (r0 I:java.util.Map), (r3 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x001c: CHECK_CAST  (r4 I:java.util.List) = (java.util.List) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0029 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: NEW_INSTANCE  (r4 I:java.util.ArrayList) =  java.util.ArrayList \l0x0022: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0023: INVOKE  (r4 I:java.util.ArrayList), (r5 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x0026: INVOKE  \l  (r0 I:java.util.Map)\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|0x0029: INVOKE  (r3 I:java.lang.String) = (r6 I:okhttp3.Headers), (r2 I:int) okhttp3.Headers.value(int):java.lang.String type: VIRTUAL \l0x002d: INVOKE  (r4 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0030: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0033|0x0033: RETURN  \l  (r0 I:java.util.Map\<java.lang.String, java.util.List\<java.lang.String\>\>)\l \l}"];
MethodNode[shape=record,label="{public java.util.Map\<java.lang.String, java.util.List\<java.lang.String\>\> okhttp3.Headers.toMultimap((r6 'this' I:okhttp3.Headers A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_1;
}

