digraph "CFG forokhttp3.Headers.of(Ljava\/util\/Map;)Lokhttp3\/Headers;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r7 == null) goto L_0x0089\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|java.lang.String[] r0 = new java.lang.String[(r7.size() * 2)]\ljava.util.Iterator r7 = r7.entrySet().iterator()\lr2 = 0\l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:1:0x0002, B:14:0x0053] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x0014\-\>B:14:0x0053\l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|if (r7.hasNext() == false) goto L_0x0083\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|java.util.Map$Entry r3 = r7.next()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|if (r3.getKey() == null) goto L_0x007b\l}"];
Node_6 [shape=record,label="{6\:\ 0x0026}"];
Node_7 [shape=record,label="{7\:\ 0x002a|if (r3.getValue() == null) goto L_0x007b\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|java.lang.String r4 = ((java.lang.String) r3.getKey()).trim()\ljava.lang.String r3 = ((java.lang.String) r3.getValue()).trim()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0044|if (r4.length() == 0) goto L_0x005c\l}"];
Node_10 [shape=record,label="{10\:\ 0x0046}"];
Node_11 [shape=record,label="{11\:\ 0x004b|if (r4.indexOf(0) != \-1) goto L_0x005c\l}"];
Node_12 [shape=record,label="{12\:\ 0x004d}"];
Node_13 [shape=record,label="{13\:\ 0x0051|if (r3.indexOf(0) != \-1) goto L_0x005c\l}"];
Node_14 [shape=record,label="{14\:\ 0x0053|LOOP_END\lLOOP:0: B:2:0x0014\-\>B:14:0x0053\l|r0[r2] = r4\lr0[r2 + 1] = r3\lint r2 = r2 + 2\l}"];
Node_15 [shape=record,label="{15\:\ 0x005c|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Unexpected header: \")\lr0.append(r4)\lr0.append(\": \")\lr0.append(r3)\l}"];
Node_16 [shape=record,label="{16\:\ 0x007a|throw new java.lang.IllegalArgumentException(r0.toString())\l}"];
Node_17 [shape=record,label="{17\:\ 0x007b}"];
Node_18 [shape=record,label="{18\:\ 0x0082|throw new java.lang.IllegalArgumentException(\"Headers cannot be null\")\l}"];
Node_19 [shape=record,label="{19\:\ 0x0083}"];
Node_20 [shape=record,label="{20\:\ 0x0088|RETURN\l|return new okhttp3.Headers(r0)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0089}"];
Node_22 [shape=record,label="{22\:\ 0x0090|throw new java.lang.NullPointerException(\"headers == null\")\l}"];
Node_23 [shape=record,label="{23\:\ 0x005c|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x007b|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x007b|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x005c|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x005c|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0083|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static okhttp3.Headers okhttp3.Headers.of((r7v0 java.util.Map\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;), Lokhttp3\/Headers;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_21;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_28;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_24;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_25;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_23;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_26;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_27;
Node_14 -> Node_2;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_23 -> Node_15;
Node_24 -> Node_17;
Node_25 -> Node_17;
Node_26 -> Node_15;
Node_27 -> Node_15;
Node_28 -> Node_19;
}

