digraph "CFG forokhttp3.Headers.byteCount()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|long r0 = (long) (r6.namesAndValues.length * 2)\lint r2 = r6.namesAndValues.length\lr3 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|LOOP_START\lPHI: r0 r3 \l  PHI: (r0v4 long) = (r0v3 long), (r0v5 long) binds: [B:0:0x0000, B:2:0x000c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:0:0x0000, B:2:0x000c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:2:0x000c\l|if (r3 \>= r2) goto L_0x0019\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|LOOP_END\lLOOP:0: B:1:0x000a\-\>B:2:0x000c\l|long r0 = r0 + ((long) r6.namesAndValues[r3].length())\lint r3 = r3 + 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|RETURN\l|return r0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public long okhttp3.Headers.byteCount((r6v0 'this' okhttp3.Headers A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_1;
Node_4 -> Node_3;
}

