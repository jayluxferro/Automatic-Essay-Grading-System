digraph "CFG forokhttp3.MediaType.charset(Ljava\/nio\/charset\/Charset;)Ljava\/nio\/charset\/Charset;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:java.lang.String) = (r1 I:okhttp3.MediaType) okhttp3.MediaType.charset java.lang.String A[Catch:\{ IllegalArgumentException \-\> 0x000c \}, TRY_ENTER]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000b A[Catch:\{ IllegalArgumentException \-\> 0x000c \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IGET  (r0 I:java.lang.String) = (r1 I:okhttp3.MediaType) okhttp3.MediaType.charset java.lang.String A[Catch:\{ IllegalArgumentException \-\> 0x000c \}]\l0x0006: INVOKE  (r0 I:java.nio.charset.Charset) = (r0 I:java.lang.String) java.nio.charset.Charset.forName(java.lang.String):java.nio.charset.Charset type: STATIC A[Catch:\{ IllegalArgumentException \-\> 0x000c \}]\l0x0009: NOP   A[TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: RETURN  (r2 I:java.nio.charset.Charset) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: RETURN  (r2 I:java.nio.charset.Charset) \l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lExcHandler: IllegalArgumentException null\lSplitter:B:0:0x0000\l}"];
MethodNode[shape=record,label="{public java.nio.charset.Charset okhttp3.MediaType.charset((r1 'this' I:okhttp3.MediaType A[IMMUTABLE_TYPE, THIS]), (r2 I:java.nio.charset.Charset A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\lAnnotation[RUNTIME, javax.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_7;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_7 -> Node_6;
}

