digraph "CFG forokhttp3.CacheControl.Builder.maxStale(ILjava\/util\/concurrent\/TimeUnit;)Lokhttp3\/CacheControl$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:7:0x0016 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CAST  (r0 I:long) = (long) (r3 I:int) \l0x0003: INVOKE  (r3 I:long) = (r4 I:java.util.concurrent.TimeUnit), (r0 I:long) java.util.concurrent.TimeUnit.toSeconds(long):long type: VIRTUAL \l0x0007: CONST  (r0 I:?[long, double]) = \l  (2147483647(0x7fffffff, double:1.060997895E\-314) ?[long, double])\l \l0x000a: CMP_L  (r0 I:int) = (r3 I:long), (r0 I:long) \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:4:0x0012 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: CAST  (r3 I:int) = (int) (r3 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IPUT  (r3 I:int), (r2 I:okhttp3.CacheControl$Builder) okhttp3.CacheControl.Builder.maxStaleSeconds int \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: RETURN  (r2 I:okhttp3.CacheControl$Builder) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0018: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001a: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001d: CONST_STR  (r1 I:java.lang.String) =  \"maxStale \< 0: \" \l0x001f: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0022: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0025: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0029: INVOKE  \l  (r4 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|0x002c: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public okhttp3.CacheControl$Builder okhttp3.CacheControl.Builder.maxStale((r2 'this' I:okhttp3.CacheControl$Builder A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.util.concurrent.TimeUnit A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_7;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

