digraph "CFG forokhttp3.RequestBody.2.writeTo(Lokio\/BufferedSink;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:byte[]) = (r3 I:okhttp3.RequestBody$2) okhttp3.RequestBody.2.val$content byte[] \l0x0002: IGET  (r1 I:int) = (r3 I:okhttp3.RequestBody$2) okhttp3.RequestBody.2.val$offset int \l0x0004: IGET  (r2 I:int) = (r3 I:okhttp3.RequestBody$2) okhttp3.RequestBody.2.val$byteCount int \l0x0006: INVOKE  \l  (r4 I:okio.BufferedSink)\l  (r0 I:byte[])\l  (r1 I:int)\l  (r2 I:int)\l okio.BufferedSink.write(byte[], int, int):okio.BufferedSink type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN   \l}"];
MethodNode[shape=record,label="{public void okhttp3.RequestBody.2.writeTo((r3 'this' I:okhttp3.RequestBody$2 A[IMMUTABLE_TYPE, THIS]), (r4 I:okio.BufferedSink A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

