digraph "CFG forokhttp3.TlsVersion.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:okhttp3.TlsVersion) =  okhttp3.TlsVersion \l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"TLS_1_3\" \l0x0004: CONST_STR  (r2 I:java.lang.String) =  \"TLSv1.3\" \l0x0006: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: INVOKE  \l  (r0 I:okhttp3.TlsVersion)\l  (r1 I:java.lang.String)\l  (r3 I:int)\l  (r2 I:java.lang.String)\l okhttp3.TlsVersion.\<init\>(java.lang.String, int, java.lang.String):void type: DIRECT \l0x000a: SPUT  (r0 I:okhttp3.TlsVersion) okhttp3.TlsVersion.TLS_1_3 okhttp3.TlsVersion \l0x000c: NEW_INSTANCE  (r0 I:okhttp3.TlsVersion) =  okhttp3.TlsVersion \l0x000e: CONST_STR  (r1 I:java.lang.String) =  \"TLS_1_2\" \l0x0010: CONST_STR  (r2 I:java.lang.String) =  \"TLSv1.2\" \l0x0012: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0013: INVOKE  \l  (r0 I:okhttp3.TlsVersion)\l  (r1 I:java.lang.String)\l  (r4 I:int)\l  (r2 I:java.lang.String)\l okhttp3.TlsVersion.\<init\>(java.lang.String, int, java.lang.String):void type: DIRECT \l0x0016: SPUT  (r0 I:okhttp3.TlsVersion) okhttp3.TlsVersion.TLS_1_2 okhttp3.TlsVersion \l0x0018: NEW_INSTANCE  (r0 I:okhttp3.TlsVersion) =  okhttp3.TlsVersion \l0x001a: CONST_STR  (r1 I:java.lang.String) =  \"TLS_1_1\" \l0x001c: CONST_STR  (r2 I:java.lang.String) =  \"TLSv1.1\" \l0x001e: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x001f: INVOKE  \l  (r0 I:okhttp3.TlsVersion)\l  (r1 I:java.lang.String)\l  (r5 I:int)\l  (r2 I:java.lang.String)\l okhttp3.TlsVersion.\<init\>(java.lang.String, int, java.lang.String):void type: DIRECT \l0x0022: SPUT  (r0 I:okhttp3.TlsVersion) okhttp3.TlsVersion.TLS_1_1 okhttp3.TlsVersion \l0x0024: NEW_INSTANCE  (r0 I:okhttp3.TlsVersion) =  okhttp3.TlsVersion \l0x0026: CONST_STR  (r1 I:java.lang.String) =  \"TLS_1_0\" \l0x0028: CONST_STR  (r2 I:java.lang.String) =  \"TLSv1\" \l0x002a: CONST  (r6 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x002b: INVOKE  \l  (r0 I:okhttp3.TlsVersion)\l  (r1 I:java.lang.String)\l  (r6 I:int)\l  (r2 I:java.lang.String)\l okhttp3.TlsVersion.\<init\>(java.lang.String, int, java.lang.String):void type: DIRECT \l0x002e: SPUT  (r0 I:okhttp3.TlsVersion) okhttp3.TlsVersion.TLS_1_0 okhttp3.TlsVersion \l0x0030: NEW_INSTANCE  (r0 I:okhttp3.TlsVersion) =  okhttp3.TlsVersion \l0x0032: CONST_STR  (r1 I:java.lang.String) =  \"SSL_3_0\" \l0x0034: CONST_STR  (r2 I:java.lang.String) =  \"SSLv3\" \l0x0036: CONST  (r7 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0037: INVOKE  \l  (r0 I:okhttp3.TlsVersion)\l  (r1 I:java.lang.String)\l  (r7 I:int)\l  (r2 I:java.lang.String)\l okhttp3.TlsVersion.\<init\>(java.lang.String, int, java.lang.String):void type: DIRECT \l0x003a: SPUT  (r0 I:okhttp3.TlsVersion) okhttp3.TlsVersion.SSL_3_0 okhttp3.TlsVersion \l0x003c: CONST  (r0 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x003d: NEW_ARRAY  (r0 I:okhttp3.TlsVersion[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: okhttp3.TlsVersion[] \l0x003f: SGET  (r1 I:okhttp3.TlsVersion) =  okhttp3.TlsVersion.TLS_1_3 okhttp3.TlsVersion \l0x0041: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0043: SGET  (r1 I:okhttp3.TlsVersion) =  okhttp3.TlsVersion.TLS_1_2 okhttp3.TlsVersion \l0x0045: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0047: SGET  (r1 I:okhttp3.TlsVersion) =  okhttp3.TlsVersion.TLS_1_1 okhttp3.TlsVersion \l0x0049: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x004b: SGET  (r1 I:okhttp3.TlsVersion) =  okhttp3.TlsVersion.TLS_1_0 okhttp3.TlsVersion \l0x004d: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r6 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x004f: SGET  (r1 I:okhttp3.TlsVersion) =  okhttp3.TlsVersion.SSL_3_0 okhttp3.TlsVersion \l0x0051: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0053: SPUT  (r0 I:okhttp3.TlsVersion[]) okhttp3.TlsVersion.$VALUES okhttp3.TlsVersion[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0055|0x0055: RETURN   \l}"];
MethodNode[shape=record,label="{static void okhttp3.TlsVersion.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

