digraph "CFG forokhttp3.TlsVersion.forJavaName(Ljava\/lang\/String;)Lokhttp3\/TlsVersion;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r3.hashCode()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r0 == 79201641) goto L_0x003a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r0 == 79923350) goto L_0x0030\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|switch(r0) \{\l    case \-503070503: goto L_0x0026;\l    case \-503070502: goto L_0x001c;\l    case \-503070501: goto L_0x0012;\l    default: goto L_0x0011;\l\}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012}"];
Node_6 [shape=record,label="{6\:\ 0x0018|if (r3.equals(\"TLSv1.3\") == false) goto L_0x0044\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|r0 = 0\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c}"];
Node_9 [shape=record,label="{9\:\ 0x0022|if (r3.equals(\"TLSv1.2\") == false) goto L_0x0044\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|r0 = 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026}"];
Node_12 [shape=record,label="{12\:\ 0x002c|if (r3.equals(\"TLSv1.1\") == false) goto L_0x0044\l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|r0 = 2\l}"];
Node_14 [shape=record,label="{14\:\ 0x0030}"];
Node_15 [shape=record,label="{15\:\ 0x0036|if (r3.equals(\"TLSv1\") == false) goto L_0x0044\l}"];
Node_16 [shape=record,label="{16\:\ 0x0038|r0 = 3\l}"];
Node_17 [shape=record,label="{17\:\ 0x003a}"];
Node_18 [shape=record,label="{18\:\ 0x0040|if (r3.equals(\"SSLv3\") == false) goto L_0x0044\l}"];
Node_19 [shape=record,label="{19\:\ 0x0042|r0 = 4\l}"];
Node_20 [shape=record,label="{20\:\ 0x0044|r0 = 65535\l}"];
Node_21 [shape=record,label="{21\:\ 0x0045|PHI: r0 \l  PHI: (r0v1 char) = (r0v3 char), (r0v6 char), (r0v9 char), (r0v12 char), (r0v15 char), (r0v18 char) binds: [B:20:0x0044, B:19:0x0042, B:16:0x0038, B:13:0x002e, B:10:0x0024, B:7:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|switch(r0) \{\l    case 0: goto L_0x006b;\l    case 1: goto L_0x0068;\l    case 2: goto L_0x0065;\l    case 3: goto L_0x0062;\l    case 4: goto L_0x005f;\l    default: goto L_0x0048;\l\}\l}"];
Node_22 [shape=record,label="{22\:\ 0x0048|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Unexpected TLS version: \")\lr1.append(r3)\l}"];
Node_23 [shape=record,label="{23\:\ 0x005e|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
Node_24 [shape=record,label="{24\:\ 0x005f}"];
Node_25 [shape=record,label="{25\:\ 0x0061|RETURN\l|return SSL_3_0\l}"];
Node_26 [shape=record,label="{26\:\ 0x0062}"];
Node_27 [shape=record,label="{27\:\ 0x0064|RETURN\l|return TLS_1_0\l}"];
Node_28 [shape=record,label="{28\:\ 0x0065}"];
Node_29 [shape=record,label="{29\:\ 0x0067|RETURN\l|return TLS_1_1\l}"];
Node_30 [shape=record,label="{30\:\ 0x0068}"];
Node_31 [shape=record,label="{31\:\ 0x006a|RETURN\l|return TLS_1_2\l}"];
Node_32 [shape=record,label="{32\:\ 0x006b}"];
Node_33 [shape=record,label="{33\:\ 0x006d|RETURN\l|return TLS_1_3\l}"];
MethodNode[shape=record,label="{public static okhttp3.TlsVersion okhttp3.TlsVersion.forJavaName((r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_4 -> Node_11;
Node_4 -> Node_20;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_20;
Node_7 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_20;
Node_10 -> Node_21;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_20;
Node_13 -> Node_21;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_24;
Node_21 -> Node_26;
Node_21 -> Node_28;
Node_21 -> Node_30;
Node_21 -> Node_32;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_32 -> Node_33;
}

