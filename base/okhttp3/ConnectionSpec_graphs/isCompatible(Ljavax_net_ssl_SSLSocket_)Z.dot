digraph "CFG forokhttp3.ConnectionSpec.isCompatible(Ljavax\/net\/ssl\/SSLSocket;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r4.tls != false) goto L_0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|RETURN\l|return false\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006}"];
Node_4 [shape=record,label="{4\:\ 0x0008|if (r4.tlsVersions == null) goto L_0x0019\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a}"];
Node_6 [shape=record,label="{6\:\ 0x0016|if (okhttp3.internal.Util.nonEmptyIntersection(okhttp3.internal.Util.NATURAL_ORDER, r4.tlsVersions, r5.getEnabledProtocols()) != false) goto L_0x0019\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|RETURN\l|return false\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019}"];
Node_9 [shape=record,label="{9\:\ 0x001b|if (r4.cipherSuites == null) goto L_?\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d}"];
Node_11 [shape=record,label="{11\:\ 0x0029|if (okhttp3.internal.Util.nonEmptyIntersection(okhttp3.CipherSuite.ORDER_BY_NAME, r4.cipherSuites, r5.getEnabledCipherSuites()) != false) goto L_?\l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|RETURN\l|return false\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean okhttp3.ConnectionSpec.isCompatible((r4v0 'this' okhttp3.ConnectionSpec A[IMMUTABLE_TYPE, THIS]), (r5v0 javax.net.ssl.SSLSocket A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
}

