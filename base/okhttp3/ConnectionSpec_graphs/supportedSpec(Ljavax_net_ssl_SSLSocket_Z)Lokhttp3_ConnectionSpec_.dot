digraph "CFG forokhttp3.ConnectionSpec.supportedSpec(Ljavax\/net\/ssl\/SSLSocket;Z)Lokhttp3\/ConnectionSpec;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4.cipherSuites == null) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|java.lang.String[] r0 = okhttp3.internal.Util.intersect(okhttp3.CipherSuite.ORDER_BY_NAME, r5.getEnabledCipherSuites(), r4.cipherSuites)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|java.lang.String[] r0 = r5.getEnabledCipherSuites()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|PHI: r0 \l  PHI: (r0v1 java.lang.String[]) = (r0v4 java.lang.String[]), (r0v6 java.lang.String[]) binds: [B:3:0x0011, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|if (r4.tlsVersions == null) goto L_0x0026\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|java.lang.String[] r1 = okhttp3.internal.Util.intersect(okhttp3.internal.Util.NATURAL_ORDER, r5.getEnabledProtocols(), r4.tlsVersions)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|java.lang.String[] r1 = r5.getEnabledProtocols()\l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|PHI: r1 \l  PHI: (r1v1 java.lang.String[]) = (r1v2 java.lang.String[]), (r1v4 java.lang.String[]) binds: [B:7:0x0026, B:6:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.String[] r5 = r5.getSupportedCipherSuites()\lint r2 = okhttp3.internal.Util.indexOf(okhttp3.CipherSuite.ORDER_BY_NAME, r5, \"TLS_FALLBACK_SCSV\")\l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|if (r6 == false) goto L_0x0041\l}"];
Node_10 [shape=record,label="{10\:\ 0x0038}"];
Node_11 [shape=record,label="{11\:\ 0x0039|if (r2 == \-1) goto L_0x0041\l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|java.lang.String[] r0 = okhttp3.internal.Util.concat(r0, r5[r2])\l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|PHI: r0 \l  PHI: (r0v2 java.lang.String[]) = (r0v1 java.lang.String[]), (r0v1 java.lang.String[]), (r0v3 java.lang.String[]) binds: [B:9:0x0036, B:11:0x0039, B:12:0x003b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0052|RETURN\l|return new okhttp3.ConnectionSpec.Builder(r4).cipherSuites(r0).tlsVersions(r1).build()\l}"];
MethodNode[shape=record,label="{private okhttp3.ConnectionSpec okhttp3.ConnectionSpec.supportedSpec((r4v0 'this' okhttp3.ConnectionSpec A[IMMUTABLE_TYPE, THIS]), (r5v0 javax.net.ssl.SSLSocket A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

