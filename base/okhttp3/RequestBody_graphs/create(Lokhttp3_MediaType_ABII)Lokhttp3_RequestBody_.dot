digraph "CFG forokhttp3.RequestBody.create(Lokhttp3\/MediaType;[BII)Lokhttp3\/RequestBody;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r8 == null) goto L_0x000f\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|okhttp3.internal.Util.checkOffsetAndCount((long) r8.length, (long) r9, (long) r10)\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|RETURN\l|return new okhttp3.RequestBody.C13832()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f}"];
Node_4 [shape=record,label="{4\:\ 0x0016|throw new java.lang.NullPointerException(\"content == null\")\l}"];
MethodNode[shape=record,label="{public static okhttp3.RequestBody okhttp3.RequestBody.create((r7v0 okhttp3.MediaType A[DONT_INLINE, IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 byte[] A[DONT_INLINE, IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[DONT_INLINE, IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[DONT_INLINE, IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, javax.annotation.Nullable, \{\}], , , \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

