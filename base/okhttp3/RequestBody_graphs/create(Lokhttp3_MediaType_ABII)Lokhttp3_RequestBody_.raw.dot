digraph "CFG forokhttp3.RequestBody.create(Lokhttp3\/MediaType;[BII)Lokhttp3\/RequestBody;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: ARRAY_LENGTH  (r0 I:int) = (r8 I:?[]) \l0x0003: CAST  (r1 I:long) = (long) (r0 I:int) \l0x0004: CAST  (r3 I:long) = (long) (r9 I:int) \l0x0005: CAST  (r5 I:long) = (long) (r10 I:int) \l0x0006: INVOKE  (r1 I:long), (r3 I:long), (r5 I:long) okhttp3.internal.Util.checkOffsetAndCount(long, long, long):void type: STATIC \l0x0009: NEW_INSTANCE  (r0 I:okhttp3.RequestBody$2) =  okhttp3.RequestBody$2 \l0x000b: INVOKE  \l  (r0 I:okhttp3.RequestBody$2)\l  (r7 I:okhttp3.MediaType)\l  (r10 I:int)\l  (r8 I:byte[])\l  (r9 I:int)\l okhttp3.RequestBody.2.\<init\>(okhttp3.MediaType, int, byte[], int):void type: DIRECT \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: RETURN  (r0 I:okhttp3.RequestBody) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: NEW_INSTANCE  (r7 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x0011: CONST_STR  (r8 I:java.lang.String) =  \"content == null\" \l0x0013: INVOKE  \l  (r7 I:java.lang.NullPointerException)\l  (r8 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: THROW  (r7 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static okhttp3.RequestBody okhttp3.RequestBody.create((r7 I:okhttp3.MediaType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, javax.annotation.Nullable, \{\}], , , \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

