digraph "CFG forokhttp3.RequestBody.create(Lokhttp3\/MediaType;[B)Lokhttp3\/RequestBody;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r3 I:?[]) \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: INVOKE  (r2 I:okhttp3.RequestBody) = \l  (r2 I:okhttp3.MediaType)\l  (r3 I:byte[])\l  (r1 I:int)\l  (r0 I:int)\l okhttp3.RequestBody.create(okhttp3.MediaType, byte[], int, int):okhttp3.RequestBody type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: RETURN  (r2 I:okhttp3.RequestBody) \l}"];
MethodNode[shape=record,label="{public static okhttp3.RequestBody okhttp3.RequestBody.create((r2 I:okhttp3.MediaType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, javax.annotation.Nullable, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

