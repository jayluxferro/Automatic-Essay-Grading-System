digraph "CFG forokhttp3.CertificatePinner.findMatchingPins(Ljava\/lang\/String;)Ljava\/util\/List;" {
subgraph cluster_Region_1467987896 {
label = "R(3:0|(2:3|(2:(1:7)|8)(0))|9)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.List java.util.List\<okhttp3.CertificatePinner.Pin\> r0 = java.util.Collections.emptyList()\ljava.util.Iterator r1 = r4.pins.iterator()\l}"];
subgraph cluster_LoopRegion_2016678132 {
label = "LOOP:0: (2:3|(2:(1:7)|8)(0))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000e|if (r1.hasNext() != false) goto L_0x0010\l}"];
subgraph cluster_Region_1860664039 {
label = "R(2:3|(2:(1:7)|8)(0))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0010|okhttp3.CertificatePinner$Pin r2 = r1.next()\l}"];
subgraph cluster_IfRegion_1912736051 {
label = "IF [B:4:0x001a] THEN: R(2:(1:7)|8) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001a|if (r2.matches(r5) != false) goto L_0x001c\l}"];
subgraph cluster_Region_103588224 {
label = "R(2:(1:7)|8)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1163162619 {
label = "IF [B:6:0x0020] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0020|if (r0.isEmpty() == true) goto L_0x0022\l}"];
subgraph cluster_Region_527492545 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0022|java.util.ArrayList r0 = new java.util.ArrayList\<\>()\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0027|PHI: r0 \l  PHI: (r0v3 java.util.List\<okhttp3.CertificatePinner$Pin\>) = (r0v1 java.util.List\<okhttp3.CertificatePinner$Pin\>), (r0v4 java.util.List\<okhttp3.CertificatePinner$Pin\>) binds: [B:6:0x0020, B:7:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|r0.add(r2)\l}"];
}
subgraph cluster_Region_125341842 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_9 [shape=record,label="{9\:\ 0x002b|RETURN\l|return r0\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000a|LOOP_START\lPHI: r0 \l  PHI: (r0v1 java.util.List\<okhttp3.CertificatePinner$Pin\>) = (r0v0 java.util.List\<okhttp3.CertificatePinner$Pin\>), (r0v2 java.util.List\<okhttp3.CertificatePinner$Pin\>) binds: [B:0:0x0000, B:10:0x000a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:10:0x000a\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001c}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x000a|LOOP_END\lSYNTHETIC\lPHI: r0 \l  PHI: (r0v2 java.util.List\<okhttp3.CertificatePinner$Pin\>) = (r0v1 java.util.List\<okhttp3.CertificatePinner$Pin\>), (r0v3 java.util.List\<okhttp3.CertificatePinner$Pin\>) binds: [B:12:0x000a, B:13:0x000a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:10:0x000a\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x002b|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x000a|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x000a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{java.util.List\<okhttp3.CertificatePinner$Pin\> okhttp3.CertificatePinner.findMatchingPins((r4v0 'this' okhttp3.CertificatePinner A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, ), Ljava\/util\/List\<, Lokhttp3\/CertificatePinner$Pin;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_11[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_12[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_13;
Node_1 -> Node_2;
Node_5 -> Node_6;
Node_10 -> Node_1;
Node_11 -> Node_9;
Node_12 -> Node_10;
Node_13 -> Node_10;
}

