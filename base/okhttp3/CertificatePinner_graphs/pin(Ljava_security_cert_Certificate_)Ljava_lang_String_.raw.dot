digraph "CFG forokhttp3.CertificatePinner.pin(Ljava\/security\/cert\/Certificate;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) java.security.cert.X509Certificate \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0020 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0006: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0009: CONST_STR  (r1 I:java.lang.String) =  \"sha256\/\" \l0x000b: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x000e: CHECK_CAST  (r2 I:java.security.cert.X509Certificate) = (java.security.cert.X509Certificate) (r2 I:?[OBJECT, ARRAY]) \l0x0010: INVOKE  (r2 I:okio.ByteString) = (r2 I:java.security.cert.X509Certificate) okhttp3.CertificatePinner.sha256(java.security.cert.X509Certificate):okio.ByteString type: STATIC \l0x0014: INVOKE  (r2 I:java.lang.String) = (r2 I:okio.ByteString) okio.ByteString.base64():java.lang.String type: VIRTUAL \l0x0018: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001b: INVOKE  (r2 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: RETURN  (r2 I:java.lang.String) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0022: CONST_STR  (r0 I:java.lang.String) =  \"Certificate pinning requires X509 certificates\" \l0x0024: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|0x0027: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static java.lang.String okhttp3.CertificatePinner.pin((r2 I:java.security.cert.Certificate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

