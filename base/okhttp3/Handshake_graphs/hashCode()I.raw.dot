digraph "CFG forokhttp3.Handshake.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.TlsVersion) = (r2 I:okhttp3.Handshake) okhttp3.Handshake.tlsVersion okhttp3.TlsVersion \l0x0002: INVOKE  (r0 I:int) = (r0 I:okhttp3.TlsVersion) okhttp3.TlsVersion.hashCode():int type: VIRTUAL \l0x0006: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (527(0x20f, float:7.38E\-43) ?[int, float, short, byte, char])\l \l0x0008: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x0009: ARITH  (r1 I:int) = (r1 I:int) * (31 int) \l0x000b: IGET  (r0 I:okhttp3.CipherSuite) = (r2 I:okhttp3.Handshake) okhttp3.Handshake.cipherSuite okhttp3.CipherSuite \l0x000d: INVOKE  (r0 I:int) = (r0 I:java.lang.Object) java.lang.Object.hashCode():int type: VIRTUAL \l0x0011: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x0012: ARITH  (r1 I:int) = (r1 I:int) * (31 int) \l0x0014: IGET  (r0 I:java.util.List\<java.security.cert.Certificate\>) = (r2 I:okhttp3.Handshake) okhttp3.Handshake.peerCertificates java.util.List \l0x0016: INVOKE  (r0 I:int) = (r0 I:java.util.List) java.util.List.hashCode():int type: INTERFACE \l0x001a: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x001b: ARITH  (r1 I:int) = (r1 I:int) * (31 int) \l0x001d: IGET  (r0 I:java.util.List\<java.security.cert.Certificate\>) = (r2 I:okhttp3.Handshake) okhttp3.Handshake.localCertificates java.util.List \l0x001f: INVOKE  (r0 I:int) = (r0 I:java.util.List) java.util.List.hashCode():int type: INTERFACE \l0x0023: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0024|0x0024: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{public int okhttp3.Handshake.hashCode((r2 'this' I:okhttp3.Handshake A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

