digraph "CFG forokhttp3.Handshake.\<init\>(Lokhttp3\/TlsVersion;Lokhttp3\/CipherSuite;Ljava\/util\/List;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0.tlsVersion = r1\lr0.cipherSuite = r2\lr0.peerCertificates = r3\lr0.localCertificates = r4\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void okhttp3.Handshake.\<init\>((r0v0 'this' okhttp3.Handshake A[IMMUTABLE_TYPE, THIS]), (r1v0 okhttp3.TlsVersion A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 okhttp3.CipherSuite A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.util.List\<java.security.cert.Certificate\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.util.List\<java.security.cert.Certificate\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lokhttp3\/TlsVersion;, Lokhttp3\/CipherSuite;, Ljava\/util\/List\<, Ljava\/security\/cert\/Certificate;, \>;, Ljava\/util\/List\<, Ljava\/security\/cert\/Certificate;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

