digraph "CFG forokhttp3.Request.\<init\>(Lokhttp3\/Request$Builder;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IGET  (r0 I:okhttp3.HttpUrl) = (r2 I:okhttp3.Request$Builder) okhttp3.Request.Builder.url okhttp3.HttpUrl \l0x0005: IPUT  (r0 I:okhttp3.HttpUrl), (r1 I:okhttp3.Request) okhttp3.Request.url okhttp3.HttpUrl \l0x0007: IGET  (r0 I:java.lang.String) = (r2 I:okhttp3.Request$Builder) okhttp3.Request.Builder.method java.lang.String \l0x0009: IPUT  (r0 I:java.lang.String), (r1 I:okhttp3.Request) okhttp3.Request.method java.lang.String \l0x000b: IGET  (r0 I:okhttp3.Headers$Builder) = (r2 I:okhttp3.Request$Builder) okhttp3.Request.Builder.headers okhttp3.Headers$Builder \l0x000d: INVOKE  (r0 I:okhttp3.Headers) = (r0 I:okhttp3.Headers$Builder) okhttp3.Headers.Builder.build():okhttp3.Headers type: VIRTUAL \l0x0011: IPUT  (r0 I:okhttp3.Headers), (r1 I:okhttp3.Request) okhttp3.Request.headers okhttp3.Headers \l0x0013: IGET  (r0 I:okhttp3.RequestBody) = (r2 I:okhttp3.Request$Builder) okhttp3.Request.Builder.body okhttp3.RequestBody \l0x0015: IPUT  (r0 I:okhttp3.RequestBody), (r1 I:okhttp3.Request) okhttp3.Request.body okhttp3.RequestBody \l0x0017: IGET  (r2 I:java.util.Map\<java.lang.Class\<?\>, java.lang.Object\>) = (r2 I:okhttp3.Request$Builder) okhttp3.Request.Builder.tags java.util.Map \l0x0019: INVOKE  (r2 I:java.util.Map) = (r2 I:java.util.Map) okhttp3.internal.Util.immutableMap(java.util.Map):java.util.Map type: STATIC \l0x001d: IPUT  \l  (r2 I:java.util.Map\<java.lang.Class\<?\>, java.lang.Object\>)\l  (r1 I:okhttp3.Request)\l okhttp3.Request.tags java.util.Map \l}"];
Node_1 [shape=record,label="{1\:\ 0x001f|0x001f: RETURN   \l}"];
MethodNode[shape=record,label="{void okhttp3.Request.\<init\>((r1 'this' I:okhttp3.Request A[IMMUTABLE_TYPE, THIS]), (r2 I:okhttp3.Request$Builder A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

