digraph "CFG forokhttp3.MultipartBody.Builder.build()Lokhttp3\/MultipartBody;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<okhttp3.MultipartBody$Part\>) = (r4 I:okhttp3.MultipartBody$Builder) okhttp3.MultipartBody.Builder.parts java.util.List \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: NEW_INSTANCE  (r0 I:okhttp3.MultipartBody) =  okhttp3.MultipartBody \l0x000a: IGET  (r1 I:okio.ByteString) = (r4 I:okhttp3.MultipartBody$Builder) okhttp3.MultipartBody.Builder.boundary okio.ByteString \l0x000c: IGET  (r2 I:okhttp3.MediaType) = (r4 I:okhttp3.MultipartBody$Builder) okhttp3.MultipartBody.Builder.type okhttp3.MediaType \l0x000e: IGET  (r3 I:java.util.List\<okhttp3.MultipartBody$Part\>) = (r4 I:okhttp3.MultipartBody$Builder) okhttp3.MultipartBody.Builder.parts java.util.List \l0x0010: INVOKE  \l  (r0 I:okhttp3.MultipartBody)\l  (r1 I:okio.ByteString)\l  (r2 I:okhttp3.MediaType)\l  (r3 I:java.util.List)\l okhttp3.MultipartBody.\<init\>(okio.ByteString, okhttp3.MediaType, java.util.List):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: RETURN  (r0 I:okhttp3.MultipartBody) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0016: CONST_STR  (r1 I:java.lang.String) =  \"Multipart body must have at least one part.\" \l0x0018: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public okhttp3.MultipartBody okhttp3.MultipartBody.Builder.build((r4 'this' I:okhttp3.MultipartBody$Builder A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

