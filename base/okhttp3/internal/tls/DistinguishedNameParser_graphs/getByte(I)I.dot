digraph "CFG forokhttp3.internal.tls.DistinguishedNameParser.getByte(I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r9 + 1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 \>= r8.length) goto L_0x0076\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|char r9 = r8.chars[r9]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|if (r9 \< '0') goto L_0x001c\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|if (r9 \> '9') goto L_0x001c\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|int r9 = r9 \- '0'\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|if (r9 \< 'a') goto L_0x0023\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|if (r9 \> 'f') goto L_0x0023\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|int r9 = r9 + 65449\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|if (r9 \< 'A') goto L_0x005d\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|if (r9 \> 'F') goto L_0x005d\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|int r9 = r9 + 65481\l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|PHI: r9 \l  PHI: (r9v3 int) = (r9v8 int), (r9v9 int), (r9v10 int) binds: [B:11:0x0027, B:8:0x0020, B:5:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|char r0 = r8.chars[r0]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|if (r0 \< '0') goto L_0x0033\l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|if (r0 \> '9') goto L_0x0033\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|int r0 = r0 \- '0'\l}"];
Node_16 [shape=record,label="{16\:\ 0x0033|if (r0 \< 'a') goto L_0x003a\l}"];
Node_17 [shape=record,label="{17\:\ 0x0035|if (r0 \> 'f') goto L_0x003a\l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|int r0 = r0 + 65449\l}"];
Node_19 [shape=record,label="{19\:\ 0x003a|if (r0 \< 'A') goto L_0x0044\l}"];
Node_20 [shape=record,label="{20\:\ 0x003c|if (r0 \> 'F') goto L_0x0044\l}"];
Node_21 [shape=record,label="{21\:\ 0x003e|int r0 = r0 + 65481\l}"];
Node_22 [shape=record,label="{22\:\ 0x0040|PHI: r0 \l  PHI: (r0v4 int) = (r0v7 int), (r0v8 int), (r0v9 int) binds: [B:21:0x003e, B:18:0x0037, B:15:0x0031] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0043|RETURN\l|return (r9 \<\< 4) + r0\l}"];
Node_24 [shape=record,label="{24\:\ 0x0044|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Malformed DN: \")\lr0.append(r8.f262dn)\l}"];
Node_25 [shape=record,label="{25\:\ 0x005c|throw new java.lang.IllegalStateException(r0.toString())\l}"];
Node_26 [shape=record,label="{26\:\ 0x005d|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Malformed DN: \")\lr0.append(r8.f262dn)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0075|throw new java.lang.IllegalStateException(r0.toString())\l}"];
Node_28 [shape=record,label="{28\:\ 0x0076|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Malformed DN: \")\lr0.append(r8.f262dn)\l}"];
Node_29 [shape=record,label="{29\:\ 0x008e|throw new java.lang.IllegalStateException(r0.toString())\l}"];
MethodNode[shape=record,label="{private int okhttp3.internal.tls.DistinguishedNameParser.getByte((r8v0 'this' okhttp3.internal.tls.DistinguishedNameParser A[IMMUTABLE_TYPE, THIS]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_28;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_12;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_12;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_26;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_26;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_22;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_22;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_28 -> Node_29;
}

