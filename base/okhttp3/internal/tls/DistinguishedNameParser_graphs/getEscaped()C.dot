digraph "CFG forokhttp3.internal.tls.DistinguishedNameParser.getEscaped()C" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3.pos = r3.pos + 1\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r3.pos == r3.length) goto L_0x0037\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|char r0 = r3.chars[r3.pos]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|if (r0 == ' ') goto L_0x0030\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016}"];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r0 == '%') goto L_0x0030\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a}"];
Node_7 [shape=record,label="{7\:\ 0x001c|if (r0 == '') goto L_0x0030\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e}"];
Node_9 [shape=record,label="{9\:\ 0x0020|if (r0 == '_') goto L_0x0030\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|switch(r0) \{\l    case 34: goto L_0x0030;\l    case 35: goto L_0x0030;\l    default: goto L_0x0025;\l\}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|switch(r0) \{\l    case 42: goto L_0x0030;\l    case 43: goto L_0x0030;\l    case 44: goto L_0x0030;\l    default: goto L_0x0028;\l\}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|switch(r0) \{\l    case 59: goto L_0x0030;\l    case 60: goto L_0x0030;\l    case 61: goto L_0x0030;\l    case 62: goto L_0x0030;\l    default: goto L_0x002b;\l\}\l}"];
Node_13 [shape=record,label="{13\:\ 0x002b}"];
Node_14 [shape=record,label="{14\:\ 0x002f|RETURN\l|return getUTF8()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0030}"];
Node_16 [shape=record,label="{16\:\ 0x0036|RETURN\l|return r3.chars[r3.pos]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0037|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Unexpected end of DN: \")\lr1.append(r3.f262dn)\l}"];
Node_18 [shape=record,label="{18\:\ 0x004f|throw new java.lang.IllegalStateException(r1.toString())\l}"];
MethodNode[shape=record,label="{private char okhttp3.internal.tls.DistinguishedNameParser.getEscaped((r3v0 'this' okhttp3.internal.tls.DistinguishedNameParser A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

