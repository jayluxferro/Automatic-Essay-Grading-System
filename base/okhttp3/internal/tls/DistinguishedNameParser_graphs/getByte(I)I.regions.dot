digraph "CFG forokhttp3.internal.tls.DistinguishedNameParser.getByte(I)I" {
subgraph cluster_Region_1539115230 {
label = "R(2:0|(2:(5:2|(1:5)(1:(1:8)(1:(2:26|27)(1:11)))|12|(1:15)(1:(1:18)(1:(2:24|25)(1:21)))|23)|(2:28|29))) | DECL_VAR: int null, int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r9 + 1\l}"];
subgraph cluster_Region_331003433 {
label = "R(2:(5:2|(1:5)(1:(1:8)(1:(2:26|27)(1:11)))|12|(1:15)(1:(1:18)(1:(2:24|25)(1:21)))|23)|(2:28|29))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_585277339 {
label = "IF [B:1:0x0004] THEN: R(5:2|(1:5)(1:(1:8)(1:(2:26|27)(1:11)))|12|(1:15)(1:(1:18)(1:(2:24|25)(1:21)))|23) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 \< r8.length) goto L_0x0006\l}"];
subgraph cluster_Region_1857063879 {
label = "R(5:2|(1:5)(1:(1:8)(1:(2:26|27)(1:11)))|12|(1:15)(1:(1:18)(1:(2:24|25)(1:21)))|23)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|char char r9 = r8.chars[r9]\l}"];
subgraph cluster_IfRegion_141788240 {
label = "IF [B:3:0x0016, B:4:0x0018] THEN: R(1:5) ELSE: R(1:(1:8)(1:(2:26|27)(1:11)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0016|if (r9 \>= '0') goto L_0x0018\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|ADDED_TO_REGION\l|if (r9 \<= '9') goto L_0x001a\l}"];
subgraph cluster_Region_993760888 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001a|int r9 = r9 \- '0'\l}"];
}
subgraph cluster_Region_652845635 {
label = "R(1:(1:8)(1:(2:26|27)(1:11))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_227788995 {
label = "IF [B:6:0x001c, B:7:0x001e] THEN: R(1:8) ELSE: R(1:(2:26|27)(1:11)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001c|if (r9 \>= 'a') goto L_0x001e\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|ADDED_TO_REGION\l|if (r9 \<= 'f') goto L_0x0020\l}"];
subgraph cluster_Region_1729594373 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0020|int r9 = r9 \- 'W'\l}"];
}
subgraph cluster_Region_623187459 {
label = "R(1:(2:26|27)(1:11)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1934806451 {
label = "IF [B:9:0x0023, B:10:0x0025] THEN: R(2:26|27) ELSE: R(1:11) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0023|if (r9 \< 'A') goto L_0x005d\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|ADDED_TO_REGION\l|if (r9 \> 'F') goto L_0x005d\l}"];
subgraph cluster_Region_1057204675 {
label = "R(2:26|27)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x005d}"];
Node_27 [shape=record,label="{27\:\ 0x0075|throw new java.lang.IllegalStateException(\"Malformed DN: \" + r8.f262dn)\l}"];
}
subgraph cluster_Region_339545591 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0027|int r9 = r9 \- '7'\l}"];
}
}
}
}
}
}
Node_12 [shape=record,label="{12\:\ 0x0029|PHI: r9 \l  PHI: (r9v3 int) = (r9v8 int), (r9v9 int), (r9v10 int) binds: [B:11:0x0027, B:8:0x0020, B:5:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|char char r0 = r8.chars[r0]\l}"];
subgraph cluster_IfRegion_133892707 {
label = "IF [B:13:0x002d, B:14:0x002f] THEN: R(1:15) ELSE: R(1:(1:18)(1:(2:24|25)(1:21)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x002d|if (r0 \>= '0') goto L_0x002f\l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|ADDED_TO_REGION\l|if (r0 \<= '9') goto L_0x0031\l}"];
subgraph cluster_Region_1553436981 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0031|int r0 = r0 \- '0'\l}"];
}
subgraph cluster_Region_2035174388 {
label = "R(1:(1:18)(1:(2:24|25)(1:21))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_969797697 {
label = "IF [B:16:0x0033, B:17:0x0035] THEN: R(1:18) ELSE: R(1:(2:24|25)(1:21)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0033|if (r0 \>= 'a') goto L_0x0035\l}"];
Node_17 [shape=record,label="{17\:\ 0x0035|ADDED_TO_REGION\l|if (r0 \<= 'f') goto L_0x0037\l}"];
subgraph cluster_Region_1164120122 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0037|int r0 = r0 \- 'W'\l}"];
}
subgraph cluster_Region_308155684 {
label = "R(1:(2:24|25)(1:21)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_437564135 {
label = "IF [B:19:0x003a, B:20:0x003c] THEN: R(2:24|25) ELSE: R(1:21) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x003a|if (r0 \< 'A') goto L_0x0044\l}"];
Node_20 [shape=record,label="{20\:\ 0x003c|ADDED_TO_REGION\l|if (r0 \> 'F') goto L_0x0044\l}"];
subgraph cluster_Region_524717154 {
label = "R(2:24|25)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0044}"];
Node_25 [shape=record,label="{25\:\ 0x005c|throw new java.lang.IllegalStateException(\"Malformed DN: \" + r8.f262dn)\l}"];
}
subgraph cluster_Region_2062194345 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x003e|int r0 = r0 \- '7'\l}"];
}
}
}
}
}
}
Node_23 [shape=record,label="{23\:\ 0x0043|RETURN\l|return (r9 \<\< 4) + r0\l}"];
}
}
subgraph cluster_Region_1034511352 {
label = "R(2:28|29)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0076}"];
Node_29 [shape=record,label="{29\:\ 0x008e|throw new java.lang.IllegalStateException(\"Malformed DN: \" + r8.f262dn)\l}"];
}
}
}
Node_22 [shape=record,color=red,label="{22\:\ 0x0040|PHI: r0 \l  PHI: (r0v4 int) = (r0v7 int), (r0v8 int), (r0v9 int) binds: [B:21:0x003e, B:18:0x0037, B:15:0x0031] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{private int okhttp3.internal.tls.DistinguishedNameParser.getByte((r8v0 'this' okhttp3.internal.tls.DistinguishedNameParser A[IMMUTABLE_TYPE, THIS]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_28[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_26;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_26;
Node_26 -> Node_27;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_16[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_16 -> Node_19[style=dashed];
Node_17 -> Node_18;
Node_17 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_24 -> Node_25;
Node_21 -> Node_22;
Node_28 -> Node_29;
Node_22 -> Node_23;
}

