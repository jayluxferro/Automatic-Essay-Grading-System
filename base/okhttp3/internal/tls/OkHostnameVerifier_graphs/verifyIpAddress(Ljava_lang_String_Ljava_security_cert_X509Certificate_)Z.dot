digraph "CFG forokhttp3.internal.tls.OkHostnameVerifier.verifyIpAddress(Ljava\/lang\/String;Ljava\/security\/cert\/X509Certificate;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.List r6 = getSubjectAltNames(r6, 7)\lint r0 = r6.size()\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:5:0x001b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000b\-\>B:5:0x001b\l|if (r2 \>= r0) goto L_0x001e\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d}"];
Node_3 [shape=record,label="{3\:\ 0x0017|if (r5.equalsIgnoreCase(r6.get(r2)) == false) goto L_0x001b\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|RETURN\l|return true\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|LOOP_END\lLOOP:0: B:1:0x000b\-\>B:5:0x001b\l|int r2 = r2 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|RETURN\l|return false\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private boolean okhttp3.internal.tls.OkHostnameVerifier.verifyIpAddress((r4v0 'this' okhttp3.internal.tls.OkHostnameVerifier A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.security.cert.X509Certificate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_7[style=dashed];
Node_5 -> Node_1;
Node_7 -> Node_4;
Node_8 -> Node_6;
}

