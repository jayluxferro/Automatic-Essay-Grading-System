digraph "CFG forokhttp3.internal.tls.OkHostnameVerifier.verifyHostname(Ljava\/lang\/String;Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x00c0 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: INVOKE  (r1 I:int) = (r7 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x00c0 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: CONST_STR  (r1 I:java.lang.String) =  \".\" \l0x000b: INVOKE  (r1 I:boolean) = (r7 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x00c0 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: CONST_STR  (r1 I:java.lang.String) =  \"..\" \l0x0013: INVOKE  (r1 I:boolean) = (r7 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.endsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001b \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x00bf \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: INVOKE  (r1 I:int) = (r8 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x00bf \l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|0x0023: CONST_STR  (r1 I:java.lang.String) =  \".\" \l0x0025: INVOKE  (r1 I:boolean) = (r8 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|0x0029: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x00bf \l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|0x002b: CONST_STR  (r1 I:java.lang.String) =  \"..\" \l0x002d: INVOKE  (r1 I:boolean) = (r8 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.endsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0031: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0035 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0035|0x0035: CONST_STR  (r1 I:java.lang.String) =  \".\" \l0x0037: INVOKE  (r1 I:boolean) = (r7 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.endsWith(java.lang.String):boolean type: VIRTUAL \l0x003b: CONST  (r2 I:?[int, float, short, byte, char]) = (46 ?[int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x003d|0x003d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004e \l}"];
Node_19 [shape=record,label="{19\:\ 0x003f|0x003f: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0041: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0044: INVOKE  (r1 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0047: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x004a: INVOKE  (r7 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x004e|0x004e: CONST_STR  (r1 I:java.lang.String) =  \".\" \l0x0050: INVOKE  (r1 I:boolean) = (r8 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.endsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0054|0x0054: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0065 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0056|0x0056: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0058: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x005b: INVOKE  (r1 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0061: INVOKE  (r8 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x0065|0x0065: SGET  (r1 I:java.util.Locale) =  java.util.Locale.US java.util.Locale \l0x0067: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.String), (r1 I:java.util.Locale) java.lang.String.toLowerCase(java.util.Locale):java.lang.String type: VIRTUAL \l0x006b: CONST_STR  (r1 I:java.lang.String) =  \"*\" \l0x006d: INVOKE  (r1 I:boolean) = (r8 I:java.lang.String), (r1 I:java.lang.CharSequence) java.lang.String.contains(java.lang.CharSequence):boolean type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0071|0x0071: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0078 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0073|0x0073: INVOKE  (r7 I:boolean) = (r7 I:java.lang.String), (r8 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0077|0x0077: RETURN  (r7 I:boolean) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0078|0x0078: CONST_STR  (r1 I:java.lang.String) =  \"*.\" \l0x007a: INVOKE  (r1 I:boolean) = (r8 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x007e|0x007e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x00be \l}"];
Node_29 [shape=record,label="{29\:\ 0x0080|0x0080: CONST  (r1 I:?[int, float, short, byte, char]) = (42 ?[int, float, short, byte, char]) \l0x0082: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0083: INVOKE  (r1 I:int) = (r8 I:java.lang.String), (r1 I:int), (r3 I:int) java.lang.String.indexOf(int, int):int type: VIRTUAL \l0x0087: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0088|0x0088: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x008b \l}"];
Node_32 [shape=record,label="{32\:\ 0x008b|0x008b: INVOKE  (r1 I:int) = (r7 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x008f: INVOKE  (r5 I:int) = (r8 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_33 [shape=record,label="{33\:\ 0x0093|0x0093: IF  (r1 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:35:0x0096 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0095|0x0095: RETURN  (r0 I:boolean) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0096|0x0096: CONST_STR  (r1 I:java.lang.String) =  \"*.\" \l0x0098: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r8 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_36 [shape=record,label="{36\:\ 0x009c|0x009c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x009f \l}"];
Node_37 [shape=record,label="{37\:\ 0x009e|0x009e: RETURN  (r0 I:boolean) \l}"];
Node_38 [shape=record,label="{38\:\ 0x009f|0x009f: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.String), (r3 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL \l0x00a3: INVOKE  (r1 I:boolean) = (r7 I:java.lang.String), (r8 I:java.lang.String) java.lang.String.endsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_39 [shape=record,label="{39\:\ 0x00a7|0x00a7: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x00aa \l}"];
Node_40 [shape=record,label="{40\:\ 0x00a9|0x00a9: RETURN  (r0 I:boolean) \l}"];
Node_41 [shape=record,label="{41\:\ 0x00aa|0x00aa: INVOKE  (r1 I:int) = (r7 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x00ae: INVOKE  (r8 I:int) = (r8 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x00b2: ARITH  (r1 I:int) = (r1 I:int) \- (r8 I:int) \l}"];
Node_42 [shape=record,label="{42\:\ 0x00b3|0x00b3: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:46:0x00bd \l}"];
Node_43 [shape=record,label="{43\:\ 0x00b5|0x00b5: ARITH  (r1 I:int) = (r1 I:int) \- (r3 I:int) \l0x00b6: INVOKE  (r7 I:int) = (r7 I:java.lang.String), (r2 I:int), (r1 I:int) java.lang.String.lastIndexOf(int, int):int type: VIRTUAL \l}"];
Node_44 [shape=record,label="{44\:\ 0x00ba|0x00ba: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x00bd \l}"];
Node_45 [shape=record,label="{45\:\ 0x00bc|0x00bc: RETURN  (r0 I:boolean) \l}"];
Node_46 [shape=record,label="{46\:\ 0x00bd|0x00bd: RETURN  (r3 I:boolean) \l}"];
Node_47 [shape=record,label="{47\:\ 0x00be|0x00be: RETURN  (r0 I:boolean) \l}"];
Node_48 [shape=record,label="{48\:\ 0x00bf|0x00bf: RETURN  (r0 I:boolean) \l}"];
Node_49 [shape=record,label="{49\:\ 0x00c0|0x00c0: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean okhttp3.internal.tls.OkHostnameVerifier.verifyHostname((r6 'this' I:okhttp3.internal.tls.OkHostnameVerifier A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_49;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_49;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_49;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_49[style=dashed];
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_48;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_48;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_48;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_48[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_47;
Node_29 -> Node_30;
Node_30 -> Node_32;
Node_30 -> Node_47[style=dashed];
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_46;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
}

