digraph "CFG forokhttp3.internal.tls.OkHostnameVerifier.verifyHostname(Ljava\/lang\/String;Ljava\/security\/cert\/X509Certificate;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:java.util.Locale) =  java.util.Locale.US java.util.Locale \l0x0002: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String), (r0 I:java.util.Locale) java.lang.String.toLowerCase(java.util.Locale):java.lang.String type: VIRTUAL \l0x0006: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0007: INVOKE  (r3 I:java.util.List) = (r3 I:java.security.cert.X509Certificate), (r0 I:int) okhttp3.internal.tls.OkHostnameVerifier.getSubjectAltNames(java.security.cert.X509Certificate, int):java.util.List type: STATIC \l0x000b: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: INVOKE  (r0 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0023 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0019: CHECK_CAST  (r0 I:java.lang.String) = (java.lang.String) (r0 I:?[OBJECT, ARRAY]) \l0x001b: INVOKE  (r0 I:boolean) = \l  (r1 I:okhttp3.internal.tls.OkHostnameVerifier)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.String)\l okhttp3.internal.tls.OkHostnameVerifier.verifyHostname(java.lang.String, java.lang.String):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: RETURN  (r2 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean okhttp3.internal.tls.OkHostnameVerifier.verifyHostname((r1 'this' I:okhttp3.internal.tls.OkHostnameVerifier A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.security.cert.X509Certificate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
}

