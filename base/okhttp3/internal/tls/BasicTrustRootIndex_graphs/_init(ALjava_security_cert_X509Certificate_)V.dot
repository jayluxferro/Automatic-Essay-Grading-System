digraph "CFG forokhttp3.internal.tls.BasicTrustRootIndex.\<init\>([Ljava\/security\/cert\/X509Certificate;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r6.subjectToCaCerts = new java.util.LinkedHashMap()\lint r0 = r7.length\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:5:0x0029] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000c\-\>B:5:0x0029\l|if (r1 \>= r0) goto L_0x002f\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|r2 = r7[r1]\ljavax.security.auth.x500.X500Principal r3 = r2.getSubjectX500Principal()\ljava.util.Set r4 = r6.subjectToCaCerts.get(r3)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|if (r4 != null) goto L_0x0029\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|java.util.LinkedHashSet r4 = new java.util.LinkedHashSet(1)\lr6.subjectToCaCerts.put(r3, r4)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|LOOP_END\lPHI: r4 \l  PHI: (r4v3 java.util.Set) = (r4v2 java.util.Set), (r4v4 java.util.Set) binds: [B:9:0x0029, B:8:0x0029] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000c\-\>B:5:0x0029\l|r4.add(r2)\lint r1 = r1 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x002f|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.tls.BasicTrustRootIndex.\<init\>((r6v0 'this' okhttp3.internal.tls.BasicTrustRootIndex A[IMMUTABLE_TYPE, THIS]), (r7v0 java.security.cert.X509Certificate[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_8;
Node_5 -> Node_1;
Node_7 -> Node_6;
Node_8 -> Node_5;
Node_9 -> Node_5;
}

