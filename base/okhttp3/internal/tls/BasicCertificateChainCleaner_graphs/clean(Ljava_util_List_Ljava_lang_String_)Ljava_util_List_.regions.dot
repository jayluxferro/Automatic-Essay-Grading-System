digraph "CFG forokhttp3.internal.tls.BasicCertificateChainCleaner.clean(Ljava\/util\/List;Ljava\/lang\/String;)Ljava\/util\/List;" {
subgraph cluster_Region_1563257610 {
label = "R(4:0|(3:3|(2:(1:9)|(2:(1:12)|(1:13)))(3:14|(2:17|(1:19))|(2:(1:22)|(2:23|24)))|20)|25|26)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.ArrayDeque java.util.ArrayDeque r8 = new java.util.ArrayDeque(r7)\ljava.util.ArrayList java.util.ArrayList r7 = new java.util.ArrayList()\lr7.add(r8.removeFirst())\lint r0 = 0\lboolean r1 = false\l}"];
subgraph cluster_LoopRegion_1707584655 {
label = "LOOP:0: (3:3|(2:(1:9)|(2:(1:12)|(1:13)))(3:14|(2:17|(1:19))|(2:(1:22)|(2:23|24)))|20)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0015|if (r0 \< 9) goto L_0x0017\l}"];
subgraph cluster_Region_1534815193 {
label = "R(3:3|(2:(1:9)|(2:(1:12)|(1:13)))(3:14|(2:17|(1:19))|(2:(1:22)|(2:23|24)))|20)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0017|java.security.cert.X509Certificate java.security.cert.X509Certificate r2 = (java.security.cert.X509Certificate) r7.get(r7.size() \- 1)\ljava.security.cert.X509Certificate java.security.cert.X509Certificate r4 = r6.trustRootIndex.findByIssuerAndSignature(r2)\l}"];
subgraph cluster_IfRegion_2033586152 {
label = "IF [B:4:0x0029] THEN: R(2:(1:9)|(2:(1:12)|(1:13))) ELSE: R(3:14|(2:17|(1:19))|(2:(1:22)|(2:23|24)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0029|if (r4 != null) goto L_0x002b\l}"];
subgraph cluster_Region_943223717 {
label = "R(2:(1:9)|(2:(1:12)|(1:13)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_84212541 {
label = "IF [B:6:0x002f, B:8:0x0035] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x002f|ADDED_TO_REGION\l|if (r7.size() \> 1) goto L_0x0037\l}"];
Node_8 [shape=record,label="{8\:\ 0x0035|ADDED_TO_REGION\l|if (r2.equals(r4) == false) goto L_0x0037\l}"];
subgraph cluster_Region_860337580 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0037|r7.add(r4)\l}"];
}
}
subgraph cluster_Region_1382140599 {
label = "R(2:(1:12)|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_373945518 {
label = "IF [B:11:0x003e] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x003e|if (verifySignature(r4, r4) == true) goto L_0x0040\l}"];
subgraph cluster_Region_1241106114 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0040|RETURN\l|return r7\l}"];
}
}
subgraph cluster_Region_1645193507 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0041|r1 = true\l}"];
}
}
}
subgraph cluster_Region_369985847 {
label = "R(3:14|(2:17|(1:19))|(2:(1:22)|(2:23|24)))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0043|java.util.Iterator java.util.Iterator r3 = r8.iterator()\l}"];
subgraph cluster_LoopRegion_216410029 {
label = "LOOP:1: (2:17|(1:19))";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x004b|if (r3.hasNext() != false) goto L_0x004d\l}"];
subgraph cluster_Region_364191818 {
label = "R(2:17|(1:19))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x004d|java.security.cert.X509Certificate java.security.cert.X509Certificate r4 = (java.security.cert.X509Certificate) r3.next()\l}"];
subgraph cluster_IfRegion_1049924654 {
label = "IF [B:18:0x0057] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0057|LOOP_END\lLOOP:1: B:15:0x0047\-\>B:18:0x0057\l|if (verifySignature(r2, r4) == true) goto L_0x0059\l}"];
subgraph cluster_Region_1239177607 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0059|r3.remove()\lr7.add(r4)\l}"];
}
}
}
}
subgraph cluster_Region_286593540 {
label = "R(2:(1:22)|(2:23|24))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1228194948 {
label = "IF [B:21:0x0062] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0062|if (r1 == true) goto L_0x0064\l}"];
subgraph cluster_Region_1797492370 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0064|RETURN\l|return r7\l}"];
}
}
subgraph cluster_Region_1726997671 {
label = "R(2:23|24)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0065}"];
Node_24 [shape=record,label="{24\:\ 0x007b|throw new javax.net.ssl.SSLPeerUnverifiedException(\"Failed to find a trusted cert that signed \" + r2)\l}"];
}
}
}
}
Node_20 [shape=record,label="{20\:\ 0x005f|LOOP_END\lPHI: r1 \l  PHI: (r1v3 boolean) = (r1v1 boolean), (r1v6 boolean) binds: [B:30:0x005f, B:31:0x005f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0013\-\>B:20:0x005f\l|r0++\l}"];
}
}
Node_25 [shape=record,label="{25\:\ 0x007c}"];
Node_26 [shape=record,label="{26\:\ 0x0092|throw new javax.net.ssl.SSLPeerUnverifiedException(\"Certificate chain too long: \" + r7)\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0013|LOOP_START\lPHI: r0 r1 \l  PHI: (r0v2 int) = (r0v1 int), (r0v4 int) binds: [B:0:0x0000, B:20:0x005f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v3 boolean) binds: [B:0:0x0000, B:20:0x005f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0013\-\>B:20:0x005f\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x002b}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0031}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x003a}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0047|LOOP_START\lLOOP:1: B:15:0x0047\-\>B:18:0x0057\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0062|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x007c|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0040|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x005f|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x005f|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0059|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public java.util.List\<java.security.cert.Certificate\> okhttp3.internal.tls.BasicCertificateChainCleaner.clean((r6v0 'this' okhttp3.internal.tls.BasicCertificateChainCleaner A[IMMUTABLE_TYPE, THIS]), (r7v0 java.util.List\<java.security.cert.Certificate\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[javax.net.ssl.SSLPeerUnverifiedException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Ljava\/security\/cert\/Certificate;, \>;, Ljava\/lang\/String;, ), Ljava\/util\/List\<, Ljava\/security\/cert\/Certificate;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_28[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_14[style=dashed];
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_11 -> Node_13[style=dashed];
Node_11 -> Node_29;
Node_13 -> Node_31;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_27[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_15[style=dashed];
Node_18 -> Node_32;
Node_19 -> Node_30;
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_23 -> Node_24;
Node_20 -> Node_1;
Node_25 -> Node_26;
Node_1 -> Node_2;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_15 -> Node_16;
Node_27 -> Node_21;
Node_28 -> Node_25;
Node_29 -> Node_12;
Node_30 -> Node_20;
Node_31 -> Node_20;
Node_32 -> Node_19;
}

