digraph "CFG forokhttp3.internal.cache2.Relay.newSource()Lokio\/Source;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:java.io.RandomAccessFile) = (r1 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.file java.io.RandomAccessFile A[Catch:\{ all \-\> 0x0015 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0008 A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|0x0007: RETURN  (r0 I:okio.Source) A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|0x0008: IGET  (r0 I:int) = (r1 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.sourceCount int A[Catch:\{ all \-\> 0x0015 \}]\l0x000a: ARITH  (r0 I:int) = (r0 I:int) + (1 int) A[Catch:\{ all \-\> 0x0015 \}]\l0x000c: IPUT  (r0 I:int), (r1 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.sourceCount int A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x000e|0x000e: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0015 \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x000f|0x000f: NEW_INSTANCE  (r0 I:okhttp3.internal.cache2.Relay$RelaySource) =  okhttp3.internal.cache2.Relay$RelaySource \l0x0011: INVOKE  \l  (r0 I:okhttp3.internal.cache2.Relay$RelaySource)\l  (r1 I:okhttp3.internal.cache2.Relay)\l okhttp3.internal.cache2.Relay.RelaySource.\<init\>(okhttp3.internal.cache2.Relay):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|0x0014: RETURN  (r0 I:okio.Source) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0015: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x0016|SYNTHETIC\lSplitter:B:12:0x0016\l}"];
Node_13 [shape=record,label="{13\:\ ?|Splitter:B:12:0x0016\l|0x0016: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0015 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0017|0x0017: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public okio.Source okhttp3.internal.cache2.Relay.newSource((r1 'this' I:okhttp3.internal.cache2.Relay A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_11;
Node_13 -> Node_14;
Node_13 -> Node_11;
}

