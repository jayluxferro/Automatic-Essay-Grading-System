digraph "CFG forokhttp3.internal.cache2.Relay.\<init\>(Ljava\/io\/RandomAccessFile;Lokio\/Source;JLokio\/ByteString;J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:okio.Buffer) =  okio.Buffer \l0x0005: INVOKE  (r0 I:okio.Buffer) okio.Buffer.\<init\>():void type: DIRECT \l0x0008: IPUT  (r0 I:okio.Buffer), (r1 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.upstreamBuffer okio.Buffer \l0x000a: NEW_INSTANCE  (r0 I:okio.Buffer) =  okio.Buffer \l0x000c: INVOKE  (r0 I:okio.Buffer) okio.Buffer.\<init\>():void type: DIRECT \l0x000f: IPUT  (r0 I:okio.Buffer), (r1 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.buffer okio.Buffer \l0x0011: IPUT  \l  (r2 I:java.io.RandomAccessFile)\l  (r1 I:okhttp3.internal.cache2.Relay)\l okhttp3.internal.cache2.Relay.file java.io.RandomAccessFile \l0x0013: IPUT  (r3 I:okio.Source), (r1 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.upstream okio.Source \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0019 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: IPUT  (r2 I:boolean), (r1 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.complete boolean \l0x001c: IPUT  (r4 I:long), (r1 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.upstreamPos long \l0x001e: IPUT  \l  (r6 I:okio.ByteString)\l  (r1 I:okhttp3.internal.cache2.Relay)\l okhttp3.internal.cache2.Relay.metadata okio.ByteString \l0x0020: IPUT  (r7 I:long), (r1 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.bufferMaxSize long \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: RETURN   \l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.cache2.Relay.\<init\>((r1 'this' I:okhttp3.internal.cache2.Relay A[IMMUTABLE_TYPE, THIS]), (r2 I:java.io.RandomAccessFile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:okio.Source A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:okio.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

