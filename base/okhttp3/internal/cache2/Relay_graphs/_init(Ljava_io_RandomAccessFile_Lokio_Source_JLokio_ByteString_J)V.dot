digraph "CFG forokhttp3.internal.cache2.Relay.\<init\>(Ljava\/io\/RandomAccessFile;Lokio\/Source;JLokio\/ByteString;J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.upstreamBuffer = new okio.Buffer()\lr1.buffer = new okio.Buffer()\lr1.file = r2\lr1.upstream = r3\l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|if (r3 != null) goto L_0x0019\l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|r2 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|r2 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|PHI: r2 \l  PHI: (r2v1 boolean) = (r2v2 boolean), (r2v3 boolean) binds: [B:3:0x0019, B:2:0x0017] A[DONT_GENERATE, DONT_INLINE]\l|r1.complete = r2\lr1.upstreamPos = r4\lr1.metadata = r6\lr1.bufferMaxSize = r7\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.cache2.Relay.\<init\>((r1v0 'this' okhttp3.internal.cache2.Relay A[IMMUTABLE_TYPE, THIS]), (r2v0 java.io.RandomAccessFile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 okio.Source A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 okio.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

