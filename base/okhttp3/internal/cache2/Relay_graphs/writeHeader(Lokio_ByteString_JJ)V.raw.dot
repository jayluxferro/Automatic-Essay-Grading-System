digraph "CFG forokhttp3.internal.cache2.Relay.writeHeader(Lokio\/ByteString;JJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r3 I:okio.Buffer) =  okio.Buffer \l0x0002: INVOKE  (r3 I:okio.Buffer) okio.Buffer.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r3 I:okio.Buffer), (r7 I:okio.ByteString) okio.Buffer.write(okio.ByteString):okio.Buffer type: VIRTUAL \l0x0008: INVOKE  (r3 I:okio.Buffer), (r8 I:long) okio.Buffer.writeLong(long):okio.Buffer type: VIRTUAL \l0x000b: INVOKE  (r3 I:okio.Buffer), (r10 I:long) okio.Buffer.writeLong(long):okio.Buffer type: VIRTUAL \l0x000e: INVOKE  (r7 I:long) = (r3 I:okio.Buffer) okio.Buffer.size():long type: VIRTUAL \l0x0012: CONST  (r9 I:?[long, double]) = (32 ?[long, double]) \l0x0014: CMP_L  (r7 I:int) = (r7 I:long), (r9 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|0x0016: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x002b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|0x0018: NEW_INSTANCE  (r0 I:okhttp3.internal.cache2.FileOperator) =  okhttp3.internal.cache2.FileOperator \l0x001a: IGET  (r7 I:java.io.RandomAccessFile) = (r6 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.file java.io.RandomAccessFile \l0x001c: INVOKE  (r7 I:java.nio.channels.FileChannel) = (r7 I:java.io.RandomAccessFile) java.io.RandomAccessFile.getChannel():java.nio.channels.FileChannel type: VIRTUAL \l0x0020: INVOKE  \l  (r0 I:okhttp3.internal.cache2.FileOperator)\l  (r7 I:java.nio.channels.FileChannel)\l okhttp3.internal.cache2.FileOperator.\<init\>(java.nio.channels.FileChannel):void type: DIRECT \l0x0023: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l0x0025: CONST  (r4 I:?[long, double]) = (32 ?[long, double]) \l0x0027: INVOKE  \l  (r0 I:okhttp3.internal.cache2.FileOperator)\l  (r1 I:long)\l  (r3 I:okio.Buffer)\l  (r4 I:long)\l okhttp3.internal.cache2.FileOperator.write(long, okio.Buffer, long):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x002a|0x002a: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x002b|0x002b: NEW_INSTANCE  (r7 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x002d: INVOKE  (r7 I:java.lang.IllegalArgumentException) java.lang.IllegalArgumentException.\<init\>():void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0030|0x0030: THROW  (r7 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.cache2.Relay.writeHeader((r6 'this' I:okhttp3.internal.cache2.Relay A[IMMUTABLE_TYPE, THIS]), (r7 I:okio.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

