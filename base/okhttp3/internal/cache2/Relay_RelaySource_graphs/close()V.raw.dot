digraph "CFG forokhttp3.internal.cache2.Relay.RelaySource.close()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.internal.cache2.FileOperator) = (r4 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.fileOperator okhttp3.internal.cache2.FileOperator \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: IPUT  \l  (r0 I:okhttp3.internal.cache2.FileOperator)\l  (r4 I:okhttp3.internal.cache2.Relay$RelaySource)\l okhttp3.internal.cache2.Relay.RelaySource.fileOperator okhttp3.internal.cache2.FileOperator \l0x0008: IGET  (r1 I:okhttp3.internal.cache2.Relay) = (r4 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|SYNTHETIC\lSplitter:B:5:0x000b\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x000b\l|0x000b: IGET  (r2 I:okhttp3.internal.cache2.Relay) = (r4 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x0029 \}, TRY_ENTER]\l0x000d: IGET  (r3 I:int) = (r2 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.sourceCount int A[Catch:\{ all \-\> 0x0029 \}]\l0x000f: ARITH  (r3 I:int) = (r3 I:int) + (\-1 int) A[Catch:\{ all \-\> 0x0029 \}]\l0x0011: IPUT  (r3 I:int), (r2 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.sourceCount int A[Catch:\{ all \-\> 0x0029 \}]\l0x0013: IGET  (r2 I:okhttp3.internal.cache2.Relay) = (r4 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x0029 \}]\l0x0015: IGET  (r2 I:int) = (r2 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.sourceCount int A[Catch:\{ all \-\> 0x0029 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0022 A[Catch:\{ all \-\> 0x0029 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: IGET  (r2 I:okhttp3.internal.cache2.Relay) = (r4 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x0029 \}]\l0x001b: IGET  (r2 I:java.io.RandomAccessFile) = (r2 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.file java.io.RandomAccessFile A[Catch:\{ all \-\> 0x0029 \}]\l0x001d: IGET  (r3 I:okhttp3.internal.cache2.Relay) = (r4 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x0029 \}]\l0x001f: IPUT  \l  (r0 I:java.io.RandomAccessFile)\l  (r3 I:okhttp3.internal.cache2.Relay)\l okhttp3.internal.cache2.Relay.file java.io.RandomAccessFile A[Catch:\{ all \-\> 0x0029 \}]\l0x0021: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0029 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0029 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0028 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: INVOKE  (r0 I:java.io.Closeable) okhttp3.internal.Util.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: RETURN   \l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|ExcHandler: all null\lSplitter:B:5:0x000b\l|0x0029: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|SYNTHETIC\lSplitter:B:14:0x002a\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x002a\l|0x002a: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0029 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x002b|0x002b: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.cache2.Relay.RelaySource.close((r4 'this' I:okhttp3.internal.cache2.Relay$RelaySource A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_13;
Node_15 -> Node_16;
Node_15 -> Node_13;
}

