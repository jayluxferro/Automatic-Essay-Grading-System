digraph "CFG forokhttp3.internal.cache2.Relay.RelaySource.close()V" {
subgraph cluster_Region_937991265 {
label = "R(1:(1:(3:3|a|(1:(1:11)))))";
node [shape=record,color=blue];
subgraph cluster_Region_463120120 {
label = "R(1:(3:3|a|(1:(1:11))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1294451381 {
label = "IF [B:1:0x0002] THEN: R(3:3|a|(1:(1:11))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4.fileOperator != null) goto L_0x0005\l}"];
subgraph cluster_Region_1909706969 {
label = "R(3:3|a|(1:(1:11)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0005|java.io.RandomAccessFile r0 = null\lr4.fileOperator = null\l}"];
subgraph cluster_SynchronizedRegion_2073191758 {
label = "Synchronized:R(2:4|(2:6|(1:8)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a}"];
subgraph cluster_Region_1186551038 {
label = "R(2:6|(1:8))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|okhttp3.internal.cache2.Relay okhttp3.internal.cache2.Relay r2 = okhttp3.internal.cache2.Relay.this\lr2.sourceCount\-\-\l}"];
subgraph cluster_IfRegion_141227465 {
label = "IF [B:7:0x0017] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0017|if (okhttp3.internal.cache2.Relay.this.sourceCount == 0) goto L_0x0019\l}"];
subgraph cluster_Region_1973186913 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0019|java.io.RandomAccessFile java.io.RandomAccessFile r2 = okhttp3.internal.cache2.Relay.this.file\lokhttp3.internal.cache2.Relay.this.file = null\lr0 = r2\l}"];
}
}
}
}
subgraph cluster_Region_1175007066 {
label = "R(1:(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1902546901 {
label = "IF [B:10:0x0023] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0023|if (r0 != null) goto L_0x0025\l}"];
subgraph cluster_Region_696454159 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0025|okhttp3.internal.Util.closeQuietly((java.io.Closeable) r0)\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000b|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0022|DONT_GENERATE\lPHI: r0 \l  PHI: (r0v3 java.io.RandomAccessFile) = (r0v1 java.io.RandomAccessFile), (r0v4 java.io.RandomAccessFile) binds: [B:7:0x0017, B:8:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|monitor\-exit(\l\/\/ error: 0x0022: MONITOR_EXIT  \l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0029|LOOP_START\lREMOVE\lLOOP:0: B:12:0x0029\-\>B:16:0x0029\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x002a|SYNTHETIC\lREMOVE\lSplitter:B:13:0x002a\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|REMOVE\lSplitter:B:13:0x002a\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x002b|REMOVE\l|throw r0\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0029|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:12:0x0029\-\>B:16:0x0029\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x002b|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0029|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.cache2.Relay.RelaySource.close((r4v0 'this' okhttp3.internal.cache2.Relay$RelaySource A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_20[style=dashed];
Node_11 -> Node_19;
Node_0 -> Node_1;
Node_5 -> Node_6;
Node_5 -> Node_12;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_14 -> Node_17;
Node_14 -> Node_18;
Node_16 -> Node_12;
Node_17 -> Node_15;
Node_18 -> Node_16;
}

