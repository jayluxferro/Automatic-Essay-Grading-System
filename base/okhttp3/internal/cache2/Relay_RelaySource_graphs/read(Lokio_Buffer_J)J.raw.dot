digraph "CFG forokhttp3.internal.cache2.Relay.RelaySource.read(Lokio\/Buffer;J)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r2 I:?[long, double]) = (r23 I:?[long, double]) \l0x0004: IGET  (r0 I:okhttp3.internal.cache2.FileOperator) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.fileOperator okhttp3.internal.cache2.FileOperator \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x0142 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r4 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: MONITOR_ENTER  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|SYNTHETIC\lSplitter:B:4:0x000b\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x000b\l|0x000b: IGET  (r5 I:long) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.sourcePos long A[Catch:\{ all \-\> 0x013f \}, TRY_ENTER]\l0x000d: IGET  (r0 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x013f \}]\l0x000f: IGET  (r7 I:long) = (r0 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.upstreamPos long A[Catch:\{ all \-\> 0x013f \}]\l0x0011: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x013f \}]\l0x0012: CONST  (r9 I:?[long, double]) = (\-1 ?[long, double]) A[Catch:\{ all \-\> 0x013f \}]\l0x0014: CMP_L  (r5 I:int) = (r5 I:long), (r7 I:long) A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0039 A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IGET  (r5 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x013f \}]\l0x001a: IGET  (r5 I:boolean) = (r5 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.complete boolean A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0020 A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: RETURN  (r9 I:long) A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: IGET  (r5 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x013f \}]\l0x0022: IGET  (r5 I:java.lang.Thread) = (r5 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.upstreamReader java.lang.Thread A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002e A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|0x0026: IGET  (r0 I:okio.Timeout) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.timeout okio.Timeout A[Catch:\{ all \-\> 0x013f \}]\l0x0028: IGET  (r5 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x013f \}]\l0x002a: INVOKE  (r0 I:okio.Timeout), (r5 I:java.lang.Object) okio.Timeout.waitUntilNotified(java.lang.Object):void type: VIRTUAL A[Catch:\{ all \-\> 0x013f \}]\l0x002d: GOTO  \-\> 0x000b A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x002e|0x002e: IGET  (r5 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x013f \}]\l0x0030: INVOKE  (r6 I:java.lang.Thread) =  java.lang.Thread.currentThread():java.lang.Thread type: STATIC A[Catch:\{ all \-\> 0x013f \}]\l0x0034: IPUT  \l  (r6 I:java.lang.Thread)\l  (r5 I:okhttp3.internal.cache2.Relay)\l okhttp3.internal.cache2.Relay.upstreamReader java.lang.Thread A[Catch:\{ all \-\> 0x013f \}]\l0x0036: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|0x0037: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0038|0x0038: GOTO  \-\> 0x004c A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0039|0x0039: IGET  (r5 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x013f \}]\l0x003b: IGET  (r5 I:okio.Buffer) = (r5 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.buffer okio.Buffer A[Catch:\{ all \-\> 0x013f \}]\l0x003d: INVOKE  (r5 I:long) = (r5 I:okio.Buffer) okio.Buffer.size():long type: VIRTUAL A[Catch:\{ all \-\> 0x013f \}]\l0x0041: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x013f \}]\l0x0042: ARITH  (r5 I:long) = (r7 I:long) \- (r5 I:long) A[Catch:\{ all \-\> 0x013f \}]\l0x0044: IGET  (r11 I:long) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.sourcePos long A[Catch:\{ all \-\> 0x013f \}]\l0x0046: CMP_L  (r11 I:int) = (r11 I:long), (r5 I:long) A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0048|0x0048: IF  (r11 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:73:0x0120 A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|0x004a: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x013f \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x004b|0x004b: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x004c|0x004c: CONST  (r11 I:?[long, double]) = (32 ?[long, double]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x004e|0x004e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x006a \l}"];
Node_23 [shape=record,label="{23\:\ 0x0050|0x0050: IGET  (r4 I:long) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.sourcePos long \l0x0052: ARITH  (r7 I:long) = (r7 I:long) \- (r4 I:long) \l0x0053: INVOKE  (r2 I:long) = (r2 I:long), (r7 I:long) java.lang.Math.min(long, long):long type: STATIC \l0x0057: IGET  (r13 I:okhttp3.internal.cache2.FileOperator) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.fileOperator okhttp3.internal.cache2.FileOperator \l0x0059: IGET  (r4 I:long) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.sourcePos long \l0x005b: ARITH  (r14 I:long) = (r4 I:long) + (r11 I:long) \l0x005d: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x005f: MOVE  (r17 I:?[long, double]) = (r2 I:?[long, double]) \l0x0061: INVOKE  \l  (r13 I:okhttp3.internal.cache2.FileOperator)\l  (r14 I:long)\l  (r16 I:okio.Buffer)\l  (r17 I:long)\l okhttp3.internal.cache2.FileOperator.read(long, okio.Buffer, long):void type: VIRTUAL \l0x0064: IGET  (r4 I:long) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.sourcePos long \l0x0066: ARITH  (r4 I:long) = (r4 I:long) + (r2 I:long) \l0x0067: IPUT  \l  (r4 I:long)\l  (r1 I:okhttp3.internal.cache2.Relay$RelaySource)\l okhttp3.internal.cache2.Relay.RelaySource.sourcePos long \l}"];
Node_24 [shape=record,label="{24\:\ 0x0069|0x0069: RETURN  (r2 I:long) \l}"];
Node_25 [shape=record,label="{25\:\ 0x006a|0x006a: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x006b|SYNTHETIC\lSplitter:B:26:0x006b\l}"];
Node_27 [shape=record,label="{27\:\ ?|Splitter:B:26:0x006b\l|0x006b: IGET  (r0 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x010e \}, TRY_ENTER]\l0x006d: IGET  (r0 I:okio.Source) = (r0 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.upstream okio.Source A[Catch:\{ all \-\> 0x010e \}]\l0x006f: IGET  (r5 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x010e \}]\l0x0071: IGET  (r5 I:okio.Buffer) = (r5 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.upstreamBuffer okio.Buffer A[Catch:\{ all \-\> 0x010e \}]\l0x0073: IGET  (r6 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x010e \}]\l0x0075: IGET  (r13 I:long) = (r6 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.bufferMaxSize long A[Catch:\{ all \-\> 0x010e \}]\l0x0077: INVOKE  (r5 I:long) = (r0 I:okio.Source), (r5 I:okio.Buffer), (r13 I:long) okio.Source.read(okio.Buffer, long):long type: INTERFACE A[Catch:\{ all \-\> 0x010e \}]\l0x007b: CMP_L  (r0 I:int) = (r5 I:long), (r9 I:long) A[Catch:\{ all \-\> 0x010e \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x007d|0x007d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0095 A[Catch:\{ all \-\> 0x010e \}]\l}"];
Node_29 [shape=record,label="{29\:\ 0x007f|0x007f: IGET  (r0 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x010e \}]\l0x0081: INVOKE  (r0 I:okhttp3.internal.cache2.Relay), (r7 I:long) okhttp3.internal.cache2.Relay.commit(long):void type: VIRTUAL A[Catch:\{ all \-\> 0x010e \}, TRY_LEAVE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0084|0x0084: IGET  (r2 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay \l}"];
Node_31 [shape=record,label="{31\:\ 0x0086|0x0086: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0087|SYNTHETIC\lSplitter:B:32:0x0087\l}"];
Node_33 [shape=record,label="{33\:\ ?|Splitter:B:32:0x0087\l|0x0087: IGET  (r0 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x0092 \}, TRY_ENTER]\l0x0089: IPUT  \l  (r4 I:java.lang.Thread)\l  (r0 I:okhttp3.internal.cache2.Relay)\l okhttp3.internal.cache2.Relay.upstreamReader java.lang.Thread A[Catch:\{ all \-\> 0x0092 \}]\l0x008b: IGET  (r0 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x0092 \}]\l0x008d: INVOKE  (r0 I:java.lang.Object) java.lang.Object.notifyAll():void type: VIRTUAL A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0090|0x0090: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0091|0x0091: RETURN  (r9 I:long) A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0092|ExcHandler: all null\lSplitter:B:32:0x0087\l|0x0092: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0093|0x0093: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0092 \}, TRY_LEAVE]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0094|0x0094: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0095|SYNTHETIC\lSplitter:B:39:0x0095\l}"];
Node_40 [shape=record,label="{40\:\ ?|Splitter:B:39:0x0095\l|0x0095: INVOKE  (r2 I:long) = (r5 I:long), (r2 I:long) java.lang.Math.min(long, long):long type: STATIC A[Catch:\{ all \-\> 0x010e \}, TRY_ENTER]\l0x0099: IGET  (r0 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x010e \}]\l0x009b: IGET  (r13 I:okio.Buffer) = (r0 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.upstreamBuffer okio.Buffer A[Catch:\{ all \-\> 0x010e \}]\l0x009d: CONST  (r15 I:?[long, double]) = (0 ?[long, double]) A[Catch:\{ all \-\> 0x010e \}]\l0x009f: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x010e \}]\l0x00a1: MOVE  (r17 I:?[long, double]) = (r2 I:?[long, double]) A[Catch:\{ all \-\> 0x010e \}]\l0x00a3: INVOKE  \l  (r13 I:okio.Buffer)\l  (r14 I:okio.Buffer)\l  (r15 I:long)\l  (r17 I:long)\l okio.Buffer.copyTo(okio.Buffer, long, long):okio.Buffer type: VIRTUAL A[Catch:\{ all \-\> 0x010e \}]\l0x00a6: IGET  (r9 I:long) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.sourcePos long A[Catch:\{ all \-\> 0x010e \}]\l0x00a8: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x010e \}]\l0x00a9: ARITH  (r9 I:long) = (r9 I:long) + (r2 I:long) A[Catch:\{ all \-\> 0x010e \}]\l0x00aa: IPUT  \l  (r9 I:long)\l  (r1 I:okhttp3.internal.cache2.Relay$RelaySource)\l okhttp3.internal.cache2.Relay.RelaySource.sourcePos long A[Catch:\{ all \-\> 0x010e \}]\l0x00ac: IGET  (r15 I:okhttp3.internal.cache2.FileOperator) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.fileOperator okhttp3.internal.cache2.FileOperator A[Catch:\{ all \-\> 0x010e \}]\l0x00ae: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x010e \}]\l0x00af: ARITH  (r16 I:long) = (r7 I:long) + (r11 I:long) A[Catch:\{ all \-\> 0x010e \}]\l0x00b1: IGET  (r0 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x010e \}]\l0x00b3: IGET  (r0 I:okio.Buffer) = (r0 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.upstreamBuffer okio.Buffer A[Catch:\{ all \-\> 0x010e \}]\l0x00b5: INVOKE  (r18 I:okio.Buffer) = (r0 I:okio.Buffer) okio.Buffer.clone():okio.Buffer type: VIRTUAL A[Catch:\{ all \-\> 0x010e \}]\l0x00b9: MOVE  (r19 I:?[long, double]) = (r5 I:?[long, double]) A[Catch:\{ all \-\> 0x010e \}]\l0x00bb: INVOKE  \l  (r15 I:okhttp3.internal.cache2.FileOperator)\l  (r16 I:long)\l  (r18 I:okio.Buffer)\l  (r19 I:long)\l okhttp3.internal.cache2.FileOperator.write(long, okio.Buffer, long):void type: VIRTUAL A[Catch:\{ all \-\> 0x010e \}]\l0x00be: IGET  (r7 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x010e \}]\l}"];
Node_41 [shape=record,label="{41\:\ 0x00c0|0x00c0: MONITOR_ENTER  (r7 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x010e \}, TRY_LEAVE]\l}"];
Node_42 [shape=record,label="{42\:\ 0x00c1|SYNTHETIC\lSplitter:B:42:0x00c1\l}"];
Node_43 [shape=record,label="{43\:\ ?|Splitter:B:42:0x00c1\l|0x00c1: IGET  (r0 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x010b \}, TRY_ENTER]\l0x00c3: IGET  (r0 I:okio.Buffer) = (r0 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.buffer okio.Buffer A[Catch:\{ all \-\> 0x010b \}]\l0x00c5: IGET  (r8 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x010b \}]\l0x00c7: IGET  (r8 I:okio.Buffer) = (r8 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.upstreamBuffer okio.Buffer A[Catch:\{ all \-\> 0x010b \}]\l0x00c9: INVOKE  (r0 I:okio.Buffer), (r8 I:okio.Buffer), (r5 I:long) okio.Buffer.write(okio.Buffer, long):void type: VIRTUAL A[Catch:\{ all \-\> 0x010b \}]\l0x00cc: IGET  (r0 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x010b \}]\l0x00ce: IGET  (r0 I:okio.Buffer) = (r0 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.buffer okio.Buffer A[Catch:\{ all \-\> 0x010b \}]\l0x00d0: INVOKE  (r8 I:long) = (r0 I:okio.Buffer) okio.Buffer.size():long type: VIRTUAL A[Catch:\{ all \-\> 0x010b \}]\l0x00d4: IGET  (r0 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x010b \}]\l0x00d6: IGET  (r10 I:long) = (r0 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.bufferMaxSize long A[Catch:\{ all \-\> 0x010b \}]\l0x00d8: CMP_L  (r0 I:int) = (r8 I:long), (r10 I:long) A[Catch:\{ all \-\> 0x010b \}]\l}"];
Node_44 [shape=record,label="{44\:\ 0x00da|0x00da: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:46:0x00f1 A[Catch:\{ all \-\> 0x010b \}]\l}"];
Node_45 [shape=record,label="{45\:\ 0x00dc|0x00dc: IGET  (r0 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x010b \}]\l0x00de: IGET  (r0 I:okio.Buffer) = (r0 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.buffer okio.Buffer A[Catch:\{ all \-\> 0x010b \}]\l0x00e0: IGET  (r8 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x010b \}]\l0x00e2: IGET  (r8 I:okio.Buffer) = (r8 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.buffer okio.Buffer A[Catch:\{ all \-\> 0x010b \}]\l0x00e4: INVOKE  (r8 I:long) = (r8 I:okio.Buffer) okio.Buffer.size():long type: VIRTUAL A[Catch:\{ all \-\> 0x010b \}]\l0x00e8: IGET  (r10 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x010b \}]\l0x00ea: IGET  (r10 I:long) = (r10 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.bufferMaxSize long A[Catch:\{ all \-\> 0x010b \}]\l0x00ec: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x010b \}]\l0x00ed: ARITH  (r8 I:long) = (r8 I:long) \- (r10 I:long) A[Catch:\{ all \-\> 0x010b \}]\l0x00ee: INVOKE  (r0 I:okio.Buffer), (r8 I:long) okio.Buffer.skip(long):void type: VIRTUAL A[Catch:\{ all \-\> 0x010b \}]\l}"];
Node_46 [shape=record,label="{46\:\ 0x00f1|0x00f1: IGET  (r0 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x010b \}]\l0x00f3: IGET  (r8 I:long) = (r0 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.upstreamPos long A[Catch:\{ all \-\> 0x010b \}]\l0x00f5: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x010b \}]\l0x00f6: ARITH  (r8 I:long) = (r8 I:long) + (r5 I:long) A[Catch:\{ all \-\> 0x010b \}]\l0x00f7: IPUT  (r8 I:long), (r0 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.upstreamPos long A[Catch:\{ all \-\> 0x010b \}]\l}"];
Node_47 [shape=record,label="{47\:\ 0x00f9|0x00f9: MONITOR_EXIT  (r7 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x010b \}, TRY_LEAVE]\l}"];
Node_48 [shape=record,label="{48\:\ 0x00fa|0x00fa: IGET  (r5 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay \l}"];
Node_49 [shape=record,label="{49\:\ 0x00fc|0x00fc: MONITOR_ENTER  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x00fd|SYNTHETIC\lSplitter:B:50:0x00fd\l}"];
Node_51 [shape=record,label="{51\:\ ?|Splitter:B:50:0x00fd\l|0x00fd: IGET  (r0 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x0108 \}, TRY_ENTER]\l0x00ff: IPUT  \l  (r4 I:java.lang.Thread)\l  (r0 I:okhttp3.internal.cache2.Relay)\l okhttp3.internal.cache2.Relay.upstreamReader java.lang.Thread A[Catch:\{ all \-\> 0x0108 \}]\l0x0101: IGET  (r0 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x0108 \}]\l0x0103: INVOKE  (r0 I:java.lang.Object) java.lang.Object.notifyAll():void type: VIRTUAL A[Catch:\{ all \-\> 0x0108 \}]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0106|0x0106: MONITOR_EXIT  (r5 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0108 \}]\l}"];
Node_53 [shape=record,label="{53\:\ 0x0107|0x0107: RETURN  (r2 I:long) A[Catch:\{ all \-\> 0x0108 \}]\l}"];
Node_54 [shape=record,label="{54\:\ 0x0108|ExcHandler: all null\lSplitter:B:50:0x00fd\l|0x0108: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0108 \}]\l}"];
Node_55 [shape=record,label="{55\:\ 0x0109|0x0109: MONITOR_EXIT  (r5 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0108 \}, TRY_LEAVE]\l}"];
Node_56 [shape=record,label="{56\:\ 0x010a|0x010a: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_57 [shape=record,label="{57\:\ 0x010b|ExcHandler: all null\lSplitter:B:42:0x00c1\l|0x010b: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_58 [shape=record,label="{58\:\ 0x010c|SYNTHETIC\lSplitter:B:58:0x010c\l}"];
Node_59 [shape=record,label="{59\:\ ?|Splitter:B:58:0x010c\l|0x010c: MONITOR_EXIT  (r7 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x010b \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_60 [shape=record,label="{60\:\ 0x010d|SYNTHETIC\lSplitter:B:60:0x010d\l}"];
Node_61 [shape=record,label="{61\:\ ?|Splitter:B:60:0x010d\l|0x010d: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x010e \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_62 [shape=record,label="{62\:\ 0x010e|ExcHandler: all null\lSplitter:B:26:0x006b\l|0x010e: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_63 [shape=record,label="{63\:\ 0x010f|0x010f: IGET  (r2 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay \l}"];
Node_64 [shape=record,label="{64\:\ 0x0111|0x0111: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_65 [shape=record,label="{65\:\ 0x0112|SYNTHETIC\lSplitter:B:65:0x0112\l}"];
Node_66 [shape=record,label="{66\:\ ?|Splitter:B:65:0x0112\l|0x0112: IGET  (r3 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x011d \}, TRY_ENTER]\l0x0114: IPUT  \l  (r4 I:java.lang.Thread)\l  (r3 I:okhttp3.internal.cache2.Relay)\l okhttp3.internal.cache2.Relay.upstreamReader java.lang.Thread A[Catch:\{ all \-\> 0x011d \}]\l0x0116: IGET  (r3 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x011d \}]\l0x0118: INVOKE  (r3 I:java.lang.Object) java.lang.Object.notifyAll():void type: VIRTUAL A[Catch:\{ all \-\> 0x011d \}]\l}"];
Node_67 [shape=record,label="{67\:\ 0x011b|0x011b: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x011d \}, TRY_LEAVE]\l}"];
Node_68 [shape=record,label="{68\:\ 0x011c|0x011c: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_69 [shape=record,label="{69\:\ 0x011d|ExcHandler: all null\lSplitter:B:65:0x0112\l|0x011d: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_70 [shape=record,label="{70\:\ 0x011e|SYNTHETIC\lSplitter:B:70:0x011e\l}"];
Node_71 [shape=record,label="{71\:\ ?|Splitter:B:70:0x011e\l|0x011e: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x011d \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_72 [shape=record,label="{72\:\ 0x011f|0x011f: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_73 [shape=record,label="{73\:\ 0x0120|SYNTHETIC\lSplitter:B:73:0x0120\l}"];
Node_74 [shape=record,label="{74\:\ ?|Splitter:B:73:0x0120\l|0x0120: IGET  (r9 I:long) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.sourcePos long A[Catch:\{ all \-\> 0x013f \}, TRY_ENTER]\l0x0122: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x013f \}]\l0x0123: ARITH  (r7 I:long) = (r7 I:long) \- (r9 I:long) A[Catch:\{ all \-\> 0x013f \}]\l0x0124: INVOKE  (r2 I:long) = (r2 I:long), (r7 I:long) java.lang.Math.min(long, long):long type: STATIC A[Catch:\{ all \-\> 0x013f \}]\l0x0128: IGET  (r0 I:okhttp3.internal.cache2.Relay) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.this$0 okhttp3.internal.cache2.Relay A[Catch:\{ all \-\> 0x013f \}]\l0x012a: IGET  (r9 I:okio.Buffer) = (r0 I:okhttp3.internal.cache2.Relay) okhttp3.internal.cache2.Relay.buffer okio.Buffer A[Catch:\{ all \-\> 0x013f \}]\l0x012c: IGET  (r7 I:long) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.sourcePos long A[Catch:\{ all \-\> 0x013f \}]\l0x012e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x013f \}]\l0x012f: ARITH  (r11 I:long) = (r7 I:long) \- (r5 I:long) A[Catch:\{ all \-\> 0x013f \}]\l0x0131: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x013f \}]\l0x0133: MOVE  (r13 I:?[long, double]) = (r2 I:?[long, double]) A[Catch:\{ all \-\> 0x013f \}]\l0x0134: INVOKE  \l  (r9 I:okio.Buffer)\l  (r10 I:okio.Buffer)\l  (r11 I:long)\l  (r13 I:long)\l okio.Buffer.copyTo(okio.Buffer, long, long):okio.Buffer type: VIRTUAL A[Catch:\{ all \-\> 0x013f \}]\l0x0137: IGET  (r5 I:long) = (r1 I:okhttp3.internal.cache2.Relay$RelaySource) okhttp3.internal.cache2.Relay.RelaySource.sourcePos long A[Catch:\{ all \-\> 0x013f \}]\l0x0139: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x013f \}]\l0x013a: ARITH  (r5 I:long) = (r5 I:long) + (r2 I:long) A[Catch:\{ all \-\> 0x013f \}]\l0x013b: IPUT  \l  (r5 I:long)\l  (r1 I:okhttp3.internal.cache2.Relay$RelaySource)\l okhttp3.internal.cache2.Relay.RelaySource.sourcePos long A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_75 [shape=record,label="{75\:\ 0x013d|0x013d: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_76 [shape=record,label="{76\:\ 0x013e|0x013e: RETURN  (r2 I:long) A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_77 [shape=record,label="{77\:\ 0x013f|ExcHandler: all null\lSplitter:B:4:0x000b\l|0x013f: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x013f \}]\l}"];
Node_78 [shape=record,label="{78\:\ 0x0140|0x0140: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x013f \}, TRY_LEAVE]\l}"];
Node_79 [shape=record,label="{79\:\ 0x0141|0x0141: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_80 [shape=record,label="{80\:\ 0x0142|0x0142: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0144: CONST_STR  (r2 I:java.lang.String) =  \"closed\" \l0x0146: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r2 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_81 [shape=record,label="{81\:\ 0x0149|0x0149: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public long okhttp3.internal.cache2.Relay.RelaySource.read((r21 'this' I:okhttp3.internal.cache2.Relay$RelaySource A[IMMUTABLE_TYPE, THIS]), (r22 I:okio.Buffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_80;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_77;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_17;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_4;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_73;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_62;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_39;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_36;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_39 -> Node_62;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_42 -> Node_57;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_50 -> Node_54;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_57 -> Node_58;
Node_58 -> Node_59;
Node_58 -> Node_57;
Node_59 -> Node_60;
Node_59 -> Node_57;
Node_60 -> Node_61;
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_65 -> Node_69;
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_69 -> Node_70;
Node_70 -> Node_71;
Node_70 -> Node_69;
Node_71 -> Node_72;
Node_71 -> Node_69;
Node_73 -> Node_74;
Node_73 -> Node_77;
Node_74 -> Node_75;
Node_75 -> Node_76;
Node_77 -> Node_78;
Node_78 -> Node_79;
Node_80 -> Node_81;
}

