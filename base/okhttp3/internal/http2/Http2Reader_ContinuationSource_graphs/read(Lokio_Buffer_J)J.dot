digraph "CFG forokhttp3.internal.http2.Http2Reader.ContinuationSource.read(Lokio\/Buffer;J)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lLOOP:0: B:0:0x0000\-\>B:5:0x0018\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r5.left != 0) goto L_0x001c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|r5.source.skip((long) r5.padding)\lr5.padding = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|if ((r5.flags & 4) == 0) goto L_0x0018\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|RETURN\l|return \-1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|LOOP_END\lLOOP:0: B:0:0x0000\-\>B:5:0x0018\l|readContinuationHeader()\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|long r6 = r5.source.read(r6, java.lang.Math.min(r7, (long) r5.left))\l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|if ((r6 \> \-1 ? 1 : (r6 == \-1 ? 0 : \-1)) != 0) goto L_0x002e\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|RETURN\l|return \-1\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|r5.left = (int) (((long) r5.left) \- r6)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|RETURN\l|return r6\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public long okhttp3.internal.http2.Http2Reader.ContinuationSource.read((r5v0 'this' okhttp3.internal.http2.Http2Reader$ContinuationSource A[IMMUTABLE_TYPE, THIS]), (r6v0 okio.Buffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_12[style=dashed];
Node_5 -> Node_0;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_6;
Node_12 -> Node_4;
}

