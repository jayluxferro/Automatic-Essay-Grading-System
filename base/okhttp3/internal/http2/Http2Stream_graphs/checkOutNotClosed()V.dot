digraph "CFG forokhttp3.internal.http2.Http2Stream.checkOutNotClosed()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r2.sink.closed != false) goto L_0x0021\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r2.sink.finished != false) goto L_0x0019\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r2.errorCode != null) goto L_0x0011\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011}"];
Node_8 [shape=record,label="{8\:\ 0x0018|throw new okhttp3.internal.http2.StreamResetException(r2.errorCode)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019}"];
Node_10 [shape=record,label="{10\:\ 0x0020|throw new java.io.IOException(\"stream finished\")\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021}"];
Node_12 [shape=record,label="{12\:\ 0x0028|throw new java.io.IOException(\"stream closed\")\l}"];
MethodNode[shape=record,label="{void okhttp3.internal.http2.Http2Stream.checkOutNotClosed((r2v0 'this' okhttp3.internal.http2.Http2Stream A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

