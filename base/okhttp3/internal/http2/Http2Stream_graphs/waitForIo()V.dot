digraph "CFG forokhttp3.internal.http2.Http2Stream.waitForIo()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ InterruptedException \-\> 0x0004 \}\lSplitter:B:0:0x0000\l|wait()     \/\/ Catch:\{ InterruptedException \-\> 0x0004 \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|java.lang.Thread.currentThread().interrupt()\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lExcHandler: InterruptedException (unused java.lang.InterruptedException)\lSplitter:B:0:0x0000\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|throw new java.io.InterruptedIOException()\l}"];
MethodNode[shape=record,label="{void okhttp3.internal.http2.Http2Stream.waitForIo((r1v0 'this' okhttp3.internal.http2.Http2Stream A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.InterruptedIOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_3;
}

