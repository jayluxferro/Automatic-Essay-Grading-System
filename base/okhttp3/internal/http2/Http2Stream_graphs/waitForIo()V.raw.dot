digraph "CFG forokhttp3.internal.http2.Http2Stream.waitForIo()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.wait():void type: VIRTUAL A[Catch:\{ InterruptedException \-\> 0x0004 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INVOKE  (r0 I:java.lang.Thread) =  java.lang.Thread.currentThread():java.lang.Thread type: STATIC \l0x0008: INVOKE  (r0 I:java.lang.Thread) java.lang.Thread.interrupt():void type: VIRTUAL \l0x000b: NEW_INSTANCE  (r0 I:java.io.InterruptedIOException) =  java.io.InterruptedIOException \l0x000d: INVOKE  (r0 I:java.io.InterruptedIOException) java.io.InterruptedIOException.\<init\>():void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lExcHandler: InterruptedException null\lSplitter:B:0:0x0000\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{void okhttp3.internal.http2.Http2Stream.waitForIo((r1 'this' I:okhttp3.internal.http2.Http2Stream A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.InterruptedIOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_3;
}

