digraph "CFG forokhttp3.internal.http2.Http2Stream.takeResponseHeaders()Ljava\/util\/List;" {
subgraph cluster_Region_2032556133 {
label = "R(2:(1:(1:(4:4|(1:10)|12|(1:14)(1:19))(1:24)))|16) | DECL_VAR: java.util.List\<okhttp3.internal.http2.Header\> null\l";
node [shape=record,color=blue];
subgraph cluster_Region_2077975968 {
label = "R(1:(1:(4:4|(1:10)|12|(1:14)(1:19))(1:24)))";
node [shape=record,color=blue];
subgraph cluster_Region_1517896135 {
label = "R(1:(4:4|(1:10)|12|(1:14)(1:19))(1:24))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_416090435 {
label = "IF [B:3:0x0005] THEN: R(4:4|(1:10)|12|(1:14)(1:19)) ELSE: R(1:24)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0005|Catch:\{ all \-\> 0x002e \}\l|if (isLocallyInitiated() == true) goto L_0x0007     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
subgraph cluster_Region_785503191 {
label = "R(4:4|(1:10)|12|(1:14)(1:19))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0007|Catch:\{ all \-\> 0x002e \}\l|r2.readTimeout.enter()     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
subgraph cluster_LoopRegion_81195549 {
label = "LOOP:0: (1:10)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000e|Catch:\{ all \-\> 0x002e \}\l|if (r2.responseHeaders == null) goto L_0x0010     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
subgraph cluster_Region_604004674 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0014|LOOP_END\lCatch:\{ all \-\> 0x002e \}\lLOOP:0: B:5:0x000c\-\>B:10:0x0014\l|waitForIo()     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
}
}
Node_12 [shape=record,label="{12\:\ ?|Catch:\{ all \-\> 0x002e \}\l|r2.readTimeout.exitAndThrowIfTimedOut()     \/\/ Catch:\{ all \-\> 0x002e \}\ljava.util.List\<okhttp3.internal.http2.Header\> r0 = r2.responseHeaders     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
subgraph cluster_IfRegion_327563654 {
label = "IF [B:13:0x001f] THEN: R(1:14) ELSE: R(1:19)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x001f|Catch:\{ all \-\> 0x002e \}\l|if (r0 != null) goto L_0x0021     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
subgraph cluster_Region_879192956 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0021|Catch:\{ all \-\> 0x002e \}\l|r2.responseHeaders = null     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
}
subgraph cluster_Region_1141963682 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x002d|Catch:\{ all \-\> 0x002e \}\l|throw new okhttp3.internal.http2.StreamResetException(r2.errorCode)     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
}
}
}
subgraph cluster_Region_2011545383 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x003c|Catch:\{ all \-\> 0x002e \}\l|throw new java.lang.IllegalStateException(\"servers cannot read response headers\")     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
}
}
}
}
Node_16 [shape=record,label="{16\:\ 0x0025|RETURN\l|return r0\l}"];
}
subgraph cluster_Region_1355336424 {
label = "R(3:20|21|22) | ExcHandler: all (r0v4 'th' java.lang.Throwable A[CUSTOM_DECLARE, Catch:\{  \}])\l";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x002e|Catch:\{ all \-\> 0x002e \}\lExcHandler: all (r0v4 'th' java.lang.Throwable A[CUSTOM_DECLARE, Catch:\{  \}])\l}"];
Node_21 [shape=record,label="{21\:\ 0x002f|Catch:\{ all \-\> 0x002e \}\l|r2.readTimeout.exitAndThrowIfTimedOut()     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x0034|Catch:\{ all \-\> 0x002e \}\l|throw r0     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?|Catch:\{ all \-\> 0x002e \}\lSplitter:B:1:0x0001\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000c|LOOP_START\lSYNTHETIC\lLOOP:0: B:5:0x000c\-\>B:10:0x0014\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|Catch:\{ all \-\> 0x002e \}\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0010|Catch:\{ all \-\> 0x002e \}\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0012|ADDED_TO_REGION\lCatch:\{ all \-\> 0x002e \}\l|if (r2.errorCode == null) goto L_0x0014     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0018|SYNTHETIC\lDONT_GENERATE\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0024|DONT_GENERATE\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0026|SYNTHETIC\lSplitter:B:17:0x0026\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|Catch:\{ all \-\> 0x002e \}\lSplitter:B:17:0x0026\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0035|Catch:\{ all \-\> 0x002e \}\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x003d|REMOVE\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x003e|REMOVE\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x003f|REMOVE\l|throw r0\l}"];
MethodNode[shape=record,label="{public synchronized java.util.List\<okhttp3.internal.http2.Header\> okhttp3.internal.http2.Http2Stream.takeResponseHeaders((r2v0 'this' okhttp3.internal.http2.Http2Stream A[IMMUTABLE_TYPE, THIS]))  | INCONSISTENT_CODE\lException block dominator not found, dom blocks: []\lCode restructure failed: missing block: B:20:0x002e, code lost:\l    r0 = move\-exception;\l\lCode restructure failed: missing block: B:21:0x002f, code lost:\l    r2.readTimeout.exitAndThrowIfTimedOut();\l\lCode restructure failed: missing block: B:22:0x0034, code lost:\l    throw r0;\l\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/List\<, Lokhttp3\/internal\/http2\/Header;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_3 -> Node_23[style=dashed];
Node_4 -> Node_5;
Node_7 -> Node_8;
Node_7 -> Node_11[style=dashed];
Node_10 -> Node_5;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_14 -> Node_15;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_25;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_5 -> Node_20;
Node_5 -> Node_25;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_25;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_17 -> Node_25;
Node_18 -> Node_19;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27;
}

