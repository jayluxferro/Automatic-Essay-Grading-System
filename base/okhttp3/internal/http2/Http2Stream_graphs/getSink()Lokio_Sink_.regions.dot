digraph "CFG forokhttp3.internal.http2.Http2Stream.getSink()Lokio\/Sink;" {
subgraph cluster_Region_1605303108 {
label = "R(2:0|11)";
node [shape=record,color=blue];
subgraph cluster_SynchronizedRegion_852580501 {
label = "Synchronized:R(2:0|(1:(1:(1:(1:8)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
subgraph cluster_Region_1777522897 {
label = "R(1:(1:(1:(1:8))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2064419074 {
label = "IF [B:3:0x0003] THEN: R(1:(1:(1:8))) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r2.hasResponseHeaders == false) goto L_0x0005\l}"];
subgraph cluster_Region_1406151164 {
label = "R(1:(1:(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1803409123 {
label = "R(1:(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_339132173 {
label = "IF [B:5:0x0009] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0009|if (isLocallyInitiated() != true) goto L_0x000c\l}"];
subgraph cluster_Region_191717392 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0013|throw new java.lang.IllegalStateException(\"reply before requesting the sink\")\l}"];
}
}
}
}
}
}
}
Node_11 [shape=record,label="{11\:\ 0x0017|RETURN\l|return r2.sink\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0005}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000b}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000c}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0014|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x0014: MONITOR_EXIT  \l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0015}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0018|LOOP_START\lREMOVE\lLOOP:0: B:12:0x0018\-\>B:16:0x0018\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0019|SYNTHETIC\lREMOVE\lSplitter:B:13:0x0019\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|REMOVE\lSplitter:B:13:0x0019\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x001a|REMOVE\l|throw r0\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0018|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:12:0x0018\-\>B:16:0x0018\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x001a|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0018|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
MethodNode[shape=record,label="{public okio.Sink okhttp3.internal.http2.Http2Stream.getSink((r2v0 'this' okhttp3.internal.http2.Http2Stream A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_3 -> Node_9[style=dashed];
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_1 -> Node_2;
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_14 -> Node_17;
Node_14 -> Node_18;
Node_16 -> Node_12;
Node_17 -> Node_15;
Node_18 -> Node_16;
}

