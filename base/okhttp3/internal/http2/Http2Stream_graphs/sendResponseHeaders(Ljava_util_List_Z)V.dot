digraph "CFG forokhttp3.internal.http2.Http2Stream.sendResponseHeaders(Ljava\/util\/List;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r9 == null) goto L_0x003c\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|monitor\-enter(r8)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003}"];
Node_3 [shape=record,label="{3\:\ 0x0004|SYNTHETIC\l}"];
Node_4 [shape=record,label="{4\:\ ?|r8.hasResponseHeaders = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|if (r10 != false) goto L_0x0010\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|r8.sink.finished = true\lr10 = true\lr2 = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|r10 = false\lr2 = false\l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|PHI: r2 r10 \l  PHI: (r2v0 boolean) = (r2v1 boolean), (r2v2 boolean) binds: [B:7:0x0010, B:6:0x0009] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v2 boolean) = (r10v9 boolean), (r10v11 boolean) binds: [B:7:0x0010, B:6:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|monitor\-exit(r8)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|if (r10 != false) goto L_0x002a\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|okhttp3.internal.http2.Http2Connection r3 = r8.connection\l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|monitor\-enter(r3)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ ?}"];
Node_14 [shape=record,label="{14\:\ 0x0020|if ((r8.connection.bytesLeftInWriteWindow \> 0 ? 1 : (r8.connection.bytesLeftInWriteWindow == 0 ? 0 : \-1)) != 0) goto L_0x0024\l}"];
Node_15 [shape=record,label="{15\:\ 0x0022|r10 = true\l}"];
Node_16 [shape=record,label="{16\:\ 0x0024|r10 = false\l}"];
Node_17 [shape=record,label="{17\:\ 0x0025|PHI: r10 \l  PHI: (r10v6 boolean) = (r10v7 boolean), (r10v8 boolean) binds: [B:16:0x0024, B:15:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|monitor\-exit(r3)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0026}"];
Node_19 [shape=record,label="{19\:\ 0x0027|REMOVE\l|java.lang.Throwable r9 = move\-exception\l}"];
Node_20 [shape=record,label="{20\:\ 0x0028|REMOVE\l}"];
Node_21 [shape=record,label="{21\:\ 0x0029|REMOVE\l|throw r9\l}"];
Node_22 [shape=record,label="{22\:\ 0x002a|PHI: r10 \l  PHI: (r10v3 boolean) = (r10v2 boolean), (r10v6 boolean) binds: [B:9:0x0013, B:18:0x0026] A[DONT_GENERATE, DONT_INLINE]\l|r8.connection.writeSynReply(r8.f261id, r2, r9)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0031|if (r10 == false) goto L_?\l}"];
Node_24 [shape=record,label="{24\:\ 0x0033|r8.connection.flush()\l}"];
Node_25 [shape=record,label="{25\:\ 0x0039|LOOP_START\lREMOVE\lLOOP:0: B:25:0x0039\-\>B:31:0x0039\l|java.lang.Throwable r9 = move\-exception\l}"];
Node_26 [shape=record,label="{26\:\ 0x003a|SYNTHETIC\lREMOVE\lSplitter:B:26:0x003a\l}"];
Node_27 [shape=record,label="{27\:\ ?|REMOVE\lSplitter:B:26:0x003a\l}"];
Node_28 [shape=record,label="{28\:\ 0x003b|REMOVE\l|throw r9\l}"];
Node_29 [shape=record,label="{29\:\ 0x003c}"];
Node_30 [shape=record,label="{30\:\ 0x0043|throw new java.lang.NullPointerException(\"responseHeaders == null\")\l}"];
Node_31 [shape=record,label="{31\:\ 0x0039|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:25:0x0039\-\>B:31:0x0039\l}"];
Node_32 [shape=record,label="{32\:\ 0x003b|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_33 [shape=record,label="{33\:\ 0x0039|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.http2.Http2Stream.sendResponseHeaders((r8v0 'this' okhttp3.internal.http2.Http2Stream A[IMMUTABLE_TYPE, THIS]), (r9v0 java.util.List\<okhttp3.internal.http2.Header\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lokhttp3\/internal\/http2\/Header;, \>;Z)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_29;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_25;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_22;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_19;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_35;
Node_24 -> Node_34;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_31;
Node_27 -> Node_32;
Node_27 -> Node_33;
Node_29 -> Node_30;
Node_31 -> Node_25;
Node_32 -> Node_28;
Node_33 -> Node_31;
}

