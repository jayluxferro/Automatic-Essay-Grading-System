digraph "CFG forokhttp3.internal.http2.Http2Connection.3.execute()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.internal.http2.Http2Connection) = (r3 I:okhttp3.internal.http2.Http2Connection$3) okhttp3.internal.http2.Http2Connection.3.this$0 okhttp3.internal.http2.Http2Connection \l0x0002: IGET  (r0 I:okhttp3.internal.http2.PushObserver) = (r0 I:okhttp3.internal.http2.Http2Connection) okhttp3.internal.http2.Http2Connection.pushObserver okhttp3.internal.http2.PushObserver \l0x0004: IGET  (r1 I:int) = (r3 I:okhttp3.internal.http2.Http2Connection$3) okhttp3.internal.http2.Http2Connection.3.val$streamId int \l0x0006: IGET  (r2 I:java.util.List) = (r3 I:okhttp3.internal.http2.Http2Connection$3) okhttp3.internal.http2.Http2Connection.3.val$requestHeaders java.util.List \l0x0008: INVOKE  (r0 I:boolean) = \l  (r0 I:okhttp3.internal.http2.PushObserver)\l  (r1 I:int)\l  (r2 I:java.util.List)\l okhttp3.internal.http2.PushObserver.onRequest(int, java.util.List):boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|SYNTHETIC\lSplitter:B:2:0x000e\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x000e\l|0x000e: IGET  (r0 I:okhttp3.internal.http2.Http2Connection) = (r3 I:okhttp3.internal.http2.Http2Connection$3) okhttp3.internal.http2.Http2Connection.3.this$0 okhttp3.internal.http2.Http2Connection A[Catch:\{ IOException \-\> 0x002e \}, TRY_ENTER]\l0x0010: IGET  (r0 I:okhttp3.internal.http2.Http2Writer) = (r0 I:okhttp3.internal.http2.Http2Connection) okhttp3.internal.http2.Http2Connection.writer okhttp3.internal.http2.Http2Writer A[Catch:\{ IOException \-\> 0x002e \}]\l0x0012: IGET  (r1 I:int) = (r3 I:okhttp3.internal.http2.Http2Connection$3) okhttp3.internal.http2.Http2Connection.3.val$streamId int A[Catch:\{ IOException \-\> 0x002e \}]\l0x0014: SGET  (r2 I:okhttp3.internal.http2.ErrorCode) =  okhttp3.internal.http2.ErrorCode.CANCEL okhttp3.internal.http2.ErrorCode A[Catch:\{ IOException \-\> 0x002e \}]\l0x0016: INVOKE  \l  (r0 I:okhttp3.internal.http2.Http2Writer)\l  (r1 I:int)\l  (r2 I:okhttp3.internal.http2.ErrorCode)\l okhttp3.internal.http2.Http2Writer.rstStream(int, okhttp3.internal.http2.ErrorCode):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x002e \}]\l0x0019: IGET  (r0 I:okhttp3.internal.http2.Http2Connection) = (r3 I:okhttp3.internal.http2.Http2Connection$3) okhttp3.internal.http2.Http2Connection.3.this$0 okhttp3.internal.http2.Http2Connection A[Catch:\{ IOException \-\> 0x002e \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x002e \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|SYNTHETIC\lSplitter:B:5:0x001c\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x001c\l|0x001c: IGET  (r1 I:okhttp3.internal.http2.Http2Connection) = (r3 I:okhttp3.internal.http2.Http2Connection$3) okhttp3.internal.http2.Http2Connection.3.this$0 okhttp3.internal.http2.Http2Connection A[Catch:\{ all \-\> 0x002b \}, TRY_ENTER]\l0x001e: IGET  (r1 I:java.util.Set\<java.lang.Integer\>) = (r1 I:okhttp3.internal.http2.Http2Connection) okhttp3.internal.http2.Http2Connection.currentPushRequests java.util.Set A[Catch:\{ all \-\> 0x002b \}]\l0x0020: IGET  (r2 I:int) = (r3 I:okhttp3.internal.http2.Http2Connection$3) okhttp3.internal.http2.Http2Connection.3.val$streamId int A[Catch:\{ all \-\> 0x002b \}]\l0x0022: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ all \-\> 0x002b \}]\l0x0026: INVOKE  (r1 I:java.util.Set), (r2 I:java.lang.Object) java.util.Set.remove(java.lang.Object):boolean type: INTERFACE A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: GOTO  \-\> 0x002e A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|ExcHandler: all null\lSplitter:B:5:0x001c\l|0x002b: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002b \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|SYNTHETIC\lSplitter:B:11:0x002d\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x002d\l|0x002d: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ IOException \-\> 0x002e \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|0x002e: RETURN   \l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:2:0x000e\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.http2.Http2Connection.3.execute((r3 'this' I:okhttp3.internal.http2.Http2Connection$3 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_14;
Node_12 -> Node_14;
Node_14 -> Node_13;
}

