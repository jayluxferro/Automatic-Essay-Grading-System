digraph "CFG forokhttp3.internal.http2.Http2Reader.readWindowUpdate(Lokhttp3\/internal\/http2\/Http2Reader$Handler;IBI)V" {
subgraph cluster_Region_1432273132 {
label = "R(1:(2:2|(1:4)(2:6|7))(2:8|9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_778789875 {
label = "IF [B:1:0x0003] THEN: R(2:2|(1:4)(2:6|7)) ELSE: R(2:8|9)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r7 == 4) goto L_0x0005\l}"];
subgraph cluster_Region_423457517 {
label = "R(2:2|(1:4)(2:6|7))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|long long r1 = ((long) r5.source.readInt()) & 2147483647L\l}"];
subgraph cluster_IfRegion_1228256883 {
label = "IF [B:3:0x0014] THEN: R(1:4) ELSE: R(2:6|7)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0014|if (r1 != 0) goto L_0x0016\l}"];
subgraph cluster_Region_641119742 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0016|r6.windowUpdate(r9, r1)\l}"];
}
subgraph cluster_Region_1835397595 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001a}"];
Node_7 [shape=record,label="{7\:\ 0x0028|throw okhttp3.internal.http2.Http2.ioException(\"windowSizeIncrement was 0\", java.lang.Long.valueOf(r1))\l}"];
}
}
}
subgraph cluster_Region_1332236197 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0029}"];
Node_9 [shape=record,label="{9\:\ 0x0037|throw okhttp3.internal.http2.Http2.ioException(\"TYPE_WINDOW_UPDATE length !=4: %s\", java.lang.Integer.valueOf(r7))\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0019}"];
MethodNode[shape=record,label="{private void okhttp3.internal.http2.Http2Reader.readWindowUpdate((r5v0 'this' okhttp3.internal.http2.Http2Reader A[IMMUTABLE_TYPE, THIS]), (r6v0 okhttp3.internal.http2.Http2Reader$Handler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_8[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_0 -> Node_1;
}

