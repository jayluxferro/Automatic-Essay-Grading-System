digraph "CFG forokhttp3.internal.http2.Http2Reader.readSettings(Lokhttp3\/internal\/http2\/Http2Reader$Handler;IBI)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r9 != 0) goto L_0x0085\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if ((r8 & 1) == 0) goto L_0x0016\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|if (r7 != 0) goto L_0x000d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|r6.ackSettings()\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d}"];
Node_8 [shape=record,label="{8\:\ 0x0015|throw okhttp3.internal.http2.Http2.ioException(\"FRAME_SIZE_ERROR ack frame should be empty!\", new java.lang.Object[0])\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016}"];
Node_10 [shape=record,label="{10\:\ 0x0018|if ((r7 % 6) != 0) goto L_0x0076\l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|okhttp3.internal.http2.Settings r8 = new okhttp3.internal.http2.Settings()\lr1 = 0\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:11:0x001a, B:30:0x006c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:12:0x0020\-\>B:30:0x006c\l|if (r1 \>= r7) goto L_0x0072\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|r2 = r5.source.readShort() & 65535\lint r3 = r5.source.readInt()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|switch(r2) \{\l    case 1: goto L_0x006c;\l    case 2: goto L_0x005e;\l    case 3: goto L_0x005c;\l    case 4: goto L_0x004f;\l    case 5: goto L_0x0036;\l    case 6: goto L_0x006c;\l    default: goto L_0x0035;\l\}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0036}"];
Node_16 [shape=record,label="{16\:\ 0x0038|if (r3 \< 16384) goto L_0x0040\l}"];
Node_17 [shape=record,label="{17\:\ 0x003a}"];
Node_18 [shape=record,label="{18\:\ 0x003d|if (r3 \> 16777215) goto L_0x0040\l}"];
Node_19 [shape=record,label="{19\:\ 0x0040|java.lang.Object[] r6 = new java.lang.Object[]\{java.lang.Integer.valueOf(r3)\}\l}"];
Node_20 [shape=record,label="{20\:\ 0x004e|throw okhttp3.internal.http2.Http2.ioException(\"PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: %s\", r6)\l}"];
Node_21 [shape=record,label="{21\:\ 0x004f|r2 = 7\l}"];
Node_22 [shape=record,label="{22\:\ 0x0050|if (r3 \< 0) goto L_0x0053\l}"];
Node_23 [shape=record,label="{23\:\ 0x0053}"];
Node_24 [shape=record,label="{24\:\ 0x005b|throw okhttp3.internal.http2.Http2.ioException(\"PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE \> 2^31 \- 1\", new java.lang.Object[0])\l}"];
Node_25 [shape=record,label="{25\:\ 0x005c|r2 = 4\l}"];
Node_26 [shape=record,label="{26\:\ 0x005e|if (r3 == 0) goto L_0x006c\l}"];
Node_27 [shape=record,label="{27\:\ 0x0060|if (r3 != 1) goto L_0x0063\l}"];
Node_28 [shape=record,label="{28\:\ 0x0063}"];
Node_29 [shape=record,label="{29\:\ 0x006b|throw okhttp3.internal.http2.Http2.ioException(\"PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1\", new java.lang.Object[0])\l}"];
Node_30 [shape=record,label="{30\:\ 0x006c|LOOP_END\lPHI: r2 \l  PHI: (r2v3 short) = (r2v2 short), (r2v2 short), (r2v2 short), (r2v4 short), (r2v5 short), (r2v2 short) binds: [B:42:0x006c, B:44:0x006c, B:47:0x006c, B:43:0x006c, B:46:0x006c, B:45:0x006c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:12:0x0020\-\>B:30:0x006c\l|r8.set(r2, r3)\lint r1 = r1 + 6\l}"];
Node_31 [shape=record,label="{31\:\ 0x0072|r6.settings(false, r8)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0075|RETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ 0x0076|java.lang.Object[] r6 = new java.lang.Object[]\{java.lang.Integer.valueOf(r7)\}\l}"];
Node_34 [shape=record,label="{34\:\ 0x0084|throw okhttp3.internal.http2.Http2.ioException(\"TYPE_SETTINGS length %% 6 != 0: %s\", r6)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0085}"];
Node_36 [shape=record,label="{36\:\ 0x008d|throw okhttp3.internal.http2.Http2.ioException(\"TYPE_SETTINGS streamId != 0\", new java.lang.Object[0])\l}"];
Node_37 [shape=record,label="{37\:\ 0x0072|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0063|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0053|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0040|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0040|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x006c|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x006c|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x006c|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x006c|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x006c|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x006c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.http2.Http2Reader.readSettings((r5v0 'this' okhttp3.internal.http2.Http2Reader A[IMMUTABLE_TYPE, THIS]), (r6v0 okhttp3.internal.http2.Http2Reader$Handler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_35;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_33;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_37;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_14 -> Node_25;
Node_14 -> Node_26;
Node_14 -> Node_42;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_40;
Node_17 -> Node_18;
Node_18 -> Node_41;
Node_18 -> Node_45[style=dashed];
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_39;
Node_22 -> Node_46[style=dashed];
Node_23 -> Node_24;
Node_25 -> Node_43;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_44;
Node_27 -> Node_38;
Node_27 -> Node_47[style=dashed];
Node_28 -> Node_29;
Node_30 -> Node_12;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_37 -> Node_31;
Node_38 -> Node_28;
Node_39 -> Node_23;
Node_40 -> Node_19;
Node_41 -> Node_19;
Node_42 -> Node_30;
Node_43 -> Node_30;
Node_44 -> Node_30;
Node_45 -> Node_30;
Node_46 -> Node_30;
Node_47 -> Node_30;
}

