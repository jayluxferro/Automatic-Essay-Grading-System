digraph "CFG forokhttp3.internal.http2.Http2Reader.lengthWithoutPadding(IBS)I" {
subgraph cluster_Region_486909087 {
label = "R(2:(1:2)|(2:(1:5)|(2:6|7)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1998247479 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r2 & 8) != 0) goto L_0x0004\l}"];
subgraph cluster_Region_1429625938 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|r1\-\-\l}"];
}
}
subgraph cluster_Region_1818110916 {
label = "R(2:(1:5)|(2:6|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1548704652 {
label = "IF [B:3:0x0006] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v7 int) binds: [B:1:0x0002, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \<= r1) goto L_0x0008\l}"];
subgraph cluster_Region_2110100828 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000a|RETURN\l|return (short) (r1 \- r3)\l}"];
}
}
subgraph cluster_Region_452362874 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000b}"];
Node_7 [shape=record,label="{7\:\ 0x0022|throw okhttp3.internal.http2.Http2.ioException(\"PROTOCOL_ERROR padding %s \> remaining length %s\", java.lang.Short.valueOf(r3), java.lang.Integer.valueOf(r1))\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0008}"];
MethodNode[shape=record,label="{static int okhttp3.internal.http2.Http2Reader.lengthWithoutPadding((r1v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 short A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_4 -> Node_5;
}

