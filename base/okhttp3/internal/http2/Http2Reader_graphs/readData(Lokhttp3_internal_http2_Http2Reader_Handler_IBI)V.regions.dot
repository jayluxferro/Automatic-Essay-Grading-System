digraph "CFG forokhttp3.internal.http2.Http2Reader.readData(Lokhttp3\/internal\/http2\/Http2Reader$Handler;IBI)V" {
subgraph cluster_Region_1365743147 {
label = "R(2:0|(2:(4:2|3|(1:8)|(2:(3:(1:12)|13|14)|(1:16)))|(1:18)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|short r0 = 0\l}"];
subgraph cluster_Region_124492523 {
label = "R(2:(4:2|3|(1:8)|(2:(3:(1:12)|13|14)|(1:16)))|(1:18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_568210097 {
label = "IF [B:1:0x0001] THEN: R(4:2|3|(1:8)|(2:(3:(1:12)|13|14)|(1:16))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r8 != 0) goto L_0x0003\l}"];
subgraph cluster_Region_1463594677 {
label = "R(4:2|3|(1:8)|(2:(3:(1:12)|13|14)|(1:16)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|boolean r2 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|boolean r1 = (r7 & 1) != 0\l}"];
subgraph cluster_IfRegion_1893739683 {
label = "IF [B:7:0x000d] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000d|if ((r7 & 32) == 0) goto L_0x0010\l}"];
subgraph cluster_Region_981970103 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0010|r2 = false\l}"];
}
}
subgraph cluster_Region_1579914647 {
label = "R(2:(3:(1:12)|13|14)|(1:16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1271563310 {
label = "IF [B:9:0x0011] THEN: R(3:(1:12)|13|14) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0011|PHI: r2 \l  PHI: (r2v1 boolean) = (r2v0 boolean), (r2v3 boolean) binds: [B:7:0x000d, B:8:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == false) goto L_0x0013\l}"];
subgraph cluster_Region_340483563 {
label = "R(3:(1:12)|13|14)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_97312891 {
label = "IF [B:11:0x0015] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0015|if ((r7 & 8) != 0) goto L_0x0017\l}"];
subgraph cluster_Region_1193726794 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0017|short r0 = (short) (r4.source.readByte() & 255)\l}"];
}
}
Node_13 [shape=record,label="{13\:\ 0x0020|PHI: r0 \l  PHI: (r0v1 short) = (r0v0 short), (r0v5 short) binds: [B:11:0x0015, B:12:0x0017] A[DONT_GENERATE, DONT_INLINE]\l|r5.data(r1, r8, r4.source, lengthWithoutPadding(r6, r7, r0))\lr4.source.skip((long) r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1431769545 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0038|throw okhttp3.internal.http2.Http2.ioException(\"PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA\", new java.lang.Object[0])\l}"];
}
}
}
}
subgraph cluster_Region_614710004 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0041|throw okhttp3.internal.http2.Http2.ioException(\"PROTOCOL_ERROR: TYPE_DATA streamId == 0\", new java.lang.Object[0])\l}"];
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0008}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000a}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000b|PHI: r1 \l  PHI: (r1v1 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0013}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0030}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0039}"];
MethodNode[shape=record,label="{private void okhttp3.internal.http2.Http2Reader.readData((r4v0 'this' okhttp3.internal.http2.Http2Reader A[IMMUTABLE_TYPE, THIS]), (r5v0 okhttp3.internal.http2.Http2Reader$Handler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_17[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_15[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_10 -> Node_11;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

