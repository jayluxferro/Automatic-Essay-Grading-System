digraph "CFG forokhttp3.internal.http2.Http2Reader.lengthWithoutPadding(IBS)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r2 & 8) == 0) goto L_0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|int r1 = r1 + \-1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v7 int) binds: [B:1:0x0002, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \> r1) goto L_0x000b\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008}"];
Node_5 [shape=record,label="{5\:\ 0x000a|RETURN\l|return (short) (r1 \- r3)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|java.lang.Object[] r2 = new java.lang.Object[]\{java.lang.Short.valueOf(r3), java.lang.Integer.valueOf(r1)\}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|throw okhttp3.internal.http2.Http2.ioException(\"PROTOCOL_ERROR padding %s \> remaining length %s\", r2)\l}"];
MethodNode[shape=record,label="{static int okhttp3.internal.http2.Http2Reader.lengthWithoutPadding((r1v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 short A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

