digraph "CFG forokhttp3.internal.http2.Http2Reader.readGoAway(Lokhttp3\/internal\/http2\/Http2Reader$Handler;IBI)V" {
subgraph cluster_Region_640025818 {
label = "R(1:(2:14|15)(1:(2:3|(2:(4:5|(1:7)|8|9)|(2:10|11)))(1:13)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1150019421 {
label = "IF [B:1:0x0004] THEN: R(2:14|15) ELSE: R(1:(2:3|(2:(4:5|(1:7)|8|9)|(2:10|11)))(1:13))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r5 \< 8) goto L_0x0042\l}"];
subgraph cluster_Region_692027228 {
label = "R(2:14|15)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0042}"];
Node_15 [shape=record,label="{15\:\ 0x0050|throw okhttp3.internal.http2.Http2.ioException(\"TYPE_GOAWAY length \< 8: %s\", java.lang.Integer.valueOf(r5))\l}"];
}
subgraph cluster_Region_284296341 {
label = "R(1:(2:3|(2:(4:5|(1:7)|8|9)|(2:10|11)))(1:13)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_107270789 {
label = "IF [B:2:0x0006] THEN: R(2:3|(2:(4:5|(1:7)|8|9)|(2:10|11))) ELSE: R(1:13) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r7 == 0) goto L_0x0008\l}"];
subgraph cluster_Region_1509280431 {
label = "R(2:3|(2:(4:5|(1:7)|8|9)|(2:10|11)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|int int r7 = r3.source.readInt()\lint int r2 = r3.source.readInt()\lint int r5 = r5 \- 8\lokhttp3.internal.http2.ErrorCode okhttp3.internal.http2.ErrorCode r0 = okhttp3.internal.http2.ErrorCode.fromHttp2(r2)\l}"];
subgraph cluster_Region_491682843 {
label = "R(2:(4:5|(1:7)|8|9)|(2:10|11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1316376428 {
label = "IF [B:4:0x0019] THEN: R(4:5|(1:7)|8|9) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0019|if (r0 != null) goto L_0x001b\l}"];
subgraph cluster_Region_779019924 {
label = "R(4:5|(1:7)|8|9)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001b|okio.ByteString okio.ByteString r6 = okio.ByteString.EMPTY\l}"];
subgraph cluster_IfRegion_1621249881 {
label = "IF [B:6:0x001d] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001d|if (r5 \> 0) goto L_0x001f\l}"];
subgraph cluster_Region_393560400 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001f|okio.ByteString r6 = r3.source.readByteString((long) r5)\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0026|PHI: r6 \l  PHI: (r6v3 okio.ByteString) = (r6v2 okio.ByteString), (r6v5 okio.ByteString) binds: [B:6:0x001d, B:7:0x001f] A[DONT_GENERATE, DONT_INLINE]\l|r4.goAway(r7, r0, r6)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1708413463 {
label = "R(2:10|11)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002a}"];
Node_11 [shape=record,label="{11\:\ 0x0038|throw okhttp3.internal.http2.Http2.ioException(\"TYPE_GOAWAY unexpected error code: %d\", java.lang.Integer.valueOf(r2))\l}"];
}
}
}
subgraph cluster_Region_1339630961 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0041|throw okhttp3.internal.http2.Http2.ioException(\"TYPE_GOAWAY streamId != 0\", new java.lang.Object[0])\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0039}"];
MethodNode[shape=record,label="{private void okhttp3.internal.http2.Http2Reader.readGoAway((r3v0 'this' okhttp3.internal.http2.Http2Reader A[IMMUTABLE_TYPE, THIS]), (r4v0 okhttp3.internal.http2.Http2Reader$Handler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_14 -> Node_15;
Node_2 -> Node_3;
Node_2 -> Node_12[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_10[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_0 -> Node_1;
Node_12 -> Node_13;
}

