digraph "CFG forokhttp3.internal.http2.Http2Reader.readPriority(Lokhttp3\/internal\/http2\/Http2Reader$Handler;IBI)V" {
subgraph cluster_Region_1378173517 {
label = "R(1:(2:7|8)(1:(1:3)(1:6)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_195937629 {
label = "IF [B:1:0x0002] THEN: R(2:7|8) ELSE: R(1:(1:3)(1:6))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3 != 5) goto L_0x0013\l}"];
subgraph cluster_Region_316694083 {
label = "R(2:7|8)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0013}"];
Node_8 [shape=record,label="{8\:\ 0x0022|throw okhttp3.internal.http2.Http2.ioException(\"TYPE_PRIORITY length: %d != 5\", java.lang.Integer.valueOf(r3))\l}"];
}
subgraph cluster_Region_1692561851 {
label = "R(1:(1:3)(1:6)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_481128512 {
label = "IF [B:2:0x0004] THEN: R(1:3) ELSE: R(1:6) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r5 != 0) goto L_0x0006\l}"];
subgraph cluster_Region_2035272101 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|readPriority(r2, r5)\l}"];
}
subgraph cluster_Region_1766687369 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0012|throw okhttp3.internal.http2.Http2.ioException(\"TYPE_PRIORITY streamId == 0\", new java.lang.Object[0])\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0009}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000a}"];
MethodNode[shape=record,label="{private void okhttp3.internal.http2.Http2Reader.readPriority((r1v0 'this' okhttp3.internal.http2.Http2Reader A[IMMUTABLE_TYPE, THIS]), (r2v0 okhttp3.internal.http2.Http2Reader$Handler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_7 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_0 -> Node_1;
Node_5 -> Node_6;
}

