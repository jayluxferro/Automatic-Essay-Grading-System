digraph "CFG forokhttp3.internal.http2.Http2Reader.readMedium(Lokio\/BufferedSource;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:byte) = (r2 I:okio.BufferedSource) okio.BufferedSource.readByte():byte type: INTERFACE \l0x0004: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0006: ARITH  (r0 I:int) = (r0 I:int) \<\< (16 int) \l0x0008: INVOKE  (r1 I:byte) = (r2 I:okio.BufferedSource) okio.BufferedSource.readByte():byte type: INTERFACE \l0x000c: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x000e: ARITH  (r1 I:int) = (r1 I:int) \<\< (8 int) \l0x0010: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) \| (r1 I:?[int, boolean, short, byte, char]) \l0x0011: INVOKE  (r2 I:byte) = (r2 I:okio.BufferedSource) okio.BufferedSource.readByte():byte type: INTERFACE \l0x0015: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0017: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) \| (r0 I:?[int, boolean, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{static int okhttp3.internal.http2.Http2Reader.readMedium((r2 I:okio.BufferedSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

