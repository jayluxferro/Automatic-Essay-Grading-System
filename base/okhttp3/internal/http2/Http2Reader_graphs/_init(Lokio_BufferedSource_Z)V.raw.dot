digraph "CFG forokhttp3.internal.http2.Http2Reader.\<init\>(Lokio\/BufferedSource;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r2 I:okio.BufferedSource)\l  (r1 I:okhttp3.internal.http2.Http2Reader)\l okhttp3.internal.http2.Http2Reader.source okio.BufferedSource \l0x0005: IPUT  (r3 I:boolean), (r1 I:okhttp3.internal.http2.Http2Reader) okhttp3.internal.http2.Http2Reader.client boolean \l0x0007: NEW_INSTANCE  (r2 I:okhttp3.internal.http2.Http2Reader$ContinuationSource) =  okhttp3.internal.http2.Http2Reader$ContinuationSource \l0x0009: IGET  (r3 I:okio.BufferedSource) = (r1 I:okhttp3.internal.http2.Http2Reader) okhttp3.internal.http2.Http2Reader.source okio.BufferedSource \l0x000b: INVOKE  \l  (r2 I:okhttp3.internal.http2.Http2Reader$ContinuationSource)\l  (r3 I:okio.BufferedSource)\l okhttp3.internal.http2.Http2Reader.ContinuationSource.\<init\>(okio.BufferedSource):void type: DIRECT \l0x000e: IPUT  \l  (r2 I:okhttp3.internal.http2.Http2Reader$ContinuationSource)\l  (r1 I:okhttp3.internal.http2.Http2Reader)\l okhttp3.internal.http2.Http2Reader.continuation okhttp3.internal.http2.Http2Reader$ContinuationSource \l0x0010: NEW_INSTANCE  (r2 I:okhttp3.internal.http2.Hpack$Reader) =  okhttp3.internal.http2.Hpack$Reader \l0x0012: IGET  (r3 I:okhttp3.internal.http2.Http2Reader$ContinuationSource) = (r1 I:okhttp3.internal.http2.Http2Reader) okhttp3.internal.http2.Http2Reader.continuation okhttp3.internal.http2.Http2Reader$ContinuationSource \l0x0014: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (4096(0x1000, float:5.74E\-42) ?[int, float, short, byte, char])\l \l0x0016: INVOKE  \l  (r2 I:okhttp3.internal.http2.Hpack$Reader)\l  (r0 I:int)\l  (r3 I:okio.Source)\l okhttp3.internal.http2.Hpack.Reader.\<init\>(int, okio.Source):void type: DIRECT \l0x0019: IPUT  \l  (r2 I:okhttp3.internal.http2.Hpack$Reader)\l  (r1 I:okhttp3.internal.http2.Http2Reader)\l okhttp3.internal.http2.Http2Reader.hpackReader okhttp3.internal.http2.Hpack$Reader \l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|0x001b: RETURN   \l}"];
MethodNode[shape=record,label="{void okhttp3.internal.http2.Http2Reader.\<init\>((r1 'this' I:okhttp3.internal.http2.Http2Reader A[IMMUTABLE_TYPE, THIS]), (r2 I:okio.BufferedSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

