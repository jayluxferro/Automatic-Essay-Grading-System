digraph "CFG forokhttp3.internal.http2.Http2Reader.readPriority(Lokhttp3\/internal\/http2\/Http2Reader$Handler;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r4.source.readInt()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|if ((Integer.MIN_VALUE & r0) == 0) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|r1 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|r1 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|PHI: r1 \l  PHI: (r1v2 boolean) = (r1v3 boolean), (r1v4 boolean) binds: [B:3:0x000e, B:2:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|r5.priority(r6, r0 & Integer.MAX_VALUE, (r4.source.readByte() & 255) + 1, r1)\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.http2.Http2Reader.readPriority((r4v0 'this' okhttp3.internal.http2.Http2Reader A[IMMUTABLE_TYPE, THIS]), (r5v0 okhttp3.internal.http2.Http2Reader$Handler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

