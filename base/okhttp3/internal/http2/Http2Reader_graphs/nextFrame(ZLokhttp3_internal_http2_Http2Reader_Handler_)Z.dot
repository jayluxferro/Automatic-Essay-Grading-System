digraph "CFG forokhttp3.internal.http2.Http2Reader.nextFrame(ZLokhttp3\/internal\/http2\/Http2Reader$Handler;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IOException \-\> 0x0096 \}\lSplitter:B:1:0x0001\l|r6.source.require(9)     \/\/ Catch:\{ IOException \-\> 0x0096 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|int r1 = readMedium(r6.source)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|if (r1 \< 0) goto L_0x0087\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011}"];
Node_6 [shape=record,label="{6\:\ 0x0013|if (r1 \> 16384) goto L_0x0087\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|byte r3 = (byte) (r6.source.readByte() & 255)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|if (r7 == false) goto L_0x0033\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020}"];
Node_10 [shape=record,label="{10\:\ 0x0021|if (r3 != 4) goto L_0x0024\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|java.lang.Object[] r7 = new java.lang.Object[]\{java.lang.Byte.valueOf(r3)\}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|throw okhttp3.internal.http2.Http2.ioException(\"Expected a SETTINGS frame but was %s\", r7)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|byte r7 = (byte) (r6.source.readByte() & 255)\lr0 = r6.source.readInt() & Integer.MAX_VALUE\l}"];
Node_14 [shape=record,label="{14\:\ 0x004e|if (logger.isLoggable(java.util.logging.Level.FINE) == false) goto L_0x0059\l}"];
Node_15 [shape=record,label="{15\:\ 0x0050|logger.fine(okhttp3.internal.http2.Http2.frameLog(true, r0, r1, r3, r7))\l}"];
Node_16 [shape=record,label="{16\:\ 0x0059|switch(r3) \{\l    case 0: goto L_0x0083;\l    case 1: goto L_0x007f;\l    case 2: goto L_0x007b;\l    case 3: goto L_0x0077;\l    case 4: goto L_0x0073;\l    case 5: goto L_0x006f;\l    case 6: goto L_0x006b;\l    case 7: goto L_0x0067;\l    case 8: goto L_0x0063;\l    default: goto L_0x005c;\l\}\l}"];
Node_17 [shape=record,label="{17\:\ 0x005c|r6.source.skip((long) r1)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0063|readWindowUpdate(r8, r1, r7, r0)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0067|readGoAway(r8, r1, r7, r0)\l}"];
Node_20 [shape=record,label="{20\:\ 0x006b|readPing(r8, r1, r7, r0)\l}"];
Node_21 [shape=record,label="{21\:\ 0x006f|readPushPromise(r8, r1, r7, r0)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0073|readSettings(r8, r1, r7, r0)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0077|readRstStream(r8, r1, r7, r0)\l}"];
Node_24 [shape=record,label="{24\:\ 0x007b|readPriority(r8, r1, r7, r0)\l}"];
Node_25 [shape=record,label="{25\:\ 0x007f|readHeaders(r8, r1, r7, r0)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0083|readData(r8, r1, r7, r0)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0086|RETURN\l|return true\l}"];
Node_28 [shape=record,label="{28\:\ 0x0087|java.lang.Object[] r7 = new java.lang.Object[]\{java.lang.Integer.valueOf(r1)\}\l}"];
Node_29 [shape=record,label="{29\:\ 0x0095|throw okhttp3.internal.http2.Http2.ioException(\"FRAME_SIZE_ERROR: %s\", r7)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0096|RETURN\l|return false\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:1:0x0001\l}"];
MethodNode[shape=record,label="{public boolean okhttp3.internal.http2.Http2Reader.nextFrame((r6v0 'this' okhttp3.internal.http2.Http2Reader A[IMMUTABLE_TYPE, THIS]), (r7v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 okhttp3.internal.http2.Http2Reader$Handler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_31;
Node_2 -> Node_3;
Node_2 -> Node_31;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_28;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_28;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18;
Node_16 -> Node_19;
Node_16 -> Node_20;
Node_16 -> Node_21;
Node_16 -> Node_22;
Node_16 -> Node_23;
Node_16 -> Node_24;
Node_16 -> Node_25;
Node_16 -> Node_26;
Node_17 -> Node_27;
Node_18 -> Node_27;
Node_19 -> Node_27;
Node_20 -> Node_27;
Node_21 -> Node_27;
Node_22 -> Node_27;
Node_23 -> Node_27;
Node_24 -> Node_27;
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_31 -> Node_30;
}

