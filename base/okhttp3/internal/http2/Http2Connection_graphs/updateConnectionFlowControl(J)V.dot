digraph "CFG forokhttp3.internal.http2.Http2Connection.updateConnectionFlowControl(J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r3)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?|r3.unacknowledgedBytesRead = r3.unacknowledgedBytesRead + r4\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|if ((r3.unacknowledgedBytesRead \> ((long) (r3.okHttpSettings.getInitialWindowSize() \/ 2)) ? 1 : (r3.unacknowledgedBytesRead == ((long) (r3.okHttpSettings.getInitialWindowSize() \/ 2)) ? 0 : \-1)) \< 0) goto L_0x0020\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|writeWindowUpdateLater(0, r3.unacknowledgedBytesRead)\lr3.unacknowledgedBytesRead = 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|monitor\-exit(r3)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|REMOVE\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|REMOVE\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|REMOVE\l|throw r4\l}"];
MethodNode[shape=record,label="{synchronized void okhttp3.internal.http2.Http2Connection.updateConnectionFlowControl((r3v0 'this' okhttp3.internal.http2.Http2Connection A[IMMUTABLE_TYPE, THIS]), (r4v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

