digraph "CFG forokhttp3.internal.http2.Http2Connection.pushRequestLater(ILjava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:java.util.Set\<java.lang.Integer\>) = (r8 I:okhttp3.internal.http2.Http2Connection) okhttp3.internal.http2.Http2Connection.currentPushRequests java.util.Set A[Catch:\{ all \-\> 0x003c \}, TRY_ENTER]\l0x0003: INVOKE  (r1 I:java.lang.Integer) = (r9 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ all \-\> 0x003c \}]\l0x0007: INVOKE  (r0 I:boolean) = (r0 I:java.util.Set), (r1 I:java.lang.Object) java.util.Set.contains(java.lang.Object):boolean type: INTERFACE A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: SGET  (r10 I:okhttp3.internal.http2.ErrorCode) =  okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR okhttp3.internal.http2.ErrorCode A[Catch:\{ all \-\> 0x003c \}]\l0x000f: INVOKE  \l  (r8 I:okhttp3.internal.http2.Http2Connection)\l  (r9 I:int)\l  (r10 I:okhttp3.internal.http2.ErrorCode)\l okhttp3.internal.http2.Http2Connection.writeSynResetLater(int, okhttp3.internal.http2.ErrorCode):void type: VIRTUAL A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: MONITOR_EXIT  (r8 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: RETURN   A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IGET  (r0 I:java.util.Set\<java.lang.Integer\>) = (r8 I:okhttp3.internal.http2.Http2Connection) okhttp3.internal.http2.Http2Connection.currentPushRequests java.util.Set A[Catch:\{ all \-\> 0x003c \}]\l0x0016: INVOKE  (r1 I:java.lang.Integer) = (r9 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ all \-\> 0x003c \}]\l0x001a: INVOKE  (r0 I:java.util.Set), (r1 I:java.lang.Object) java.util.Set.add(java.lang.Object):boolean type: INTERFACE A[Catch:\{ all \-\> 0x003c \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: MONITOR_EXIT  (r8 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003c \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|SYNTHETIC\lSplitter:B:9:0x001e\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x001e\l|0x001e: NEW_INSTANCE  (r0 I:okhttp3.internal.http2.Http2Connection$3) =  okhttp3.internal.http2.Http2Connection$3 A[Catch:\{ RejectedExecutionException \-\> 0x003b \}, TRY_ENTER]\l0x0020: CONST_STR  (r4 I:java.lang.String) =  \"OkHttp %s Push Request[%s]\" A[Catch:\{ RejectedExecutionException \-\> 0x003b \}]\l0x0022: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ RejectedExecutionException \-\> 0x003b \}]\l0x0023: NEW_ARRAY  (r5 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ RejectedExecutionException \-\> 0x003b \}]\l0x0025: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ RejectedExecutionException \-\> 0x003b \}]\l0x0026: IGET  (r2 I:java.lang.String) = (r8 I:okhttp3.internal.http2.Http2Connection) okhttp3.internal.http2.Http2Connection.hostname java.lang.String A[Catch:\{ RejectedExecutionException \-\> 0x003b \}]\l0x0028: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l A[Catch:\{ RejectedExecutionException \-\> 0x003b \}]\l0x002a: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ RejectedExecutionException \-\> 0x003b \}]\l0x002b: INVOKE  (r2 I:java.lang.Integer) = (r9 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ RejectedExecutionException \-\> 0x003b \}]\l0x002f: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l A[Catch:\{ RejectedExecutionException \-\> 0x003b \}]\l0x0031: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ RejectedExecutionException \-\> 0x003b \}]\l0x0032: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) A[Catch:\{ RejectedExecutionException \-\> 0x003b \}]\l0x0033: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ RejectedExecutionException \-\> 0x003b \}]\l0x0034: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) A[Catch:\{ RejectedExecutionException \-\> 0x003b \}]\l0x0035: INVOKE  \l  (r2 I:okhttp3.internal.http2.Http2Connection$3)\l  (r3 I:okhttp3.internal.http2.Http2Connection)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.Object[])\l  (r6 I:int)\l  (r7 I:java.util.List)\l okhttp3.internal.http2.Http2Connection.3.\<init\>(okhttp3.internal.http2.Http2Connection, java.lang.String, java.lang.Object[], int, java.util.List):void type: DIRECT A[Catch:\{ RejectedExecutionException \-\> 0x003b \}]\l0x0038: INVOKE  \l  (r8 I:okhttp3.internal.http2.Http2Connection)\l  (r0 I:okhttp3.internal.NamedRunnable)\l okhttp3.internal.http2.Http2Connection.pushExecutorExecute(okhttp3.internal.NamedRunnable):void type: DIRECT A[Catch:\{ RejectedExecutionException \-\> 0x003b \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|0x003b: RETURN   \l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lExcHandler: RejectedExecutionException null\lSplitter:B:9:0x001e\l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x003c: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|SYNTHETIC\lSplitter:B:14:0x003d\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x003d\l|0x003d: MONITOR_EXIT  (r8 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003c \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|0x003e: THROW  (r9 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{void okhttp3.internal.http2.Http2Connection.pushRequestLater((r8 'this' I:okhttp3.internal.http2.Http2Connection A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.util.List\<okhttp3.internal.http2.Header\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(I, Ljava\/util\/List\<, Lokhttp3\/internal\/http2\/Header;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_11;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_13;
Node_15 -> Node_16;
Node_15 -> Node_13;
}

