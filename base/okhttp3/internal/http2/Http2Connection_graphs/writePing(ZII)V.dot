digraph "CFG forokhttp3.internal.http2.Http2Connection.writePing(ZII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r3 != false) goto L_0x0012\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|monitor\-enter(r2)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?|boolean r0 = r2.awaitingPong\lr2.awaitingPong = true\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|monitor\-exit(r2)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|if (r0 == false) goto L_0x0012\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|failConnection()\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|LOOP_START\lREMOVE\lLOOP:0: B:8:0x000f\-\>B:16:0x000f\l|java.lang.Throwable r3 = move\-exception\l}"];
Node_9 [shape=record,label="{9\:\ 0x0010|SYNTHETIC\lREMOVE\lSplitter:B:9:0x0010\l}"];
Node_10 [shape=record,label="{10\:\ ?|REMOVE\lSplitter:B:9:0x0010\l}"];
Node_11 [shape=record,label="{11\:\ 0x0011|REMOVE\l|throw r3\l}"];
Node_12 [shape=record,label="{12\:\ 0x0012|SYNTHETIC\lSplitter:B:12:0x0012\l}"];
Node_13 [shape=record,label="{13\:\ ?|Catch:\{ IOException \-\> 0x0018 \}\lSplitter:B:12:0x0012\l|r2.writer.ping(r3, r4, r5)     \/\/ Catch:\{ IOException \-\> 0x0018 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|failConnection()\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:12:0x0012\l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:8:0x000f\-\>B:16:0x000f\l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void okhttp3.internal.http2.Http2Connection.writePing((r2v0 'this' okhttp3.internal.http2.Http2Connection A[IMMUTABLE_TYPE, THIS]), (r3v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_12;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_16;
Node_10 -> Node_17;
Node_10 -> Node_18;
Node_12 -> Node_13;
Node_12 -> Node_15;
Node_13 -> Node_15;
Node_13 -> Node_20;
Node_14 -> Node_19;
Node_15 -> Node_14;
Node_16 -> Node_8;
Node_17 -> Node_11;
Node_18 -> Node_16;
}

