digraph "CFG forokhttp3.internal.http2.Http2Connection.writeSynReply(IZLjava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.internal.http2.Http2Writer) = (r1 I:okhttp3.internal.http2.Http2Connection) okhttp3.internal.http2.Http2Connection.writer okhttp3.internal.http2.Http2Writer \l0x0002: INVOKE  \l  (r0 I:okhttp3.internal.http2.Http2Writer)\l  (r3 I:boolean)\l  (r2 I:int)\l  (r4 I:java.util.List)\l okhttp3.internal.http2.Http2Writer.synReply(boolean, int, java.util.List):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: RETURN   \l}"];
MethodNode[shape=record,label="{void okhttp3.internal.http2.Http2Connection.writeSynReply((r1 'this' I:okhttp3.internal.http2.Http2Connection A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.util.List\<okhttp3.internal.http2.Header\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(IZ, Ljava\/util\/List\<, Lokhttp3\/internal\/http2\/Header;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

