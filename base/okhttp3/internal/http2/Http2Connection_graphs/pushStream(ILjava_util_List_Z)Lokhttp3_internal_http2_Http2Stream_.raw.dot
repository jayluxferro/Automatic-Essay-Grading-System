digraph "CFG forokhttp3.internal.http2.Http2Connection.pushStream(ILjava\/util\/List;Z)Lokhttp3\/internal\/http2\/Http2Stream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r1 I:okhttp3.internal.http2.Http2Connection) okhttp3.internal.http2.Http2Connection.client boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r2 I:okhttp3.internal.http2.Http2Stream) = \l  (r1 I:okhttp3.internal.http2.Http2Connection)\l  (r2 I:int)\l  (r3 I:java.util.List)\l  (r4 I:boolean)\l okhttp3.internal.http2.Http2Connection.newStream(int, java.util.List, boolean):okhttp3.internal.http2.Http2Stream type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: RETURN  (r2 I:okhttp3.internal.http2.Http2Stream) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: NEW_INSTANCE  (r2 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x000b: CONST_STR  (r3 I:java.lang.String) =  \"Client cannot push requests.\" \l0x000d: INVOKE  \l  (r2 I:java.lang.IllegalStateException)\l  (r3 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public okhttp3.internal.http2.Http2Stream okhttp3.internal.http2.Http2Connection.pushStream((r1 'this' I:okhttp3.internal.http2.Http2Connection A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.util.List\<okhttp3.internal.http2.Header\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(I, Ljava\/util\/List\<, Lokhttp3\/internal\/http2\/Header;, \>;Z), Lokhttp3\/internal\/http2\/Http2Stream;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

