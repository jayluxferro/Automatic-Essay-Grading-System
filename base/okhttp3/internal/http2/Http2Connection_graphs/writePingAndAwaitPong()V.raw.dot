digraph "CFG forokhttp3.internal.http2.Http2Connection.writePingAndAwaitPong()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1330343787(0x4f4b6f6b, float:3.41307674E9) ?[int, float, short, byte, char])\l \l0x0004: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (\-257978967(0xfffffffff09f8da9, float:\-3.95035E29) ?[int, float, short, byte, char])\l \l0x0007: INVOKE  \l  (r3 I:okhttp3.internal.http2.Http2Connection)\l  (r0 I:boolean)\l  (r1 I:int)\l  (r2 I:int)\l okhttp3.internal.http2.Http2Connection.writePing(boolean, int, int):void type: VIRTUAL \l0x000a: INVOKE  (r3 I:okhttp3.internal.http2.Http2Connection) okhttp3.internal.http2.Http2Connection.awaitPong():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: RETURN   \l}"];
MethodNode[shape=record,label="{void okhttp3.internal.http2.Http2Connection.writePingAndAwaitPong((r3 'this' I:okhttp3.internal.http2.Http2Connection A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

