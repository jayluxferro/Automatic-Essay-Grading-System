digraph "CFG forokhttp3.internal.http2.Http2Connection.pushHeadersLater(ILjava\/util\/List;Z)V" {
subgraph cluster_Region_1002052366 {
label = "R(1:(1:1))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_127209506 {
label = "Try: R(1:1) catches: R(0)";
node [shape=record,color=blue];
subgraph cluster_Region_1045222050 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ RejectedExecutionException \-\> 0x001e \}\lSplitter:B:0:0x0000\l|final int r4 = r9     \/\/ Catch:\{ RejectedExecutionException \-\> 0x001e \}\lfinal java.util.List\<okhttp3.internal.http2.Header\> r5 = r10     \/\/ Catch:\{ RejectedExecutionException \-\> 0x001e \}\lfinal boolean r6 = r11     \/\/ Catch:\{ RejectedExecutionException \-\> 0x001e \}\lpushExecutorExecute(new okhttp3.internal.http2.Http2Connection.C13994(\"OkHttp %s Push Headers[%s]\", new java.lang.Object[]\{r8.hostname, java.lang.Integer.valueOf(r9)\}))     \/\/ Catch:\{ RejectedExecutionException \-\> 0x001e \}\l}"];
}
subgraph cluster_Region_904091152 {
label = "R(0) | ExcHandler: RejectedExecutionException (unused java.util.concurrent.RejectedExecutionException)\l";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_904091152 {
label = "R(0) | ExcHandler: RejectedExecutionException (unused java.util.concurrent.RejectedExecutionException)\l";
node [shape=record,color=blue];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?|SYNTHETIC\lExcHandler: RejectedExecutionException (unused java.util.concurrent.RejectedExecutionException)\lSplitter:B:0:0x0000\l}"];
Node_3 [shape=record,color=red,label="{3\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void okhttp3.internal.http2.Http2Connection.pushHeadersLater((r8v0 'this' okhttp3.internal.http2.Http2Connection A[IMMUTABLE_TYPE, THIS]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 java.util.List\<okhttp3.internal.http2.Header\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(I, Ljava\/util\/List\<, Lokhttp3\/internal\/http2\/Header;, \>;Z)V]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_0 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_4;
}

