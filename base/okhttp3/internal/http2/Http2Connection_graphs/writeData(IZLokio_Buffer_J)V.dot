digraph "CFG forokhttp3.internal.http2.Http2Connection.writeData(IZLokio\/Buffer;J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if ((r12 \> 0 ? 1 : (r12 == 0 ? 0 : \-1)) != 0) goto L_0x000d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|r8.writer.data(r10, r9, r11, 0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|LOOP_START\lPHI: r12 \l  PHI: (r12v1 long) = (r12v0 long), (r12v2 long) binds: [B:1:0x0005, B:24:0x0055] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000d\-\>B:24:0x0055\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|if ((r12 \> 0 ? 1 : (r12 == 0 ? 0 : \-1)) \<= 0) goto L_0x006a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|monitor\-enter(r8)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|LOOP_START\lSYNTHETIC\lSplitter:B:7:0x0012\lLOOP:1: B:7:0x0012\-\>B:12:0x0024\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ InterruptedException \-\> 0x005b \}\lSplitter:B:7:0x0012\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|Catch:\{ InterruptedException \-\> 0x005b \}\l|if ((r8.bytesLeftInWriteWindow \> 0 ? 1 : (r8.bytesLeftInWriteWindow == 0 ? 0 : \-1)) \> 0) goto L_0x0030     \/\/ Catch:\{ InterruptedException \-\> 0x005b \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|Catch:\{ InterruptedException \-\> 0x005b \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|Catch:\{ InterruptedException \-\> 0x005b \}\l|if (r8.streams.containsKey(java.lang.Integer.valueOf(r9)) == false) goto L_0x0028     \/\/ Catch:\{ InterruptedException \-\> 0x005b \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|LOOP_END\lCatch:\{ InterruptedException \-\> 0x005b \}\lLOOP:1: B:7:0x0012\-\>B:12:0x0024\l|wait()     \/\/ Catch:\{ InterruptedException \-\> 0x005b \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|Catch:\{ InterruptedException \-\> 0x005b \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|Catch:\{ InterruptedException \-\> 0x005b \}\l|throw new java.io.IOException(\"stream closed\")     \/\/ Catch:\{ InterruptedException \-\> 0x005b \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0030|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ ?|int r3 = java.lang.Math.min((int) java.lang.Math.min(r12, r8.bytesLeftInWriteWindow), r8.writer.maxDataLength())\llong r6 = (long) r3\lr8.bytesLeftInWriteWindow = r8.bytesLeftInWriteWindow \- r6\l}"];
Node_17 [shape=record,label="{17\:\ 0x0047|monitor\-exit(r8)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0048|long r12 = r12 \- r6\lokhttp3.internal.http2.Http2Writer r4 = r8.writer\l}"];
Node_19 [shape=record,label="{19\:\ 0x004c|if (r10 == false) goto L_0x0054\l}"];
Node_20 [shape=record,label="{20\:\ 0x004e}"];
Node_21 [shape=record,label="{21\:\ 0x0050|if ((r12 \> 0 ? 1 : (r12 == 0 ? 0 : \-1)) != 0) goto L_0x0054\l}"];
Node_22 [shape=record,label="{22\:\ 0x0052|r5 = true\l}"];
Node_23 [shape=record,label="{23\:\ 0x0054|r5 = false\l}"];
Node_24 [shape=record,label="{24\:\ 0x0055|LOOP_END\lPHI: r5 \l  PHI: (r5v0 boolean) = (r5v1 boolean), (r5v3 boolean) binds: [B:34:0x0055, B:35:0x0055] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000d\-\>B:24:0x0055\l|r4.data(r5, r9, r11, r3)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0059|REMOVE\l|java.lang.Throwable r9 = move\-exception\l}"];
Node_26 [shape=record,label="{26\:\ 0x005b|SYNTHETIC\lSplitter:B:26:0x005b\l}"];
Node_27 [shape=record,label="{27\:\ ?|Splitter:B:26:0x005b\l|java.lang.Thread.currentThread().interrupt()\l}"];
Node_28 [shape=record,label="{28\:\ 0x0067|throw new java.io.InterruptedIOException()\l}"];
Node_29 [shape=record,label="{29\:\ 0x0068|REMOVE\l}"];
Node_30 [shape=record,label="{30\:\ 0x0069|REMOVE\l|throw r9\l}"];
Node_31 [shape=record,label="{31\:\ 0x006a|RETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ 0x0028|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x006a|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0055|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0055|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.http2.Http2Connection.writeData((r8v0 'this' okhttp3.internal.http2.Http2Connection A[IMMUTABLE_TYPE, THIS]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 okio.Buffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_33;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_26;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_32;
Node_12 -> Node_7;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_15 -> Node_25;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_35;
Node_23 -> Node_34;
Node_24 -> Node_4;
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_26 -> Node_25;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_32 -> Node_13;
Node_33 -> Node_31;
Node_34 -> Node_24;
Node_35 -> Node_24;
}

