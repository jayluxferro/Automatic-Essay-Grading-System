digraph "CFG forokhttp3.internal.http2.Http2Connection.\<init\>(Lokhttp3\/internal\/http2\/Http2Connection$Builder;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r21\lr1 = r22\lr0.streams = new java.util.LinkedHashMap()\lr0.unacknowledgedBytesRead = 0\lr0.okHttpSettings = new okhttp3.internal.http2.Settings()\lr0.peerSettings = new okhttp3.internal.http2.Settings()\lr0.receivedInitialPeerSettings = false\lr0.currentPushRequests = new java.util.LinkedHashSet()\lr0.pushObserver = r1.pushObserver\lr0.client = r1.client\lr0.listener = r1.listener\l}"];
Node_1 [shape=record,label="{1\:\ 0x003a|if (r1.client == false) goto L_0x003e\l}"];
Node_2 [shape=record,label="{2\:\ 0x003c|r3 = 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x003e|r3 = 2\l}"];
Node_4 [shape=record,label="{4\:\ 0x003f|PHI: r3 \l  PHI: (r3v5 int) = (r3v21 int), (r3v22 int) binds: [B:3:0x003e, B:2:0x003c] A[DONT_GENERATE, DONT_INLINE]\l|r0.nextStreamId = r3\l}"];
Node_5 [shape=record,label="{5\:\ 0x0043|if (r1.client == false) goto L_0x004a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0045|r0.nextStreamId = r0.nextStreamId + 2\l}"];
Node_7 [shape=record,label="{7\:\ 0x004a}"];
Node_8 [shape=record,label="{8\:\ 0x004d|if (r1.client == false) goto L_0x0056\l}"];
Node_9 [shape=record,label="{9\:\ 0x004f|r0.okHttpSettings.set(7, 16777216)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0056|r0.hostname = r1.hostname\ljava.lang.Object[] r7 = new java.lang.Object[]\{r0.hostname\}\lr0.writerExecutor = new java.util.concurrent.ScheduledThreadPoolExecutor(1, okhttp3.internal.Util.threadFactory(okhttp3.internal.Util.format(\"OkHttp %s Writer\", r7), false))\l}"];
Node_11 [shape=record,label="{11\:\ 0x0073|if (r1.pingIntervalMillis == 0) goto L_0x0087\l}"];
Node_12 [shape=record,label="{12\:\ 0x0075|r0.writerExecutor.scheduleAtFixedRate(new okhttp3.internal.http2.Http2Connection.PingRunnable(r0, false, 0, 0), (long) r1.pingIntervalMillis, (long) r1.pingIntervalMillis, java.util.concurrent.TimeUnit.MILLISECONDS)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0087|java.util.concurrent.TimeUnit r18 = java.util.concurrent.TimeUnit.SECONDS\ljava.util.concurrent.LinkedBlockingQueue r19 = new java.util.concurrent.LinkedBlockingQueue()\ljava.lang.Object[] r7 = new java.lang.Object[]\{r0.hostname\}\lr0.pushExecutor = new java.util.concurrent.ThreadPoolExecutor(0, 1, 60, r18, r19, okhttp3.internal.Util.threadFactory(okhttp3.internal.Util.format(\"OkHttp %s Push Observer\", r7), true))\lr0.peerSettings.set(7, 65535)\lr0.peerSettings.set(5, 16384)\lr0.bytesLeftInWriteWindow = (long) r0.peerSettings.getInitialWindowSize()\lr0.socket = r1.socket\lr0.writer = new okhttp3.internal.http2.Http2Writer(r1.sink, r0.client)\lr0.readerRunnable = new okhttp3.internal.http2.Http2Connection.ReaderRunnable(r0, new okhttp3.internal.http2.Http2Reader(r1.source, r0.client))\l}"];
Node_14 [shape=record,label="{14\:\ 0x00e2|RETURN\l|return\l}"];
MethodNode[shape=record,label="{void okhttp3.internal.http2.Http2Connection.\<init\>((r21v0 'this' okhttp3.internal.http2.Http2Connection A[IMMUTABLE_TYPE, THIS]), (r22v0 okhttp3.internal.http2.Http2Connection$Builder A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

