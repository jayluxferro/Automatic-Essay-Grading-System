digraph "CFG forokhttp3.internal.http2.Http2Connection.getStream(I)Lokhttp3\/internal\/http2\/Http2Stream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r1)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?|okhttp3.internal.http2.Http2Stream r2 = r1.streams.get(java.lang.Integer.valueOf(r2))\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|monitor\-exit(r1)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|RETURN\l|return r2\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|REMOVE\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|REMOVE\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|REMOVE\l|throw r2\l}"];
MethodNode[shape=record,label="{synchronized okhttp3.internal.http2.Http2Stream okhttp3.internal.http2.Http2Connection.getStream((r1v0 'this' okhttp3.internal.http2.Http2Connection A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

