digraph "CFG forokhttp3.internal.http2.Hpack.Reader.readHeaders()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lLOOP:0: B:0:0x0000\-\>B:30:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r3.source.exhausted() != false) goto L_0x0092\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|r0 = r3.source.readByte() & 255\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|if (r0 == 128) goto L_0x008a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014}"];
Node_5 [shape=record,label="{5\:\ 0x0016|if ((r0 & kotlin.jvm.internal.ByteCompanionObject.MIN_VALUE) != 128) goto L_0x0024\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|readIndexedHeader(readInt(r0, okhttp3.internal.http2.Hpack.PREFIX_7_BITS) + \-1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024}"];
Node_8 [shape=record,label="{8\:\ 0x0026|if (r0 != 64) goto L_0x002c\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|readLiteralHeaderWithIncrementalIndexingNewName()\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c}"];
Node_11 [shape=record,label="{11\:\ 0x002e|if ((r0 & 64) != 64) goto L_0x003c\l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|readLiteralHeaderWithIncrementalIndexingIndexedName(readInt(r0, 63) + \-1)\l}"];
Node_13 [shape=record,label="{13\:\ 0x003c}"];
Node_14 [shape=record,label="{14\:\ 0x0040|if ((r0 & 32) != 32) goto L_0x0071\l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|r3.maxDynamicTableByteCount = readInt(r0, 31)\l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|if (r3.maxDynamicTableByteCount \< 0) goto L_0x0058\l}"];
Node_17 [shape=record,label="{17\:\ 0x004e}"];
Node_18 [shape=record,label="{18\:\ 0x0052|if (r3.maxDynamicTableByteCount \> r3.headerTableSizeSetting) goto L_0x0058\l}"];
Node_19 [shape=record,label="{19\:\ 0x0054|adjustDynamicTableByteCount()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0058|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Invalid dynamic table size update \")\lr1.append(r3.maxDynamicTableByteCount)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0070|throw new java.io.IOException(r1.toString())\l}"];
Node_22 [shape=record,label="{22\:\ 0x0071}"];
Node_23 [shape=record,label="{23\:\ 0x0073|if (r0 == 16) goto L_0x0085\l}"];
Node_24 [shape=record,label="{24\:\ 0x0075|if (r0 != 0) goto L_0x0078\l}"];
Node_25 [shape=record,label="{25\:\ 0x0078|readLiteralHeaderWithoutIndexingIndexedName(readInt(r0, 15) + \-1)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0085|readLiteralHeaderWithoutIndexingNewName()\l}"];
Node_27 [shape=record,label="{27\:\ 0x008a}"];
Node_28 [shape=record,label="{28\:\ 0x0091|throw new java.io.IOException(\"index == 0\")\l}"];
Node_29 [shape=record,label="{29\:\ 0x0092|RETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|LOOP_END\lSYNTHETIC\lLOOP:0: B:0:0x0000\-\>B:30:0x0000\l}"];
Node_31 [shape=record,label="{31\:\ 0x0092|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0058|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x008a|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0058|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0000|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0000|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0000|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0000|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void okhttp3.internal.http2.Hpack.Reader.readHeaders((r3v0 'this' okhttp3.internal.http2.Hpack$Reader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_31;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_33;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_35;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_36;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_37;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_22;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_32;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_34;
Node_19 -> Node_38;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_39;
Node_26 -> Node_40;
Node_27 -> Node_28;
Node_30 -> Node_0;
Node_31 -> Node_29;
Node_32 -> Node_20;
Node_33 -> Node_27;
Node_34 -> Node_20;
Node_35 -> Node_30;
Node_36 -> Node_30;
Node_37 -> Node_30;
Node_38 -> Node_30;
Node_39 -> Node_30;
Node_40 -> Node_30;
}

