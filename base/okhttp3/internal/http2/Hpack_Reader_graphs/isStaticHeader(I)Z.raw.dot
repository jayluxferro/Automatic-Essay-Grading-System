digraph "CFG forokhttp3.internal.http2.Hpack.Reader.isStaticHeader(I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r3 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:5:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: SGET  (r1 I:okhttp3.internal.http2.Header[]) =  okhttp3.internal.http2.Hpack.STATIC_HEADER_TABLE okhttp3.internal.http2.Header[] \l0x0005: ARRAY_LENGTH  (r1 I:int) = (r1 I:?[]) \l0x0006: ARITH  (r1 I:int) = (r1 I:int) \- (r0 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r3 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:5:0x000a \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean okhttp3.internal.http2.Hpack.Reader.isStaticHeader((r2 'this' I:okhttp3.internal.http2.Hpack$Reader A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_6;
}

