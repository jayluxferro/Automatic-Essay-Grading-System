digraph "CFG forokhttp3.internal.http2.Hpack.Reader.clearDynamicTable()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.internal.http2.Header[]) = (r2 I:okhttp3.internal.http2.Hpack$Reader) okhttp3.internal.http2.Hpack.Reader.dynamicTable okhttp3.internal.http2.Header[] \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  (r0 I:java.lang.Object[]), (r1 I:java.lang.Object) java.util.Arrays.fill(java.lang.Object[], java.lang.Object):void type: STATIC \l0x0006: IGET  (r0 I:okhttp3.internal.http2.Header[]) = (r2 I:okhttp3.internal.http2.Hpack$Reader) okhttp3.internal.http2.Hpack.Reader.dynamicTable okhttp3.internal.http2.Header[] \l0x0008: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l0x0009: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l0x000b: IPUT  (r0 I:int), (r2 I:okhttp3.internal.http2.Hpack$Reader) okhttp3.internal.http2.Hpack.Reader.nextHeaderIndex int \l0x000d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: IPUT  (r0 I:int), (r2 I:okhttp3.internal.http2.Hpack$Reader) okhttp3.internal.http2.Hpack.Reader.headerCount int \l0x0010: IPUT  (r0 I:int), (r2 I:okhttp3.internal.http2.Hpack$Reader) okhttp3.internal.http2.Hpack.Reader.dynamicTableByteCount int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: RETURN   \l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.http2.Hpack.Reader.clearDynamicTable((r2 'this' I:okhttp3.internal.http2.Hpack$Reader A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

