digraph "CFG forokhttp3.internal.http2.Hpack.Reader.readInt(II)I" {
subgraph cluster_Region_1163781667 {
label = "R(2:0|(2:(1:2)|(2:3|(2:4|(2:(1:8)|(1:6))))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r3 = r3 & r4\l}"];
subgraph cluster_Region_1051908086 {
label = "R(2:(1:2)|(2:3|(2:4|(2:(1:8)|(1:6)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_251461353 {
label = "IF [B:1:0x0001] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r3 \< r4) goto L_0x0003\l}"];
subgraph cluster_Region_1976562775 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return r3\l}"];
}
}
subgraph cluster_Region_1193744624 {
label = "R(2:3|(2:4|(2:(1:8)|(1:6))))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0004|int r3 = 0\l}"];
subgraph cluster_LoopRegion_1657362352 {
label = "LOOP:0: (2:4|(2:(1:8)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_241435553 {
label = "R(2:4|(2:(1:8)|(1:6)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|LOOP_START\lPHI: r3 r4 \l  PHI: (r3v3 int) = (r3v2 int), (r3v5 int) binds: [B:3:0x0004, B:6:0x000d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v3 int) binds: [B:3:0x0004, B:6:0x000d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0005\-\>B:6:0x000d\l|int int r0 = readByte()\l}"];
subgraph cluster_Region_1462328465 {
label = "R(2:(1:8)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1903913477 {
label = "IF [B:5:0x000b] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000b|if ((r0 & 128) == 0) goto L_0x0014\l}"];
subgraph cluster_Region_67318330 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0017|RETURN\l|return r4 + (r0 \<\< r3)\l}"];
}
}
subgraph cluster_Region_1835111113 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000d|LOOP_END\lLOOP:0: B:4:0x0005\-\>B:6:0x000d\l|r4 += (r0 & okhttp3.internal.http2.Hpack.PREFIX_7_BITS) \<\< r3\lr3 += 7\l}"];
}
}
}
}
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ 0x0014}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0014|SYNTHETIC\l}"];
MethodNode[shape=record,label="{int okhttp3.internal.http2.Hpack.Reader.readInt((r2v0 'this' okhttp3.internal.http2.Hpack$Reader A[IMMUTABLE_TYPE, THIS]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_7;
}

