digraph "CFG forokhttp3.internal.http2.Http2.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"PRI * HTTP\/2.0\l\lSM\l\l\" \l0x0002: INVOKE  (r0 I:okio.ByteString) = (r0 I:java.lang.String) okio.ByteString.encodeUtf8(java.lang.String):okio.ByteString type: STATIC \l0x0006: SPUT  (r0 I:okio.ByteString) okhttp3.internal.http2.Http2.CONNECTION_PREFACE okio.ByteString \l0x0008: CONST_STR  (r1 I:java.lang.String) =  \"DATA\" \l0x000a: CONST_STR  (r2 I:java.lang.String) =  \"HEADERS\" \l0x000c: CONST_STR  (r3 I:java.lang.String) =  \"PRIORITY\" \l0x000e: CONST_STR  (r4 I:java.lang.String) =  \"RST_STREAM\" \l0x0010: CONST_STR  (r5 I:java.lang.String) =  \"SETTINGS\" \l0x0012: CONST_STR  (r6 I:java.lang.String) =  \"PUSH_PROMISE\" \l0x0014: CONST_STR  (r7 I:java.lang.String) =  \"PING\" \l0x0016: CONST_STR  (r8 I:java.lang.String) =  \"GOAWAY\" \l0x0018: CONST_STR  (r9 I:java.lang.String) =  \"WINDOW_UPDATE\" \l0x001a: CONST_STR  (r10 I:java.lang.String) =  \"CONTINUATION\" \l0x001c: FILLED_NEW_ARRAY  (r0 I:java.lang.String[]) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String)\l  (r8 I:java.lang.String)\l  (r9 I:java.lang.String)\l  (r10 I:java.lang.String)\l elemType: java.lang.String \l0x0020: SPUT  (r0 I:java.lang.String[]) okhttp3.internal.http2.Http2.FRAME_NAMES java.lang.String[] \l0x0022: CONST  (r0 I:?[int, float, short, byte, char]) = (64 ?[int, float, short, byte, char]) \l0x0024: NEW_ARRAY  (r0 I:java.lang.String[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x0026: SPUT  (r0 I:java.lang.String[]) okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x0028: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (256(0x100, float:3.59E\-43) ?[int, float, short, byte, char])\l \l0x002a: NEW_ARRAY  (r0 I:java.lang.String[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x002c: SPUT  (r0 I:java.lang.String[]) okhttp3.internal.http2.Http2.BINARY java.lang.String[] \l0x002e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0030|0x0030: SGET  (r2 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.BINARY java.lang.String[] \l0x0032: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l0x0033: CONST  (r3 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0035: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0036|0x0036: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:4:0x0053 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0038|0x0038: SGET  (r2 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.BINARY java.lang.String[] \l0x003a: CONST_STR  (r5 I:java.lang.String) =  \"%8s\" \l0x003c: NEW_ARRAY  (r4 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x003e: INVOKE  (r6 I:java.lang.String) = (r1 I:int) java.lang.Integer.toBinaryString(int):java.lang.String type: STATIC \l0x0042: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x0044: INVOKE  (r4 I:java.lang.String) = (r5 I:java.lang.String), (r4 I:java.lang.Object[]) okhttp3.internal.Util.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x0048: CONST  (r5 I:?[int, float, short, byte, char]) = (48 ?[int, float, short, byte, char]) \l0x004a: INVOKE  (r3 I:java.lang.String) = (r4 I:java.lang.String), (r3 I:char), (r5 I:char) java.lang.String.replace(char, char):java.lang.String type: VIRTUAL \l0x004e: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0050: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0053|0x0053: SGET  (r1 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x0055: CONST_STR  (r2 I:java.lang.String) =  \"\" \l0x0057: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0059: SGET  (r1 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x005b: CONST_STR  (r2 I:java.lang.String) =  \"END_STREAM\" \l0x005d: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x005f: NEW_ARRAY  (r1 I:int[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0061: APUT  \l  (r1 I:?[int, float][])\l  (r0 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x0063: SGET  (r2 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x0065: CONST_STR  (r4 I:java.lang.String) =  \"PADDED\" \l0x0067: CONST  (r5 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0069: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x006b: ARRAY_LENGTH  (r2 I:int) = (r1 I:?[]) \l0x006c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x006d|0x006d: IF  (r4 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:7:0x008f \l}"];
Node_6 [shape=record,label="{6\:\ 0x006f|0x006f: AGET  (r6 I:?[int, float]) = (r1 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x0071: SGET  (r7 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x0073: ARITH  (r8 I:?[int, boolean, short, byte, char]) = (r6 I:?[int, boolean, short, byte, char]) \| (8 ?[int, float, short, byte, char]) \l0x0075: NEW_INSTANCE  (r9 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0077: INVOKE  (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x007a: SGET  (r10 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x007c: AGET  (r6 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY][])\l  (r6 I:?[int, short, byte, char])\l \l0x007e: INVOKE  (r9 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0081: CONST_STR  (r6 I:java.lang.String) =  \"\|PADDED\" \l0x0083: INVOKE  (r9 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0086: INVOKE  (r6 I:java.lang.String) = (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x008a: APUT  \l  (r7 I:?[OBJECT, ARRAY][])\l  (r8 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x008c: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x008f|0x008f: SGET  (r2 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x0091: CONST  (r4 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0092: CONST_STR  (r6 I:java.lang.String) =  \"END_HEADERS\" \l0x0094: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x0096: SGET  (r2 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x0098: CONST_STR  (r4 I:java.lang.String) =  \"PRIORITY\" \l0x009a: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x009c: SGET  (r2 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x009e: CONST  (r3 I:?[int, float, short, byte, char]) = (36 ?[int, float, short, byte, char]) \l0x00a0: CONST_STR  (r4 I:java.lang.String) =  \"END_HEADERS\|PRIORITY\" \l0x00a2: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x00a4: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x00a5: NEW_ARRAY  (r2 I:int[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x00a7: FILL_ARRAY  (r2 I:?[int, float][]), data: [4, 32, 36] \l0x00aa: ARRAY_LENGTH  (r3 I:int) = (r2 I:?[]) \l0x00ab: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x00ac|0x00ac: IF  (r4 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:13:0x0102 \l}"];
Node_9 [shape=record,label="{9\:\ 0x00ae|0x00ae: AGET  (r6 I:?[int, float]) = (r2 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x00b0: ARRAY_LENGTH  (r7 I:int) = (r1 I:?[]) \l0x00b1: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x00b2|0x00b2: IF  (r8 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:12:0x00ff \l}"];
Node_11 [shape=record,label="{11\:\ 0x00b4|0x00b4: AGET  (r9 I:?[int, float]) = (r1 I:?[int, float][]), (r8 I:?[int, short, byte, char]) \l0x00b6: SGET  (r10 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x00b8: ARITH  (r11 I:?[int, boolean, short, byte, char]) = (r9 I:?[int, boolean, short, byte, char]) \| (r6 I:?[int, boolean, short, byte, char]) \l0x00ba: NEW_INSTANCE  (r12 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00bc: INVOKE  (r12 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00bf: SGET  (r13 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x00c1: AGET  (r13 I:?[OBJECT, ARRAY]) = \l  (r13 I:?[OBJECT, ARRAY][])\l  (r9 I:?[int, short, byte, char])\l \l0x00c3: INVOKE  (r12 I:java.lang.StringBuilder), (r13 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c6: CONST  (r13 I:?[int, float, short, byte, char]) = \l  (124(0x7c, float:1.74E\-43) ?[int, float, short, byte, char])\l \l0x00c8: INVOKE  (r12 I:java.lang.StringBuilder), (r13 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x00cb: SGET  (r14 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x00cd: AGET  (r14 I:?[OBJECT, ARRAY]) = \l  (r14 I:?[OBJECT, ARRAY][])\l  (r6 I:?[int, short, byte, char])\l \l0x00cf: INVOKE  (r12 I:java.lang.StringBuilder), (r14 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00d2: INVOKE  (r12 I:java.lang.String) = (r12 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00d6: APUT  \l  (r10 I:?[OBJECT, ARRAY][])\l  (r11 I:?[int, short, byte, char])\l  (r12 I:?[OBJECT, ARRAY])\l \l0x00d8: SGET  (r10 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x00da: ARITH  (r11 I:?[int, boolean, short, byte, char]) = (r11 I:?[int, boolean, short, byte, char]) \| (r5 I:?[int, boolean, short, byte, char]) \l0x00db: NEW_INSTANCE  (r12 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00dd: INVOKE  (r12 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00e0: SGET  (r14 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x00e2: AGET  (r9 I:?[OBJECT, ARRAY]) = \l  (r14 I:?[OBJECT, ARRAY][])\l  (r9 I:?[int, short, byte, char])\l \l0x00e4: INVOKE  (r12 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00e7: INVOKE  (r12 I:java.lang.StringBuilder), (r13 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x00ea: SGET  (r9 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x00ec: AGET  (r9 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY][]), (r6 I:?[int, short, byte, char]) \l0x00ee: INVOKE  (r12 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00f1: CONST_STR  (r9 I:java.lang.String) =  \"\|PADDED\" \l0x00f3: INVOKE  (r12 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00f6: INVOKE  (r9 I:java.lang.String) = (r12 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00fa: APUT  \l  (r10 I:?[OBJECT, ARRAY][])\l  (r11 I:?[int, short, byte, char])\l  (r9 I:?[OBJECT, ARRAY])\l \l0x00fc: ARITH  (r8 I:int) = (r8 I:int) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x00ff|0x00ff: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0102|0x0102: SGET  (r1 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x0104: ARRAY_LENGTH  (r1 I:int) = (r1 I:?[]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0105|0x0105: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:19:0x0118 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0107|0x0107: SGET  (r1 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x0109: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x010b|0x010b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0115 \l}"];
Node_17 [shape=record,label="{17\:\ 0x010d|0x010d: SGET  (r1 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.FLAGS java.lang.String[] \l0x010f: SGET  (r2 I:java.lang.String[]) =  okhttp3.internal.http2.Http2.BINARY java.lang.String[] \l0x0111: AGET  (r2 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0113: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0115|0x0115: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0118|0x0118: RETURN   \l}"];
MethodNode[shape=record,label="{static void okhttp3.internal.http2.Http2.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_5;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_10;
Node_12 -> Node_8;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_13;
}

