digraph "CFG forokhttp3.internal.http2.Http2.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|CONNECTION_PREFACE = okio.ByteString.encodeUtf8(\"PRI * HTTP\/2.0rnrnSMrnrn\")\lFRAME_NAMES = new java.lang.String[]\{\"DATA\", \"HEADERS\", \"PRIORITY\", \"RST_STREAM\", \"SETTINGS\", \"PUSH_PROMISE\", \"PING\", \"GOAWAY\", \"WINDOW_UPDATE\", \"CONTINUATION\"\}\lFLAGS = new java.lang.String[64]\lBINARY = new java.lang.String[256]\lr0 = 0\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0030|LOOP_START\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v11 int) binds: [B:0:0x0000, B:3:0x0038] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0030\-\>B:3:0x0038\l}"];
Node_2 [shape=record,label="{2\:\ 0x0036|if (r1 \>= BINARY.length) goto L_0x0053\l}"];
Node_3 [shape=record,label="{3\:\ 0x0038|LOOP_END\lLOOP:0: B:1:0x0030\-\>B:3:0x0038\l|java.lang.String[] r2 = BINARY\ljava.lang.Object[] r4 = new java.lang.Object[]\{java.lang.Integer.toBinaryString(r1)\}\lr2[r1] = okhttp3.internal.Util.format(\"%8s\", r4).replace(' ', '0')\lint r1 = r1 + 1\l}"];
Node_4 [shape=record,label="{4\:\ 0x0053|FLAGS[0] = \"\"\lFLAGS[1] = \"END_STREAM\"\lint[] r1 = new int[]\{1\}\lFLAGS[8] = \"PADDED\"\lint r2 = r1.length\lr4 = 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x006d|LOOP_START\lPHI: r4 \l  PHI: (r4v4 int) = (r4v3 int), (r4v11 int) binds: [B:4:0x0053, B:6:0x006f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:5:0x006d\-\>B:6:0x006f\l|if (r4 \>= r2) goto L_0x008f\l}"];
Node_6 [shape=record,label="{6\:\ 0x006f|LOOP_END\lLOOP:1: B:5:0x006d\-\>B:6:0x006f\l|r6 = r1[r4]\ljava.lang.String[] r7 = FLAGS\lr8 = r6 \| 8\ljava.lang.StringBuilder r9 = new java.lang.StringBuilder()\lr9.append(FLAGS[r6])\lr9.append(\"\|PADDED\")\lr7[r8] = r9.toString()\lint r4 = r4 + 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x008f|FLAGS[4] = \"END_HEADERS\"\lFLAGS[32] = \"PRIORITY\"\lFLAGS[36] = \"END_HEADERS\|PRIORITY\"\lint[] r2 = new int[]\{4, 32, 36\}\lint r3 = r2.length\lr4 = 0\l}"];
Node_8 [shape=record,label="{8\:\ 0x00ac|LOOP_START\lPHI: r4 \l  PHI: (r4v9 int) = (r4v8 int), (r4v10 int) binds: [B:7:0x008f, B:12:0x00ff] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:8:0x00ac\-\>B:12:0x00ff\l|if (r4 \>= r3) goto L_0x0102\l}"];
Node_9 [shape=record,label="{9\:\ 0x00ae|r6 = r2[r4]\lint r7 = r1.length\lr8 = 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x00b2|LOOP_START\lPHI: r8 \l  PHI: (r8v2 int) = (r8v1 int), (r8v3 int) binds: [B:9:0x00ae, B:11:0x00b4] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:10:0x00b2\-\>B:11:0x00b4\l|if (r8 \>= r7) goto L_0x00ff\l}"];
Node_11 [shape=record,label="{11\:\ 0x00b4|LOOP_END\lLOOP:3: B:10:0x00b2\-\>B:11:0x00b4\l|r9 = r1[r8]\ljava.lang.String[] r10 = FLAGS\lr11 = r9 \| r6\ljava.lang.StringBuilder r12 = new java.lang.StringBuilder()\lr12.append(FLAGS[r9])\lr12.append('\|')\lr12.append(FLAGS[r6])\lr10[r11] = r12.toString()\ljava.lang.StringBuilder r12 = new java.lang.StringBuilder()\lr12.append(FLAGS[r9])\lr12.append('\|')\lr12.append(FLAGS[r6])\lr12.append(\"\|PADDED\")\lFLAGS[r11 \| 8] = r12.toString()\lint r8 = r8 + 1\l}"];
Node_12 [shape=record,label="{12\:\ 0x00ff|LOOP_END\lLOOP:2: B:8:0x00ac\-\>B:12:0x00ff\l|int r4 = r4 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x0102|LOOP_START\lPHI: r0 \l  PHI: (r0v8 int) = (r0v7 int), (r0v9 int) binds: [B:22:0x0102, B:18:0x0115] A[DONT_GENERATE, DONT_INLINE]\lLOOP:4: B:13:0x0102\-\>B:18:0x0115\l}"];
Node_14 [shape=record,label="{14\:\ 0x0105|if (r0 \>= FLAGS.length) goto L_0x0118\l}"];
Node_15 [shape=record,label="{15\:\ 0x0107}"];
Node_16 [shape=record,label="{16\:\ 0x010b|if (FLAGS[r0] != null) goto L_0x0115\l}"];
Node_17 [shape=record,label="{17\:\ 0x010d|FLAGS[r0] = BINARY[r0]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0115|LOOP_END\lLOOP:4: B:13:0x0102\-\>B:18:0x0115\l|int r0 = r0 + 1\l}"];
Node_19 [shape=record,label="{19\:\ 0x0118|RETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ 0x0053|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x008f|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0102|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x00ff|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0118|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0115|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0115|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static void okhttp3.internal.http2.Http2.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_20;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_21;
Node_6 -> Node_5;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_22;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_23;
Node_11 -> Node_10;
Node_12 -> Node_8;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_24;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_26;
Node_17 -> Node_25;
Node_18 -> Node_13;
Node_20 -> Node_4;
Node_21 -> Node_7;
Node_22 -> Node_13;
Node_23 -> Node_12;
Node_24 -> Node_19;
Node_25 -> Node_18;
Node_26 -> Node_18;
}

