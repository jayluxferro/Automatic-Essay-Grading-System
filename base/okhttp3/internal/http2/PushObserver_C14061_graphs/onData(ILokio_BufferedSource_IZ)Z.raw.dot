digraph "CFG forokhttp3.internal.http2.PushObserver.1.onData(ILokio\/BufferedSource;IZ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CAST  (r3 I:long) = (long) (r3 I:int) \l0x0001: INVOKE  (r2 I:okio.BufferedSource), (r3 I:long) okio.BufferedSource.skip(long):void type: INTERFACE \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean okhttp3.internal.http2.PushObserver.1.onData((r0 'this' I:okhttp3.internal.http2.PushObserver$1 A[IMMUTABLE_TYPE, THIS]), (r1 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:okio.BufferedSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

