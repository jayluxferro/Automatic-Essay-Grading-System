digraph "CFG forokhttp3.internal.http2.Header.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \":\" \l0x0002: INVOKE  (r0 I:okio.ByteString) = (r0 I:java.lang.String) okio.ByteString.encodeUtf8(java.lang.String):okio.ByteString type: STATIC \l0x0006: SPUT  (r0 I:okio.ByteString) okhttp3.internal.http2.Header.PSEUDO_PREFIX okio.ByteString \l0x0008: CONST_STR  (r0 I:java.lang.String) =  \":status\" \l0x000a: INVOKE  (r0 I:okio.ByteString) = (r0 I:java.lang.String) okio.ByteString.encodeUtf8(java.lang.String):okio.ByteString type: STATIC \l0x000e: SPUT  (r0 I:okio.ByteString) okhttp3.internal.http2.Header.RESPONSE_STATUS okio.ByteString \l0x0010: CONST_STR  (r0 I:java.lang.String) =  \":method\" \l0x0012: INVOKE  (r0 I:okio.ByteString) = (r0 I:java.lang.String) okio.ByteString.encodeUtf8(java.lang.String):okio.ByteString type: STATIC \l0x0016: SPUT  (r0 I:okio.ByteString) okhttp3.internal.http2.Header.TARGET_METHOD okio.ByteString \l0x0018: CONST_STR  (r0 I:java.lang.String) =  \":path\" \l0x001a: INVOKE  (r0 I:okio.ByteString) = (r0 I:java.lang.String) okio.ByteString.encodeUtf8(java.lang.String):okio.ByteString type: STATIC \l0x001e: SPUT  (r0 I:okio.ByteString) okhttp3.internal.http2.Header.TARGET_PATH okio.ByteString \l0x0020: CONST_STR  (r0 I:java.lang.String) =  \":scheme\" \l0x0022: INVOKE  (r0 I:okio.ByteString) = (r0 I:java.lang.String) okio.ByteString.encodeUtf8(java.lang.String):okio.ByteString type: STATIC \l0x0026: SPUT  (r0 I:okio.ByteString) okhttp3.internal.http2.Header.TARGET_SCHEME okio.ByteString \l0x0028: CONST_STR  (r0 I:java.lang.String) =  \":authority\" \l0x002a: INVOKE  (r0 I:okio.ByteString) = (r0 I:java.lang.String) okio.ByteString.encodeUtf8(java.lang.String):okio.ByteString type: STATIC \l0x002e: SPUT  (r0 I:okio.ByteString) okhttp3.internal.http2.Header.TARGET_AUTHORITY okio.ByteString \l}"];
Node_1 [shape=record,label="{1\:\ 0x0030|0x0030: RETURN   \l}"];
MethodNode[shape=record,label="{static void okhttp3.internal.http2.Header.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

