digraph "CFG forokhttp3.internal.http2.Http2Stream.FramingSource.waitUntilReadable()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.this$0.readTimeout.enter()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|LOOP_START\lSYNTHETIC\lSplitter:B:1:0x0007\lLOOP:0: B:1:0x0007\-\>B:10:0x0021\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x002f \}\lSplitter:B:1:0x0007\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|Catch:\{ all \-\> 0x002f \}\l|if ((r4.readBuffer.size() \> 0 ? 1 : (r4.readBuffer.size() == 0 ? 0 : \-1)) != 0) goto L_0x0027     \/\/ Catch:\{ all \-\> 0x002f \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|Catch:\{ all \-\> 0x002f \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|Catch:\{ all \-\> 0x002f \}\l|if (r4.finished != false) goto L_0x0027     \/\/ Catch:\{ all \-\> 0x002f \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|Catch:\{ all \-\> 0x002f \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|Catch:\{ all \-\> 0x002f \}\l|if (r4.closed != false) goto L_0x0027     \/\/ Catch:\{ all \-\> 0x002f \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|Catch:\{ all \-\> 0x002f \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|Catch:\{ all \-\> 0x002f \}\l|if (r4.this$0.errorCode != null) goto L_0x0027     \/\/ Catch:\{ all \-\> 0x002f \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|LOOP_END\lCatch:\{ all \-\> 0x002f \}\lLOOP:0: B:1:0x0007\-\>B:10:0x0021\l|r4.this$0.waitForIo()     \/\/ Catch:\{ all \-\> 0x002f \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|DONT_GENERATE\l|okhttp3.internal.http2.Http2Stream r0 = r4.this$0\lokhttp3.internal.http2.Http2Stream$StreamTimeout r0 = r0.readTimeout\lr0.exitAndThrowIfTimedOut()\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|ExcHandler:  FINALLY\lSplitter:B:1:0x0007\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|FINALLY_INSNS\l|r4.this$0.readTimeout.exitAndThrowIfTimedOut()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|throw r0\l}"];
Node_16 [shape=record,label="{16\:\ 0x0027|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0027|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0027|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0027|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.http2.Http2Stream.FramingSource.waitUntilReadable((r4v0 'this' okhttp3.internal.http2.Http2Stream$FramingSource A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_16;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_18;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_19;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_11;
Node_17 -> Node_11;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

