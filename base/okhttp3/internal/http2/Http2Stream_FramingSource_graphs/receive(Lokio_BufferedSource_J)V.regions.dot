digraph "CFG forokhttp3.internal.http2.Http2Stream.FramingSource.receive(Lokio\/BufferedSource;J)V" {
subgraph cluster_Region_330365211 {
label = "R(1:(2:8|(2:11|12)(1:(2:14|15)(2:16|(2:18|41)(1:33))))) | DECL_VAR: boolean null, boolean null, boolean null\l";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_637180511 {
label = "LOOP:0: (2:8|(2:11|12)(1:(2:14|15)(2:16|(2:18|41)(1:33))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r12 \> 0) goto L_0x0006\l}"];
subgraph cluster_Region_1236084030 {
label = "R(2:8|(2:11|12)(1:(2:14|15)(2:16|(2:18|41)(1:33))))";
node [shape=record,color=blue];
subgraph cluster_SynchronizedRegion_1109315295 {
label = "Synchronized:R(2:3|(2:5|6))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
subgraph cluster_Region_92256768 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ ?|boolean r3 = r10.finished\lr8 = false\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|r4 = r10.readBuffer.size() + r12 \> r10.maxByteCount\l}"];
}
}
subgraph cluster_IfRegion_84156320 {
label = "IF [B:10:0x001f] THEN: R(2:11|12) ELSE: R(1:(2:14|15)(2:16|(2:18|41)(1:33)))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001f|if (r4 == true) goto L_0x0021\l}"];
subgraph cluster_Region_1450348454 {
label = "R(2:11|12)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0021|r11.skip(r12)\lokhttp3.internal.http2.Http2Stream.this.closeLater(okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|RETURN\l|return\l}"];
}
subgraph cluster_Region_657186645 {
label = "R(1:(2:14|15)(2:16|(2:18|41)(1:33))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1046011455 {
label = "IF [B:13:0x002c] THEN: R(2:14|15) ELSE: R(2:16|(2:18|41)(1:33)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x002c|if (r3 == true) goto L_0x002e\l}"];
subgraph cluster_Region_118463067 {
label = "R(2:14|15)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002e|r11.skip(r12)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|RETURN\l|return\l}"];
}
subgraph cluster_Region_2110986938 {
label = "R(2:16|(2:18|41)(1:33))";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0032|long long r2 = r11.read(r10.receiveBuffer, r12)\l}"];
subgraph cluster_IfRegion_92441113 {
label = "IF [B:17:0x003c] THEN: R(2:18|41) ELSE: R(1:33)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x003c|if (r2 != \-1) goto L_0x003e\l}"];
subgraph cluster_Region_749734997 {
label = "R(2:18|41)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x003e|r12 \-= r2\l}"];
subgraph cluster_SynchronizedRegion_861127763 {
label = "Synchronized:R(2:19|(3:(1:23)|24|(1:26)))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0041}"];
subgraph cluster_Region_1897820704 {
label = "R(3:(1:23)|24|(1:26))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_137812513 {
label = "IF [B:22:0x004a] THEN: R(1:23) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x004a|if (r10.readBuffer.size() == 0) goto L_0x004c\l}"];
subgraph cluster_Region_766547297 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x004c|r8 = true\l}"];
}
}
Node_24 [shape=record,label="{24\:\ 0x004d|PHI: r8 \l  PHI: (r8v1 boolean) = (r8v0 boolean), (r8v2 boolean) binds: [B:22:0x004a, B:23:0x004c] A[DONT_GENERATE, DONT_INLINE]\l|r10.readBuffer.writeAll(r10.receiveBuffer)\l}"];
subgraph cluster_IfRegion_1938838590 {
label = "IF [B:25:0x0054] THEN: R(1:26) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0054|if (r8 == true) goto L_0x0056\l}"];
subgraph cluster_Region_1582065475 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0056|okhttp3.internal.http2.Http2Stream.this.notifyAll()\l}"];
}
}
}
}
}
subgraph cluster_Region_1547801048 {
label = "R(1:33)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0065|throw new java.io.EOFException()\l}"];
}
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lPHI: r12 \l  PHI: (r12v1 long) = (r12v0 long), (r12v3 long) binds: [B:0:0x0000, B:28:0x005c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:28:0x005c\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0009|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001b}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001d}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001e|DONT_GENERATE\lPHI: r4 \l  PHI: (r4v4 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|monitor\-exit(\l\/\/ error: 0x001e: MONITOR_EXIT  \l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0042|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ ?}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x005b|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x005b: MONITOR_EXIT  \l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x005c|LOOP_END\lLOOP:0: B:0:0x0000\-\>B:28:0x005c\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x005d|REMOVE\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x005e|REMOVE\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x005f|REMOVE\l|throw r11\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0060}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0066|LOOP_START\lREMOVE\lLOOP:1: B:34:0x0066\-\>B:43:0x0066\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0067|SYNTHETIC\lREMOVE\lSplitter:B:35:0x0067\l}"];
Node_36 [shape=record,color=red,label="{36\:\ ?|REMOVE\lSplitter:B:35:0x0067\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0068|REMOVE\l|throw r11\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0069}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0069|SYNTHETIC\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0021|SYNTHETIC\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x002e|SYNTHETIC\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0060|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0066|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:1: B:34:0x0066\-\>B:43:0x0066\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0068|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0066|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
MethodNode[shape=record,label="{void okhttp3.internal.http2.Http2Stream.FramingSource.receive((r10v0 'this' okhttp3.internal.http2.Http2Stream$FramingSource A[IMMUTABLE_TYPE, THIS]), (r11v0 okio.BufferedSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_39[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_10 -> Node_13[style=dashed];
Node_10 -> Node_40;
Node_11 -> Node_12;
Node_13 -> Node_16[style=dashed];
Node_13 -> Node_41;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_42[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_27[style=dashed];
Node_26 -> Node_27;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_34;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_20 -> Node_21;
Node_20 -> Node_29;
Node_21 -> Node_22;
Node_27 -> Node_28;
Node_28 -> Node_0;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_43;
Node_36 -> Node_44;
Node_36 -> Node_45;
Node_39 -> Node_38;
Node_40 -> Node_11;
Node_41 -> Node_14;
Node_42 -> Node_32;
Node_43 -> Node_34;
Node_44 -> Node_37;
Node_45 -> Node_43;
}

