digraph "CFG forokhttp3.internal.http2.Http2Codec.StreamFinishingSource.endOfInput(Ljava\/io\/IOException;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = \l  (r7 I:okhttp3.internal.http2.Http2Codec$StreamFinishingSource)\l okhttp3.internal.http2.Http2Codec.StreamFinishingSource.completed boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0006: IPUT  \l  (r0 I:boolean)\l  (r7 I:okhttp3.internal.http2.Http2Codec$StreamFinishingSource)\l okhttp3.internal.http2.Http2Codec.StreamFinishingSource.completed boolean \l0x0008: IGET  (r0 I:okhttp3.internal.http2.Http2Codec) = \l  (r7 I:okhttp3.internal.http2.Http2Codec$StreamFinishingSource)\l okhttp3.internal.http2.Http2Codec.StreamFinishingSource.this$0 okhttp3.internal.http2.Http2Codec \l0x000a: IGET  (r1 I:okhttp3.internal.connection.StreamAllocation) = (r0 I:okhttp3.internal.http2.Http2Codec) okhttp3.internal.http2.Http2Codec.streamAllocation okhttp3.internal.connection.StreamAllocation \l0x000c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: IGET  (r3 I:okhttp3.internal.http2.Http2Codec) = \l  (r7 I:okhttp3.internal.http2.Http2Codec$StreamFinishingSource)\l okhttp3.internal.http2.Http2Codec.StreamFinishingSource.this$0 okhttp3.internal.http2.Http2Codec \l0x000f: IGET  (r4 I:long) = \l  (r7 I:okhttp3.internal.http2.Http2Codec$StreamFinishingSource)\l okhttp3.internal.http2.Http2Codec.StreamFinishingSource.bytesRead long \l0x0011: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0012: INVOKE  \l  (r1 I:okhttp3.internal.connection.StreamAllocation)\l  (r2 I:boolean)\l  (r3 I:okhttp3.internal.http.HttpCodec)\l  (r4 I:long)\l  (r6 I:java.io.IOException)\l okhttp3.internal.connection.StreamAllocation.streamFinished(boolean, okhttp3.internal.http.HttpCodec, long, java.io.IOException):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: RETURN   \l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.http2.Http2Codec.StreamFinishingSource.endOfInput((r7 'this' I:okhttp3.internal.http2.Http2Codec$StreamFinishingSource A[IMMUTABLE_TYPE, THIS]), (r8 I:java.io.IOException A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

