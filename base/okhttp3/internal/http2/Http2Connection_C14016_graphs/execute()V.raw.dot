digraph "CFG forokhttp3.internal.http2.Http2Connection.6.execute()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.internal.http2.Http2Connection) = (r3 I:okhttp3.internal.http2.Http2Connection$6) okhttp3.internal.http2.Http2Connection.6.this$0 okhttp3.internal.http2.Http2Connection \l0x0002: IGET  (r0 I:okhttp3.internal.http2.PushObserver) = (r0 I:okhttp3.internal.http2.Http2Connection) okhttp3.internal.http2.Http2Connection.pushObserver okhttp3.internal.http2.PushObserver \l0x0004: IGET  (r1 I:int) = (r3 I:okhttp3.internal.http2.Http2Connection$6) okhttp3.internal.http2.Http2Connection.6.val$streamId int \l0x0006: IGET  (r2 I:okhttp3.internal.http2.ErrorCode) = (r3 I:okhttp3.internal.http2.Http2Connection$6) okhttp3.internal.http2.Http2Connection.6.val$errorCode okhttp3.internal.http2.ErrorCode \l0x0008: INVOKE  \l  (r0 I:okhttp3.internal.http2.PushObserver)\l  (r1 I:int)\l  (r2 I:okhttp3.internal.http2.ErrorCode)\l okhttp3.internal.http2.PushObserver.onReset(int, okhttp3.internal.http2.ErrorCode):void type: INTERFACE \l0x000b: IGET  (r0 I:okhttp3.internal.http2.Http2Connection) = (r3 I:okhttp3.internal.http2.Http2Connection$6) okhttp3.internal.http2.Http2Connection.6.this$0 okhttp3.internal.http2.Http2Connection \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|SYNTHETIC\lSplitter:B:2:0x000e\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x000e\l|0x000e: IGET  (r1 I:okhttp3.internal.http2.Http2Connection) = (r3 I:okhttp3.internal.http2.Http2Connection$6) okhttp3.internal.http2.Http2Connection.6.this$0 okhttp3.internal.http2.Http2Connection A[Catch:\{ all \-\> 0x001d \}, TRY_ENTER]\l0x0010: IGET  (r1 I:java.util.Set\<java.lang.Integer\>) = (r1 I:okhttp3.internal.http2.Http2Connection) okhttp3.internal.http2.Http2Connection.currentPushRequests java.util.Set A[Catch:\{ all \-\> 0x001d \}]\l0x0012: IGET  (r2 I:int) = (r3 I:okhttp3.internal.http2.Http2Connection$6) okhttp3.internal.http2.Http2Connection.6.val$streamId int A[Catch:\{ all \-\> 0x001d \}]\l0x0014: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ all \-\> 0x001d \}]\l0x0018: INVOKE  (r1 I:java.util.Set), (r2 I:java.lang.Object) java.util.Set.remove(java.lang.Object):boolean type: INTERFACE A[Catch:\{ all \-\> 0x001d \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001d \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: RETURN   A[Catch:\{ all \-\> 0x001d \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|ExcHandler: all null\lSplitter:B:2:0x000e\l|0x001d: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x001d \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001d \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.http2.Http2Connection.6.execute((r3 'this' I:okhttp3.internal.http2.Http2Connection$6 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

