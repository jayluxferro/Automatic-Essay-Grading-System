digraph "CFG forokhttp3.internal.http2.Http2Codec.http2HeadersList(Lokhttp3\/Request;)Ljava\/util\/List;" {
subgraph cluster_Region_2075510952 {
label = "R(5:0|(1:2)|3|(3:5|(1:7)(0)|8)|9)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|okhttp3.Headers okhttp3.Headers r0 = r6.headers()\ljava.util.ArrayList java.util.ArrayList r1 = new java.util.ArrayList(r0.size() + 4)\lr1.add(new okhttp3.internal.http2.Header(okhttp3.internal.http2.Header.TARGET_METHOD, r6.method()))\lr1.add(new okhttp3.internal.http2.Header(okhttp3.internal.http2.Header.TARGET_PATH, okhttp3.internal.http.RequestLine.requestPath(r6.url())))\ljava.lang.String java.lang.String r2 = r6.header(\"Host\")\l}"];
subgraph cluster_IfRegion_2021430871 {
label = "IF [B:1:0x0035] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0035|if (r2 != null) goto L_0x0037\l}"];
subgraph cluster_Region_769256396 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0037|r1.add(new okhttp3.internal.http2.Header(okhttp3.internal.http2.Header.TARGET_AUTHORITY, r2))\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0041|r1.add(new okhttp3.internal.http2.Header(okhttp3.internal.http2.Header.TARGET_SCHEME, r6.url().scheme()))\lint r6 = 0\lint int r2 = r0.size()\l}"];
subgraph cluster_LoopRegion_1947883372 {
label = "LOOP:0: (3:5|(1:7)(0)|8)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0058|LOOP_START\lPHI: r6 \l  PHI: (r6v4 int) = (r6v3 int), (r6v5 int) binds: [B:3:0x0041, B:8:0x007c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0058\-\>B:8:0x007c\l|if (r6 \< r2) goto L_0x005a\l}"];
subgraph cluster_Region_2102273168 {
label = "R(3:5|(1:7)(0)|8)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x005a|okio.ByteString okio.ByteString r3 = okio.ByteString.encodeUtf8(r0.name(r6).toLowerCase(java.util.Locale.US))\l}"];
subgraph cluster_IfRegion_2141622423 {
label = "IF [B:6:0x006e] THEN: R(1:7) ELSE: R(0)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x006e|if (HTTP_2_SKIPPED_REQUEST_HEADERS.contains(r3) == false) goto L_0x0070\l}"];
subgraph cluster_Region_356765318 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0070|r1.add(new okhttp3.internal.http2.Header(r3, r0.value(r6)))\l}"];
}
subgraph cluster_Region_226438270 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_8 [shape=record,label="{8\:\ 0x007c|LOOP_END\lLOOP:0: B:4:0x0058\-\>B:8:0x007c\l|r6++\l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x007f|RETURN\l|return r1\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ 0x007f|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x007c|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x007c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static java.util.List\<okhttp3.internal.http2.Header\> okhttp3.internal.http2.Http2Codec.http2HeadersList((r6v0 okhttp3.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lokhttp3\/Request;, ), Ljava\/util\/List\<, Lokhttp3\/internal\/http2\/Header;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_10[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_12[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_4;
Node_10 -> Node_9;
Node_11 -> Node_8;
Node_12 -> Node_8;
}

