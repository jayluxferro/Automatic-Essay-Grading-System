digraph "CFG forokhttp3.internal.http2.Http2Codec.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|CONNECTION = okio.ByteString.encodeUtf8(\"connection\")\lHOST = okio.ByteString.encodeUtf8(\"host\")\lKEEP_ALIVE = okio.ByteString.encodeUtf8(\"keep\-alive\")\lPROXY_CONNECTION = okio.ByteString.encodeUtf8(\"proxy\-connection\")\lTRANSFER_ENCODING = okio.ByteString.encodeUtf8(\"transfer\-encoding\")\lf260TE = okio.ByteString.encodeUtf8(\"te\")\lENCODING = okio.ByteString.encodeUtf8(\"encoding\")\lUPGRADE = okio.ByteString.encodeUtf8(\"upgrade\")\lokio.ByteString[] r0 = new okio.ByteString[]\{CONNECTION, HOST, KEEP_ALIVE, PROXY_CONNECTION, f260TE, TRANSFER_ENCODING, ENCODING, UPGRADE, okhttp3.internal.http2.Header.TARGET_METHOD, okhttp3.internal.http2.Header.TARGET_PATH, okhttp3.internal.http2.Header.TARGET_SCHEME, okhttp3.internal.http2.Header.TARGET_AUTHORITY\}\lHTTP_2_SKIPPED_REQUEST_HEADERS = okhttp3.internal.Util.immutableList((T[]) r0)\lokio.ByteString[] r0 = new okio.ByteString[]\{CONNECTION, HOST, KEEP_ALIVE, PROXY_CONNECTION, f260TE, TRANSFER_ENCODING, ENCODING, UPGRADE\}\lHTTP_2_SKIPPED_RESPONSE_HEADERS = okhttp3.internal.Util.immutableList((T[]) r0)\l}"];
Node_1 [shape=record,label="{1\:\ 0x00b2|RETURN\l|return\l}"];
MethodNode[shape=record,label="{static void okhttp3.internal.http2.Http2Codec.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

