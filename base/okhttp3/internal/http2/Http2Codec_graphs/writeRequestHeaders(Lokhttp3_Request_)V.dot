digraph "CFG forokhttp3.internal.http2.Http2Codec.writeRequestHeaders(Lokhttp3\/Request;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3.stream == null) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005}"];
Node_4 [shape=record,label="{4\:\ 0x0009|if (r4.body() == null) goto L_0x000d\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|r0 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|r0 = false\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|PHI: r0 \l  PHI: (r0v2 boolean) = (r0v9 boolean), (r0v10 boolean) binds: [B:6:0x000d, B:5:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|java.util.List r4 = http2HeadersList(r4)\lr3.stream = r3.connection.newStream(r4, r0)\lr3.stream.readTimeout().timeout((long) r3.chain.readTimeoutMillis(), java.util.concurrent.TimeUnit.MILLISECONDS)\lr3.stream.writeTimeout().timeout((long) r3.chain.writeTimeoutMillis(), java.util.concurrent.TimeUnit.MILLISECONDS)\l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.http2.Http2Codec.writeRequestHeaders((r3v0 'this' okhttp3.internal.http2.Http2Codec A[IMMUTABLE_TYPE, THIS]), (r4v0 okhttp3.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

