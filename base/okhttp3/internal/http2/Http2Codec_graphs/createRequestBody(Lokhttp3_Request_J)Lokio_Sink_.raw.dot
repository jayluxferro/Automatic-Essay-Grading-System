digraph "CFG forokhttp3.internal.http2.Http2Codec.createRequestBody(Lokhttp3\/Request;J)Lokio\/Sink;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r1 I:okhttp3.internal.http2.Http2Stream) = (r0 I:okhttp3.internal.http2.Http2Codec) okhttp3.internal.http2.Http2Codec.stream okhttp3.internal.http2.Http2Stream \l0x0002: INVOKE  (r1 I:okio.Sink) = (r1 I:okhttp3.internal.http2.Http2Stream) okhttp3.internal.http2.Http2Stream.getSink():okio.Sink type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: RETURN  (r1 I:okio.Sink) \l}"];
MethodNode[shape=record,label="{public okio.Sink okhttp3.internal.http2.Http2Codec.createRequestBody((r0 'this' I:okhttp3.internal.http2.Http2Codec A[IMMUTABLE_TYPE, THIS]), (r1 I:okhttp3.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

