digraph "CFG forokhttp3.internal.http2.Http2Stream.StreamTimeout.newTimeoutException(Ljava\/io\/IOException;)Ljava\/io\/IOException;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.net.SocketTimeoutException) =  java.net.SocketTimeoutException \l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"timeout\" \l0x0004: INVOKE  \l  (r0 I:java.net.SocketTimeoutException)\l  (r1 I:java.lang.String)\l java.net.SocketTimeoutException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: INVOKE  \l  (r0 I:java.net.SocketTimeoutException)\l  (r3 I:java.lang.Throwable)\l java.net.SocketTimeoutException.initCause(java.lang.Throwable):java.lang.Throwable type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN  (r0 I:java.io.IOException) \l}"];
MethodNode[shape=record,label="{protected java.io.IOException okhttp3.internal.http2.Http2Stream.StreamTimeout.newTimeoutException((r2 'this' I:okhttp3.internal.http2.Http2Stream$StreamTimeout A[IMMUTABLE_TYPE, THIS]), (r3 I:java.io.IOException A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

