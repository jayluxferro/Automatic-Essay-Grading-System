digraph "CFG forokhttp3.internal.http2.Http2Connection.ReaderRunnable.\<init\>(Lokhttp3\/internal\/http2\/Http2Connection;Lokhttp3\/internal\/http2\/Http2Reader;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r4 I:okhttp3.internal.http2.Http2Connection)\l  (r3 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable)\l okhttp3.internal.http2.Http2Connection.ReaderRunnable.this$0 okhttp3.internal.http2.Http2Connection \l0x0002: CONST_STR  (r0 I:java.lang.String) =  \"OkHttp %s\" \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0007: IGET  (r4 I:java.lang.String) = (r4 I:okhttp3.internal.http2.Http2Connection) okhttp3.internal.http2.Http2Connection.hostname java.lang.String \l0x0009: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x000c: INVOKE  \l  (r3 I:okhttp3.internal.NamedRunnable)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Object[])\l okhttp3.internal.NamedRunnable.\<init\>(java.lang.String, java.lang.Object[]):void type: DIRECT \l0x000f: IPUT  \l  (r5 I:okhttp3.internal.http2.Http2Reader)\l  (r3 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable)\l okhttp3.internal.http2.Http2Connection.ReaderRunnable.reader okhttp3.internal.http2.Http2Reader \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: RETURN   \l}"];
MethodNode[shape=record,label="{void okhttp3.internal.http2.Http2Connection.ReaderRunnable.\<init\>((r3 'this' I:okhttp3.internal.http2.Http2Connection$ReaderRunnable A[IMMUTABLE_TYPE, THIS]), (r4 I:okhttp3.internal.http2.Http2Connection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:okhttp3.internal.http2.Http2Reader A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

