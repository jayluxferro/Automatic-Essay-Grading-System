digraph "CFG forokhttp3.internal.http2.Http2Connection.ReaderRunnable.windowUpdate(IJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 != 0) goto L_0x0017\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|okhttp3.internal.http2.Http2Connection r0 = r4.this$0\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|monitor\-enter(r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|SYNTHETIC\l}"];
Node_4 [shape=record,label="{4\:\ ?|okhttp3.internal.http2.Http2Connection r5 = r4.this$0\lr5.bytesLeftInWriteWindow = r5.bytesLeftInWriteWindow + r6\lr4.this$0.notifyAll()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|monitor\-exit(r0)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013}"];
Node_7 [shape=record,label="{7\:\ 0x0014|REMOVE\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|REMOVE\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|REMOVE\l|throw r5\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|okhttp3.internal.http2.Http2Stream r5 = r4.this$0.getStream(r5)\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|if (r5 == null) goto L_?\l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|monitor\-enter(r5)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ ?|r5.addBytesToWriteWindow(r6)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0023|monitor\-exit(r5)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0024}"];
Node_17 [shape=record,label="{17\:\ 0x0025|REMOVE\l|java.lang.Throwable r6 = move\-exception\l}"];
Node_18 [shape=record,label="{18\:\ 0x0026|REMOVE\l}"];
Node_19 [shape=record,label="{19\:\ 0x0027|REMOVE\l|throw r6\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.http2.Http2Connection.ReaderRunnable.windowUpdate((r4v0 'this' okhttp3.internal.http2.Http2Connection$ReaderRunnable A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_20;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_22;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

