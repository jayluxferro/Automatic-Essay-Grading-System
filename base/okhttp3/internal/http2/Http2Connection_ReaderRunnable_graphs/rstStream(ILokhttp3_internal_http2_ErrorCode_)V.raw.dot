digraph "CFG forokhttp3.internal.http2.Http2Connection.ReaderRunnable.rstStream(ILokhttp3\/internal\/http2\/ErrorCode;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.internal.http2.Http2Connection) = \l  (r1 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable)\l okhttp3.internal.http2.Http2Connection.ReaderRunnable.this$0 okhttp3.internal.http2.Http2Connection \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:okhttp3.internal.http2.Http2Connection), (r2 I:int) okhttp3.internal.http2.Http2Connection.pushedStream(int):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:okhttp3.internal.http2.Http2Connection) = \l  (r1 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable)\l okhttp3.internal.http2.Http2Connection.ReaderRunnable.this$0 okhttp3.internal.http2.Http2Connection \l0x000a: INVOKE  \l  (r0 I:okhttp3.internal.http2.Http2Connection)\l  (r2 I:int)\l  (r3 I:okhttp3.internal.http2.ErrorCode)\l okhttp3.internal.http2.Http2Connection.pushResetLater(int, okhttp3.internal.http2.ErrorCode):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IGET  (r0 I:okhttp3.internal.http2.Http2Connection) = \l  (r1 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable)\l okhttp3.internal.http2.Http2Connection.ReaderRunnable.this$0 okhttp3.internal.http2.Http2Connection \l0x0010: INVOKE  (r2 I:okhttp3.internal.http2.Http2Stream) = (r0 I:okhttp3.internal.http2.Http2Connection), (r2 I:int) okhttp3.internal.http2.Http2Connection.removeStream(int):okhttp3.internal.http2.Http2Stream type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0019 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: INVOKE  \l  (r2 I:okhttp3.internal.http2.Http2Stream)\l  (r3 I:okhttp3.internal.http2.ErrorCode)\l okhttp3.internal.http2.Http2Stream.receiveRstStream(okhttp3.internal.http2.ErrorCode):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: RETURN   \l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.http2.Http2Connection.ReaderRunnable.rstStream((r1 'this' I:okhttp3.internal.http2.Http2Connection$ReaderRunnable A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:okhttp3.internal.http2.ErrorCode A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
}

