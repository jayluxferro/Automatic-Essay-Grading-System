digraph "CFG forokhttp3.internal.http2.Http2Connection.ReaderRunnable.headers(ZIILjava\/util\/List;)V" {
subgraph cluster_Region_1003949240 {
label = "R(1:(2:(2:2|3)|(2:4|10)))";
node [shape=record,color=blue];
subgraph cluster_Region_433102122 {
label = "R(2:(2:2|3)|(2:4|10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1225798417 {
label = "IF [B:1:0x0006] THEN: R(2:2|3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (okhttp3.internal.http2.Http2Connection.this.pushedStream(r11) == true) goto L_0x0008\l}"];
subgraph cluster_Region_895571135 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|okhttp3.internal.http2.Http2Connection.this.pushHeadersLater(r11, r13, r10)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_919616615 {
label = "R(2:4|10)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e}"];
subgraph cluster_SynchronizedRegion_737467994 {
label = "Synchronized:R(2:5|(2:7|(1:(1:(1:(1:(1:(1:(1:21)))))))))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010}"];
subgraph cluster_Region_2064458524 {
label = "R(2:7|(1:(1:(1:(1:(1:(1:(1:21))))))))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|okhttp3.internal.http2.Http2Stream okhttp3.internal.http2.Http2Stream r0 = okhttp3.internal.http2.Http2Connection.this.getStream(r11)\l}"];
subgraph cluster_IfRegion_667806702 {
label = "IF [B:8:0x0017] THEN: R(1:(1:(1:(1:(1:(1:(1:21))))))) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0017|if (r0 == null) goto L_0x0019\l}"];
subgraph cluster_Region_1664415886 {
label = "R(1:(1:(1:(1:(1:(1:(1:21)))))))";
node [shape=record,color=blue];
subgraph cluster_Region_1548717307 {
label = "R(1:(1:(1:(1:(1:(1:21))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1800122385 {
label = "IF [B:10:0x001d] THEN: R(1:(1:(1:(1:(1:21))))) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001d|if (okhttp3.internal.http2.Http2Connection.this.shutdown != true) goto L_0x0021\l}"];
subgraph cluster_Region_1715516716 {
label = "R(1:(1:(1:(1:(1:21)))))";
node [shape=record,color=blue];
subgraph cluster_Region_586465762 {
label = "R(1:(1:(1:(1:21))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_50116883 {
label = "IF [B:14:0x0025] THEN: R(1:(1:(1:21))) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0025|if (r11 \> okhttp3.internal.http2.Http2Connection.this.lastGoodStreamId) goto L_0x0029\l}"];
subgraph cluster_Region_872499813 {
label = "R(1:(1:(1:21)))";
node [shape=record,color=blue];
subgraph cluster_Region_1468755996 {
label = "R(1:(1:21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1408520414 {
label = "IF [B:18:0x0031] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0031|if ((r11 % 2) != (okhttp3.internal.http2.Http2Connection.this.nextStreamId % 2)) goto L_0x0035\l}"];
subgraph cluster_Region_2087344872 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0035|okhttp3.internal.http2.Http2Stream final okhttp3.internal.http2.Http2Stream r3 = new okhttp3.internal.http2.Http2Stream(r11, okhttp3.internal.http2.Http2Connection.this, false, r10, r13)     \/\/ Catch:\{  \}\lokhttp3.internal.http2.Http2Connection.this.lastGoodStreamId = r11\lokhttp3.internal.http2.Http2Connection.this.streams.put(java.lang.Integer.valueOf(r11), r3)\lokhttp3.internal.http2.Http2Connection.listenerExecutor.execute(new okhttp3.internal.http2.Http2Connection.ReaderRunnable.C14031(\"OkHttp %s stream %d\", new java.lang.Object[]\{okhttp3.internal.http2.Http2Connection.this.hostname, java.lang.Integer.valueOf(r11)\}))\l}"];
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0011|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0019}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001f|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x001f: MONITOR_EXIT  \l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0020}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0021}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0027|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x0027: MONITOR_EXIT  \l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0028}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0029}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0033|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x0033: MONITOR_EXIT  \l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0034}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x006e|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x006e: MONITOR_EXIT  \l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x006f}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0070|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x0070: MONITOR_EXIT  \l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0071|r0.receiveHeaders(r13)\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0074|if (r10 == false) goto L_?\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0076|r0.receiveFin()\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x007a|LOOP_START\lREMOVE\lLOOP:0: B:28:0x007a\-\>B:32:0x007a\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x007b|SYNTHETIC\lREMOVE\lSplitter:B:29:0x007b\l}"];
Node_30 [shape=record,color=red,label="{30\:\ ?|REMOVE\lSplitter:B:29:0x007b\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x007c|REMOVE\l|throw r10\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x007a|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:28:0x007a\-\>B:32:0x007a\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x007c|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x007a|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_35 [shape=record,color=red,label="{35\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_36 [shape=record,color=red,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.http2.Http2Connection.ReaderRunnable.headers((r9v0 'this' okhttp3.internal.http2.Http2Connection$ReaderRunnable A[IMMUTABLE_TYPE, THIS]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 java.util.List\<okhttp3.internal.http2.Header\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCode restructure failed: missing block: B:25:0x0071, code lost:\l    r0.receiveHeaders(r13);\l\lCode restructure failed: missing block: B:26:0x0074, code lost:\l    if (r10 == false) goto L_?;\l\lCode restructure failed: missing block: B:27:0x0076, code lost:\l    r0.receiveFin();\l\lCode restructure failed: missing block: B:35:?, code lost:\l    return;\l\lCode restructure failed: missing block: B:36:?, code lost:\l    return;\l\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(ZII, Ljava\/util\/List\<, Lokhttp3\/internal\/http2\/Header;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_24[style=dashed];
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_21 -> Node_22;
Node_0 -> Node_1;
Node_6 -> Node_7;
Node_6 -> Node_28;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_36;
Node_27 -> Node_35;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_32;
Node_30 -> Node_33;
Node_30 -> Node_34;
Node_32 -> Node_28;
Node_33 -> Node_31;
Node_34 -> Node_32;
}

