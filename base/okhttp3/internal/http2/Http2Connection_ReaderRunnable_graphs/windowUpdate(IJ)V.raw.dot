digraph "CFG forokhttp3.internal.http2.Http2Connection.ReaderRunnable.windowUpdate(IJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0017 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:okhttp3.internal.http2.Http2Connection) = \l  (r4 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable)\l okhttp3.internal.http2.Http2Connection.ReaderRunnable.this$0 okhttp3.internal.http2.Http2Connection \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|SYNTHETIC\lSplitter:B:3:0x0005\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0005\l|0x0005: IGET  (r5 I:okhttp3.internal.http2.Http2Connection) = \l  (r4 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable)\l okhttp3.internal.http2.Http2Connection.ReaderRunnable.this$0 okhttp3.internal.http2.Http2Connection A[Catch:\{ all \-\> 0x0014 \}, TRY_ENTER]\l0x0007: IGET  (r1 I:long) = (r5 I:okhttp3.internal.http2.Http2Connection) okhttp3.internal.http2.Http2Connection.bytesLeftInWriteWindow long A[Catch:\{ all \-\> 0x0014 \}]\l0x0009: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0014 \}]\l0x000a: ARITH  (r1 I:long) = (r1 I:long) + (r6 I:long) A[Catch:\{ all \-\> 0x0014 \}]\l0x000b: IPUT  (r1 I:long), (r5 I:okhttp3.internal.http2.Http2Connection) okhttp3.internal.http2.Http2Connection.bytesLeftInWriteWindow long A[Catch:\{ all \-\> 0x0014 \}]\l0x000d: IGET  (r5 I:okhttp3.internal.http2.Http2Connection) = \l  (r4 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable)\l okhttp3.internal.http2.Http2Connection.ReaderRunnable.this$0 okhttp3.internal.http2.Http2Connection A[Catch:\{ all \-\> 0x0014 \}]\l0x000f: INVOKE  (r5 I:java.lang.Object) java.lang.Object.notifyAll():void type: VIRTUAL A[Catch:\{ all \-\> 0x0014 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0014 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: GOTO  \-\> 0x0028 A[Catch:\{ all \-\> 0x0014 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|ExcHandler: all null\lSplitter:B:3:0x0005\l|0x0014: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0014 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|0x0015: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0014 \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|0x0016: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|0x0017: IGET  (r0 I:okhttp3.internal.http2.Http2Connection) = \l  (r4 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable)\l okhttp3.internal.http2.Http2Connection.ReaderRunnable.this$0 okhttp3.internal.http2.Http2Connection \l0x0019: INVOKE  (r5 I:okhttp3.internal.http2.Http2Stream) = (r0 I:okhttp3.internal.http2.Http2Connection), (r5 I:int) okhttp3.internal.http2.Http2Connection.getStream(int):okhttp3.internal.http2.Http2Stream type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|0x001d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0028 \l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|0x001f: MONITOR_ENTER  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|SYNTHETIC\lSplitter:B:13:0x0020\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x0020\l|0x0020: INVOKE  (r5 I:okhttp3.internal.http2.Http2Stream), (r6 I:long) okhttp3.internal.http2.Http2Stream.addBytesToWriteWindow(long):void type: VIRTUAL A[Catch:\{ all \-\> 0x0025 \}, TRY_ENTER]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0023|0x0023: MONITOR_EXIT  (r5 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0025 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0024|0x0024: GOTO  \-\> 0x0028 A[Catch:\{ all \-\> 0x0025 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0025|ExcHandler: all null\lSplitter:B:13:0x0020\l|0x0025: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0025 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0026|0x0026: MONITOR_EXIT  (r5 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0025 \}, TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0027|0x0027: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0028|0x0028: RETURN   \l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.http2.Http2Connection.ReaderRunnable.windowUpdate((r4 'this' I:okhttp3.internal.http2.Http2Connection$ReaderRunnable A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_20;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_20;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

