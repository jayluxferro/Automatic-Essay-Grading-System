digraph "CFG forokhttp3.internal.http2.Http2Connection.ReaderRunnable.data(ZILokio\/BufferedSource;I)V" {
subgraph cluster_Region_1046259810 {
label = "R(1:(2:(2:2|3)|(2:4|(2:(2:6|7)|(2:8|(1:(1:10)))))))";
node [shape=record,color=blue];
subgraph cluster_Region_963700561 {
label = "R(2:(2:2|3)|(2:4|(2:(2:6|7)|(2:8|(1:(1:10))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1836681606 {
label = "IF [B:1:0x0006] THEN: R(2:2|3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (okhttp3.internal.http2.Http2Connection.this.pushedStream(r4) == true) goto L_0x0008\l}"];
subgraph cluster_Region_1800938140 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|okhttp3.internal.http2.Http2Connection.this.pushDataLater(r4, r5, r6, r3)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1538116610 {
label = "R(2:4|(2:(2:6|7)|(2:8|(1:(1:10)))))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|okhttp3.internal.http2.Http2Stream okhttp3.internal.http2.Http2Stream r0 = okhttp3.internal.http2.Http2Connection.this.getStream(r4)\l}"];
subgraph cluster_Region_807180333 {
label = "R(2:(2:6|7)|(2:8|(1:(1:10))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_754728436 {
label = "IF [B:5:0x0014] THEN: R(2:6|7) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|if (r0 == null) goto L_0x0016\l}"];
subgraph cluster_Region_1333816793 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|okhttp3.internal.http2.Http2Connection.this.writeSynResetLater(r4, okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR)\llong long r0 = (long) r6\lokhttp3.internal.http2.Http2Connection.this.updateConnectionFlowControl(r0)\lr5.skip(r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_349185827 {
label = "R(2:8|(1:(1:10)))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0027|r0.receiveData(r5, r6)\l}"];
subgraph cluster_Region_241740560 {
label = "R(1:(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_796669666 {
label = "IF [B:9:0x002a] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002a|if (r3 == true) goto L_0x002c\l}"];
subgraph cluster_Region_2054714184 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002c|r0.receiveFin()\l}"];
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.http2.Http2Connection.ReaderRunnable.data((r2v0 'this' okhttp3.internal.http2.Http2Connection$ReaderRunnable A[IMMUTABLE_TYPE, THIS]), (r3v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 okio.BufferedSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_12[style=dashed];
Node_10 -> Node_11;
Node_0 -> Node_1;
}

