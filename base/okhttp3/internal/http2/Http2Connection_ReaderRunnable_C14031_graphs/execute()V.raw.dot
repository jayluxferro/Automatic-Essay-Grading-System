digraph "CFG forokhttp3.internal.http2.Http2Connection.ReaderRunnable.1.execute()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable) = \l  (r5 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable$1)\l okhttp3.internal.http2.Http2Connection.ReaderRunnable.1.this$1 okhttp3.internal.http2.Http2Connection$ReaderRunnable A[Catch:\{ IOException \-\> 0x000c \}, TRY_ENTER]\l0x0002: IGET  (r0 I:okhttp3.internal.http2.Http2Connection) = \l  (r0 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable)\l okhttp3.internal.http2.Http2Connection.ReaderRunnable.this$0 okhttp3.internal.http2.Http2Connection A[Catch:\{ IOException \-\> 0x000c \}]\l0x0004: IGET  (r0 I:okhttp3.internal.http2.Http2Connection$Listener) = (r0 I:okhttp3.internal.http2.Http2Connection) okhttp3.internal.http2.Http2Connection.listener okhttp3.internal.http2.Http2Connection$Listener A[Catch:\{ IOException \-\> 0x000c \}]\l0x0006: IGET  (r1 I:okhttp3.internal.http2.Http2Stream) = \l  (r5 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable$1)\l okhttp3.internal.http2.Http2Connection.ReaderRunnable.1.val$newStream okhttp3.internal.http2.Http2Stream A[Catch:\{ IOException \-\> 0x000c \}]\l0x0008: INVOKE  \l  (r0 I:okhttp3.internal.http2.Http2Connection$Listener)\l  (r1 I:okhttp3.internal.http2.Http2Stream)\l okhttp3.internal.http2.Http2Connection.Listener.onStream(okhttp3.internal.http2.Http2Stream):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x000c \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|ExcHandler: IOException null\lSplitter:B:0:0x0000\l|0x000c: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r1 I:okhttp3.internal.platform.Platform) =  okhttp3.internal.platform.Platform.get():okhttp3.internal.platform.Platform type: STATIC \l0x0011: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0012: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0014: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0017: CONST_STR  (r4 I:java.lang.String) =  \"Http2Connection.Listener failure for \" \l0x0019: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001c: IGET  (r4 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable) = \l  (r5 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable$1)\l okhttp3.internal.http2.Http2Connection.ReaderRunnable.1.this$1 okhttp3.internal.http2.Http2Connection$ReaderRunnable \l0x001e: IGET  (r4 I:okhttp3.internal.http2.Http2Connection) = \l  (r4 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable)\l okhttp3.internal.http2.Http2Connection.ReaderRunnable.this$0 okhttp3.internal.http2.Http2Connection \l0x0020: IGET  (r4 I:java.lang.String) = (r4 I:okhttp3.internal.http2.Http2Connection) okhttp3.internal.http2.Http2Connection.hostname java.lang.String \l0x0022: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0025: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0029: INVOKE  \l  (r1 I:okhttp3.internal.platform.Platform)\l  (r2 I:int)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l okhttp3.internal.platform.Platform.log(int, java.lang.String, java.lang.Throwable):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|SYNTHETIC\lSplitter:B:5:0x002c\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x002c\l|0x002c: IGET  (r0 I:okhttp3.internal.http2.Http2Stream) = \l  (r5 I:okhttp3.internal.http2.Http2Connection$ReaderRunnable$1)\l okhttp3.internal.http2.Http2Connection.ReaderRunnable.1.val$newStream okhttp3.internal.http2.Http2Stream A[Catch:\{ IOException \-\> 0x0033 \}, TRY_ENTER]\l0x002e: SGET  (r1 I:okhttp3.internal.http2.ErrorCode) =  okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR okhttp3.internal.http2.ErrorCode A[Catch:\{ IOException \-\> 0x0033 \}]\l0x0030: INVOKE  \l  (r0 I:okhttp3.internal.http2.Http2Stream)\l  (r1 I:okhttp3.internal.http2.ErrorCode)\l okhttp3.internal.http2.Http2Stream.close(okhttp3.internal.http2.ErrorCode):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0033 \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|0x0033: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:5:0x002c\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.http2.Http2Connection.ReaderRunnable.1.execute((r5 'this' I:okhttp3.internal.http2.Http2Connection$ReaderRunnable$1 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_3;
Node_1 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_8 -> Node_7;
}

