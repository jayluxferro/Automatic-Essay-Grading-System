digraph "CFG forokhttp3.internal.http2.Http2Stream.FramingSink.emitFrame(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|okhttp3.internal.http2.Http2Stream r0 = r11.this$0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|monitor\-enter(r0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ all \-\> 0x0081 \}\l|r11.this$0.writeTimeout.enter()     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|LOOP_START\lSYNTHETIC\lSplitter:B:4:0x000a\lLOOP:0: B:4:0x000a\-\>B:13:0x0022\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ all \-\> 0x0081 \}\lSplitter:B:4:0x000a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|Catch:\{ all \-\> 0x0081 \}\l|if ((r11.this$0.bytesLeftInWriteWindow \> 0 ? 1 : (r11.this$0.bytesLeftInWriteWindow == 0 ? 0 : \-1)) \> 0) goto L_0x0028     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|Catch:\{ all \-\> 0x0081 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|Catch:\{ all \-\> 0x0081 \}\l|if (r11.finished != false) goto L_0x0028     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|Catch:\{ all \-\> 0x0081 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|Catch:\{ all \-\> 0x0081 \}\l|if (r11.closed != false) goto L_0x0028     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|Catch:\{ all \-\> 0x0081 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|Catch:\{ all \-\> 0x0081 \}\l|if (r11.this$0.errorCode != null) goto L_0x0028     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|LOOP_END\lCatch:\{ all \-\> 0x0081 \}\lLOOP:0: B:4:0x000a\-\>B:13:0x0022\l|r11.this$0.waitForIo()     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|SYNTHETIC\lSplitter:B:14:0x0028\l}"];
Node_15 [shape=record,label="{15\:\ ?|Catch:\{ all \-\> 0x0081 \}\lSplitter:B:14:0x0028\l|r11.this$0.writeTimeout.exitAndThrowIfTimedOut()     \/\/ Catch:\{ all \-\> 0x0081 \}\lr11.this$0.checkOutNotClosed()     \/\/ Catch:\{ all \-\> 0x0081 \}\llong r9 = java.lang.Math.min(r11.this$0.bytesLeftInWriteWindow, r11.sendBuffer.size())     \/\/ Catch:\{ all \-\> 0x0081 \}\lokhttp3.internal.http2.Http2Stream r1 = r11.this$0     \/\/ Catch:\{ all \-\> 0x0081 \}\lr1.bytesLeftInWriteWindow = r1.bytesLeftInWriteWindow \- r9     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x004a|Catch:\{ all \-\> 0x0081 \}\l|monitor\-exit(r0)     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x004b|r11.this$0.writeTimeout.enter()\l}"];
Node_18 [shape=record,label="{18\:\ 0x0052|SYNTHETIC\lSplitter:B:18:0x0052\l}"];
Node_19 [shape=record,label="{19\:\ ?|Catch:\{ all \-\> 0x0078 \}\lSplitter:B:18:0x0052\l|okhttp3.internal.http2.Http2Connection r5 = r11.this$0.connection     \/\/ Catch:\{ all \-\> 0x0078 \}\lint r6 = r11.this$0.f261id     \/\/ Catch:\{ all \-\> 0x0078 \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x005a|Catch:\{ all \-\> 0x0078 \}\l|if (r12 == false) goto L_0x0069     \/\/ Catch:\{ all \-\> 0x0078 \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x005c|Catch:\{ all \-\> 0x0078 \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x0064|Catch:\{ all \-\> 0x0078 \}\l|if ((r9 \> r11.sendBuffer.size() ? 1 : (r9 == r11.sendBuffer.size() ? 0 : \-1)) != 0) goto L_0x0069     \/\/ Catch:\{ all \-\> 0x0078 \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x0066|Catch:\{ all \-\> 0x0078 \}\l|r7 = true     \/\/ Catch:\{ all \-\> 0x0078 \}\l}"];
Node_24 [shape=record,label="{24\:\ 0x0069|Catch:\{ all \-\> 0x0078 \}\l|r7 = false     \/\/ Catch:\{ all \-\> 0x0078 \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x006b|Catch:\{ all \-\> 0x0078 \}\lPHI: r7 \l  PHI: (r7v0 boolean) = (r7v1 boolean), (r7v2 boolean) binds: [B:24:0x0069, B:23:0x0066] A[DONT_GENERATE, DONT_INLINE]\l|r5.writeData(r6, r7, r11.sendBuffer, r9)     \/\/ Catch:\{ all \-\> 0x0078 \}\l}"];
Node_26 [shape=record,label="{26\:\ 0x0070|DONT_GENERATE\l|okhttp3.internal.http2.Http2Stream r12 = r11.this$0\lokhttp3.internal.http2.Http2Stream$StreamTimeout r12 = r12.writeTimeout\lr12.exitAndThrowIfTimedOut()\l}"];
Node_27 [shape=record,label="{27\:\ 0x0077|RETURN\l|return\l}"];
Node_28 [shape=record,label="{28\:\ 0x0078|ExcHandler:  FINALLY\lSplitter:B:18:0x0052\l|java.lang.Throwable r12 = move\-exception\l}"];
Node_29 [shape=record,label="{29\:\ 0x0079|FINALLY_INSNS\l|r11.this$0.writeTimeout.exitAndThrowIfTimedOut()\l}"];
Node_30 [shape=record,label="{30\:\ 0x0080|throw r12\l}"];
Node_31 [shape=record,label="{31\:\ 0x0081|ExcHandler: all (r12v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:4:0x000a\l|java.lang.Throwable r12 = move\-exception\l}"];
Node_32 [shape=record,label="{32\:\ 0x0082|SYNTHETIC\lSplitter:B:32:0x0082\l}"];
Node_33 [shape=record,label="{33\:\ ?|Catch:\{ all \-\> 0x0081 \}\lSplitter:B:32:0x0082\l|r11.this$0.writeTimeout.exitAndThrowIfTimedOut()     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_34 [shape=record,label="{34\:\ 0x0089|Catch:\{ all \-\> 0x0081 \}\l|throw r12     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_35 [shape=record,label="{35\:\ 0x008a|REMOVE\lCatch:\{ all \-\> 0x0081 \}\l|java.lang.Throwable r12 = move\-exception     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_36 [shape=record,label="{36\:\ 0x008b|REMOVE\l}"];
Node_37 [shape=record,label="{37\:\ 0x008c|REMOVE\l|throw r12\l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.http2.Http2Stream.FramingSink.emitFrame((r11v0 'this' okhttp3.internal.http2.Http2Stream$FramingSink A[IMMUTABLE_TYPE, THIS]), (r12v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | JADX INFO: finally extract failed\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_35;
Node_3 -> Node_4;
Node_3 -> Node_35;
Node_4 -> Node_5;
Node_4 -> Node_31;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_4;
Node_14 -> Node_15;
Node_14 -> Node_35;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_28;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_36 -> Node_37;
}

