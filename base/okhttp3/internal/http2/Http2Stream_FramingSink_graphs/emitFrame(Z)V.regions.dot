digraph "CFG forokhttp3.internal.http2.Http2Stream.FramingSink.emitFrame(Z)V" {
subgraph cluster_Region_1374823718 {
label = "R(3:2|17|(1:25)) | DECL_VAR: long null\l";
node [shape=record,color=blue];
subgraph cluster_SynchronizedRegion_1939504279 {
label = "Synchronized:R(2:1|(3:3|(1:(1:13))|15))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
subgraph cluster_Region_2090985671 {
label = "R(3:3|(1:(1:13))|15)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ all \-\> 0x0081 \}\l|okhttp3.internal.http2.Http2Stream.this.writeTimeout.enter()     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
subgraph cluster_LoopRegion_942995441 {
label = "LOOP:0: (1:(1:13))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0012|Catch:\{ all \-\> 0x0081 \}\l|if (okhttp3.internal.http2.Http2Stream.this.bytesLeftInWriteWindow \<= 0) goto L_0x0014     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
subgraph cluster_Region_567101321 {
label = "R(1:(1:13))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1633062275 {
label = "Try: R(1:13) catches: R(3:31|33|34)";
node [shape=record,color=blue];
subgraph cluster_Region_1091058682 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0022|LOOP_END\lCatch:\{ all \-\> 0x0081 \}\lLOOP:0: B:4:0x000a\-\>B:13:0x0022\l|okhttp3.internal.http2.Http2Stream.this.waitForIo()     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
}
subgraph cluster_Region_1587332949 {
label = "R(3:31|33|34) | ExcHandler: all (r12v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0081|ExcHandler: all (r12v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:4:0x000a\l}"];
Node_33 [shape=record,label="{33\:\ ?|Catch:\{ all \-\> 0x0081 \}\lSplitter:B:32:0x0082\l|okhttp3.internal.http2.Http2Stream.this.writeTimeout.exitAndThrowIfTimedOut()     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_34 [shape=record,label="{34\:\ 0x0089|Catch:\{ all \-\> 0x0081 \}\l|throw r12     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
}
}
}
}
Node_15 [shape=record,label="{15\:\ ?|Catch:\{ all \-\> 0x0081 \}\lSplitter:B:14:0x0028\l|okhttp3.internal.http2.Http2Stream.this.writeTimeout.exitAndThrowIfTimedOut()     \/\/ Catch:\{ all \-\> 0x0081 \}\lokhttp3.internal.http2.Http2Stream.this.checkOutNotClosed()     \/\/ Catch:\{ all \-\> 0x0081 \}\llong r9 = java.lang.Math.min(okhttp3.internal.http2.Http2Stream.this.bytesLeftInWriteWindow, r11.sendBuffer.size())     \/\/ Catch:\{ all \-\> 0x0081 \}\lokhttp3.internal.http2.Http2Stream.this.bytesLeftInWriteWindow \-= r9\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x004b|okhttp3.internal.http2.Http2Stream.this.writeTimeout.enter()\l}"];
subgraph cluster_TryCatchRegion_354824704 {
label = "Try: R(1:25) finally: R(3:28|29|30)";
node [shape=record,color=blue];
subgraph cluster_Region_1947024925 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x006b|Catch:\{ all \-\> 0x0078 \}\lPHI: r7 \l  PHI: (r7v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|okhttp3.internal.http2.Http2Stream.this.connection.writeData(okhttp3.internal.http2.Http2Stream.this.f261id, r12 && r9 == r11.sendBuffer.size(), r11.sendBuffer, r9)     \/\/ Catch:\{ all \-\> 0x0078 \}\l}"];
}
subgraph cluster_Region_1086955442 {
label = "R(3:28|29|30) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0078|ExcHandler:  FINALLY\lSplitter:B:18:0x0052\l}"];
Node_29 [shape=record,label="{29\:\ 0x0079|FINALLY_INSNS\l|okhttp3.internal.http2.Http2Stream.this.writeTimeout.exitAndThrowIfTimedOut()\l}"];
Node_30 [shape=record,label="{30\:\ 0x0080|throw r12\l}"];
}
}
}
subgraph cluster_Region_1587332949 {
label = "R(3:31|33|34) | ExcHandler: all (r12v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0081|ExcHandler: all (r12v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:4:0x000a\l}"];
Node_33 [shape=record,label="{33\:\ ?|Catch:\{ all \-\> 0x0081 \}\lSplitter:B:32:0x0082\l|okhttp3.internal.http2.Http2Stream.this.writeTimeout.exitAndThrowIfTimedOut()     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_34 [shape=record,label="{34\:\ 0x0089|Catch:\{ all \-\> 0x0081 \}\l|throw r12     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
}
subgraph cluster_Region_1086955442 {
label = "R(3:28|29|30) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0078|ExcHandler:  FINALLY\lSplitter:B:18:0x0052\l}"];
Node_29 [shape=record,label="{29\:\ 0x0079|FINALLY_INSNS\l|okhttp3.internal.http2.Http2Stream.this.writeTimeout.exitAndThrowIfTimedOut()\l}"];
Node_30 [shape=record,label="{30\:\ 0x0080|throw r12\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000a|LOOP_START\lSYNTHETIC\lSplitter:B:4:0x000a\lLOOP:0: B:4:0x000a\-\>B:13:0x0022\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|Catch:\{ all \-\> 0x0081 \}\lSplitter:B:4:0x000a\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0014|Catch:\{ all \-\> 0x0081 \}\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0016|ADDED_TO_REGION\lCatch:\{ all \-\> 0x0081 \}\l|if (r11.finished == false) goto L_0x0018     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0018|Catch:\{ all \-\> 0x0081 \}\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001a|ADDED_TO_REGION\lCatch:\{ all \-\> 0x0081 \}\l|if (r11.closed == false) goto L_0x001c     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001c|Catch:\{ all \-\> 0x0081 \}\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0020|ADDED_TO_REGION\lCatch:\{ all \-\> 0x0081 \}\l|if (okhttp3.internal.http2.Http2Stream.this.errorCode == null) goto L_0x0022     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0028|SYNTHETIC\lSplitter:B:14:0x0028\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x004a|DONT_GENERATE\lCatch:\{ all \-\> 0x0081 \}\l|monitor\-exit(\l\/\/ error: 0x004a: MONITOR_EXIT  \l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0052|SYNTHETIC\lSplitter:B:18:0x0052\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|Catch:\{ all \-\> 0x0078 \}\lSplitter:B:18:0x0052\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x005a|Catch:\{ all \-\> 0x0078 \}\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x005c|Catch:\{ all \-\> 0x0078 \}\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0064|REMOVE\lADDED_TO_REGION\lCatch:\{ all \-\> 0x0078 \}\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0066|Catch:\{ all \-\> 0x0078 \}\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0069|Catch:\{ all \-\> 0x0078 \}\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0070|DONT_GENERATE\l|okhttp3.internal.http2.Http2Stream r12 = okhttp3.internal.http2.Http2Stream.this\lokhttp3.internal.http2.Http2Stream$StreamTimeout r12 = r12.writeTimeout\lr12.exitAndThrowIfTimedOut()\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0077}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0082|SYNTHETIC\lSplitter:B:32:0x0082\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x008a|REMOVE\lCatch:\{ all \-\> 0x0081 \}\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x008b|REMOVE\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x008c|REMOVE\l|throw r12\l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.http2.Http2Stream.FramingSink.emitFrame((r11v0 'this' okhttp3.internal.http2.Http2Stream$FramingSink A[IMMUTABLE_TYPE, THIS]), (r12v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | JADX INFO: finally extract failed\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_3 -> Node_35;
Node_6 -> Node_7;
Node_6 -> Node_14[style=dashed];
Node_13 -> Node_4;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_25 -> Node_26;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_35;
Node_4 -> Node_5;
Node_4 -> Node_31;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_14[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_14[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_35;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_18 -> Node_28;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_32 -> Node_33;
Node_32 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
}

