digraph "CFG forokhttp3.internal.http2.Http2Writer.settings(Lokhttp3\/internal\/http2\/Settings;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?}"];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r4.closed != false) goto L_0x003d\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|r1 = 0\lframeHeader(0, r5.size() * 6, (byte) 4, (byte) 0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:4:0x0005, B:17:0x0033] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0010\-\>B:17:0x0033\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|if (r1 \>= 10) goto L_0x0036\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014}"];
Node_8 [shape=record,label="{8\:\ 0x0018|if (r5.isSet(r1) != false) goto L_0x001b\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a}"];
Node_10 [shape=record,label="{10\:\ 0x001b|if (r1 != 4) goto L_0x001f\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|r0 = 3\l}"];
Node_12 [shape=record,label="{12\:\ 0x001f}"];
Node_13 [shape=record,label="{13\:\ 0x0020|if (r1 != 7) goto L_0x0024\l}"];
Node_14 [shape=record,label="{14\:\ 0x0022|r0 = 4\l}"];
Node_15 [shape=record,label="{15\:\ 0x0024|r0 = r1\l}"];
Node_16 [shape=record,label="{16\:\ 0x0025|PHI: r0 \l  PHI: (r0v6 int) = (r0v9 int), (r0v10 int), (r0v11 int) binds: [B:15:0x0024, B:14:0x0022, B:11:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|r4.sink.writeShort(r0)\lr4.sink.writeInt(r5.get(r1))\l}"];
Node_17 [shape=record,label="{17\:\ 0x0033|LOOP_END\lLOOP:0: B:5:0x0010\-\>B:17:0x0033\l|int r1 = r1 + 1\l}"];
Node_18 [shape=record,label="{18\:\ 0x0036|r4.sink.flush()\l}"];
Node_19 [shape=record,label="{19\:\ 0x003b|monitor\-exit(r4)\l}"];
Node_20 [shape=record,label="{20\:\ 0x003c|RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ 0x003d|SYNTHETIC\lSplitter:B:21:0x003d\l}"];
Node_22 [shape=record,label="{22\:\ ?|Splitter:B:21:0x003d\l}"];
Node_23 [shape=record,label="{23\:\ 0x0044|throw new java.io.IOException(\"closed\")\l}"];
Node_24 [shape=record,label="{24\:\ 0x0045|REMOVE\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_25 [shape=record,label="{25\:\ 0x0046|REMOVE\l}"];
Node_26 [shape=record,label="{26\:\ 0x0047|REMOVE\l|throw r5\l}"];
Node_27 [shape=record,label="{27\:\ 0x0036|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0033|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0033|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public synchronized void okhttp3.internal.http2.Http2Writer.settings((r4v0 'this' okhttp3.internal.http2.Http2Writer A[IMMUTABLE_TYPE, THIS]), (r5v0 okhttp3.internal.http2.Settings A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_24;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_21;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_27;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_29;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_16;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_28;
Node_17 -> Node_5;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_27 -> Node_18;
Node_28 -> Node_17;
Node_29 -> Node_17;
}

