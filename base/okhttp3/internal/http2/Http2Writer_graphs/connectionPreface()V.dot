digraph "CFG forokhttp3.internal.http2.Http2Writer.connectionPreface()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r5)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?}"];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r5.closed != false) goto L_0x003e\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005}"];
Node_5 [shape=record,label="{5\:\ 0x0007|if (r5.client != false) goto L_0x000b\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|monitor\-exit(r5)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x000b|SYNTHETIC\lSplitter:B:8:0x000b\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x000b\l}"];
Node_10 [shape=record,label="{10\:\ 0x0013|if (logger.isLoggable(java.util.logging.Level.FINE) == false) goto L_0x002c\l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|java.util.logging.Logger r0 = logger\ljava.lang.Object[] r2 = new java.lang.Object[]\{okhttp3.internal.http2.Http2.CONNECTION_PREFACE.hex()\}\lr0.fine(okhttp3.internal.Util.format(\"\>\> CONNECTION %s\", r2))\l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|r5.sink.write(okhttp3.internal.http2.Http2.CONNECTION_PREFACE.toByteArray())\lr5.sink.flush()\l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|monitor\-exit(r5)\l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|SYNTHETIC\lSplitter:B:15:0x003e\l}"];
Node_16 [shape=record,label="{16\:\ ?|Splitter:B:15:0x003e\l}"];
Node_17 [shape=record,label="{17\:\ 0x0045|throw new java.io.IOException(\"closed\")\l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|REMOVE\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_19 [shape=record,label="{19\:\ 0x0047|REMOVE\l}"];
Node_20 [shape=record,label="{20\:\ 0x0048|REMOVE\l|throw r0\l}"];
MethodNode[shape=record,label="{public synchronized void okhttp3.internal.http2.Http2Writer.connectionPreface((r5v0 'this' okhttp3.internal.http2.Http2Writer A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_18;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_18;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20;
}

