digraph "CFG forokhttp3.internal.http2.Http2Writer.writeContinuationFrames(IJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lPHI: r8 \l  PHI: (r8v1 long) = (r8v0 long), (r8v2 long) binds: [B:0:0x0000, B:6:0x0019] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:6:0x0019\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if ((r8 \> 0 ? 1 : (r8 == 0 ? 0 : \-1)) \<= 0) goto L_0x0024\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|int r2 = (int) java.lang.Math.min((long) r6.maxFrameSize, r8)\llong r3 = (long) r2\llong r8 = r8 \- r3\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|if ((r8 \> 0 ? 1 : (r8 == 0 ? 0 : \-1)) != 0) goto L_0x0018\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|r0 = 4\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|r0 = 0\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|LOOP_END\lPHI: r0 \l  PHI: (r0v2 byte) = (r0v4 byte), (r0v5 byte) binds: [B:9:0x0019, B:10:0x0019] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:6:0x0019\l|frameHeader(r7, r2, (byte) 9, r0)\lr6.sink.write(r6.hpackBuffer, r3)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.http2.Http2Writer.writeContinuationFrames((r6v0 'this' okhttp3.internal.http2.Http2Writer A[IMMUTABLE_TYPE, THIS]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_10;
Node_5 -> Node_9;
Node_6 -> Node_0;
Node_8 -> Node_7;
Node_9 -> Node_6;
Node_10 -> Node_6;
}

