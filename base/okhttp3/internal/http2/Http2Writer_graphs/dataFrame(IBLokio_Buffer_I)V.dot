digraph "CFG forokhttp3.internal.http2.Http2Writer.dataFrame(IBLokio\/Buffer;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|frameHeader(r3, r6, (byte) 0, r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r6 \<= 0) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|r2.sink.write(r5, (long) r6)\l}"];
Node_3 [shape=record,label="{3\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void okhttp3.internal.http2.Http2Writer.dataFrame((r2v0 'this' okhttp3.internal.http2.Http2Writer A[IMMUTABLE_TYPE, THIS]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 okio.Buffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

