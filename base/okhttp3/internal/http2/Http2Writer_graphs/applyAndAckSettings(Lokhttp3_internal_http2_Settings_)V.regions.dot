digraph "CFG forokhttp3.internal.http2.Http2Writer.applyAndAckSettings(Lokhttp3\/internal\/http2\/Settings;)V" {
subgraph cluster_Region_1349634707 {
label = "R(1:(1:(1:(3:4|(1:6)|7)(1:12))))";
node [shape=record,color=blue];
subgraph cluster_Region_1744866462 {
label = "R(1:(1:(3:4|(1:6)|7)(1:12)))";
node [shape=record,color=blue];
subgraph cluster_Region_1707714718 {
label = "R(1:(3:4|(1:6)|7)(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_972337460 {
label = "IF [B:3:0x0003] THEN: R(3:4|(1:6)|7) ELSE: R(1:12)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r2.closed == false) goto L_0x0005\l}"];
subgraph cluster_Region_1729085899 {
label = "R(3:4|(1:6)|7)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|r2.maxFrameSize = r3.getMaxFrameSize(r2.maxFrameSize)\l}"];
subgraph cluster_IfRegion_193447368 {
label = "IF [B:5:0x0012] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|if (r3.getHeaderTableSize() != \-1) goto L_0x0014\l}"];
subgraph cluster_Region_589435262 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0014|r2.hpackWriter.setHeaderTableSizeSetting(r3.getHeaderTableSize())\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x001d|frameHeader(0, 0, (byte) 4, (byte) 1)\lr2.sink.flush()\l}"];
}
subgraph cluster_Region_1069775167 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0031|throw new java.io.IOException(\"closed\")\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0028|DONT_GENERATE\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0029}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002a|SYNTHETIC\lSplitter:B:10:0x002a\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|Splitter:B:10:0x002a\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0032|REMOVE\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0033|REMOVE\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0034|REMOVE\l|throw r3\l}"];
MethodNode[shape=record,label="{public synchronized void okhttp3.internal.http2.Http2Writer.applyAndAckSettings((r2v0 'this' okhttp3.internal.http2.Http2Writer A[IMMUTABLE_TYPE, THIS]), (r3v0 okhttp3.internal.http2.Settings A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_3 -> Node_10[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

