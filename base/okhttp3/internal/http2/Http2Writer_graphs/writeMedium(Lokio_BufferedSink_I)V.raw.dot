digraph "CFG forokhttp3.internal.http2.Http2Writer.writeMedium(Lokio\/BufferedSink;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r0 I:int) = (r2 I:int) \>\>\> (16 int) \l0x0002: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0004: INVOKE  (r1 I:okio.BufferedSink), (r0 I:int) okio.BufferedSink.writeByte(int):okio.BufferedSink type: INTERFACE \l0x0007: ARITH  (r0 I:int) = (r2 I:int) \>\>\> (8 int) \l0x0009: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x000b: INVOKE  (r1 I:okio.BufferedSink), (r0 I:int) okio.BufferedSink.writeByte(int):okio.BufferedSink type: INTERFACE \l0x000e: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0010: INVOKE  (r1 I:okio.BufferedSink), (r2 I:int) okio.BufferedSink.writeByte(int):okio.BufferedSink type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: RETURN   \l}"];
MethodNode[shape=record,label="{private static void okhttp3.internal.http2.Http2Writer.writeMedium((r1 I:okio.BufferedSink A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

