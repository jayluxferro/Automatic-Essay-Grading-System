digraph "CFG forokhttp3.internal.http2.Http2Writer.windowUpdate(IJ)V" {
subgraph cluster_Region_610722703 {
label = "R(1:(1:(1:(1:16)(1:(2:13|14)(1:8)))))";
node [shape=record,color=blue];
subgraph cluster_Region_311763960 {
label = "R(1:(1:(1:16)(1:(2:13|14)(1:8))))";
node [shape=record,color=blue];
subgraph cluster_Region_251249880 {
label = "R(1:(1:16)(1:(2:13|14)(1:8)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_307920486 {
label = "IF [B:3:0x0003] THEN: R(1:16) ELSE: R(1:(2:13|14)(1:8))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r3.closed != false) goto L_0x0036\l}"];
subgraph cluster_Region_20155705 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x003d|throw new java.io.IOException(\"closed\")\l}"];
}
subgraph cluster_Region_981660676 {
label = "R(1:(2:13|14)(1:8)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2057123976 {
label = "IF [B:5:0x000a, B:7:0x0011] THEN: R(2:13|14) ELSE: R(1:8) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000a|if (r5 == 0) goto L_0x0026\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|ADDED_TO_REGION\l|if (r5 \> 2147483647L) goto L_0x0026\l}"];
subgraph cluster_Region_997576947 {
label = "R(2:13|14)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ ?|Splitter:B:12:0x0029\l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|throw okhttp3.internal.http2.Http2.illegalArgument(\"windowSizeIncrement == 0 \|\| windowSizeIncrement \> 0x7fffffffL: %s\", java.lang.Long.valueOf(r5))\l}"];
}
subgraph cluster_Region_640862433 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0013|frameHeader(r4, 4, (byte) 8, (byte) 0)\lr3.sink.writeInt((int) r5)\lr3.sink.flush()\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0005}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000c}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0024|DONT_GENERATE\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0025}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0026}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0029|SYNTHETIC\lSplitter:B:12:0x0029\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0036}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x003e|REMOVE\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x003f|REMOVE\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0040|REMOVE\l|throw r4\l}"];
MethodNode[shape=record,label="{public synchronized void okhttp3.internal.http2.Http2Writer.windowUpdate((r3v0 'this' okhttp3.internal.http2.Http2Writer A[IMMUTABLE_TYPE, THIS]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_13 -> Node_14;
Node_8 -> Node_9;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

