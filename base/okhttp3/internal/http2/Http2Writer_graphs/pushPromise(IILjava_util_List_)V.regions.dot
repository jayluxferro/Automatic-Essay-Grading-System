digraph "CFG forokhttp3.internal.http2.Http2Writer.pushPromise(IILjava\/util\/List;)V" {
subgraph cluster_Region_1848511508 {
label = "R(1:(1:(1:(3:4|8|(1:10))(1:15))))";
node [shape=record,color=blue];
subgraph cluster_Region_1408265301 {
label = "R(1:(1:(3:4|8|(1:10))(1:15)))";
node [shape=record,color=blue];
subgraph cluster_Region_1661211430 {
label = "R(1:(3:4|8|(1:10))(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_743138251 {
label = "IF [B:3:0x0003] THEN: R(3:4|8|(1:10)) ELSE: R(1:15)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r8.closed == false) goto L_0x0005\l}"];
subgraph cluster_Region_98250181 {
label = "R(3:4|8|(1:10))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|r8.hpackWriter.writeHeaders(r11)\llong long r0 = r8.hpackBuffer.size()\lint int r11 = (int) java.lang.Math.min((long) (r8.maxFrameSize \- 4), r0)\llong long r4 = (long) r11\lint int r6 = (r0 \> r4 ? 1 : (r0 == r4 ? 0 : \-1))\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|PHI: r7 \l  PHI: (r7v0 byte) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|frameHeader(r9, r11 + 4, (byte) 5, r6 == 0 ? (byte) 4 : 0)\lr8.sink.writeInt(r10 & Integer.MAX_VALUE)\lr8.sink.write(r8.hpackBuffer, r4)\l}"];
subgraph cluster_IfRegion_352241644 {
label = "IF [B:9:0x0037] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0037|if (r6 \> 0) goto L_0x0039\l}"];
subgraph cluster_Region_175070620 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0039|writeContinuationFrames(r9, r0 \- r4)\l}"];
}
}
}
subgraph cluster_Region_840668410 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0046|throw new java.io.IOException(\"closed\")\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001e}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0020}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0022}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x003d|DONT_GENERATE\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x003e}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x003f|SYNTHETIC\lSplitter:B:13:0x003f\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|Splitter:B:13:0x003f\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0047|REMOVE\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0048|REMOVE\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0049|REMOVE\l|throw r9\l}"];
MethodNode[shape=record,label="{public synchronized void okhttp3.internal.http2.Http2Writer.pushPromise((r8v0 'this' okhttp3.internal.http2.Http2Writer A[IMMUTABLE_TYPE, THIS]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 java.util.List\<okhttp3.internal.http2.Header\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(II, Ljava\/util\/List\<, Lokhttp3\/internal\/http2\/Header;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_3 -> Node_13[style=dashed];
Node_4 -> Node_5;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

