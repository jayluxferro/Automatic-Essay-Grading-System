digraph "CFG forokhttp3.internal.http2.Settings.getEnablePush(Z)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if ((r3.set & 4) == 0) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|r4 = r3.values[2]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r4 == false) goto L_0x0012\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|r4 = 1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|r4 = 0\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|PHI: r4 \l  PHI: (r4v1 int) = (r4v2 int), (r4v3 int), (r4v5 int) binds: [B:5:0x0012, B:4:0x0010, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 != 1) goto L_?\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{boolean okhttp3.internal.http2.Settings.getEnablePush((r3v0 'this' okhttp3.internal.http2.Settings A[IMMUTABLE_TYPE, THIS]), (r4v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
}

