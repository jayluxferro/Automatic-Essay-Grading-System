digraph "CFG forokhttp3.internal.connection.RouteSelector.nextProxy()Ljava\/net\/Proxy;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r3 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.hasNextProxy():boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:java.util.List\<java.net.Proxy\>) = (r3 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.proxies java.util.List \l0x0008: IGET  (r1 I:int) = (r3 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.nextProxyIndex int \l0x000a: ARITH  (r2 I:int) = (r1 I:int) + (1 int) \l0x000c: IPUT  \l  (r2 I:int)\l  (r3 I:okhttp3.internal.connection.RouteSelector)\l okhttp3.internal.connection.RouteSelector.nextProxyIndex int \l0x000e: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0012: CHECK_CAST  (r0 I:java.net.Proxy) = (java.net.Proxy) (r0 I:?[OBJECT, ARRAY]) \l0x0014: INVOKE  \l  (r3 I:okhttp3.internal.connection.RouteSelector)\l  (r0 I:java.net.Proxy)\l okhttp3.internal.connection.RouteSelector.resetNextInetSocketAddress(java.net.Proxy):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: RETURN  (r0 I:java.net.Proxy) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: NEW_INSTANCE  (r0 I:java.net.SocketException) =  java.net.SocketException \l0x001a: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001c: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001f: CONST_STR  (r2 I:java.lang.String) =  \"No route to \" \l0x0021: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0024: IGET  (r2 I:okhttp3.Address) = (r3 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.address okhttp3.Address \l0x0026: INVOKE  (r2 I:okhttp3.HttpUrl) = (r2 I:okhttp3.Address) okhttp3.Address.url():okhttp3.HttpUrl type: VIRTUAL \l0x002a: INVOKE  (r2 I:java.lang.String) = (r2 I:okhttp3.HttpUrl) okhttp3.HttpUrl.host():java.lang.String type: VIRTUAL \l0x002e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0031: CONST_STR  (r2 I:java.lang.String) =  \"; exhausted proxy configurations: \" \l0x0033: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0036: IGET  (r2 I:java.util.List\<java.net.Proxy\>) = (r3 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.proxies java.util.List \l0x0038: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x003b: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003f: INVOKE  (r0 I:java.net.SocketException), (r1 I:java.lang.String) java.net.SocketException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0042|0x0042: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private java.net.Proxy okhttp3.internal.connection.RouteSelector.nextProxy((r3 'this' I:okhttp3.internal.connection.RouteSelector A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

