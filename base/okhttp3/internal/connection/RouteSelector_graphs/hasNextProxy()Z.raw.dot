digraph "CFG forokhttp3.internal.connection.RouteSelector.hasNextProxy()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r2 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.nextProxyIndex int \l0x0002: IGET  (r1 I:java.util.List\<java.net.Proxy\>) = (r2 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.proxies java.util.List \l0x0004: INVOKE  (r1 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean okhttp3.internal.connection.RouteSelector.hasNextProxy((r2 'this' I:okhttp3.internal.connection.RouteSelector A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

