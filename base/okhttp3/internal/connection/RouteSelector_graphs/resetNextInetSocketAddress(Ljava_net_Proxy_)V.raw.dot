digraph "CFG forokhttp3.internal.connection.RouteSelector.resetNextInetSocketAddress(Ljava\/net\/Proxy;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0005: IPUT  \l  (r0 I:java.util.List\<java.net.InetSocketAddress\>)\l  (r6 I:okhttp3.internal.connection.RouteSelector)\l okhttp3.internal.connection.RouteSelector.inetSocketAddresses java.util.List \l0x0007: INVOKE  (r0 I:java.net.Proxy$Type) = (r7 I:java.net.Proxy) java.net.Proxy.type():java.net.Proxy$Type type: VIRTUAL \l0x000b: SGET  (r1 I:java.net.Proxy$Type) =  java.net.Proxy.Type.DIRECT java.net.Proxy$Type \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0046 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: INVOKE  (r0 I:java.net.Proxy$Type) = (r7 I:java.net.Proxy) java.net.Proxy.type():java.net.Proxy$Type type: VIRTUAL \l0x0013: SGET  (r1 I:java.net.Proxy$Type) =  java.net.Proxy.Type.SOCKS java.net.Proxy$Type \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: INVOKE  (r0 I:java.net.SocketAddress) = (r7 I:java.net.Proxy) java.net.Proxy.address():java.net.SocketAddress type: VIRTUAL \l0x001c: INSTANCE_OF  (r1 I:boolean) = (r0 I:?[OBJECT, ARRAY]) java.net.InetSocketAddress \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002b \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: CHECK_CAST  (r0 I:java.net.InetSocketAddress) = (java.net.InetSocketAddress) (r0 I:?[OBJECT, ARRAY]) \l0x0022: INVOKE  (r1 I:java.lang.String) = (r0 I:java.net.InetSocketAddress) okhttp3.internal.connection.RouteSelector.getHostString(java.net.InetSocketAddress):java.lang.String type: STATIC \l0x0026: INVOKE  (r0 I:int) = (r0 I:java.net.InetSocketAddress) java.net.InetSocketAddress.getPort():int type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|0x002b: NEW_INSTANCE  (r7 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x002d: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002f: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0032: CONST_STR  (r2 I:java.lang.String) =  \"Proxy.address() is not an InetSocketAddress: \" \l0x0034: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0037: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x003b: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x003e: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0042: INVOKE  \l  (r7 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0045|0x0045: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0046|0x0046: IGET  (r0 I:okhttp3.Address) = (r6 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.address okhttp3.Address \l0x0048: INVOKE  (r0 I:okhttp3.HttpUrl) = (r0 I:okhttp3.Address) okhttp3.Address.url():okhttp3.HttpUrl type: VIRTUAL \l0x004c: INVOKE  (r1 I:java.lang.String) = (r0 I:okhttp3.HttpUrl) okhttp3.HttpUrl.host():java.lang.String type: VIRTUAL \l0x0050: IGET  (r0 I:okhttp3.Address) = (r6 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.address okhttp3.Address \l0x0052: INVOKE  (r0 I:okhttp3.HttpUrl) = (r0 I:okhttp3.Address) okhttp3.Address.url():okhttp3.HttpUrl type: VIRTUAL \l0x0056: INVOKE  (r0 I:int) = (r0 I:okhttp3.HttpUrl) okhttp3.HttpUrl.port():int type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x005a|0x005a: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x005b|0x005b: IF  (r0 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:26:0x00cd \l}"];
Node_13 [shape=record,label="{13\:\ 0x005d|0x005d: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (65535(0xffff, float:9.1834E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0060|0x0060: IF  (r0 I:?[int, byte, short, char]) \> (r2 I:?[int, byte, short, char])  \-\> B:26:0x00cd \l}"];
Node_15 [shape=record,label="{15\:\ 0x0062|0x0062: INVOKE  (r7 I:java.net.Proxy$Type) = (r7 I:java.net.Proxy) java.net.Proxy.type():java.net.Proxy$Type type: VIRTUAL \l0x0066: SGET  (r2 I:java.net.Proxy$Type) =  java.net.Proxy.Type.SOCKS java.net.Proxy$Type \l}"];
Node_16 [shape=record,label="{16\:\ 0x0068|0x0068: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0074 \l}"];
Node_17 [shape=record,label="{17\:\ 0x006a|0x006a: IGET  (r7 I:java.util.List\<java.net.InetSocketAddress\>) = (r6 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.inetSocketAddresses java.util.List \l0x006c: INVOKE  (r0 I:java.net.InetSocketAddress) = (r1 I:java.lang.String), (r0 I:int) java.net.InetSocketAddress.createUnresolved(java.lang.String, int):java.net.InetSocketAddress type: STATIC \l0x0070: INVOKE  (r7 I:java.util.List), (r0 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x0074|0x0074: IGET  (r7 I:okhttp3.EventListener) = (r6 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.eventListener okhttp3.EventListener \l0x0076: IGET  (r2 I:okhttp3.Call) = (r6 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.call okhttp3.Call \l0x0078: INVOKE  \l  (r7 I:okhttp3.EventListener)\l  (r2 I:okhttp3.Call)\l  (r1 I:java.lang.String)\l okhttp3.EventListener.dnsStart(okhttp3.Call, java.lang.String):void type: VIRTUAL \l0x007b: IGET  (r7 I:okhttp3.Address) = (r6 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.address okhttp3.Address \l0x007d: INVOKE  (r7 I:okhttp3.Dns) = (r7 I:okhttp3.Address) okhttp3.Address.dns():okhttp3.Dns type: VIRTUAL \l0x0081: INVOKE  (r7 I:java.util.List) = (r7 I:okhttp3.Dns), (r1 I:java.lang.String) okhttp3.Dns.lookup(java.lang.String):java.util.List type: INTERFACE \l0x0085: INVOKE  (r2 I:boolean) = (r7 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_19 [shape=record,label="{19\:\ 0x0089|0x0089: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x00ad \l}"];
Node_20 [shape=record,label="{20\:\ 0x008b|0x008b: IGET  (r2 I:okhttp3.EventListener) = (r6 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.eventListener okhttp3.EventListener \l0x008d: IGET  (r3 I:okhttp3.Call) = (r6 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.call okhttp3.Call \l0x008f: INVOKE  \l  (r2 I:okhttp3.EventListener)\l  (r3 I:okhttp3.Call)\l  (r1 I:java.lang.String)\l  (r7 I:java.util.List)\l okhttp3.EventListener.dnsEnd(okhttp3.Call, java.lang.String, java.util.List):void type: VIRTUAL \l0x0092: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0093: INVOKE  (r2 I:int) = (r7 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x0097|0x0097: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:23:0x00ac \l}"];
Node_22 [shape=record,label="{22\:\ 0x0099|0x0099: INVOKE  (r3 I:java.lang.Object) = (r7 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x009d: CHECK_CAST  (r3 I:java.net.InetAddress) = (java.net.InetAddress) (r3 I:?[OBJECT, ARRAY]) \l0x009f: IGET  (r4 I:java.util.List\<java.net.InetSocketAddress\>) = (r6 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.inetSocketAddresses java.util.List \l0x00a1: NEW_INSTANCE  (r5 I:java.net.InetSocketAddress) =  java.net.InetSocketAddress \l0x00a3: INVOKE  \l  (r5 I:java.net.InetSocketAddress)\l  (r3 I:java.net.InetAddress)\l  (r0 I:int)\l java.net.InetSocketAddress.\<init\>(java.net.InetAddress, int):void type: DIRECT \l0x00a6: INVOKE  (r4 I:java.util.List), (r5 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x00a9: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x00ac|0x00ac: RETURN   \l}"];
Node_24 [shape=record,label="{24\:\ 0x00ad|0x00ad: NEW_INSTANCE  (r7 I:java.net.UnknownHostException) =  java.net.UnknownHostException \l0x00af: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00b1: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00b4: IGET  (r2 I:okhttp3.Address) = (r6 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.address okhttp3.Address \l0x00b6: INVOKE  (r2 I:okhttp3.Dns) = (r2 I:okhttp3.Address) okhttp3.Address.dns():okhttp3.Dns type: VIRTUAL \l0x00ba: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x00bd: CONST_STR  (r2 I:java.lang.String) =  \" returned no addresses for \" \l0x00bf: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c2: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c5: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00c9: INVOKE  \l  (r7 I:java.net.UnknownHostException)\l  (r0 I:java.lang.String)\l java.net.UnknownHostException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_25 [shape=record,label="{25\:\ 0x00cc|0x00cc: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_26 [shape=record,label="{26\:\ 0x00cd|0x00cd: NEW_INSTANCE  (r7 I:java.net.SocketException) =  java.net.SocketException \l0x00cf: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00d1: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00d4: CONST_STR  (r3 I:java.lang.String) =  \"No route to \" \l0x00d6: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00d9: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00dc: CONST_STR  (r1 I:java.lang.String) =  \":\" \l0x00de: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00e1: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x00e4: CONST_STR  (r0 I:java.lang.String) =  \"; port is out of range\" \l0x00e6: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00e9: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00ed: INVOKE  (r7 I:java.net.SocketException), (r0 I:java.lang.String) java.net.SocketException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_27 [shape=record,label="{27\:\ 0x00f0|0x00f0: THROW  (r7 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.connection.RouteSelector.resetNextInetSocketAddress((r6 'this' I:okhttp3.internal.connection.RouteSelector A[IMMUTABLE_TYPE, THIS]), (r7 I:java.net.Proxy A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_10[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_26;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_26;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_21;
Node_24 -> Node_25;
Node_26 -> Node_27;
}

