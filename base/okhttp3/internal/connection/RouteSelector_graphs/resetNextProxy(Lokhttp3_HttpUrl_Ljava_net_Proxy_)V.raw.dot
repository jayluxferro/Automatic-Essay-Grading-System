digraph "CFG forokhttp3.internal.connection.RouteSelector.resetNextProxy(Lokhttp3\/HttpUrl;Ljava\/net\/Proxy;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: INVOKE  (r2 I:java.util.List) = (r3 I:java.lang.Object) java.util.Collections.singletonList(java.lang.Object):java.util.List type: STATIC \l0x0007: IPUT  \l  (r2 I:java.util.List\<java.net.Proxy\>)\l  (r1 I:okhttp3.internal.connection.RouteSelector)\l okhttp3.internal.connection.RouteSelector.proxies java.util.List \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IGET  (r3 I:okhttp3.Address) = (r1 I:okhttp3.internal.connection.RouteSelector) okhttp3.internal.connection.RouteSelector.address okhttp3.Address \l0x000c: INVOKE  (r3 I:java.net.ProxySelector) = (r3 I:okhttp3.Address) okhttp3.Address.proxySelector():java.net.ProxySelector type: VIRTUAL \l0x0010: INVOKE  (r2 I:java.net.URI) = (r2 I:okhttp3.HttpUrl) okhttp3.HttpUrl.uri():java.net.URI type: VIRTUAL \l0x0014: INVOKE  (r2 I:java.util.List) = (r3 I:java.net.ProxySelector), (r2 I:java.net.URI) java.net.ProxySelector.select(java.net.URI):java.util.List type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0025 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: INVOKE  (r3 I:boolean) = (r2 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0025 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: INVOKE  (r2 I:java.util.List) = (r2 I:java.util.List) okhttp3.internal.Util.immutableList(java.util.List):java.util.List type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0026: NEW_ARRAY  (r2 I:java.net.Proxy[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.net.Proxy[] \l0x0028: SGET  (r3 I:java.net.Proxy) =  java.net.Proxy.NO_PROXY java.net.Proxy \l0x002a: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x002c: INVOKE  (r2 I:java.util.List) = (r2 I:java.lang.Object[]) okhttp3.internal.Util.immutableList(java.lang.Object[]):java.util.List type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: IPUT  \l  (r2 I:java.util.List\<java.net.Proxy\>)\l  (r1 I:okhttp3.internal.connection.RouteSelector)\l okhttp3.internal.connection.RouteSelector.proxies java.util.List \l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|0x0032: IPUT  \l  (r0 I:int)\l  (r1 I:okhttp3.internal.connection.RouteSelector)\l okhttp3.internal.connection.RouteSelector.nextProxyIndex int \l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: RETURN   \l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.connection.RouteSelector.resetNextProxy((r1 'this' I:okhttp3.internal.connection.RouteSelector A[IMMUTABLE_TYPE, THIS]), (r2 I:okhttp3.HttpUrl A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.net.Proxy A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

