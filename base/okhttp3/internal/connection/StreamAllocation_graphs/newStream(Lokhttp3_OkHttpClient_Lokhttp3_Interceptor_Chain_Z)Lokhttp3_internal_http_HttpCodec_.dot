digraph "CFG forokhttp3.internal.connection.StreamAllocation.newStream(Lokhttp3\/OkHttpClient;Lokhttp3\/Interceptor$Chain;Z)Lokhttp3\/internal\/http\/HttpCodec;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|SYNTHETIC\lSplitter:B:1:0x0016\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IOException \-\> 0x0028 \}\lSplitter:B:1:0x0016\l|okhttp3.internal.http.HttpCodec r8 = findHealthyConnection(r9.connectTimeoutMillis(), r9.readTimeoutMillis(), r9.writeTimeoutMillis(), r8.pingIntervalMillis(), r8.retryOnConnectionFailure(), r10).newCodec(r8, r9, r7)     \/\/ Catch:\{ IOException \-\> 0x0028 \}\lokhttp3.ConnectionPool r9 = r7.connectionPool     \/\/ Catch:\{ IOException \-\> 0x0028 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|Catch:\{ IOException \-\> 0x0028 \}\l|monitor\-enter(r9)     \/\/ Catch:\{ IOException \-\> 0x0028 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|SYNTHETIC\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ IOException \-\> 0x0028 \}\l|r7.codec = r8     \/\/ Catch:\{ IOException \-\> 0x0028 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|Catch:\{ IOException \-\> 0x0028 \}\l|monitor\-exit(r9)     \/\/ Catch:\{ IOException \-\> 0x0028 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|RETURN\lCatch:\{ IOException \-\> 0x0028 \}\l|return r8     \/\/ Catch:\{ IOException \-\> 0x0028 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|REMOVE\lCatch:\{ IOException \-\> 0x0028 \}\l|java.lang.Throwable r8 = move\-exception     \/\/ Catch:\{ IOException \-\> 0x0028 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|REMOVE\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|SYNTHETIC\lREMOVE\lSplitter:B:10:0x0027\l}"];
Node_11 [shape=record,label="{11\:\ ?|REMOVE\lCatch:\{ IOException \-\> 0x0028 \}\lSplitter:B:10:0x0027\l|throw r8     \/\/ Catch:\{ IOException \-\> 0x0028 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|ExcHandler: IOException (r8v1 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0016\l|java.io.IOException r8 = move\-exception\l}"];
Node_13 [shape=record,label="{13\:\ 0x0029}"];
Node_14 [shape=record,label="{14\:\ 0x002e|throw new okhttp3.internal.connection.RouteException(r8)\l}"];
MethodNode[shape=record,label="{public okhttp3.internal.http.HttpCodec okhttp3.internal.connection.StreamAllocation.newStream((r7v0 'this' okhttp3.internal.connection.StreamAllocation A[IMMUTABLE_TYPE, THIS]), (r8v0 okhttp3.OkHttpClient A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 okhttp3.Interceptor$Chain A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

