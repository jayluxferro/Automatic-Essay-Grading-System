digraph "CFG forokhttp3.internal.connection.StreamAllocation.releaseAndAcquire(Lokhttp3\/internal\/connection\/RealConnection;)Ljava\/net\/Socket;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3.codec != null) goto L_0x0026\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x000d|if (r3.connection.allocations.size() != 1) goto L_0x0026\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|java.net.Socket r1 = deallocate(true, false, false)\lr3.connection = r4\ljava.util.List\<java.lang.ref.Reference\<okhttp3.internal.connection.StreamAllocation\>\> r4 = r4.allocations\lr4.add(r3.connection.allocations.get(0))\l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|RETURN\l|return r1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0026}"];
Node_7 [shape=record,label="{7\:\ 0x002b|throw new java.lang.IllegalStateException()\l}"];
MethodNode[shape=record,label="{public java.net.Socket okhttp3.internal.connection.StreamAllocation.releaseAndAcquire((r3v0 'this' okhttp3.internal.connection.StreamAllocation A[IMMUTABLE_TYPE, THIS]), (r4v0 okhttp3.internal.connection.RealConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

