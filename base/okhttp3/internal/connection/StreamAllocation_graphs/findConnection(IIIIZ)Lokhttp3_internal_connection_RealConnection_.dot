digraph "CFG forokhttp3.internal.connection.StreamAllocation.findConnection(IIIIZ)Lokhttp3\/internal\/connection\/RealConnection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = r18\lokhttp3.ConnectionPool r2 = r1.connectionPool\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|monitor\-enter(r2)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?}"];
Node_4 [shape=record,label="{4\:\ 0x0007|if (r1.released != false) goto L_0x0136\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009}"];
Node_6 [shape=record,label="{6\:\ 0x000b|if (r1.codec != null) goto L_0x012e\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d}"];
Node_8 [shape=record,label="{8\:\ 0x000f|if (r1.canceled != false) goto L_0x0126\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|okhttp3.internal.connection.RealConnection r0 = r1.connection\ljava.net.Socket r3 = releaseIfNoNewStreams()\lr5 = null\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|if (r1.connection == null) goto L_0x0020\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|okhttp3.internal.connection.RealConnection r0 = r1.connection\lr4 = null\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|r4 = r0\lr0 = null\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|PHI: r0 r4 \l  PHI: (r0v8 okhttp3.internal.connection.RealConnection) = (r0v25 okhttp3.internal.connection.RealConnection), (r0v26 okhttp3.internal.connection.RealConnection) binds: [B:12:0x0020, B:11:0x001c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 okhttp3.internal.connection.RealConnection) = (r4v7 okhttp3.internal.connection.RealConnection), (r4v8 okhttp3.internal.connection.RealConnection) binds: [B:12:0x0020, B:11:0x001c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|if (r1.reportedAcquired != false) goto L_0x0027\l}"];
Node_15 [shape=record,label="{15\:\ 0x0026|r4 = null\l}"];
Node_16 [shape=record,label="{16\:\ 0x0027|PHI: r4 \l  PHI: (r4v2 okhttp3.internal.connection.RealConnection) = (r4v1 okhttp3.internal.connection.RealConnection), (r4v6 okhttp3.internal.connection.RealConnection) binds: [B:14:0x0024, B:15:0x0026] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0029|if (r0 != null) goto L_0x0043\l}"];
Node_18 [shape=record,label="{18\:\ 0x002b|okhttp3.internal.Internal.instance.get(r1.connectionPool, r1.address, r1, (okhttp3.Route) null)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0036|if (r1.connection == null) goto L_0x003e\l}"];
Node_20 [shape=record,label="{20\:\ 0x0038|r8 = r1.connection\lr9 = null\lr0 = true\l}"];
Node_21 [shape=record,label="{21\:\ 0x003e|r9 = r1.route\lr8 = r0\l}"];
Node_22 [shape=record,label="{22\:\ 0x0043|r8 = r0\lr9 = null\l}"];
Node_23 [shape=record,label="{23\:\ 0x0045|PHI: r8 r9 \l  PHI: (r8v7 okhttp3.internal.connection.RealConnection) = (r8v8 okhttp3.internal.connection.RealConnection), (r8v12 okhttp3.internal.connection.RealConnection) binds: [B:22:0x0043, B:21:0x003e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v3 okhttp3.Route) = (r9v4 okhttp3.Route), (r9v6 okhttp3.Route) binds: [B:22:0x0043, B:21:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|r0 = false\l}"];
Node_24 [shape=record,label="{24\:\ 0x0046|PHI: r0 r8 r9 \l  PHI: (r0v9 boolean) = (r0v22 boolean), (r0v24 boolean) binds: [B:23:0x0045, B:20:0x0038] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v0 okhttp3.internal.connection.RealConnection) = (r8v7 okhttp3.internal.connection.RealConnection), (r8v13 okhttp3.internal.connection.RealConnection) binds: [B:23:0x0045, B:20:0x0038] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v0 okhttp3.Route) = (r9v3 okhttp3.Route), (r9v7 okhttp3.Route) binds: [B:23:0x0045, B:20:0x0038] A[DONT_GENERATE, DONT_INLINE]\l|monitor\-exit(r2)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0047|okhttp3.internal.Util.closeQuietly(r3)\l}"];
Node_26 [shape=record,label="{26\:\ 0x004a|if (r4 == null) goto L_0x0053\l}"];
Node_27 [shape=record,label="{27\:\ 0x004c|r1.eventListener.connectionReleased(r1.call, r4)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0053|if (r0 == false) goto L_0x005c\l}"];
Node_29 [shape=record,label="{29\:\ 0x0055|r1.eventListener.connectionAcquired(r1.call, r8)\l}"];
Node_30 [shape=record,label="{30\:\ 0x005c|if (r8 == null) goto L_0x005f\l}"];
Node_31 [shape=record,label="{31\:\ 0x005e|RETURN\l|return r8\l}"];
Node_32 [shape=record,label="{32\:\ 0x005f|if (r9 != null) goto L_0x0077\l}"];
Node_33 [shape=record,label="{33\:\ 0x0061}"];
Node_34 [shape=record,label="{34\:\ 0x0063|if (r1.routeSelection == null) goto L_0x006d\l}"];
Node_35 [shape=record,label="{35\:\ 0x0065}"];
Node_36 [shape=record,label="{36\:\ 0x006b|if (r1.routeSelection.hasNext() != false) goto L_0x0077\l}"];
Node_37 [shape=record,label="{37\:\ 0x006d|r1.routeSelection = r1.routeSelector.next()\lr2 = true\l}"];
Node_38 [shape=record,label="{38\:\ 0x0077|r2 = false\l}"];
Node_39 [shape=record,label="{39\:\ 0x0078|PHI: r2 \l  PHI: (r2v1 boolean) = (r2v12 boolean), (r2v16 boolean) binds: [B:38:0x0077, B:37:0x006d] A[DONT_GENERATE, DONT_INLINE]\l|okhttp3.ConnectionPool r3 = r1.connectionPool\l}"];
Node_40 [shape=record,label="{40\:\ 0x007a|monitor\-enter(r3)\l}"];
Node_41 [shape=record,label="{41\:\ 0x007b|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ ?}"];
Node_43 [shape=record,label="{43\:\ 0x007d|if (r1.canceled != false) goto L_0x011b\l}"];
Node_44 [shape=record,label="{44\:\ 0x007f|if (r2 == false) goto L_0x00aa\l}"];
Node_45 [shape=record,label="{45\:\ 0x0081|java.util.List r2 = r1.routeSelection.getAll()\lint r4 = r2.size()\lr10 = 0\l}"];
Node_46 [shape=record,label="{46\:\ 0x008c|LOOP_START\lPHI: r10 \l  PHI: (r10v2 int) = (r10v1 int), (r10v3 int) binds: [B:45:0x0081, B:50:0x00a7] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:46:0x008c\-\>B:50:0x00a7\l|if (r10 \>= r4) goto L_0x00aa\l}"];
Node_47 [shape=record,label="{47\:\ 0x008e|okhttp3.Route r11 = r2.get(r10)\lokhttp3.internal.Internal.instance.get(r1.connectionPool, r1.address, r1, r11)\l}"];
Node_48 [shape=record,label="{48\:\ 0x009f|if (r1.connection == null) goto L_0x00a7\l}"];
Node_49 [shape=record,label="{49\:\ 0x00a1|okhttp3.internal.connection.RealConnection r8 = r1.connection\lr1.route = r11\lr0 = true\l}"];
Node_50 [shape=record,label="{50\:\ 0x00a7|LOOP_END\lLOOP:0: B:46:0x008c\-\>B:50:0x00a7\l|int r10 = r10 + 1\l}"];
Node_51 [shape=record,label="{51\:\ 0x00aa|PHI: r0 r8 \l  PHI: (r0v12 boolean) = (r0v9 boolean), (r0v9 boolean), (r0v21 boolean) binds: [B:44:0x007f, B:88:0x00aa, B:49:0x00a1] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 okhttp3.internal.connection.RealConnection) = (r8v0 okhttp3.internal.connection.RealConnection), (r8v0 okhttp3.internal.connection.RealConnection), (r8v6 okhttp3.internal.connection.RealConnection) binds: [B:44:0x007f, B:88:0x00aa, B:49:0x00a1] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != false) goto L_0x00c2\l}"];
Node_52 [shape=record,label="{52\:\ 0x00ac|if (r9 != null) goto L_0x00b4\l}"];
Node_53 [shape=record,label="{53\:\ 0x00ae|okhttp3.Route r9 = r1.routeSelection.next()\l}"];
Node_54 [shape=record,label="{54\:\ 0x00b4|PHI: r9 \l  PHI: (r9v1 okhttp3.Route) = (r9v0 okhttp3.Route), (r9v2 okhttp3.Route) binds: [B:52:0x00ac, B:53:0x00ae] A[DONT_GENERATE, DONT_INLINE]\l|r1.route = r9\lr1.refusedStreamCount = 0\lokhttp3.internal.connection.RealConnection r8 = new okhttp3.internal.connection.RealConnection(r1.connectionPool, r9)     \/\/ Catch:\{  \}\lacquire(r8, false)\l}"];
Node_55 [shape=record,label="{55\:\ 0x00c2|PHI: r8 \l  PHI: (r8v2 okhttp3.internal.connection.RealConnection) = (r8v1 okhttp3.internal.connection.RealConnection), (r8v5 okhttp3.internal.connection.RealConnection) binds: [B:51:0x00aa, B:54:0x00b4] A[DONT_GENERATE, DONT_INLINE]\l|monitor\-exit(r3)\l}"];
Node_56 [shape=record,label="{56\:\ 0x00c3|if (r0 == false) goto L_0x00cd\l}"];
Node_57 [shape=record,label="{57\:\ 0x00c5|r1.eventListener.connectionAcquired(r1.call, r8)\l}"];
Node_58 [shape=record,label="{58\:\ 0x00cc|RETURN\l|return r8\l}"];
Node_59 [shape=record,label="{59\:\ 0x00cd|okhttp3.Call r0 = r1.call\lr8.connect(r19, r20, r21, r22, r23, r0, r1.eventListener)\lrouteDatabase().connected(r8.route())\lokhttp3.ConnectionPool r2 = r1.connectionPool\l}"];
Node_60 [shape=record,label="{60\:\ 0x00f0|monitor\-enter(r2)\l}"];
Node_61 [shape=record,label="{61\:\ 0x00f1|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ ?|r1.reportedAcquired = true\lokhttp3.internal.Internal.instance.put(r1.connectionPool, r8)\l}"];
Node_63 [shape=record,label="{63\:\ 0x00fe|if (r8.isMultiplexed() == false) goto L_0x010c\l}"];
Node_64 [shape=record,label="{64\:\ 0x0100|java.net.Socket r5 = okhttp3.internal.Internal.instance.deduplicate(r1.connectionPool, r1.address, r1)\lokhttp3.internal.connection.RealConnection r8 = r1.connection\l}"];
Node_65 [shape=record,label="{65\:\ 0x010c|PHI: r5 r8 \l  PHI: (r5v1 java.net.Socket) = (r5v0 java.net.Socket), (r5v2 java.net.Socket) binds: [B:63:0x00fe, B:64:0x0100] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v3 okhttp3.internal.connection.RealConnection) = (r8v2 okhttp3.internal.connection.RealConnection), (r8v4 okhttp3.internal.connection.RealConnection) binds: [B:63:0x00fe, B:64:0x0100] A[DONT_GENERATE, DONT_INLINE]\l|monitor\-exit(r2)\l}"];
Node_66 [shape=record,label="{66\:\ 0x010d|okhttp3.internal.Util.closeQuietly(r5)\lr1.eventListener.connectionAcquired(r1.call, r8)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0117|RETURN\l|return r8\l}"];
Node_68 [shape=record,label="{68\:\ 0x0118|LOOP_START\lREMOVE\lLOOP:1: B:68:0x0118\-\>B:90:0x0118\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_69 [shape=record,label="{69\:\ 0x0119|SYNTHETIC\lREMOVE\lSplitter:B:69:0x0119\l}"];
Node_70 [shape=record,label="{70\:\ ?|REMOVE\lSplitter:B:69:0x0119\l}"];
Node_71 [shape=record,label="{71\:\ 0x011a|REMOVE\l|throw r0\l}"];
Node_72 [shape=record,label="{72\:\ 0x011b|SYNTHETIC\lSplitter:B:72:0x011b\l}"];
Node_73 [shape=record,label="{73\:\ ?|Splitter:B:72:0x011b\l}"];
Node_74 [shape=record,label="{74\:\ 0x0122|throw new java.io.IOException(\"Canceled\")\l}"];
Node_75 [shape=record,label="{75\:\ 0x0123|REMOVE\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_76 [shape=record,label="{76\:\ 0x0124|REMOVE\l}"];
Node_77 [shape=record,label="{77\:\ 0x0125|REMOVE\l|throw r0\l}"];
Node_78 [shape=record,label="{78\:\ 0x0126|SYNTHETIC\lSplitter:B:78:0x0126\l}"];
Node_79 [shape=record,label="{79\:\ ?|Splitter:B:78:0x0126\l}"];
Node_80 [shape=record,label="{80\:\ 0x012d|throw new java.io.IOException(\"Canceled\")\l}"];
Node_81 [shape=record,label="{81\:\ 0x012e}"];
Node_82 [shape=record,label="{82\:\ 0x0135|throw new java.lang.IllegalStateException(\"codec != null\")\l}"];
Node_83 [shape=record,label="{83\:\ 0x0136}"];
Node_84 [shape=record,label="{84\:\ 0x013d|throw new java.lang.IllegalStateException(\"released\")\l}"];
Node_85 [shape=record,label="{85\:\ 0x013e|REMOVE\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_86 [shape=record,label="{86\:\ 0x013f|REMOVE\l}"];
Node_87 [shape=record,label="{87\:\ 0x0140|REMOVE\l|throw r0\l}"];
Node_88 [shape=record,label="{88\:\ 0x00aa|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x00a1|SYNTHETIC\l}"];
Node_90 [shape=record,label="{90\:\ 0x0118|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:1: B:68:0x0118\-\>B:90:0x0118\l}"];
Node_91 [shape=record,label="{91\:\ 0x011a|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_92 [shape=record,label="{92\:\ 0x0118|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
MethodNode[shape=record,label="{private okhttp3.internal.connection.RealConnection okhttp3.internal.connection.StreamAllocation.findConnection((r18v0 'this' okhttp3.internal.connection.StreamAllocation A[IMMUTABLE_TYPE, THIS]), (r19v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_85;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_83;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_81;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_78;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_24;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_38;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_37;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_41 -> Node_75;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_72;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_51;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_88;
Node_47 -> Node_48;
Node_48 -> Node_50;
Node_48 -> Node_89[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_46;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_55;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_59;
Node_57 -> Node_58;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62;
Node_61 -> Node_68;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_65;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_67;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_69 -> Node_90;
Node_70 -> Node_91;
Node_70 -> Node_92;
Node_72 -> Node_73;
Node_72 -> Node_75;
Node_73 -> Node_74;
Node_75 -> Node_76;
Node_76 -> Node_77;
Node_78 -> Node_79;
Node_78 -> Node_85;
Node_79 -> Node_80;
Node_81 -> Node_82;
Node_83 -> Node_84;
Node_85 -> Node_86;
Node_86 -> Node_87;
Node_88 -> Node_51;
Node_89 -> Node_49;
Node_90 -> Node_68;
Node_91 -> Node_71;
Node_92 -> Node_90;
}

