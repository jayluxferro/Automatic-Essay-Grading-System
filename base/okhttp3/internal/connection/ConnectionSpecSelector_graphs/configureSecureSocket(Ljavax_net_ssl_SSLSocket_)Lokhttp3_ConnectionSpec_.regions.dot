digraph "CFG forokhttp3.internal.connection.ConnectionSpecSelector.configureSecureSocket(Ljavax\/net\/ssl\/SSLSocket;)Lokhttp3\/ConnectionSpec;" {
subgraph cluster_Region_515172766 {
label = "R(3:0|(1:(2:(2:6|1)|(2:2|(2:(2:4|1)|(1:5)))))|(2:(2:8|9)|(2:10|11))) | DECL_VAR: okhttp3.ConnectionSpec null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r4.nextModeIndex\lint int r1 = r4.connectionSpecs.size()\l}"];
subgraph cluster_LoopRegion_688384147 {
label = "LOOP:0: (1:(2:(2:6|1)|(2:2|(2:(2:4|1)|(1:5)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1638723658 {
label = "R(1:(2:(2:6|1)|(2:2|(2:(2:4|1)|(1:5)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1635970968 {
label = "R(2:(2:6|1)|(2:2|(2:(2:4|1)|(1:5))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_546418035 {
label = "IF [B:1:0x0008] THEN: R(2:6|1) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v6 int) binds: [B:0:0x0000, B:5:0x001d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0008\-\>B:5:0x001d\l|if (r0 \>= r1) goto L_0x0020\l}"];
subgraph cluster_Region_923042045 {
label = "R(2:6|1)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0020|EDGE_INSN: B:6:0x0020\-\>B:7:0x0021 ?: BREAK  \l|r2 = null\l}"];
Node_InsnContainer_585525128 [shape=record,label="{|break\l}"];
}
}
subgraph cluster_Region_1694857340 {
label = "R(2:2|(2:(2:4|1)|(1:5)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|okhttp3.ConnectionSpec r2 = r4.connectionSpecs.get(r0)\l}"];
subgraph cluster_Region_875778103 {
label = "R(2:(2:4|1)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_840681563 {
label = "IF [B:3:0x0016] THEN: R(2:4|1) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0016|if (r2.isCompatible(r5) == true) goto L_0x0018\l}"];
subgraph cluster_Region_1556387163 {
label = "R(2:4|1)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0018|EDGE_INSN: B:4:0x0018\-\>B:7:0x0021 ?: BREAK  \l|r4.nextModeIndex = r0 + 1\l}"];
Node_InsnContainer_1142099887 [shape=record,label="{|break\l}"];
}
}
subgraph cluster_Region_1422388619 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001d|LOOP_END\lLOOP:0: B:1:0x0008\-\>B:5:0x001d\l|r0++\l}"];
}
}
}
}
}
}
subgraph cluster_Region_1440283266 {
label = "R(2:(2:8|9)|(2:10|11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2068097766 {
label = "IF [B:7:0x0021] THEN: R(2:8|9) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0021|EDGE_INSN: B:4:0x0018\-\>B:7:0x0021 ?: BREAK  \lEDGE_INSN: B:6:0x0020\-\>B:7:0x0021 ?: BREAK  \lPHI: r2 \l  PHI: (r2v1 okhttp3.ConnectionSpec) = (r2v0 okhttp3.ConnectionSpec), (r2v9 okhttp3.ConnectionSpec) binds: [B:6:0x0020, B:4:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 != null) goto L_0x0023\l}"];
subgraph cluster_Region_393342149 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0023|r4.isFallbackPossible = isFallbackPossible(r5)\lokhttp3.internal.Internal.instance.apply(r2, r5, r4.isFallback)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|RETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_1271134195 {
label = "R(2:10|11)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0031}"];
Node_11 [shape=record,label="{11\:\ 0x0063|throw new java.net.UnknownServiceException(\"Unable to find acceptable protocols. isFallback=\" + r4.isFallback + \", modes=\" + r4.connectionSpecs + \", supported protocols=\" + java.util.Arrays.toString(r5.getEnabledProtocols()))\l}"];
}
}
}
Node_12 [shape=record,color=red,label="{12\:\ 0x0018|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0020|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public okhttp3.ConnectionSpec okhttp3.internal.connection.ConnectionSpecSelector.configureSecureSocket((r4v0 'this' okhttp3.internal.connection.ConnectionSpecSelector A[IMMUTABLE_TYPE, THIS]), (r5v0 javax.net.ssl.SSLSocket A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_6 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_5[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_7;
Node_5 -> Node_1;
Node_7 -> Node_8;
Node_7 -> Node_10[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_4;
Node_13 -> Node_6;
}

