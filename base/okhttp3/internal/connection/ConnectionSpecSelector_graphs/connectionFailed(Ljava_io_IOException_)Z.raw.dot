digraph "CFG forokhttp3.internal.connection.ConnectionSpecSelector.connectionFailed(Ljava\/io\/IOException;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: IPUT  \l  (r0 I:boolean)\l  (r4 I:okhttp3.internal.connection.ConnectionSpecSelector)\l okhttp3.internal.connection.ConnectionSpecSelector.isFallback boolean \l0x0003: IGET  (r1 I:boolean) = (r4 I:okhttp3.internal.connection.ConnectionSpecSelector) okhttp3.internal.connection.ConnectionSpecSelector.isFallbackPossible boolean \l0x0005: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: RETURN  (r2 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: INSTANCE_OF  (r1 I:boolean) = (r5 I:?[OBJECT, ARRAY]) java.net.ProtocolException \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000e \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: RETURN  (r2 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: INSTANCE_OF  (r1 I:boolean) = (r5 I:?[OBJECT, ARRAY]) java.io.InterruptedIOException \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0013 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: RETURN  (r2 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: INSTANCE_OF  (r1 I:boolean) = (r5 I:?[OBJECT, ARRAY]) javax.net.ssl.SSLHandshakeException \l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|0x0015: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0020 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|0x0017: INVOKE  (r3 I:java.lang.Throwable) = (r5 I:java.io.IOException) java.io.IOException.getCause():java.lang.Throwable type: VIRTUAL \l0x001b: INSTANCE_OF  (r3 I:boolean) = (r3 I:?[OBJECT, ARRAY]) java.security.cert.CertificateException \l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0020 \l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|0x001f: RETURN  (r2 I:boolean) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|0x0020: INSTANCE_OF  (r3 I:boolean) = (r5 I:?[OBJECT, ARRAY]) javax.net.ssl.SSLPeerUnverifiedException \l}"];
Node_15 [shape=record,label="{15\:\ 0x0022|0x0022: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0025 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0024|0x0024: RETURN  (r2 I:boolean) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0025|0x0025: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x002d \l}"];
Node_18 [shape=record,label="{18\:\ 0x0027|0x0027: INSTANCE_OF  (r5 I:boolean) = (r5 I:?[OBJECT, ARRAY]) javax.net.ssl.SSLProtocolException \l}"];
Node_19 [shape=record,label="{19\:\ 0x0029|0x0029: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x002c \l}"];
Node_21 [shape=record,label="{21\:\ 0x002c|0x002c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x002d|0x002d: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean okhttp3.internal.connection.ConnectionSpecSelector.connectionFailed((r4 'this' I:okhttp3.internal.connection.ConnectionSpecSelector A[IMMUTABLE_TYPE, THIS]), (r5 I:java.io.IOException A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_22[style=dashed];
Node_21 -> Node_22;
}

