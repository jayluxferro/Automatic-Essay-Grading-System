digraph "CFG forokhttp3.internal.connection.ConnectionSpecSelector.isFallbackPossible(Ljavax\/net\/ssl\/SSLSocket;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r2 I:okhttp3.internal.connection.ConnectionSpecSelector) okhttp3.internal.connection.ConnectionSpecSelector.nextModeIndex int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r1 I:java.util.List\<okhttp3.ConnectionSpec\>) = (r2 I:okhttp3.internal.connection.ConnectionSpecSelector) okhttp3.internal.connection.ConnectionSpecSelector.connectionSpecs java.util.List \l0x0004: INVOKE  (r1 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:8:0x001d \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IGET  (r1 I:java.util.List\<okhttp3.ConnectionSpec\>) = (r2 I:okhttp3.internal.connection.ConnectionSpecSelector) okhttp3.internal.connection.ConnectionSpecSelector.connectionSpecs java.util.List \l0x000c: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0010: CHECK_CAST  (r1 I:okhttp3.ConnectionSpec) = (okhttp3.ConnectionSpec) (r1 I:?[OBJECT, ARRAY]) \l0x0012: INVOKE  (r1 I:boolean) = \l  (r1 I:okhttp3.ConnectionSpec)\l  (r3 I:javax.net.ssl.SSLSocket)\l okhttp3.ConnectionSpec.isCompatible(javax.net.ssl.SSLSocket):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: RETURN  (r3 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: RETURN  (r3 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean okhttp3.internal.connection.ConnectionSpecSelector.isFallbackPossible((r2 'this' I:okhttp3.internal.connection.ConnectionSpecSelector A[IMMUTABLE_TYPE, THIS]), (r3 I:javax.net.ssl.SSLSocket A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_1;
Node_8 -> Node_9;
}

