digraph "CFG forokhttp3.internal.connection.ConnectionSpecSelector.isFallbackPossible(Ljavax\/net\/ssl\/SSLSocket;)Z" {
subgraph cluster_Region_1504122402 {
label = "R(3:0|(1:(2:(1:5)|(1:6)))|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r2.nextModeIndex\l}"];
subgraph cluster_LoopRegion_543426415 {
label = "LOOP:0: (1:(2:(1:5)|(1:6)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|if (r0 \< r2.connectionSpecs.size()) goto L_0x000a\l}"];
subgraph cluster_Region_1993856663 {
label = "R(1:(2:(1:5)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_600075610 {
label = "R(2:(1:5)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_947433506 {
label = "IF [B:4:0x0016] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0016|if (r2.connectionSpecs.get(r0).isCompatible(r3) == true) goto L_0x0018\l}"];
subgraph cluster_Region_1056942867 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0018|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_425768485 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001a|LOOP_END\lLOOP:0: B:1:0x0002\-\>B:6:0x001a\l|r0++\l}"];
}
}
}
}
Node_7 [shape=record,label="{7\:\ 0x001d|RETURN\l|return false\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:6:0x001a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0002\-\>B:6:0x001a\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000a}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0018|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private boolean okhttp3.internal.connection.ConnectionSpecSelector.isFallbackPossible((r2v0 'this' okhttp3.internal.connection.ConnectionSpecSelector A[IMMUTABLE_TYPE, THIS]), (r3v0 javax.net.ssl.SSLSocket A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_4 -> Node_6[style=dashed];
Node_4 -> Node_8;
Node_6 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_8 -> Node_5;
Node_9 -> Node_7;
}

