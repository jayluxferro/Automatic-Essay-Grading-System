digraph "CFG forokhttp3.internal.connection.ConnectInterceptor.intercept(Lokhttp3\/Interceptor$Chain;)Lokhttp3\/Response;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0001: CHECK_CAST  (r0 I:okhttp3.internal.http.RealInterceptorChain) = (okhttp3.internal.http.RealInterceptorChain) (r0 I:?[OBJECT, ARRAY]) \l0x0003: INVOKE  (r1 I:okhttp3.Request) = (r0 I:okhttp3.internal.http.RealInterceptorChain) okhttp3.internal.http.RealInterceptorChain.request():okhttp3.Request type: VIRTUAL \l0x0007: INVOKE  (r2 I:okhttp3.internal.connection.StreamAllocation) = (r0 I:okhttp3.internal.http.RealInterceptorChain) okhttp3.internal.http.RealInterceptorChain.streamAllocation():okhttp3.internal.connection.StreamAllocation type: VIRTUAL \l0x000b: INVOKE  (r3 I:java.lang.String) = (r1 I:okhttp3.Request) okhttp3.Request.method():java.lang.String type: VIRTUAL \l0x000f: CONST_STR  (r4 I:java.lang.String) =  \"GET\" \l0x0011: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l0x0015: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) ^ (1 ?[boolean, int, float, short, byte, char]) \l0x0017: IGET  (r4 I:okhttp3.OkHttpClient) = (r5 I:okhttp3.internal.connection.ConnectInterceptor) okhttp3.internal.connection.ConnectInterceptor.client okhttp3.OkHttpClient \l0x0019: INVOKE  (r6 I:okhttp3.internal.http.HttpCodec) = \l  (r2 I:okhttp3.internal.connection.StreamAllocation)\l  (r4 I:okhttp3.OkHttpClient)\l  (r6 I:okhttp3.Interceptor$Chain)\l  (r3 I:boolean)\l okhttp3.internal.connection.StreamAllocation.newStream(okhttp3.OkHttpClient, okhttp3.Interceptor$Chain, boolean):okhttp3.internal.http.HttpCodec type: VIRTUAL \l0x001d: INVOKE  (r3 I:okhttp3.internal.connection.RealConnection) = (r2 I:okhttp3.internal.connection.StreamAllocation) okhttp3.internal.connection.StreamAllocation.connection():okhttp3.internal.connection.RealConnection type: VIRTUAL \l0x0021: INVOKE  (r6 I:okhttp3.Response) = \l  (r0 I:okhttp3.internal.http.RealInterceptorChain)\l  (r1 I:okhttp3.Request)\l  (r2 I:okhttp3.internal.connection.StreamAllocation)\l  (r6 I:okhttp3.internal.http.HttpCodec)\l  (r3 I:okhttp3.internal.connection.RealConnection)\l okhttp3.internal.http.RealInterceptorChain.proceed(okhttp3.Request, okhttp3.internal.connection.StreamAllocation, okhttp3.internal.http.HttpCodec, okhttp3.internal.connection.RealConnection):okhttp3.Response type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0025|0x0025: RETURN  (r6 I:okhttp3.Response) \l}"];
MethodNode[shape=record,label="{public okhttp3.Response okhttp3.internal.connection.ConnectInterceptor.intercept((r5 'this' I:okhttp3.internal.connection.ConnectInterceptor A[IMMUTABLE_TYPE, THIS]), (r6 I:okhttp3.Interceptor$Chain A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

