digraph "CFG forokhttp3.internal.connection.RealConnection.connectSocket(IILokhttp3\/Call;Lokhttp3\/EventListener;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.Route) = (r4 I:okhttp3.internal.connection.RealConnection) okhttp3.internal.connection.RealConnection.route okhttp3.Route \l0x0002: INVOKE  (r0 I:java.net.Proxy) = (r0 I:okhttp3.Route) okhttp3.Route.proxy():java.net.Proxy type: VIRTUAL \l0x0006: IGET  (r1 I:okhttp3.Route) = (r4 I:okhttp3.internal.connection.RealConnection) okhttp3.internal.connection.RealConnection.route okhttp3.Route \l0x0008: INVOKE  (r1 I:okhttp3.Address) = (r1 I:okhttp3.Route) okhttp3.Route.address():okhttp3.Address type: VIRTUAL \l0x000c: INVOKE  (r2 I:java.net.Proxy$Type) = (r0 I:java.net.Proxy) java.net.Proxy.type():java.net.Proxy$Type type: VIRTUAL \l0x0010: SGET  (r3 I:java.net.Proxy$Type) =  java.net.Proxy.Type.DIRECT java.net.Proxy$Type \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0023 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: INVOKE  (r2 I:java.net.Proxy$Type) = (r0 I:java.net.Proxy) java.net.Proxy.type():java.net.Proxy$Type type: VIRTUAL \l0x0018: SGET  (r3 I:java.net.Proxy$Type) =  java.net.Proxy.Type.HTTP java.net.Proxy$Type \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001d \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: NEW_INSTANCE  (r1 I:java.net.Socket) =  java.net.Socket \l0x001f: INVOKE  (r1 I:java.net.Socket), (r0 I:java.net.Proxy) java.net.Socket.\<init\>(java.net.Proxy):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: INVOKE  (r1 I:javax.net.SocketFactory) = (r1 I:okhttp3.Address) okhttp3.Address.socketFactory():javax.net.SocketFactory type: VIRTUAL \l0x0027: INVOKE  (r1 I:java.net.Socket) = (r1 I:javax.net.SocketFactory) javax.net.SocketFactory.createSocket():java.net.Socket type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: IPUT  \l  (r1 I:java.net.Socket)\l  (r4 I:okhttp3.internal.connection.RealConnection)\l okhttp3.internal.connection.RealConnection.rawSocket java.net.Socket \l0x002d: IGET  (r1 I:okhttp3.Route) = (r4 I:okhttp3.internal.connection.RealConnection) okhttp3.internal.connection.RealConnection.route okhttp3.Route \l0x002f: INVOKE  (r1 I:java.net.InetSocketAddress) = (r1 I:okhttp3.Route) okhttp3.Route.socketAddress():java.net.InetSocketAddress type: VIRTUAL \l0x0033: INVOKE  \l  (r8 I:okhttp3.EventListener)\l  (r7 I:okhttp3.Call)\l  (r1 I:java.net.InetSocketAddress)\l  (r0 I:java.net.Proxy)\l okhttp3.EventListener.connectStart(okhttp3.Call, java.net.InetSocketAddress, java.net.Proxy):void type: VIRTUAL \l0x0036: IGET  (r7 I:java.net.Socket) = (r4 I:okhttp3.internal.connection.RealConnection) okhttp3.internal.connection.RealConnection.rawSocket java.net.Socket \l0x0038: INVOKE  (r7 I:java.net.Socket), (r6 I:int) java.net.Socket.setSoTimeout(int):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x003b|SYNTHETIC\lSplitter:B:8:0x003b\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x003b\l|0x003b: INVOKE  (r6 I:okhttp3.internal.platform.Platform) =  okhttp3.internal.platform.Platform.get():okhttp3.internal.platform.Platform type: STATIC A[Catch:\{ ConnectException \-\> 0x0077 \}, TRY_ENTER]\l0x003f: IGET  (r7 I:java.net.Socket) = (r4 I:okhttp3.internal.connection.RealConnection) okhttp3.internal.connection.RealConnection.rawSocket java.net.Socket A[Catch:\{ ConnectException \-\> 0x0077 \}]\l0x0041: IGET  (r8 I:okhttp3.Route) = (r4 I:okhttp3.internal.connection.RealConnection) okhttp3.internal.connection.RealConnection.route okhttp3.Route A[Catch:\{ ConnectException \-\> 0x0077 \}]\l0x0043: INVOKE  (r8 I:java.net.InetSocketAddress) = (r8 I:okhttp3.Route) okhttp3.Route.socketAddress():java.net.InetSocketAddress type: VIRTUAL A[Catch:\{ ConnectException \-\> 0x0077 \}]\l0x0047: INVOKE  \l  (r6 I:okhttp3.internal.platform.Platform)\l  (r7 I:java.net.Socket)\l  (r8 I:java.net.InetSocketAddress)\l  (r5 I:int)\l okhttp3.internal.platform.Platform.connectSocket(java.net.Socket, java.net.InetSocketAddress, int):void type: VIRTUAL A[Catch:\{ ConnectException \-\> 0x0077 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x004a|SYNTHETIC\lSplitter:B:10:0x004a\l}"];
Node_11 [shape=record,label="{11\:\ ?|Splitter:B:10:0x004a\l|0x004a: IGET  (r5 I:java.net.Socket) = (r4 I:okhttp3.internal.connection.RealConnection) okhttp3.internal.connection.RealConnection.rawSocket java.net.Socket A[Catch:\{ NullPointerException \-\> 0x0063 \}, TRY_ENTER]\l0x004c: INVOKE  (r5 I:okio.Source) = (r5 I:java.net.Socket) okio.Okio.source(java.net.Socket):okio.Source type: STATIC A[Catch:\{ NullPointerException \-\> 0x0063 \}]\l0x0050: INVOKE  (r5 I:okio.BufferedSource) = (r5 I:okio.Source) okio.Okio.buffer(okio.Source):okio.BufferedSource type: STATIC A[Catch:\{ NullPointerException \-\> 0x0063 \}]\l0x0054: IPUT  \l  (r5 I:okio.BufferedSource)\l  (r4 I:okhttp3.internal.connection.RealConnection)\l okhttp3.internal.connection.RealConnection.source okio.BufferedSource A[Catch:\{ NullPointerException \-\> 0x0063 \}]\l0x0056: IGET  (r5 I:java.net.Socket) = (r4 I:okhttp3.internal.connection.RealConnection) okhttp3.internal.connection.RealConnection.rawSocket java.net.Socket A[Catch:\{ NullPointerException \-\> 0x0063 \}]\l0x0058: INVOKE  (r5 I:okio.Sink) = (r5 I:java.net.Socket) okio.Okio.sink(java.net.Socket):okio.Sink type: STATIC A[Catch:\{ NullPointerException \-\> 0x0063 \}]\l0x005c: INVOKE  (r5 I:okio.BufferedSink) = (r5 I:okio.Sink) okio.Okio.buffer(okio.Sink):okio.BufferedSink type: STATIC A[Catch:\{ NullPointerException \-\> 0x0063 \}]\l0x0060: IPUT  \l  (r5 I:okio.BufferedSink)\l  (r4 I:okhttp3.internal.connection.RealConnection)\l okhttp3.internal.connection.RealConnection.sink okio.BufferedSink A[Catch:\{ NullPointerException \-\> 0x0063 \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0063|ExcHandler: NullPointerException null\lSplitter:B:10:0x004a\l|0x0063: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x0064|0x0064: CONST_STR  (r6 I:java.lang.String) =  \"throw with null exception\" \l0x0066: INVOKE  (r7 I:java.lang.String) = (r5 I:java.lang.NullPointerException) java.lang.NullPointerException.getMessage():java.lang.String type: VIRTUAL \l0x006a: INVOKE  (r6 I:boolean) = (r6 I:java.lang.String), (r7 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x006e|0x006e: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0071 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0070|0x0070: RETURN   \l}"];
Node_17 [shape=record,label="{17\:\ 0x0071|0x0071: NEW_INSTANCE  (r6 I:java.io.IOException) =  java.io.IOException \l0x0073: INVOKE  (r6 I:java.io.IOException), (r5 I:java.lang.Throwable) java.io.IOException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x0076|0x0076: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0077|ExcHandler: ConnectException null\lSplitter:B:8:0x003b\l|0x0077: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_20 [shape=record,label="{20\:\ 0x0078|0x0078: NEW_INSTANCE  (r6 I:java.net.ConnectException) =  java.net.ConnectException \l0x007a: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x007c: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x007f: CONST_STR  (r8 I:java.lang.String) =  \"Failed to connect to \" \l0x0081: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0084: IGET  (r8 I:okhttp3.Route) = (r4 I:okhttp3.internal.connection.RealConnection) okhttp3.internal.connection.RealConnection.route okhttp3.Route \l0x0086: INVOKE  (r8 I:java.net.InetSocketAddress) = (r8 I:okhttp3.Route) okhttp3.Route.socketAddress():java.net.InetSocketAddress type: VIRTUAL \l0x008a: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x008d: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0091: INVOKE  (r6 I:java.net.ConnectException), (r7 I:java.lang.String) java.net.ConnectException.\<init\>(java.lang.String):void type: DIRECT \l0x0094: INVOKE  \l  (r6 I:java.net.ConnectException)\l  (r5 I:java.lang.Throwable)\l java.net.ConnectException.initCause(java.lang.Throwable):java.lang.Throwable type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0097|0x0097: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.connection.RealConnection.connectSocket((r4 'this' I:okhttp3.internal.connection.RealConnection A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:okhttp3.Call A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:okhttp3.EventListener A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_19;
Node_9 -> Node_10;
Node_9 -> Node_19;
Node_10 -> Node_11;
Node_10 -> Node_13;
Node_11 -> Node_13;
Node_11 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_20 -> Node_21;
}

