digraph "CFG forokhttp3.internal.connection.RealConnection.connect(IIIIZLokhttp3\/Call;Lokhttp3\/EventListener;)V" {
subgraph cluster_Region_1823069218 {
label = "R(2:0|(2:(5:2|(1:(2:6|(2:8|9))(1:11))(1:(1:58))|14|(1:(2:(2:18|(1:20)(1:(1:32)(1:(3:35|e6|66)(1:65))))(1:(1:23))|(2:26|(0)(0))))|56)|(1:60)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r7 = r16\lokhttp3.Call r8 = r22\lokhttp3.EventListener r9 = r23\l}"];
subgraph cluster_Region_1781759965 {
label = "R(2:(5:2|(1:(2:6|(2:8|9))(1:11))(1:(1:58))|14|(1:(2:(2:18|(1:20)(1:(1:32)(1:(3:35|e6|66)(1:65))))(1:(1:23))|(2:26|(0)(0))))|56)|(1:60))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2146221171 {
label = "IF [B:1:0x0008] THEN: R(5:2|(1:(2:6|(2:8|9))(1:11))(1:(1:58))|14|(1:(2:(2:18|(1:20)(1:(1:32)(1:(3:35|e6|66)(1:65))))(1:(1:23))|(2:26|(0)(0))))|56) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r7.protocol == null) goto L_0x000a\l}"];
subgraph cluster_Region_632742319 {
label = "R(5:2|(1:(2:6|(2:8|9))(1:11))(1:(1:58))|14|(1:(2:(2:18|(1:20)(1:(1:32)(1:(3:35|e6|66)(1:65))))(1:(1:23))|(2:26|(0)(0))))|56)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|java.util.List java.util.List\<okhttp3.ConnectionSpec\> r0 = r7.route.address().connectionSpecs()\lokhttp3.internal.connection.ConnectionSpecSelector okhttp3.internal.connection.ConnectionSpecSelector r10 = new okhttp3.internal.connection.ConnectionSpecSelector(r0)\l}"];
subgraph cluster_IfRegion_27000258 {
label = "IF [B:3:0x0023] THEN: R(1:(2:6|(2:8|9))(1:11)) ELSE: R(1:(1:58))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0023|if (r7.route.address().sslSocketFactory() == null) goto L_0x0025\l}"];
subgraph cluster_Region_1507825186 {
label = "R(1:(2:6|(2:8|9))(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_582460344 {
label = "IF [B:5:0x002b] THEN: R(2:6|(2:8|9)) ELSE: R(1:11)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002b|if (r0.contains(okhttp3.ConnectionSpec.CLEARTEXT) == true) goto L_0x002d\l}"];
subgraph cluster_Region_320911226 {
label = "R(2:6|(2:8|9))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x002d|java.lang.String java.lang.String r0 = r7.route.address().url().host()\l}"];
subgraph cluster_IfRegion_1057223123 {
label = "IF [B:7:0x0043] THEN: R(2:8|9) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0043|if (okhttp3.internal.platform.Platform.get().isCleartextTrafficPermitted(r0) == false) goto L_0x0046\l}"];
subgraph cluster_Region_389868230 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0046}"];
Node_9 [shape=record,label="{9\:\ 0x0066|throw new okhttp3.internal.connection.RouteException(new java.net.UnknownServiceException(\"CLEARTEXT communication to \" + r0 + \" not permitted by network security policy\"))\l}"];
}
}
}
subgraph cluster_Region_677631827 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0073|throw new okhttp3.internal.connection.RouteException(new java.net.UnknownServiceException(\"CLEARTEXT communication not enabled for client\"))\l}"];
}
}
}
subgraph cluster_Region_846653704 {
label = "R(1:(1:58)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1826449257 {
label = "IF [B:13:0x0084] THEN: R(1:58) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0084|if (r7.route.address().protocols().contains(okhttp3.Protocol.H2_PRIOR_KNOWLEDGE) == true) goto L_0x0144\l}"];
subgraph cluster_Region_1234600534 {
label = "R(1:58)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0150|throw new okhttp3.internal.connection.RouteException(new java.net.UnknownServiceException(\"H2_PRIOR_KNOWLEDGE cannot be used with HTTPS\"))\l}"];
}
}
}
}
Node_14 [shape=record,label="{14\:\ 0x0086|okhttp3.internal.connection.RouteException r12 = null\l}"];
subgraph cluster_LoopRegion_649026805 {
label = "LOOP:0: (1:(2:(2:18|(1:20)(1:(1:32)(1:(3:35|e6|66)(1:65))))(1:(1:23))|(2:26|(0)(0))))";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x013f|LOOP_END\lLOOP:0: B:15:0x0088\-\>B:55:0x013f\l|if (r10.connectionFailed(r0) == true) goto L_0x0088\l}"];
subgraph cluster_Region_2147032440 {
label = "R(1:(2:(2:18|(1:20)(1:(1:32)(1:(3:35|e6|66)(1:65))))(1:(1:23))|(2:26|(0)(0))))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_2059572518 {
label = "Try: R(2:(2:18|(1:20)(1:(1:32)(1:(3:35|e6|66)(1:65))))(1:(1:23))|(2:26|(0)(0))) catches: R(8:46|47|48|49|(1:51)(1:52)|(1:56)|(3:(0)(0)|26|(0)(0))|56)";
node [shape=record,color=blue];
subgraph cluster_Region_2107851576 {
label = "R(2:(2:18|(1:20)(1:(1:32)(1:(3:35|e6|66)(1:65))))(1:(1:23))|(2:26|(0)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_14351080 {
label = "IF [B:17:0x008e] THEN: R(2:18|(1:20)(1:(1:32)(1:(3:35|e6|66)(1:65)))) ELSE: R(1:(1:23))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x008e|Catch:\{ IOException \-\> 0x00f9 \}\l|if (r7.route.requiresTunnel() == false) goto L_0x00a9     \/\/ Catch:\{ IOException \-\> 0x00f9 \}\l}"];
subgraph cluster_Region_939468118 {
label = "R(2:18|(1:20)(1:(1:32)(1:(3:35|e6|66)(1:65))))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0090|Catch:\{ IOException \-\> 0x00f9 \}\l|connectTunnel(r17, r18, r19, r22, r23)     \/\/ Catch:\{ IOException \-\> 0x00f9 \}\l}"];
subgraph cluster_IfRegion_1501232426 {
label = "IF [B:19:0x00a1] THEN: R(1:20) ELSE: R(1:(1:32)(1:(3:35|e6|66)(1:65)))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x00a1|if (r7.rawSocket != null) goto L_0x00a4\l}"];
subgraph cluster_Region_1058960959 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x00a4|int r13 = r17\lint r14 = r18\l}"];
}
subgraph cluster_Region_1051185086 {
label = "R(1:(1:32)(1:(3:35|e6|66)(1:65))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1778220856 {
label = "IF [B:28:0x00cc, B:30:0x00d0] THEN: R(1:32) ELSE: R(1:(3:35|e6|66)(1:65)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x00cc|if (r7.route.requiresTunnel() == true) goto L_0x00ce\l}"];
Node_30 [shape=record,label="{30\:\ 0x00d0|ADDED_TO_REGION\l|if (r7.rawSocket == null) goto L_0x00d3\l}"];
subgraph cluster_Region_661009092 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x00df|throw new okhttp3.internal.connection.RouteException(new java.net.ProtocolException(\"Too many tunnel connections attempted: 21\"))\l}"];
}
subgraph cluster_Region_695929007 {
label = "R(1:(3:35|e6|66)(1:65)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_698480641 {
label = "IF [B:34:0x00e2] THEN: R(3:35|e6|66) ELSE: R(1:65) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x00e2|if (r7.http2Connection != null) goto L_0x00e4\l}"];
subgraph cluster_Region_723998386 {
label = "R(3:35|e6|66)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x00e4}"];
subgraph cluster_SynchronizedRegion_1036103936 {
label = "Synchronized:R(2:36|(1:38))";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x00e6}"];
subgraph cluster_Region_1284438119 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ ?|r7.allocationLimit = r7.http2Connection.maxConcurrentStreams()\l}"];
}
}
Node_66 [shape=record,label="{66\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
subgraph cluster_Region_1783193607 {
label = "R(1:65)";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
}
}
}
}
}
}
}
subgraph cluster_Region_2076846394 {
label = "R(1:(1:23))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1270075122 {
label = "Try: R(1:23) catches: R(5:45|48|49|(0)(0)|56)";
node [shape=record,color=blue];
subgraph cluster_Region_222382305 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ ?|Catch:\{ IOException \-\> 0x00f7 \}\lSplitter:B:22:0x00ad\l|connectSocket(r17, r18, r8, r9)     \/\/ Catch:\{ IOException \-\> 0x00f7 \}\l}"];
}
subgraph cluster_Region_582079586 {
label = "R(5:45|48|49|(0)(0)|56) | ExcHandler: IOException (e java.io.IOException)\l";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x00f7|ExcHandler: IOException (e java.io.IOException)\lSplitter:B:22:0x00ad\l|java.io.IOException r0 = e\l}"];
Node_48 [shape=record,label="{48\:\ 0x00fe|PHI: r0 \l  PHI: (r0v7 'e' java.io.IOException) = (r0v8 'e' java.io.IOException), (r0v22 'e' java.io.IOException) binds: [B:47:0x00fa, B:45:0x00f7] A[DONT_GENERATE, DONT_INLINE]\l|int r15 = r20\l}"];
Node_49 [shape=record,label="{49\:\ 0x0100|PHI: r0 \l  PHI: (r0v5 'e' java.io.IOException) = (r0v7 'e' java.io.IOException), (r0v19 'e' java.io.IOException) binds: [B:48:0x00fe, B:44:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l|okhttp3.internal.Util.closeQuietly(r7.socket)\lokhttp3.internal.Util.closeQuietly(r7.rawSocket)\lr7.socket = null\lr7.rawSocket = null\lr7.source = null\lr7.sink = null\lr7.handshake = null\lr7.protocol = null\lr7.http2Connection = null\lr23.connectFailed(r22, r7.route.socketAddress(), r7.route.proxy(), (okhttp3.Protocol) null, r0)\l}"];
subgraph cluster_IfRegion_296749178 {
label = "IF [B:50:0x012d] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x012d|if (r12 != null) goto L_0x0136\l}"];
subgraph cluster_Region_1891981859 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_1361925476 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_56 [shape=record,label="{56\:\ 0x0143|EDGE_INSN: B:63:0x0143\-\>B:56:0x0143 ?: BREAK  \l|throw r12\l}"];
}
}
}
}
subgraph cluster_TryCatchRegion_2063869314 {
label = "Try: R(2:26|(0)(0)) catches: R(1:44)";
node [shape=record,color=blue];
subgraph cluster_Region_472057852 {
label = "R(2:26|(0)(0))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ ?|Catch:\{ IOException \-\> 0x00f5 \}\lSplitter:B:25:0x00b2\l|establishProtocol(r10, r20, r8, r9)     \/\/ Catch:\{ IOException \-\> 0x00f5 \}\lr9.connectEnd(r8, r7.route.socketAddress(), r7.route.proxy(), r7.protocol)     \/\/ Catch:\{ IOException \-\> 0x00f5 \}\l}"];
subgraph cluster_IfRegion_781557838 {
label = "IF [B:28:0x00cc, B:30:0x00d0] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x00cc|if (r7.route.requiresTunnel() == true) goto L_0x00ce\l}"];
Node_30 [shape=record,label="{30\:\ 0x00d0|ADDED_TO_REGION\l|if (r7.rawSocket == null) goto L_0x00d3\l}"];
subgraph cluster_Region_1952179197 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_1340481127 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_353634860 {
label = "R(1:44) | ExcHandler: IOException (e java.io.IOException)\l";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x00f5|ExcHandler: IOException (e java.io.IOException)\lSplitter:B:25:0x00b2\l|java.io.IOException r0 = e\l}"];
}
}
}
subgraph cluster_Region_1799908334 {
label = "R(8:46|47|48|49|(1:51)(1:52)|(1:56)|(3:(0)(0)|26|(0)(0))|56) | ExcHandler: IOException (e java.io.IOException)\l";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x00f9|ExcHandler: IOException (e java.io.IOException)\lSplitter:B:15:0x0088\l|java.io.IOException r0 = e\l}"];
Node_47 [shape=record,label="{47\:\ 0x00fa|int r13 = r17\lint r14 = r18\l}"];
Node_48 [shape=record,label="{48\:\ 0x00fe|PHI: r0 \l  PHI: (r0v7 'e' java.io.IOException) = (r0v8 'e' java.io.IOException), (r0v22 'e' java.io.IOException) binds: [B:47:0x00fa, B:45:0x00f7] A[DONT_GENERATE, DONT_INLINE]\l|int r15 = r20\l}"];
Node_49 [shape=record,label="{49\:\ 0x0100|PHI: r0 \l  PHI: (r0v5 'e' java.io.IOException) = (r0v7 'e' java.io.IOException), (r0v19 'e' java.io.IOException) binds: [B:48:0x00fe, B:44:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l|okhttp3.internal.Util.closeQuietly(r7.socket)\lokhttp3.internal.Util.closeQuietly(r7.rawSocket)\lr7.socket = null\lr7.rawSocket = null\lr7.source = null\lr7.sink = null\lr7.handshake = null\lr7.protocol = null\lr7.http2Connection = null\lr23.connectFailed(r22, r7.route.socketAddress(), r7.route.proxy(), (okhttp3.Protocol) null, r0)\l}"];
subgraph cluster_IfRegion_329870663 {
label = "IF [B:50:0x012d] THEN: R(1:51) ELSE: R(1:52)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x012d|if (r12 != null) goto L_0x0136\l}"];
subgraph cluster_Region_1302638031 {
label = "R(1:51)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x012f|r12 = new okhttp3.internal.connection.RouteException(r0)\l}"];
}
subgraph cluster_Region_1251197482 {
label = "R(1:52)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x0136|r12.addConnectException(r0)\l}"];
}
}
subgraph cluster_IfRegion_1085822055 {
label = "IF [B:53:0x0139, B:55:0x013f] THEN: R(1:56) ELSE: null";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0139|ADDED_TO_REGION\lPHI: r12 \l  PHI: (r12v2 okhttp3.internal.connection.RouteException) = (r12v1 okhttp3.internal.connection.RouteException), (r12v3 okhttp3.internal.connection.RouteException) binds: [B:52:0x0136, B:51:0x012f] A[DONT_GENERATE, DONT_INLINE]\l|if (r21 == false) goto L_0x0143\l}"];
Node_55 [shape=record,label="{55\:\ 0x013f|LOOP_END\lLOOP:0: B:15:0x0088\-\>B:55:0x013f\l|if (r10.connectionFailed(r0) == true) goto L_0x0088\l}"];
subgraph cluster_Region_861137814 {
label = "R(1:56)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x0143|EDGE_INSN: B:63:0x0143\-\>B:56:0x0143 ?: BREAK  \l|throw r12\l}"];
}
}
subgraph cluster_LoopRegion_1385262662 {
label = "LOOP:0: (3:(0)(0)|26|(0)(0))";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x013f|LOOP_END\lLOOP:0: B:15:0x0088\-\>B:55:0x013f\l|if (r10.connectionFailed(r0) == true) goto L_0x0088\l}"];
subgraph cluster_Region_127675834 {
label = "R(3:(0)(0)|26|(0)(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_377511696 {
label = "IF [B:17:0x008e] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x008e|Catch:\{ IOException \-\> 0x00f9 \}\l|if (r7.route.requiresTunnel() == false) goto L_0x00a9     \/\/ Catch:\{ IOException \-\> 0x00f9 \}\l}"];
subgraph cluster_Region_1030685238 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_1107637978 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_26 [shape=record,label="{26\:\ ?|Catch:\{ IOException \-\> 0x00f5 \}\lSplitter:B:25:0x00b2\l|establishProtocol(r10, r20, r8, r9)     \/\/ Catch:\{ IOException \-\> 0x00f5 \}\lr9.connectEnd(r8, r7.route.socketAddress(), r7.route.proxy(), r7.protocol)     \/\/ Catch:\{ IOException \-\> 0x00f5 \}\l}"];
subgraph cluster_IfRegion_2004160988 {
label = "IF [B:28:0x00cc, B:30:0x00d0] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x00cc|if (r7.route.requiresTunnel() == true) goto L_0x00ce\l}"];
Node_30 [shape=record,label="{30\:\ 0x00d0|ADDED_TO_REGION\l|if (r7.rawSocket == null) goto L_0x00d3\l}"];
subgraph cluster_Region_1671018749 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_648177674 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_56 [shape=record,label="{56\:\ 0x0143|EDGE_INSN: B:63:0x0143\-\>B:56:0x0143 ?: BREAK  \l|throw r12\l}"];
}
}
}
}
Node_56 [shape=record,label="{56\:\ 0x0143|EDGE_INSN: B:63:0x0143\-\>B:56:0x0143 ?: BREAK  \l|throw r12\l}"];
}
}
subgraph cluster_Region_1299851746 {
label = "R(1:60)";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x0158|throw new java.lang.IllegalStateException(\"already connected\")\l}"];
}
}
}
subgraph cluster_Region_1799908334 {
label = "R(8:46|47|48|49|(1:51)(1:52)|(1:56)|(3:(0)(0)|26|(0)(0))|56) | ExcHandler: IOException (e java.io.IOException)\l";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x00f9|ExcHandler: IOException (e java.io.IOException)\lSplitter:B:15:0x0088\l|java.io.IOException r0 = e\l}"];
Node_47 [shape=record,label="{47\:\ 0x00fa|int r13 = r17\lint r14 = r18\l}"];
Node_48 [shape=record,label="{48\:\ 0x00fe|PHI: r0 \l  PHI: (r0v7 'e' java.io.IOException) = (r0v8 'e' java.io.IOException), (r0v22 'e' java.io.IOException) binds: [B:47:0x00fa, B:45:0x00f7] A[DONT_GENERATE, DONT_INLINE]\l|int r15 = r20\l}"];
Node_49 [shape=record,label="{49\:\ 0x0100|PHI: r0 \l  PHI: (r0v5 'e' java.io.IOException) = (r0v7 'e' java.io.IOException), (r0v19 'e' java.io.IOException) binds: [B:48:0x00fe, B:44:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l|okhttp3.internal.Util.closeQuietly(r7.socket)\lokhttp3.internal.Util.closeQuietly(r7.rawSocket)\lr7.socket = null\lr7.rawSocket = null\lr7.source = null\lr7.sink = null\lr7.handshake = null\lr7.protocol = null\lr7.http2Connection = null\lr23.connectFailed(r22, r7.route.socketAddress(), r7.route.proxy(), (okhttp3.Protocol) null, r0)\l}"];
subgraph cluster_IfRegion_329870663 {
label = "IF [B:50:0x012d] THEN: R(1:51) ELSE: R(1:52)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x012d|if (r12 != null) goto L_0x0136\l}"];
subgraph cluster_Region_1302638031 {
label = "R(1:51)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x012f|r12 = new okhttp3.internal.connection.RouteException(r0)\l}"];
}
subgraph cluster_Region_1251197482 {
label = "R(1:52)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x0136|r12.addConnectException(r0)\l}"];
}
}
subgraph cluster_IfRegion_1085822055 {
label = "IF [B:53:0x0139, B:55:0x013f] THEN: R(1:56) ELSE: null";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0139|ADDED_TO_REGION\lPHI: r12 \l  PHI: (r12v2 okhttp3.internal.connection.RouteException) = (r12v1 okhttp3.internal.connection.RouteException), (r12v3 okhttp3.internal.connection.RouteException) binds: [B:52:0x0136, B:51:0x012f] A[DONT_GENERATE, DONT_INLINE]\l|if (r21 == false) goto L_0x0143\l}"];
Node_55 [shape=record,label="{55\:\ 0x013f|LOOP_END\lLOOP:0: B:15:0x0088\-\>B:55:0x013f\l|if (r10.connectionFailed(r0) == true) goto L_0x0088\l}"];
subgraph cluster_Region_861137814 {
label = "R(1:56)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x0143|EDGE_INSN: B:63:0x0143\-\>B:56:0x0143 ?: BREAK  \l|throw r12\l}"];
}
}
subgraph cluster_LoopRegion_1385262662 {
label = "LOOP:0: (3:(0)(0)|26|(0)(0))";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x013f|LOOP_END\lLOOP:0: B:15:0x0088\-\>B:55:0x013f\l|if (r10.connectionFailed(r0) == true) goto L_0x0088\l}"];
subgraph cluster_Region_127675834 {
label = "R(3:(0)(0)|26|(0)(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_377511696 {
label = "IF [B:17:0x008e] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x008e|Catch:\{ IOException \-\> 0x00f9 \}\l|if (r7.route.requiresTunnel() == false) goto L_0x00a9     \/\/ Catch:\{ IOException \-\> 0x00f9 \}\l}"];
subgraph cluster_Region_1030685238 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_1107637978 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_26 [shape=record,label="{26\:\ ?|Catch:\{ IOException \-\> 0x00f5 \}\lSplitter:B:25:0x00b2\l|establishProtocol(r10, r20, r8, r9)     \/\/ Catch:\{ IOException \-\> 0x00f5 \}\lr9.connectEnd(r8, r7.route.socketAddress(), r7.route.proxy(), r7.protocol)     \/\/ Catch:\{ IOException \-\> 0x00f5 \}\l}"];
subgraph cluster_IfRegion_2004160988 {
label = "IF [B:28:0x00cc, B:30:0x00d0] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x00cc|if (r7.route.requiresTunnel() == true) goto L_0x00ce\l}"];
Node_30 [shape=record,label="{30\:\ 0x00d0|ADDED_TO_REGION\l|if (r7.rawSocket == null) goto L_0x00d3\l}"];
subgraph cluster_Region_1671018749 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_648177674 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_56 [shape=record,label="{56\:\ 0x0143|EDGE_INSN: B:63:0x0143\-\>B:56:0x0143 ?: BREAK  \l|throw r12\l}"];
}
subgraph cluster_Region_582079586 {
label = "R(5:45|48|49|(0)(0)|56) | ExcHandler: IOException (e java.io.IOException)\l";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x00f7|ExcHandler: IOException (e java.io.IOException)\lSplitter:B:22:0x00ad\l|java.io.IOException r0 = e\l}"];
Node_48 [shape=record,label="{48\:\ 0x00fe|PHI: r0 \l  PHI: (r0v7 'e' java.io.IOException) = (r0v8 'e' java.io.IOException), (r0v22 'e' java.io.IOException) binds: [B:47:0x00fa, B:45:0x00f7] A[DONT_GENERATE, DONT_INLINE]\l|int r15 = r20\l}"];
Node_49 [shape=record,label="{49\:\ 0x0100|PHI: r0 \l  PHI: (r0v5 'e' java.io.IOException) = (r0v7 'e' java.io.IOException), (r0v19 'e' java.io.IOException) binds: [B:48:0x00fe, B:44:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l|okhttp3.internal.Util.closeQuietly(r7.socket)\lokhttp3.internal.Util.closeQuietly(r7.rawSocket)\lr7.socket = null\lr7.rawSocket = null\lr7.source = null\lr7.sink = null\lr7.handshake = null\lr7.protocol = null\lr7.http2Connection = null\lr23.connectFailed(r22, r7.route.socketAddress(), r7.route.proxy(), (okhttp3.Protocol) null, r0)\l}"];
subgraph cluster_IfRegion_296749178 {
label = "IF [B:50:0x012d] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x012d|if (r12 != null) goto L_0x0136\l}"];
subgraph cluster_Region_1891981859 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_1361925476 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_56 [shape=record,label="{56\:\ 0x0143|EDGE_INSN: B:63:0x0143\-\>B:56:0x0143 ?: BREAK  \l|throw r12\l}"];
}
subgraph cluster_Region_353634860 {
label = "R(1:44) | ExcHandler: IOException (e java.io.IOException)\l";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x00f5|ExcHandler: IOException (e java.io.IOException)\lSplitter:B:25:0x00b2\l|java.io.IOException r0 = e\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0025}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0067}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0074}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0088|LOOP_START\lSYNTHETIC\lPHI: r12 \l  PHI: (r12v1 okhttp3.internal.connection.RouteException) = (r12v0 okhttp3.internal.connection.RouteException), (r12v2 okhttp3.internal.connection.RouteException) binds: [B:14:0x0086, B:55:0x013f] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:15:0x0088\lLOOP:0: B:15:0x0088\-\>B:55:0x013f\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|Catch:\{ IOException \-\> 0x00f9 \}\lSplitter:B:15:0x0088\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x00a9}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x00ad|SYNTHETIC\lSplitter:B:22:0x00ad\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x00b0}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x00b2|SYNTHETIC\lSplitter:B:25:0x00b2\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x00c6}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x00ce}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x00d3}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x00e0}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x00e7|SYNTHETIC\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x00ef|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x00ef: MONITOR_EXIT  \l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x00f0}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x00f1|REMOVE\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x00f2|REMOVE\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x00f3|REMOVE\l|throw r0\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x013b}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x0144}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x0151}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x00c6|SYNTHETIC\l}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x00c6|SYNTHETIC\l}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x0143|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:63:0x0143\-\>B:56:0x0143 ?: BREAK  \l}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x0143|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.connection.RealConnection.connect((r16v0 'this' okhttp3.internal.connection.RealConnection A[IMMUTABLE_TYPE, THIS]), (r17v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 okhttp3.Call A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 okhttp3.EventListener A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lRemoved duplicated region for block: B:33:0x00e0 \lRemoved duplicated region for block: B:31:0x00d3 \lRemoved duplicated region for block: B:21:0x00a9 \lRemoved duplicated region for block: B:18:0x0090 A[Catch:\{ IOException \-\> 0x00f9 \}]\lRemoved duplicated region for block: B:33:0x00e0 \lRemoved duplicated region for block: B:31:0x00d3 \lRemoved duplicated region for block: B:52:0x0136 \lRemoved duplicated region for block: B:51:0x012f \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_59[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_12[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_10[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_14[style=dashed];
Node_8 -> Node_9;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_57;
Node_14 -> Node_15;
Node_55 -> Node_15;
Node_55 -> Node_64[style=dashed];
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_62[style=dashed];
Node_20 -> Node_24;
Node_28 -> Node_29;
Node_28 -> Node_33[style=dashed];
Node_30 -> Node_31;
Node_30 -> Node_33[style=dashed];
Node_34 -> Node_35;
Node_34 -> Node_65[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_38 -> Node_39;
Node_23 -> Node_24;
Node_23 -> Node_45;
Node_45 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_26 -> Node_44;
Node_26 -> Node_61;
Node_28 -> Node_29;
Node_28 -> Node_33[style=dashed];
Node_30 -> Node_31;
Node_30 -> Node_33[style=dashed];
Node_44 -> Node_49;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_53;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_63;
Node_55 -> Node_15;
Node_55 -> Node_64[style=dashed];
Node_55 -> Node_15;
Node_55 -> Node_64[style=dashed];
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_26 -> Node_44;
Node_26 -> Node_61;
Node_28 -> Node_29;
Node_28 -> Node_33[style=dashed];
Node_30 -> Node_31;
Node_30 -> Node_33[style=dashed];
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_53;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_63;
Node_55 -> Node_15;
Node_55 -> Node_64[style=dashed];
Node_55 -> Node_15;
Node_55 -> Node_64[style=dashed];
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_26 -> Node_44;
Node_26 -> Node_61;
Node_28 -> Node_29;
Node_28 -> Node_33[style=dashed];
Node_30 -> Node_31;
Node_30 -> Node_33[style=dashed];
Node_45 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_44 -> Node_49;
Node_4 -> Node_5;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_15 -> Node_46;
Node_16 -> Node_17;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_45;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_44;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_37 -> Node_38;
Node_37 -> Node_41;
Node_39 -> Node_40;
Node_40 -> Node_66;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_54 -> Node_55;
Node_57 -> Node_58;
Node_59 -> Node_60;
Node_61 -> Node_27;
Node_62 -> Node_27;
Node_63 -> Node_56;
Node_64 -> Node_56;
}

