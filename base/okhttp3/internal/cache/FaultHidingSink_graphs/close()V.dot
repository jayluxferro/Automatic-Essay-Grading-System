digraph "CFG forokhttp3.internal.cache.FaultHidingSink.close()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.hasErrors == false) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|SYNTHETIC\lSplitter:B:3:0x0005\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ IOException \-\> 0x0009 \}\lSplitter:B:3:0x0005\l|super.close()     \/\/ Catch:\{ IOException \-\> 0x0009 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|ExcHandler: IOException (r0v1 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:3:0x0005\l|java.io.IOException r0 = move\-exception\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|r2.hasErrors = true\lonException(r0)\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.cache.FaultHidingSink.close((r2v0 'this' okhttp3.internal.cache.FaultHidingSink A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

