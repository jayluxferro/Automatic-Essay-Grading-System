digraph "CFG forokhttp3.internal.cache.FaultHidingSink.close()V" {
subgraph cluster_Region_63886846 {
label = "R(1:(1:(1:4))(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1263226465 {
label = "IF [B:1:0x0002] THEN: R(1:(1:4)) ELSE: R(0)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.hasErrors != true) goto L_0x0005\l}"];
subgraph cluster_Region_1599232623 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1264941806 {
label = "Try: R(1:4) catches: R(2:5|6)";
node [shape=record,color=blue];
subgraph cluster_Region_1047603033 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ IOException \-\> 0x0009 \}\lSplitter:B:3:0x0005\l|super.close()     \/\/ Catch:\{ IOException \-\> 0x0009 \}\l}"];
}
subgraph cluster_Region_802705072 {
label = "R(2:5|6) | ExcHandler: IOException (r0v1 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0009|ExcHandler: IOException (r0v1 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:3:0x0005\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|r2.hasErrors = true\lonException(r0)\l}"];
}
}
}
subgraph cluster_Region_1653925894 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_802705072 {
label = "R(2:5|6) | ExcHandler: IOException (r0v1 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0009|ExcHandler: IOException (r0v1 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:3:0x0005\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|r2.hasErrors = true\lonException(r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0005|SYNTHETIC\lSplitter:B:3:0x0005\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.cache.FaultHidingSink.close((r2v0 'this' okhttp3.internal.cache.FaultHidingSink A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_3 -> Node_5;
}

