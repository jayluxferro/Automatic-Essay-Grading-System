digraph "CFG forokhttp3.internal.cache.CacheStrategy.Factory.getCandidate()Lokhttp3\/internal\/cache\/CacheStrategy;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r13.cacheResponse != null) goto L_0x000d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x000c|RETURN\l|return new okhttp3.internal.cache.CacheStrategy(r13.request, (okhttp3.Response) null)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d}"];
Node_5 [shape=record,label="{5\:\ 0x0013|if (r13.request.isHttps() == false) goto L_0x0025\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015}"];
Node_7 [shape=record,label="{7\:\ 0x001b|if (r13.cacheResponse.handshake() != null) goto L_0x0025\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d}"];
Node_9 [shape=record,label="{9\:\ 0x0024|RETURN\l|return new okhttp3.internal.cache.CacheStrategy(r13.request, (okhttp3.Response) null)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025}"];
Node_11 [shape=record,label="{11\:\ 0x002d|if (okhttp3.internal.cache.CacheStrategy.isCacheable(r13.cacheResponse, r13.request) != false) goto L_0x0037\l}"];
Node_12 [shape=record,label="{12\:\ 0x002f}"];
Node_13 [shape=record,label="{13\:\ 0x0036|RETURN\l|return new okhttp3.internal.cache.CacheStrategy(r13.request, (okhttp3.Response) null)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|okhttp3.CacheControl r0 = r13.request.cacheControl()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0041|if (r0.noCache() != false) goto L_0x0131\l}"];
Node_16 [shape=record,label="{16\:\ 0x0043}"];
Node_17 [shape=record,label="{17\:\ 0x0049|if (hasConditions(r13.request) == false) goto L_0x004d\l}"];
Node_18 [shape=record,label="{18\:\ 0x004d|okhttp3.CacheControl r2 = r13.cacheResponse.cacheControl()\l}"];
Node_19 [shape=record,label="{19\:\ 0x0057|if (r2.immutable() == false) goto L_0x0061\l}"];
Node_20 [shape=record,label="{20\:\ 0x0059}"];
Node_21 [shape=record,label="{21\:\ 0x0060|RETURN\l|return new okhttp3.internal.cache.CacheStrategy((okhttp3.Request) null, r13.cacheResponse)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0061|long r3 = cacheResponseAge()\llong r5 = computeFreshnessLifetime()\l}"];
Node_23 [shape=record,label="{23\:\ 0x006e|if (r0.maxAgeSeconds() == \-1) goto L_0x007f\l}"];
Node_24 [shape=record,label="{24\:\ 0x0070|long r5 = java.lang.Math.min(r5, java.util.concurrent.TimeUnit.SECONDS.toMillis((long) r0.maxAgeSeconds()))\l}"];
Node_25 [shape=record,label="{25\:\ 0x007f|PHI: r5 \l  PHI: (r5v1 long) = (r5v0 long), (r5v4 long) binds: [B:23:0x006e, B:24:0x0070] A[DONT_GENERATE, DONT_INLINE]\l|r9 = 0\l}"];
Node_26 [shape=record,label="{26\:\ 0x0085|if (r0.minFreshSeconds() == \-1) goto L_0x0093\l}"];
Node_27 [shape=record,label="{27\:\ 0x0087|long r11 = java.util.concurrent.TimeUnit.SECONDS.toMillis((long) r0.minFreshSeconds())\l}"];
Node_28 [shape=record,label="{28\:\ 0x0093|r11 = 0\l}"];
Node_29 [shape=record,label="{29\:\ 0x0094|PHI: r11 \l  PHI: (r11v0 long) = (r11v2 long), (r11v5 long) binds: [B:28:0x0093, B:27:0x0087] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0098|if (r2.mustRevalidate() != false) goto L_0x00ab\l}"];
Node_31 [shape=record,label="{31\:\ 0x009a}"];
Node_32 [shape=record,label="{32\:\ 0x009e|if (r0.maxStaleSeconds() == \-1) goto L_0x00ab\l}"];
Node_33 [shape=record,label="{33\:\ 0x00a0|long r9 = java.util.concurrent.TimeUnit.SECONDS.toMillis((long) r0.maxStaleSeconds())\l}"];
Node_34 [shape=record,label="{34\:\ 0x00ab|PHI: r9 \l  PHI: (r9v1 long) = (r9v0 long), (r9v0 long), (r9v3 long) binds: [B:30:0x0098, B:32:0x009e, B:33:0x00a0] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x00af|if (r2.noCache() != false) goto L_0x00e6\l}"];
Node_36 [shape=record,label="{36\:\ 0x00b1|long r11 = r11 + r3\l}"];
Node_37 [shape=record,label="{37\:\ 0x00b5|if ((r11 \> (r9 + r5) ? 1 : (r11 == (r9 + r5) ? 0 : \-1)) \>= 0) goto L_0x00e6\l}"];
Node_38 [shape=record,label="{38\:\ 0x00b7|okhttp3.Response$Builder r0 = r13.cacheResponse.newBuilder()\l}"];
Node_39 [shape=record,label="{39\:\ 0x00bf|if ((r11 \> r5 ? 1 : (r11 == r5 ? 0 : \-1)) \< 0) goto L_0x00c8\l}"];
Node_40 [shape=record,label="{40\:\ 0x00c1|r0.addHeader(p004ar.com.hjg.pngj.chunks.PngChunkTextVar.KEY_Warning, \"110 HttpURLConnection \"Response is stale\"\")\l}"];
Node_41 [shape=record,label="{41\:\ 0x00c8}"];
Node_42 [shape=record,label="{42\:\ 0x00cd|if ((r3 \> org.osmdroid.tileprovider.constants.OpenStreetMapTileProviderConstants.ONE_DAY ? 1 : (r3 == org.osmdroid.tileprovider.constants.OpenStreetMapTileProviderConstants.ONE_DAY ? 0 : \-1)) \<= 0) goto L_0x00dc\l}"];
Node_43 [shape=record,label="{43\:\ 0x00cf}"];
Node_44 [shape=record,label="{44\:\ 0x00d3|if (isFreshnessLifetimeHeuristic() == false) goto L_0x00dc\l}"];
Node_45 [shape=record,label="{45\:\ 0x00d5|r0.addHeader(p004ar.com.hjg.pngj.chunks.PngChunkTextVar.KEY_Warning, \"113 HttpURLConnection \"Heuristic expiration\"\")\l}"];
Node_46 [shape=record,label="{46\:\ 0x00dc}"];
Node_47 [shape=record,label="{47\:\ 0x00e5|RETURN\l|return new okhttp3.internal.cache.CacheStrategy((okhttp3.Request) null, r0.build())\l}"];
Node_48 [shape=record,label="{48\:\ 0x00e6}"];
Node_49 [shape=record,label="{49\:\ 0x00e8|if (r13.etag == null) goto L_0x00ef\l}"];
Node_50 [shape=record,label="{50\:\ 0x00ea|java.lang.String r0 = p018io.fabric.sdk.android.services.network.HttpRequest.HEADER_IF_NONE_MATCH\ljava.lang.String r1 = r13.etag\l}"];
Node_51 [shape=record,label="{51\:\ 0x00ef}"];
Node_52 [shape=record,label="{52\:\ 0x00f1|if (r13.lastModified == null) goto L_0x00f8\l}"];
Node_53 [shape=record,label="{53\:\ 0x00f3|java.lang.String r0 = \"If\-Modified\-Since\"\ljava.lang.String r1 = r13.lastModifiedString\l}"];
Node_54 [shape=record,label="{54\:\ 0x00f8}"];
Node_55 [shape=record,label="{55\:\ 0x00fa|if (r13.servedDate == null) goto L_0x0129\l}"];
Node_56 [shape=record,label="{56\:\ 0x00fc|java.lang.String r0 = \"If\-Modified\-Since\"\ljava.lang.String r1 = r13.servedDateString\l}"];
Node_57 [shape=record,label="{57\:\ 0x0100|PHI: r0 r1 \l  PHI: (r0v10 java.lang.String) = (r0v18 java.lang.String), (r0v19 java.lang.String), (r0v20 java.lang.String) binds: [B:56:0x00fc, B:53:0x00f3, B:50:0x00ea] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 java.lang.String) = (r1v4 java.lang.String), (r1v5 java.lang.String), (r1v6 java.lang.String) binds: [B:56:0x00fc, B:53:0x00f3, B:50:0x00ea] A[DONT_GENERATE, DONT_INLINE]\l|okhttp3.Headers$Builder r2 = r13.request.headers().newBuilder()\lokhttp3.internal.Internal.instance.addLenient(r2, r0, r1)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0128|RETURN\l|return new okhttp3.internal.cache.CacheStrategy(r13.request.newBuilder().headers(r2.build()).build(), r13.cacheResponse)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0129}"];
Node_60 [shape=record,label="{60\:\ 0x0130|RETURN\l|return new okhttp3.internal.cache.CacheStrategy(r13.request, (okhttp3.Response) null)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0131}"];
Node_62 [shape=record,label="{62\:\ 0x0138|RETURN\l|return new okhttp3.internal.cache.CacheStrategy(r13.request, (okhttp3.Response) null)\l}"];
MethodNode[shape=record,label="{private okhttp3.internal.cache.CacheStrategy okhttp3.internal.cache.CacheStrategy.Factory.getCandidate((r13v0 'this' okhttp3.internal.cache.CacheStrategy$Factory A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_61;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_61[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_48;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_48;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_46;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_57;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_57;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_59;
Node_56 -> Node_57;
Node_57 -> Node_58;
Node_59 -> Node_60;
Node_61 -> Node_62;
}

