digraph "CFG forokhttp3.internal.cache.CacheStrategy.Factory.get()Lokhttp3\/internal\/cache\/CacheStrategy;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:okhttp3.internal.cache.CacheStrategy) = (r2 I:okhttp3.internal.cache.CacheStrategy$Factory) okhttp3.internal.cache.CacheStrategy.Factory.getCandidate():okhttp3.internal.cache.CacheStrategy type: DIRECT \l0x0004: IGET  (r1 I:okhttp3.Request) = (r0 I:okhttp3.internal.cache.CacheStrategy) okhttp3.internal.cache.CacheStrategy.networkRequest okhttp3.Request \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r1 I:okhttp3.Request) = (r2 I:okhttp3.internal.cache.CacheStrategy$Factory) okhttp3.internal.cache.CacheStrategy.Factory.request okhttp3.Request \l0x000a: INVOKE  (r1 I:okhttp3.CacheControl) = (r1 I:okhttp3.Request) okhttp3.Request.cacheControl():okhttp3.CacheControl type: VIRTUAL \l0x000e: INVOKE  (r1 I:boolean) = (r1 I:okhttp3.CacheControl) okhttp3.CacheControl.onlyIfCached():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:okhttp3.internal.cache.CacheStrategy) =  okhttp3.internal.cache.CacheStrategy \l0x0016: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0017: INVOKE  \l  (r0 I:okhttp3.internal.cache.CacheStrategy)\l  (r1 I:okhttp3.Request)\l  (r1 I:okhttp3.Response)\l okhttp3.internal.cache.CacheStrategy.\<init\>(okhttp3.Request, okhttp3.Response):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: RETURN  (r0 I:okhttp3.internal.cache.CacheStrategy) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: RETURN  (r0 I:okhttp3.internal.cache.CacheStrategy) \l}"];
MethodNode[shape=record,label="{public okhttp3.internal.cache.CacheStrategy okhttp3.internal.cache.CacheStrategy.Factory.get((r2 'this' I:okhttp3.internal.cache.CacheStrategy$Factory A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
}

