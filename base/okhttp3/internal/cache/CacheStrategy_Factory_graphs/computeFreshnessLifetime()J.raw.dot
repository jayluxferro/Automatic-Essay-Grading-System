digraph "CFG forokhttp3.internal.cache.CacheStrategy.Factory.computeFreshnessLifetime()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.Response) = (r7 I:okhttp3.internal.cache.CacheStrategy$Factory) okhttp3.internal.cache.CacheStrategy.Factory.cacheResponse okhttp3.Response \l0x0002: INVOKE  (r0 I:okhttp3.CacheControl) = (r0 I:okhttp3.Response) okhttp3.Response.cacheControl():okhttp3.CacheControl type: VIRTUAL \l0x0006: INVOKE  (r1 I:int) = (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.maxAgeSeconds():int type: VIRTUAL \l0x000a: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0019 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: SGET  (r1 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.SECONDS java.util.concurrent.TimeUnit \l0x000f: INVOKE  (r0 I:int) = (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.maxAgeSeconds():int type: VIRTUAL \l0x0013: CAST  (r2 I:long) = (long) (r0 I:int) \l0x0014: INVOKE  (r0 I:long) = (r1 I:java.util.concurrent.TimeUnit), (r2 I:long) java.util.concurrent.TimeUnit.toMillis(long):long type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: RETURN  (r0 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: IGET  (r0 I:java.util.Date) = (r7 I:okhttp3.internal.cache.CacheStrategy$Factory) okhttp3.internal.cache.CacheStrategy.Factory.expires java.util.Date \l0x001b: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003a \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: IGET  (r0 I:java.util.Date) = (r7 I:okhttp3.internal.cache.CacheStrategy$Factory) okhttp3.internal.cache.CacheStrategy.Factory.servedDate java.util.Date \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002a \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: IGET  (r0 I:java.util.Date) = (r7 I:okhttp3.internal.cache.CacheStrategy$Factory) okhttp3.internal.cache.CacheStrategy.Factory.servedDate java.util.Date \l0x0025: INVOKE  (r3 I:long) = (r0 I:java.util.Date) java.util.Date.getTime():long type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: IGET  (r3 I:long) = (r7 I:okhttp3.internal.cache.CacheStrategy$Factory) okhttp3.internal.cache.CacheStrategy.Factory.receivedResponseMillis long \l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: IGET  (r0 I:java.util.Date) = (r7 I:okhttp3.internal.cache.CacheStrategy$Factory) okhttp3.internal.cache.CacheStrategy.Factory.expires java.util.Date \l0x002e: INVOKE  (r5 I:long) = (r0 I:java.util.Date) java.util.Date.getTime():long type: VIRTUAL \l0x0032: ARITH  (r3 I:long) = (r5 I:long) \- (r3 I:long) \l0x0034: CMP_L  (r0 I:int) = (r3 I:long), (r1 I:long) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|0x0036: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:13:0x0039 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|0x0038: MOVE  (r1 I:?[long, double]) = (r3 I:?[long, double]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0039|0x0039: RETURN  (r1 I:long) \l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|0x003a: IGET  (r0 I:java.util.Date) = (r7 I:okhttp3.internal.cache.CacheStrategy$Factory) okhttp3.internal.cache.CacheStrategy.Factory.lastModified java.util.Date \l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|0x003c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x006b \l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|0x003e: IGET  (r0 I:okhttp3.Response) = (r7 I:okhttp3.internal.cache.CacheStrategy$Factory) okhttp3.internal.cache.CacheStrategy.Factory.cacheResponse okhttp3.Response \l0x0040: INVOKE  (r0 I:okhttp3.Request) = (r0 I:okhttp3.Response) okhttp3.Response.request():okhttp3.Request type: VIRTUAL \l0x0044: INVOKE  (r0 I:okhttp3.HttpUrl) = (r0 I:okhttp3.Request) okhttp3.Request.url():okhttp3.HttpUrl type: VIRTUAL \l0x0048: INVOKE  (r0 I:java.lang.String) = (r0 I:okhttp3.HttpUrl) okhttp3.HttpUrl.query():java.lang.String type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x004c|0x004c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x006b \l}"];
Node_18 [shape=record,label="{18\:\ 0x004e|0x004e: IGET  (r0 I:java.util.Date) = (r7 I:okhttp3.internal.cache.CacheStrategy$Factory) okhttp3.internal.cache.CacheStrategy.Factory.servedDate java.util.Date \l}"];
Node_19 [shape=record,label="{19\:\ 0x0050|0x0050: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0059 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0052|0x0052: IGET  (r0 I:java.util.Date) = (r7 I:okhttp3.internal.cache.CacheStrategy$Factory) okhttp3.internal.cache.CacheStrategy.Factory.servedDate java.util.Date \l0x0054: INVOKE  (r3 I:long) = (r0 I:java.util.Date) java.util.Date.getTime():long type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0059|0x0059: IGET  (r3 I:long) = (r7 I:okhttp3.internal.cache.CacheStrategy$Factory) okhttp3.internal.cache.CacheStrategy.Factory.sentRequestMillis long \l}"];
Node_22 [shape=record,label="{22\:\ 0x005b|0x005b: IGET  (r0 I:java.util.Date) = (r7 I:okhttp3.internal.cache.CacheStrategy$Factory) okhttp3.internal.cache.CacheStrategy.Factory.lastModified java.util.Date \l0x005d: INVOKE  (r5 I:long) = (r0 I:java.util.Date) java.util.Date.getTime():long type: VIRTUAL \l0x0061: ARITH  (r3 I:long) = (r3 I:long) \- (r5 I:long) \l0x0062: CMP_L  (r0 I:int) = (r3 I:long), (r1 I:long) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0064|0x0064: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:25:0x006a \l}"];
Node_24 [shape=record,label="{24\:\ 0x0066|0x0066: CONST  (r0 I:?[long, double]) = (10 ?[long, double]) \l0x0068: ARITH  (r1 I:long) = (r3 I:long) \/ (r0 I:long) \l}"];
Node_25 [shape=record,label="{25\:\ 0x006a|0x006a: RETURN  (r1 I:long) \l}"];
Node_26 [shape=record,label="{26\:\ 0x006b|0x006b: RETURN  (r1 I:long) \l}"];
MethodNode[shape=record,label="{private long okhttp3.internal.cache.CacheStrategy.Factory.computeFreshnessLifetime((r7 'this' I:okhttp3.internal.cache.CacheStrategy$Factory A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_26;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
}

