digraph "CFG forokhttp3.internal.cache.CacheStrategy.Factory.get()Lokhttp3\/internal\/cache\/CacheStrategy;" {
subgraph cluster_Region_1778953103 {
label = "R(2:0|1)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|okhttp3.internal.cache.CacheStrategy okhttp3.internal.cache.CacheStrategy r0 = getCandidate()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|RETURN\l|return (r0.networkRequest == null \|\| !r2.request.cacheControl().onlyIfCached()) ? r0 : new okhttp3.internal.cache.CacheStrategy((okhttp3.Request) null, (okhttp3.Response) null)\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0012|REMOVE\lADDED_TO_REGION\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0014}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001a}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001b}"];
MethodNode[shape=record,label="{public okhttp3.internal.cache.CacheStrategy okhttp3.internal.cache.CacheStrategy.Factory.get((r2v0 'this' okhttp3.internal.cache.CacheStrategy$Factory A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_5;
}

