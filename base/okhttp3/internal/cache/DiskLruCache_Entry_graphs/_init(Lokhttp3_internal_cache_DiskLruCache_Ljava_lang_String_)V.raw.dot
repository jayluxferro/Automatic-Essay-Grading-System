digraph "CFG forokhttp3.internal.cache.DiskLruCache.Entry.\<init\>(Lokhttp3\/internal\/cache\/DiskLruCache;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r7 I:okhttp3.internal.cache.DiskLruCache)\l  (r6 I:okhttp3.internal.cache.DiskLruCache$Entry)\l okhttp3.internal.cache.DiskLruCache.Entry.this$0 okhttp3.internal.cache.DiskLruCache \l0x0002: INVOKE  (r6 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0005: IPUT  \l  (r8 I:java.lang.String)\l  (r6 I:okhttp3.internal.cache.DiskLruCache$Entry)\l okhttp3.internal.cache.DiskLruCache.Entry.key java.lang.String \l0x0007: IGET  (r0 I:int) = (r7 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.valueCount int \l0x0009: NEW_ARRAY  (r0 I:long[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: long[] \l0x000b: IPUT  \l  (r0 I:long[])\l  (r6 I:okhttp3.internal.cache.DiskLruCache$Entry)\l okhttp3.internal.cache.DiskLruCache.Entry.lengths long[] \l0x000d: IGET  (r0 I:int) = (r7 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.valueCount int \l0x000f: NEW_ARRAY  (r0 I:java.io.File[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.io.File[] \l0x0011: IPUT  \l  (r0 I:java.io.File[])\l  (r6 I:okhttp3.internal.cache.DiskLruCache$Entry)\l okhttp3.internal.cache.DiskLruCache.Entry.cleanFiles java.io.File[] \l0x0013: IGET  (r0 I:int) = (r7 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.valueCount int \l0x0015: NEW_ARRAY  (r0 I:java.io.File[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.io.File[] \l0x0017: IPUT  \l  (r0 I:java.io.File[])\l  (r6 I:okhttp3.internal.cache.DiskLruCache$Entry)\l okhttp3.internal.cache.DiskLruCache.Entry.dirtyFiles java.io.File[] \l0x0019: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001b: INVOKE  (r0 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.\<init\>(java.lang.String):void type: DIRECT \l0x001e: CONST  (r8 I:?[int, float, short, byte, char]) = (46 ?[int, float, short, byte, char]) \l0x0020: INVOKE  (r0 I:java.lang.StringBuilder), (r8 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0023: INVOKE  (r8 I:int) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.length():int type: VIRTUAL \l0x0027: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0028|0x0028: IGET  (r2 I:int) = (r7 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.valueCount int \l}"];
Node_2 [shape=record,label="{2\:\ 0x002a|0x002a: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:4:0x0058 \l}"];
Node_3 [shape=record,label="{3\:\ 0x002c|0x002c: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x002f: IGET  (r2 I:java.io.File[]) = (r6 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.cleanFiles java.io.File[] \l0x0031: NEW_INSTANCE  (r3 I:java.io.File) =  java.io.File \l0x0033: IGET  (r4 I:java.io.File) = (r7 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.directory java.io.File \l0x0035: INVOKE  (r5 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0039: INVOKE  \l  (r3 I:java.io.File)\l  (r4 I:java.io.File)\l  (r5 I:java.lang.String)\l java.io.File.\<init\>(java.io.File, java.lang.String):void type: DIRECT \l0x003c: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x003e: CONST_STR  (r2 I:java.lang.String) =  \".tmp\" \l0x0040: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0043: IGET  (r2 I:java.io.File[]) = (r6 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.dirtyFiles java.io.File[] \l0x0045: NEW_INSTANCE  (r3 I:java.io.File) =  java.io.File \l0x0047: IGET  (r4 I:java.io.File) = (r7 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.directory java.io.File \l0x0049: INVOKE  (r5 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004d: INVOKE  \l  (r3 I:java.io.File)\l  (r4 I:java.io.File)\l  (r5 I:java.lang.String)\l java.io.File.\<init\>(java.io.File, java.lang.String):void type: DIRECT \l0x0050: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0052: INVOKE  (r0 I:java.lang.StringBuilder), (r8 I:int) java.lang.StringBuilder.setLength(int):void type: VIRTUAL \l0x0055: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0058|0x0058: RETURN   \l}"];
MethodNode[shape=record,label="{void okhttp3.internal.cache.DiskLruCache.Entry.\<init\>((r6 'this' I:okhttp3.internal.cache.DiskLruCache$Entry A[IMMUTABLE_TYPE, THIS]), (r7 I:okhttp3.internal.cache.DiskLruCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

