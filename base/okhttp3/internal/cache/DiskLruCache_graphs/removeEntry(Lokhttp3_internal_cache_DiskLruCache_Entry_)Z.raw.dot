digraph "CFG forokhttp3.internal.cache.DiskLruCache.removeEntry(Lokhttp3\/internal\/cache\/DiskLruCache$Entry;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.internal.cache.DiskLruCache$Editor) = (r7 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.currentEditor okhttp3.internal.cache.DiskLruCache$Editor \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:okhttp3.internal.cache.DiskLruCache$Editor) = (r7 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.currentEditor okhttp3.internal.cache.DiskLruCache$Editor \l0x0006: INVOKE  (r0 I:okhttp3.internal.cache.DiskLruCache$Editor) okhttp3.internal.cache.DiskLruCache.Editor.detach():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IGET  (r1 I:int) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.valueCount int \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:7:0x0029 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: IGET  (r1 I:okhttp3.internal.io.FileSystem) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.fileSystem okhttp3.internal.io.FileSystem \l0x0010: IGET  (r2 I:java.io.File[]) = (r7 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.cleanFiles java.io.File[] \l0x0012: AGET  (r2 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0014: INVOKE  (r1 I:okhttp3.internal.io.FileSystem), (r2 I:java.io.File) okhttp3.internal.io.FileSystem.delete(java.io.File):void type: INTERFACE \l0x0017: IGET  (r1 I:long) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.size long \l0x0019: IGET  (r3 I:long[]) = (r7 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.lengths long[] \l0x001b: AGET  (r4 I:?[long, double]) = (r3 I:?[long, double][]), (r0 I:?[int, short, byte, char]) \l0x001d: ARITH  (r1 I:long) = (r1 I:long) \- (r4 I:long) \l0x001e: IPUT  (r1 I:long), (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.size long \l0x0020: IGET  (r1 I:long[]) = (r7 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.lengths long[] \l0x0022: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0024: APUT  \l  (r1 I:?[long, double][])\l  (r0 I:?[int, short, byte, char])\l  (r2 I:?[long, double])\l \l0x0026: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: IGET  (r0 I:int) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.redundantOpCount int \l0x002b: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x002c: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x002d: IPUT  (r0 I:int), (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.redundantOpCount int \l0x002f: IGET  (r0 I:okio.BufferedSink) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalWriter okio.BufferedSink \l0x0031: CONST_STR  (r2 I:java.lang.String) =  \"REMOVE\" \l0x0033: INVOKE  (r0 I:okio.BufferedSink) = (r0 I:okio.BufferedSink), (r2 I:java.lang.String) okio.BufferedSink.writeUtf8(java.lang.String):okio.BufferedSink type: INTERFACE \l0x0037: CONST  (r2 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0039: INVOKE  (r0 I:okio.BufferedSink) = (r0 I:okio.BufferedSink), (r2 I:int) okio.BufferedSink.writeByte(int):okio.BufferedSink type: INTERFACE \l0x003d: IGET  (r2 I:java.lang.String) = (r7 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.key java.lang.String \l0x003f: INVOKE  (r0 I:okio.BufferedSink) = (r0 I:okio.BufferedSink), (r2 I:java.lang.String) okio.BufferedSink.writeUtf8(java.lang.String):okio.BufferedSink type: INTERFACE \l0x0043: CONST  (r2 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0045: INVOKE  (r0 I:okio.BufferedSink), (r2 I:int) okio.BufferedSink.writeByte(int):okio.BufferedSink type: INTERFACE \l0x0048: IGET  (r0 I:java.util.LinkedHashMap\<java.lang.String, okhttp3.internal.cache.DiskLruCache$Entry\>) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.lruEntries java.util.LinkedHashMap \l0x004a: IGET  (r7 I:java.lang.String) = (r7 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.key java.lang.String \l0x004c: INVOKE  (r0 I:java.util.LinkedHashMap), (r7 I:java.lang.Object) java.util.LinkedHashMap.remove(java.lang.Object):java.lang.Object type: VIRTUAL \l0x004f: INVOKE  (r7 I:boolean) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalRebuildRequired():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0053|0x0053: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x005c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0055|0x0055: IGET  (r7 I:java.util.concurrent.Executor) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.executor java.util.concurrent.Executor \l0x0057: IGET  (r0 I:java.lang.Runnable) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.cleanupRunnable java.lang.Runnable \l0x0059: INVOKE  \l  (r7 I:java.util.concurrent.Executor)\l  (r0 I:java.lang.Runnable)\l java.util.concurrent.Executor.execute(java.lang.Runnable):void type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x005c|0x005c: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean okhttp3.internal.cache.DiskLruCache.removeEntry((r6 'this' I:okhttp3.internal.cache.DiskLruCache A[IMMUTABLE_TYPE, THIS]), (r7 I:okhttp3.internal.cache.DiskLruCache$Entry A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
}

