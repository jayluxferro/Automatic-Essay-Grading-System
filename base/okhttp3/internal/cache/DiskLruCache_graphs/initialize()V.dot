digraph "CFG forokhttp3.internal.cache.DiskLruCache.initialize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r6)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r6.initialized == false) goto L_0x0007\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|monitor\-exit(r6)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|SYNTHETIC\lSplitter:B:6:0x0007\l}"];
Node_7 [shape=record,label="{7\:\ ?|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\lSplitter:B:6:0x0007\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l|if (r6.fileSystem.exists(r6.journalFileBackup) == false) goto L_0x002c     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l|if (r6.fileSystem.exists(r6.journalFile) == false) goto L_0x0023     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l|r6.fileSystem.delete(r6.journalFileBackup)     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l|r6.fileSystem.rename(r6.journalFileBackup, r6.journalFile)     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0034}"];
Node_15 [shape=record,label="{15\:\ 0x0035|if (r6.fileSystem.exists(r6.journalFile) == false) goto L_0x0079\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|SYNTHETIC\lSplitter:B:16:0x0037\l}"];
Node_17 [shape=record,label="{17\:\ ?|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\lSplitter:B:16:0x0037\l|readJournal()     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\lprocessJournal()     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\lr6.initialized = true     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|monitor\-exit(r6)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0040|RETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ 0x0041|ExcHandler: IOException (r0v6 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:16:0x0037\l|java.io.IOException r0 = move\-exception\l}"];
Node_21 [shape=record,label="{21\:\ 0x0042|SYNTHETIC\lSplitter:B:21:0x0042\l}"];
Node_22 [shape=record,label="{22\:\ ?|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\lSplitter:B:21:0x0042\l|okhttp3.internal.platform.Platform r2 = okhttp3.internal.platform.Platform.get()     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\ljava.lang.StringBuilder r4 = new java.lang.StringBuilder()     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\lr4.append(\"DiskLruCache \")     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\lr4.append(r6.directory)     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\lr4.append(\" is corrupt: \")     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\lr4.append(r0.getMessage())     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\lr4.append(\", removing\")     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\lr2.log(5, r4.toString(), r0)     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x006e}"];
Node_24 [shape=record,label="{24\:\ 0x006f|SYNTHETIC\lSplitter:B:24:0x006f\l}"];
Node_25 [shape=record,label="{25\:\ ?|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\lSplitter:B:24:0x006f\l|delete()     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l}"];
Node_26 [shape=record,label="{26\:\ 0x0072|SYNTHETIC\lSplitter:B:26:0x0072\l}"];
Node_27 [shape=record,label="{27\:\ ?|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\lSplitter:B:26:0x0072\l|r6.closed = false     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l}"];
Node_28 [shape=record,label="{28\:\ 0x0075|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\lExcHandler: all (r1v3 'th' java.lang.Throwable A[CUSTOM_DECLARE, Catch:\{  \}])\lSplitter:B:24:0x006f\l|java.lang.Throwable r1 = move\-exception     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x0076|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l|r6.closed = false     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l}"];
Node_30 [shape=record,label="{30\:\ 0x0078|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l|throw r1     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l}"];
Node_31 [shape=record,label="{31\:\ 0x0079|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l|rebuildJournal()     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\lr6.initialized = true     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0075 \}\l}"];
Node_32 [shape=record,label="{32\:\ 0x007e|monitor\-exit(r6)\l}"];
Node_33 [shape=record,label="{33\:\ 0x007f|RETURN\l|return\l}"];
Node_34 [shape=record,label="{34\:\ 0x0080|REMOVE\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_35 [shape=record,label="{35\:\ 0x0081|REMOVE\l}"];
Node_36 [shape=record,label="{36\:\ 0x0082|REMOVE\l|throw r0\l}"];
MethodNode[shape=record,label="{public synchronized void okhttp3.internal.cache.DiskLruCache.initialize((r6v0 'this' okhttp3.internal.cache.DiskLruCache A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_34;
Node_2 -> Node_3;
Node_2 -> Node_34;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_34;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_31;
Node_16 -> Node_17;
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_34;
Node_22 -> Node_23;
Node_22 -> Node_34;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_28;
Node_24 -> Node_34;
Node_25 -> Node_26;
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_26 -> Node_34;
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_35 -> Node_36;
}

