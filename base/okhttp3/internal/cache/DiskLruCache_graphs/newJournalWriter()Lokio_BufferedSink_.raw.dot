digraph "CFG forokhttp3.internal.cache.DiskLruCache.newJournalWriter()Lokio\/BufferedSink;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.internal.io.FileSystem) = (r2 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.fileSystem okhttp3.internal.io.FileSystem \l0x0002: IGET  (r1 I:java.io.File) = (r2 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalFile java.io.File \l0x0004: INVOKE  (r0 I:okio.Sink) = (r0 I:okhttp3.internal.io.FileSystem), (r1 I:java.io.File) okhttp3.internal.io.FileSystem.appendingSink(java.io.File):okio.Sink type: INTERFACE \l0x0008: NEW_INSTANCE  (r1 I:okhttp3.internal.cache.DiskLruCache$2) =  okhttp3.internal.cache.DiskLruCache$2 \l0x000a: INVOKE  \l  (r1 I:okhttp3.internal.cache.DiskLruCache$2)\l  (r2 I:okhttp3.internal.cache.DiskLruCache)\l  (r0 I:okio.Sink)\l okhttp3.internal.cache.DiskLruCache.2.\<init\>(okhttp3.internal.cache.DiskLruCache, okio.Sink):void type: DIRECT \l0x000d: INVOKE  (r0 I:okio.BufferedSink) = (r1 I:okio.Sink) okio.Okio.buffer(okio.Sink):okio.BufferedSink type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: RETURN  (r0 I:okio.BufferedSink) \l}"];
MethodNode[shape=record,label="{private okio.BufferedSink okhttp3.internal.cache.DiskLruCache.newJournalWriter((r2 'this' I:okhttp3.internal.cache.DiskLruCache A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.FileNotFoundException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

