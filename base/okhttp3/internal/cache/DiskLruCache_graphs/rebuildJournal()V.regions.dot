digraph "CFG forokhttp3.internal.cache.DiskLruCache.rebuildJournal()V" {
subgraph cluster_Region_1925902937 {
label = "R(1:(1:(3:(1:4)|5|(5:8|(2:11|(1:13)(1:14))|16|(1:18)|19))))";
node [shape=record,color=blue];
subgraph cluster_Region_299516497 {
label = "R(1:(3:(1:4)|5|(5:8|(2:11|(1:13)(1:14))|16|(1:18)|19)))";
node [shape=record,color=blue];
subgraph cluster_Region_729041241 {
label = "R(3:(1:4)|5|(5:8|(2:11|(1:13)(1:14))|16|(1:18)|19))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1929308136 {
label = "IF [B:3:0x0003] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|Catch:\{ all \-\> 0x00b7 \}\l|if (r6.journalWriter != null) goto L_0x0005     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
subgraph cluster_Region_881747601 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|Catch:\{ all \-\> 0x00b7 \}\l|r6.journalWriter.close()     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x000a|Catch:\{ all \-\> 0x00b7 \}\l|okio.BufferedSink okio.BufferedSink r0 = okio.Okio.buffer(r6.fileSystem.sink(r6.journalFileTmp))     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
subgraph cluster_TryCatchRegion_301142627 {
label = "Try: R(5:8|(2:11|(1:13)(1:14))|16|(1:18)|19) catches: R(3:22|24|25)";
node [shape=record,color=blue];
subgraph cluster_Region_1072419980 {
label = "R(5:8|(2:11|(1:13)(1:14))|16|(1:18)|19)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ all \-\> 0x00b7 \}\lSplitter:B:7:0x0018\l|r0.writeUtf8(MAGIC).writeByte(10)     \/\/ Catch:\{ all \-\> 0x00b7 \}\lr0.writeUtf8(VERSION_1).writeByte(10)     \/\/ Catch:\{ all \-\> 0x00b7 \}\lr0.writeDecimalLong((long) r6.appVersion).writeByte(10)     \/\/ Catch:\{ all \-\> 0x00b7 \}\lr0.writeDecimalLong((long) r6.valueCount).writeByte(10)     \/\/ Catch:\{ all \-\> 0x00b7 \}\lr0.writeByte(10)     \/\/ Catch:\{ all \-\> 0x00b7 \}\ljava.util.Iterator r1 = r6.lruEntries.values().iterator()     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
subgraph cluster_LoopRegion_1383596742 {
label = "LOOP:0: (2:11|(1:13)(1:14))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x004f|Catch:\{ all \-\> 0x00b7 \}\l|if (r1.hasNext() != false) goto L_0x0051     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
subgraph cluster_Region_1463582406 {
label = "R(2:11|(1:13)(1:14))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0051|Catch:\{ all \-\> 0x00b7 \}\l|okhttp3.internal.cache.DiskLruCache$Entry r3 = r1.next()     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
subgraph cluster_IfRegion_272703582 {
label = "IF [B:12:0x005b] THEN: R(1:13) ELSE: R(1:14)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x005b|Catch:\{ all \-\> 0x00b7 \}\l|if (r3.currentEditor != null) goto L_0x005d     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
subgraph cluster_Region_1608253007 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x005d|Catch:\{ all \-\> 0x00b7 \}\l|r0.writeUtf8(DIRTY).writeByte(32)     \/\/ Catch:\{ all \-\> 0x00b7 \}\lr0.writeUtf8(r3.key)     \/\/ Catch:\{ all \-\> 0x00b7 \}\lr0.writeByte(10)     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
}
subgraph cluster_Region_1581979590 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x006f|Catch:\{ all \-\> 0x00b7 \}\l|r0.writeUtf8(CLEAN).writeByte(32)     \/\/ Catch:\{ all \-\> 0x00b7 \}\lr0.writeUtf8(r3.key)     \/\/ Catch:\{ all \-\> 0x00b7 \}\lr3.writeLengths(r0)     \/\/ Catch:\{ all \-\> 0x00b7 \}\lr0.writeByte(10)     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
}
}
}
}
Node_16 [shape=record,label="{16\:\ ?|Catch:\{ all \-\> 0x00b7 \}\lSplitter:B:15:0x0084\l|r0.close()     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
subgraph cluster_IfRegion_422074431 {
label = "IF [B:17:0x008f] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x008f|Catch:\{ all \-\> 0x00b7 \}\l|if (r6.fileSystem.exists(r6.journalFile) == true) goto L_0x0091     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
subgraph cluster_Region_190060526 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0091|Catch:\{ all \-\> 0x00b7 \}\l|r6.fileSystem.rename(r6.journalFile, r6.journalFileBackup)     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x009a|Catch:\{ all \-\> 0x00b7 \}\l|r6.fileSystem.rename(r6.journalFileTmp, r6.journalFile)     \/\/ Catch:\{ all \-\> 0x00b7 \}\lr6.fileSystem.delete(r6.journalFileBackup)     \/\/ Catch:\{ all \-\> 0x00b7 \}\lr6.journalWriter = newJournalWriter()     \/\/ Catch:\{ all \-\> 0x00b7 \}\lr6.hasJournalErrors = false     \/\/ Catch:\{ all \-\> 0x00b7 \}\lr6.mostRecentRebuildFailed = false     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
}
subgraph cluster_Region_1476178903 {
label = "R(3:22|24|25) | ExcHandler: all (r1v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x00b7|ExcHandler: all (r1v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:7:0x0018\l}"];
Node_24 [shape=record,label="{24\:\ ?|Catch:\{ all \-\> 0x00b7 \}\lSplitter:B:23:0x00b8\l|r0.close()     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x00bb|Catch:\{ all \-\> 0x00b7 \}\l|throw r1     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
}
}
}
}
}
subgraph cluster_Region_1476178903 {
label = "R(3:22|24|25) | ExcHandler: all (r1v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x00b7|ExcHandler: all (r1v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:7:0x0018\l}"];
Node_24 [shape=record,label="{24\:\ ?|Catch:\{ all \-\> 0x00b7 \}\lSplitter:B:23:0x00b8\l|r0.close()     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x00bb|Catch:\{ all \-\> 0x00b7 \}\l|throw r1     \/\/ Catch:\{ all \-\> 0x00b7 \}\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?|Catch:\{ all \-\> 0x00b7 \}\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0016}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0018|SYNTHETIC\lSplitter:B:7:0x0018\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x004b|LOOP_START\lCatch:\{ all \-\> 0x00b7 \}\lLOOP:0: B:9:0x004b\-\>B:29:0x004b\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0084|SYNTHETIC\lSplitter:B:15:0x0084\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x00b5|DONT_GENERATE\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x00b6}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x00b8|SYNTHETIC\lSplitter:B:23:0x00b8\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x00bc|REMOVE\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x00bd|REMOVE\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x00be|REMOVE\l|throw r0\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x004b|LOOP_END\lSYNTHETIC\lLOOP:0: B:9:0x004b\-\>B:29:0x004b\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x004b|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x004b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{synchronized void okhttp3.internal.cache.DiskLruCache.rebuildJournal((r6v0 'this' okhttp3.internal.cache.DiskLruCache A[IMMUTABLE_TYPE, THIS]))  | JADX INFO: finally extract failed\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_15[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_30;
Node_14 -> Node_31;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_19[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_26;
Node_2 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_22;
Node_9 -> Node_10;
Node_15 -> Node_16;
Node_15 -> Node_26;
Node_20 -> Node_21;
Node_23 -> Node_24;
Node_23 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_29 -> Node_9;
Node_30 -> Node_29;
Node_31 -> Node_29;
}

