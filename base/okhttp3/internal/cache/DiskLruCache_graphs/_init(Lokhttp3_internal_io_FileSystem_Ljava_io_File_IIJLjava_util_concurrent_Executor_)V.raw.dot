digraph "CFG forokhttp3.internal.cache.DiskLruCache.\<init\>(Lokhttp3\/internal\/io\/FileSystem;Ljava\/io\/File;IIJLjava\/util\/concurrent\/Executor;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0005: IPUT  (r0 I:long), (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.size long \l0x0007: NEW_INSTANCE  (r2 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x0009: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (1061158912(0x3f400000, float:0.75) ?[int, float, short, byte, char])\l \l0x000c: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: INVOKE  \l  (r2 I:java.util.LinkedHashMap)\l  (r3 I:int)\l  (r4 I:float)\l  (r5 I:boolean)\l java.util.LinkedHashMap.\<init\>(int, float, boolean):void type: DIRECT \l0x0010: IPUT  \l  (r2 I:java.util.LinkedHashMap\<java.lang.String, okhttp3.internal.cache.DiskLruCache$Entry\>)\l  (r6 I:okhttp3.internal.cache.DiskLruCache)\l okhttp3.internal.cache.DiskLruCache.lruEntries java.util.LinkedHashMap \l0x0012: IPUT  (r0 I:long), (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.nextSequenceNumber long \l0x0014: NEW_INSTANCE  (r0 I:okhttp3.internal.cache.DiskLruCache$1) =  okhttp3.internal.cache.DiskLruCache$1 \l0x0016: INVOKE  \l  (r0 I:okhttp3.internal.cache.DiskLruCache$1)\l  (r6 I:okhttp3.internal.cache.DiskLruCache)\l okhttp3.internal.cache.DiskLruCache.1.\<init\>(okhttp3.internal.cache.DiskLruCache):void type: DIRECT \l0x0019: IPUT  \l  (r0 I:java.lang.Runnable)\l  (r6 I:okhttp3.internal.cache.DiskLruCache)\l okhttp3.internal.cache.DiskLruCache.cleanupRunnable java.lang.Runnable \l0x001b: IPUT  \l  (r7 I:okhttp3.internal.io.FileSystem)\l  (r6 I:okhttp3.internal.cache.DiskLruCache)\l okhttp3.internal.cache.DiskLruCache.fileSystem okhttp3.internal.io.FileSystem \l0x001d: IPUT  \l  (r8 I:java.io.File)\l  (r6 I:okhttp3.internal.cache.DiskLruCache)\l okhttp3.internal.cache.DiskLruCache.directory java.io.File \l0x001f: IPUT  (r9 I:int), (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.appVersion int \l0x0021: NEW_INSTANCE  (r7 I:java.io.File) =  java.io.File \l0x0023: CONST_STR  (r9 I:java.lang.String) =  \"journal\" \l0x0025: INVOKE  \l  (r7 I:java.io.File)\l  (r8 I:java.io.File)\l  (r9 I:java.lang.String)\l java.io.File.\<init\>(java.io.File, java.lang.String):void type: DIRECT \l0x0028: IPUT  \l  (r7 I:java.io.File)\l  (r6 I:okhttp3.internal.cache.DiskLruCache)\l okhttp3.internal.cache.DiskLruCache.journalFile java.io.File \l0x002a: NEW_INSTANCE  (r7 I:java.io.File) =  java.io.File \l0x002c: CONST_STR  (r9 I:java.lang.String) =  \"journal.tmp\" \l0x002e: INVOKE  \l  (r7 I:java.io.File)\l  (r8 I:java.io.File)\l  (r9 I:java.lang.String)\l java.io.File.\<init\>(java.io.File, java.lang.String):void type: DIRECT \l0x0031: IPUT  \l  (r7 I:java.io.File)\l  (r6 I:okhttp3.internal.cache.DiskLruCache)\l okhttp3.internal.cache.DiskLruCache.journalFileTmp java.io.File \l0x0033: NEW_INSTANCE  (r7 I:java.io.File) =  java.io.File \l0x0035: CONST_STR  (r9 I:java.lang.String) =  \"journal.bkp\" \l0x0037: INVOKE  \l  (r7 I:java.io.File)\l  (r8 I:java.io.File)\l  (r9 I:java.lang.String)\l java.io.File.\<init\>(java.io.File, java.lang.String):void type: DIRECT \l0x003a: IPUT  \l  (r7 I:java.io.File)\l  (r6 I:okhttp3.internal.cache.DiskLruCache)\l okhttp3.internal.cache.DiskLruCache.journalFileBackup java.io.File \l0x003c: IPUT  (r10 I:int), (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.valueCount int \l0x003e: IPUT  (r11 I:long), (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.maxSize long \l0x0040: IPUT  \l  (r13 I:java.util.concurrent.Executor)\l  (r6 I:okhttp3.internal.cache.DiskLruCache)\l okhttp3.internal.cache.DiskLruCache.executor java.util.concurrent.Executor \l}"];
Node_1 [shape=record,label="{1\:\ 0x0042|0x0042: RETURN   \l}"];
MethodNode[shape=record,label="{void okhttp3.internal.cache.DiskLruCache.\<init\>((r6 'this' I:okhttp3.internal.cache.DiskLruCache A[IMMUTABLE_TYPE, THIS]), (r7 I:okhttp3.internal.io.FileSystem A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.util.concurrent.Executor A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

