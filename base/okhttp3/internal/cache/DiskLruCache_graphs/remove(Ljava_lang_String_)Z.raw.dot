digraph "CFG forokhttp3.internal.cache.DiskLruCache.remove(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r5 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.initialize():void type: VIRTUAL A[Catch:\{ all \-\> 0x0029 \}, TRY_ENTER]\l0x0004: INVOKE  (r5 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.checkNotClosed():void type: DIRECT A[Catch:\{ all \-\> 0x0029 \}]\l0x0007: INVOKE  \l  (r5 I:okhttp3.internal.cache.DiskLruCache)\l  (r6 I:java.lang.String)\l okhttp3.internal.cache.DiskLruCache.validateKey(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0029 \}]\l0x000a: IGET  (r0 I:java.util.LinkedHashMap\<java.lang.String, okhttp3.internal.cache.DiskLruCache$Entry\>) = (r5 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.lruEntries java.util.LinkedHashMap A[Catch:\{ all \-\> 0x0029 \}]\l0x000c: INVOKE  (r6 I:java.lang.Object) = (r0 I:java.util.LinkedHashMap), (r6 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0029 \}]\l0x0010: CHECK_CAST  (r6 I:okhttp3.internal.cache.DiskLruCache$Entry) = (okhttp3.internal.cache.DiskLruCache$Entry) (r6 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0029 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0017 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: MONITOR_EXIT  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: RETURN  (r0 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|SYNTHETIC\lSplitter:B:7:0x0017\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0017\l|0x0017: INVOKE  (r6 I:boolean) = \l  (r5 I:okhttp3.internal.cache.DiskLruCache)\l  (r6 I:okhttp3.internal.cache.DiskLruCache$Entry)\l okhttp3.internal.cache.DiskLruCache.removeEntry(okhttp3.internal.cache.DiskLruCache$Entry):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0029 \}, TRY_ENTER]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0027 A[Catch:\{ all \-\> 0x0029 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: IGET  (r1 I:long) = (r5 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.size long A[Catch:\{ all \-\> 0x0029 \}]\l0x001f: IGET  (r3 I:long) = (r5 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.maxSize long A[Catch:\{ all \-\> 0x0029 \}]\l0x0021: CMP_L  (r1 I:int) = (r1 I:long), (r3 I:long) A[Catch:\{ all \-\> 0x0029 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: IF  (r1 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:13:0x0027 A[Catch:\{ all \-\> 0x0029 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|0x0025: IPUT  (r0 I:boolean), (r5 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.mostRecentTrimFailed boolean A[Catch:\{ all \-\> 0x0029 \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|0x0027: MONITOR_EXIT  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|0x0028: RETURN  (r6 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0029: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x002a|0x002a: MONITOR_EXIT  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|0x002b: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized boolean okhttp3.internal.cache.DiskLruCache.remove((r5 'this' I:okhttp3.internal.cache.DiskLruCache A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

