digraph "CFG forokhttp3.internal.cache.DiskLruCache.readJournal()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.internal.io.FileSystem) = (r8 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.fileSystem okhttp3.internal.io.FileSystem \l0x0002: IGET  (r1 I:java.io.File) = (r8 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalFile java.io.File \l0x0004: INVOKE  (r0 I:okio.Source) = (r0 I:okhttp3.internal.io.FileSystem), (r1 I:java.io.File) okhttp3.internal.io.FileSystem.source(java.io.File):okio.Source type: INTERFACE \l0x0008: INVOKE  (r0 I:okio.BufferedSource) = (r0 I:okio.Source) okio.Okio.buffer(okio.Source):okio.BufferedSource type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|SYNTHETIC\lSplitter:B:1:0x000c\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x000c\l|0x000c: INVOKE  (r1 I:java.lang.String) = (r0 I:okio.BufferedSource) okio.BufferedSource.readUtf8LineStrict():java.lang.String type: INTERFACE A[Catch:\{ all \-\> 0x00ac \}, TRY_ENTER]\l0x0010: INVOKE  (r2 I:java.lang.String) = (r0 I:okio.BufferedSource) okio.BufferedSource.readUtf8LineStrict():java.lang.String type: INTERFACE A[Catch:\{ all \-\> 0x00ac \}]\l0x0014: INVOKE  (r3 I:java.lang.String) = (r0 I:okio.BufferedSource) okio.BufferedSource.readUtf8LineStrict():java.lang.String type: INTERFACE A[Catch:\{ all \-\> 0x00ac \}]\l0x0018: INVOKE  (r4 I:java.lang.String) = (r0 I:okio.BufferedSource) okio.BufferedSource.readUtf8LineStrict():java.lang.String type: INTERFACE A[Catch:\{ all \-\> 0x00ac \}]\l0x001c: INVOKE  (r5 I:java.lang.String) = (r0 I:okio.BufferedSource) okio.BufferedSource.readUtf8LineStrict():java.lang.String type: INTERFACE A[Catch:\{ all \-\> 0x00ac \}]\l0x0020: CONST_STR  (r6 I:java.lang.String) =  \"libcore.io.DiskLruCache\" A[Catch:\{ all \-\> 0x00ac \}]\l0x0022: INVOKE  (r6 I:boolean) = (r6 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0026|0x0026: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0078 A[Catch:\{ all \-\> 0x00ac \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: CONST_STR  (r6 I:java.lang.String) =  \"1\" A[Catch:\{ all \-\> 0x00ac \}]\l0x002a: INVOKE  (r6 I:boolean) = (r6 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|0x002e: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0078 A[Catch:\{ all \-\> 0x00ac \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|0x0030: IGET  (r6 I:int) = (r8 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.appVersion int A[Catch:\{ all \-\> 0x00ac \}]\l0x0032: INVOKE  (r6 I:java.lang.String) = (r6 I:int) java.lang.Integer.toString(int):java.lang.String type: STATIC A[Catch:\{ all \-\> 0x00ac \}]\l0x0036: INVOKE  (r3 I:boolean) = (r6 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x003a|0x003a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0078 A[Catch:\{ all \-\> 0x00ac \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|0x003c: IGET  (r3 I:int) = (r8 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.valueCount int A[Catch:\{ all \-\> 0x00ac \}]\l0x003e: INVOKE  (r3 I:java.lang.String) = (r3 I:int) java.lang.Integer.toString(int):java.lang.String type: STATIC A[Catch:\{ all \-\> 0x00ac \}]\l0x0042: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0046|0x0046: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0078 A[Catch:\{ all \-\> 0x00ac \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|0x0048: CONST_STR  (r3 I:java.lang.String) =  \"\" A[Catch:\{ all \-\> 0x00ac \}]\l0x004a: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l0x004d: NOP   A[TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x004e|0x004e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0078 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0050|0x0050: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0051|SYNTHETIC\lSplitter:B:13:0x0051\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x0051\l|0x0051: INVOKE  (r2 I:java.lang.String) = (r0 I:okio.BufferedSource) okio.BufferedSource.readUtf8LineStrict():java.lang.String type: INTERFACE A[Catch:\{ EOFException \-\> 0x005b \}, TRY_ENTER]\l0x0055: INVOKE  \l  (r8 I:okhttp3.internal.cache.DiskLruCache)\l  (r2 I:java.lang.String)\l okhttp3.internal.cache.DiskLruCache.readJournalLine(java.lang.String):void type: DIRECT A[Catch:\{ EOFException \-\> 0x005b \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0058|0x0058: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x005b|SYNTHETIC\lSplitter:B:16:0x005b\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x005b\l|0x005b: IGET  (r2 I:java.util.LinkedHashMap\<java.lang.String, okhttp3.internal.cache.DiskLruCache$Entry\>) = (r8 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.lruEntries java.util.LinkedHashMap A[Catch:\{ all \-\> 0x00ac \}, ExcHandler: EOFException null, TRY_ENTER]\l0x005d: INVOKE  (r2 I:int) = (r2 I:java.util.LinkedHashMap) java.util.LinkedHashMap.size():int type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l0x0061: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) A[Catch:\{ all \-\> 0x00ac \}]\l0x0062: IPUT  (r1 I:int), (r8 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.redundantOpCount int A[Catch:\{ all \-\> 0x00ac \}]\l0x0064: INVOKE  (r1 I:boolean) = (r0 I:okio.BufferedSource) okio.BufferedSource.exhausted():boolean type: INTERFACE A[Catch:\{ all \-\> 0x00ac \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0068|0x0068: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x006e A[Catch:\{ all \-\> 0x00ac \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x006a|0x006a: INVOKE  (r8 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.rebuildJournal():void type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l0x006d: GOTO  \-\> 0x0074 A[Catch:\{ all \-\> 0x00ac \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x006e|0x006e: INVOKE  (r1 I:okio.BufferedSink) = (r8 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.newJournalWriter():okio.BufferedSink type: DIRECT A[Catch:\{ all \-\> 0x00ac \}]\l0x0072: IPUT  \l  (r1 I:okio.BufferedSink)\l  (r8 I:okhttp3.internal.cache.DiskLruCache)\l okhttp3.internal.cache.DiskLruCache.journalWriter okio.BufferedSink A[Catch:\{ all \-\> 0x00ac \}, TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0074|0x0074: INVOKE  (r0 I:java.io.Closeable) okhttp3.internal.Util.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_22 [shape=record,label="{22\:\ 0x0077|0x0077: RETURN   \l}"];
Node_23 [shape=record,label="{23\:\ 0x0078|SYNTHETIC\lSplitter:B:23:0x0078\l}"];
Node_24 [shape=record,label="{24\:\ ?|Splitter:B:23:0x0078\l|0x0078: NEW_INSTANCE  (r3 I:java.io.IOException) =  java.io.IOException A[Catch:\{ all \-\> 0x00ac \}, TRY_ENTER]\l0x007a: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x00ac \}]\l0x007c: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x00ac \}]\l0x007f: CONST_STR  (r7 I:java.lang.String) =  \"unexpected journal header: [\" A[Catch:\{ all \-\> 0x00ac \}]\l0x0081: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l0x0084: INVOKE  (r6 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l0x0087: CONST_STR  (r1 I:java.lang.String) =  \", \" A[Catch:\{ all \-\> 0x00ac \}]\l0x0089: INVOKE  (r6 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l0x008c: INVOKE  (r6 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l0x008f: CONST_STR  (r1 I:java.lang.String) =  \", \" A[Catch:\{ all \-\> 0x00ac \}]\l0x0091: INVOKE  (r6 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l0x0094: INVOKE  (r6 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l0x0097: CONST_STR  (r1 I:java.lang.String) =  \", \" A[Catch:\{ all \-\> 0x00ac \}]\l0x0099: INVOKE  (r6 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l0x009c: INVOKE  (r6 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l0x009f: CONST_STR  (r1 I:java.lang.String) =  \"]\" A[Catch:\{ all \-\> 0x00ac \}]\l0x00a1: INVOKE  (r6 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l0x00a4: INVOKE  (r1 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00ac \}]\l0x00a8: INVOKE  (r3 I:java.io.IOException), (r1 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x00ac \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x00ab|0x00ab: THROW  (r3 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x00ac \}, TRY_LEAVE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x00ac|ExcHandler: all null\lSplitter:B:1:0x000c\l|0x00ac: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_27 [shape=record,label="{27\:\ 0x00ad|0x00ad: INVOKE  (r0 I:java.io.Closeable) okhttp3.internal.Util.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_28 [shape=record,label="{28\:\ 0x00b0|0x00b0: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.cache.DiskLruCache.readJournal((r8 'this' I:okhttp3.internal.cache.DiskLruCache A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_26;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_23;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_23;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_23;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_23;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_23;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_13;
Node_16 -> Node_17;
Node_16 -> Node_26;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_28;
}

