digraph "CFG forokhttp3.internal.cache.DiskLruCache.rebuildJournal()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:okio.BufferedSink) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalWriter okio.BufferedSink A[Catch:\{ all \-\> 0x00bc \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000a A[Catch:\{ all \-\> 0x00bc \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IGET  (r0 I:okio.BufferedSink) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalWriter okio.BufferedSink A[Catch:\{ all \-\> 0x00bc \}]\l0x0007: INVOKE  (r0 I:okio.BufferedSink) okio.BufferedSink.close():void type: INTERFACE A[Catch:\{ all \-\> 0x00bc \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IGET  (r0 I:okhttp3.internal.io.FileSystem) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.fileSystem okhttp3.internal.io.FileSystem A[Catch:\{ all \-\> 0x00bc \}]\l0x000c: IGET  (r1 I:java.io.File) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalFileTmp java.io.File A[Catch:\{ all \-\> 0x00bc \}]\l0x000e: INVOKE  (r0 I:okio.Sink) = (r0 I:okhttp3.internal.io.FileSystem), (r1 I:java.io.File) okhttp3.internal.io.FileSystem.sink(java.io.File):okio.Sink type: INTERFACE A[Catch:\{ all \-\> 0x00bc \}]\l0x0012: INVOKE  (r0 I:okio.BufferedSink) = (r0 I:okio.Sink) okio.Okio.buffer(okio.Sink):okio.BufferedSink type: STATIC A[Catch:\{ all \-\> 0x00bc \}]\l0x0015: NOP   A[TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: CONST_STR  (r1 I:java.lang.String) =  \"libcore.io.DiskLruCache\" \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|SYNTHETIC\lSplitter:B:7:0x0018\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0018\l|0x0018: INVOKE  (r1 I:okio.BufferedSink) = (r0 I:okio.BufferedSink), (r1 I:java.lang.String) okio.BufferedSink.writeUtf8(java.lang.String):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}, TRY_ENTER]\l0x001c: CONST  (r2 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x00b7 \}]\l0x001e: INVOKE  (r1 I:okio.BufferedSink), (r2 I:int) okio.BufferedSink.writeByte(int):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l0x0021: CONST_STR  (r1 I:java.lang.String) =  \"1\" A[Catch:\{ all \-\> 0x00b7 \}]\l0x0023: INVOKE  (r1 I:okio.BufferedSink) = (r0 I:okio.BufferedSink), (r1 I:java.lang.String) okio.BufferedSink.writeUtf8(java.lang.String):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l0x0027: INVOKE  (r1 I:okio.BufferedSink), (r2 I:int) okio.BufferedSink.writeByte(int):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l0x002a: IGET  (r1 I:int) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.appVersion int A[Catch:\{ all \-\> 0x00b7 \}]\l0x002c: CAST  (r3 I:long) = (long) (r1 I:int) A[Catch:\{ all \-\> 0x00b7 \}]\l0x002d: INVOKE  (r1 I:okio.BufferedSink) = (r0 I:okio.BufferedSink), (r3 I:long) okio.BufferedSink.writeDecimalLong(long):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l0x0031: INVOKE  (r1 I:okio.BufferedSink), (r2 I:int) okio.BufferedSink.writeByte(int):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l0x0034: IGET  (r1 I:int) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.valueCount int A[Catch:\{ all \-\> 0x00b7 \}]\l0x0036: CAST  (r3 I:long) = (long) (r1 I:int) A[Catch:\{ all \-\> 0x00b7 \}]\l0x0037: INVOKE  (r1 I:okio.BufferedSink) = (r0 I:okio.BufferedSink), (r3 I:long) okio.BufferedSink.writeDecimalLong(long):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l0x003b: INVOKE  (r1 I:okio.BufferedSink), (r2 I:int) okio.BufferedSink.writeByte(int):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l0x003e: INVOKE  (r0 I:okio.BufferedSink), (r2 I:int) okio.BufferedSink.writeByte(int):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l0x0041: IGET  (r1 I:java.util.LinkedHashMap\<java.lang.String, okhttp3.internal.cache.DiskLruCache$Entry\>) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.lruEntries java.util.LinkedHashMap A[Catch:\{ all \-\> 0x00b7 \}]\l0x0043: INVOKE  (r1 I:java.util.Collection) = (r1 I:java.util.LinkedHashMap) java.util.LinkedHashMap.values():java.util.Collection type: VIRTUAL A[Catch:\{ all \-\> 0x00b7 \}]\l0x0047: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x004b|0x004b: INVOKE  (r3 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x004f|0x004f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0084 A[Catch:\{ all \-\> 0x00b7 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0051|0x0051: INVOKE  (r3 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l0x0055: CHECK_CAST  (r3 I:okhttp3.internal.cache.DiskLruCache$Entry) = (okhttp3.internal.cache.DiskLruCache$Entry) (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x00b7 \}]\l0x0057: IGET  (r4 I:okhttp3.internal.cache.DiskLruCache$Editor) = (r3 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.currentEditor okhttp3.internal.cache.DiskLruCache$Editor A[Catch:\{ all \-\> 0x00b7 \}]\l0x0059: CONST  (r5 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x00b7 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x005b|0x005b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x006f A[Catch:\{ all \-\> 0x00b7 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x005d|0x005d: CONST_STR  (r4 I:java.lang.String) =  \"DIRTY\" A[Catch:\{ all \-\> 0x00b7 \}]\l0x005f: INVOKE  (r4 I:okio.BufferedSink) = (r0 I:okio.BufferedSink), (r4 I:java.lang.String) okio.BufferedSink.writeUtf8(java.lang.String):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l0x0063: INVOKE  (r4 I:okio.BufferedSink), (r5 I:int) okio.BufferedSink.writeByte(int):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l0x0066: IGET  (r3 I:java.lang.String) = (r3 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.key java.lang.String A[Catch:\{ all \-\> 0x00b7 \}]\l0x0068: INVOKE  (r0 I:okio.BufferedSink), (r3 I:java.lang.String) okio.BufferedSink.writeUtf8(java.lang.String):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l0x006b: INVOKE  (r0 I:okio.BufferedSink), (r2 I:int) okio.BufferedSink.writeByte(int):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l0x006e: GOTO  \-\> 0x004b A[Catch:\{ all \-\> 0x00b7 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x006f|0x006f: CONST_STR  (r4 I:java.lang.String) =  \"CLEAN\" A[Catch:\{ all \-\> 0x00b7 \}]\l0x0071: INVOKE  (r4 I:okio.BufferedSink) = (r0 I:okio.BufferedSink), (r4 I:java.lang.String) okio.BufferedSink.writeUtf8(java.lang.String):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l0x0075: INVOKE  (r4 I:okio.BufferedSink), (r5 I:int) okio.BufferedSink.writeByte(int):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l0x0078: IGET  (r4 I:java.lang.String) = (r3 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.key java.lang.String A[Catch:\{ all \-\> 0x00b7 \}]\l0x007a: INVOKE  (r0 I:okio.BufferedSink), (r4 I:java.lang.String) okio.BufferedSink.writeUtf8(java.lang.String):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}]\l0x007d: INVOKE  \l  (r3 I:okhttp3.internal.cache.DiskLruCache$Entry)\l  (r0 I:okio.BufferedSink)\l okhttp3.internal.cache.DiskLruCache.Entry.writeLengths(okio.BufferedSink):void type: VIRTUAL A[Catch:\{ all \-\> 0x00b7 \}]\l0x0080: INVOKE  (r0 I:okio.BufferedSink), (r2 I:int) okio.BufferedSink.writeByte(int):okio.BufferedSink type: INTERFACE A[Catch:\{ all \-\> 0x00b7 \}, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0084|SYNTHETIC\lSplitter:B:16:0x0084\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x0084\l|0x0084: INVOKE  (r0 I:okio.BufferedSink) okio.BufferedSink.close():void type: INTERFACE A[Catch:\{ all \-\> 0x00bc \}, TRY_ENTER]\l0x0087: IGET  (r0 I:okhttp3.internal.io.FileSystem) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.fileSystem okhttp3.internal.io.FileSystem A[Catch:\{ all \-\> 0x00bc \}]\l0x0089: IGET  (r1 I:java.io.File) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalFile java.io.File A[Catch:\{ all \-\> 0x00bc \}]\l0x008b: INVOKE  (r0 I:boolean) = (r0 I:okhttp3.internal.io.FileSystem), (r1 I:java.io.File) okhttp3.internal.io.FileSystem.exists(java.io.File):boolean type: INTERFACE A[Catch:\{ all \-\> 0x00bc \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x008f|0x008f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x009a A[Catch:\{ all \-\> 0x00bc \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0091|0x0091: IGET  (r0 I:okhttp3.internal.io.FileSystem) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.fileSystem okhttp3.internal.io.FileSystem A[Catch:\{ all \-\> 0x00bc \}]\l0x0093: IGET  (r1 I:java.io.File) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalFile java.io.File A[Catch:\{ all \-\> 0x00bc \}]\l0x0095: IGET  (r2 I:java.io.File) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalFileBackup java.io.File A[Catch:\{ all \-\> 0x00bc \}]\l0x0097: INVOKE  \l  (r0 I:okhttp3.internal.io.FileSystem)\l  (r1 I:java.io.File)\l  (r2 I:java.io.File)\l okhttp3.internal.io.FileSystem.rename(java.io.File, java.io.File):void type: INTERFACE A[Catch:\{ all \-\> 0x00bc \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x009a|0x009a: IGET  (r0 I:okhttp3.internal.io.FileSystem) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.fileSystem okhttp3.internal.io.FileSystem A[Catch:\{ all \-\> 0x00bc \}]\l0x009c: IGET  (r1 I:java.io.File) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalFileTmp java.io.File A[Catch:\{ all \-\> 0x00bc \}]\l0x009e: IGET  (r2 I:java.io.File) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalFile java.io.File A[Catch:\{ all \-\> 0x00bc \}]\l0x00a0: INVOKE  \l  (r0 I:okhttp3.internal.io.FileSystem)\l  (r1 I:java.io.File)\l  (r2 I:java.io.File)\l okhttp3.internal.io.FileSystem.rename(java.io.File, java.io.File):void type: INTERFACE A[Catch:\{ all \-\> 0x00bc \}]\l0x00a3: IGET  (r0 I:okhttp3.internal.io.FileSystem) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.fileSystem okhttp3.internal.io.FileSystem A[Catch:\{ all \-\> 0x00bc \}]\l0x00a5: IGET  (r1 I:java.io.File) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalFileBackup java.io.File A[Catch:\{ all \-\> 0x00bc \}]\l0x00a7: INVOKE  (r0 I:okhttp3.internal.io.FileSystem), (r1 I:java.io.File) okhttp3.internal.io.FileSystem.delete(java.io.File):void type: INTERFACE A[Catch:\{ all \-\> 0x00bc \}]\l0x00aa: INVOKE  (r0 I:okio.BufferedSink) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.newJournalWriter():okio.BufferedSink type: DIRECT A[Catch:\{ all \-\> 0x00bc \}]\l0x00ae: IPUT  \l  (r0 I:okio.BufferedSink)\l  (r6 I:okhttp3.internal.cache.DiskLruCache)\l okhttp3.internal.cache.DiskLruCache.journalWriter okio.BufferedSink A[Catch:\{ all \-\> 0x00bc \}]\l0x00b0: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x00bc \}]\l0x00b1: IPUT  (r0 I:boolean), (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.hasJournalErrors boolean A[Catch:\{ all \-\> 0x00bc \}]\l0x00b3: IPUT  (r0 I:boolean), (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.mostRecentRebuildFailed boolean A[Catch:\{ all \-\> 0x00bc \}, TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x00b5|0x00b5: MONITOR_EXIT  (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x00b6|0x00b6: RETURN   \l}"];
Node_23 [shape=record,label="{23\:\ 0x00b7|ExcHandler: all null\lSplitter:B:7:0x0018\l|0x00b7: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_24 [shape=record,label="{24\:\ 0x00b8|SYNTHETIC\lSplitter:B:24:0x00b8\l}"];
Node_25 [shape=record,label="{25\:\ ?|Splitter:B:24:0x00b8\l|0x00b8: INVOKE  (r0 I:okio.BufferedSink) okio.BufferedSink.close():void type: INTERFACE A[Catch:\{ all \-\> 0x00bc \}, TRY_ENTER]\l}"];
Node_26 [shape=record,label="{26\:\ 0x00bb|0x00bb: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x00bc \}, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x00bc|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x00bc: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_28 [shape=record,label="{28\:\ 0x00bd|0x00bd: MONITOR_EXIT  (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x00be|0x00be: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{synchronized void okhttp3.internal.cache.DiskLruCache.rebuildJournal((r6 'this' I:okhttp3.internal.cache.DiskLruCache A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_27;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_23;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_9;
Node_14 -> Node_9;
Node_16 -> Node_17;
Node_16 -> Node_27;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_28 -> Node_29;
}

