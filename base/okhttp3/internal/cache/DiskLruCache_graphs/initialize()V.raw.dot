digraph "CFG forokhttp3.internal.cache.DiskLruCache.initialize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:boolean) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.initialized boolean A[Catch:\{ all \-\> 0x0080 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0007 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: MONITOR_EXIT  (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|SYNTHETIC\lSplitter:B:6:0x0007\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0007\l|0x0007: IGET  (r0 I:okhttp3.internal.io.FileSystem) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.fileSystem okhttp3.internal.io.FileSystem A[Catch:\{ all \-\> 0x0080 \}, TRY_ENTER]\l0x0009: IGET  (r1 I:java.io.File) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalFileBackup java.io.File A[Catch:\{ all \-\> 0x0080 \}]\l0x000b: INVOKE  (r0 I:boolean) = (r0 I:okhttp3.internal.io.FileSystem), (r1 I:java.io.File) okhttp3.internal.io.FileSystem.exists(java.io.File):boolean type: INTERFACE A[Catch:\{ all \-\> 0x0080 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002c A[Catch:\{ all \-\> 0x0080 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|0x0011: IGET  (r0 I:okhttp3.internal.io.FileSystem) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.fileSystem okhttp3.internal.io.FileSystem A[Catch:\{ all \-\> 0x0080 \}]\l0x0013: IGET  (r1 I:java.io.File) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalFile java.io.File A[Catch:\{ all \-\> 0x0080 \}]\l0x0015: INVOKE  (r0 I:boolean) = (r0 I:okhttp3.internal.io.FileSystem), (r1 I:java.io.File) okhttp3.internal.io.FileSystem.exists(java.io.File):boolean type: INTERFACE A[Catch:\{ all \-\> 0x0080 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0023 A[Catch:\{ all \-\> 0x0080 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: IGET  (r0 I:okhttp3.internal.io.FileSystem) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.fileSystem okhttp3.internal.io.FileSystem A[Catch:\{ all \-\> 0x0080 \}]\l0x001d: IGET  (r1 I:java.io.File) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalFileBackup java.io.File A[Catch:\{ all \-\> 0x0080 \}]\l0x001f: INVOKE  (r0 I:okhttp3.internal.io.FileSystem), (r1 I:java.io.File) okhttp3.internal.io.FileSystem.delete(java.io.File):void type: INTERFACE A[Catch:\{ all \-\> 0x0080 \}]\l0x0022: GOTO  \-\> 0x002c A[Catch:\{ all \-\> 0x0080 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|0x0023: IGET  (r0 I:okhttp3.internal.io.FileSystem) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.fileSystem okhttp3.internal.io.FileSystem A[Catch:\{ all \-\> 0x0080 \}]\l0x0025: IGET  (r1 I:java.io.File) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalFileBackup java.io.File A[Catch:\{ all \-\> 0x0080 \}]\l0x0027: IGET  (r2 I:java.io.File) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalFile java.io.File A[Catch:\{ all \-\> 0x0080 \}]\l0x0029: INVOKE  \l  (r0 I:okhttp3.internal.io.FileSystem)\l  (r1 I:java.io.File)\l  (r2 I:java.io.File)\l okhttp3.internal.io.FileSystem.rename(java.io.File, java.io.File):void type: INTERFACE A[Catch:\{ all \-\> 0x0080 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|0x002c: IGET  (r0 I:okhttp3.internal.io.FileSystem) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.fileSystem okhttp3.internal.io.FileSystem A[Catch:\{ all \-\> 0x0080 \}]\l0x002e: IGET  (r1 I:java.io.File) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.journalFile java.io.File A[Catch:\{ all \-\> 0x0080 \}]\l0x0030: INVOKE  (r0 I:boolean) = (r0 I:okhttp3.internal.io.FileSystem), (r1 I:java.io.File) okhttp3.internal.io.FileSystem.exists(java.io.File):boolean type: INTERFACE A[Catch:\{ all \-\> 0x0080 \}]\l0x0033: NOP   A[TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0034|0x0034: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|0x0035: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0079 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|SYNTHETIC\lSplitter:B:16:0x0037\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x0037\l|0x0037: INVOKE  (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.readJournal():void type: DIRECT A[Catch:\{ IOException \-\> 0x0041 \}, TRY_ENTER]\l0x003a: INVOKE  (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.processJournal():void type: DIRECT A[Catch:\{ IOException \-\> 0x0041 \}]\l0x003d: IPUT  (r1 I:boolean), (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.initialized boolean A[Catch:\{ IOException \-\> 0x0041 \}, TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|0x003f: MONITOR_EXIT  (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0040|0x0040: RETURN   \l}"];
Node_20 [shape=record,label="{20\:\ 0x0041|ExcHandler: IOException null\lSplitter:B:16:0x0037\l|0x0041: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_21 [shape=record,label="{21\:\ 0x0042|SYNTHETIC\lSplitter:B:21:0x0042\l}"];
Node_22 [shape=record,label="{22\:\ ?|Splitter:B:21:0x0042\l|0x0042: INVOKE  (r2 I:okhttp3.internal.platform.Platform) =  okhttp3.internal.platform.Platform.get():okhttp3.internal.platform.Platform type: STATIC A[Catch:\{ all \-\> 0x0080 \}, TRY_ENTER]\l0x0046: CONST  (r3 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0080 \}]\l0x0047: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0080 \}]\l0x0049: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0080 \}]\l0x004c: CONST_STR  (r5 I:java.lang.String) =  \"DiskLruCache \" A[Catch:\{ all \-\> 0x0080 \}]\l0x004e: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0080 \}]\l0x0051: IGET  (r5 I:java.io.File) = (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.directory java.io.File A[Catch:\{ all \-\> 0x0080 \}]\l0x0053: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0080 \}]\l0x0056: CONST_STR  (r5 I:java.lang.String) =  \" is corrupt: \" A[Catch:\{ all \-\> 0x0080 \}]\l0x0058: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0080 \}]\l0x005b: INVOKE  (r5 I:java.lang.String) = (r0 I:java.io.IOException) java.io.IOException.getMessage():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0080 \}]\l0x005f: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0080 \}]\l0x0062: CONST_STR  (r5 I:java.lang.String) =  \", removing\" A[Catch:\{ all \-\> 0x0080 \}]\l0x0064: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0080 \}]\l0x0067: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0080 \}]\l0x006b: INVOKE  \l  (r2 I:okhttp3.internal.platform.Platform)\l  (r3 I:int)\l  (r4 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l okhttp3.internal.platform.Platform.log(int, java.lang.String, java.lang.Throwable):void type: VIRTUAL A[Catch:\{ all \-\> 0x0080 \}, TRY_LEAVE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x006e|0x006e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x006f|SYNTHETIC\lSplitter:B:24:0x006f\l}"];
Node_25 [shape=record,label="{25\:\ ?|Splitter:B:24:0x006f\l|0x006f: INVOKE  (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.delete():void type: VIRTUAL A[Catch:\{ all \-\> 0x0075 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0072|SYNTHETIC\lSplitter:B:26:0x0072\l}"];
Node_27 [shape=record,label="{27\:\ ?|Splitter:B:26:0x0072\l|0x0072: IPUT  (r0 I:boolean), (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.closed boolean A[Catch:\{ all \-\> 0x0080 \}, TRY_ENTER]\l0x0074: GOTO  \-\> 0x0079 A[Catch:\{ all \-\> 0x0080 \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0075|ExcHandler: all null\lSplitter:B:24:0x006f\l|0x0075: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0080 \}]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0076|0x0076: IPUT  (r0 I:boolean), (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.closed boolean A[Catch:\{ all \-\> 0x0080 \}]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0078|0x0078: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0080 \}]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0079|0x0079: INVOKE  (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.rebuildJournal():void type: VIRTUAL A[Catch:\{ all \-\> 0x0080 \}]\l0x007c: IPUT  (r1 I:boolean), (r6 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.initialized boolean A[Catch:\{ all \-\> 0x0080 \}, TRY_LEAVE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x007e|0x007e: MONITOR_EXIT  (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x007f|0x007f: RETURN   \l}"];
Node_34 [shape=record,label="{34\:\ 0x0080|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0080: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_35 [shape=record,label="{35\:\ 0x0081|0x0081: MONITOR_EXIT  (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0082|0x0082: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void okhttp3.internal.cache.DiskLruCache.initialize((r6 'this' I:okhttp3.internal.cache.DiskLruCache A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_34;
Node_2 -> Node_3;
Node_2 -> Node_34;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_34;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_31;
Node_16 -> Node_17;
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_34;
Node_22 -> Node_23;
Node_22 -> Node_34;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_28;
Node_24 -> Node_34;
Node_25 -> Node_26;
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_26 -> Node_34;
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_35 -> Node_36;
}

