digraph "CFG forokhttp3.internal.cache.DiskLruCache.close()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r6)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r6.initialized == false) goto L_0x0040\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006}"];
Node_5 [shape=record,label="{5\:\ 0x0008|if (r6.closed == false) goto L_0x000b\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a}"];
Node_7 [shape=record,label="{7\:\ 0x000b|okhttp3.internal.cache.DiskLruCache$Entry[] r0 = (okhttp3.internal.cache.DiskLruCache.Entry[]) r6.lruEntries.values().toArray(new okhttp3.internal.cache.DiskLruCache.Entry[r6.lruEntries.size()])\lint r2 = r0.length\lr3 = 0\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|LOOP_START\lPHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:7:0x000b, B:12:0x002e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x0021\-\>B:12:0x002e\l|if (r3 \>= r2) goto L_0x0031\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|r4 = r0[r3]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|if (r4.currentEditor == null) goto L_0x002e\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|r4.currentEditor.abort()\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|LOOP_END\lLOOP:0: B:8:0x0021\-\>B:12:0x002e\l|int r3 = r3 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|trimToSize()\lr6.journalWriter.close()\lr6.journalWriter = null\lr6.closed = true\l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|monitor\-exit(r6)\l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ 0x0040|SYNTHETIC\lSplitter:B:16:0x0040\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x0040\l|r6.closed = true\l}"];
Node_18 [shape=record,label="{18\:\ 0x0042|monitor\-exit(r6)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0043|RETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ 0x0044|REMOVE\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_21 [shape=record,label="{21\:\ 0x0045|REMOVE\l}"];
Node_22 [shape=record,label="{22\:\ 0x0046|REMOVE\l|throw r0\l}"];
Node_23 [shape=record,label="{23\:\ 0x0031|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x002e|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x002e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public synchronized void okhttp3.internal.cache.DiskLruCache.close((r6v0 'this' okhttp3.internal.cache.DiskLruCache A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_16;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_16;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_23;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_25;
Node_11 -> Node_24;
Node_12 -> Node_8;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_23 -> Node_13;
Node_24 -> Node_12;
Node_25 -> Node_12;
}

