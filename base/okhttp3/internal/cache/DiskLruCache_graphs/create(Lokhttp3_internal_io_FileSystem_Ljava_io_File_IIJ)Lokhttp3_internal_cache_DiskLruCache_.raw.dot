digraph "CFG forokhttp3.internal.cache.DiskLruCache.create(Lokhttp3\/internal\/io\/FileSystem;Ljava\/io\/File;IIJ)Lokhttp3\/internal\/cache\/DiskLruCache;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0002: CMP_L  (r0 I:int) = (r14 I:long), (r0 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x0035 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r13 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:5:0x002d \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: NEW_INSTANCE  (r0 I:java.util.concurrent.ThreadPoolExecutor) =  java.util.concurrent.ThreadPoolExecutor \l0x000a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000c: CONST  (r4 I:?[long, double]) = (60 ?[long, double]) \l0x000e: SGET  (r6 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.SECONDS java.util.concurrent.TimeUnit \l0x0010: NEW_INSTANCE  (r7 I:java.util.concurrent.LinkedBlockingQueue) =  java.util.concurrent.LinkedBlockingQueue \l0x0012: INVOKE  (r7 I:java.util.concurrent.LinkedBlockingQueue) java.util.concurrent.LinkedBlockingQueue.\<init\>():void type: DIRECT \l0x0015: CONST_STR  (r1 I:java.lang.String) =  \"OkHttp DiskLruCache\" \l0x0017: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0018: INVOKE  (r8 I:java.util.concurrent.ThreadFactory) = (r1 I:java.lang.String), (r8 I:boolean) okhttp3.internal.Util.threadFactory(java.lang.String, boolean):java.util.concurrent.ThreadFactory type: STATIC \l0x001c: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x001d: INVOKE  \l  (r1 I:java.util.concurrent.ThreadPoolExecutor)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:long)\l  (r6 I:java.util.concurrent.TimeUnit)\l  (r7 I:java.util.concurrent.BlockingQueue)\l  (r8 I:java.util.concurrent.ThreadFactory)\l java.util.concurrent.ThreadPoolExecutor.\<init\>(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue, java.util.concurrent.ThreadFactory):void type: DIRECT \l0x0020: NEW_INSTANCE  (r9 I:okhttp3.internal.cache.DiskLruCache) =  okhttp3.internal.cache.DiskLruCache \l0x0022: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0023: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0024: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0025: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0026: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0027: MOVE  (r6 I:?[long, double]) = (r14 I:?[long, double]) \l0x0028: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0029: INVOKE  \l  (r1 I:okhttp3.internal.cache.DiskLruCache)\l  (r2 I:okhttp3.internal.io.FileSystem)\l  (r3 I:java.io.File)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:long)\l  (r8 I:java.util.concurrent.Executor)\l okhttp3.internal.cache.DiskLruCache.\<init\>(okhttp3.internal.io.FileSystem, java.io.File, int, int, long, java.util.concurrent.Executor):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|0x002c: RETURN  (r9 I:okhttp3.internal.cache.DiskLruCache) \l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|0x002d: NEW_INSTANCE  (r10 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x002f: CONST_STR  (r11 I:java.lang.String) =  \"valueCount \<= 0\" \l0x0031: INVOKE  \l  (r10 I:java.lang.IllegalArgumentException)\l  (r11 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0034|0x0034: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|0x0035: NEW_INSTANCE  (r10 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0037: CONST_STR  (r11 I:java.lang.String) =  \"maxSize \<= 0\" \l0x0039: INVOKE  \l  (r10 I:java.lang.IllegalArgumentException)\l  (r11 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|0x003c: THROW  (r10 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static okhttp3.internal.cache.DiskLruCache okhttp3.internal.cache.DiskLruCache.create((r10 I:okhttp3.internal.io.FileSystem A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

