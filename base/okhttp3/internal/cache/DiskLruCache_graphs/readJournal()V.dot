digraph "CFG forokhttp3.internal.cache.DiskLruCache.readJournal()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|okio.BufferedSource r0 = okio.Okio.buffer(r8.fileSystem.source(r8.journalFile))\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|SYNTHETIC\lSplitter:B:1:0x000c\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x00ac \}\lSplitter:B:1:0x000c\l|java.lang.String r1 = r0.readUtf8LineStrict()     \/\/ Catch:\{ all \-\> 0x00ac \}\ljava.lang.String r2 = r0.readUtf8LineStrict()     \/\/ Catch:\{ all \-\> 0x00ac \}\ljava.lang.String r3 = r0.readUtf8LineStrict()     \/\/ Catch:\{ all \-\> 0x00ac \}\ljava.lang.String r4 = r0.readUtf8LineStrict()     \/\/ Catch:\{ all \-\> 0x00ac \}\ljava.lang.String r5 = r0.readUtf8LineStrict()     \/\/ Catch:\{ all \-\> 0x00ac \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0026|Catch:\{ all \-\> 0x00ac \}\l|if (MAGIC.equals(r1) == false) goto L_0x0078     \/\/ Catch:\{ all \-\> 0x00ac \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|Catch:\{ all \-\> 0x00ac \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|Catch:\{ all \-\> 0x00ac \}\l|if (VERSION_1.equals(r2) == false) goto L_0x0078     \/\/ Catch:\{ all \-\> 0x00ac \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|Catch:\{ all \-\> 0x00ac \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x003a|Catch:\{ all \-\> 0x00ac \}\l|if (java.lang.Integer.toString(r8.appVersion).equals(r3) == false) goto L_0x0078     \/\/ Catch:\{ all \-\> 0x00ac \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|Catch:\{ all \-\> 0x00ac \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0046|Catch:\{ all \-\> 0x00ac \}\l|if (java.lang.Integer.toString(r8.valueCount).equals(r4) == false) goto L_0x0078     \/\/ Catch:\{ all \-\> 0x00ac \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|Catch:\{ all \-\> 0x00ac \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x004e|if (\"\".equals(r5) == false) goto L_0x0078\l}"];
Node_12 [shape=record,label="{12\:\ 0x0050|r1 = 0\l}"];
Node_13 [shape=record,label="{13\:\ 0x0051|LOOP_START\lSYNTHETIC\lPHI: r1 \l  PHI: (r1v9 int) = (r1v8 int), (r1v13 int) binds: [B:12:0x0050, B:15:0x0058] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:13:0x0051\lLOOP:0: B:13:0x0051\-\>B:15:0x0058\l}"];
Node_14 [shape=record,label="{14\:\ ?|Catch:\{ EOFException \-\> 0x005b \}\lSplitter:B:13:0x0051\l|readJournalLine(r0.readUtf8LineStrict())     \/\/ Catch:\{ EOFException \-\> 0x005b \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0058|LOOP_END\lLOOP:0: B:13:0x0051\-\>B:15:0x0058\l|int r1 = r1 + 1\l}"];
Node_16 [shape=record,label="{16\:\ 0x005b|SYNTHETIC\lSplitter:B:16:0x005b\l}"];
Node_17 [shape=record,label="{17\:\ ?|Catch:\{ all \-\> 0x00ac \}\lSplitter:B:16:0x005b\l|r8.redundantOpCount = r1 \- r8.lruEntries.size()     \/\/ Catch:\{ all \-\> 0x00ac \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x0068|Catch:\{ all \-\> 0x00ac \}\l|if (r0.exhausted() != false) goto L_0x006e     \/\/ Catch:\{ all \-\> 0x00ac \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x006a|Catch:\{ all \-\> 0x00ac \}\l|rebuildJournal()     \/\/ Catch:\{ all \-\> 0x00ac \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x006e|Catch:\{ all \-\> 0x00ac \}\l|r8.journalWriter = newJournalWriter()     \/\/ Catch:\{ all \-\> 0x00ac \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0074|DONT_GENERATE\l|okhttp3.internal.Util.closeQuietly((java.io.Closeable) r0)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0077|RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ 0x0078|SYNTHETIC\lSplitter:B:23:0x0078\l}"];
Node_24 [shape=record,label="{24\:\ ?|Catch:\{ all \-\> 0x00ac \}\lSplitter:B:23:0x0078\l|java.lang.StringBuilder r6 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x00ac \}\lr6.append(\"unexpected journal header: [\")     \/\/ Catch:\{ all \-\> 0x00ac \}\lr6.append(r1)     \/\/ Catch:\{ all \-\> 0x00ac \}\lr6.append(\", \")     \/\/ Catch:\{ all \-\> 0x00ac \}\lr6.append(r2)     \/\/ Catch:\{ all \-\> 0x00ac \}\lr6.append(\", \")     \/\/ Catch:\{ all \-\> 0x00ac \}\lr6.append(r4)     \/\/ Catch:\{ all \-\> 0x00ac \}\lr6.append(\", \")     \/\/ Catch:\{ all \-\> 0x00ac \}\lr6.append(r5)     \/\/ Catch:\{ all \-\> 0x00ac \}\lr6.append(\"]\")     \/\/ Catch:\{ all \-\> 0x00ac \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x00ab|Catch:\{ all \-\> 0x00ac \}\l|throw new java.io.IOException(r6.toString())     \/\/ Catch:\{ all \-\> 0x00ac \}\l}"];
Node_26 [shape=record,label="{26\:\ 0x00ac|ExcHandler:  FINALLY\lSplitter:B:1:0x000c\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_27 [shape=record,label="{27\:\ 0x00ad|FINALLY_INSNS\l|okhttp3.internal.Util.closeQuietly((java.io.Closeable) r0)\l}"];
Node_28 [shape=record,label="{28\:\ 0x00b0|throw r1\l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.cache.DiskLruCache.readJournal((r8v0 'this' okhttp3.internal.cache.DiskLruCache A[IMMUTABLE_TYPE, THIS]))  | INCONSISTENT_CODE\lUnknown top exception splitter block from list: \{B:23:0x0078=Splitter:B:23:0x0078, B:16:0x005b=Splitter:B:16:0x005b\}\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_26;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_23;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_23;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_23;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_23;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_23;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_13;
Node_16 -> Node_17;
Node_16 -> Node_26;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_28;
}

