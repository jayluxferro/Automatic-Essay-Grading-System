digraph "CFG forokhttp3.internal.cache.CacheStrategy.isCacheable(Lokhttp3\/Response;Lokhttp3\/Request;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r3 I:okhttp3.Response) okhttp3.Response.code():int type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[200, 203, 204, 300, 301, 302, 307, 308, 404, 405, 410, 414, 501] t:[0x0030, 0x0030, 0x0030, 0x0030, 0x0030, 0x0009, 0x0009, 0x0030, 0x0030, 0x0030, 0x0030, 0x0030, 0x0030] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: CONST_STR  (r0 I:java.lang.String) =  \"Expires\" \l0x000b: INVOKE  (r0 I:java.lang.String) = (r3 I:okhttp3.Response), (r0 I:java.lang.String) okhttp3.Response.header(java.lang.String):java.lang.String type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0030 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: INVOKE  (r0 I:okhttp3.CacheControl) = (r3 I:okhttp3.Response) okhttp3.Response.cacheControl():okhttp3.CacheControl type: VIRTUAL \l0x0015: INVOKE  (r0 I:int) = (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.maxAgeSeconds():int type: VIRTUAL \l0x0019: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0030 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: INVOKE  (r0 I:okhttp3.CacheControl) = (r3 I:okhttp3.Response) okhttp3.Response.cacheControl():okhttp3.CacheControl type: VIRTUAL \l0x0020: INVOKE  (r0 I:boolean) = (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.isPublic():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0030 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: INVOKE  (r0 I:okhttp3.CacheControl) = (r3 I:okhttp3.Response) okhttp3.Response.cacheControl():okhttp3.CacheControl type: VIRTUAL \l0x002a: INVOKE  (r0 I:boolean) = (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.isPrivate():boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0046 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: INVOKE  (r3 I:okhttp3.CacheControl) = (r3 I:okhttp3.Response) okhttp3.Response.cacheControl():okhttp3.CacheControl type: VIRTUAL \l0x0034: INVOKE  (r3 I:boolean) = (r3 I:okhttp3.CacheControl) okhttp3.CacheControl.noStore():boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|0x0038: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0045 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|0x003a: INVOKE  (r3 I:okhttp3.CacheControl) = (r4 I:okhttp3.Request) okhttp3.Request.cacheControl():okhttp3.CacheControl type: VIRTUAL \l0x003e: INVOKE  (r3 I:boolean) = (r3 I:okhttp3.CacheControl) okhttp3.CacheControl.noStore():boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|0x0042: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0045 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|0x0044: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0045|0x0045: RETURN  (r1 I:boolean) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0046|0x0046: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean okhttp3.internal.cache.CacheStrategy.isCacheable((r3 I:okhttp3.Response A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:okhttp3.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_11;
Node_1 -> Node_17;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
}

