digraph "CFG forokhttp3.internal.cache.DiskLruCache.3.hasNext()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.internal.cache.DiskLruCache$Snapshot) = (r4 I:okhttp3.internal.cache.DiskLruCache$3) okhttp3.internal.cache.DiskLruCache.3.nextSnapshot okhttp3.internal.cache.DiskLruCache$Snapshot \l0x0002: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r0 I:okhttp3.internal.cache.DiskLruCache) = (r4 I:okhttp3.internal.cache.DiskLruCache$3) okhttp3.internal.cache.DiskLruCache.3.this$0 okhttp3.internal.cache.DiskLruCache \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|SYNTHETIC\lSplitter:B:5:0x0009\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0009\l|0x0009: IGET  (r2 I:okhttp3.internal.cache.DiskLruCache) = (r4 I:okhttp3.internal.cache.DiskLruCache$3) okhttp3.internal.cache.DiskLruCache.3.this$0 okhttp3.internal.cache.DiskLruCache A[Catch:\{ all \-\> 0x002f \}, TRY_ENTER]\l0x000b: IGET  (r2 I:boolean) = (r2 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.closed boolean A[Catch:\{ all \-\> 0x002f \}]\l0x000d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0012 A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|0x0011: RETURN  (r3 I:boolean) A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|0x0012: IGET  (r2 I:java.util.Iterator\<okhttp3.internal.cache.DiskLruCache$Entry\>) = (r4 I:okhttp3.internal.cache.DiskLruCache$3) okhttp3.internal.cache.DiskLruCache.3.delegate java.util.Iterator A[Catch:\{ all \-\> 0x002f \}]\l0x0014: INVOKE  (r2 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0018|0x0018: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x002d A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|0x001a: IGET  (r2 I:java.util.Iterator\<okhttp3.internal.cache.DiskLruCache$Entry\>) = (r4 I:okhttp3.internal.cache.DiskLruCache$3) okhttp3.internal.cache.DiskLruCache.3.delegate java.util.Iterator A[Catch:\{ all \-\> 0x002f \}]\l0x001c: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x002f \}]\l0x0020: CHECK_CAST  (r2 I:okhttp3.internal.cache.DiskLruCache$Entry) = (okhttp3.internal.cache.DiskLruCache$Entry) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}]\l0x0022: INVOKE  (r2 I:okhttp3.internal.cache.DiskLruCache$Snapshot) = (r2 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.snapshot():okhttp3.internal.cache.DiskLruCache$Snapshot type: VIRTUAL A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|0x0026: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0029 A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|0x0028: GOTO  \-\> 0x0012 A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|0x0029: IPUT  \l  (r2 I:okhttp3.internal.cache.DiskLruCache$Snapshot)\l  (r4 I:okhttp3.internal.cache.DiskLruCache$3)\l okhttp3.internal.cache.DiskLruCache.3.nextSnapshot okhttp3.internal.cache.DiskLruCache$Snapshot A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x002b|0x002b: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x002c|0x002c: RETURN  (r1 I:boolean) A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x002d|0x002d: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x002e|0x002e: RETURN  (r3 I:boolean) A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x002f|ExcHandler: all null\lSplitter:B:5:0x0009\l|0x002f: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0030|0x0030: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}, TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0031|0x0031: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public boolean okhttp3.internal.cache.DiskLruCache.3.hasNext((r4 'this' I:okhttp3.internal.cache.DiskLruCache$3 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_20;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_10;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22;
}

