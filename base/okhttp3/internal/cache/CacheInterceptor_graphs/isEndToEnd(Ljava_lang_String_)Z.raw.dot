digraph "CFG forokhttp3.internal.cache.CacheInterceptor.isEndToEnd(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"Connection\" \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.equalsIgnoreCase(java.lang.String):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0042 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST_STR  (r0 I:java.lang.String) =  \"Keep\-Alive\" \l0x000a: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.equalsIgnoreCase(java.lang.String):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0042 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: CONST_STR  (r0 I:java.lang.String) =  \"Proxy\-Authenticate\" \l0x0012: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.equalsIgnoreCase(java.lang.String):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0042 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: CONST_STR  (r0 I:java.lang.String) =  \"Proxy\-Authorization\" \l0x001a: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.equalsIgnoreCase(java.lang.String):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0042 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: CONST_STR  (r0 I:java.lang.String) =  \"TE\" \l0x0022: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.equalsIgnoreCase(java.lang.String):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0042 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: CONST_STR  (r0 I:java.lang.String) =  \"Trailers\" \l0x002a: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.equalsIgnoreCase(java.lang.String):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0042 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: CONST_STR  (r0 I:java.lang.String) =  \"Transfer\-Encoding\" \l0x0032: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.equalsIgnoreCase(java.lang.String):boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0036|0x0036: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0042 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0038|0x0038: CONST_STR  (r0 I:java.lang.String) =  \"Upgrade\" \l0x003a: INVOKE  (r1 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.equalsIgnoreCase(java.lang.String):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|0x003e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0042 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0040|0x0040: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|0x0042: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0043|0x0043: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{static boolean okhttp3.internal.cache.CacheInterceptor.isEndToEnd((r1 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_17;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_17;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
}

