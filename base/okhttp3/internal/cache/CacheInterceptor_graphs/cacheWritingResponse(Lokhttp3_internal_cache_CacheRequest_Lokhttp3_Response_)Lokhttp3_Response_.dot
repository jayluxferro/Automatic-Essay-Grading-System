digraph "CFG forokhttp3.internal.cache.CacheInterceptor.cacheWritingResponse(Lokhttp3\/internal\/cache\/CacheRequest;Lokhttp3\/Response;)Lokhttp3\/Response;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 != null) goto L_0x0003\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|RETURN\l|return r6\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|okio.Sink r0 = r5.body()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r0 != null) goto L_0x000a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|RETURN\l|return r6\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|okio.BufferedSource r1 = r6.body().source()\lokio.BufferedSink r0 = okio.Okio.buffer(r0)\lokhttp3.internal.cache.CacheInterceptor$1 r2 = new okhttp3.internal.cache.CacheInterceptor.C13881(r4)\ljava.lang.String r5 = r6.header(p018io.fabric.sdk.android.services.network.HttpRequest.HEADER_CONTENT_TYPE)\llong r0 = r6.body().contentLength()\l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|RETURN\l|return r6.newBuilder().body(new okhttp3.internal.http.RealResponseBody(r5, r0, okio.Okio.buffer((okio.Source) r2))).build()\l}"];
MethodNode[shape=record,label="{private okhttp3.Response okhttp3.internal.cache.CacheInterceptor.cacheWritingResponse((r4v0 'this' okhttp3.internal.cache.CacheInterceptor A[IMMUTABLE_TYPE, THIS]), (r5v0 okhttp3.internal.cache.CacheRequest A[DONT_INLINE, IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 okhttp3.Response A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
}

