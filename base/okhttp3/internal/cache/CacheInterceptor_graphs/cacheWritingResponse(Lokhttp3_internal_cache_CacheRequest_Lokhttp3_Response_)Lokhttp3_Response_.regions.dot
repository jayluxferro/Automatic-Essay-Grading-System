digraph "CFG forokhttp3.internal.cache.CacheInterceptor.cacheWritingResponse(Lokhttp3\/internal\/cache\/CacheRequest;Lokhttp3\/Response;)Lokhttp3\/Response;" {
subgraph cluster_Region_2112280595 {
label = "R(1:(2:(1:4)|(2:5|6))) | DECL_VAR: okio.Sink null\l";
node [shape=record,color=blue];
subgraph cluster_Region_1672708015 {
label = "R(2:(1:4)|(2:5|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_941722904 {
label = "IF [B:0:0x0000, B:3:0x0007] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 == null) goto L_0x0002\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|ADDED_TO_REGION\l|if ((r0 = r5.body()) == null) goto L_0x0009\l}"];
subgraph cluster_Region_1564214949 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|RETURN\l|return r6\l}"];
}
}
subgraph cluster_Region_162454655 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000a|okio.BufferedSource final okio.BufferedSource r1 = r6.body().source()\lokio.BufferedSink final okio.BufferedSink r0 = okio.Okio.buffer(r0)\lokhttp3.internal.cache.CacheInterceptor$1 okhttp3.internal.cache.CacheInterceptor.C13881 r2 = new okhttp3.internal.cache.CacheInterceptor.C13881()\l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|RETURN\l|return r6.newBuilder().body(new okhttp3.internal.http.RealResponseBody(r6.header(p018io.fabric.sdk.android.services.network.HttpRequest.HEADER_CONTENT_TYPE), r6.body().contentLength(), okio.Okio.buffer((okio.Source) r2))).build()\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002|RETURN\lADDED_TO_REGION\l|return r6\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0003}"];
MethodNode[shape=record,label="{private okhttp3.Response okhttp3.internal.cache.CacheInterceptor.cacheWritingResponse((r4v0 'this' okhttp3.internal.cache.CacheInterceptor A[IMMUTABLE_TYPE, THIS]), (r5v0 okhttp3.internal.cache.CacheRequest A[DONT_INLINE, IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 okhttp3.Response A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_2 -> Node_3;
}

