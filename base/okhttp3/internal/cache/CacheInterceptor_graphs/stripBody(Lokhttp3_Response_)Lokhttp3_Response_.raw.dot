digraph "CFG forokhttp3.internal.cache.CacheInterceptor.stripBody(Lokhttp3\/Response;)Lokhttp3\/Response;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0015 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:okhttp3.ResponseBody) = (r1 I:okhttp3.Response) okhttp3.Response.body():okhttp3.ResponseBody type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0015 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r1 I:okhttp3.Response$Builder) = (r1 I:okhttp3.Response) okhttp3.Response.newBuilder():okhttp3.Response$Builder type: VIRTUAL \l0x000c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: INVOKE  (r1 I:okhttp3.Response$Builder) = \l  (r1 I:okhttp3.Response$Builder)\l  (r0 I:okhttp3.ResponseBody)\l okhttp3.Response.Builder.body(okhttp3.ResponseBody):okhttp3.Response$Builder type: VIRTUAL \l0x0011: INVOKE  (r1 I:okhttp3.Response) = (r1 I:okhttp3.Response$Builder) okhttp3.Response.Builder.build():okhttp3.Response type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: RETURN  (r1 I:okhttp3.Response) \l}"];
MethodNode[shape=record,label="{private static okhttp3.Response okhttp3.internal.cache.CacheInterceptor.stripBody((r1 I:okhttp3.Response A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
}

