digraph "CFG forokhttp3.internal.cache.CacheInterceptor.isContentSpecificHeader(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (p018io.fabric.sdk.android.services.network.HttpRequest.HEADER_CONTENT_LENGTH.equalsIgnoreCase(r1) != false) goto L_0x001b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (p018io.fabric.sdk.android.services.network.HttpRequest.HEADER_CONTENT_ENCODING.equalsIgnoreCase(r1) != false) goto L_0x001b\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010}"];
Node_5 [shape=record,label="{5\:\ 0x0016|if (p018io.fabric.sdk.android.services.network.HttpRequest.HEADER_CONTENT_TYPE.equalsIgnoreCase(r1) == false) goto L_0x0019\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|SYNTHETIC\lRETURN\l|return false\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
MethodNode[shape=record,label="{static boolean okhttp3.internal.cache.CacheInterceptor.isContentSpecificHeader((r1v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
}

