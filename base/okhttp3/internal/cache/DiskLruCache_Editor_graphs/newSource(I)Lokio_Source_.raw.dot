digraph "CFG forokhttp3.internal.cache.DiskLruCache.Editor.newSource(I)Lokio\/Source;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.internal.cache.DiskLruCache) = (r4 I:okhttp3.internal.cache.DiskLruCache$Editor) okhttp3.internal.cache.DiskLruCache.Editor.this$0 okhttp3.internal.cache.DiskLruCache \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: IGET  (r1 I:boolean) = (r4 I:okhttp3.internal.cache.DiskLruCache$Editor) okhttp3.internal.cache.DiskLruCache.Editor.done boolean A[Catch:\{ all \-\> 0x002f \}, TRY_ENTER]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0029 A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IGET  (r1 I:okhttp3.internal.cache.DiskLruCache$Entry) = (r4 I:okhttp3.internal.cache.DiskLruCache$Editor) okhttp3.internal.cache.DiskLruCache.Editor.entry okhttp3.internal.cache.DiskLruCache$Entry A[Catch:\{ all \-\> 0x002f \}]\l0x0009: IGET  (r1 I:boolean) = (r1 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.readable boolean A[Catch:\{ all \-\> 0x002f \}]\l0x000b: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0027 A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IGET  (r1 I:okhttp3.internal.cache.DiskLruCache$Entry) = (r4 I:okhttp3.internal.cache.DiskLruCache$Editor) okhttp3.internal.cache.DiskLruCache.Editor.entry okhttp3.internal.cache.DiskLruCache$Entry A[Catch:\{ all \-\> 0x002f \}]\l0x0010: IGET  (r1 I:okhttp3.internal.cache.DiskLruCache$Editor) = (r1 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.currentEditor okhttp3.internal.cache.DiskLruCache$Editor A[Catch:\{ all \-\> 0x002f \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0015 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|SYNTHETIC\lSplitter:B:10:0x0015\l}"];
Node_11 [shape=record,label="{11\:\ ?|Splitter:B:10:0x0015\l|0x0015: IGET  (r1 I:okhttp3.internal.cache.DiskLruCache) = (r4 I:okhttp3.internal.cache.DiskLruCache$Editor) okhttp3.internal.cache.DiskLruCache.Editor.this$0 okhttp3.internal.cache.DiskLruCache A[Catch:\{ FileNotFoundException \-\> 0x0025 \}, TRY_ENTER]\l0x0017: IGET  (r1 I:okhttp3.internal.io.FileSystem) = (r1 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.fileSystem okhttp3.internal.io.FileSystem A[Catch:\{ FileNotFoundException \-\> 0x0025 \}]\l0x0019: IGET  (r3 I:okhttp3.internal.cache.DiskLruCache$Entry) = (r4 I:okhttp3.internal.cache.DiskLruCache$Editor) okhttp3.internal.cache.DiskLruCache.Editor.entry okhttp3.internal.cache.DiskLruCache$Entry A[Catch:\{ FileNotFoundException \-\> 0x0025 \}]\l0x001b: IGET  (r3 I:java.io.File[]) = (r3 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.cleanFiles java.io.File[] A[Catch:\{ FileNotFoundException \-\> 0x0025 \}]\l0x001d: AGET  (r5 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r5 I:?[int, short, byte, char]) A[Catch:\{ FileNotFoundException \-\> 0x0025 \}]\l0x001f: INVOKE  (r5 I:okio.Source) = (r1 I:okhttp3.internal.io.FileSystem), (r5 I:java.io.File) okhttp3.internal.io.FileSystem.source(java.io.File):okio.Source type: INTERFACE A[Catch:\{ FileNotFoundException \-\> 0x0025 \}]\l0x0022: NOP   A[TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|SYNTHETIC\lSplitter:B:12:0x0023\l}"];
Node_13 [shape=record,label="{13\:\ ?|Splitter:B:12:0x0023\l|0x0023: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}, TRY_ENTER]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|0x0024: RETURN  (r5 I:okio.Source) A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|0x0025: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lExcHandler: FileNotFoundException null\lSplitter:B:10:0x0015\l}"];
Node_17 [shape=record,label="{17\:\ 0x0026|0x0026: RETURN  (r2 I:okio.Source) A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0027|0x0027: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0028|0x0028: RETURN  (r2 I:okio.Source) A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0029|0x0029: NEW_INSTANCE  (r5 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException A[Catch:\{ all \-\> 0x002f \}]\l0x002b: INVOKE  (r5 I:java.lang.IllegalStateException) java.lang.IllegalStateException.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x002e|0x002e: THROW  (r5 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x002f|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x002f: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0030|0x0030: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002f \}, TRY_LEAVE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0031|0x0031: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public okio.Source okhttp3.internal.cache.DiskLruCache.Editor.newSource((r4 'this' I:okhttp3.internal.cache.DiskLruCache$Editor A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_22;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_20;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_18;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_18[style=dashed];
Node_10 -> Node_11;
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_22;
Node_13 -> Node_14;
Node_15 -> Node_17;
Node_16 -> Node_15;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24;
}

