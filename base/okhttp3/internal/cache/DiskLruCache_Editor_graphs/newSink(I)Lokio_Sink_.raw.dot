digraph "CFG forokhttp3.internal.cache.DiskLruCache.Editor.newSink(I)Lokio\/Sink;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.internal.cache.DiskLruCache) = (r3 I:okhttp3.internal.cache.DiskLruCache$Editor) okhttp3.internal.cache.DiskLruCache.Editor.this$0 okhttp3.internal.cache.DiskLruCache \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: IGET  (r1 I:boolean) = (r3 I:okhttp3.internal.cache.DiskLruCache$Editor) okhttp3.internal.cache.DiskLruCache.Editor.done boolean A[Catch:\{ all \-\> 0x003f \}, TRY_ENTER]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0039 A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IGET  (r1 I:okhttp3.internal.cache.DiskLruCache$Entry) = (r3 I:okhttp3.internal.cache.DiskLruCache$Editor) okhttp3.internal.cache.DiskLruCache.Editor.entry okhttp3.internal.cache.DiskLruCache$Entry A[Catch:\{ all \-\> 0x003f \}]\l0x0009: IGET  (r1 I:okhttp3.internal.cache.DiskLruCache$Editor) = (r1 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.currentEditor okhttp3.internal.cache.DiskLruCache$Editor A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0013 A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: INVOKE  (r4 I:okio.Sink) =  okio.Okio.blackhole():okio.Sink type: STATIC A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: RETURN  (r4 I:okio.Sink) A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0013|0x0013: IGET  (r1 I:okhttp3.internal.cache.DiskLruCache$Entry) = (r3 I:okhttp3.internal.cache.DiskLruCache$Editor) okhttp3.internal.cache.DiskLruCache.Editor.entry okhttp3.internal.cache.DiskLruCache$Entry A[Catch:\{ all \-\> 0x003f \}]\l0x0015: IGET  (r1 I:boolean) = (r1 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.readable boolean A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001e A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0019|0x0019: IGET  (r1 I:boolean[]) = (r3 I:okhttp3.internal.cache.DiskLruCache$Editor) okhttp3.internal.cache.DiskLruCache.Editor.written boolean[] A[Catch:\{ all \-\> 0x003f \}]\l0x001b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x003f \}]\l0x001c: APUT  \l  (r1 I:boolean[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l  (r2 I:boolean A[IMMUTABLE_TYPE])\l A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|0x001e: IGET  (r1 I:okhttp3.internal.cache.DiskLruCache$Entry) = (r3 I:okhttp3.internal.cache.DiskLruCache$Editor) okhttp3.internal.cache.DiskLruCache.Editor.entry okhttp3.internal.cache.DiskLruCache$Entry A[Catch:\{ all \-\> 0x003f \}]\l0x0020: IGET  (r1 I:java.io.File[]) = (r1 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.dirtyFiles java.io.File[] A[Catch:\{ all \-\> 0x003f \}]\l0x0022: AGET  (r4 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x003f \}, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|SYNTHETIC\lSplitter:B:14:0x0024\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x0024\l|0x0024: IGET  (r1 I:okhttp3.internal.cache.DiskLruCache) = (r3 I:okhttp3.internal.cache.DiskLruCache$Editor) okhttp3.internal.cache.DiskLruCache.Editor.this$0 okhttp3.internal.cache.DiskLruCache A[Catch:\{ FileNotFoundException \-\> 0x0033 \}, TRY_ENTER]\l0x0026: IGET  (r1 I:okhttp3.internal.io.FileSystem) = (r1 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.fileSystem okhttp3.internal.io.FileSystem A[Catch:\{ FileNotFoundException \-\> 0x0033 \}]\l0x0028: INVOKE  (r4 I:okio.Sink) = (r1 I:okhttp3.internal.io.FileSystem), (r4 I:java.io.File) okhttp3.internal.io.FileSystem.sink(java.io.File):okio.Sink type: INTERFACE A[Catch:\{ FileNotFoundException \-\> 0x0033 \}]\l0x002b: NOP   A[TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x002c|SYNTHETIC\lSplitter:B:16:0x002c\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x002c\l|0x002c: NEW_INSTANCE  (r1 I:okhttp3.internal.cache.DiskLruCache$Editor$1) =  okhttp3.internal.cache.DiskLruCache$Editor$1 A[Catch:\{ all \-\> 0x003f \}, TRY_ENTER]\l0x002e: INVOKE  \l  (r1 I:okhttp3.internal.cache.DiskLruCache$Editor$1)\l  (r3 I:okhttp3.internal.cache.DiskLruCache$Editor)\l  (r4 I:okio.Sink)\l okhttp3.internal.cache.DiskLruCache.Editor.1.\<init\>(okhttp3.internal.cache.DiskLruCache$Editor, okio.Sink):void type: DIRECT A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0031|0x0031: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0032|0x0032: RETURN  (r1 I:okio.Sink) A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0033|0x0033: INVOKE  (r4 I:okio.Sink) =  okio.Okio.blackhole():okio.Sink type: STATIC A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lExcHandler: FileNotFoundException null\lSplitter:B:14:0x0024\l}"];
Node_22 [shape=record,label="{22\:\ 0x0037|0x0037: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0038|0x0038: RETURN  (r4 I:okio.Sink) A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0039|0x0039: NEW_INSTANCE  (r4 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException A[Catch:\{ all \-\> 0x003f \}]\l0x003b: INVOKE  (r4 I:java.lang.IllegalStateException) java.lang.IllegalStateException.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x003e|0x003e: THROW  (r4 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x003f|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x003f: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0040|0x0040: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003f \}, TRY_LEAVE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0041|0x0041: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public okio.Sink okhttp3.internal.cache.DiskLruCache.Editor.newSink((r3 'this' I:okhttp3.internal.cache.DiskLruCache$Editor A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_26;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_24;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_26;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_22;
Node_21 -> Node_20;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_28;
}

