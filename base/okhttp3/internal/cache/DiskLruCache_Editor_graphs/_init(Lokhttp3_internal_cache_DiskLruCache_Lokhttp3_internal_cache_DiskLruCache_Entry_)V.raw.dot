digraph "CFG forokhttp3.internal.cache.DiskLruCache.Editor.\<init\>(Lokhttp3\/internal\/cache\/DiskLruCache;Lokhttp3\/internal\/cache\/DiskLruCache$Entry;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r1 I:okhttp3.internal.cache.DiskLruCache)\l  (r0 I:okhttp3.internal.cache.DiskLruCache$Editor)\l okhttp3.internal.cache.DiskLruCache.Editor.this$0 okhttp3.internal.cache.DiskLruCache \l0x0002: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0005: IPUT  \l  (r2 I:okhttp3.internal.cache.DiskLruCache$Entry)\l  (r0 I:okhttp3.internal.cache.DiskLruCache$Editor)\l okhttp3.internal.cache.DiskLruCache.Editor.entry okhttp3.internal.cache.DiskLruCache$Entry \l0x0007: IGET  (r2 I:boolean) = (r2 I:okhttp3.internal.cache.DiskLruCache$Entry) okhttp3.internal.cache.DiskLruCache.Entry.readable boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IGET  (r1 I:int) = (r1 I:okhttp3.internal.cache.DiskLruCache) okhttp3.internal.cache.DiskLruCache.valueCount int \l0x000f: NEW_ARRAY  (r1 I:boolean[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: boolean[] \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IPUT  \l  (r1 I:boolean[])\l  (r0 I:okhttp3.internal.cache.DiskLruCache$Editor)\l okhttp3.internal.cache.DiskLruCache.Editor.written boolean[] \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: RETURN   \l}"];
MethodNode[shape=record,label="{void okhttp3.internal.cache.DiskLruCache.Editor.\<init\>((r0 'this' I:okhttp3.internal.cache.DiskLruCache$Editor A[IMMUTABLE_TYPE, THIS]), (r1 I:okhttp3.internal.cache.DiskLruCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:okhttp3.internal.cache.DiskLruCache$Entry A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

