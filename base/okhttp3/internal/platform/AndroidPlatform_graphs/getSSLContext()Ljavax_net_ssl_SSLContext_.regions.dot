digraph "CFG forokhttp3.internal.platform.AndroidPlatform.getSSLContext()Ljavax\/net\/ssl\/SSLContext;" {
subgraph cluster_Region_821060482 {
label = "R(2:(1:(1:7))|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2108283426 {
label = "IF [B:1:0x0004, B:3:0x000a] THEN: R(1:(1:7)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|ADDED_TO_REGION\l|if (android.os.Build.VERSION.SDK_INT \>= 16) goto L_0x0006\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|ADDED_TO_REGION\l|if (android.os.Build.VERSION.SDK_INT \< 22) goto L_0x000c\l}"];
subgraph cluster_Region_735315417 {
label = "R(1:(1:7))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_595112400 {
label = "Try: R(1:7) catches: R(0)";
node [shape=record,color=blue];
subgraph cluster_Region_271006286 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0012|RETURN\l|return javax.net.ssl.SSLContext.getInstance(\"TLSv1.2\")\l}"];
}
subgraph cluster_Region_602704546 {
label = "R(0) | ExcHandler: NoSuchAlgorithmException (unused java.security.NoSuchAlgorithmException)\l";
node [shape=record,color=blue];
}
}
}
}
subgraph cluster_TryCatchRegion_673032651 {
label = "Try: R(1:12) catches: R(2:13|15)";
node [shape=record,color=blue];
subgraph cluster_Region_1317894953 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0019|RETURN\l|return javax.net.ssl.SSLContext.getInstance(\"TLS\")\l}"];
}
subgraph cluster_Region_1733418492 {
label = "R(2:13|15) | ExcHandler: NoSuchAlgorithmException (r0v2 'e' java.security.NoSuchAlgorithmException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x001a|ExcHandler: NoSuchAlgorithmException (r0v2 'e' java.security.NoSuchAlgorithmException A[CUSTOM_DECLARE])\lSplitter:B:10:0x0015\l}"];
Node_15 [shape=record,label="{15\:\ 0x0022|throw new java.lang.IllegalStateException(\"No TLS provider\", r0)\l}"];
}
}
}
subgraph cluster_Region_602704546 {
label = "R(0) | ExcHandler: NoSuchAlgorithmException (unused java.security.NoSuchAlgorithmException)\l";
node [shape=record,color=blue];
}
subgraph cluster_Region_1733418492 {
label = "R(2:13|15) | ExcHandler: NoSuchAlgorithmException (r0v2 'e' java.security.NoSuchAlgorithmException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x001a|ExcHandler: NoSuchAlgorithmException (r0v2 'e' java.security.NoSuchAlgorithmException A[CUSTOM_DECLARE])\lSplitter:B:10:0x0015\l}"];
Node_15 [shape=record,label="{15\:\ 0x0022|throw new java.lang.IllegalStateException(\"No TLS provider\", r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000c}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000e|SYNTHETIC\lSplitter:B:5:0x000e\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|Catch:\{ NoSuchAlgorithmException \-\> 0x0013 \}\lSplitter:B:5:0x000e\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0013}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\lExcHandler: NoSuchAlgorithmException (unused java.security.NoSuchAlgorithmException)\lSplitter:B:5:0x000e\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0015|SYNTHETIC\lSplitter:B:10:0x0015\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|Catch:\{ NoSuchAlgorithmException \-\> 0x001a \}\lSplitter:B:10:0x0015\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x001b}"];
MethodNode[shape=record,label="{public javax.net.ssl.SSLContext okhttp3.internal.platform.AndroidPlatform.getSSLContext((r3v0 'this' okhttp3.internal.platform.AndroidPlatform A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_8[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_8[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_14;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_8 -> Node_10;
Node_9 -> Node_8;
Node_10 -> Node_11;
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_14 -> Node_15;
}

