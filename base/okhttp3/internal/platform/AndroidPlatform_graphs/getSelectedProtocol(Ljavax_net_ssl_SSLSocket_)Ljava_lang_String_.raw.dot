digraph "CFG forokhttp3.internal.platform.AndroidPlatform.getSelectedProtocol(Ljavax\/net\/ssl\/SSLSocket;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.internal.platform.OptionalMethod\<java.net.Socket\>) = (r3 I:okhttp3.internal.platform.AndroidPlatform) okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol okhttp3.internal.platform.OptionalMethod \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r1 I:java.lang.String) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r0 I:okhttp3.internal.platform.OptionalMethod\<java.net.Socket\>) = (r3 I:okhttp3.internal.platform.AndroidPlatform) okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol okhttp3.internal.platform.OptionalMethod \l0x0008: INVOKE  (r0 I:boolean) = \l  (r0 I:okhttp3.internal.platform.OptionalMethod)\l  (r4 I:java.lang.Object)\l okhttp3.internal.platform.OptionalMethod.isSupported(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: RETURN  (r1 I:java.lang.String) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IGET  (r0 I:okhttp3.internal.platform.OptionalMethod\<java.net.Socket\>) = (r3 I:okhttp3.internal.platform.AndroidPlatform) okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol okhttp3.internal.platform.OptionalMethod \l0x0011: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0014: INVOKE  (r4 I:java.lang.Object) = \l  (r0 I:okhttp3.internal.platform.OptionalMethod)\l  (r4 I:java.lang.Object)\l  (r2 I:java.lang.Object[])\l okhttp3.internal.platform.OptionalMethod.invokeWithoutCheckedException(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL \l0x0018: CHECK_CAST  (r4 I:byte[]) = (byte[]) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0023 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: NEW_INSTANCE  (r1 I:java.lang.String) =  java.lang.String \l0x001e: SGET  (r0 I:java.nio.charset.Charset) =  okhttp3.internal.Util.UTF_8 java.nio.charset.Charset \l0x0020: INVOKE  \l  (r1 I:java.lang.String)\l  (r4 I:byte[])\l  (r0 I:java.nio.charset.Charset)\l java.lang.String.\<init\>(byte[], java.nio.charset.Charset):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: RETURN  (r1 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String okhttp3.internal.platform.AndroidPlatform.getSelectedProtocol((r3 'this' I:okhttp3.internal.platform.AndroidPlatform A[IMMUTABLE_TYPE, THIS]), (r4 I:javax.net.ssl.SSLSocket A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
}

