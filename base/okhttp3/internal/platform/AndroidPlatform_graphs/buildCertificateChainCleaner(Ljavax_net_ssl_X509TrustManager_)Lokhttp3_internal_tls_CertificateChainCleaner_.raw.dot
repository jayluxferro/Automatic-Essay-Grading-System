digraph "CFG forokhttp3.internal.platform.AndroidPlatform.buildCertificateChainCleaner(Ljavax\/net\/ssl\/X509TrustManager;)Lokhttp3\/internal\/tls\/CertificateChainCleaner;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"android.net.http.X509TrustManagerExtensions\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0002\l|0x0002: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ Exception \-\> 0x0036 \}, TRY_ENTER]\l0x0006: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0036 \}]\l0x0007: NEW_ARRAY  (r2 I:java.lang.Class[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ Exception \-\> 0x0036 \}]\l0x0009: CONST_CLASS  (r3 I:java.lang.Class\<javax.net.ssl.X509TrustManager\>) =  javax.net.ssl.X509TrustManager.class A[Catch:\{ Exception \-\> 0x0036 \}]\l0x000b: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0036 \}]\l0x000c: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0036 \}]\l0x000e: INVOKE  (r2 I:java.lang.reflect.Constructor) = (r0 I:java.lang.Class), (r2 I:java.lang.Class[]) java.lang.Class.getConstructor(java.lang.Class[]):java.lang.reflect.Constructor type: VIRTUAL A[Catch:\{ Exception \-\> 0x0036 \}]\l0x0012: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ Exception \-\> 0x0036 \}]\l0x0014: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r8 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0036 \}]\l0x0016: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:java.lang.reflect.Constructor)\l  (r3 I:java.lang.Object[])\l java.lang.reflect.Constructor.newInstance(java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ Exception \-\> 0x0036 \}]\l0x001a: CONST_STR  (r3 I:java.lang.String) =  \"checkServerTrusted\" A[Catch:\{ Exception \-\> 0x0036 \}]\l0x001c: CONST  (r5 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0036 \}]\l0x001d: NEW_ARRAY  (r5 I:java.lang.Class[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ Exception \-\> 0x0036 \}]\l0x001f: CONST_CLASS  (r6 I:java.lang.Class\<java.security.cert.X509Certificate[]\>) =  java.security.cert.X509Certificate[].class A[Catch:\{ Exception \-\> 0x0036 \}]\l0x0021: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0036 \}]\l0x0023: CONST_CLASS  (r4 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class A[Catch:\{ Exception \-\> 0x0036 \}]\l0x0025: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0036 \}]\l0x0027: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0036 \}]\l0x0028: CONST_CLASS  (r4 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class A[Catch:\{ Exception \-\> 0x0036 \}]\l0x002a: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0036 \}]\l0x002c: INVOKE  (r0 I:java.lang.reflect.Method) = \l  (r0 I:java.lang.Class)\l  (r3 I:java.lang.String)\l  (r5 I:java.lang.Class[])\l java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method type: VIRTUAL A[Catch:\{ Exception \-\> 0x0036 \}]\l0x0030: NEW_INSTANCE  (r1 I:okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner) =  okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner A[Catch:\{ Exception \-\> 0x0036 \}]\l0x0032: INVOKE  \l  (r1 I:okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner)\l  (r2 I:java.lang.Object)\l  (r0 I:java.lang.reflect.Method)\l okhttp3.internal.platform.AndroidPlatform.AndroidCertificateChainCleaner.\<init\>(java.lang.Object, java.lang.reflect.Method):void type: DIRECT A[Catch:\{ Exception \-\> 0x0036 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0035|0x0035: RETURN  (r1 I:okhttp3.internal.tls.CertificateChainCleaner) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0036|0x0036: INVOKE  (r8 I:okhttp3.internal.tls.CertificateChainCleaner) = \l  (r7 I:okhttp3.internal.platform.Platform)\l  (r8 I:javax.net.ssl.X509TrustManager)\l okhttp3.internal.platform.Platform.buildCertificateChainCleaner(javax.net.ssl.X509TrustManager):okhttp3.internal.tls.CertificateChainCleaner type: SUPER \l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lExcHandler: Exception null\lSplitter:B:1:0x0002\l}"];
Node_6 [shape=record,label="{6\:\ 0x003a|0x003a: RETURN  (r8 I:okhttp3.internal.tls.CertificateChainCleaner) \l}"];
MethodNode[shape=record,label="{public okhttp3.internal.tls.CertificateChainCleaner okhttp3.internal.platform.AndroidPlatform.buildCertificateChainCleaner((r7 'this' I:okhttp3.internal.platform.AndroidPlatform A[IMMUTABLE_TYPE, THIS]), (r8 I:javax.net.ssl.X509TrustManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_4;
}

