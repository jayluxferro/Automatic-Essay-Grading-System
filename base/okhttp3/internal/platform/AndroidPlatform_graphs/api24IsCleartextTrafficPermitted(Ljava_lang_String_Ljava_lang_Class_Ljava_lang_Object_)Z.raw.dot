digraph "CFG forokhttp3.internal.platform.AndroidPlatform.api24IsCleartextTrafficPermitted(Ljava\/lang\/String;Ljava\/lang\/Class;Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"isCleartextTrafficPermitted\" \l0x0002: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: NEW_ARRAY  (r2 I:java.lang.Class[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ NoSuchMethodException \-\> 0x001d \}, TRY_ENTER]\l0x0005: CONST_CLASS  (r3 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class A[Catch:\{ NoSuchMethodException \-\> 0x001d \}]\l0x0007: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ NoSuchMethodException \-\> 0x001d \}]\l0x0008: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l A[Catch:\{ NoSuchMethodException \-\> 0x001d \}]\l0x000a: INVOKE  (r0 I:java.lang.reflect.Method) = \l  (r7 I:java.lang.Class)\l  (r0 I:java.lang.String)\l  (r2 I:java.lang.Class[])\l java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method type: VIRTUAL A[Catch:\{ NoSuchMethodException \-\> 0x001d \}]\l0x000e: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ NoSuchMethodException \-\> 0x001d \}]\l0x0010: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l A[Catch:\{ NoSuchMethodException \-\> 0x001d \}]\l0x0012: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Method)\l  (r8 I:java.lang.Object)\l  (r1 I:java.lang.Object[])\l java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ NoSuchMethodException \-\> 0x001d \}]\l0x0016: CHECK_CAST  (r0 I:java.lang.Boolean) = (java.lang.Boolean) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ NoSuchMethodException \-\> 0x001d \}]\l0x0018: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL A[Catch:\{ NoSuchMethodException \-\> 0x001d \}]\l0x001b: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: RETURN  (r0 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: INVOKE  (r6 I:boolean) = \l  (r5 I:okhttp3.internal.platform.AndroidPlatform)\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.Class)\l  (r8 I:java.lang.Object)\l okhttp3.internal.platform.AndroidPlatform.api23IsCleartextTrafficPermitted(java.lang.String, java.lang.Class, java.lang.Object):boolean type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lExcHandler: NoSuchMethodException null\lSplitter:B:1:0x0003\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: RETURN  (r6 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean okhttp3.internal.platform.AndroidPlatform.api24IsCleartextTrafficPermitted((r5 'this' I:okhttp3.internal.platform.AndroidPlatform A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.reflect.InvocationTargetException, java.lang.IllegalAccessException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/lang\/Class\<, *\>;, Ljava\/lang\/Object;, )Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_4 -> Node_6;
Node_5 -> Node_4;
}

