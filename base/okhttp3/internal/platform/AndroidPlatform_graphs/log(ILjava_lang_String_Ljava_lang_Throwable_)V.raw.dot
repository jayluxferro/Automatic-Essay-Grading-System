digraph "CFG forokhttp3.internal.platform.AndroidPlatform.log(ILjava\/lang\/String;Ljava\/lang\/Throwable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: CONST  (r6 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001f \l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000b: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000e: INVOKE  (r1 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0011: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0014: INVOKE  (r7 I:java.lang.String) = (r8 I:java.lang.Throwable) android.util.Log.getStackTraceString(java.lang.Throwable):java.lang.String type: STATIC \l0x0018: INVOKE  (r1 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001b: INVOKE  (r7 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0020: INVOKE  (r1 I:int) = (r7 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: IF  (r8 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:17:0x0045 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: INVOKE  (r2 I:int) = (r7 I:java.lang.String), (r6 I:int), (r8 I:int) java.lang.String.indexOf(int, int):int type: VIRTUAL \l0x002a: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002e \l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|0x002e: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: ARITH  (r3 I:int) = (r8 I:int) + (4000 int) \l0x0031: INVOKE  (r3 I:int) = (r2 I:int), (r3 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x0035: CONST_STR  (r4 I:java.lang.String) =  \"OkHttp\" \l0x0037: INVOKE  (r8 I:java.lang.String) = (r7 I:java.lang.String), (r8 I:int), (r3 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x003b: INVOKE  \l  (r0 I:int)\l  (r4 I:java.lang.String)\l  (r8 I:java.lang.String)\l android.util.Log.println(int, java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|0x003e: IF  (r3 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:16:0x0043 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0040|0x0040: ARITH  (r8 I:int) = (r3 I:int) + (1 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0043|0x0043: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0045|0x0045: RETURN   \l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.platform.AndroidPlatform.log((r5 'this' I:okhttp3.internal.platform.AndroidPlatform A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.Throwable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_4[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_13[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_8;
Node_16 -> Node_13;
}

