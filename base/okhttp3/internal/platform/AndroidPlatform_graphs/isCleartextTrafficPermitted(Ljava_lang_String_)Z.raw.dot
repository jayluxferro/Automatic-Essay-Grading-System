digraph "CFG forokhttp3.internal.platform.AndroidPlatform.isCleartextTrafficPermitted(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"android.security.NetworkSecurityPolicy\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0002\l|0x0002: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0023, IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x001b \}, TRY_ENTER]\l0x0006: CONST_STR  (r1 I:java.lang.String) =  \"getInstance\" A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0023, IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x001b \}]\l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0023, IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x001b \}]\l0x0009: NEW_ARRAY  (r3 I:java.lang.Class[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0023, IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x001b \}]\l0x000b: INVOKE  (r1 I:java.lang.reflect.Method) = \l  (r0 I:java.lang.Class)\l  (r1 I:java.lang.String)\l  (r3 I:java.lang.Class[])\l java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method type: VIRTUAL A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0023, IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x001b \}]\l0x000f: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0023, IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x001b \}]\l0x0010: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0023, IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x001b \}]\l0x0012: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:java.lang.reflect.Method)\l  (r3 I:java.lang.Object)\l  (r2 I:java.lang.Object[])\l java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0023, IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x001b \}]\l0x0016: INVOKE  (r0 I:boolean) = \l  (r4 I:okhttp3.internal.platform.AndroidPlatform)\l  (r5 I:java.lang.String)\l  (r0 I:java.lang.Class)\l  (r1 I:java.lang.Object)\l okhttp3.internal.platform.AndroidPlatform.api24IsCleartextTrafficPermitted(java.lang.String, java.lang.Class, java.lang.Object):boolean type: DIRECT A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0023, IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x001b \}]\l0x0019: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: RETURN  (r0 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|ExcHandler: IllegalAccessException \| IllegalArgumentException \| InvocationTargetException null\lSplitter:B:1:0x0002\l|0x001b: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: CONST_STR  (r0 I:java.lang.String) =  \"unable to determine cleartext support\" \l0x001e: INVOKE  (r5 I:java.lang.AssertionError) = (r0 I:java.lang.String), (r5 I:java.lang.Exception) okhttp3.internal.Util.assertionError(java.lang.String, java.lang.Exception):java.lang.AssertionError type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: INVOKE  (r5 I:boolean) = \l  (r4 I:okhttp3.internal.platform.Platform)\l  (r5 I:java.lang.String)\l okhttp3.internal.platform.Platform.isCleartextTrafficPermitted(java.lang.String):boolean type: SUPER \l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lExcHandler: ClassNotFoundException \| NoSuchMethodException null\lSplitter:B:1:0x0002\l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: RETURN  (r5 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean okhttp3.internal.platform.AndroidPlatform.isCleartextTrafficPermitted((r4 'this' I:okhttp3.internal.platform.AndroidPlatform A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_9;
Node_8 -> Node_7;
}

