digraph "CFG forokhttp3.internal.platform.AndroidPlatform.buildIfSupported()Lokhttp3\/internal\/platform\/Platform;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST_STR  (r1 I:java.lang.String) =  \"com.android.org.conscrypt.SSLParametersImpl\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: INVOKE  (r1 I:java.lang.Class) = (r1 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ ClassNotFoundException \-\> 0x0009 \}, TRY_ENTER]\l0x0006: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: CONST_STR  (r1 I:java.lang.String) =  \"org.apache.harmony.xnet.provider.jsse.SSLParametersImpl\" \l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lExcHandler: ClassNotFoundException null\lSplitter:B:1:0x0003\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|SYNTHETIC\lSplitter:B:6:0x000b\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x000b\l|0x000b: INVOKE  (r1 I:java.lang.Class) = (r1 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}, TRY_ENTER]\l0x000f: GOTO  \-\> 0x0007 A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: NEW_INSTANCE  (r4 I:okhttp3.internal.platform.OptionalMethod) =  okhttp3.internal.platform.OptionalMethod A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0012: CONST_STR  (r1 I:java.lang.String) =  \"setUseSessionTickets\" A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0014: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0015: NEW_ARRAY  (r5 I:java.lang.Class[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0017: SGET  (r6 I:java.lang.Class) =  java.lang.Boolean.TYPE java.lang.Class A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0019: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x001a: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x001c: INVOKE  \l  (r4 I:okhttp3.internal.platform.OptionalMethod)\l  (r0 I:java.lang.Class)\l  (r1 I:java.lang.String)\l  (r5 I:java.lang.Class[])\l okhttp3.internal.platform.OptionalMethod.\<init\>(java.lang.Class, java.lang.String, java.lang.Class[]):void type: DIRECT A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x001f: NEW_INSTANCE  (r5 I:okhttp3.internal.platform.OptionalMethod) =  okhttp3.internal.platform.OptionalMethod A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0021: CONST_STR  (r1 I:java.lang.String) =  \"setHostname\" A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0023: NEW_ARRAY  (r6 I:java.lang.Class[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0025: CONST_CLASS  (r8 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0027: APUT  \l  (r6 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r8 I:?[OBJECT, ARRAY])\l A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0029: INVOKE  \l  (r5 I:okhttp3.internal.platform.OptionalMethod)\l  (r0 I:java.lang.Class)\l  (r1 I:java.lang.String)\l  (r6 I:java.lang.Class[])\l okhttp3.internal.platform.OptionalMethod.\<init\>(java.lang.Class, java.lang.String, java.lang.Class[]):void type: DIRECT A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x002c: INVOKE  (r1 I:boolean) =  okhttp3.internal.platform.AndroidPlatform.supportsAlpn():boolean type: STATIC A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x004d A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|0x0032: NEW_INSTANCE  (r1 I:okhttp3.internal.platform.OptionalMethod) =  okhttp3.internal.platform.OptionalMethod A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0034: CONST_CLASS  (r6 I:java.lang.Class\<byte[]\>) =  byte[].class A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0036: CONST_STR  (r8 I:java.lang.String) =  \"getAlpnSelectedProtocol\" A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0038: NEW_ARRAY  (r9 I:java.lang.Class[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x003a: INVOKE  \l  (r1 I:okhttp3.internal.platform.OptionalMethod)\l  (r6 I:java.lang.Class)\l  (r8 I:java.lang.String)\l  (r9 I:java.lang.Class[])\l okhttp3.internal.platform.OptionalMethod.\<init\>(java.lang.Class, java.lang.String, java.lang.Class[]):void type: DIRECT A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x003d: NEW_INSTANCE  (r6 I:okhttp3.internal.platform.OptionalMethod) =  okhttp3.internal.platform.OptionalMethod A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x003f: CONST_STR  (r8 I:java.lang.String) =  \"setAlpnProtocols\" A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0041: NEW_ARRAY  (r2 I:java.lang.Class[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0043: CONST_CLASS  (r9 I:java.lang.Class\<byte[]\>) =  byte[].class A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0045: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r9 I:?[OBJECT, ARRAY])\l A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0047: INVOKE  \l  (r6 I:okhttp3.internal.platform.OptionalMethod)\l  (r0 I:java.lang.Class)\l  (r8 I:java.lang.String)\l  (r2 I:java.lang.Class[])\l okhttp3.internal.platform.OptionalMethod.\<init\>(java.lang.Class, java.lang.String, java.lang.Class[]):void type: DIRECT A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x004a: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x004b: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x004c: GOTO  \-\> 0x004f A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x004d|0x004d: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x004e: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x004f|0x004f: NEW_INSTANCE  (r1 I:okhttp3.internal.platform.AndroidPlatform) =  okhttp3.internal.platform.AndroidPlatform A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0051: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}]\l0x0052: INVOKE  \l  (r2 I:okhttp3.internal.platform.AndroidPlatform)\l  (r3 I:java.lang.Class)\l  (r4 I:okhttp3.internal.platform.OptionalMethod)\l  (r5 I:okhttp3.internal.platform.OptionalMethod)\l  (r6 I:okhttp3.internal.platform.OptionalMethod)\l  (r7 I:okhttp3.internal.platform.OptionalMethod)\l okhttp3.internal.platform.AndroidPlatform.\<init\>(java.lang.Class, okhttp3.internal.platform.OptionalMethod, okhttp3.internal.platform.OptionalMethod, okhttp3.internal.platform.OptionalMethod, okhttp3.internal.platform.OptionalMethod):void type: DIRECT A[Catch:\{ ClassNotFoundException \-\> 0x0056 \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0055|0x0055: RETURN  (r1 I:okhttp3.internal.platform.Platform) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0056|0x0056: RETURN  (r0 I:okhttp3.internal.platform.Platform) \l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lExcHandler: ClassNotFoundException null\lSplitter:B:6:0x000b\l}"];
MethodNode[shape=record,label="{public static okhttp3.internal.platform.Platform okhttp3.internal.platform.AndroidPlatform.buildIfSupported() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_8;
Node_4 -> Node_6;
Node_5 -> Node_4;
Node_6 -> Node_7;
Node_6 -> Node_15;
Node_7 -> Node_3;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_15 -> Node_14;
}

