digraph "CFG forokhttp3.internal.platform.JdkWithJettyBootPlatform.JettyNegoProvider.invoke(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Method;[Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:java.lang.String) = (r7 I:java.lang.reflect.Method) java.lang.reflect.Method.getName():java.lang.String type: VIRTUAL \l0x0004: INVOKE  (r0 I:java.lang.Class) = (r7 I:java.lang.reflect.Method) java.lang.reflect.Method.getReturnType():java.lang.Class type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: SGET  (r8 I:java.lang.String[]) =  okhttp3.internal.Util.EMPTY_STRING_ARRAY java.lang.String[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: CONST_STR  (r1 I:java.lang.String) =  \"supports\" \l0x000e: INVOKE  (r1 I:boolean) = (r6 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l0x0012: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: SGET  (r1 I:java.lang.Class) =  java.lang.Boolean.TYPE java.lang.Class \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001e \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: INVOKE  (r6 I:java.lang.Boolean) = (r2 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: RETURN  (r6 I:java.lang.Object) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: CONST_STR  (r1 I:java.lang.String) =  \"unsupported\" \l0x0020: INVOKE  (r1 I:boolean) = (r6 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l0x0024: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002e \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: SGET  (r1 I:java.lang.Class) =  java.lang.Void.TYPE java.lang.Class \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002e \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: IPUT  \l  (r2 I:boolean)\l  (r5 I:okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider)\l okhttp3.internal.platform.JdkWithJettyBootPlatform.JettyNegoProvider.unsupported boolean \l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|0x002d: RETURN  (r3 I:java.lang.Object) \l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|0x002e: CONST_STR  (r1 I:java.lang.String) =  \"protocols\" \l0x0030: INVOKE  (r1 I:boolean) = (r6 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|0x0034: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x003c \l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|0x0036: ARRAY_LENGTH  (r1 I:int) = (r8 I:?[]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|0x0037: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x003c \l}"];
Node_19 [shape=record,label="{19\:\ 0x0039|0x0039: IGET  (r6 I:java.util.List\<java.lang.String\>) = \l  (r5 I:okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider)\l okhttp3.internal.platform.JdkWithJettyBootPlatform.JettyNegoProvider.protocols java.util.List \l}"];
Node_20 [shape=record,label="{20\:\ 0x003b|0x003b: RETURN  (r6 I:java.lang.Object) \l}"];
Node_21 [shape=record,label="{21\:\ 0x003c|0x003c: CONST_STR  (r1 I:java.lang.String) =  \"selectProtocol\" \l0x003e: INVOKE  (r1 I:boolean) = (r6 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l0x0042: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x0043|0x0043: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x004d \l}"];
Node_23 [shape=record,label="{23\:\ 0x0045|0x0045: CONST_STR  (r1 I:java.lang.String) =  \"select\" \l0x0047: INVOKE  (r1 I:boolean) = (r6 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x004b|0x004b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0088 \l}"];
Node_25 [shape=record,label="{25\:\ 0x004d|0x004d: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l}"];
Node_26 [shape=record,label="{26\:\ 0x004f|0x004f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0088 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0051|0x0051: ARRAY_LENGTH  (r0 I:int) = (r8 I:?[]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0052|0x0052: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0088 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0054|0x0054: AGET  (r0 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x0056: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) java.util.List \l}"];
Node_30 [shape=record,label="{30\:\ 0x0058|0x0058: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0088 \l}"];
Node_31 [shape=record,label="{31\:\ 0x005a|0x005a: AGET  (r6 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x005c: CHECK_CAST  (r6 I:java.util.List) = (java.util.List) (r6 I:?[OBJECT, ARRAY]) \l0x005e: INVOKE  (r7 I:int) = (r6 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0062: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_32 [shape=record,label="{32\:\ 0x0063|0x0063: IF  (r8 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:38:0x007d \l}"];
Node_33 [shape=record,label="{33\:\ 0x0065|0x0065: IGET  (r0 I:java.util.List\<java.lang.String\>) = \l  (r5 I:okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider)\l okhttp3.internal.platform.JdkWithJettyBootPlatform.JettyNegoProvider.protocols java.util.List \l0x0067: INVOKE  (r1 I:java.lang.Object) = (r6 I:java.util.List), (r8 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x006b: INVOKE  (r0 I:boolean) = (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.contains(java.lang.Object):boolean type: INTERFACE \l}"];
Node_34 [shape=record,label="{34\:\ 0x006f|0x006f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x007a \l}"];
Node_35 [shape=record,label="{35\:\ 0x0071|0x0071: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.List), (r8 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0075: CHECK_CAST  (r6 I:java.lang.String) = (java.lang.String) (r6 I:?[OBJECT, ARRAY]) \l0x0077: IPUT  \l  (r6 I:java.lang.String)\l  (r5 I:okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider)\l okhttp3.internal.platform.JdkWithJettyBootPlatform.JettyNegoProvider.selected java.lang.String \l}"];
Node_36 [shape=record,label="{36\:\ 0x0079|0x0079: RETURN  (r6 I:java.lang.Object) \l}"];
Node_37 [shape=record,label="{37\:\ 0x007a|0x007a: ARITH  (r8 I:int) = (r8 I:int) + (1 int) \l}"];
Node_38 [shape=record,label="{38\:\ 0x007d|0x007d: IGET  (r6 I:java.util.List\<java.lang.String\>) = \l  (r5 I:okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider)\l okhttp3.internal.platform.JdkWithJettyBootPlatform.JettyNegoProvider.protocols java.util.List \l0x007f: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.List), (r4 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0083: CHECK_CAST  (r6 I:java.lang.String) = (java.lang.String) (r6 I:?[OBJECT, ARRAY]) \l0x0085: IPUT  \l  (r6 I:java.lang.String)\l  (r5 I:okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider)\l okhttp3.internal.platform.JdkWithJettyBootPlatform.JettyNegoProvider.selected java.lang.String \l}"];
Node_39 [shape=record,label="{39\:\ 0x0087|0x0087: RETURN  (r6 I:java.lang.Object) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0088|0x0088: CONST_STR  (r0 I:java.lang.String) =  \"protocolSelected\" \l0x008a: INVOKE  (r0 I:boolean) = (r6 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_41 [shape=record,label="{41\:\ 0x008e|0x008e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0098 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0090|0x0090: CONST_STR  (r0 I:java.lang.String) =  \"selected\" \l0x0092: INVOKE  (r6 I:boolean) = (r6 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_43 [shape=record,label="{43\:\ 0x0096|0x0096: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x00a2 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0098|0x0098: ARRAY_LENGTH  (r6 I:int) = (r8 I:?[]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0099|0x0099: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x00a2 \l}"];
Node_46 [shape=record,label="{46\:\ 0x009b|0x009b: AGET  (r6 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x009d: CHECK_CAST  (r6 I:java.lang.String) = (java.lang.String) (r6 I:?[OBJECT, ARRAY]) \l0x009f: IPUT  \l  (r6 I:java.lang.String)\l  (r5 I:okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider)\l okhttp3.internal.platform.JdkWithJettyBootPlatform.JettyNegoProvider.selected java.lang.String \l}"];
Node_47 [shape=record,label="{47\:\ 0x00a1|0x00a1: RETURN  (r3 I:java.lang.Object) \l}"];
Node_48 [shape=record,label="{48\:\ 0x00a2|0x00a2: INVOKE  (r6 I:java.lang.Object) = \l  (r7 I:java.lang.reflect.Method)\l  (r5 I:java.lang.Object)\l  (r8 I:java.lang.Object[])\l java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL \l}"];
Node_49 [shape=record,label="{49\:\ 0x00a6|0x00a6: RETURN  (r6 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public java.lang.Object okhttp3.internal.platform.JdkWithJettyBootPlatform.JettyNegoProvider.invoke((r5 'this' I:okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.reflect.Method A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Throwable]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_40;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_40;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_40;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_40;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_38;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_37;
Node_35 -> Node_36;
Node_37 -> Node_32;
Node_38 -> Node_39;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_48;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_48;
Node_46 -> Node_47;
Node_48 -> Node_49;
}

