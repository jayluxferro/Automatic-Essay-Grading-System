digraph "CFG forokhttp3.internal.platform.OptionalMethod.invokeOptional(Ljava\/lang\/Object;[Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1573369535 {
label = "R(2:0|(2:(1:2)|(1:(1:5))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.reflect.Method java.lang.reflect.Method r0 = getMethod(r3.getClass())\l}"];
subgraph cluster_Region_2020170967 {
label = "R(2:(1:2)|(1:(1:5)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1965150592 {
label = "IF [B:1:0x0009] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r0 == null) goto L_0x000b\l}"];
subgraph cluster_Region_514206361 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000b|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1164260347 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1227337865 {
label = "Try: R(1:5) catches: R(1:6)";
node [shape=record,color=blue];
subgraph cluster_Region_1426362158 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|RETURN\l|return r0.invoke(r3, r4)\l}"];
}
subgraph cluster_Region_2065355422 {
label = "R(1:6) | ExcHandler: IllegalAccessException (unused java.lang.IllegalAccessException)\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0011|RETURN\l|return null\l}"];
}
}
}
}
}
subgraph cluster_Region_2065355422 {
label = "R(1:6) | ExcHandler: IllegalAccessException (unused java.lang.IllegalAccessException)\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0011|RETURN\l|return null\l}"];
}
Node_3 [shape=record,color=red,label="{3\:\ 0x000c|SYNTHETIC\lSplitter:B:3:0x000c\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|Catch:\{ IllegalAccessException \-\> 0x0011 \}\lSplitter:B:3:0x000c\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lExcHandler: IllegalAccessException (unused java.lang.IllegalAccessException)\lSplitter:B:3:0x000c\l}"];
MethodNode[shape=record,label="{public java.lang.Object okhttp3.internal.platform.OptionalMethod.invokeOptional((r2v0 'this' okhttp3.internal.platform.OptionalMethod A[IMMUTABLE_TYPE, THIS]), (r3v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.reflect.InvocationTargetException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;[, Ljava\/lang\/Object;, ), Ljava\/lang\/Object;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_7 -> Node_6;
}

