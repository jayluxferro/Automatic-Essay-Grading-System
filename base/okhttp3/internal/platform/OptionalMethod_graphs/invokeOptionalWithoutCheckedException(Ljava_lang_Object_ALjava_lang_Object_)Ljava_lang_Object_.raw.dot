digraph "CFG forokhttp3.internal.platform.OptionalMethod.invokeOptionalWithoutCheckedException(Ljava\/lang\/Object;[Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r2 I:java.lang.Object) = \l  (r1 I:okhttp3.internal.platform.OptionalMethod)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object[])\l okhttp3.internal.platform.OptionalMethod.invokeOptional(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ InvocationTargetException \-\> 0x0005 \}, TRY_ENTER]\l0x0003: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN  (r2 I:java.lang.Object) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|ExcHandler: InvocationTargetException null\lSplitter:B:0:0x0000\l|0x0005: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: INVOKE  (r2 I:java.lang.Throwable) = (r2 I:java.lang.reflect.InvocationTargetException) java.lang.reflect.InvocationTargetException.getTargetException():java.lang.Throwable type: VIRTUAL \l0x000a: INSTANCE_OF  (r3 I:boolean) = (r2 I:?[OBJECT, ARRAY]) java.lang.RuntimeException \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0011 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: CHECK_CAST  (r2 I:java.lang.RuntimeException) = (java.lang.RuntimeException) (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: NEW_INSTANCE  (r3 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0013: CONST_STR  (r0 I:java.lang.String) =  \"Unexpected exception\" \l0x0015: INVOKE  (r3 I:java.lang.AssertionError), (r0 I:java.lang.Object) java.lang.AssertionError.\<init\>(java.lang.Object):void type: DIRECT \l0x0018: INVOKE  (r3 I:java.lang.AssertionError), (r2 I:java.lang.Throwable) java.lang.AssertionError.initCause(java.lang.Throwable):java.lang.Throwable type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.lang.Object okhttp3.internal.platform.OptionalMethod.invokeOptionalWithoutCheckedException((r1 'this' I:okhttp3.internal.platform.OptionalMethod A[IMMUTABLE_TYPE, THIS]), (r2 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;[, Ljava\/lang\/Object;, ), Ljava\/lang\/Object;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

