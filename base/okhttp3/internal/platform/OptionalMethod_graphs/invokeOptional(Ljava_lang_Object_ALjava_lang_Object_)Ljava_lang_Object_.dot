digraph "CFG forokhttp3.internal.platform.OptionalMethod.invokeOptional(Ljava\/lang\/Object;[Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.reflect.Method r0 = getMethod(r3.getClass())\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r0 != null) goto L_0x000c\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|RETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|SYNTHETIC\lSplitter:B:3:0x000c\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ IllegalAccessException \-\> 0x0011 \}\lSplitter:B:3:0x000c\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|RETURN\l|return r0.invoke(r3, r4)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|RETURN\l|return null\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lExcHandler: IllegalAccessException (unused java.lang.IllegalAccessException)\lSplitter:B:3:0x000c\l}"];
MethodNode[shape=record,label="{public java.lang.Object okhttp3.internal.platform.OptionalMethod.invokeOptional((r2v0 'this' okhttp3.internal.platform.OptionalMethod A[IMMUTABLE_TYPE, THIS]), (r3v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.reflect.InvocationTargetException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;[, Ljava\/lang\/Object;, ), Ljava\/lang\/Object;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_7 -> Node_6;
}

