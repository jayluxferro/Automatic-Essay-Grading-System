digraph "CFG forokhttp3.internal.platform.AndroidPlatform.AndroidTrustRootIndex.findByIssuerAndSignature(Ljava\/security\/cert\/X509Certificate;)Ljava\/security\/cert\/X509Certificate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IllegalAccessException \-\> 0x001b, InvocationTargetException \-\> 0x001a \}\lSplitter:B:1:0x0001\l|java.lang.reflect.Method r1 = r5.findByIssuerAndSignatureMethod     \/\/ Catch:\{ IllegalAccessException \-\> 0x001b, InvocationTargetException \-\> 0x001a \}\ljavax.net.ssl.X509TrustManager r2 = r5.trustManager     \/\/ Catch:\{ IllegalAccessException \-\> 0x001b, InvocationTargetException \-\> 0x001a \}\ljava.lang.Object[] r3 = new java.lang.Object[]\{r6\}\ljava.security.cert.TrustAnchor r6 = (java.security.cert.TrustAnchor) r1.invoke(r2, r3)     \/\/ Catch:\{ IllegalAccessException \-\> 0x001b, InvocationTargetException \-\> 0x001a \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|Catch:\{ IllegalAccessException \-\> 0x001b, InvocationTargetException \-\> 0x001a \}\l|if (r6 == null) goto L_0x0018     \/\/ Catch:\{ IllegalAccessException \-\> 0x001b, InvocationTargetException \-\> 0x001a \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|Catch:\{ IllegalAccessException \-\> 0x001b, InvocationTargetException \-\> 0x001a \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018}"];
Node_6 [shape=record,label="{6\:\ 0x001a|RETURN\l|return null\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lExcHandler: InvocationTargetException (unused java.lang.reflect.InvocationTargetException)\lSplitter:B:1:0x0001\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|ExcHandler: IllegalAccessException (r6v1 'e' java.lang.IllegalAccessException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0001\l|java.lang.IllegalAccessException r6 = move\-exception\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c}"];
Node_10 [shape=record,label="{10\:\ 0x0022|throw okhttp3.internal.Util.assertionError(\"unable to get issues and signature\", r6)\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return r6.getTrustedCert()\l}"];
MethodNode[shape=record,label="{public java.security.cert.X509Certificate okhttp3.internal.platform.AndroidPlatform.AndroidTrustRootIndex.findByIssuerAndSignature((r5v0 'this' okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex A[IMMUTABLE_TYPE, THIS]), (r6v0 java.security.cert.X509Certificate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_12;
Node_5 -> Node_11;
Node_7 -> Node_6;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

