digraph "CFG forokhttp3.internal.platform.ConscryptPlatform.buildIfSupported()Lokhttp3\/internal\/platform\/Platform;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST_STR  (r1 I:java.lang.String) =  \"org.conscrypt.ConscryptEngineSocket\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: INVOKE  (r1 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ ClassNotFoundException \-\> 0x0013 \}, TRY_ENTER]\l0x0006: INVOKE  (r1 I:boolean) =  org.conscrypt.Conscrypt.isAvailable():boolean type: STATIC A[Catch:\{ ClassNotFoundException \-\> 0x0013 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000d A[Catch:\{ ClassNotFoundException \-\> 0x0013 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: RETURN  (r0 I:okhttp3.internal.platform.Platform) A[Catch:\{ ClassNotFoundException \-\> 0x0013 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: NEW_INSTANCE  (r1 I:okhttp3.internal.platform.ConscryptPlatform) =  okhttp3.internal.platform.ConscryptPlatform A[Catch:\{ ClassNotFoundException \-\> 0x0013 \}]\l0x000f: INVOKE  (r1 I:okhttp3.internal.platform.ConscryptPlatform) okhttp3.internal.platform.ConscryptPlatform.\<init\>():void type: DIRECT A[Catch:\{ ClassNotFoundException \-\> 0x0013 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: RETURN  (r1 I:okhttp3.internal.platform.Platform) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: RETURN  (r0 I:okhttp3.internal.platform.Platform) \l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lExcHandler: ClassNotFoundException null\lSplitter:B:1:0x0003\l}"];
MethodNode[shape=record,label="{public static okhttp3.internal.platform.Platform okhttp3.internal.platform.ConscryptPlatform.buildIfSupported() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_8 -> Node_7;
}

