digraph "CFG forokhttp3.internal.platform.ConscryptPlatform.trustManager(Ljavax\/net\/ssl\/SSLSocketFactory;)Ljavax\/net\/ssl\/X509TrustManager;" {
subgraph cluster_Region_2141604306 {
label = "R(1:(2:(1:3)|(1:(2:6|(2:(1:9)|(1:10))))))";
node [shape=record,color=blue];
subgraph cluster_Region_863123529 {
label = "R(2:(1:3)|(1:(2:6|(2:(1:9)|(1:10)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1207690524 {
label = "IF [B:1:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (org.conscrypt.Conscrypt.isConscrypt(r3) == false) goto L_0x0006\l}"];
subgraph cluster_Region_446490343 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return super.trustManager(r3)\l}"];
}
}
subgraph cluster_Region_1463407807 {
label = "R(1:(2:6|(2:(1:9)|(1:10))))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1974148705 {
label = "Try: R(2:6|(2:(1:9)|(1:10))) catches: R(2:11|13)";
node [shape=record,color=blue];
subgraph cluster_Region_256441790 {
label = "R(2:6|(2:(1:9)|(1:10)))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ Exception \-\> 0x0022 \}\lSplitter:B:5:0x000f\l|java.lang.Object java.lang.Object r3 = readFieldOrNull(r3, java.lang.Object.class, \"sslParameters\")     \/\/ Catch:\{ Exception \-\> 0x0022 \}\l}"];
subgraph cluster_Region_1843447501 {
label = "R(2:(1:9)|(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2079086624 {
label = "IF [B:7:0x0013] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0013|Catch:\{ Exception \-\> 0x0022 \}\l|if (r3 != null) goto L_0x0015     \/\/ Catch:\{ Exception \-\> 0x0022 \}\l}"];
subgraph cluster_Region_55426746 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001f|RETURN\l|return (javax.net.ssl.X509TrustManager) readFieldOrNull(r3, javax.net.ssl.X509TrustManager.class, \"x509TrustManager\")\l}"];
}
}
subgraph cluster_Region_280407624 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0020|RETURN\l|return null\l}"];
}
}
}
subgraph cluster_Region_162733261 {
label = "R(2:11|13) | ExcHandler: Exception (r3v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0022|ExcHandler: Exception (r3v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:5:0x000f\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|throw new java.lang.UnsupportedOperationException(\"clientBuilder.sslSocketFactory(SSLSocketFactory) not supported on Conscrypt\", r3)\l}"];
}
}
}
}
}
subgraph cluster_Region_162733261 {
label = "R(2:11|13) | ExcHandler: Exception (r3v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0022|ExcHandler: Exception (r3v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:5:0x000f\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|throw new java.lang.UnsupportedOperationException(\"clientBuilder.sslSocketFactory(SSLSocketFactory) not supported on Conscrypt\", r3)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000b}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000f|SYNTHETIC\lSplitter:B:5:0x000f\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0015|Catch:\{ Exception \-\> 0x0022 \}\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0023}"];
MethodNode[shape=record,label="{public javax.net.ssl.X509TrustManager okhttp3.internal.platform.ConscryptPlatform.trustManager((r2v0 'this' okhttp3.internal.platform.ConscryptPlatform A[IMMUTABLE_TYPE, THIS]), (r3v0 javax.net.ssl.SSLSocketFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_10[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_12;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_11;
Node_8 -> Node_9;
Node_12 -> Node_13;
}

