digraph "CFG forokhttp3.internal.platform.ConscryptPlatform.configureTlsExtensions(Ljavax\/net\/ssl\/SSLSocket;Ljava\/lang\/String;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (org.conscrypt.Conscrypt.isConscrypt(r2) == false) goto L_0x0020\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r3 == null) goto L_0x000f\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|org.conscrypt.Conscrypt.setUseSessionTickets(r2, true)\lorg.conscrypt.Conscrypt.setHostname(r2, r3)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|org.conscrypt.Conscrypt.setApplicationProtocols(r2, (java.lang.String[]) okhttp3.internal.platform.Platform.alpnProtocolNames(r4).toArray(new java.lang.String[0]))\l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|super.configureTlsExtensions(r2, r3, r4)\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.platform.ConscryptPlatform.configureTlsExtensions((r1v0 'this' okhttp3.internal.platform.ConscryptPlatform A[IMMUTABLE_TYPE, THIS]), (r2v0 javax.net.ssl.SSLSocket A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.util.List\<okhttp3.Protocol\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljavax\/net\/ssl\/SSLSocket;, Ljava\/lang\/String;, Ljava\/util\/List\<, Lokhttp3\/Protocol;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_7;
Node_5 -> Node_6;
}

