digraph "CFG forokhttp3.internal.platform.ConscryptPlatform.getSSLContext()Ljavax\/net\/ssl\/SSLContext;" {
subgraph cluster_Region_57387769 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_956825388 {
label = "Try: R(1:3) catches: R(2:4|6)";
node [shape=record,color=blue];
subgraph cluster_Region_1962675851 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return javax.net.ssl.SSLContext.getInstance(\"TLS\", getProvider())\l}"];
}
subgraph cluster_Region_1106167582 {
label = "R(2:4|6) | ExcHandler: NoSuchAlgorithmException (r0v1 'e' java.security.NoSuchAlgorithmException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|ExcHandler: NoSuchAlgorithmException (r0v1 'e' java.security.NoSuchAlgorithmException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0002\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|throw new java.lang.IllegalStateException(\"No TLS provider\", r0)\l}"];
}
}
}
subgraph cluster_Region_1106167582 {
label = "R(2:4|6) | ExcHandler: NoSuchAlgorithmException (r0v1 'e' java.security.NoSuchAlgorithmException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|ExcHandler: NoSuchAlgorithmException (r0v1 'e' java.security.NoSuchAlgorithmException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0002\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|throw new java.lang.IllegalStateException(\"No TLS provider\", r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?|Catch:\{ NoSuchAlgorithmException \-\> 0x000b \}\lSplitter:B:1:0x0002\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000c}"];
MethodNode[shape=record,label="{public javax.net.ssl.SSLContext okhttp3.internal.platform.ConscryptPlatform.getSSLContext((r3v0 'this' okhttp3.internal.platform.ConscryptPlatform A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_4 -> Node_5;
Node_4 -> Node_5;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_5 -> Node_6;
}

