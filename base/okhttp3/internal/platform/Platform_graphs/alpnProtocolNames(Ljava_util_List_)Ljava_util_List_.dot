digraph "CFG forokhttp3.internal.platform.Platform.alpnProtocolNames(Ljava\/util\/List;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.ArrayList r0 = new java.util.ArrayList(r5.size())\lint r1 = r5.size()\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:5:0x0022] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000e\-\>B:5:0x0022\l|if (r2 \>= r1) goto L_0x0025\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|okhttp3.Protocol r3 = r5.get(r2)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|if (r3 != okhttp3.Protocol.HTTP_1_0) goto L_0x001b\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|r0.add(r3.toString())\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|LOOP_END\lLOOP:0: B:1:0x000e\-\>B:5:0x0022\l|int r2 = r2 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|RETURN\l|return r0\l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static java.util.List\<java.lang.String\> okhttp3.internal.platform.Platform.alpnProtocolNames((r5v0 java.util.List\<okhttp3.Protocol\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lokhttp3\/Protocol;, \>;), Ljava\/util\/List\<, Ljava\/lang\/String;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_9[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_1;
Node_7 -> Node_6;
Node_8 -> Node_5;
Node_9 -> Node_5;
}

