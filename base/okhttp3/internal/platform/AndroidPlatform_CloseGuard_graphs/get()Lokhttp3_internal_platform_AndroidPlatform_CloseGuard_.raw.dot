digraph "CFG forokhttp3.internal.platform.AndroidPlatform.CloseGuard.get()Lokhttp3\/internal\/platform\/AndroidPlatform$CloseGuard;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST_STR  (r1 I:java.lang.String) =  \"dalvik.system.CloseGuard\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: INVOKE  (r1 I:java.lang.Class) = (r1 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ Exception \-\> 0x0027 \}, TRY_ENTER]\l0x0007: CONST_STR  (r2 I:java.lang.String) =  \"get\" A[Catch:\{ Exception \-\> 0x0027 \}]\l0x0009: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0027 \}]\l0x000a: NEW_ARRAY  (r4 I:java.lang.Class[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ Exception \-\> 0x0027 \}]\l0x000c: INVOKE  (r2 I:java.lang.reflect.Method) = \l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l  (r4 I:java.lang.Class[])\l java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method type: VIRTUAL A[Catch:\{ Exception \-\> 0x0027 \}]\l0x0010: CONST_STR  (r4 I:java.lang.String) =  \"open\" A[Catch:\{ Exception \-\> 0x0027 \}]\l0x0012: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0027 \}]\l0x0013: NEW_ARRAY  (r5 I:java.lang.Class[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ Exception \-\> 0x0027 \}]\l0x0015: CONST_CLASS  (r6 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class A[Catch:\{ Exception \-\> 0x0027 \}]\l0x0017: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0027 \}]\l0x0019: INVOKE  (r4 I:java.lang.reflect.Method) = \l  (r1 I:java.lang.Class)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.Class[])\l java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method type: VIRTUAL A[Catch:\{ Exception \-\> 0x0027 \}]\l0x001d: CONST_STR  (r5 I:java.lang.String) =  \"warnIfOpen\" A[Catch:\{ Exception \-\> 0x0027 \}]\l0x001f: NEW_ARRAY  (r3 I:java.lang.Class[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ Exception \-\> 0x0027 \}]\l0x0021: INVOKE  (r1 I:java.lang.reflect.Method) = \l  (r1 I:java.lang.Class)\l  (r5 I:java.lang.String)\l  (r3 I:java.lang.Class[])\l java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method type: VIRTUAL A[Catch:\{ Exception \-\> 0x0027 \}]\l0x0024: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0025|0x0025: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0027|0x0027: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0028: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lExcHandler: Exception null\lSplitter:B:1:0x0003\l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|0x0029: NEW_INSTANCE  (r2 I:okhttp3.internal.platform.AndroidPlatform$CloseGuard) =  okhttp3.internal.platform.AndroidPlatform$CloseGuard \l0x002b: INVOKE  \l  (r2 I:okhttp3.internal.platform.AndroidPlatform$CloseGuard)\l  (r0 I:java.lang.reflect.Method)\l  (r4 I:java.lang.reflect.Method)\l  (r1 I:java.lang.reflect.Method)\l okhttp3.internal.platform.AndroidPlatform.CloseGuard.\<init\>(java.lang.reflect.Method, java.lang.reflect.Method, java.lang.reflect.Method):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|0x002e: RETURN  (r2 I:okhttp3.internal.platform.AndroidPlatform$CloseGuard) \l}"];
MethodNode[shape=record,label="{static okhttp3.internal.platform.AndroidPlatform$CloseGuard okhttp3.internal.platform.AndroidPlatform.CloseGuard.get() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_6;
Node_4 -> Node_6;
Node_5 -> Node_4;
Node_6 -> Node_7;
}

