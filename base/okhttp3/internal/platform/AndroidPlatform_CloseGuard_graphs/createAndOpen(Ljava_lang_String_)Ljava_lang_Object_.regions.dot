digraph "CFG forokhttp3.internal.platform.AndroidPlatform.CloseGuard.createAndOpen(Ljava\/lang\/String;)Ljava\/lang\/Object;" {
subgraph cluster_Region_649916705 {
label = "R(2:(1:(2:3|4))|5)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_213654633 {
label = "IF [B:1:0x0003] THEN: R(1:(2:3|4)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r5.getMethod != null) goto L_0x0005\l}"];
subgraph cluster_Region_372985429 {
label = "R(1:(2:3|4))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1492594622 {
label = "Try: R(2:3|4) catches: R(0)";
node [shape=record,color=blue];
subgraph cluster_Region_315174284 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ Exception \-\> 0x0019 \}\lSplitter:B:2:0x0005\l|java.lang.Object java.lang.Object r0 = r5.getMethod.invoke((java.lang.Object) null, new java.lang.Object[0])     \/\/ Catch:\{ Exception \-\> 0x0019 \}\lr5.openMethod.invoke(r0, new java.lang.Object[]\{r6\})     \/\/ Catch:\{ Exception \-\> 0x0019 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|RETURN\l|return r0\l}"];
}
subgraph cluster_Region_419690616 {
label = "R(0) | ExcHandler: Exception (unused java.lang.Exception)\l";
node [shape=record,color=blue];
}
}
}
}
Node_5 [shape=record,label="{5\:\ 0x0019|RETURN\l|return null\l}"];
}
subgraph cluster_Region_419690616 {
label = "R(0) | ExcHandler: Exception (unused java.lang.Exception)\l";
node [shape=record,color=blue];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0005|SYNTHETIC\lSplitter:B:2:0x0005\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lExcHandler: Exception (unused java.lang.Exception)\lSplitter:B:2:0x0005\l}"];
MethodNode[shape=record,label="{java.lang.Object okhttp3.internal.platform.AndroidPlatform.CloseGuard.createAndOpen((r5v0 'this' okhttp3.internal.platform.AndroidPlatform$CloseGuard A[IMMUTABLE_TYPE, THIS]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_6;
Node_6 -> Node_5;
}

