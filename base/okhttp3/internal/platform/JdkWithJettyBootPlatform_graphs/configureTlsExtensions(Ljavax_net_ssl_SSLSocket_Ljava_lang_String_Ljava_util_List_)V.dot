digraph "CFG forokhttp3.internal.platform.JdkWithJettyBootPlatform.configureTlsExtensions(Ljavax\/net\/ssl\/SSLSocket;Ljava\/lang\/String;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.List r7 = alpnProtocolNames(r8)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|SYNTHETIC\lSplitter:B:1:0x0006\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}\lSplitter:B:1:0x0006\l|java.lang.ClassLoader r8 = okhttp3.internal.platform.Platform.class.getClassLoader()     \/\/ Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}\ljava.lang.Class[] r1 = new java.lang.Class[]\{r5.clientProviderClass, r5.serverProviderClass\}\ljava.lang.Object r7 = java.lang.reflect.Proxy.newProxyInstance(r8, r1, new okhttp3.internal.platform.JdkWithJettyBootPlatform.JettyNegoProvider(r7))     \/\/ Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}\ljava.lang.reflect.Method r8 = r5.putMethod     \/\/ Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}\ljava.lang.Object[] r0 = new java.lang.Object[]\{r6, r7\}\lr8.invoke((java.lang.Object) null, r0)     \/\/ Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002d \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x002c|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x002d|ExcHandler: IllegalAccessException \| InvocationTargetException (r6v1 'e' java.lang.ReflectiveOperationException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0006\l|java.lang.Throwable r6 = move\-exception\l}"];
Node_5 [shape=record,label="{5\:\ 0x002e}"];
Node_6 [shape=record,label="{6\:\ 0x0034|throw okhttp3.internal.Util.assertionError(\"unable to set alpn\", r6)\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.platform.JdkWithJettyBootPlatform.configureTlsExtensions((r5v0 'this' okhttp3.internal.platform.JdkWithJettyBootPlatform A[IMMUTABLE_TYPE, THIS]), (r6v0 javax.net.ssl.SSLSocket A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.util.List\<okhttp3.Protocol\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljavax\/net\/ssl\/SSLSocket;, Ljava\/lang\/String;, Ljava\/util\/List\<, Lokhttp3\/Protocol;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

