digraph "CFG forokhttp3.internal.platform.JdkWithJettyBootPlatform.getSelectedProtocol(Ljavax\/net\/ssl\/SSLSocket;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\lSplitter:B:0:0x0000\l|java.lang.reflect.Method r0 = r3.getMethod     \/\/ Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\ljava.lang.Object[] r1 = new java.lang.Object[]\{r4\}\lokhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider r0 = (okhttp3.internal.platform.JdkWithJettyBootPlatform.JettyNegoProvider) java.lang.reflect.Proxy.getInvocationHandler(r0.invoke((java.lang.Object) null, r1))     \/\/ Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\l|if (r0.unsupported != false) goto L_0x0026     \/\/ Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\l|if (r0.selected != null) goto L_0x0026     \/\/ Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\l|okhttp3.internal.platform.Platform.get().log(4, \"ALPN callback dropped: HTTP\/2 is disabled. Is alpn\-boot on the boot class path?\", (java.lang.Throwable) null)     \/\/ Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|RETURN\lCatch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\l|return null     \/\/ Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\l|if (r0.unsupported == false) goto L_0x002b     \/\/ Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x002e \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|ExcHandler: IllegalAccessException \| InvocationTargetException (r4v1 'e' java.lang.ReflectiveOperationException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x002f}"];
Node_13 [shape=record,label="{13\:\ 0x0035|throw okhttp3.internal.Util.assertionError(\"unable to get selected protocol\", r4)\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r0.selected\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
MethodNode[shape=record,label="{public java.lang.String okhttp3.internal.platform.JdkWithJettyBootPlatform.getSelectedProtocol((r3v0 'this' okhttp3.internal.platform.JdkWithJettyBootPlatform A[IMMUTABLE_TYPE, THIS]), (r4v0 javax.net.ssl.SSLSocket A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_11;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_15;
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

