digraph "CFG forokhttp3.internal.platform.JdkWithJettyBootPlatform.buildIfSupported()Lokhttp3\/internal\/platform\/Platform;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"org.eclipse.jetty.alpn.ALPN\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0002\l|0x0002: INVOKE  (r1 I:java.lang.Class) = (r0 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}, TRY_ENTER]\l0x0006: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0008: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x000b: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x000e: CONST_STR  (r3 I:java.lang.String) =  \"$Provider\" A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0010: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0013: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0017: INVOKE  (r2 I:java.lang.Class) = (r2 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x001b: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x001d: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0020: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0023: CONST_STR  (r4 I:java.lang.String) =  \"$ClientProvider\" A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0025: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0028: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x002c: INVOKE  (r8 I:java.lang.Class) = (r3 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0030: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0032: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0035: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0038: CONST_STR  (r0 I:java.lang.String) =  \"$ServerProvider\" A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x003a: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x003d: INVOKE  (r0 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0041: INVOKE  (r9 I:java.lang.Class) = (r0 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0045: CONST_STR  (r0 I:java.lang.String) =  \"put\" A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0047: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0048: NEW_ARRAY  (r3 I:java.lang.Class[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x004a: CONST_CLASS  (r4 I:java.lang.Class\<javax.net.ssl.SSLSocket\>) =  javax.net.ssl.SSLSocket.class A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x004c: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x004d: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x004f: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0050: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0052: INVOKE  (r0 I:java.lang.reflect.Method) = \l  (r1 I:java.lang.Class)\l  (r0 I:java.lang.String)\l  (r3 I:java.lang.Class[])\l java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method type: VIRTUAL A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0056: CONST_STR  (r2 I:java.lang.String) =  \"get\" A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0058: NEW_ARRAY  (r3 I:java.lang.Class[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x005a: CONST_CLASS  (r6 I:java.lang.Class\<javax.net.ssl.SSLSocket\>) =  javax.net.ssl.SSLSocket.class A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x005c: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x005e: INVOKE  (r6 I:java.lang.reflect.Method) = \l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.Class[])\l java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method type: VIRTUAL A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0062: CONST_STR  (r2 I:java.lang.String) =  \"remove\" A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0064: NEW_ARRAY  (r3 I:java.lang.Class[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0066: CONST_CLASS  (r4 I:java.lang.Class\<javax.net.ssl.SSLSocket\>) =  javax.net.ssl.SSLSocket.class A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0068: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x006a: INVOKE  (r7 I:java.lang.reflect.Method) = \l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.Class[])\l java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method type: VIRTUAL A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x006e: NEW_INSTANCE  (r1 I:okhttp3.internal.platform.JdkWithJettyBootPlatform) =  okhttp3.internal.platform.JdkWithJettyBootPlatform A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0070: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0071: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}]\l0x0072: INVOKE  \l  (r4 I:okhttp3.internal.platform.JdkWithJettyBootPlatform)\l  (r5 I:java.lang.reflect.Method)\l  (r6 I:java.lang.reflect.Method)\l  (r7 I:java.lang.reflect.Method)\l  (r8 I:java.lang.Class)\l  (r9 I:java.lang.Class)\l okhttp3.internal.platform.JdkWithJettyBootPlatform.\<init\>(java.lang.reflect.Method, java.lang.reflect.Method, java.lang.reflect.Method, java.lang.Class, java.lang.Class):void type: DIRECT A[Catch:\{ ClassNotFoundException \| NoSuchMethodException \-\> 0x0076 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0075|0x0075: RETURN  (r1 I:okhttp3.internal.platform.Platform) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0076|0x0076: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lExcHandler: ClassNotFoundException \| NoSuchMethodException null\lSplitter:B:1:0x0002\l}"];
Node_6 [shape=record,label="{6\:\ 0x0077|0x0077: RETURN  (r0 I:okhttp3.internal.platform.Platform) \l}"];
MethodNode[shape=record,label="{public static okhttp3.internal.platform.Platform okhttp3.internal.platform.JdkWithJettyBootPlatform.buildIfSupported() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_4;
}

