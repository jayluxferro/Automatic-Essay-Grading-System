digraph "CFG forokhttp3.internal.platform.JdkWithJettyBootPlatform.afterHandshake(Ljavax\/net\/ssl\/SSLSocket;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x000d \}\lSplitter:B:0:0x0000\l|java.lang.reflect.Method r0 = r4.removeMethod     \/\/ Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x000d \}\ljava.lang.Object[] r2 = new java.lang.Object[]\{r5\}\lr0.invoke((java.lang.Object) null, r2)     \/\/ Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x000d \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|ExcHandler: IllegalAccessException \| InvocationTargetException (r5v1 'e' java.lang.ReflectiveOperationException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e}"];
Node_5 [shape=record,label="{5\:\ 0x0014|throw okhttp3.internal.Util.assertionError(\"unable to remove alpn\", r5)\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.platform.JdkWithJettyBootPlatform.afterHandshake((r4v0 'this' okhttp3.internal.platform.JdkWithJettyBootPlatform A[IMMUTABLE_TYPE, THIS]), (r5v0 javax.net.ssl.SSLSocket A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

