digraph "CFG forokhttp3.internal.publicsuffix.PublicSuffixDatabase.binarySearchBytes([B[[BI)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r16\lr1 = r17\lr4 = r0.length\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|LOOP_START\lPHI: r2 r4 \l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int) binds: [B:0:0x0000, B:37:0x0008] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:0:0x0000, B:37:0x0008] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0008\-\>B:37:0x0008\l|if (r2 \>= r4) goto L_0x0089\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|int r5 = (r2 + r4) \/ 2\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|LOOP_START\lPHI: r5 \l  PHI: (r5v2 int) = (r5v1 int), (r5v5 int) binds: [B:2:0x000a, B:7:0x0017] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:3:0x000e\-\>B:7:0x0017\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|if (r5 \<= \-1) goto L_0x001a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013}"];
Node_6 [shape=record,label="{6\:\ 0x0015|if (r0[r5] == 10) goto L_0x001a\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|LOOP_END\lLOOP:1: B:3:0x000e\-\>B:7:0x0017\l|int r5 = r5 + \-1\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|int r5 = r5 + 1\lr9 = 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|LOOP_START\lPHI: r9 \l  PHI: (r9v1 int) = (r9v0 int), (r9v14 int) binds: [B:8:0x001a, B:11:0x0024] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:9:0x001e\-\>B:11:0x0024\l|int r10 = r5 + r9\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|if (r0[r10] == 10) goto L_0x0027\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|LOOP_END\lLOOP:2: B:9:0x001e\-\>B:11:0x0024\l|int r9 = r9 + 1\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|int r6 = r10 \- r5\lr11 = r18\lr9 = false\lr12 = 0\lr13 = 0\l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|LOOP_START\lPHI: r9 r11 r12 r13 \l  PHI: (r9v3 boolean) = (r9v2 boolean), (r9v8 boolean) binds: [B:12:0x0027, B:45:0x002e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v2 int) = (r11v1 int), (r11v5 int) binds: [B:12:0x0027, B:45:0x002e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v1 int) = (r12v0 int), (r12v4 int) binds: [B:12:0x0027, B:45:0x002e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 int) = (r13v0 int), (r13v3 int) binds: [B:12:0x0027, B:45:0x002e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:13:0x002e\-\>B:45:0x002e\l|if (r9 == false) goto L_0x0036\l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|r9 = false\lr14 = 46\l}"];
Node_15 [shape=record,label="{15\:\ 0x0036|r14 = r1[r11][r12] & 255\l}"];
Node_16 [shape=record,label="{16\:\ 0x003c|PHI: r9 r14 \l  PHI: (r9v4 boolean) = (r9v3 boolean), (r9v13 boolean) binds: [B:15:0x0036, B:14:0x0030] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v0 byte) = (r14v4 byte), (r14v5 byte) binds: [B:15:0x0036, B:14:0x0030] A[DONT_GENERATE, DONT_INLINE]\l|int r14 = r14 \- (r0[r5 + r13] & 255)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0043|if (r14 == 0) goto L_0x0046\l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|int r13 = r13 + 1\lint r12 = r12 + 1\l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|if (r13 != r6) goto L_0x004d\l}"];
Node_20 [shape=record,label="{20\:\ 0x004d}"];
Node_21 [shape=record,label="{21\:\ 0x0050|if (r1[r11].length != r12) goto L_0x002e\l}"];
Node_22 [shape=record,label="{22\:\ 0x0052}"];
Node_23 [shape=record,label="{23\:\ 0x0054|if (r11 != (r1.length \- 1)) goto L_0x0084\l}"];
Node_24 [shape=record,label="{24\:\ 0x0056|PHI: r12 r13 \l  PHI: (r12v2 int) = (r12v1 int), (r12v3 int), (r12v3 int) binds: [B:46:0x0056, B:47:0x0056, B:48:0x0056] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v2 int) = (r13v1 int), (r13v3 int), (r13v3 int) binds: [B:46:0x0056, B:47:0x0056, B:48:0x0056] A[DONT_GENERATE, DONT_INLINE]\l|if (r14 \>= 0) goto L_0x005c\l}"];
Node_25 [shape=record,label="{25\:\ 0x005a|r4 = r5 + \-1\l}"];
Node_26 [shape=record,label="{26\:\ 0x005c|if (r14 \<= 0) goto L_0x0062\l}"];
Node_27 [shape=record,label="{27\:\ 0x0060|r2 = r10 + 1\l}"];
Node_28 [shape=record,label="{28\:\ 0x0062|int r7 = r6 \- r13\lint r8 = r1[r11].length \- r12\l}"];
Node_29 [shape=record,label="{29\:\ 0x0068|LOOP_START\lPHI: r8 r11 \l  PHI: (r8v4 int) = (r8v3 int), (r8v5 int) binds: [B:28:0x0062, B:31:0x006d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v3 int) = (r11v2 int), (r11v4 int) binds: [B:28:0x0062, B:31:0x006d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:4: B:29:0x0068\-\>B:31:0x006d\l|int r11 = r11 + 1\l}"];
Node_30 [shape=record,label="{30\:\ 0x006b|if (r11 \>= r1.length) goto L_0x0072\l}"];
Node_31 [shape=record,label="{31\:\ 0x006d|LOOP_END\lLOOP:4: B:29:0x0068\-\>B:31:0x006d\l|int r8 = r8 + r1[r11].length\l}"];
Node_32 [shape=record,label="{32\:\ 0x0072|if (r8 \>= r7) goto L_0x0077\l}"];
Node_33 [shape=record,label="{33\:\ 0x0077|if (r8 \<= r7) goto L_0x007c\l}"];
Node_34 [shape=record,label="{34\:\ 0x007c}"];
Node_35 [shape=record,label="{35\:\ 0x0084|int r11 = r11 + 1\lr9 = true\lr12 = \-1\l}"];
Node_36 [shape=record,label="{36\:\ 0x0089|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_37 [shape=record,label="{37\:\ 0x0008|LOOP_END\lSYNTHETIC\lPHI: r2 r4 \l  PHI: (r2v3 int) = (r2v5 int), (r2v2 int) binds: [B:41:0x0008, B:40:0x0008] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 int) = (r4v1 int), (r4v3 int) binds: [B:41:0x0008, B:40:0x0008] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0008\-\>B:37:0x0008\l}"];
Node_38 [shape=record,label="{38\:\ 0x0089|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x007c|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0008|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0008|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x001a|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x001a|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0027|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x002e|LOOP_END\lSYNTHETIC\lPHI: r9 r11 r12 \l  PHI: (r9v8 boolean) = (r9v4 boolean), (r9v11 boolean) binds: [B:49:0x002e, B:50:0x002e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v5 int) = (r11v2 int), (r11v6 int) binds: [B:49:0x002e, B:50:0x002e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v4 int) = (r12v3 int), (r12v5 int) binds: [B:49:0x002e, B:50:0x002e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:13:0x002e\-\>B:45:0x002e\l}"];
Node_46 [shape=record,label="{46\:\ 0x0056|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0056|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0056|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x002e|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x002e|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0072|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ ?|SYNTHETIC\lRETURN\l|return new java.lang.String(r0, r5, r6, okhttp3.internal.Util.UTF_8)\l}"];
MethodNode[shape=record,label="{private static java.lang.String okhttp3.internal.publicsuffix.PublicSuffixDatabase.binarySearchBytes((r16v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 byte[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_38;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_42;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_43;
Node_7 -> Node_3;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_44;
Node_11 -> Node_9;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_46[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_47[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_49;
Node_22 -> Node_23;
Node_23 -> Node_35;
Node_23 -> Node_48[style=dashed];
Node_24 -> Node_26;
Node_24 -> Node_25[style=dashed];
Node_25 -> Node_40;
Node_26 -> Node_28;
Node_26 -> Node_27[style=dashed];
Node_27 -> Node_41;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_51;
Node_31 -> Node_29;
Node_32 -> Node_33;
Node_32 -> Node_25[style=dashed];
Node_33 -> Node_27[style=dashed];
Node_33 -> Node_39;
Node_34 -> Node_52;
Node_35 -> Node_50;
Node_37 -> Node_1;
Node_38 -> Node_36;
Node_39 -> Node_34;
Node_40 -> Node_37;
Node_41 -> Node_37;
Node_42 -> Node_8;
Node_43 -> Node_8;
Node_44 -> Node_12;
Node_45 -> Node_13;
Node_46 -> Node_24;
Node_47 -> Node_24;
Node_48 -> Node_24;
Node_49 -> Node_45;
Node_50 -> Node_45;
Node_51 -> Node_32;
}

