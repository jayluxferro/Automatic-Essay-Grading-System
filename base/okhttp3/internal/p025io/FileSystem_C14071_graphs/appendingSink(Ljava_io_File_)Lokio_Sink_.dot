digraph "CFG forokhttp3.internal.io.FileSystem.1.appendingSink(Ljava\/io\/File;)Lokio\/Sink;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ FileNotFoundException \-\> 0x0005 \}\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return okio.Okio.appendingSink(r2)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|r2.getParentFile().mkdirs()\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lExcHandler: FileNotFoundException (unused java.io.FileNotFoundException)\lSplitter:B:0:0x0000\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|RETURN\l|return okio.Okio.appendingSink(r2)\l}"];
MethodNode[shape=record,label="{public okio.Sink okhttp3.internal.io.FileSystem.1.appendingSink((r1v0 'this' okhttp3.internal.io.FileSystem$1 A[IMMUTABLE_TYPE, THIS]), (r2v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.FileNotFoundException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_3 -> Node_5;
Node_4 -> Node_3;
}

