digraph "CFG forokhttp3.internal.io.FileSystem.1.sink(Ljava\/io\/File;)Lokio\/Sink;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r0 I:okio.Sink) = (r2 I:java.io.File) okio.Okio.sink(java.io.File):okio.Sink type: STATIC A[Catch:\{ FileNotFoundException \-\> 0x0005 \}, TRY_ENTER]\l0x0003: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN  (r0 I:okio.Sink) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: INVOKE  (r0 I:java.io.File) = (r2 I:java.io.File) java.io.File.getParentFile():java.io.File type: VIRTUAL \l0x0009: INVOKE  (r0 I:java.io.File) java.io.File.mkdirs():boolean type: VIRTUAL \l0x000c: INVOKE  (r2 I:okio.Sink) = (r2 I:java.io.File) okio.Okio.sink(java.io.File):okio.Sink type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lExcHandler: FileNotFoundException null\lSplitter:B:0:0x0000\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: RETURN  (r2 I:okio.Sink) \l}"];
MethodNode[shape=record,label="{public okio.Sink okhttp3.internal.io.FileSystem.1.sink((r1 'this' I:okhttp3.internal.io.FileSystem$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.FileNotFoundException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_3 -> Node_5;
Node_4 -> Node_3;
}

