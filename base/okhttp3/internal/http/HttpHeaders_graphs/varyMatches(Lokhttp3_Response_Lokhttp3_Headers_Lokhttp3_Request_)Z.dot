digraph "CFG forokhttp3.internal.http.HttpHeaders.varyMatches(Lokhttp3\/Response;Lokhttp3\/Headers;Lokhttp3\/Request;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r2 = varyFields(r2).iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|LOOP_START\lLOOP:0: B:1:0x0008\-\>B:4:0x0020\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|if (r2.hasNext() == false) goto L_0x0024\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|java.lang.String r0 = r2.next()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|LOOP_END\lLOOP:0: B:1:0x0008\-\>B:4:0x0020\l|if (okhttp3.internal.Util.equal(r3.values(r0), r4.headers(r0)) != false) goto L_0x0008\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|RETURN\l|return false\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|RETURN\l|return true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static boolean okhttp3.internal.http.HttpHeaders.varyMatches((r2v0 okhttp3.Response A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 okhttp3.Headers A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 okhttp3.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_7[style=dashed];
Node_7 -> Node_5;
Node_8 -> Node_6;
}

