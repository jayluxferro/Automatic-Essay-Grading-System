digraph "CFG forokhttp3.internal.http.HttpHeaders.stringToLong(Ljava\/lang\/String;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = (\-1 ?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN  (r0 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|SYNTHETIC\lSplitter:B:3:0x0005\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0005\l|0x0005: INVOKE  (r2 I:long) = (r4 I:java.lang.String) java.lang.Long.parseLong(java.lang.String):long type: STATIC A[Catch:\{ NumberFormatException \-\> 0x000a \}, TRY_ENTER]\l0x0008: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: RETURN  (r2 I:long) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: RETURN  (r0 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lExcHandler: NumberFormatException null\lSplitter:B:3:0x0005\l}"];
MethodNode[shape=record,label="{private static long okhttp3.internal.http.HttpHeaders.stringToLong((r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_7 -> Node_6;
}

