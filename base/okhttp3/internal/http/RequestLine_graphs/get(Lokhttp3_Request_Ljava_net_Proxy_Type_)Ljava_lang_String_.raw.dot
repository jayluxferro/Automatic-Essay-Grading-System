digraph "CFG forokhttp3.internal.http.RequestLine.get(Lokhttp3\/Request;Ljava\/net\/Proxy$Type;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0002: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r1 I:java.lang.String) = (r2 I:okhttp3.Request) okhttp3.Request.method():java.lang.String type: VIRTUAL \l0x0009: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x000c: CONST  (r1 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x000e: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0011: INVOKE  (r3 I:boolean) = (r2 I:okhttp3.Request), (r3 I:java.net.Proxy$Type) okhttp3.internal.http.RequestLine.includeAuthorityInRequestLine(okhttp3.Request, java.net.Proxy$Type):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: INVOKE  (r2 I:okhttp3.HttpUrl) = (r2 I:okhttp3.Request) okhttp3.Request.url():okhttp3.HttpUrl type: VIRTUAL \l0x001b: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: INVOKE  (r2 I:okhttp3.HttpUrl) = (r2 I:okhttp3.Request) okhttp3.Request.url():okhttp3.HttpUrl type: VIRTUAL \l0x0023: INVOKE  (r2 I:java.lang.String) = (r2 I:okhttp3.HttpUrl) okhttp3.internal.http.RequestLine.requestPath(okhttp3.HttpUrl):java.lang.String type: STATIC \l0x0027: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|0x002a: CONST_STR  (r2 I:java.lang.String) =  \" HTTP\/1.1\" \l0x002c: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002f: INVOKE  (r2 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0033|0x0033: RETURN  (r2 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static java.lang.String okhttp3.internal.http.RequestLine.get((r2 I:okhttp3.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.net.Proxy$Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

