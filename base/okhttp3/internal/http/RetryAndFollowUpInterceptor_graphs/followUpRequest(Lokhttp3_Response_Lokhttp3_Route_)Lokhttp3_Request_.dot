digraph "CFG forokhttp3.internal.http.RetryAndFollowUpInterceptor.followUpRequest(Lokhttp3\/Response;Lokhttp3\/Route;)Lokhttp3\/Request;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r6 == null) goto L_0x013f\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|int r0 = r6.code()\ljava.lang.String r1 = r6.request().method()\lr2 = null\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|switch(r0) \{\l    case com.mapbox.mapboxsdk.constants.MapboxConstants.ANIMATION_DURATION :int: goto L_0x00af;\l    case 301: goto L_0x00af;\l    case 302: goto L_0x00af;\l    case 303: goto L_0x00af;\l    case okhttp3.internal.http.StatusLine.HTTP_TEMP_REDIRECT :int: goto L_0x009e;\l    case okhttp3.internal.http.StatusLine.HTTP_PERM_REDIRECT :int: goto L_0x009e;\l    case 401: goto L_0x0093;\l    case 407: goto L_0x006b;\l    case 408: goto L_0x0035;\l    case 503: goto L_0x0013;\l    default: goto L_0x0012;\l\}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|RETURN\l|return null\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013}"];
Node_5 [shape=record,label="{5\:\ 0x0017|if (r6.priorResponse() == null) goto L_0x0026\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019}"];
Node_7 [shape=record,label="{7\:\ 0x0023|if (r6.priorResponse().code() != 503) goto L_0x0026\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|RETURN\l|return null\l}"];
Node_9 [shape=record,label="{9\:\ 0x0026}"];
Node_10 [shape=record,label="{10\:\ 0x002d|if (retryAfter(r6, Integer.MAX_VALUE) != 0) goto L_0x0034\l}"];
Node_11 [shape=record,label="{11\:\ 0x002f}"];
Node_12 [shape=record,label="{12\:\ 0x0033|RETURN\l|return r6.request()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|RETURN\l|return null\l}"];
Node_14 [shape=record,label="{14\:\ 0x0035}"];
Node_15 [shape=record,label="{15\:\ 0x003b|if (r5.client.retryOnConnectionFailure() != false) goto L_0x003e\l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|RETURN\l|return null\l}"];
Node_17 [shape=record,label="{17\:\ 0x003e}"];
Node_18 [shape=record,label="{18\:\ 0x0048|if ((r6.request().body() instanceof okhttp3.internal.http.UnrepeatableRequestBody) == false) goto L_0x004b\l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|RETURN\l|return null\l}"];
Node_20 [shape=record,label="{20\:\ 0x004b}"];
Node_21 [shape=record,label="{21\:\ 0x004f|if (r6.priorResponse() == null) goto L_0x005e\l}"];
Node_22 [shape=record,label="{22\:\ 0x0051}"];
Node_23 [shape=record,label="{23\:\ 0x005b|if (r6.priorResponse().code() != 408) goto L_0x005e\l}"];
Node_24 [shape=record,label="{24\:\ 0x005d|RETURN\l|return null\l}"];
Node_25 [shape=record,label="{25\:\ 0x005e}"];
Node_26 [shape=record,label="{26\:\ 0x0063|if (retryAfter(r6, 0) \<= 0) goto L_0x0066\l}"];
Node_27 [shape=record,label="{27\:\ 0x0065|RETURN\l|return null\l}"];
Node_28 [shape=record,label="{28\:\ 0x0066}"];
Node_29 [shape=record,label="{29\:\ 0x006a|RETURN\l|return r6.request()\l}"];
Node_30 [shape=record,label="{30\:\ 0x006b|if (r7 == null) goto L_0x0072\l}"];
Node_31 [shape=record,label="{31\:\ 0x006d|java.net.Proxy r0 = r7.proxy()\l}"];
Node_32 [shape=record,label="{32\:\ 0x0072|java.net.Proxy r0 = r5.client.proxy()\l}"];
Node_33 [shape=record,label="{33\:\ 0x0078|PHI: r0 \l  PHI: (r0v11 java.net.Proxy) = (r0v16 java.net.Proxy), (r0v17 java.net.Proxy) binds: [B:32:0x0072, B:31:0x006d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,label="{34\:\ 0x007e|if (r0.type() != java.net.Proxy.Type.HTTP) goto L_0x008b\l}"];
Node_35 [shape=record,label="{35\:\ 0x0080}"];
Node_36 [shape=record,label="{36\:\ 0x008a|RETURN\l|return r5.client.proxyAuthenticator().authenticate(r7, r6)\l}"];
Node_37 [shape=record,label="{37\:\ 0x008b}"];
Node_38 [shape=record,label="{38\:\ 0x0092|throw new java.net.ProtocolException(\"Received HTTP_PROXY_AUTH (407) code while not using proxy\")\l}"];
Node_39 [shape=record,label="{39\:\ 0x0093}"];
Node_40 [shape=record,label="{40\:\ 0x009d|RETURN\l|return r5.client.authenticator().authenticate(r7, r6)\l}"];
Node_41 [shape=record,label="{41\:\ 0x009e}"];
Node_42 [shape=record,label="{42\:\ 0x00a4|if (r1.equals(p018io.fabric.sdk.android.services.network.HttpRequest.METHOD_GET) != false) goto L_0x00af\l}"];
Node_43 [shape=record,label="{43\:\ 0x00a6}"];
Node_44 [shape=record,label="{44\:\ 0x00ac|if (r1.equals(p018io.fabric.sdk.android.services.network.HttpRequest.METHOD_HEAD) != false) goto L_0x00af\l}"];
Node_45 [shape=record,label="{45\:\ 0x00ae|RETURN\l|return null\l}"];
Node_46 [shape=record,label="{46\:\ 0x00af}"];
Node_47 [shape=record,label="{47\:\ 0x00b5|if (r5.client.followRedirects() != false) goto L_0x00b8\l}"];
Node_48 [shape=record,label="{48\:\ 0x00b7|RETURN\l|return null\l}"];
Node_49 [shape=record,label="{49\:\ 0x00b8|java.lang.String r7 = r6.header(p018io.fabric.sdk.android.services.network.HttpRequest.HEADER_LOCATION)\l}"];
Node_50 [shape=record,label="{50\:\ 0x00be|if (r7 != null) goto L_0x00c1\l}"];
Node_51 [shape=record,label="{51\:\ 0x00c0|RETURN\l|return null\l}"];
Node_52 [shape=record,label="{52\:\ 0x00c1|okhttp3.HttpUrl r7 = r6.request().url().resolve(r7)\l}"];
Node_53 [shape=record,label="{53\:\ 0x00cd|if (r7 != null) goto L_0x00d0\l}"];
Node_54 [shape=record,label="{54\:\ 0x00cf|RETURN\l|return null\l}"];
Node_55 [shape=record,label="{55\:\ 0x00d0}"];
Node_56 [shape=record,label="{56\:\ 0x00e4|if (r7.scheme().equals(r6.request().url().scheme()) != false) goto L_0x00ef\l}"];
Node_57 [shape=record,label="{57\:\ 0x00e6}"];
Node_58 [shape=record,label="{58\:\ 0x00ec|if (r5.client.followSslRedirects() != false) goto L_0x00ef\l}"];
Node_59 [shape=record,label="{59\:\ 0x00ee|RETURN\l|return null\l}"];
Node_60 [shape=record,label="{60\:\ 0x00ef|okhttp3.Request$Builder r0 = r6.request().newBuilder()\l}"];
Node_61 [shape=record,label="{61\:\ 0x00fb|if (okhttp3.internal.http.HttpMethod.permitsRequestBody(r1) == false) goto L_0x012b\l}"];
Node_62 [shape=record,label="{62\:\ 0x00fd|boolean r3 = okhttp3.internal.http.HttpMethod.redirectsWithBody(r1)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0105|if (okhttp3.internal.http.HttpMethod.redirectsToGet(r1) == false) goto L_0x010d\l}"];
Node_64 [shape=record,label="{64\:\ 0x0107|r0.method(p018io.fabric.sdk.android.services.network.HttpRequest.METHOD_GET, (okhttp3.RequestBody) null)\l}"];
Node_65 [shape=record,label="{65\:\ 0x010d|if (r3 == false) goto L_0x0117\l}"];
Node_66 [shape=record,label="{66\:\ 0x010f|okhttp3.RequestBody r2 = r6.request().body()\l}"];
Node_67 [shape=record,label="{67\:\ 0x0117|PHI: r2 \l  PHI: (r2v1 okhttp3.RequestBody) = (r2v0 okhttp3.RequestBody), (r2v3 okhttp3.RequestBody) binds: [B:65:0x010d, B:66:0x010f] A[DONT_GENERATE, DONT_INLINE]\l|r0.method(r1, r2)\l}"];
Node_68 [shape=record,label="{68\:\ 0x011a|if (r3 != false) goto L_0x012b\l}"];
Node_69 [shape=record,label="{69\:\ 0x011c|r0.removeHeader(\"Transfer\-Encoding\")\lr0.removeHeader(p018io.fabric.sdk.android.services.network.HttpRequest.HEADER_CONTENT_LENGTH)\lr0.removeHeader(p018io.fabric.sdk.android.services.network.HttpRequest.HEADER_CONTENT_TYPE)\l}"];
Node_70 [shape=record,label="{70\:\ 0x012b}"];
Node_71 [shape=record,label="{71\:\ 0x012f|if (sameConnection(r6, r7) != false) goto L_0x0136\l}"];
Node_72 [shape=record,label="{72\:\ 0x0131|r0.removeHeader(p018io.fabric.sdk.android.services.network.HttpRequest.HEADER_AUTHORIZATION)\l}"];
Node_73 [shape=record,label="{73\:\ 0x0136}"];
Node_74 [shape=record,label="{74\:\ 0x013e|RETURN\l|return r0.url(r7).build()\l}"];
Node_75 [shape=record,label="{75\:\ 0x013f}"];
Node_76 [shape=record,label="{76\:\ 0x0144|throw new java.lang.IllegalStateException()\l}"];
MethodNode[shape=record,label="{private okhttp3.Request okhttp3.internal.http.RetryAndFollowUpInterceptor.followUpRequest((r5v0 'this' okhttp3.internal.http.RetryAndFollowUpInterceptor A[IMMUTABLE_TYPE, THIS]), (r6v0 okhttp3.Response A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 okhttp3.Route A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_75;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_2 -> Node_14;
Node_2 -> Node_30;
Node_2 -> Node_39;
Node_2 -> Node_41;
Node_2 -> Node_46;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_28 -> Node_29;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_37;
Node_35 -> Node_36;
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_46;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_60;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_70;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_65;
Node_64 -> Node_68;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_67;
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_70;
Node_69 -> Node_70;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_73;
Node_72 -> Node_73;
Node_73 -> Node_74;
Node_75 -> Node_76;
}

