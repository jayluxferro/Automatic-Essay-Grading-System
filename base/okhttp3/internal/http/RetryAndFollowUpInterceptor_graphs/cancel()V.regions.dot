digraph "CFG forokhttp3.internal.http.RetryAndFollowUpInterceptor.cancel()V" {
subgraph cluster_Region_1993135069 {
label = "R(2:0|(1:(1:2)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.canceled = true\lokhttp3.internal.connection.StreamAllocation okhttp3.internal.connection.StreamAllocation r0 = r1.streamAllocation\l}"];
subgraph cluster_Region_1315238821 {
label = "R(1:(1:2))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1160881105 {
label = "IF [B:1:0x0005] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r0 != null) goto L_0x0007\l}"];
subgraph cluster_Region_855199412 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|r0.cancel()\l}"];
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.http.RetryAndFollowUpInterceptor.cancel((r1v0 'this' okhttp3.internal.http.RetryAndFollowUpInterceptor A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
}

