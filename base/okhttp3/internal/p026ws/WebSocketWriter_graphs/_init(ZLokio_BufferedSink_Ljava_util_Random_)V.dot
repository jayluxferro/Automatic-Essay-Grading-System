digraph "CFG forokhttp3.internal.ws.WebSocketWriter.\<init\>(ZLokio\/BufferedSink;Ljava\/util\/Random;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.buffer = new okio.Buffer()\lr1.frameSink = new okhttp3.internal.p026ws.WebSocketWriter.FrameSink(r1)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|if (r3 == null) goto L_0x003d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|if (r4 == null) goto L_0x0035\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|r1.isClient = r2\lr1.sink = r3\lr1.sinkBuffer = r3.buffer()\lr1.random = r4\lr3 = null\l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|if (r2 == false) goto L_0x0028\l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|byte[] r4 = new byte[4]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|r4 = null\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|PHI: r4 \l  PHI: (r4v1 byte[]) = (r4v2 byte[]), (r4v4 byte[]) binds: [B:6:0x0028, B:5:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|r1.maskKey = r4\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|if (r2 == false) goto L_0x0032\l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|okio.Buffer$UnsafeCursor r3 = new okio.Buffer.UnsafeCursor()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|PHI: r3 \l  PHI: (r3v5 okio.Buffer$UnsafeCursor) = (r3v4 okio.Buffer$UnsafeCursor), (r3v6 okio.Buffer$UnsafeCursor) binds: [B:8:0x002b, B:9:0x002d] A[DONT_GENERATE, DONT_INLINE]\l|r1.maskCursor = r3\l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ 0x0035}"];
Node_13 [shape=record,label="{13\:\ 0x003c|throw new java.lang.NullPointerException(\"random == null\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x003d}"];
Node_15 [shape=record,label="{15\:\ 0x0044|throw new java.lang.NullPointerException(\"sink == null\")\l}"];
MethodNode[shape=record,label="{void okhttp3.internal.ws.WebSocketWriter.\<init\>((r1v0 'this' okhttp3.internal.ws.WebSocketWriter A[IMMUTABLE_TYPE, THIS]), (r2v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 okio.BufferedSink A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.util.Random A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_12;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

