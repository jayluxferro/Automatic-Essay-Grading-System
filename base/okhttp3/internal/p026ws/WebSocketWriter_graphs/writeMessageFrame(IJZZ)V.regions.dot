digraph "CFG forokhttp3.internal.ws.WebSocketWriter.writeMessageFrame(IJZZ)V" {
subgraph cluster_Region_967547810 {
label = "R(1:(2:(9:2|(1:4)|(1:6)|7|(1:9)|(1:12)(1:(1:15)(1:16))|(2:19|(1:21))(1:22)|23|24)|(1:26)))";
node [shape=record,color=blue];
subgraph cluster_Region_1069822451 {
label = "R(2:(9:2|(1:4)|(1:6)|7|(1:9)|(1:12)(1:(1:15)(1:16))|(2:19|(1:21))(1:22)|23|24)|(1:26))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_199243900 {
label = "IF [B:1:0x0002] THEN: R(9:2|(1:4)|(1:6)|7|(1:9)|(1:12)(1:(1:15)(1:16))|(2:19|(1:21))(1:22)|23|24) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1.writerClosed == false) goto L_0x0004\l}"];
subgraph cluster_Region_1243965614 {
label = "R(9:2|(1:4)|(1:6)|7|(1:9)|(1:12)(1:(1:15)(1:16))|(2:19|(1:21))(1:22)|23|24)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|int r0 = 0\l}"];
subgraph cluster_IfRegion_1051478548 {
label = "IF [B:3:0x0005] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r5 == false) goto L_0x0008\l}"];
subgraph cluster_Region_1530896616 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0008|r2 = 0\l}"];
}
}
subgraph cluster_IfRegion_1164593621 {
label = "IF [B:5:0x0009] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0009|PHI: r2 \l  PHI: (r2v2 int) = (r2v0 int), (r2v26 int) binds: [B:3:0x0005, B:4:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 == true) goto L_0x000b\l}"];
subgraph cluster_Region_1338227420 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000b|r2 \|= 128\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x000d|PHI: r2 \l  PHI: (r2v3 int) = (r2v2 int), (r2v25 int) binds: [B:5:0x0009, B:6:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|r1.sinkBuffer.writeByte(r2)\l}"];
subgraph cluster_IfRegion_333690330 {
label = "IF [B:8:0x0014] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0014|if (r1.isClient == true) goto L_0x0016\l}"];
subgraph cluster_Region_1305830173 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0016|r0 = 128\l}"];
}
}
subgraph cluster_IfRegion_897413038 {
label = "IF [B:11:0x001c] THEN: R(1:12) ELSE: R(1:(1:15)(1:16))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001c|if (r3 \<= 125) goto L_0x001e\l}"];
subgraph cluster_Region_408457677 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x001e|r1.sinkBuffer.writeByte(((int) r3) \| r0)\l}"];
}
subgraph cluster_Region_575585333 {
label = "R(1:(1:15)(1:16)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1888086010 {
label = "IF [B:14:0x002b] THEN: R(1:15) ELSE: R(1:16) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002b|if (r3 \<= 65535) goto L_0x002d\l}"];
subgraph cluster_Region_914892413 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002d|r1.sinkBuffer.writeByte(r0 \| 126)\lr1.sinkBuffer.writeShort((int) r3)\l}"];
}
subgraph cluster_Region_1460230170 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x003b|r1.sinkBuffer.writeByte(r0 \| 127)\lr1.sinkBuffer.writeLong(r3)\l}"];
}
}
}
}
subgraph cluster_IfRegion_2127216980 {
label = "IF [B:18:0x0049] THEN: R(2:19|(1:21)) ELSE: R(1:22)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0049|if (r1.isClient == true) goto L_0x004b\l}"];
subgraph cluster_Region_546623804 {
label = "R(2:19|(1:21))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x004b|r1.random.nextBytes(r1.maskKey)\lr1.sinkBuffer.write(r1.maskKey)\l}"];
subgraph cluster_IfRegion_2011983375 {
label = "IF [B:20:0x005d] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x005d|if (r3 \> 0) goto L_0x005f\l}"];
subgraph cluster_Region_824312941 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x005f|long long r5 = r1.sinkBuffer.size()\lr1.sinkBuffer.write(r1.buffer, r3)\lr1.sinkBuffer.readAndWriteUnsafe(r1.maskCursor)\lr1.maskCursor.seek(r5)\lokhttp3.internal.p026ws.WebSocketProtocol.toggleMask(r1.maskCursor, r1.maskKey)\lr1.maskCursor.close()\l}"];
}
}
}
subgraph cluster_Region_1214640447 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0085|r1.sinkBuffer.write(r1.buffer, r3)\l}"];
}
}
Node_23 [shape=record,label="{23\:\ 0x008c|r1.sink.emit()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0091|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1619872006 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0099|throw new java.io.IOException(\"closed\")\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0018|PHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v4 int) binds: [B:8:0x0014, B:9:0x0016] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0026}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0047}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0092}"];
MethodNode[shape=record,label="{void okhttp3.internal.ws.WebSocketWriter.writeMessageFrame((r1v0 'this' okhttp3.internal.ws.WebSocketWriter A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_25[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_18 -> Node_22[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_23[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_0 -> Node_1;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_17 -> Node_18;
Node_25 -> Node_26;
}

