digraph "CFG forokhttp3.internal.ws.RealWebSocket.Close.\<init\>(ILokio\/ByteString;J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  (r1 I:int), (r0 I:okhttp3.internal.ws.RealWebSocket$Close) okhttp3.internal.ws.RealWebSocket.Close.code int \l0x0005: IPUT  \l  (r2 I:okio.ByteString)\l  (r0 I:okhttp3.internal.ws.RealWebSocket$Close)\l okhttp3.internal.ws.RealWebSocket.Close.reason okio.ByteString \l0x0007: IPUT  (r3 I:long), (r0 I:okhttp3.internal.ws.RealWebSocket$Close) okhttp3.internal.ws.RealWebSocket.Close.cancelAfterCloseMillis long \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN   \l}"];
MethodNode[shape=record,label="{void okhttp3.internal.ws.RealWebSocket.Close.\<init\>((r0 'this' I:okhttp3.internal.ws.RealWebSocket$Close A[IMMUTABLE_TYPE, THIS]), (r1 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:okio.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

