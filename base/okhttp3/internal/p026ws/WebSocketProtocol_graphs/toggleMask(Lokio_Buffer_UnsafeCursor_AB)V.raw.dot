digraph "CFG forokhttp3.internal.ws.WebSocketProtocol.toggleMask(Lokio\/Buffer$UnsafeCursor;[B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r8 I:?[]) \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r2 I:byte[]) = (r7 I:okio.Buffer$UnsafeCursor) okio.Buffer.UnsafeCursor.data byte[] \l0x0004: IGET  (r3 I:int) = (r7 I:okio.Buffer$UnsafeCursor) okio.Buffer.UnsafeCursor.start int \l0x0006: IGET  (r4 I:int) = (r7 I:okio.Buffer$UnsafeCursor) okio.Buffer.UnsafeCursor.end int \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:4:0x0018 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: ARITH  (r1 I:int) = (r1 I:int) % (r0 I:int) \l0x000b: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l \l0x000d: AGET  (r6 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x000f: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) ^ (r6 I:?[int, boolean, short, byte, char]) \l0x0010: CAST  (r5 I:byte) = (byte) (r5 I:int) \l0x0011: APUT  \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l  (r5 I:byte A[IMMUTABLE_TYPE])\l \l0x0013: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l0x0015: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: INVOKE  (r2 I:int) = (r7 I:okio.Buffer$UnsafeCursor) okio.Buffer.UnsafeCursor.next():int type: VIRTUAL \l0x001c: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0002 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: RETURN   \l}"];
MethodNode[shape=record,label="{static void okhttp3.internal.ws.WebSocketProtocol.toggleMask((r7 I:okio.Buffer$UnsafeCursor A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_2;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_5 -> Node_6[style=dashed];
}

