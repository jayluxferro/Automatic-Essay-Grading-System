digraph "CFG forokhttp3.internal.ws.WebSocketProtocol.toggleMask(Lokio\/Buffer$UnsafeCursor;[B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r8.length\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:5:0x001d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0002\-\>B:5:0x001d\l|byte[] r2 = r7.data\lint r3 = r7.start\lint r4 = r7.end\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|LOOP_START\lPHI: r1 r3 \l  PHI: (r1v2 int) = (r1v1 int), (r1v4 int) binds: [B:1:0x0002, B:3:0x000a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v3 int) binds: [B:1:0x0002, B:3:0x000a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:2:0x0008\-\>B:3:0x000a\l|if (r3 \>= r4) goto L_0x0018\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|LOOP_END\lLOOP:1: B:2:0x0008\-\>B:3:0x000a\l|int r1 = r1 % r0\lr2[r3] = (byte) (r2[r3] ^ r8[r1])\lint r3 = r3 + 1\lint r1 = r1 + 1\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018}"];
Node_5 [shape=record,label="{5\:\ 0x001d|LOOP_END\lLOOP:0: B:1:0x0002\-\>B:5:0x001d\l|if (r7.next() != \-1) goto L_0x0002\l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static void okhttp3.internal.ws.WebSocketProtocol.toggleMask((r7v0 okio.Buffer$UnsafeCursor A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_2;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_5 -> Node_7[style=dashed];
Node_7 -> Node_6;
Node_8 -> Node_4;
}

