digraph "CFG forokhttp3.internal.ws.RealWebSocket.close(ILjava\/lang\/String;J)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r5)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?|okhttp3.internal.p026ws.WebSocketProtocol.validateCloseCode(r6)\lr0 = null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r7 == null) goto L_0x002e\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|okio.ByteString r0 = okio.ByteString.encodeUtf8(r7)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|if ((((long) r0.size()) \> 123 ? 1 : (((long) r0.size()) == 123 ? 0 : \-1)) \> 0) goto L_0x0017\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016}"];
Node_7 [shape=record,label="{7\:\ 0x0017|java.lang.StringBuilder r8 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr8.append(\"reason.size() \> 123: \")\lr8.append(r7)\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|throw new java.lang.IllegalArgumentException(r8.toString())\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|PHI: r0 \l  PHI: (r0v1 okio.ByteString) = (r0v0 okio.ByteString), (r0v2 okio.ByteString) binds: [B:3:0x0005, B:6:0x0016] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|if (r5.failed != false) goto L_0x0049\l}"];
Node_11 [shape=record,label="{11\:\ 0x0032}"];
Node_12 [shape=record,label="{12\:\ 0x0034|if (r5.enqueuedClose == false) goto L_0x0037\l}"];
Node_13 [shape=record,label="{13\:\ 0x0036}"];
Node_14 [shape=record,label="{14\:\ 0x0037|r5.enqueuedClose = true\lr5.messageAndCloseQueue.add(new okhttp3.internal.p026ws.RealWebSocket.Close(r6, r0, r8))\lrunWriter()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0047|monitor\-exit(r5)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0048|RETURN\l|return true\l}"];
Node_17 [shape=record,label="{17\:\ 0x0049}"];
Node_18 [shape=record,label="{18\:\ 0x004a|monitor\-exit(r5)\l}"];
Node_19 [shape=record,label="{19\:\ 0x004b|RETURN\l|return false\l}"];
Node_20 [shape=record,label="{20\:\ 0x004c|REMOVE\l|java.lang.Throwable r6 = move\-exception\l}"];
Node_21 [shape=record,label="{21\:\ 0x004d|REMOVE\l}"];
Node_22 [shape=record,label="{22\:\ 0x004e|REMOVE\l|throw r6\l}"];
MethodNode[shape=record,label="{synchronized boolean okhttp3.internal.ws.RealWebSocket.close((r5v0 'this' okhttp3.internal.ws.RealWebSocket A[IMMUTABLE_TYPE, THIS]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22;
}

