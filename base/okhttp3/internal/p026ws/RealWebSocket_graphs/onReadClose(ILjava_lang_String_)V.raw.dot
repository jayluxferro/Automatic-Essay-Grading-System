digraph "CFG forokhttp3.internal.ws.RealWebSocket.onReadClose(ILjava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x004f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: MONITOR_ENTER  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|SYNTHETIC\lSplitter:B:3:0x0004\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0004\l|0x0004: IGET  (r1 I:int) = (r3 I:okhttp3.internal.ws.RealWebSocket) okhttp3.internal.ws.RealWebSocket.receivedCloseCode int A[Catch:\{ all \-\> 0x004c \}, TRY_ENTER]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0044 A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|0x0008: IPUT  (r4 I:int), (r3 I:okhttp3.internal.ws.RealWebSocket) okhttp3.internal.ws.RealWebSocket.receivedCloseCode int A[Catch:\{ all \-\> 0x004c \}]\l0x000a: IPUT  \l  (r5 I:java.lang.String)\l  (r3 I:okhttp3.internal.ws.RealWebSocket)\l okhttp3.internal.ws.RealWebSocket.receivedCloseReason java.lang.String A[Catch:\{ all \-\> 0x004c \}]\l0x000c: IGET  (r0 I:boolean) = (r3 I:okhttp3.internal.ws.RealWebSocket) okhttp3.internal.ws.RealWebSocket.enqueuedClose boolean A[Catch:\{ all \-\> 0x004c \}]\l0x000e: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002d A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: IGET  (r0 I:java.util.ArrayDeque\<java.lang.Object\>) = (r3 I:okhttp3.internal.ws.RealWebSocket) okhttp3.internal.ws.RealWebSocket.messageAndCloseQueue java.util.ArrayDeque A[Catch:\{ all \-\> 0x004c \}]\l0x0013: INVOKE  (r0 I:boolean) = (r0 I:java.util.ArrayDeque) java.util.ArrayDeque.isEmpty():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002d A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: IGET  (r0 I:okhttp3.internal.ws.RealWebSocket$Streams) = (r3 I:okhttp3.internal.ws.RealWebSocket) okhttp3.internal.ws.RealWebSocket.streams okhttp3.internal.ws.RealWebSocket$Streams A[Catch:\{ all \-\> 0x004c \}]\l0x001b: IPUT  \l  (r1 I:okhttp3.internal.ws.RealWebSocket$Streams)\l  (r3 I:okhttp3.internal.ws.RealWebSocket)\l okhttp3.internal.ws.RealWebSocket.streams okhttp3.internal.ws.RealWebSocket$Streams A[Catch:\{ all \-\> 0x004c \}]\l0x001d: IGET  (r1 I:java.util.concurrent.ScheduledFuture\<?\>) = (r3 I:okhttp3.internal.ws.RealWebSocket) okhttp3.internal.ws.RealWebSocket.cancelFuture java.util.concurrent.ScheduledFuture A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0027 A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|0x0021: IGET  (r1 I:java.util.concurrent.ScheduledFuture\<?\>) = (r3 I:okhttp3.internal.ws.RealWebSocket) okhttp3.internal.ws.RealWebSocket.cancelFuture java.util.concurrent.ScheduledFuture A[Catch:\{ all \-\> 0x004c \}]\l0x0023: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x004c \}]\l0x0024: INVOKE  (r1 I:java.util.concurrent.ScheduledFuture), (r2 I:boolean) java.util.concurrent.ScheduledFuture.cancel(boolean):boolean type: INTERFACE A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|0x0027: IGET  (r1 I:java.util.concurrent.ScheduledExecutorService) = (r3 I:okhttp3.internal.ws.RealWebSocket) okhttp3.internal.ws.RealWebSocket.executor java.util.concurrent.ScheduledExecutorService A[Catch:\{ all \-\> 0x004c \}]\l0x0029: INVOKE  (r1 I:java.util.concurrent.ScheduledExecutorService) java.util.concurrent.ScheduledExecutorService.shutdown():void type: INTERFACE A[Catch:\{ all \-\> 0x004c \}]\l0x002c: GOTO  \-\> 0x002e A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|0x002d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|0x002e: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x004c \}, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x002f|SYNTHETIC\lSplitter:B:16:0x002f\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x002f\l|0x002f: IGET  (r1 I:okhttp3.WebSocketListener) = (r3 I:okhttp3.internal.ws.RealWebSocket) okhttp3.internal.ws.RealWebSocket.listener okhttp3.WebSocketListener A[Catch:\{ all \-\> 0x003f \}, TRY_ENTER]\l0x0031: INVOKE  \l  (r1 I:okhttp3.WebSocketListener)\l  (r3 I:okhttp3.WebSocket)\l  (r4 I:int)\l  (r5 I:java.lang.String)\l okhttp3.WebSocketListener.onClosing(okhttp3.WebSocket, int, java.lang.String):void type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0034|0x0034: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x003b A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0036|0x0036: IGET  (r1 I:okhttp3.WebSocketListener) = (r3 I:okhttp3.internal.ws.RealWebSocket) okhttp3.internal.ws.RealWebSocket.listener okhttp3.WebSocketListener A[Catch:\{ all \-\> 0x003f \}]\l0x0038: INVOKE  \l  (r1 I:okhttp3.WebSocketListener)\l  (r3 I:okhttp3.WebSocket)\l  (r4 I:int)\l  (r5 I:java.lang.String)\l okhttp3.WebSocketListener.onClosed(okhttp3.WebSocket, int, java.lang.String):void type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x003b|0x003b: INVOKE  (r0 I:java.io.Closeable) okhttp3.internal.Util.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_21 [shape=record,label="{21\:\ 0x003e|0x003e: RETURN   \l}"];
Node_22 [shape=record,label="{22\:\ 0x003f|ExcHandler: all null\lSplitter:B:16:0x002f\l|0x003f: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_23 [shape=record,label="{23\:\ 0x0040|0x0040: INVOKE  (r0 I:java.io.Closeable) okhttp3.internal.Util.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_24 [shape=record,label="{24\:\ 0x0043|0x0043: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0044|SYNTHETIC\lSplitter:B:25:0x0044\l}"];
Node_26 [shape=record,label="{26\:\ ?|Splitter:B:25:0x0044\l|0x0044: NEW_INSTANCE  (r4 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException A[Catch:\{ all \-\> 0x004c \}, TRY_ENTER]\l0x0046: CONST_STR  (r5 I:java.lang.String) =  \"already closed\" A[Catch:\{ all \-\> 0x004c \}]\l0x0048: INVOKE  \l  (r4 I:java.lang.IllegalStateException)\l  (r5 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x004b|0x004b: THROW  (r4 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x004c|ExcHandler: all null\lSplitter:B:3:0x0004\l|0x004c: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_29 [shape=record,label="{29\:\ 0x004d|0x004d: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x004c \}, TRY_LEAVE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x004e|0x004e: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_31 [shape=record,label="{31\:\ 0x004f|0x004f: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0051: INVOKE  (r4 I:java.lang.IllegalArgumentException) java.lang.IllegalArgumentException.\<init\>():void type: DIRECT \l}"];
Node_32 [shape=record,label="{32\:\ 0x0054|0x0054: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.ws.RealWebSocket.onReadClose((r3 'this' I:okhttp3.internal.ws.RealWebSocket A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_31;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_28;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_25;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_22;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_31 -> Node_32;
}

