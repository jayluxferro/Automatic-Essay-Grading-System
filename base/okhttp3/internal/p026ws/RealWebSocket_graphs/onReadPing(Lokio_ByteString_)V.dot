digraph "CFG forokhttp3.internal.ws.RealWebSocket.onReadPing(Lokio\/ByteString;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r1)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?}"];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r1.failed != false) goto L_0x0022\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005}"];
Node_5 [shape=record,label="{5\:\ 0x0007|if (r1.enqueuedClose == false) goto L_0x0012\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009}"];
Node_7 [shape=record,label="{7\:\ 0x000f|if (r1.messageAndCloseQueue.isEmpty() == false) goto L_0x0012\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011}"];
Node_9 [shape=record,label="{9\:\ 0x0012|r1.pongQueue.add(r2)\lrunWriter()\lr1.receivedPingCount = r1.receivedPingCount + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|monitor\-exit(r1)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|monitor\-exit(r1)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|REMOVE\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|REMOVE\l}"];
Node_16 [shape=record,label="{16\:\ 0x0026|REMOVE\l|throw r2\l}"];
MethodNode[shape=record,label="{public synchronized void okhttp3.internal.ws.RealWebSocket.onReadPing((r1v0 'this' okhttp3.internal.ws.RealWebSocket A[IMMUTABLE_TYPE, THIS]), (r2v0 okio.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

