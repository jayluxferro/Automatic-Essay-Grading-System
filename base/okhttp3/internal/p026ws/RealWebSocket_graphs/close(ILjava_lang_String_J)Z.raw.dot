digraph "CFG forokhttp3.internal.ws.RealWebSocket.close(ILjava\/lang\/String;J)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r6 I:int) okhttp3.internal.ws.WebSocketProtocol.validateCloseCode(int):void type: STATIC A[Catch:\{ all \-\> 0x004c \}, TRY_ENTER]\l0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002e A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: INVOKE  (r0 I:okio.ByteString) = (r7 I:java.lang.String) okio.ByteString.encodeUtf8(java.lang.String):okio.ByteString type: STATIC A[Catch:\{ all \-\> 0x004c \}]\l0x000b: INVOKE  (r1 I:int) = (r0 I:okio.ByteString) okio.ByteString.size():int type: VIRTUAL A[Catch:\{ all \-\> 0x004c \}]\l0x000f: CAST  (r1 I:long) = (long) (r1 I:int) A[Catch:\{ all \-\> 0x004c \}]\l0x0010: CONST  (r3 I:?[long, double]) = (123(0x7b, double:6.1E\-322) ?[long, double]) A[Catch:\{ all \-\> 0x004c \}]\l0x0012: CMP_L  (r1 I:int) = (r1 I:long), (r3 I:long) A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r1 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:7:0x0017 A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: GOTO  \-\> 0x002e A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: NEW_INSTANCE  (r6 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException A[Catch:\{ all \-\> 0x004c \}]\l0x0019: NEW_INSTANCE  (r8 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x004c \}]\l0x001b: INVOKE  (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x004c \}]\l0x001e: CONST_STR  (r9 I:java.lang.String) =  \"reason.size() \> 123: \" A[Catch:\{ all \-\> 0x004c \}]\l0x0020: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x004c \}]\l0x0023: INVOKE  (r8 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x004c \}]\l0x0026: INVOKE  (r7 I:java.lang.String) = (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x004c \}]\l0x002a: INVOKE  \l  (r6 I:java.lang.IllegalArgumentException)\l  (r7 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: THROW  (r6 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|0x002e: IGET  (r7 I:boolean) = (r5 I:okhttp3.internal.ws.RealWebSocket) okhttp3.internal.ws.RealWebSocket.failed boolean A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|0x0030: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0049 A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|0x0032: IGET  (r7 I:boolean) = (r5 I:okhttp3.internal.ws.RealWebSocket) okhttp3.internal.ws.RealWebSocket.enqueuedClose boolean A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0037 A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0036|0x0036: GOTO  \-\> 0x0049 A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x004c \}]\l0x0038: IPUT  (r7 I:boolean), (r5 I:okhttp3.internal.ws.RealWebSocket) okhttp3.internal.ws.RealWebSocket.enqueuedClose boolean A[Catch:\{ all \-\> 0x004c \}]\l0x003a: IGET  (r1 I:java.util.ArrayDeque\<java.lang.Object\>) = (r5 I:okhttp3.internal.ws.RealWebSocket) okhttp3.internal.ws.RealWebSocket.messageAndCloseQueue java.util.ArrayDeque A[Catch:\{ all \-\> 0x004c \}]\l0x003c: NEW_INSTANCE  (r2 I:okhttp3.internal.ws.RealWebSocket$Close) =  okhttp3.internal.ws.RealWebSocket$Close A[Catch:\{ all \-\> 0x004c \}]\l0x003e: INVOKE  \l  (r2 I:okhttp3.internal.ws.RealWebSocket$Close)\l  (r6 I:int)\l  (r0 I:okio.ByteString)\l  (r8 I:long)\l okhttp3.internal.ws.RealWebSocket.Close.\<init\>(int, okio.ByteString, long):void type: DIRECT A[Catch:\{ all \-\> 0x004c \}]\l0x0041: INVOKE  (r1 I:java.util.ArrayDeque), (r2 I:java.lang.Object) java.util.ArrayDeque.add(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x004c \}]\l0x0044: INVOKE  (r5 I:okhttp3.internal.ws.RealWebSocket) okhttp3.internal.ws.RealWebSocket.runWriter():void type: DIRECT A[Catch:\{ all \-\> 0x004c \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0047|0x0047: MONITOR_EXIT  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0048|0x0048: RETURN  (r7 I:boolean) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0049|0x0049: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|0x004a: MONITOR_EXIT  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x004b|0x004b: RETURN  (r6 I:boolean) \l}"];
Node_20 [shape=record,label="{20\:\ 0x004c|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x004c: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_21 [shape=record,label="{21\:\ 0x004d|0x004d: MONITOR_EXIT  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x004e|0x004e: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{synchronized boolean okhttp3.internal.ws.RealWebSocket.close((r5 'this' I:okhttp3.internal.ws.RealWebSocket A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22;
}

