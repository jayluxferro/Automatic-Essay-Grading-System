digraph "CFG forokhttp3.internal.ws.RealWebSocket.initReaderAndWriter(Ljava\/lang\/String;Lokhttp3\/internal\/ws\/RealWebSocket$Streams;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r7)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?|r7.streams = r9\lr7.writer = new okhttp3.internal.p026ws.WebSocketWriter(r9.client, r9.sink, r7.random)\lr7.executor = new java.util.concurrent.ScheduledThreadPoolExecutor(1, okhttp3.internal.Util.threadFactory(r8, false))\l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|if ((r7.pingIntervalMillis \> 0 ? 1 : (r7.pingIntervalMillis == 0 ? 0 : \-1)) == 0) goto L_0x0035\l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|r7.executor.scheduleAtFixedRate(new okhttp3.internal.p026ws.RealWebSocket.PingRunnable(r7), r7.pingIntervalMillis, r7.pingIntervalMillis, java.util.concurrent.TimeUnit.MILLISECONDS)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0035}"];
Node_6 [shape=record,label="{6\:\ 0x003b|if (r7.messageAndCloseQueue.isEmpty() != false) goto L_0x0040\l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|runWriter()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0040|monitor\-exit(r7)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|r7.reader = new okhttp3.internal.p026ws.WebSocketReader(r9.client, r9.source, r7)\l}"];
Node_10 [shape=record,label="{10\:\ 0x004c|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x004d|LOOP_START\lREMOVE\lLOOP:0: B:11:0x004d\-\>B:15:0x004d\l|java.lang.Throwable r8 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x004e|SYNTHETIC\lREMOVE\lSplitter:B:12:0x004e\l}"];
Node_13 [shape=record,label="{13\:\ ?|REMOVE\lSplitter:B:12:0x004e\l}"];
Node_14 [shape=record,label="{14\:\ 0x004f|REMOVE\l|throw r8\l}"];
Node_15 [shape=record,label="{15\:\ 0x004d|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:11:0x004d\-\>B:15:0x004d\l}"];
Node_16 [shape=record,label="{16\:\ 0x004f|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_17 [shape=record,label="{17\:\ 0x004d|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.ws.RealWebSocket.initReaderAndWriter((r7v0 'this' okhttp3.internal.ws.RealWebSocket A[IMMUTABLE_TYPE, THIS]), (r8v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 okhttp3.internal.ws.RealWebSocket$Streams A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_15;
Node_13 -> Node_16;
Node_13 -> Node_17;
Node_15 -> Node_11;
Node_16 -> Node_14;
Node_17 -> Node_15;
}

