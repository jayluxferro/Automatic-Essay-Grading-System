digraph "CFG forokhttp3.internal.ws.WebSocketReader.readUntilNonControlFrame()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r1 I:okhttp3.internal.ws.WebSocketReader) okhttp3.internal.ws.WebSocketReader.closed boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r1 I:okhttp3.internal.ws.WebSocketReader) okhttp3.internal.ws.WebSocketReader.readHeader():void type: DIRECT \l0x0007: IGET  (r0 I:boolean) = (r1 I:okhttp3.internal.ws.WebSocketReader) okhttp3.internal.ws.WebSocketReader.isControlFrame boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000c \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: INVOKE  (r1 I:okhttp3.internal.ws.WebSocketReader) okhttp3.internal.ws.WebSocketReader.readControlFrame():void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: RETURN   \l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.ws.WebSocketReader.readUntilNonControlFrame((r1 'this' I:okhttp3.internal.ws.WebSocketReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_0;
}

