digraph "CFG forokhttp3.internal.ws.WebSocketReader.readControlFrame()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if ((r8.frameLength \> 0 ? 1 : (r8.frameLength == 0 ? 0 : \-1)) \<= 0) goto L_0x002d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|r8.source.readFully(r8.controlFrameBuffer, r8.frameLength)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|if (r8.isClient != false) goto L_0x002d\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|r8.controlFrameBuffer.readAndWriteUnsafe(r8.maskCursor)\lr8.maskCursor.seek(0)\lokhttp3.internal.p026ws.WebSocketProtocol.toggleMask(r8.maskCursor, r8.maskKey)\lr8.maskCursor.close()\l}"];
Node_5 [shape=record,label="{5\:\ 0x002d}"];
Node_6 [shape=record,label="{6\:\ 0x002f|switch(r8.opcode) \{\l    case 8: goto L_0x0067;\l    case 9: goto L_0x005b;\l    case 10: goto L_0x004f;\l    default: goto L_0x0032;\l\}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0032|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Unknown control opcode: \")\lr1.append(java.lang.Integer.toHexString(r8.opcode))\l}"];
Node_8 [shape=record,label="{8\:\ 0x004e|throw new java.net.ProtocolException(r1.toString())\l}"];
Node_9 [shape=record,label="{9\:\ 0x004f|r8.frameCallback.onReadPong(r8.controlFrameBuffer.readByteString())\l}"];
Node_10 [shape=record,label="{10\:\ 0x005b|r8.frameCallback.onReadPing(r8.controlFrameBuffer.readByteString())\l}"];
Node_11 [shape=record,label="{11\:\ 0x0067|r0 = 1005\ljava.lang.String r1 = \"\"\llong r4 = r8.controlFrameBuffer.size()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0075|if ((r4 \> 1 ? 1 : (r4 == 1 ? 0 : \-1)) == 0) goto L_0x009d\l}"];
Node_13 [shape=record,label="{13\:\ 0x0077}"];
Node_14 [shape=record,label="{14\:\ 0x0079|if ((r4 \> 0 ? 1 : (r4 == 0 ? 0 : \-1)) == 0) goto L_0x0094\l}"];
Node_15 [shape=record,label="{15\:\ 0x007b|short r0 = r8.controlFrameBuffer.readShort()\ljava.lang.String r1 = r8.controlFrameBuffer.readUtf8()\ljava.lang.String r2 = okhttp3.internal.p026ws.WebSocketProtocol.closeCodeExceptionMessage(r0)\l}"];
Node_16 [shape=record,label="{16\:\ 0x008b|if (r2 != null) goto L_0x008e\l}"];
Node_17 [shape=record,label="{17\:\ 0x008e}"];
Node_18 [shape=record,label="{18\:\ 0x0093|throw new java.net.ProtocolException(r2)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0094|PHI: r0 r1 \l  PHI: (r0v5 short) = (r0v3 short), (r0v8 short) binds: [B:14:0x0079, B:16:0x008b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 java.lang.String) = (r1v0 java.lang.String), (r1v4 java.lang.String) binds: [B:14:0x0079, B:16:0x008b] A[DONT_GENERATE, DONT_INLINE]\l|r8.frameCallback.onReadClose(r0, r1)\lr8.closed = true\l}"];
Node_20 [shape=record,label="{20\:\ 0x009d}"];
Node_21 [shape=record,label="{21\:\ 0x00a4|throw new java.net.ProtocolException(\"Malformed close payload length of 1.\")\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.ws.WebSocketReader.readControlFrame((r8v0 'this' okhttp3.internal.ws.WebSocketReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9;
Node_6 -> Node_10;
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_9 -> Node_23;
Node_10 -> Node_24;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_20;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_19[style=dashed];
Node_17 -> Node_18;
Node_19 -> Node_22;
Node_20 -> Node_21;
}

