digraph "CFG forokhttp3.internal.ws.WebSocketReader.readHeader()V" {
subgraph cluster_Region_954056813 {
label = "R(1:(2:2|(4:5|9|13|(4:20|24|28|(2:(1:63)|(3:34|(1:36)|(2:(1:44)|(3:45|(1:47)(1:(2:50|(2:52|53)))|(1:59)(1:(1:61)(0)))))))(1:18)))(1:68))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2136372419 {
label = "IF [B:1:0x0002] THEN: R(2:2|(4:5|9|13|(4:20|24|28|(2:(1:63)|(3:34|(1:36)|(2:(1:44)|(3:45|(1:47)(1:(2:50|(2:52|53)))|(1:59)(1:(1:61)(0)))))))(1:18))) ELSE: R(1:68)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r6.closed == false) goto L_0x0004\l}"];
subgraph cluster_Region_271336257 {
label = "R(2:2|(4:5|9|13|(4:20|24|28|(2:(1:63)|(3:34|(1:36)|(2:(1:44)|(3:45|(1:47)(1:(2:50|(2:52|53)))|(1:59)(1:(1:61)(0)))))))(1:18)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|long long r0 = r6.source.timeout().timeoutNanos()\lr6.source.timeout().clearTimeout()\l}"];
subgraph cluster_TryCatchRegion_2076527478 {
label = "Try: R(4:5|9|13|(4:20|24|28|(2:(1:63)|(3:34|(1:36)|(2:(1:44)|(3:45|(1:47)(1:(2:50|(2:52|53)))|(1:59)(1:(1:61)(0)))))))(1:18)) catches: R(3:64|65|66)";
node [shape=record,color=blue];
subgraph cluster_Region_950117956 {
label = "R(4:5|9|13|(4:20|24|28|(2:(1:63)|(3:34|(1:36)|(2:(1:44)|(3:45|(1:47)(1:(2:50|(2:52|53)))|(1:59)(1:(1:61)(0)))))))(1:18))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001d|byte r2 = r6.source.readByte() & 255\lr6.source.timeout().timeout(r0, java.util.concurrent.TimeUnit.NANOSECONDS)\lr6.opcode = r2 & 15\lboolean r1 = false\l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|PHI: r0 \l  PHI: (r0v7 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r6.isFinalFrame = (r2 & kotlin.jvm.internal.ByteCompanionObject.MIN_VALUE) != 0\l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|PHI: r0 \l  PHI: (r0v9 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r6.isControlFrame = (r2 & 8) != 0\l}"];
subgraph cluster_IfRegion_596162846 {
label = "IF [B:14:0x0044, B:16:0x0048] THEN: R(4:20|24|28|(2:(1:63)|(3:34|(1:36)|(2:(1:44)|(3:45|(1:47)(1:(2:50|(2:52|53)))|(1:59)(1:(1:61)(0))))))) ELSE: R(1:18)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0044|if (r6.isControlFrame == false) goto L_0x0053\l}"];
Node_16 [shape=record,label="{16\:\ 0x0048|ADDED_TO_REGION\l|if (r6.isFinalFrame == true) goto L_0x0053\l}"];
subgraph cluster_Region_1708200406 {
label = "R(4:20|24|28|(2:(1:63)|(3:34|(1:36)|(2:(1:44)|(3:45|(1:47)(1:(2:50|(2:52|53)))|(1:59)(1:(1:61)(0)))))))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0055|boolean r0 = (r2 & 64) != 0\l}"];
Node_24 [shape=record,label="{24\:\ 0x005c|boolean r4 = (r2 & 32) != 0\l}"];
Node_28 [shape=record,label="{28\:\ 0x0063|boolean r2 = (r2 & 16) != 0\l}"];
subgraph cluster_Region_1962986410 {
label = "R(2:(1:63)|(3:34|(1:36)|(2:(1:44)|(3:45|(1:47)(1:(2:50|(2:52|53)))|(1:59)(1:(1:61)(0))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1031353999 {
label = "IF [B:31:0x0068, B:32:0x006a, B:33:0x006c] THEN: R(1:63) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0068|PHI: r2 \l  PHI: (r2v7 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == true) goto L_0x0103\l}"];
Node_32 [shape=record,label="{32\:\ 0x006a|ADDED_TO_REGION\l|if (r4 == true) goto L_0x0103\l}"];
Node_33 [shape=record,label="{33\:\ 0x006c|ADDED_TO_REGION\l|if (r2 == true) goto L_0x0103\l}"];
subgraph cluster_Region_960256421 {
label = "R(1:63)";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x010a|throw new java.net.ProtocolException(\"Reserved flags are unsupported.\")\l}"];
}
}
subgraph cluster_Region_22279942 {
label = "R(3:34|(1:36)|(2:(1:44)|(3:45|(1:47)(1:(2:50|(2:52|53)))|(1:59)(1:(1:61)(0)))))";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x006e|byte r0 = r6.source.readByte() & 255\l}"];
subgraph cluster_IfRegion_946022717 {
label = "IF [B:35:0x0078] THEN: R(1:36) ELSE: null";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0078|if ((r0 & kotlin.jvm.internal.ByteCompanionObject.MIN_VALUE) != 0) goto L_0x007a\l}"];
subgraph cluster_Region_387280998 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x007a|r1 = true\l}"];
}
}
subgraph cluster_Region_1752378127 {
label = "R(2:(1:44)|(3:45|(1:47)(1:(2:50|(2:52|53)))|(1:59)(1:(1:61)(0))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_582182726 {
label = "IF [B:38:0x007d] THEN: R(1:44) ELSE: null";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x007d|if (r1 == r6.isClient) goto L_0x007f\l}"];
subgraph cluster_Region_240463702 {
label = "R(1:44)";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x008d|throw new java.net.ProtocolException(r6.isClient ? \"Server\-sent frames must not be masked.\" : \"Client\-sent frames must be masked.\")\l}"];
}
}
subgraph cluster_Region_909228186 {
label = "R(3:45|(1:47)(1:(2:50|(2:52|53)))|(1:59)(1:(1:61)(0)))";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x008e|r6.frameLength = (long) (r0 & kotlin.jvm.internal.ByteCompanionObject.MAX_VALUE)\l}"];
subgraph cluster_IfRegion_2105272493 {
label = "IF [B:46:0x0099] THEN: R(1:47) ELSE: R(1:(2:50|(2:52|53)))";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0099|if (r6.frameLength == 126) goto L_0x009b\l}"];
subgraph cluster_Region_651257814 {
label = "R(1:47)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x009b|r6.frameLength = ((long) r6.source.readShort()) & 65535\l}"];
}
subgraph cluster_Region_1460345680 {
label = "R(1:(2:50|(2:52|53))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1887678840 {
label = "IF [B:49:0x00af] THEN: R(2:50|(2:52|53)) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x00af|if (r6.frameLength == 127) goto L_0x00b1\l}"];
subgraph cluster_Region_1377763653 {
label = "R(2:50|(2:52|53))";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x00b1|r6.frameLength = r6.source.readLong()\l}"];
subgraph cluster_IfRegion_2136810247 {
label = "IF [B:51:0x00bf] THEN: R(2:52|53) ELSE: null";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x00bf|if (r6.frameLength \< 0) goto L_0x00c2\l}"];
subgraph cluster_Region_1879270951 {
label = "R(2:52|53)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x00c2}"];
Node_53 [shape=record,label="{53\:\ 0x00e3|throw new java.net.ProtocolException(\"Frame length 0x\" + java.lang.Long.toHexString(r6.frameLength) + \" \> 0x7FFFFFFFFFFFFFFF\")\l}"];
}
}
}
}
}
}
subgraph cluster_IfRegion_493224238 {
label = "IF [B:55:0x00e6, B:57:0x00ee] THEN: R(1:59) ELSE: R(1:(1:61)(0))";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x00e6|if (r6.isControlFrame != false) goto L_0x00e8\l}"];
Node_57 [shape=record,label="{57\:\ 0x00ee|ADDED_TO_REGION\l|if (r6.frameLength \> 125) goto L_0x00f1\l}"];
subgraph cluster_Region_928591598 {
label = "R(1:59)";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x00f8|throw new java.net.ProtocolException(\"Control frame must be less than 125B.\")\l}"];
}
subgraph cluster_Region_562718233 {
label = "R(1:(1:61)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1347146481 {
label = "IF [B:60:0x00f9] THEN: R(1:61) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x00f9|if (r1 == true) goto L_0x00fb\l}"];
subgraph cluster_Region_1246957137 {
label = "R(1:61)";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x00fb|r6.source.readFully(r6.maskKey)\l}"];
}
subgraph cluster_Region_1737558340 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
}
}
}
subgraph cluster_Region_432108806 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0052|throw new java.net.ProtocolException(\"Control frames must be final.\")\l}"];
}
}
}
subgraph cluster_Region_1901095770 {
label = "R(3:64|65|66) | ExcHandler: all (r2v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x010b|ExcHandler: all (r2v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:3:0x0017\l}"];
Node_65 [shape=record,label="{65\:\ 0x010c|r6.source.timeout().timeout(r0, java.util.concurrent.TimeUnit.NANOSECONDS)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0117|throw r2\l}"];
}
}
}
subgraph cluster_Region_1795777161 {
label = "R(1:68)";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x011f|throw new java.io.IOException(\"closed\")\l}"];
}
}
}
subgraph cluster_Region_1901095770 {
label = "R(3:64|65|66) | ExcHandler: all (r2v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x010b|ExcHandler: all (r2v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:3:0x0017\l}"];
Node_65 [shape=record,label="{65\:\ 0x010c|r6.source.timeout().timeout(r0, java.util.concurrent.TimeUnit.NANOSECONDS)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0117|throw r2\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0017|SYNTHETIC\lSplitter:B:3:0x0017\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|Catch:\{ all \-\> 0x010b \}\lSplitter:B:3:0x0017\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0032}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0034}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0036}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x003b}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x003d}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x003f}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0046}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x004b}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0053}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0057}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0059}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x005a|PHI: r0 \l  PHI: (r0v12 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x005e}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0060}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0061|PHI: r4 \l  PHI: (r4v3 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0065}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0067}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x007b|PHI: r1 \l  PHI: (r1v3 boolean) = (r1v1 boolean), (r1v12 boolean) binds: [B:35:0x0078, B:36:0x007a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x007f}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0083}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0085}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0088}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x008a|PHI: r1 \l  PHI: (r1v9 java.lang.String) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x00a9}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x00e4}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x00e8}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x00f1}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x0103}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x0118}"];
Node_69 [shape=record,color=red,label="{69\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_70 [shape=record,color=red,label="{70\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.ws.WebSocketReader.readHeader((r6v0 'this' okhttp3.internal.ws.WebSocketReader A[IMMUTABLE_TYPE, THIS]))  | JADX INFO: finally extract failed\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_67[style=dashed];
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_9 -> Node_10;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_20 -> Node_21;
Node_20 -> Node_22;
Node_24 -> Node_25;
Node_24 -> Node_26;
Node_28 -> Node_29;
Node_28 -> Node_30;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_62;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_62;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_62;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_37[style=dashed];
Node_36 -> Node_37;
Node_38 -> Node_39;
Node_38 -> Node_45[style=dashed];
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_46 -> Node_48[style=dashed];
Node_47 -> Node_54;
Node_49 -> Node_50;
Node_49 -> Node_54[style=dashed];
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_51 -> Node_54[style=dashed];
Node_52 -> Node_53;
Node_55 -> Node_56;
Node_55 -> Node_60[style=dashed];
Node_57 -> Node_58;
Node_57 -> Node_60[style=dashed];
Node_60 -> Node_61;
Node_60 -> Node_70[style=dashed];
Node_61 -> Node_69;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_3 -> Node_64;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_40 -> Node_42;
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_48 -> Node_49;
Node_54 -> Node_55;
Node_56 -> Node_57;
Node_58 -> Node_59;
Node_62 -> Node_63;
Node_67 -> Node_68;
}

