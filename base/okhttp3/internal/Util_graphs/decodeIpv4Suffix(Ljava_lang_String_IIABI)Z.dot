digraph "CFG forokhttp3.internal.Util.decodeIpv4Suffix(Ljava\/lang\/String;II[BI)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r11\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 r8 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:27:0x003c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 int) = (r8v0 int), (r8v5 int) binds: [B:0:0x0000, B:27:0x003c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:27:0x003c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0002|if (r8 \>= r9) goto L_0x0044\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004}"];
Node_4 [shape=record,label="{4\:\ 0x0005|if (r0 != r10.length) goto L_0x0008\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|RETURN\l|return false\l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|if (r0 == r11) goto L_0x0015\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a}"];
Node_8 [shape=record,label="{8\:\ 0x0010|if (r7.charAt(r8) == '.') goto L_0x0013\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|RETURN\l|return false\l}"];
Node_10 [shape=record,label="{10\:\ 0x0013|int r8 = r8 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|PHI: r8 \l  PHI: (r8v2 int) = (r8v1 int), (r8v6 int) binds: [B:6:0x0008, B:10:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|r2 = r8\lr3 = 0\l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|LOOP_START\lPHI: r2 r3 \l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int) binds: [B:11:0x0015, B:23:0x0034] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v4 int) binds: [B:11:0x0015, B:23:0x0034] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:12:0x0017\-\>B:23:0x0034\l|if (r2 \>= r9) goto L_0x0037\l}"];
Node_13 [shape=record,label="{13\:\ 0x0019|char r4 = r7.charAt(r2)\l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|if (r4 \< '0') goto L_0x0037\l}"];
Node_15 [shape=record,label="{15\:\ 0x0021}"];
Node_16 [shape=record,label="{16\:\ 0x0023|if (r4 \<= '9') goto L_0x0026\l}"];
Node_17 [shape=record,label="{17\:\ 0x0026|if (r3 != 0) goto L_0x002b\l}"];
Node_18 [shape=record,label="{18\:\ 0x0028|if (r8 == r2) goto L_0x002b\l}"];
Node_19 [shape=record,label="{19\:\ 0x002a|RETURN\l|return false\l}"];
Node_20 [shape=record,label="{20\:\ 0x002b|int r3 = ((r3 * 10) + r4) \- 48\l}"];
Node_21 [shape=record,label="{21\:\ 0x0031|if (r3 \<= 255) goto L_0x0034\l}"];
Node_22 [shape=record,label="{22\:\ 0x0033|RETURN\l|return false\l}"];
Node_23 [shape=record,label="{23\:\ 0x0034|LOOP_END\lLOOP:1: B:12:0x0017\-\>B:23:0x0034\l|int r2 = r2 + 1\l}"];
Node_24 [shape=record,label="{24\:\ 0x0037}"];
Node_25 [shape=record,label="{25\:\ 0x0039|if ((r2 \- r8) != 0) goto L_0x003c\l}"];
Node_26 [shape=record,label="{26\:\ 0x003b|RETURN\l|return false\l}"];
Node_27 [shape=record,label="{27\:\ 0x003c|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:27:0x003c\l|r10[r0] = (byte) r3\lr0 = r0 + 1\lr8 = r2\l}"];
Node_28 [shape=record,label="{28\:\ 0x0044}"];
Node_29 [shape=record,label="{29\:\ 0x0046|if (r0 == (r11 + 4)) goto L_0x0049\l}"];
Node_30 [shape=record,label="{30\:\ 0x0048|RETURN\l|return false\l}"];
Node_31 [shape=record,label="{31\:\ 0x0049|RETURN\l|return true\l}"];
Node_32 [shape=record,label="{32\:\ 0x0044|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0007|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x002a|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0012|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0033|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x003b|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0037|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0037|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0037|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static boolean okhttp3.internal.Util.decodeIpv4Suffix((r7v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_32;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_33[style=dashed];
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_35[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_39;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_40;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_38[style=dashed];
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_20;
Node_18 -> Node_34[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_36[style=dashed];
Node_23 -> Node_12;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_25 -> Node_37[style=dashed];
Node_27 -> Node_1;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_32 -> Node_28;
Node_33 -> Node_5;
Node_34 -> Node_19;
Node_35 -> Node_9;
Node_36 -> Node_22;
Node_37 -> Node_26;
Node_38 -> Node_24;
Node_39 -> Node_24;
Node_40 -> Node_24;
}

