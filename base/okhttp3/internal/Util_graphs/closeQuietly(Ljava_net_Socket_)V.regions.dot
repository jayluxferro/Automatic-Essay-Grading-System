digraph "CFG forokhttp3.internal.Util.closeQuietly(Ljava\/net\/Socket;)V" {
subgraph cluster_Region_783963681 {
label = "R(1:(1:(1:2))(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1893572593 {
label = "IF [B:0:0x0000] THEN: R(1:(1:2)) ELSE: R(0)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r1 != null) goto L_0x0002\l}"];
subgraph cluster_Region_1688635159 {
label = "R(1:(1:2))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_485551612 {
label = "Try: R(1:2) catches: R(2:5|(1:(1:8))), R(2:3|4), R(0)";
node [shape=record,color=blue];
subgraph cluster_Region_1619503901 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ AssertionError \-\> 0x0008, RuntimeException \-\> 0x0006, Exception \-\> 0x0011 \}\lSplitter:B:1:0x0002\l|r1.close()     \/\/ Catch:\{ AssertionError \-\> 0x0008, RuntimeException \-\> 0x0006, Exception \-\> 0x0011 \}\l}"];
}
subgraph cluster_Region_2084143851 {
label = "R(2:5|(1:(1:8))) | ExcHandler: AssertionError (r1v1 'e' java.lang.AssertionError A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0008|ExcHandler: AssertionError (r1v1 'e' java.lang.AssertionError A[CUSTOM_DECLARE])\lSplitter:B:1:0x0002\l}"];
subgraph cluster_Region_754396228 {
label = "R(1:(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_930331435 {
label = "IF [B:7:0x000d] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000d|if (isAndroidGetsocknameError(r1) != true) goto L_0x0010\l}"];
subgraph cluster_Region_1785799067 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0010|throw r1\l}"];
}
}
}
}
subgraph cluster_Region_1525663972 {
label = "R(2:3|4) | ExcHandler: RuntimeException (r1v2 'e' java.lang.RuntimeException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|ExcHandler: RuntimeException (r1v2 'e' java.lang.RuntimeException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0002\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|throw r1\l}"];
}
subgraph cluster_Region_1341086449 {
label = "R(0) | ExcHandler: Exception (unused java.lang.Exception)\l";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_1710164676 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_2084143851 {
label = "R(2:5|(1:(1:8))) | ExcHandler: AssertionError (r1v1 'e' java.lang.AssertionError A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0008|ExcHandler: AssertionError (r1v1 'e' java.lang.AssertionError A[CUSTOM_DECLARE])\lSplitter:B:1:0x0002\l}"];
subgraph cluster_Region_754396228 {
label = "R(1:(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_930331435 {
label = "IF [B:7:0x000d] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000d|if (isAndroidGetsocknameError(r1) != true) goto L_0x0010\l}"];
subgraph cluster_Region_1785799067 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0010|throw r1\l}"];
}
}
}
}
subgraph cluster_Region_1525663972 {
label = "R(2:3|4) | ExcHandler: RuntimeException (r1v2 'e' java.lang.RuntimeException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|ExcHandler: RuntimeException (r1v2 'e' java.lang.RuntimeException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0002\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|throw r1\l}"];
}
subgraph cluster_Region_1341086449 {
label = "R(0) | ExcHandler: Exception (unused java.lang.Exception)\l";
node [shape=record,color=blue];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0009}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\lExcHandler: Exception (unused java.lang.Exception)\lSplitter:B:1:0x0002\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static void okhttp3.internal.Util.closeQuietly((r1v0 java.net.Socket A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_11[style=dashed];
Node_2 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_2 -> Node_12;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_13[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_13[style=dashed];
Node_3 -> Node_4;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_1 -> Node_3;
Node_1 -> Node_9;
Node_6 -> Node_7;
Node_9 -> Node_10;
}

