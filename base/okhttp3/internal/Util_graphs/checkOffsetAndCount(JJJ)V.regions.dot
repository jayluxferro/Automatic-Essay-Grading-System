digraph "CFG forokhttp3.internal.Util.checkOffsetAndCount(JJJ)V" {
subgraph cluster_Region_434315742 {
label = "R(1:(1:(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_72171678 {
label = "R(1:(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_875334623 {
label = "IF [B:1:0x0006, B:3:0x000a, B:5:0x000f] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if ((r6 \| r8) \< 0) goto L_0x0012\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|ADDED_TO_REGION\l|if (r6 \> r4) goto L_0x0012\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|ADDED_TO_REGION\l|if ((r4 \- r6) \< r8) goto L_0x0012\l}"];
subgraph cluster_Region_1079680966 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0017|throw new java.lang.ArrayIndexOutOfBoundsException()\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000c}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0011}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0012}"];
MethodNode[shape=record,label="{public static void okhttp3.internal.Util.checkOffsetAndCount((r4v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_7 -> Node_8;
}

