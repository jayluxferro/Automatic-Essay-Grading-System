digraph "CFG forokhttp3.internal.Util.decodeIpv4Suffix(Ljava\/lang\/String;II[BI)Z" {
subgraph cluster_Region_2050797375 {
label = "R(3:0|(1:(2:(1:5)|(4:(1:(2:(1:9)|(1:10)))|11|(2:13|(1:38)(1:(1:22)(1:23)))|(2:(1:26)|(1:27)))))|(2:(1:30)|(1:31)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r11\l}"];
subgraph cluster_LoopRegion_1989936833 {
label = "LOOP:0: (1:(2:(1:5)|(4:(1:(2:(1:9)|(1:10)))|11|(2:13|(1:38)(1:(1:22)(1:23)))|(2:(1:26)|(1:27)))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0002|if (r8 \< r9) goto L_0x0004\l}"];
subgraph cluster_Region_1972060395 {
label = "R(1:(2:(1:5)|(4:(1:(2:(1:9)|(1:10)))|11|(2:13|(1:38)(1:(1:22)(1:23)))|(2:(1:26)|(1:27)))))";
node [shape=record,color=blue];
subgraph cluster_Region_609950399 {
label = "R(2:(1:5)|(4:(1:(2:(1:9)|(1:10)))|11|(2:13|(1:38)(1:(1:22)(1:23)))|(2:(1:26)|(1:27))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1382712743 {
label = "IF [B:4:0x0005] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|if (r0 == r10.length) goto L_0x0007\l}"];
subgraph cluster_Region_1990478340 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0007|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_2113710202 {
label = "R(4:(1:(2:(1:9)|(1:10)))|11|(2:13|(1:38)(1:(1:22)(1:23)))|(2:(1:26)|(1:27)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1871800622 {
label = "IF [B:6:0x0008] THEN: R(1:(2:(1:9)|(1:10))) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0008|if (r0 != r11) goto L_0x000a\l}"];
subgraph cluster_Region_1612247071 {
label = "R(1:(2:(1:9)|(1:10)))";
node [shape=record,color=blue];
subgraph cluster_Region_1337686255 {
label = "R(2:(1:9)|(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_860425541 {
label = "IF [B:8:0x0010] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0010|if (r7.charAt(r8) != '.') goto L_0x0012\l}"];
subgraph cluster_Region_1734968642 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0012|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1087773112 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0013|r8++\l}"];
}
}
}
}
Node_11 [shape=record,label="{11\:\ 0x0015|PHI: r8 \l  PHI: (r8v2 int) = (r8v1 int), (r8v6 int) binds: [B:6:0x0008, B:10:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = r8\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_520197023 {
label = "LOOP:1: (2:13|(1:38)(1:(1:22)(1:23)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0017|LOOP_START\lPHI: r2 r3 \l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int) binds: [B:11:0x0015, B:23:0x0034] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v4 int) binds: [B:11:0x0015, B:23:0x0034] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:12:0x0017\-\>B:23:0x0034\l|if (r2 \< r9) goto L_0x0019\l}"];
subgraph cluster_Region_877967373 {
label = "R(2:13|(1:38)(1:(1:22)(1:23)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0019|char char r4 = r7.charAt(r2)\l}"];
subgraph cluster_IfRegion_775940899 {
label = "IF [B:14:0x001f, B:16:0x0023] THEN: R(1:38) ELSE: R(1:(1:22)(1:23))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x001f|ADDED_TO_REGION\l|if (r4 \< '0') goto L_0x0037\l}"];
Node_16 [shape=record,label="{16\:\ 0x0023|ADDED_TO_REGION\l|if (r4 \> '9') goto L_0x0037\l}"];
subgraph cluster_Region_1421765965 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0037|SYNTHETIC\lEDGE_INSN: B:38:0x0037\-\>B:24:0x0037 ?: BREAK  \l|break\l}"];
}
subgraph cluster_Region_795238842 {
label = "R(1:(1:22)(1:23)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_754153861 {
label = "IF [B:17:0x0026, B:18:0x0028, B:21:0x0031] THEN: R(1:22) ELSE: R(1:23) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0026|if (r3 == 0) goto L_0x0028\l}"];
Node_18 [shape=record,label="{18\:\ 0x0028|ADDED_TO_REGION\l|if (r8 != r2) goto L_0x002a\l}"];
Node_21 [shape=record,label="{21\:\ 0x0031|ADDED_TO_REGION\l|if ((r3 = ((r3 * 10) + r4) \- 48) \> 255) goto L_0x0033\l}"];
subgraph cluster_Region_68067969 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0033|RETURN\l|return false\l}"];
}
subgraph cluster_Region_2076003807 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0034|LOOP_END\lLOOP:1: B:12:0x0017\-\>B:23:0x0034\l|r2++\l}"];
}
}
}
}
}
}
subgraph cluster_Region_1961193569 {
label = "R(2:(1:26)|(1:27))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1026628209 {
label = "IF [B:25:0x0039] THEN: R(1:26) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0039|if ((r2 \- r8) == 0) goto L_0x003b\l}"];
subgraph cluster_Region_1402384309 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x003b|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1428881981 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x003c|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:27:0x003c\l|r10[r0] = (byte) r3\lr0++\lr8 = r2\l}"];
}
}
}
}
}
}
subgraph cluster_Region_1331785676 {
label = "R(2:(1:30)|(1:31))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1892378292 {
label = "IF [B:29:0x0046] THEN: R(1:30) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0046|if (r0 != (r11 + 4)) goto L_0x0048\l}"];
subgraph cluster_Region_1049286155 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0048|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1639178179 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0049|RETURN\l|return true\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 r8 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:27:0x003c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 int) = (r8v0 int), (r8v5 int) binds: [B:0:0x0000, B:27:0x003c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:27:0x003c\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0004}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000a}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0021}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x002a|RETURN\lADDED_TO_REGION\l|return false\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x002b}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0037|EDGE_INSN: B:38:0x0037\-\>B:24:0x0037 ?: BREAK  \lEDGE_INSN: B:40:0x0037\-\>B:24:0x0037 ?: BREAK  \l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0044}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0044|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0007|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x002a|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0012|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0033|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x003b|SYNTHETIC\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0037|SYNTHETIC\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0037|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:40:0x0037\-\>B:24:0x0037 ?: BREAK  \l}"];
MethodNode[shape=record,label="{private static boolean okhttp3.internal.Util.decodeIpv4Suffix((r7v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_32[style=dashed];
Node_4 -> Node_6[style=dashed];
Node_4 -> Node_33;
Node_6 -> Node_7;
Node_6 -> Node_11[style=dashed];
Node_8 -> Node_10[style=dashed];
Node_8 -> Node_35;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_39[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_40;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_38;
Node_38 -> Node_24;
Node_17 -> Node_18;
Node_17 -> Node_20[style=dashed];
Node_18 -> Node_20[style=dashed];
Node_18 -> Node_34;
Node_21 -> Node_23[style=dashed];
Node_21 -> Node_36;
Node_23 -> Node_12;
Node_25 -> Node_27[style=dashed];
Node_25 -> Node_37;
Node_27 -> Node_1;
Node_29 -> Node_30;
Node_29 -> Node_31[style=dashed];
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_15 -> Node_16;
Node_20 -> Node_21;
Node_24 -> Node_25;
Node_28 -> Node_29;
Node_32 -> Node_28;
Node_33 -> Node_5;
Node_34 -> Node_19;
Node_35 -> Node_9;
Node_36 -> Node_22;
Node_37 -> Node_26;
Node_39 -> Node_24;
Node_40 -> Node_24;
}

