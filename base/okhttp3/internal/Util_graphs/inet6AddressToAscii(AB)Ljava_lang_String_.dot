digraph "CFG forokhttp3.internal.Util.inet6AddressToAscii([B)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = 0\lr1 = 0\lr2 = 0\lr3 = \-1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|LOOP_START\lPHI: r1 r2 r3 \l  PHI: (r1v2 int) = (r1v1 int), (r1v4 int) binds: [B:0:0x0000, B:15:0x0023] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:15:0x0023] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:0:0x0000, B:15:0x0023] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0005\-\>B:15:0x0023\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|if (r1 \>= r8.length) goto L_0x0026\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|r4 = r1\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|LOOP_START\lPHI: r4 \l  PHI: (r4v8 int) = (r4v7 int), (r4v9 int) binds: [B:3:0x000a, B:9:0x0017] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:4:0x000b\-\>B:9:0x0017\l|if (r4 \>= 16) goto L_0x001a\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d}"];
Node_6 [shape=record,label="{6\:\ 0x000f|if (r8[r4] != 0) goto L_0x001a\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011}"];
Node_8 [shape=record,label="{8\:\ 0x0015|if (r8[r4 + 1] != 0) goto L_0x001a\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|LOOP_END\lLOOP:1: B:4:0x000b\-\>B:9:0x0017\l|int r4 = r4 + 2\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|int r5 = r4 \- r1\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|if (r5 \<= r2) goto L_0x0023\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e}"];
Node_13 [shape=record,label="{13\:\ 0x001f|if (r5 \< 4) goto L_0x0023\l}"];
Node_14 [shape=record,label="{14\:\ 0x0021|r3 = r1\lr2 = r5\l}"];
Node_15 [shape=record,label="{15\:\ 0x0023|LOOP_END\lPHI: r2 r3 \l  PHI: (r2v2 int) = (r2v1 int), (r2v1 int), (r2v3 int) binds: [B:31:0x0023, B:32:0x0023, B:30:0x0023] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 int) = (r3v1 int), (r3v1 int), (r3v3 int) binds: [B:31:0x0023, B:32:0x0023, B:30:0x0023] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0005\-\>B:15:0x0023\l|int r1 = r4 + 2\l}"];
Node_16 [shape=record,label="{16\:\ 0x0026|okio.Buffer r1 = new okio.Buffer()\l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:16:0x0026, B:36:0x002b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:17:0x002b\-\>B:36:0x002b\l}"];
Node_18 [shape=record,label="{18\:\ 0x002c|if (r0 \>= r8.length) goto L_0x0055\l}"];
Node_19 [shape=record,label="{19\:\ 0x002e}"];
Node_20 [shape=record,label="{20\:\ 0x0030|if (r0 != r3) goto L_0x003c\l}"];
Node_21 [shape=record,label="{21\:\ 0x0032|r1.writeByte(58)\lint r0 = r0 + r2\l}"];
Node_22 [shape=record,label="{22\:\ 0x0036|if (r0 != 16) goto L_0x002b\l}"];
Node_23 [shape=record,label="{23\:\ 0x0038|r1.writeByte(58)\l}"];
Node_24 [shape=record,label="{24\:\ 0x003c|if (r0 \<= 0) goto L_0x0041\l}"];
Node_25 [shape=record,label="{25\:\ 0x003e|r1.writeByte(58)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0041|r1.writeHexadecimalUnsignedLong((long) (((r8[r0] & 255) \<\< 8) \| (r8[r0 + 1] & 255)))\lint r0 = r0 + 2\l}"];
Node_27 [shape=record,label="{27\:\ 0x0055}"];
Node_28 [shape=record,label="{28\:\ 0x0059|RETURN\l|return r1.readUtf8()\l}"];
Node_29 [shape=record,label="{29\:\ 0x0026|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0023|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0023|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0023|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x001a|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x001a|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x001a|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x002b|LOOP_END\lSYNTHETIC\lPHI: r0 \l  PHI: (r0v2 int) = (r0v3 int), (r0v4 int), (r0v4 int) binds: [B:40:0x002b, B:38:0x002b, B:39:0x002b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:17:0x002b\-\>B:36:0x002b\l}"];
Node_37 [shape=record,label="{37\:\ 0x0055|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x002b|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x002b|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x002b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static java.lang.String okhttp3.internal.Util.inet6AddressToAscii((r8v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_29;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_34;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_35;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_33;
Node_9 -> Node_4;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_31;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_32;
Node_14 -> Node_30;
Node_15 -> Node_1;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_37;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_38;
Node_23 -> Node_39;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_40;
Node_27 -> Node_28;
Node_29 -> Node_16;
Node_30 -> Node_15;
Node_31 -> Node_15;
Node_32 -> Node_15;
Node_33 -> Node_10;
Node_34 -> Node_10;
Node_35 -> Node_10;
Node_36 -> Node_17;
Node_37 -> Node_27;
Node_38 -> Node_36;
Node_39 -> Node_36;
Node_40 -> Node_36;
}

