digraph "CFG forokhttp3.internal.Util.immutableList([Ljava\/lang\/Object;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.Object) java.lang.Object.clone():java.lang.Object type: VIRTUAL \l0x0004: CHECK_CAST  (r0 I:java.lang.Object[]) = (java.lang.Object[]) (r0 I:?[OBJECT, ARRAY]) \l0x0006: INVOKE  (r0 I:java.util.List) = (r0 I:java.lang.Object[]) java.util.Arrays.asList(java.lang.Object[]):java.util.List type: STATIC \l0x000a: INVOKE  (r0 I:java.util.List) = (r0 I:java.util.List) java.util.Collections.unmodifiableList(java.util.List):java.util.List type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: RETURN  (r0 I:java.util.List\<T\>) \l}"];
MethodNode[shape=record,label="{public static java.util.List\<T\> okhttp3.internal.Util.immutableList((r0 I:T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>([TT;), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

