digraph "CFG forokhttp3.internal.Util.decodeIpv6(Ljava\/lang\/String;II)Ljava\/net\/InetAddress;" {
subgraph cluster_Region_510155395 {
label = "R(4:0|(1:(1:50)(1:(1:5)(6:6|(2:(1:(1:19)(1:(1:24)(1:25)))|27)(1:(1:11)(2:12|(2:(2:14|1)|(1:15))))|28|(2:30|(2:(1:57)|(1:32)))|33|(2:(1:38)|(1:37)))))|(1:(2:(1:42)|(1:43)))|(1:46))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|byte[] byte[] r0 = new byte[16]\lint r3 = 0\lint r4 = \-1\lint r5 = \-1\l}"];
subgraph cluster_LoopRegion_121515847 {
label = "LOOP:0: (1:(1:50)(1:(1:5)(6:6|(2:(1:(1:19)(1:(1:24)(1:25)))|27)(1:(1:11)(2:12|(2:(2:14|1)|(1:15))))|28|(2:30|(2:(1:57)|(1:32)))|33|(2:(1:38)|(1:37)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1130704739 {
label = "R(1:(1:50)(1:(1:5)(6:6|(2:(1:(1:19)(1:(1:24)(1:25)))|27)(1:(1:11)(2:12|(2:(2:14|1)|(1:15))))|28|(2:30|(2:(1:57)|(1:32)))|33|(2:(1:38)|(1:37)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_733447050 {
label = "IF [B:2:0x000a] THEN: R(1:50) ELSE: R(1:(1:5)(6:6|(2:(1:(1:19)(1:(1:24)(1:25)))|27)(1:(1:11)(2:12|(2:(2:14|1)|(1:15))))|28|(2:30|(2:(1:57)|(1:32)))|33|(2:(1:38)|(1:37))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|if (r11 \>= r12) goto L_0x007c\l}"];
subgraph cluster_Region_1418005752 {
label = "R(1:50)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x007c|SYNTHETIC\lEDGE_INSN: B:50:0x007c\-\>B:39:0x007c ?: BREAK  \l|break\l}"];
}
subgraph cluster_Region_582440248 {
label = "R(1:(1:5)(6:6|(2:(1:(1:19)(1:(1:24)(1:25)))|27)(1:(1:11)(2:12|(2:(2:14|1)|(1:15))))|28|(2:30|(2:(1:57)|(1:32)))|33|(2:(1:38)|(1:37)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_96182412 {
label = "IF [B:4:0x000d] THEN: R(1:5) ELSE: R(6:6|(2:(1:(1:19)(1:(1:24)(1:25)))|27)(1:(1:11)(2:12|(2:(2:14|1)|(1:15))))|28|(2:30|(2:(1:57)|(1:32)))|33|(2:(1:38)|(1:37))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|if (r3 == r0.length) goto L_0x000f\l}"];
subgraph cluster_Region_1212381242 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|RETURN\l|return null\l}"];
}
subgraph cluster_Region_329394456 {
label = "R(6:6|(2:(1:(1:19)(1:(1:24)(1:25)))|27)(1:(1:11)(2:12|(2:(2:14|1)|(1:15))))|28|(2:30|(2:(1:57)|(1:32)))|33|(2:(1:38)|(1:37)))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0010|int int r7 = r11 + 2\l}"];
subgraph cluster_IfRegion_499997573 {
label = "IF [B:7:0x0012, B:9:0x001b] THEN: R(2:(1:(1:19)(1:(1:24)(1:25)))|27) ELSE: R(1:(1:11)(2:12|(2:(2:14|1)|(1:15))))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0012|if (r7 \> r12) goto L_0x0029\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|ADDED_TO_REGION\l|if (r10.regionMatches(r11, \"::\", 0, 2) == false) goto L_0x0029\l}"];
subgraph cluster_Region_1806807952 {
label = "R(2:(1:(1:19)(1:(1:24)(1:25)))|27)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_534237735 {
label = "IF [B:16:0x0029] THEN: R(1:(1:19)(1:(1:24)(1:25))) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0029|if (r3 != 0) goto L_0x002b\l}"];
subgraph cluster_Region_1602165099 {
label = "R(1:(1:19)(1:(1:24)(1:25)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_601963696 {
label = "IF [B:18:0x0032] THEN: R(1:19) ELSE: R(1:(1:24)(1:25))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0032|if (r10.regionMatches(r11, \":\", 0, 1) == true) goto L_0x0034\l}"];
subgraph cluster_Region_996651873 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0034|r11++\l}"];
}
subgraph cluster_Region_1748405919 {
label = "R(1:(1:24)(1:25)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_557274926 {
label = "IF [B:21:0x003d, B:23:0x0045] THEN: R(1:24) ELSE: R(1:25) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x003d|if (r10.regionMatches(r11, mil.nga.geopackage.property.PropertyConstants.PROPERTY_DIVIDER, 0, 1) == false) goto L_0x004b\l}"];
Node_23 [shape=record,label="{23\:\ 0x0045|ADDED_TO_REGION\l|if (decodeIpv4Suffix(r10, r5, r12, r0, r3 \- 2) == false) goto L_0x0047\l}"];
subgraph cluster_Region_1327855283 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0047|RETURN\l|return null\l}"];
}
subgraph cluster_Region_2094344298 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0048|r3 += 2\l}"];
}
}
}
}
}
}
Node_27 [shape=record,label="{27\:\ 0x004c|PHI: r11 \l  PHI: (r11v6 int) = (r11v1 int), (r11v9 int) binds: [B:16:0x0029, B:19:0x0034] A[DONT_GENERATE, DONT_INLINE]\l|r5 = r11\l}"];
}
subgraph cluster_Region_1695274843 {
label = "R(1:(1:11)(2:12|(2:(2:14|1)|(1:15)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2028917240 {
label = "IF [B:10:0x001d] THEN: R(1:11) ELSE: R(2:12|(2:(2:14|1)|(1:15))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001d|if (r4 != \-1) goto L_0x001f\l}"];
subgraph cluster_Region_1668385824 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001f|RETURN\l|return null\l}"];
}
subgraph cluster_Region_1677943720 {
label = "R(2:12|(2:(2:14|1)|(1:15)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0020|r3 += 2\l}"];
subgraph cluster_Region_1072673959 {
label = "R(2:(2:14|1)|(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_264761894 {
label = "IF [B:13:0x0022] THEN: R(2:14|1) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0022|if (r7 == r12) goto L_0x0024\l}"];
subgraph cluster_Region_1380718793 {
label = "R(2:14|1)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0024|EDGE_INSN: B:14:0x0024\-\>B:39:0x007c ?: BREAK  \l|r4 = r3\l}"];
Node_InsnContainer_1536941319 [shape=record,label="{|break\l}"];
}
}
subgraph cluster_Region_118488210 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0026|r4 = r3\lr5 = r7\l}"];
}
}
}
}
}
}
Node_28 [shape=record,label="{28\:\ 0x004d|PHI: r3 r4 r5 \l  PHI: (r3v3 int) = (r3v1 int), (r3v6 int) binds: [B:27:0x004c, B:15:0x0026] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 int) = (r4v1 int), (r4v5 int) binds: [B:27:0x004c, B:15:0x0026] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 int) = (r5v3 int), (r5v4 int) binds: [B:27:0x004c, B:15:0x0026] A[DONT_GENERATE, DONT_INLINE]\l|r11 = r5\lint r7 = 0\l}"];
subgraph cluster_LoopRegion_1620142112 {
label = "LOOP:1: (2:30|(2:(1:57)|(1:32)))";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x004f|LOOP_START\lPHI: r7 r11 \l  PHI: (r7v3 int) = (r7v2 int), (r7v7 int) binds: [B:28:0x004d, B:32:0x005c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v4 int) = (r11v3 int), (r11v5 int) binds: [B:28:0x004d, B:32:0x005c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:29:0x004f\-\>B:32:0x005c\l|if (r11 \< r12) goto L_0x0051\l}"];
subgraph cluster_Region_469933095 {
label = "R(2:30|(2:(1:57)|(1:32)))";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0051|int int r8 = decodeHexDigit(r10.charAt(r11))\l}"];
subgraph cluster_Region_258926750 {
label = "R(2:(1:57)|(1:32))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_753146691 {
label = "IF [B:31:0x0059] THEN: R(1:57) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0059|if (r8 == \-1) goto L_0x0062\l}"];
subgraph cluster_Region_1306931032 {
label = "R(1:57)";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x0062|SYNTHETIC\lEDGE_INSN: B:57:0x0062\-\>B:33:0x0062 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_1770847613 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x005c|LOOP_END\lLOOP:1: B:29:0x004f\-\>B:32:0x005c\l|int r7 = (r7 \<\< 4) + r8\lr11++\l}"];
}
}
}
}
Node_33 [shape=record,label="{33\:\ 0x0062|EDGE_INSN: B:57:0x0062\-\>B:33:0x0062 ?: BREAK  \l|int int r8 = r11 \- r5\l}"];
subgraph cluster_Region_1209049094 {
label = "R(2:(1:38)|(1:37))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1801774013 {
label = "IF [B:34:0x0064, B:36:0x0067] THEN: R(1:38) ELSE: null";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0064|if (r8 == 0) goto L_0x007b\l}"];
Node_36 [shape=record,label="{36\:\ 0x0067|ADDED_TO_REGION\l|if (r8 \> 4) goto L_0x007b\l}"];
subgraph cluster_Region_598413644 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x007b|RETURN\lEDGE_INSN: B:54:0x007b\-\>B:38:0x007b ?: BREAK  \lEDGE_INSN: B:55:0x007b\-\>B:38:0x007b ?: BREAK  \l|return null\l}"];
}
}
subgraph cluster_Region_553414796 {
label = "R(1:37)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x006a|LOOP_END\lLOOP:0: B:1:0x0009\-\>B:37:0x006a\l|int int r6 = r3 + 1\lr0[r3] = (byte) ((r7 \>\>\> 8) & 255)\lint r3 = r6 + 1\lr0[r6] = (byte) (r7 & 255)\l}"];
}
}
}
}
}
}
}
}
subgraph cluster_IfRegion_2090637906 {
label = "IF [B:40:0x007d] THEN: R(1:(2:(1:42)|(1:43))) ELSE: null";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x007d|if (r3 != r0.length) goto L_0x007f\l}"];
subgraph cluster_Region_1543055295 {
label = "R(1:(2:(1:42)|(1:43)))";
node [shape=record,color=blue];
subgraph cluster_Region_664362871 {
label = "R(2:(1:42)|(1:43))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1493791272 {
label = "IF [B:41:0x007f] THEN: R(1:42) ELSE: null";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x007f|if (r4 == \-1) goto L_0x0081\l}"];
subgraph cluster_Region_1782893330 {
label = "R(1:42)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0081|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_612100749 {
label = "R(1:43)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0082|int int r11 = r3 \- r4\ljava.lang.System.arraycopy(r0, r4, r0, r0.length \- r11, r11)\ljava.util.Arrays.fill(r0, r4, (r0.length \- r3) + r4, (byte) 0)\l}"];
}
}
}
}
subgraph cluster_TryCatchRegion_287217255 {
label = "Try: R(1:46) catches: R(1:49)";
node [shape=record,color=blue];
subgraph cluster_Region_1072580363 {
label = "R(1:46)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0093|RETURN\l|return java.net.InetAddress.getByAddress(r0)\l}"];
}
subgraph cluster_Region_55086884 {
label = "R(1:49) | ExcHandler: UnknownHostException (unused java.net.UnknownHostException)\l";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0099|throw new java.lang.AssertionError()\l}"];
}
}
}
subgraph cluster_Region_55086884 {
label = "R(1:49) | ExcHandler: UnknownHostException (unused java.net.UnknownHostException)\l";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0099|throw new java.lang.AssertionError()\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0009|LOOP_START\lPHI: r3 r4 r5 r11 \l  PHI: (r3v1 int) = (r3v0 int), (r3v4 int) binds: [B:0:0x0000, B:37:0x006a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v3 int) binds: [B:0:0x0000, B:37:0x006a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:0:0x0000, B:37:0x006a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v1 int) = (r11v0 int), (r11v4 int) binds: [B:0:0x0000, B:37:0x006a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0009\-\>B:37:0x006a\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000c}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0014}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x002b}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0037}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x003f}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x004b|RETURN\lADDED_TO_REGION\l|return null\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0066}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x007c|EDGE_INSN: B:50:0x007c\-\>B:39:0x007c ?: BREAK  \lEDGE_INSN: B:14:0x0024\-\>B:39:0x007c ?: BREAK  \lPHI: r3 r4 \l  PHI: (r3v2 int) = (r3v1 int), (r3v5 int), (r3v6 int) binds: [B:50:0x007c, B:25:0x0048, B:14:0x0024] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 int) = (r4v1 int), (r4v1 int), (r4v4 int) binds: [B:50:0x007c, B:25:0x0048, B:14:0x0024] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x008f|SYNTHETIC\lSplitter:B:44:0x008f\l}"];
Node_45 [shape=record,color=red,label="{45\:\ ?|Catch:\{ UnknownHostException \-\> 0x0094 \}\lSplitter:B:44:0x008f\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0094}"];
Node_48 [shape=record,color=red,label="{48\:\ ?|SYNTHETIC\lExcHandler: UnknownHostException (unused java.net.UnknownHostException)\lSplitter:B:44:0x008f\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x000f|SYNTHETIC\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x001f|SYNTHETIC\l}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x0024|SYNTHETIC\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x007b|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:54:0x007b\-\>B:38:0x007b ?: BREAK  \l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x007b|SYNTHETIC\lEDGE_INSN: B:55:0x007b\-\>B:38:0x007b ?: BREAK  \l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x0037|SYNTHETIC\l}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x0062|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static java.net.InetAddress okhttp3.internal.Util.decodeIpv6((r10v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_50;
Node_50 -> Node_39;
Node_4 -> Node_6[style=dashed];
Node_4 -> Node_51;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_16;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_27[style=dashed];
Node_18 -> Node_19;
Node_18 -> Node_56[style=dashed];
Node_19 -> Node_27;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_25 -> Node_39;
Node_27 -> Node_28;
Node_10 -> Node_12[style=dashed];
Node_10 -> Node_52;
Node_12 -> Node_13;
Node_13 -> Node_15[style=dashed];
Node_13 -> Node_53;
Node_14 -> Node_39;
Node_15 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_58[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_57;
Node_57 -> Node_33;
Node_32 -> Node_29;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_54;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_55;
Node_37 -> Node_1;
Node_40 -> Node_41;
Node_40 -> Node_44[style=dashed];
Node_41 -> Node_42;
Node_41 -> Node_43[style=dashed];
Node_43 -> Node_44;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_8 -> Node_9;
Node_17 -> Node_18;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_35 -> Node_36;
Node_39 -> Node_40;
Node_44 -> Node_45;
Node_44 -> Node_48;
Node_45 -> Node_46;
Node_47 -> Node_49;
Node_48 -> Node_47;
Node_51 -> Node_5;
Node_52 -> Node_11;
Node_53 -> Node_14;
Node_54 -> Node_38;
Node_55 -> Node_38;
Node_56 -> Node_20;
Node_58 -> Node_33;
}

