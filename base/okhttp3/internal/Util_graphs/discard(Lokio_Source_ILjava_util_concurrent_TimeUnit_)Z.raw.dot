digraph "CFG forokhttp3.internal.Util.discard(Lokio\/Source;ILjava\/util\/concurrent\/TimeUnit;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r0 I:okio.Source)\l  (r1 I:int)\l  (r2 I:java.util.concurrent.TimeUnit)\l okhttp3.internal.Util.skipAll(okio.Source, int, java.util.concurrent.TimeUnit):boolean type: STATIC A[Catch:\{ IOException \-\> 0x0005 \}, TRY_ENTER]\l0x0003: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:0:0x0000\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean okhttp3.internal.Util.discard((r0 I:okio.Source A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.util.concurrent.TimeUnit A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_3 -> Node_5;
Node_4 -> Node_3;
}

