digraph "CFG forokhttp3.internal.Util.checkDuration(Ljava\/lang\/String;JLjava\/util\/concurrent\/TimeUnit;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0002: CMP_L  (r2 I:int) = (r6 I:long), (r0 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r2 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:17:0x0052 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x004a \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r6 I:long) = (r8 I:java.util.concurrent.TimeUnit), (r6 I:long) java.util.concurrent.TimeUnit.toMillis(long):long type: VIRTUAL \l0x000c: CONST  (r3 I:?[long, double]) = \l  (2147483647(0x7fffffff, double:1.060997895E\-314) ?[long, double])\l \l0x000f: CMP_L  (r8 I:int) = (r6 I:long), (r3 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r8 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:13:0x0033 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: CMP_L  (r8 I:int) = (r6 I:long), (r0 I:long) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0031 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: IF  (r2 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:9:0x001a \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: NEW_INSTANCE  (r6 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x001c: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001e: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0021: INVOKE  (r7 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0024: CONST_STR  (r5 I:java.lang.String) =  \" too small.\" \l0x0026: INVOKE  (r7 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0029: INVOKE  (r5 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002d: INVOKE  \l  (r6 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|0x0030: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|0x0031: CAST  (r5 I:int) = (int) (r6 I:long) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|0x0032: RETURN  (r5 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|0x0033: NEW_INSTANCE  (r6 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0035: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0037: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x003a: INVOKE  (r7 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003d: CONST_STR  (r5 I:java.lang.String) =  \" too large.\" \l0x003f: INVOKE  (r7 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0042: INVOKE  (r5 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0046: INVOKE  \l  (r6 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x0049|0x0049: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|0x004a: NEW_INSTANCE  (r5 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x004c: CONST_STR  (r6 I:java.lang.String) =  \"unit == null\" \l0x004e: INVOKE  \l  (r5 I:java.lang.NullPointerException)\l  (r6 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0051|0x0051: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0052|0x0052: NEW_INSTANCE  (r6 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0054: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0056: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0059: INVOKE  (r7 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005c: CONST_STR  (r5 I:java.lang.String) =  \" \< 0\" \l0x005e: INVOKE  (r7 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0061: INVOKE  (r5 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0065: INVOKE  \l  (r6 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x0068|0x0068: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static int okhttp3.internal.Util.checkDuration((r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.util.concurrent.TimeUnit A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_9;
Node_7 -> Node_11[style=dashed];
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

