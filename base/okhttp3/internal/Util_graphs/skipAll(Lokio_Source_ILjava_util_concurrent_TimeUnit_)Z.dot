digraph "CFG forokhttp3.internal.Util.skipAll(Lokio\/Source;ILjava\/util\/concurrent\/TimeUnit;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|long r0 = java.lang.System.nanoTime()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|if (r11.timeout().hasDeadline() == false) goto L_0x001d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|long r5 = r11.timeout().deadlineNanoTime() \- r0\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|r5 = Long.MAX_VALUE\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|PHI: r5 \l  PHI: (r5v0 long) = (r5v1 long), (r5v3 long) binds: [B:3:0x001d, B:2:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|r11.timeout().deadlineNanoTime(java.lang.Math.min(r5, r13.toNanos((long) r12)) + r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x002f|SYNTHETIC\lSplitter:B:5:0x002f\l}"];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ InterruptedIOException \-\> 0x0070, all \-\> 0x005a \}\lSplitter:B:5:0x002f\l|okio.Buffer r12 = new okio.Buffer()     \/\/ Catch:\{ InterruptedIOException \-\> 0x0070, all \-\> 0x005a \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|LOOP_START\lCatch:\{ InterruptedIOException \-\> 0x0070, all \-\> 0x005a \}\lLOOP:0: B:7:0x0034\-\>B:9:0x0040\l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|Catch:\{ InterruptedIOException \-\> 0x0070, all \-\> 0x005a \}\l|if ((r11.read(r12, android.support.p000v4.media.session.PlaybackStateCompat.ACTION_PLAY_FROM_URI) \> \-1 ? 1 : (r11.read(r12, android.support.p000v4.media.session.PlaybackStateCompat.ACTION_PLAY_FROM_URI) == \-1 ? 0 : \-1)) == 0) goto L_0x0044     \/\/ Catch:\{ InterruptedIOException \-\> 0x0070, all \-\> 0x005a \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0040|LOOP_END\lCatch:\{ InterruptedIOException \-\> 0x0070, all \-\> 0x005a \}\lLOOP:0: B:7:0x0034\-\>B:9:0x0040\l|r12.clear()     \/\/ Catch:\{ InterruptedIOException \-\> 0x0070, all \-\> 0x005a \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0044}"];
Node_11 [shape=record,label="{11\:\ 0x0047|if ((r5 \> kotlin.jvm.internal.LongCompanionObject.MAX_VALUE ? 1 : (r5 == kotlin.jvm.internal.LongCompanionObject.MAX_VALUE ? 0 : \-1)) != 0) goto L_0x0051\l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|r11.timeout().clearDeadline()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0051|r11.timeout().deadlineNanoTime(r0 + r5)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0059|RETURN\l|return true\l}"];
Node_15 [shape=record,label="{15\:\ 0x005a|ExcHandler: all (r12v5 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:5:0x002f\l|java.lang.Throwable r12 = move\-exception\l}"];
Node_16 [shape=record,label="{16\:\ 0x005b}"];
Node_17 [shape=record,label="{17\:\ 0x005d|if ((r5 \> kotlin.jvm.internal.LongCompanionObject.MAX_VALUE ? 1 : (r5 == kotlin.jvm.internal.LongCompanionObject.MAX_VALUE ? 0 : \-1)) != 0) goto L_0x0067\l}"];
Node_18 [shape=record,label="{18\:\ 0x005f|r11.timeout().clearDeadline()\l}"];
Node_19 [shape=record,label="{19\:\ 0x0067|r11.timeout().deadlineNanoTime(r0 + r5)\l}"];
Node_20 [shape=record,label="{20\:\ 0x006f|throw r12\l}"];
Node_21 [shape=record,label="{21\:\ 0x0070}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lExcHandler: InterruptedIOException (unused java.io.InterruptedIOException)\lSplitter:B:5:0x002f\l}"];
Node_23 [shape=record,label="{23\:\ 0x0074|if ((r5 \> kotlin.jvm.internal.LongCompanionObject.MAX_VALUE ? 1 : (r5 == kotlin.jvm.internal.LongCompanionObject.MAX_VALUE ? 0 : \-1)) != 0) goto L_0x007e\l}"];
Node_24 [shape=record,label="{24\:\ 0x0076|r11.timeout().clearDeadline()\l}"];
Node_25 [shape=record,label="{25\:\ 0x007e|r11.timeout().deadlineNanoTime(r0 + r5)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0086|RETURN\l|return false\l}"];
Node_27 [shape=record,label="{27\:\ 0x0044|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static boolean okhttp3.internal.Util.skipAll((r11v0 okio.Source A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 java.util.concurrent.TimeUnit A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_22;
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_27;
Node_9 -> Node_7;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_21 -> Node_23;
Node_22 -> Node_21;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_27 -> Node_10;
}

