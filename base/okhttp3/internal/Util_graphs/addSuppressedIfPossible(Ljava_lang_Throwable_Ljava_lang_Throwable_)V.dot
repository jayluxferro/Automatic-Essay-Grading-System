digraph "CFG forokhttp3.internal.Util.addSuppressedIfPossible(Ljava\/lang\/Throwable;Ljava\/lang\/Throwable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (addSuppressedExceptionMethod == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|SYNTHETIC\lSplitter:B:2:0x0004\l}"];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x000f \}\lSplitter:B:2:0x0004\l|java.lang.reflect.Method r0 = addSuppressedExceptionMethod     \/\/ Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x000f \}\ljava.lang.Object[] r1 = new java.lang.Object[]\{r4\}\lr0.invoke(r3, r1)     \/\/ Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x000f \}\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lExcHandler: IllegalAccessException \| InvocationTargetException (unused java.lang.Throwable)\lSplitter:B:2:0x0004\l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public static void okhttp3.internal.Util.addSuppressedIfPossible((r3v0 java.lang.Throwable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Throwable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_6;
}

