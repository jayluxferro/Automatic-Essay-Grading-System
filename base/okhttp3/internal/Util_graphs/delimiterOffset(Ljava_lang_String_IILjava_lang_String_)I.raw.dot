digraph "CFG forokhttp3.internal.Util.delimiterOffset(Ljava\/lang\/String;IILjava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:char) = (r2 I:java.lang.String), (r3 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x0006: INVOKE  (r0 I:int) = (r5 I:java.lang.String), (r0 I:int) java.lang.String.indexOf(int):int type: VIRTUAL \l0x000a: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN  (r3 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: RETURN  (r4 I:int) \l}"];
MethodNode[shape=record,label="{public static int okhttp3.internal.Util.delimiterOffset((r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_4 -> Node_0;
}

