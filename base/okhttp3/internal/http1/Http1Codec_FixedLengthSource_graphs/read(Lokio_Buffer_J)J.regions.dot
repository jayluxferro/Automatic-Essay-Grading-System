digraph "CFG forokhttp3.internal.http1.Http1Codec.FixedLengthSource.read(Lokio\/Buffer;J)J" {
subgraph cluster_Region_1328196566 {
label = "R(1:(2:17|18)(1:(1:16)(1:(1:6)(2:7|(2:(3:9|(1:11)|12)|(2:13|14))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_321551263 {
label = "IF [B:1:0x0004] THEN: R(2:17|18) ELSE: R(1:(1:16)(1:(1:6)(2:7|(2:(3:9|(1:11)|12)|(2:13|14)))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r8 \< 0) goto L_0x0046\l}"];
subgraph cluster_Region_2014483966 {
label = "R(2:17|18)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0046}"];
Node_18 [shape=record,label="{18\:\ 0x005c|throw new java.lang.IllegalArgumentException(\"byteCount \< 0: \" + r8)\l}"];
}
subgraph cluster_Region_1036154088 {
label = "R(1:(1:16)(1:(1:6)(2:7|(2:(3:9|(1:11)|12)|(2:13|14))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_665586845 {
label = "IF [B:3:0x0008] THEN: R(1:16) ELSE: R(1:(1:6)(2:7|(2:(3:9|(1:11)|12)|(2:13|14)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r6.closed != false) goto L_0x003e\l}"];
subgraph cluster_Region_1729785204 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0045|throw new java.lang.IllegalStateException(\"closed\")\l}"];
}
subgraph cluster_Region_189507852 {
label = "R(1:(1:6)(2:7|(2:(3:9|(1:11)|12)|(2:13|14)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_629209529 {
label = "IF [B:5:0x0010] THEN: R(1:6) ELSE: R(2:7|(2:(3:9|(1:11)|12)|(2:13|14))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r6.bytesRemaining == 0) goto L_0x0012\l}"];
subgraph cluster_Region_1653588336 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0012|RETURN\l|return \-1\l}"];
}
subgraph cluster_Region_1288052271 {
label = "R(2:7|(2:(3:9|(1:11)|12)|(2:13|14)))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0013|long long r7 = super.read(r7, java.lang.Math.min(r6.bytesRemaining, r8))\l}"];
subgraph cluster_Region_1456107928 {
label = "R(2:(3:9|(1:11)|12)|(2:13|14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_832956452 {
label = "IF [B:8:0x001f] THEN: R(3:9|(1:11)|12) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001f|if (r7 != \-1) goto L_0x0021\l}"];
subgraph cluster_Region_380336430 {
label = "R(3:9|(1:11)|12)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0021|r6.bytesRemaining \-= r7\l}"];
subgraph cluster_IfRegion_10465668 {
label = "IF [B:10:0x002a] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002a|if (r6.bytesRemaining == 0) goto L_0x002c\l}"];
subgraph cluster_Region_577817887 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002c|endOfInput(true, (java.io.IOException) null)\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0031|RETURN\l|return r7\l}"];
}
}
subgraph cluster_Region_1156258851 {
label = "R(2:13|14)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0032|java.net.ProtocolException java.net.ProtocolException r7 = new java.net.ProtocolException(\"unexpected end of stream\")\lendOfInput(false, r7)\l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|throw r7\l}"];
}
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000a}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x003e}"];
MethodNode[shape=record,label="{public long okhttp3.internal.http1.Http1Codec.FixedLengthSource.read((r6v0 'this' okhttp3.internal.http1.Http1Codec$FixedLengthSource A[IMMUTABLE_TYPE, THIS]), (r7v0 okio.Buffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_17 -> Node_18;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_13[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_15 -> Node_16;
}

