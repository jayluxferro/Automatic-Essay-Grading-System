digraph "CFG forokhttp3.internal.http1.Http1Codec.AbstractSource.\<init\>(Lokhttp3\/internal\/http1\/Http1Codec;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r3 I:okhttp3.internal.http1.Http1Codec)\l  (r2 I:okhttp3.internal.http1.Http1Codec$AbstractSource)\l okhttp3.internal.http1.Http1Codec.AbstractSource.this$0 okhttp3.internal.http1.Http1Codec \l0x0002: INVOKE  (r2 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0005: NEW_INSTANCE  (r3 I:okio.ForwardingTimeout) =  okio.ForwardingTimeout \l0x0007: IGET  (r0 I:okhttp3.internal.http1.Http1Codec) = (r2 I:okhttp3.internal.http1.Http1Codec$AbstractSource) okhttp3.internal.http1.Http1Codec.AbstractSource.this$0 okhttp3.internal.http1.Http1Codec \l0x0009: IGET  (r0 I:okio.BufferedSource) = (r0 I:okhttp3.internal.http1.Http1Codec) okhttp3.internal.http1.Http1Codec.source okio.BufferedSource \l0x000b: INVOKE  (r0 I:okio.Timeout) = (r0 I:okio.BufferedSource) okio.BufferedSource.timeout():okio.Timeout type: INTERFACE \l0x000f: INVOKE  (r3 I:okio.ForwardingTimeout), (r0 I:okio.Timeout) okio.ForwardingTimeout.\<init\>(okio.Timeout):void type: DIRECT \l0x0012: IPUT  \l  (r3 I:okio.ForwardingTimeout)\l  (r2 I:okhttp3.internal.http1.Http1Codec$AbstractSource)\l okhttp3.internal.http1.Http1Codec.AbstractSource.timeout okio.ForwardingTimeout \l0x0014: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0016: IPUT  \l  (r0 I:long)\l  (r2 I:okhttp3.internal.http1.Http1Codec$AbstractSource)\l okhttp3.internal.http1.Http1Codec.AbstractSource.bytesRead long \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{private void okhttp3.internal.http1.Http1Codec.AbstractSource.\<init\>((r2 'this' I:okhttp3.internal.http1.Http1Codec$AbstractSource A[IMMUTABLE_TYPE, THIS]), (r3 I:okhttp3.internal.http1.Http1Codec A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

