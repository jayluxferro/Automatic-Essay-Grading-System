digraph "CFG forokhttp3.internal.http1.Http1Codec.writeRequestHeaders(Lokhttp3\/Request;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.internal.connection.StreamAllocation) = (r1 I:okhttp3.internal.http1.Http1Codec) okhttp3.internal.http1.Http1Codec.streamAllocation okhttp3.internal.connection.StreamAllocation \l0x0002: INVOKE  (r0 I:okhttp3.internal.connection.RealConnection) = (r0 I:okhttp3.internal.connection.StreamAllocation) okhttp3.internal.connection.StreamAllocation.connection():okhttp3.internal.connection.RealConnection type: VIRTUAL \l0x0006: INVOKE  (r0 I:okhttp3.Route) = (r0 I:okhttp3.internal.connection.RealConnection) okhttp3.internal.connection.RealConnection.route():okhttp3.Route type: VIRTUAL \l0x000a: INVOKE  (r0 I:java.net.Proxy) = (r0 I:okhttp3.Route) okhttp3.Route.proxy():java.net.Proxy type: VIRTUAL \l0x000e: INVOKE  (r0 I:java.net.Proxy$Type) = (r0 I:java.net.Proxy) java.net.Proxy.type():java.net.Proxy$Type type: VIRTUAL \l0x0012: INVOKE  (r0 I:java.lang.String) = (r2 I:okhttp3.Request), (r0 I:java.net.Proxy$Type) okhttp3.internal.http.RequestLine.get(okhttp3.Request, java.net.Proxy$Type):java.lang.String type: STATIC \l0x0016: INVOKE  (r2 I:okhttp3.Headers) = (r2 I:okhttp3.Request) okhttp3.Request.headers():okhttp3.Headers type: VIRTUAL \l0x001a: INVOKE  \l  (r1 I:okhttp3.internal.http1.Http1Codec)\l  (r2 I:okhttp3.Headers)\l  (r0 I:java.lang.String)\l okhttp3.internal.http1.Http1Codec.writeRequest(okhttp3.Headers, java.lang.String):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x001d|0x001d: RETURN   \l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.http1.Http1Codec.writeRequestHeaders((r1 'this' I:okhttp3.internal.http1.Http1Codec A[IMMUTABLE_TYPE, THIS]), (r2 I:okhttp3.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

