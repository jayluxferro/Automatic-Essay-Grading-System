digraph "CFG forokhttp3.internal.http1.Http1Codec.newFixedLengthSink(J)Lokio\/Sink;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r2 I:okhttp3.internal.http1.Http1Codec) okhttp3.internal.http1.Http1Codec.state int \l0x0002: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0006: IPUT  (r0 I:int), (r2 I:okhttp3.internal.http1.Http1Codec) okhttp3.internal.http1.Http1Codec.state int \l0x0008: NEW_INSTANCE  (r0 I:okhttp3.internal.http1.Http1Codec$FixedLengthSink) =  okhttp3.internal.http1.Http1Codec$FixedLengthSink \l0x000a: INVOKE  \l  (r0 I:okhttp3.internal.http1.Http1Codec$FixedLengthSink)\l  (r2 I:okhttp3.internal.http1.Http1Codec)\l  (r3 I:long)\l okhttp3.internal.http1.Http1Codec.FixedLengthSink.\<init\>(okhttp3.internal.http1.Http1Codec, long):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN  (r0 I:okio.Sink) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: NEW_INSTANCE  (r3 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0010: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0012: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0015: CONST_STR  (r0 I:java.lang.String) =  \"state: \" \l0x0017: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001a: IGET  (r0 I:int) = (r2 I:okhttp3.internal.http1.Http1Codec) okhttp3.internal.http1.Http1Codec.state int \l0x001c: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x001f: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0023: INVOKE  \l  (r3 I:java.lang.IllegalStateException)\l  (r4 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public okio.Sink okhttp3.internal.http1.Http1Codec.newFixedLengthSink((r2 'this' I:okhttp3.internal.http1.Http1Codec A[IMMUTABLE_TYPE, THIS]), (r3 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

