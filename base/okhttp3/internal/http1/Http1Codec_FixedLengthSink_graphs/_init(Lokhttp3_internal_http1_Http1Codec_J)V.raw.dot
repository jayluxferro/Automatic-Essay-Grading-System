digraph "CFG forokhttp3.internal.http1.Http1Codec.FixedLengthSink.\<init\>(Lokhttp3\/internal\/http1\/Http1Codec;J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r2 I:okhttp3.internal.http1.Http1Codec)\l  (r1 I:okhttp3.internal.http1.Http1Codec$FixedLengthSink)\l okhttp3.internal.http1.Http1Codec.FixedLengthSink.this$0 okhttp3.internal.http1.Http1Codec \l0x0002: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0005: NEW_INSTANCE  (r2 I:okio.ForwardingTimeout) =  okio.ForwardingTimeout \l0x0007: IGET  (r0 I:okhttp3.internal.http1.Http1Codec) = (r1 I:okhttp3.internal.http1.Http1Codec$FixedLengthSink) okhttp3.internal.http1.Http1Codec.FixedLengthSink.this$0 okhttp3.internal.http1.Http1Codec \l0x0009: IGET  (r0 I:okio.BufferedSink) = (r0 I:okhttp3.internal.http1.Http1Codec) okhttp3.internal.http1.Http1Codec.sink okio.BufferedSink \l0x000b: INVOKE  (r0 I:okio.Timeout) = (r0 I:okio.BufferedSink) okio.BufferedSink.timeout():okio.Timeout type: INTERFACE \l0x000f: INVOKE  (r2 I:okio.ForwardingTimeout), (r0 I:okio.Timeout) okio.ForwardingTimeout.\<init\>(okio.Timeout):void type: DIRECT \l0x0012: IPUT  \l  (r2 I:okio.ForwardingTimeout)\l  (r1 I:okhttp3.internal.http1.Http1Codec$FixedLengthSink)\l okhttp3.internal.http1.Http1Codec.FixedLengthSink.timeout okio.ForwardingTimeout \l0x0014: IPUT  \l  (r3 I:long)\l  (r1 I:okhttp3.internal.http1.Http1Codec$FixedLengthSink)\l okhttp3.internal.http1.Http1Codec.FixedLengthSink.bytesRemaining long \l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|0x0016: RETURN   \l}"];
MethodNode[shape=record,label="{void okhttp3.internal.http1.Http1Codec.FixedLengthSink.\<init\>((r1 'this' I:okhttp3.internal.http1.Http1Codec$FixedLengthSink A[IMMUTABLE_TYPE, THIS]), (r2 I:okhttp3.internal.http1.Http1Codec A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

