digraph "CFG forokhttp3.internal.http1.Http1Codec.ChunkedSink.write(Lokio\/Buffer;J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.closed != false) goto L_0x002c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if ((r4 \> 0 ? 1 : (r4 == 0 ? 0 : \-1)) != 0) goto L_0x000b\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|r2.this$0.sink.writeHexadecimalUnsignedLong(r4)\lr2.this$0.sink.writeUtf8(\"rn\")\lr2.this$0.sink.write(r3, r4)\lr2.this$0.sink.writeUtf8(\"rn\")\l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x002c}"];
Node_8 [shape=record,label="{8\:\ 0x0033|throw new java.lang.IllegalStateException(\"closed\")\l}"];
MethodNode[shape=record,label="{public void okhttp3.internal.http1.Http1Codec.ChunkedSink.write((r2v0 'this' okhttp3.internal.http1.Http1Codec$ChunkedSink A[IMMUTABLE_TYPE, THIS]), (r3v0 okio.Buffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

