digraph "CFG forokhttp3.HttpUrl.newBuilder()Lokhttp3\/HttpUrl$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|okhttp3.HttpUrl$Builder r0 = new okhttp3.HttpUrl.Builder()\lr0.scheme = r3.scheme\lr0.encodedUsername = encodedUsername()\lr0.encodedPassword = encodedPassword()\lr0.host = r3.host\l}"];
Node_1 [shape=record,label="{1\:\ 0x0021|if (r3.port == defaultPort(r3.scheme)) goto L_0x0026\l}"];
Node_2 [shape=record,label="{2\:\ 0x0023|int r1 = r3.port\l}"];
Node_3 [shape=record,label="{3\:\ 0x0026|r1 = \-1\l}"];
Node_4 [shape=record,label="{4\:\ 0x0027|PHI: r1 \l  PHI: (r1v5 int) = (r1v10 int), (r1v11 int) binds: [B:3:0x0026, B:2:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|r0.port = r1\lr0.encodedPathSegments.clear()\lr0.encodedPathSegments.addAll(encodedPathSegments())\lr0.encodedQuery(encodedQuery())\lr0.encodedFragment = encodedFragment()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0044|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public okhttp3.HttpUrl$Builder okhttp3.HttpUrl.newBuilder((r3v0 'this' okhttp3.HttpUrl A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

