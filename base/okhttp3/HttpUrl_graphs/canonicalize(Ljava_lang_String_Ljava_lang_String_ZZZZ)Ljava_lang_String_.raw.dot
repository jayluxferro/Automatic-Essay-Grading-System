digraph "CFG forokhttp3.HttpUrl.canonicalize(Ljava\/lang\/String;Ljava\/lang\/String;ZZZZ)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:int) = (r9 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0007: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0008: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: INVOKE  (r9 I:java.lang.String) = \l  (r0 I:java.lang.String)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:java.lang.String)\l  (r4 I:boolean)\l  (r5 I:boolean)\l  (r6 I:boolean)\l  (r7 I:boolean)\l  (r8 I:java.nio.charset.Charset)\l okhttp3.HttpUrl.canonicalize(java.lang.String, int, int, java.lang.String, boolean, boolean, boolean, boolean, java.nio.charset.Charset):java.lang.String type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: RETURN  (r9 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{static java.lang.String okhttp3.HttpUrl.canonicalize((r9 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

