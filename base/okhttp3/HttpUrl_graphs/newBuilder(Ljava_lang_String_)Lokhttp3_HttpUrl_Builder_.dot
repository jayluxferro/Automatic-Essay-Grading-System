digraph "CFG forokhttp3.HttpUrl.newBuilder(Ljava\/lang\/String;)Lokhttp3\/HttpUrl$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ IllegalArgumentException \-\> 0x000a \}\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|RETURN\l|return new okhttp3.HttpUrl.Builder().parse(r1, r2)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return null\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lExcHandler: IllegalArgumentException (unused java.lang.IllegalArgumentException)\lSplitter:B:0:0x0000\l}"];
MethodNode[shape=record,label="{public okhttp3.HttpUrl$Builder okhttp3.HttpUrl.newBuilder((r1v0 'this' okhttp3.HttpUrl A[IMMUTABLE_TYPE, THIS]), (r2v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_4 -> Node_3;
}

