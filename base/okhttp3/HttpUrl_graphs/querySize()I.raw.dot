digraph "CFG forokhttp3.HttpUrl.querySize()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<java.lang.String\>) = (r1 I:okhttp3.HttpUrl) okhttp3.HttpUrl.queryNamesAndValues java.util.List \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:java.util.List\<java.lang.String\>) = (r1 I:okhttp3.HttpUrl) okhttp3.HttpUrl.queryNamesAndValues java.util.List \l0x0006: INVOKE  (r0 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x000a: ARITH  (r0 I:int) = (r0 I:int) \/ (2 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int okhttp3.HttpUrl.querySize((r1 'this' I:okhttp3.HttpUrl A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

