digraph "CFG forokhttp3.HttpUrl.percentDecode(Lokio\/Buffer;Ljava\/lang\/String;IIZ)V" {
subgraph cluster_Region_1995896077 {
label = "R(1:(4:1|(2:5|(2:8|14))(1:(2:12|14))|13|14)) | DECL_VAR: int null\l";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1078546364 {
label = "LOOP:0: (4:1|(2:5|(2:8|14))(1:(2:12|14))|13|14)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lPHI: r7 \l  PHI: (r7v1 int) = (r7v0 int), (r7v3 int) binds: [B:0:0x0000, B:14:0x003c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:14:0x003c\l|if (r7 \< r8) goto L_0x0002\l}"];
subgraph cluster_Region_1861047177 {
label = "R(4:1|(2:5|(2:8|14))(1:(2:12|14))|13|14)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|int int r0 = r6.codePointAt(r7)\l}"];
subgraph cluster_IfRegion_1906129725 {
label = "IF [B:2:0x0008, B:4:0x000c] THEN: R(2:5|(2:8|14)) ELSE: R(1:(2:12|14))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|if (r0 == 37) goto L_0x000a\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|ADDED_TO_REGION\l|if ((r1 = r7 + 2) \< r8) goto L_0x000e\l}"];
subgraph cluster_Region_1964052615 {
label = "R(2:5|(2:8|14))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|int int r2 = okhttp3.internal.Util.decodeHexDigit(r6.charAt(r7 + 1))\lint int r3 = okhttp3.internal.Util.decodeHexDigit(r6.charAt(r1))\l}"];
subgraph cluster_IfRegion_98302400 {
label = "IF [B:6:0x0021, B:7:0x0023] THEN: R(2:8|14) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0021|ADDED_TO_REGION\l|if (r2 == \-1) goto L_0x0039\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|ADDED_TO_REGION\l|if (r3 == \-1) goto L_0x0039\l}"];
subgraph cluster_Region_1817414952 {
label = "R(2:8|14)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0025|r5.writeByte((r2 \<\< 4) + r3)\lr7 = r1\l}"];
Node_14 [shape=record,label="{14\:\ 0x003c|LOOP_END\lPHI: r7 \l  PHI: (r7v2 int) = (r7v1 int), (r7v1 int), (r7v6 int) binds: [B:17:0x003c, B:19:0x003c, B:18:0x003c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:14:0x003c\l|r7 += java.lang.Character.charCount(r0)\l}"];
}
}
}
subgraph cluster_Region_1350454120 {
label = "R(1:(2:12|14)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1773727093 {
label = "IF [B:10:0x002f, B:11:0x0031] THEN: R(2:12|14) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002f|ADDED_TO_REGION\l|if (r0 == 43) goto L_0x0031\l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|ADDED_TO_REGION\l|if (r9 == true) goto L_0x0033\l}"];
subgraph cluster_Region_1842186960 {
label = "R(2:12|14)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0033|r5.writeByte(32)\l}"];
Node_14 [shape=record,label="{14\:\ 0x003c|LOOP_END\lPHI: r7 \l  PHI: (r7v2 int) = (r7v1 int), (r7v1 int), (r7v6 int) binds: [B:17:0x003c, B:19:0x003c, B:18:0x003c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:14:0x003c\l|r7 += java.lang.Character.charCount(r0)\l}"];
}
}
}
}
Node_13 [shape=record,label="{13\:\ 0x0039|r5.writeUtf8CodePoint(r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x003c|LOOP_END\lPHI: r7 \l  PHI: (r7v2 int) = (r7v1 int), (r7v1 int), (r7v6 int) binds: [B:17:0x003c, B:19:0x003c, B:18:0x003c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:14:0x003c\l|r7 += java.lang.Character.charCount(r0)\l}"];
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x000a}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002d}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0042}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0042|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x003c|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x003c|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x003c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static void okhttp3.HttpUrl.percentDecode((r5v0 okio.Buffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_16[style=dashed];
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_18;
Node_14 -> Node_0;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_19;
Node_14 -> Node_0;
Node_13 -> Node_17;
Node_14 -> Node_0;
Node_3 -> Node_4;
Node_9 -> Node_10;
Node_16 -> Node_15;
Node_17 -> Node_14;
Node_18 -> Node_14;
Node_19 -> Node_14;
}

