digraph "CFG forokhttp3.HttpUrl.canonicalize(Lokio\/Buffer;Ljava\/lang\/String;IILjava\/lang\/String;ZZZZLjava\/nio\/charset\/Charset;)V" {
subgraph cluster_Region_1700183911 {
label = "R(2:0|(3:2|(1:(1:18)(1:(3:(1:35)|(1:40)(1:39)|(1:43))(1:33)))|44))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|okio.Buffer r0 = null\l}"];
subgraph cluster_LoopRegion_1380187198 {
label = "LOOP:0: (3:2|(1:(1:18)(1:(3:(1:35)|(1:40)(1:39)|(1:43))(1:33)))|44)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 r8 \l  PHI: (r0v1 okio.Buffer) = (r0v0 okio.Buffer), (r0v2 okio.Buffer) binds: [B:0:0x0000, B:44:0x0097] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 int) = (r8v0 int), (r8v2 int) binds: [B:0:0x0000, B:44:0x0097] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:44:0x0097\l|if (r8 \< r9) goto L_0x0003\l}"];
subgraph cluster_Region_1974240490 {
label = "R(3:2|(1:(1:18)(1:(3:(1:35)|(1:40)(1:39)|(1:43))(1:33)))|44)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|int int r1 = r7.codePointAt(r8)\l}"];
subgraph cluster_IfRegion_2134041300 {
label = "IF [B:3:0x0007, B:5:0x000b, B:7:0x000f, B:9:0x0013, B:11:0x0017] THEN: R(1:(1:18)(1:(3:(1:35)|(1:40)(1:39)|(1:43))(1:33))) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|ADDED_TO_REGION\l|if (r11 == false) goto L_0x001b\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|ADDED_TO_REGION\l|if (r1 == 9) goto L_0x0097\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|ADDED_TO_REGION\l|if (r1 == 10) goto L_0x0097\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|ADDED_TO_REGION\l|if (r1 == 12) goto L_0x0097\l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|ADDED_TO_REGION\l|if (r1 == 13) goto L_0x0097\l}"];
subgraph cluster_Region_1629968029 {
label = "R(1:(1:18)(1:(3:(1:35)|(1:40)(1:39)|(1:43))(1:33)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1127891771 {
label = "IF [B:13:0x001d, B:14:0x001f] THEN: R(1:18) ELSE: R(1:(3:(1:35)|(1:40)(1:39)|(1:43))(1:33))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x001d|if (r1 == 43) goto L_0x001f\l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|ADDED_TO_REGION\l|if (r13 != false) goto L_0x0021\l}"];
subgraph cluster_Region_569554265 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0028|PHI: r2 \l  PHI: (r2v15 java.lang.String) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r6.writeUtf8(r11 ? \"+\" : \"%2B\")\l}"];
}
subgraph cluster_Region_392751673 {
label = "R(1:(3:(1:35)|(1:40)(1:39)|(1:43))(1:33)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_733122374 {
label = "IF [B:20:0x0031, B:22:0x0035, B:24:0x0039, B:25:0x003b, B:27:0x0042, B:28:0x0044, B:29:0x0046, B:30:0x0048, B:32:0x004e] THEN: R(3:(1:35)|(1:40)(1:39)|(1:43)) ELSE: R(1:33) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0031|if (r1 \< 32) goto L_0x0055\l}"];
Node_22 [shape=record,label="{22\:\ 0x0035|ADDED_TO_REGION\l|if (r1 == 127) goto L_0x0055\l}"];
Node_24 [shape=record,label="{24\:\ 0x0039|ADDED_TO_REGION\l|if (r1 \>= 128) goto L_0x003b\l}"];
Node_25 [shape=record,label="{25\:\ 0x003b|ADDED_TO_REGION\l|if (r14 == true) goto L_0x0055\l}"];
Node_27 [shape=record,label="{27\:\ 0x0042|ADDED_TO_REGION\l|if (r10.indexOf(r1) != \-1) goto L_0x0055\l}"];
Node_28 [shape=record,label="{28\:\ 0x0044|ADDED_TO_REGION\l|if (r1 == 37) goto L_0x0046\l}"];
Node_29 [shape=record,label="{29\:\ 0x0046|ADDED_TO_REGION\l|if (r11 == false) goto L_0x0055\l}"];
Node_30 [shape=record,label="{30\:\ 0x0048|ADDED_TO_REGION\l|if (r12 == true) goto L_0x004a\l}"];
Node_32 [shape=record,label="{32\:\ 0x004e|ADDED_TO_REGION\l|if (percentEncoded(r7, r8, r9) == false) goto L_0x0055\l}"];
subgraph cluster_Region_1510430438 {
label = "R(3:(1:35)|(1:40)(1:39)|(1:43))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_948490867 {
label = "IF [B:34:0x0055] THEN: R(1:35) ELSE: null";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0055|if (r0 == null) goto L_0x0057\l}"];
subgraph cluster_Region_469893929 {
label = "R(1:35)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0057|okio.Buffer r0 = new okio.Buffer()\l}"];
}
}
subgraph cluster_IfRegion_30371973 {
label = "IF [B:36:0x005c, B:38:0x0064] THEN: R(1:40) ELSE: R(1:39)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x005c|PHI: r0 \l  PHI: (r0v3 okio.Buffer) = (r0v1 okio.Buffer), (r0v4 okio.Buffer) binds: [B:34:0x0055, B:35:0x0057] A[DONT_GENERATE, DONT_INLINE]\l|if (r15 == null) goto L_0x0070\l}"];
Node_38 [shape=record,label="{38\:\ 0x0064|ADDED_TO_REGION\l|if (r15.equals(okhttp3.internal.Util.UTF_8) == true) goto L_0x0070\l}"];
subgraph cluster_Region_1682633230 {
label = "R(1:40)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0070|r0.writeUtf8CodePoint(r1)\l}"];
}
subgraph cluster_Region_876074087 {
label = "R(1:39)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0067|r0.writeString(r7, r8, java.lang.Character.charCount(r1) + r8, r15)\l}"];
}
}
subgraph cluster_LoopRegion_950047363 {
label = "LOOP:1: (1:43)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0077|if (r0.exhausted() == false) goto L_0x0079\l}"];
subgraph cluster_Region_1178977454 {
label = "R(1:43)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0079|LOOP_END\lLOOP:1: B:41:0x0073\-\>B:43:0x0079\l|byte r2 = r0.readByte() & 255\lr6.writeByte(37)\lr6.writeByte((int) HEX_DIGITS[(r2 \>\> 4) & 15])\lr6.writeByte((int) HEX_DIGITS[r2 & 15])\l}"];
}
}
}
subgraph cluster_Region_984143118 {
label = "R(1:33)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0051|r6.writeUtf8CodePoint(r1)\l}"];
}
}
}
}
}
}
Node_44 [shape=record,label="{44\:\ 0x0097|LOOP_END\lPHI: r0 \l  PHI: (r0v2 okio.Buffer) = (r0v3 okio.Buffer), (r0v1 okio.Buffer), (r0v1 okio.Buffer), (r0v1 okio.Buffer), (r0v1 okio.Buffer), (r0v1 okio.Buffer), (r0v1 okio.Buffer) binds: [B:52:0x0097, B:51:0x0097, B:50:0x0097, B:47:0x0097, B:48:0x0097, B:49:0x0097, B:53:0x0097] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:44:0x0097\l|r8 += java.lang.Character.charCount(r1)\l}"];
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0009}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000d}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0011}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0015}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x001b}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0021}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0023}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0026}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x002d}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0033}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0037}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x003d}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x004a}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x005e}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0073|LOOP_START\lLOOP:1: B:41:0x0073\-\>B:43:0x0079\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x009e}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x009e|SYNTHETIC\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0097|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x0097|SYNTHETIC\l}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x0097|SYNTHETIC\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x0097|SYNTHETIC\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0097|SYNTHETIC\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x0097|SYNTHETIC\l}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x0097|SYNTHETIC\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x0073|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static void okhttp3.HttpUrl.canonicalize((r6v0 okio.Buffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 java.nio.charset.Charset A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_46[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_47;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_48;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_49;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_53;
Node_13 -> Node_14;
Node_13 -> Node_19[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_19[style=dashed];
Node_18 -> Node_50;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_34;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_34;
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_34;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_34;
Node_28 -> Node_29;
Node_28 -> Node_33[style=dashed];
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_34;
Node_30 -> Node_31;
Node_30 -> Node_33[style=dashed];
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_34 -> Node_35;
Node_34 -> Node_36[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_40;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_40 -> Node_54;
Node_39 -> Node_54;
Node_42 -> Node_43;
Node_42 -> Node_52[style=dashed];
Node_43 -> Node_41;
Node_33 -> Node_51;
Node_44 -> Node_1;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_26 -> Node_27;
Node_31 -> Node_32;
Node_37 -> Node_38;
Node_41 -> Node_42;
Node_46 -> Node_45;
Node_47 -> Node_44;
Node_48 -> Node_44;
Node_49 -> Node_44;
Node_50 -> Node_44;
Node_51 -> Node_44;
Node_52 -> Node_44;
Node_53 -> Node_44;
Node_54 -> Node_41;
}

