digraph "CFG forokhttp3.HttpUrl.namesAndValuesToQueryString(Ljava\/lang\/StringBuilder;Ljava\/util\/List;)V" {
subgraph cluster_Region_425600960 {
label = "R(2:0|(5:2|(1:4)|5|(1:7)(0)|8))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r6.size()\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_1689477351 {
label = "LOOP:0: (5:2|(1:4)|5|(1:7)(0)|8)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:8:0x0029] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0005\-\>B:8:0x0029\l|if (r1 \< r0) goto L_0x0007\l}"];
subgraph cluster_Region_1522847964 {
label = "R(5:2|(1:4)|5|(1:7)(0)|8)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|java.lang.String java.lang.String r2 = r6.get(r1)\ljava.lang.String java.lang.String r3 = r6.get(r1 + 1)\l}"];
subgraph cluster_IfRegion_1396703916 {
label = "IF [B:3:0x0015] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0015|if (r1 \> 0) goto L_0x0017\l}"];
subgraph cluster_Region_499666697 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0017|r5.append(kotlin.text.Typography.amp)\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x001c|r5.append(r2)\l}"];
subgraph cluster_IfRegion_1002983203 {
label = "IF [B:6:0x001f] THEN: R(1:7) ELSE: R(0)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001f|if (r3 != null) goto L_0x0021\l}"];
subgraph cluster_Region_1149482213 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0021|r5.append(org.mapsforge.core.model.Tag.KEY_VALUE_SEPARATOR)\lr5.append(r3)\l}"];
}
subgraph cluster_Region_1158497531 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_8 [shape=record,label="{8\:\ 0x0029|LOOP_END\lLOOP:0: B:1:0x0005\-\>B:8:0x0029\l|r1 += 2\l}"];
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ 0x002c}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002c|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0029|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0029|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static void okhttp3.HttpUrl.namesAndValuesToQueryString((r5v0 java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.util.List\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/StringBuilder;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_12[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_1;
Node_10 -> Node_9;
Node_11 -> Node_8;
Node_12 -> Node_8;
}

