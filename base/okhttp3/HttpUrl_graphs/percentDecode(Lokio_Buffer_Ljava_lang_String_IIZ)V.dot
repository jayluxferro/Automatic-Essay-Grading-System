digraph "CFG forokhttp3.HttpUrl.percentDecode(Lokio\/Buffer;Ljava\/lang\/String;IIZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lPHI: r7 \l  PHI: (r7v1 int) = (r7v0 int), (r7v3 int) binds: [B:0:0x0000, B:14:0x003c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:14:0x003c\l|if (r7 \>= r8) goto L_0x0042\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|int r0 = r6.codePointAt(r7)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|if (r0 != 37) goto L_0x002d\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|int r1 = r7 + 2\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|if (r1 \>= r8) goto L_0x002d\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|int r2 = okhttp3.internal.Util.decodeHexDigit(r6.charAt(r7 + 1))\lint r3 = okhttp3.internal.Util.decodeHexDigit(r6.charAt(r1))\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|if (r2 == \-1) goto L_0x0039\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|if (r3 == \-1) goto L_0x0039\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|r5.writeByte((r2 \<\< 4) + r3)\lr7 = r1\l}"];
Node_9 [shape=record,label="{9\:\ 0x002d}"];
Node_10 [shape=record,label="{10\:\ 0x002f|if (r0 != 43) goto L_0x0039\l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|if (r9 == false) goto L_0x0039\l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|r5.writeByte(32)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0039|r5.writeUtf8CodePoint(r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x003c|LOOP_END\lPHI: r7 \l  PHI: (r7v2 int) = (r7v1 int), (r7v1 int), (r7v6 int) binds: [B:17:0x003c, B:19:0x003c, B:18:0x003c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:14:0x003c\l|int r7 = r7 + java.lang.Character.charCount(r0)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ 0x0042|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x003c|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x003c|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x003c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static void okhttp3.HttpUrl.percentDecode((r5v0 okio.Buffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_16;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_18;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_19;
Node_13 -> Node_17;
Node_14 -> Node_0;
Node_16 -> Node_15;
Node_17 -> Node_14;
Node_18 -> Node_14;
Node_19 -> Node_14;
}

