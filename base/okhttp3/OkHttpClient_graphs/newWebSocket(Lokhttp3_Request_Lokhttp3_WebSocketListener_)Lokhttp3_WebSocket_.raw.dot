digraph "CFG forokhttp3.OkHttpClient.newWebSocket(Lokhttp3\/Request;Lokhttp3\/WebSocketListener;)Lokhttp3\/WebSocket;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r6 I:okhttp3.internal.ws.RealWebSocket) =  okhttp3.internal.ws.RealWebSocket \l0x0002: NEW_INSTANCE  (r3 I:java.util.Random) =  java.util.Random \l0x0004: INVOKE  (r3 I:java.util.Random) java.util.Random.\<init\>():void type: DIRECT \l0x0007: IGET  (r0 I:int) = (r7 I:okhttp3.OkHttpClient) okhttp3.OkHttpClient.pingInterval int \l0x0009: CAST  (r4 I:long) = (long) (r0 I:int) \l0x000a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x000b: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x000c: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x000d: INVOKE  \l  (r0 I:okhttp3.internal.ws.RealWebSocket)\l  (r1 I:okhttp3.Request)\l  (r2 I:okhttp3.WebSocketListener)\l  (r3 I:java.util.Random)\l  (r4 I:long)\l okhttp3.internal.ws.RealWebSocket.\<init\>(okhttp3.Request, okhttp3.WebSocketListener, java.util.Random, long):void type: DIRECT \l0x0010: INVOKE  \l  (r6 I:okhttp3.internal.ws.RealWebSocket)\l  (r7 I:okhttp3.OkHttpClient)\l okhttp3.internal.ws.RealWebSocket.connect(okhttp3.OkHttpClient):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: RETURN  (r6 I:okhttp3.WebSocket) \l}"];
MethodNode[shape=record,label="{public okhttp3.WebSocket okhttp3.OkHttpClient.newWebSocket((r7 'this' I:okhttp3.OkHttpClient A[IMMUTABLE_TYPE, THIS]), (r8 I:okhttp3.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:okhttp3.WebSocketListener A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

