digraph "CFG forokhttp3.Cache.CacheResponseBody.contentLength()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = (\-1 ?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0002\l|0x0002: IGET  (r2 I:java.lang.String) = (r4 I:okhttp3.Cache$CacheResponseBody) okhttp3.Cache.CacheResponseBody.contentLength java.lang.String A[Catch:\{ NumberFormatException \-\> 0x000e \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000d A[Catch:\{ NumberFormatException \-\> 0x000e \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IGET  (r2 I:java.lang.String) = (r4 I:okhttp3.Cache$CacheResponseBody) okhttp3.Cache.CacheResponseBody.contentLength java.lang.String A[Catch:\{ NumberFormatException \-\> 0x000e \}]\l0x0008: INVOKE  (r2 I:long) = (r2 I:java.lang.String) java.lang.Long.parseLong(java.lang.String):long type: STATIC A[Catch:\{ NumberFormatException \-\> 0x000e \}]\l0x000b: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: MOVE  (r0 I:?[long, double]) = (r2 I:?[long, double]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: RETURN  (r0 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: RETURN  (r0 I:long) \l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lExcHandler: NumberFormatException null\lSplitter:B:1:0x0002\l}"];
MethodNode[shape=record,label="{public long okhttp3.Cache.CacheResponseBody.contentLength((r4 'this' I:okhttp3.Cache$CacheResponseBody A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_8 -> Node_7;
}

