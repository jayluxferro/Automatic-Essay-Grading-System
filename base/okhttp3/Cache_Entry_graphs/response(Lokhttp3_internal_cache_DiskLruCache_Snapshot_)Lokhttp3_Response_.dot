digraph "CFG forokhttp3.Cache.Entry.response(Lokhttp3\/internal\/cache\/DiskLruCache$Snapshot;)Lokhttp3\/Response;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r0 = r5.responseHeaders.get(p018io.fabric.sdk.android.services.network.HttpRequest.HEADER_CONTENT_TYPE)\ljava.lang.String r1 = r5.responseHeaders.get(p018io.fabric.sdk.android.services.network.HttpRequest.HEADER_CONTENT_LENGTH)\lokhttp3.Request r2 = new okhttp3.Request.Builder().url(r5.url).method(r5.requestMethod, (okhttp3.RequestBody) null).headers(r5.varyHeaders).build()\l}"];
Node_1 [shape=record,label="{1\:\ 0x006c|RETURN\l|return new okhttp3.Response.Builder().request(r2).protocol(r5.protocol).code(r5.code).message(r5.message).headers(r5.responseHeaders).body(new okhttp3.Cache.CacheResponseBody(r6, r0, r1)).handshake(r5.handshake).sentRequestAtMillis(r5.sentRequestMillis).receivedResponseAtMillis(r5.receivedResponseMillis).build()\l}"];
MethodNode[shape=record,label="{public okhttp3.Response okhttp3.Cache.Entry.response((r5v0 'this' okhttp3.Cache$Entry A[IMMUTABLE_TYPE, THIS]), (r6v0 okhttp3.internal.cache.DiskLruCache$Snapshot A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

