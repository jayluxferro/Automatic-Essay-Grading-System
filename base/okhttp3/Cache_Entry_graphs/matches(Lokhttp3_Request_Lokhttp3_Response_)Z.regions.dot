digraph "CFG forokhttp3.Cache.Entry.matches(Lokhttp3\/Request;Lokhttp3\/Response;)Z" {
subgraph cluster_Region_309105900 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000e|RETURN\l|return r2.url.equals(r3.url().toString()) && r2.requestMethod.equals(r3.method()) && okhttp3.internal.http.HttpHeaders.varyMatches(r4, r2.varyHeaders, r3)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0010}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x001a|REMOVE\lADDED_TO_REGION\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x001c}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0022|REMOVE\lADDED_TO_REGION\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0024|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0026|SYNTHETIC\lORIG_RETURN\l}"];
MethodNode[shape=record,label="{public boolean okhttp3.Cache.Entry.matches((r2v0 'this' okhttp3.Cache$Entry A[IMMUTABLE_TYPE, THIS]), (r3v0 okhttp3.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 okhttp3.Response A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
}

