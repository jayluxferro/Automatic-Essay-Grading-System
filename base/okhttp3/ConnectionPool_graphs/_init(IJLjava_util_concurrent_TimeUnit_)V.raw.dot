digraph "CFG forokhttp3.ConnectionPool.\<init\>(IJLjava\/util\/concurrent\/TimeUnit;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:okhttp3.ConnectionPool$1) =  okhttp3.ConnectionPool$1 \l0x0005: INVOKE  \l  (r0 I:okhttp3.ConnectionPool$1)\l  (r2 I:okhttp3.ConnectionPool)\l okhttp3.ConnectionPool.1.\<init\>(okhttp3.ConnectionPool):void type: DIRECT \l0x0008: IPUT  (r0 I:java.lang.Runnable), (r2 I:okhttp3.ConnectionPool) okhttp3.ConnectionPool.cleanupRunnable java.lang.Runnable \l0x000a: NEW_INSTANCE  (r0 I:java.util.ArrayDeque) =  java.util.ArrayDeque \l0x000c: INVOKE  (r0 I:java.util.ArrayDeque) java.util.ArrayDeque.\<init\>():void type: DIRECT \l0x000f: IPUT  \l  (r0 I:java.util.Deque\<okhttp3.internal.connection.RealConnection\>)\l  (r2 I:okhttp3.ConnectionPool)\l okhttp3.ConnectionPool.connections java.util.Deque \l0x0011: NEW_INSTANCE  (r0 I:okhttp3.internal.connection.RouteDatabase) =  okhttp3.internal.connection.RouteDatabase \l0x0013: INVOKE  (r0 I:okhttp3.internal.connection.RouteDatabase) okhttp3.internal.connection.RouteDatabase.\<init\>():void type: DIRECT \l0x0016: IPUT  \l  (r0 I:okhttp3.internal.connection.RouteDatabase)\l  (r2 I:okhttp3.ConnectionPool)\l okhttp3.ConnectionPool.routeDatabase okhttp3.internal.connection.RouteDatabase \l0x0018: IPUT  (r3 I:int), (r2 I:okhttp3.ConnectionPool) okhttp3.ConnectionPool.maxIdleConnections int \l0x001a: INVOKE  (r0 I:long) = (r6 I:java.util.concurrent.TimeUnit), (r4 I:long) java.util.concurrent.TimeUnit.toNanos(long):long type: VIRTUAL \l0x001e: IPUT  (r0 I:long), (r2 I:okhttp3.ConnectionPool) okhttp3.ConnectionPool.keepAliveDurationNs long \l0x0020: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0022: CMP_L  (r3 I:int) = (r4 I:long), (r0 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0024|0x0024: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x0027 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0026|0x0026: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|0x0027: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0029: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002b: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002e: CONST_STR  (r0 I:java.lang.String) =  \"keepAliveDuration \<= 0: \" \l0x0030: INVOKE  (r6 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0033: INVOKE  (r6 I:java.lang.StringBuilder), (r4 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x0036: INVOKE  (r4 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003a: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x003d|0x003d: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void okhttp3.ConnectionPool.\<init\>((r2 'this' I:okhttp3.ConnectionPool A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.concurrent.TimeUnit A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

