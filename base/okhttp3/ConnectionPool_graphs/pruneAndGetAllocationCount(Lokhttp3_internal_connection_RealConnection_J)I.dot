digraph "CFG forokhttp3.ConnectionPool.pruneAndGetAllocationCount(Lokhttp3\/internal\/connection\/RealConnection;J)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.List\<java.lang.ref.Reference\<okhttp3.internal.connection.StreamAllocation\>\> r0 = r7.allocations\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:12:0x0004] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0004\-\>B:12:0x0004\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|if (r2 \>= r0.size()) goto L_0x0058\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|java.lang.ref.Reference r3 = r0.get(r2)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|if (r3.get() == null) goto L_0x0019\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|int r2 = r2 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"A connection to \")\lr4.append(r7.route().address().url())\lr4.append(\" was leaked. Did you forget to close a response body?\")\ljava.lang.String r4 = r4.toString()\lokhttp3.internal.platform.Platform.get().logCloseableLeak(r4, ((okhttp3.internal.connection.StreamAllocation.StreamAllocationReference) r3).callStackTrace)\lr0.remove(r2)\lr7.noNewStreams = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0050|if (r0.isEmpty() == false) goto L_0x0004\l}"];
Node_8 [shape=record,label="{8\:\ 0x0052|r7.idleAtNanos = r8 \- r6.keepAliveDurationNs\l}"];
Node_9 [shape=record,label="{9\:\ 0x0057|RETURN\l|return 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0058}"];
Node_11 [shape=record,label="{11\:\ 0x005c|RETURN\l|return r0.size()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|LOOP_END\lSYNTHETIC\lPHI: r2 \l  PHI: (r2v2 int) = (r2v1 int), (r2v4 int) binds: [B:16:0x0004, B:15:0x0004] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0004\-\>B:12:0x0004\l}"];
Node_13 [shape=record,label="{13\:\ 0x0052|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0058|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int okhttp3.ConnectionPool.pruneAndGetAllocationCount((r6v0 'this' okhttp3.ConnectionPool A[IMMUTABLE_TYPE, THIS]), (r7v0 okhttp3.internal.connection.RealConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_13[style=dashed];
Node_7 -> Node_16;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_1;
Node_13 -> Node_8;
Node_14 -> Node_10;
Node_15 -> Node_12;
Node_16 -> Node_12;
}

