digraph "CFG forokhttp3.ConnectionPool.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r8 I:java.util.concurrent.ThreadPoolExecutor) =  java.util.concurrent.ThreadPoolExecutor \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l \l0x0006: CONST  (r3 I:?[long, double]) = (60 ?[long, double]) \l0x0008: SGET  (r5 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.SECONDS java.util.concurrent.TimeUnit \l0x000a: NEW_INSTANCE  (r6 I:java.util.concurrent.SynchronousQueue) =  java.util.concurrent.SynchronousQueue \l0x000c: INVOKE  (r6 I:java.util.concurrent.SynchronousQueue) java.util.concurrent.SynchronousQueue.\<init\>():void type: DIRECT \l0x000f: CONST_STR  (r0 I:java.lang.String) =  \"OkHttp ConnectionPool\" \l0x0011: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0012: INVOKE  (r7 I:java.util.concurrent.ThreadFactory) = (r0 I:java.lang.String), (r7 I:boolean) okhttp3.internal.Util.threadFactory(java.lang.String, boolean):java.util.concurrent.ThreadFactory type: STATIC \l0x0016: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0017: INVOKE  \l  (r0 I:java.util.concurrent.ThreadPoolExecutor)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:long)\l  (r5 I:java.util.concurrent.TimeUnit)\l  (r6 I:java.util.concurrent.BlockingQueue)\l  (r7 I:java.util.concurrent.ThreadFactory)\l java.util.concurrent.ThreadPoolExecutor.\<init\>(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue, java.util.concurrent.ThreadFactory):void type: DIRECT \l0x001a: SPUT  (r8 I:java.util.concurrent.Executor) okhttp3.ConnectionPool.executor java.util.concurrent.Executor \l}"];
Node_1 [shape=record,label="{1\:\ 0x001c|0x001c: RETURN   \l}"];
MethodNode[shape=record,label="{static void okhttp3.ConnectionPool.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

