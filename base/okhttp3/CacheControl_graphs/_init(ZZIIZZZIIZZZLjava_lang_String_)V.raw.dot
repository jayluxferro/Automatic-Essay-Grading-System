digraph "CFG forokhttp3.CacheControl.\<init\>(ZZIIZZZIIZZZLjava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  (r1 I:boolean), (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.noCache boolean \l0x0005: IPUT  (r2 I:boolean), (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.noStore boolean \l0x0007: IPUT  (r3 I:int), (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.maxAgeSeconds int \l0x0009: IPUT  (r4 I:int), (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.sMaxAgeSeconds int \l0x000b: IPUT  (r5 I:boolean), (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.isPrivate boolean \l0x000d: IPUT  (r6 I:boolean), (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.isPublic boolean \l0x000f: IPUT  (r7 I:boolean), (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.mustRevalidate boolean \l0x0011: IPUT  (r8 I:int), (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.maxStaleSeconds int \l0x0013: IPUT  (r9 I:int), (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.minFreshSeconds int \l0x0015: IPUT  (r10 I:boolean), (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.onlyIfCached boolean \l0x0017: IPUT  (r11 I:boolean), (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.noTransform boolean \l0x0019: IPUT  (r12 I:boolean), (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.immutable boolean \l0x001b: IPUT  (r13 I:java.lang.String), (r0 I:okhttp3.CacheControl) okhttp3.CacheControl.headerValue java.lang.String \l}"];
Node_1 [shape=record,label="{1\:\ 0x001d|0x001d: RETURN   \l}"];
MethodNode[shape=record,label="{private void okhttp3.CacheControl.\<init\>((r0 'this' I:okhttp3.CacheControl A[IMMUTABLE_TYPE, THIS]), (r1 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , , , , , , , , , , , , Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

