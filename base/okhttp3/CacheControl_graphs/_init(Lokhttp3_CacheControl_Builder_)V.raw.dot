digraph "CFG forokhttp3.CacheControl.\<init\>(Lokhttp3\/CacheControl$Builder;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IGET  (r0 I:boolean) = (r2 I:okhttp3.CacheControl$Builder) okhttp3.CacheControl.Builder.noCache boolean \l0x0005: IPUT  (r0 I:boolean), (r1 I:okhttp3.CacheControl) okhttp3.CacheControl.noCache boolean \l0x0007: IGET  (r0 I:boolean) = (r2 I:okhttp3.CacheControl$Builder) okhttp3.CacheControl.Builder.noStore boolean \l0x0009: IPUT  (r0 I:boolean), (r1 I:okhttp3.CacheControl) okhttp3.CacheControl.noStore boolean \l0x000b: IGET  (r0 I:int) = (r2 I:okhttp3.CacheControl$Builder) okhttp3.CacheControl.Builder.maxAgeSeconds int \l0x000d: IPUT  (r0 I:int), (r1 I:okhttp3.CacheControl) okhttp3.CacheControl.maxAgeSeconds int \l0x000f: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0010: IPUT  (r0 I:int), (r1 I:okhttp3.CacheControl) okhttp3.CacheControl.sMaxAgeSeconds int \l0x0012: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: IPUT  (r0 I:boolean), (r1 I:okhttp3.CacheControl) okhttp3.CacheControl.isPrivate boolean \l0x0015: IPUT  (r0 I:boolean), (r1 I:okhttp3.CacheControl) okhttp3.CacheControl.isPublic boolean \l0x0017: IPUT  (r0 I:boolean), (r1 I:okhttp3.CacheControl) okhttp3.CacheControl.mustRevalidate boolean \l0x0019: IGET  (r0 I:int) = (r2 I:okhttp3.CacheControl$Builder) okhttp3.CacheControl.Builder.maxStaleSeconds int \l0x001b: IPUT  (r0 I:int), (r1 I:okhttp3.CacheControl) okhttp3.CacheControl.maxStaleSeconds int \l0x001d: IGET  (r0 I:int) = (r2 I:okhttp3.CacheControl$Builder) okhttp3.CacheControl.Builder.minFreshSeconds int \l0x001f: IPUT  (r0 I:int), (r1 I:okhttp3.CacheControl) okhttp3.CacheControl.minFreshSeconds int \l0x0021: IGET  (r0 I:boolean) = (r2 I:okhttp3.CacheControl$Builder) okhttp3.CacheControl.Builder.onlyIfCached boolean \l0x0023: IPUT  (r0 I:boolean), (r1 I:okhttp3.CacheControl) okhttp3.CacheControl.onlyIfCached boolean \l0x0025: IGET  (r0 I:boolean) = (r2 I:okhttp3.CacheControl$Builder) okhttp3.CacheControl.Builder.noTransform boolean \l0x0027: IPUT  (r0 I:boolean), (r1 I:okhttp3.CacheControl) okhttp3.CacheControl.noTransform boolean \l0x0029: IGET  (r2 I:boolean) = (r2 I:okhttp3.CacheControl$Builder) okhttp3.CacheControl.Builder.immutable boolean \l0x002b: IPUT  (r2 I:boolean), (r1 I:okhttp3.CacheControl) okhttp3.CacheControl.immutable boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x002d|0x002d: RETURN   \l}"];
MethodNode[shape=record,label="{void okhttp3.CacheControl.\<init\>((r1 'this' I:okhttp3.CacheControl A[IMMUTABLE_TYPE, THIS]), (r2 I:okhttp3.CacheControl$Builder A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

