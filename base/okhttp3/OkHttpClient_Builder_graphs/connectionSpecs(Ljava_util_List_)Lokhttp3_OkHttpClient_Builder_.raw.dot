digraph "CFG forokhttp3.OkHttpClient.Builder.connectionSpecs(Ljava\/util\/List;)Lokhttp3\/OkHttpClient$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.util.List) = (r1 I:java.util.List) okhttp3.internal.Util.immutableList(java.util.List):java.util.List type: STATIC \l0x0004: IPUT  \l  (r1 I:java.util.List\<okhttp3.ConnectionSpec\>)\l  (r0 I:okhttp3.OkHttpClient$Builder)\l okhttp3.OkHttpClient.Builder.connectionSpecs java.util.List \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: RETURN  (r0 I:okhttp3.OkHttpClient$Builder) \l}"];
MethodNode[shape=record,label="{public okhttp3.OkHttpClient$Builder okhttp3.OkHttpClient.Builder.connectionSpecs((r0 'this' I:okhttp3.OkHttpClient$Builder A[IMMUTABLE_TYPE, THIS]), (r1 I:java.util.List\<okhttp3.ConnectionSpec\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lokhttp3\/ConnectionSpec;, \>;), Lokhttp3\/OkHttpClient$Builder;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

