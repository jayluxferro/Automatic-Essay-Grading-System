digraph "CFG forokhttp3.Headers.Builder.addAll(Lokhttp3\/Headers;)Lokhttp3\/Headers$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r5 I:okhttp3.Headers) okhttp3.Headers.size():int type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:3:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r2 I:java.lang.String) = (r5 I:okhttp3.Headers), (r1 I:int) okhttp3.Headers.name(int):java.lang.String type: VIRTUAL \l0x000b: INVOKE  (r3 I:java.lang.String) = (r5 I:okhttp3.Headers), (r1 I:int) okhttp3.Headers.value(int):java.lang.String type: VIRTUAL \l0x000f: INVOKE  \l  (r4 I:okhttp3.Headers$Builder)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l okhttp3.Headers.Builder.addLenient(java.lang.String, java.lang.String):okhttp3.Headers$Builder type: VIRTUAL \l0x0012: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: RETURN  (r4 I:okhttp3.Headers$Builder) \l}"];
MethodNode[shape=record,label="{public okhttp3.Headers$Builder okhttp3.Headers.Builder.addAll((r4 'this' I:okhttp3.Headers$Builder A[IMMUTABLE_TYPE, THIS]), (r5 I:okhttp3.Headers A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

