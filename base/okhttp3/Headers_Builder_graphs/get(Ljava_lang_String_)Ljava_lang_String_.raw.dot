digraph "CFG forokhttp3.Headers.Builder.get(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<java.lang.String\>) = (r2 I:okhttp3.Headers$Builder) okhttp3.Headers.Builder.namesAndValues java.util.List \l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0006: ARITH  (r0 I:int) = (r0 I:int) + (\-2 int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:7:0x0026 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r1 I:java.util.List\<java.lang.String\>) = (r2 I:okhttp3.Headers$Builder) okhttp3.Headers.Builder.namesAndValues java.util.List \l0x000c: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0010: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) \l0x0012: INVOKE  (r1 I:boolean) = (r3 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.equalsIgnoreCase(java.lang.String):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0023 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IGET  (r3 I:java.util.List\<java.lang.String\>) = (r2 I:okhttp3.Headers$Builder) okhttp3.Headers.Builder.namesAndValues java.util.List \l0x001a: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x001c: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0020: CHECK_CAST  (r3 I:java.lang.String) = (java.lang.String) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: RETURN  (r3 I:java.lang.String) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: ARITH  (r0 I:int) = (r0 I:int) + (\-2 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: RETURN  (r3 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String okhttp3.Headers.Builder.get((r2 'this' I:okhttp3.Headers$Builder A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_1;
Node_7 -> Node_8;
}

