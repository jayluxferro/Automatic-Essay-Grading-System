digraph "CFG forokhttp3.Headers.Builder.checkNameAndValue(Ljava\/lang\/String;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r10 == null) goto L_0x009c\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r10.isEmpty() != false) goto L_0x0094\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|int r0 = r10.length()\lr2 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v5 int) binds: [B:3:0x0008, B:9:0x001f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000e\-\>B:9:0x001f\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|if (r2 \>= r0) goto L_0x003e\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|char r7 = r10.charAt(r2)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|if (r7 \<= ' ') goto L_0x0022\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|if (r7 \>= 127) goto L_0x0022\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|LOOP_END\lLOOP:0: B:4:0x000e\-\>B:9:0x001f\l|int r2 = r2 + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|java.lang.Object[] r0 = new java.lang.Object[]\{java.lang.Integer.valueOf(r7), java.lang.Integer.valueOf(r2), r10\}\l}"];
Node_11 [shape=record,label="{11\:\ 0x003d|throw new java.lang.IllegalArgumentException(okhttp3.internal.Util.format(\"Unexpected char %#04x at %d in header name: %s\", r0))\l}"];
Node_12 [shape=record,label="{12\:\ 0x003e|if (r11 == null) goto L_0x0078\l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|int r0 = r11.length()\lr2 = 0\l}"];
Node_14 [shape=record,label="{14\:\ 0x0045|LOOP_START\lPHI: r2 \l  PHI: (r2v3 int) = (r2v2 int), (r2v4 int) binds: [B:13:0x0040, B:20:0x0055] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:14:0x0045\-\>B:20:0x0055\l|if (r2 \>= r0) goto L_0x0077\l}"];
Node_15 [shape=record,label="{15\:\ 0x0047|char r7 = r11.charAt(r2)\l}"];
Node_16 [shape=record,label="{16\:\ 0x004d|if (r7 \> 31) goto L_0x0053\l}"];
Node_17 [shape=record,label="{17\:\ 0x004f}"];
Node_18 [shape=record,label="{18\:\ 0x0051|if (r7 != 9) goto L_0x0058\l}"];
Node_19 [shape=record,label="{19\:\ 0x0053|if (r7 \>= 127) goto L_0x0058\l}"];
Node_20 [shape=record,label="{20\:\ 0x0055|LOOP_END\lLOOP:1: B:14:0x0045\-\>B:20:0x0055\l|int r2 = r2 + 1\l}"];
Node_21 [shape=record,label="{21\:\ 0x0058|java.lang.Object[] r5 = new java.lang.Object[]\{java.lang.Integer.valueOf(r7), java.lang.Integer.valueOf(r2), r10, r11\}\l}"];
Node_22 [shape=record,label="{22\:\ 0x0076|throw new java.lang.IllegalArgumentException(okhttp3.internal.Util.format(\"Unexpected char %#04x at %d in %s value: %s\", r5))\l}"];
Node_23 [shape=record,label="{23\:\ 0x0077|RETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ 0x0078|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"value for name \")\lr0.append(r10)\lr0.append(\" == null\")\l}"];
Node_25 [shape=record,label="{25\:\ 0x0093|throw new java.lang.NullPointerException(r0.toString())\l}"];
Node_26 [shape=record,label="{26\:\ 0x0094}"];
Node_27 [shape=record,label="{27\:\ 0x009b|throw new java.lang.IllegalArgumentException(\"name is empty\")\l}"];
Node_28 [shape=record,label="{28\:\ 0x009c}"];
Node_29 [shape=record,label="{29\:\ 0x00a3|throw new java.lang.NullPointerException(\"name == null\")\l}"];
Node_30 [shape=record,label="{30\:\ 0x003e|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0022|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0058|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0058|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0077|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void okhttp3.Headers.Builder.checkNameAndValue((r9v0 'this' okhttp3.Headers$Builder A[IMMUTABLE_TYPE, THIS]), (r10v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_28;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_26;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_30;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_31;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_32;
Node_9 -> Node_4;
Node_10 -> Node_11;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_24;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_35;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_33;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_34;
Node_20 -> Node_14;
Node_21 -> Node_22;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_30 -> Node_12;
Node_31 -> Node_10;
Node_32 -> Node_10;
Node_33 -> Node_21;
Node_34 -> Node_21;
Node_35 -> Node_23;
}

