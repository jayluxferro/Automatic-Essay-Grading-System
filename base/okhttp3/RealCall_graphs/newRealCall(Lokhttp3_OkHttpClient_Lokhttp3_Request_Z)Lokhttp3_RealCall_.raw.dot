digraph "CFG forokhttp3.RealCall.newRealCall(Lokhttp3\/OkHttpClient;Lokhttp3\/Request;Z)Lokhttp3\/RealCall;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:okhttp3.RealCall) =  okhttp3.RealCall \l0x0002: INVOKE  \l  (r0 I:okhttp3.RealCall)\l  (r1 I:okhttp3.OkHttpClient)\l  (r2 I:okhttp3.Request)\l  (r3 I:boolean)\l okhttp3.RealCall.\<init\>(okhttp3.OkHttpClient, okhttp3.Request, boolean):void type: DIRECT \l0x0005: INVOKE  (r1 I:okhttp3.EventListener$Factory) = (r1 I:okhttp3.OkHttpClient) okhttp3.OkHttpClient.eventListenerFactory():okhttp3.EventListener$Factory type: VIRTUAL \l0x0009: INVOKE  (r1 I:okhttp3.EventListener) = (r1 I:okhttp3.EventListener$Factory), (r0 I:okhttp3.Call) okhttp3.EventListener.Factory.create(okhttp3.Call):okhttp3.EventListener type: INTERFACE \l0x000d: IPUT  (r1 I:okhttp3.EventListener), (r0 I:okhttp3.RealCall) okhttp3.RealCall.eventListener okhttp3.EventListener \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN  (r0 I:okhttp3.RealCall) \l}"];
MethodNode[shape=record,label="{static okhttp3.RealCall okhttp3.RealCall.newRealCall((r1 I:okhttp3.OkHttpClient A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:okhttp3.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

