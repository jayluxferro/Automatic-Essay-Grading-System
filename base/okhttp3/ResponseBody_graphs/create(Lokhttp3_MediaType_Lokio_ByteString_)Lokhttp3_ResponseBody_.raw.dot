digraph "CFG forokhttp3.ResponseBody.create(Lokhttp3\/MediaType;Lokio\/ByteString;)Lokhttp3\/ResponseBody;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:okio.Buffer) =  okio.Buffer \l0x0002: INVOKE  (r0 I:okio.Buffer) okio.Buffer.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r0 I:okio.Buffer) = (r0 I:okio.Buffer), (r4 I:okio.ByteString) okio.Buffer.write(okio.ByteString):okio.Buffer type: VIRTUAL \l0x0009: INVOKE  (r4 I:int) = (r4 I:okio.ByteString) okio.ByteString.size():int type: VIRTUAL \l0x000d: CAST  (r1 I:long) = (long) (r4 I:int) \l0x000e: INVOKE  (r3 I:okhttp3.ResponseBody) = \l  (r3 I:okhttp3.MediaType)\l  (r1 I:long)\l  (r0 I:okio.BufferedSource)\l okhttp3.ResponseBody.create(okhttp3.MediaType, long, okio.BufferedSource):okhttp3.ResponseBody type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: RETURN  (r3 I:okhttp3.ResponseBody) \l}"];
MethodNode[shape=record,label="{public static okhttp3.ResponseBody okhttp3.ResponseBody.create((r3 I:okhttp3.MediaType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:okio.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, javax.annotation.Nullable, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

