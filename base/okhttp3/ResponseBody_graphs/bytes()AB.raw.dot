digraph "CFG forokhttp3.ResponseBody.bytes()[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:long) = (r6 I:okhttp3.ResponseBody) okhttp3.ResponseBody.contentLength():long type: VIRTUAL \l0x0004: CONST  (r2 I:?[long, double]) = \l  (2147483647(0x7fffffff, double:1.060997895E\-314) ?[long, double])\l \l0x0007: CMP_L  (r2 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r2 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:16:0x004e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: INVOKE  (r2 I:okio.BufferedSource) = (r6 I:okhttp3.ResponseBody) okhttp3.ResponseBody.source():okio.BufferedSource type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|SYNTHETIC\lSplitter:B:3:0x000f\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x000f\l|0x000f: INVOKE  (r3 I:byte[]) = (r2 I:okio.BufferedSource) okio.BufferedSource.readByteArray():byte[] type: INTERFACE A[Catch:\{ all \-\> 0x0049 \}, TRY_ENTER]\l0x0012: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: INVOKE  (r2 I:java.io.Closeable) okhttp3.internal.Util.closeQuietly(java.io.Closeable):void type: STATIC \l0x0016: CONST  (r4 I:?[long, double]) = (\-1 ?[long, double]) \l0x0018: CMP_L  (r2 I:int) = (r0 I:long), (r4 I:long) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0048 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: ARRAY_LENGTH  (r2 I:int) = (r3 I:?[]) \l0x001d: CAST  (r4 I:long) = (long) (r2 I:int) \l0x001e: CMP_L  (r2 I:int) = (r0 I:long), (r4 I:long) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0023 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: NEW_INSTANCE  (r2 I:java.io.IOException) =  java.io.IOException \l0x0025: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0027: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002a: CONST_STR  (r5 I:java.lang.String) =  \"Content\-Length (\" \l0x002c: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002f: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x0032: CONST_STR  (r0 I:java.lang.String) =  \") and stream length (\" \l0x0034: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0037: ARRAY_LENGTH  (r0 I:int) = (r3 I:?[]) \l0x0038: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x003b: CONST_STR  (r0 I:java.lang.String) =  \") disagree\" \l0x003d: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0040: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0044: INVOKE  (r2 I:java.io.IOException), (r0 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0047|0x0047: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0048|0x0048: RETURN  (r3 I:byte[]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0049|ExcHandler: all null\lSplitter:B:3:0x000f\l|0x0049: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x004a|0x004a: INVOKE  (r2 I:java.io.Closeable) okhttp3.internal.Util.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x004d|0x004d: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x004e|0x004e: NEW_INSTANCE  (r2 I:java.io.IOException) =  java.io.IOException \l0x0050: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0052: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0055: CONST_STR  (r4 I:java.lang.String) =  \"Cannot buffer entire body for content length: \" \l0x0057: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005a: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x005d: INVOKE  (r0 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0061: INVOKE  (r2 I:java.io.IOException), (r0 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0064|0x0064: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final byte[] okhttp3.ResponseBody.bytes((r6 'this' I:okhttp3.ResponseBody A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_12[style=dashed];
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

