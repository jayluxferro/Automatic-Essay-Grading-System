digraph "CFG forpl.droidsonroids.gif.RenderTask.doWork()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x0002: IGET  (r0 I:pl.droidsonroids.gif.GifInfoHandle) = (r0 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle \l0x0004: IGET  (r1 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x0006: IGET  (r1 I:android.graphics.Bitmap) = (r1 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mBuffer android.graphics.Bitmap \l0x0008: INVOKE  (r0 I:long) = \l  (r0 I:pl.droidsonroids.gif.GifInfoHandle)\l  (r1 I:android.graphics.Bitmap)\l pl.droidsonroids.gif.GifInfoHandle.renderFrame(android.graphics.Bitmap):long type: VIRTUAL \l0x000c: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x000e: CMP_L  (r4 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: IF  (r4 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:14:0x0072 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: IGET  (r4 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x0014: INVOKE  (r5 I:long) =  android.os.SystemClock.uptimeMillis():long type: STATIC \l0x0018: ARITH  (r5 I:long) = (r5 I:long) + (r0 I:long) \l0x0019: IPUT  (r5 I:long), (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNextFrameRenderTime long \l0x001b: IGET  (r4 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x001d: INVOKE  (r4 I:boolean) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.isVisible():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|0x0021: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0044 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|0x0023: IGET  (r4 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x0025: IGET  (r4 I:boolean) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mIsRunning boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|0x0027: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0044 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|0x0029: IGET  (r4 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x002b: IGET  (r4 I:boolean) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mIsRenderingTriggeredOnDraw boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0044 \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: IGET  (r4 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x0031: IGET  (r4 I:java.util.concurrent.ScheduledThreadPoolExecutor) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mExecutor java.util.concurrent.ScheduledThreadPoolExecutor \l0x0033: INVOKE  \l  (r4 I:java.util.concurrent.ScheduledThreadPoolExecutor)\l  (r7 I:java.lang.Runnable)\l java.util.concurrent.ScheduledThreadPoolExecutor.remove(java.lang.Runnable):boolean type: VIRTUAL \l0x0036: IGET  (r4 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x0038: IGET  (r5 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x003a: IGET  (r5 I:java.util.concurrent.ScheduledThreadPoolExecutor) = (r5 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mExecutor java.util.concurrent.ScheduledThreadPoolExecutor \l0x003c: SGET  (r6 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.MILLISECONDS java.util.concurrent.TimeUnit \l0x003e: INVOKE  (r0 I:java.util.concurrent.ScheduledFuture) = \l  (r5 I:java.util.concurrent.ScheduledThreadPoolExecutor)\l  (r7 I:java.lang.Runnable)\l  (r0 I:long)\l  (r6 I:java.util.concurrent.TimeUnit)\l java.util.concurrent.ScheduledThreadPoolExecutor.schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit):java.util.concurrent.ScheduledFuture type: VIRTUAL \l0x0042: IPUT  \l  (r0 I:java.util.concurrent.ScheduledFuture\<?\>)\l  (r4 I:pl.droidsonroids.gif.GifDrawable)\l pl.droidsonroids.gif.GifDrawable.mRenderTaskSchedule java.util.concurrent.ScheduledFuture \l}"];
Node_9 [shape=record,label="{9\:\ 0x0044|0x0044: IGET  (r0 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x0046: IGET  (r0 I:java.util.concurrent.ConcurrentLinkedQueue\<pl.droidsonroids.gif.AnimationListener\>) = (r0 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mListeners java.util.concurrent.ConcurrentLinkedQueue \l0x0048: INVOKE  (r0 I:boolean) = (r0 I:java.util.concurrent.ConcurrentLinkedQueue) java.util.concurrent.ConcurrentLinkedQueue.isEmpty():boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x004c|0x004c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x007d \l}"];
Node_11 [shape=record,label="{11\:\ 0x004e|0x004e: IGET  (r0 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x0050: INVOKE  (r0 I:int) = (r0 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.getCurrentFrameIndex():int type: VIRTUAL \l0x0054: IGET  (r1 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x0056: IGET  (r1 I:pl.droidsonroids.gif.GifInfoHandle) = (r1 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle \l0x0058: INVOKE  (r1 I:int) = (r1 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.getNumberOfFrames():int type: VIRTUAL \l0x005c: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x005e|0x005e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x007d \l}"];
Node_13 [shape=record,label="{13\:\ 0x0060|0x0060: IGET  (r0 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x0062: IGET  (r0 I:pl.droidsonroids.gif.InvalidationHandler) = (r0 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mInvalidationHandler pl.droidsonroids.gif.InvalidationHandler \l0x0064: IGET  (r1 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x0066: INVOKE  (r1 I:int) = (r1 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.getCurrentLoop():int type: VIRTUAL \l0x006a: IGET  (r4 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x006c: IGET  (r4 I:long) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNextFrameRenderTime long \l0x006e: INVOKE  \l  (r0 I:pl.droidsonroids.gif.InvalidationHandler)\l  (r1 I:int)\l  (r4 I:long)\l pl.droidsonroids.gif.InvalidationHandler.sendEmptyMessageAtTime(int, long):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0072|0x0072: IGET  (r0 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x0074: CONST  (r4 I:?[long, double]) = (\-9223372036854775808 ?[long, double]) \l0x0076: IPUT  (r4 I:long), (r0 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNextFrameRenderTime long \l0x0078: IGET  (r0 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x007a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007b: IPUT  (r1 I:boolean), (r0 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mIsRunning boolean \l}"];
Node_15 [shape=record,label="{15\:\ 0x007d|0x007d: IGET  (r0 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x007f: INVOKE  (r0 I:boolean) = (r0 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.isVisible():boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0083|0x0083: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0097 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0085|0x0085: IGET  (r0 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x0087: IGET  (r0 I:pl.droidsonroids.gif.InvalidationHandler) = (r0 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mInvalidationHandler pl.droidsonroids.gif.InvalidationHandler \l0x0089: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x008a: INVOKE  (r0 I:boolean) = (r0 I:pl.droidsonroids.gif.InvalidationHandler), (r1 I:int) pl.droidsonroids.gif.InvalidationHandler.hasMessages(int):boolean type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x008e|0x008e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0097 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0090|0x0090: IGET  (r0 I:pl.droidsonroids.gif.GifDrawable) = (r7 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.mGifDrawable pl.droidsonroids.gif.GifDrawable \l0x0092: IGET  (r0 I:pl.droidsonroids.gif.InvalidationHandler) = (r0 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mInvalidationHandler pl.droidsonroids.gif.InvalidationHandler \l0x0094: INVOKE  \l  (r0 I:pl.droidsonroids.gif.InvalidationHandler)\l  (r1 I:int)\l  (r2 I:long)\l pl.droidsonroids.gif.InvalidationHandler.sendEmptyMessageAtTime(int, long):boolean type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0097|0x0097: RETURN   \l}"];
MethodNode[shape=record,label="{public void pl.droidsonroids.gif.RenderTask.doWork((r7 'this' I:pl.droidsonroids.gif.RenderTask A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
}

