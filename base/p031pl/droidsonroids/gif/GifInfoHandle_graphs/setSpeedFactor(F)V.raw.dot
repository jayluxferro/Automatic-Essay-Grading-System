digraph "CFG forpl.droidsonroids.gif.GifInfoHandle.setSpeedFactor(F)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CMP_G  (r0 I:int) = (r3 I:float), (r0 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:15:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: INVOKE  (r0 I:boolean) = (r3 I:float) java.lang.Float.isNaN(float):boolean type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x001e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (805306368(0x30000000, float:4.656613E\-10) ?[int, float, short, byte, char])\l \l0x000d: CMP_G  (r1 I:int) = (r3 I:float), (r0 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r1 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:7:0x0013 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (805306368(0x30000000, float:4.656613E\-10) ?[int, float, short, byte, char])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|SYNTHETIC\lSplitter:B:8:0x0014\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0014\l|0x0014: IGET  (r0 I:long) = (r2 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.gifInfoPtr long A[Catch:\{ all \-\> 0x001b \}, TRY_ENTER]\l0x0016: INVOKE  (r0 I:long), (r3 I:float) pl.droidsonroids.gif.GifInfoHandle.setSpeedFactor(long, float):void type: STATIC A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|0x001a: RETURN   A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|ExcHandler: all null\lSplitter:B:8:0x0014\l|0x001b: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|0x001c: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001b \}, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x001d|0x001d: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x001e|0x001e: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0020: CONST_STR  (r0 I:java.lang.String) =  \"Speed factor is not positive\" \l0x0022: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0025|0x0025: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{void pl.droidsonroids.gif.GifInfoHandle.setSpeedFactor((r2 'this' I:pl.droidsonroids.gif.GifInfoHandle A[IMMUTABLE_TYPE, THIS]), (r3 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.FloatRange, \{from=0.0, fromInclusive=false\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
}

