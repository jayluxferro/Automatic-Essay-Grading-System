digraph "CFG forpl.droidsonroids.gif.GifDecoder.\<init\>(Lpl\/droidsonroids\/gif\/InputSource;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  \l  (r1 I:pl.droidsonroids.gif.GifDecoder)\l  (r2 I:pl.droidsonroids.gif.InputSource)\l  (r0 I:pl.droidsonroids.gif.GifOptions)\l pl.droidsonroids.gif.GifDecoder.\<init\>(pl.droidsonroids.gif.InputSource, pl.droidsonroids.gif.GifOptions):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: RETURN   \l}"];
MethodNode[shape=record,label="{public void pl.droidsonroids.gif.GifDecoder.\<init\>((r1 'this' I:pl.droidsonroids.gif.GifDecoder A[IMMUTABLE_TYPE, THIS]), (r2 I:pl.droidsonroids.gif.InputSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

