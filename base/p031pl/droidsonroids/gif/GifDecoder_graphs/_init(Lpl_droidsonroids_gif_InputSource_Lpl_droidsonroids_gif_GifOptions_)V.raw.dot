digraph "CFG forpl.droidsonroids.gif.GifDecoder.\<init\>(Lpl\/droidsonroids\/gif\/InputSource;Lpl\/droidsonroids\/gif\/GifOptions;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: INVOKE  (r2 I:pl.droidsonroids.gif.GifInfoHandle) = (r2 I:pl.droidsonroids.gif.InputSource) pl.droidsonroids.gif.InputSource.open():pl.droidsonroids.gif.GifInfoHandle type: VIRTUAL \l0x0007: IPUT  \l  (r2 I:pl.droidsonroids.gif.GifInfoHandle)\l  (r1 I:pl.droidsonroids.gif.GifDecoder)\l pl.droidsonroids.gif.GifDecoder.mGifInfoHandle pl.droidsonroids.gif.GifInfoHandle \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IGET  (r2 I:pl.droidsonroids.gif.GifInfoHandle) = (r1 I:pl.droidsonroids.gif.GifDecoder) pl.droidsonroids.gif.GifDecoder.mGifInfoHandle pl.droidsonroids.gif.GifInfoHandle \l0x000d: IGET  (r0 I:char) = (r3 I:pl.droidsonroids.gif.GifOptions) pl.droidsonroids.gif.GifOptions.inSampleSize char \l0x000f: IGET  (r3 I:boolean) = (r3 I:pl.droidsonroids.gif.GifOptions) pl.droidsonroids.gif.GifOptions.inIsOpaque boolean \l0x0011: INVOKE  \l  (r2 I:pl.droidsonroids.gif.GifInfoHandle)\l  (r0 I:char)\l  (r3 I:boolean)\l pl.droidsonroids.gif.GifInfoHandle.setOptions(char, boolean):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: RETURN   \l}"];
MethodNode[shape=record,label="{public void pl.droidsonroids.gif.GifDecoder.\<init\>((r1 'this' I:pl.droidsonroids.gif.GifDecoder A[IMMUTABLE_TYPE, THIS]), (r2 I:pl.droidsonroids.gif.InputSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:pl.droidsonroids.gif.GifOptions A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

