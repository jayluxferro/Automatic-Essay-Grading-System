digraph "CFG forpl.droidsonroids.gif.GifDecoder.checkBuffer(Landroid\/graphics\/Bitmap;)V" {
subgraph cluster_Region_871866628 {
label = "R(1:(1:10)(1:(1:8)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_182826965 {
label = "IF [B:1:0x0004] THEN: R(1:10) ELSE: R(1:(1:8)(0))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r3.isRecycled() != false) goto L_0x0027\l}"];
subgraph cluster_Region_1277777542 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002e|throw new java.lang.IllegalArgumentException(\"Bitmap is recycled\")\l}"];
}
subgraph cluster_Region_1379839282 {
label = "R(1:(1:8)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1557125616 {
label = "IF [B:3:0x0010, B:5:0x001c] THEN: R(1:8) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0010|if (r3.getWidth() \< r2.mGifInfoHandle.getWidth()) goto L_0x001f\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|ADDED_TO_REGION\l|if (r3.getHeight() \< r2.mGifInfoHandle.getHeight()) goto L_0x001f\l}"];
subgraph cluster_Region_2075367075 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0026|throw new java.lang.IllegalArgumentException(\"Bitmap ia too small, size must be greater than or equal to GIF size\")\l}"];
}
subgraph cluster_Region_2099798581 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0012}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001e}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001f}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0027}"];
MethodNode[shape=record,label="{private void pl.droidsonroids.gif.GifDecoder.checkBuffer((r2v0 'this' pl.droidsonroids.gif.GifDecoder A[IMMUTABLE_TYPE, THIS]), (r3v0 android.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_7 -> Node_8;
Node_9 -> Node_10;
}

