digraph "CFG forpl.droidsonroids.gif.ReLinker.openZipFile(Ljava\/io\/File;)Ljava\/util\/zip\/ZipFile;" {
subgraph cluster_Region_26020065 {
label = "R(3:0|(2:1|(2:(2:7|1)|(1:(2:4|12))))|(2:(1:9)|(2:10|11))) | DECL_VAR: java.util.zip.ZipFile null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = 0\l}"];
subgraph cluster_LoopRegion_2107183146 {
label = "LOOP:0: (2:1|(2:(2:7|1)|(1:(2:4|12))))";
node [shape=record,color=blue];
subgraph cluster_Region_1414155180 {
label = "R(2:1|(2:(2:7|1)|(1:(2:4|12))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v5 int) binds: [B:0:0x0000, B:5:0x000d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:5:0x000d\l|int int r1 = r0 + 1\l}"];
subgraph cluster_Region_434681415 {
label = "R(2:(2:7|1)|(1:(2:4|12)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_496862672 {
label = "IF [B:2:0x0004] THEN: R(2:7|1) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r0 \>= 5) goto L_0x000f\l}"];
subgraph cluster_Region_1958628482 {
label = "R(2:7|1)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000f|EDGE_INSN: B:7:0x000f\-\>B:8:0x0010 ?: BREAK  \l|r0 = null\l}"];
Node_InsnContainer_370917919 [shape=record,label="{|break\l}"];
}
}
subgraph cluster_Region_1978353334 {
label = "R(1:(2:4|12))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1086722145 {
label = "Try: R(2:4|12) catches: R(1:5)";
node [shape=record,color=blue];
subgraph cluster_Region_300390401 {
label = "R(2:4|12)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ IOException \-\> 0x000d \}\lSplitter:B:3:0x0006\l|java.util.zip.ZipFile r0 = new java.util.zip.ZipFile(r3, 1)     \/\/ Catch:\{ IOException \-\> 0x000d \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0010|SYNTHETIC\lEDGE_INSN: B:12:0x0010\-\>B:8:0x0010 ?: BREAK  \l|break\l}"];
}
subgraph cluster_Region_512714338 {
label = "R(1:5) | ExcHandler: IOException (unused java.io.IOException)\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000d|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:5:0x000d\l|r0 = r1\l}"];
}
}
}
}
}
}
subgraph cluster_Region_474008752 {
label = "R(2:(1:9)|(2:10|11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1409543709 {
label = "IF [B:8:0x0010] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0010|EDGE_INSN: B:12:0x0010\-\>B:8:0x0010 ?: BREAK  \lEDGE_INSN: B:7:0x000f\-\>B:8:0x0010 ?: BREAK  \lPHI: r0 \l  PHI: (r0v3 java.util.zip.ZipFile) = (r0v2 java.util.zip.ZipFile), (r0v6 java.util.zip.ZipFile) binds: [B:7:0x000f, B:12:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != null) goto L_0x0012\l}"];
subgraph cluster_Region_2079513821 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0012|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_197631706 {
label = "R(2:10|11)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0013}"];
Node_11 [shape=record,label="{11\:\ 0x002d|throw new java.lang.IllegalStateException(\"Could not open APK file: \" + r3.getAbsolutePath())\l}"];
}
}
}
subgraph cluster_Region_512714338 {
label = "R(1:5) | ExcHandler: IOException (unused java.io.IOException)\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000d|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:5:0x000d\l|r0 = r1\l}"];
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0006|SYNTHETIC\lSplitter:B:3:0x0006\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:3:0x0006\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x000f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static java.util.zip.ZipFile pl.droidsonroids.gif.ReLinker.openZipFile((r3v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_13;
Node_7 -> Node_8;
Node_4 -> Node_6;
Node_4 -> Node_12;
Node_12 -> Node_8;
Node_5 -> Node_1;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_10 -> Node_11;
Node_5 -> Node_1;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_6 -> Node_5;
Node_13 -> Node_7;
}

