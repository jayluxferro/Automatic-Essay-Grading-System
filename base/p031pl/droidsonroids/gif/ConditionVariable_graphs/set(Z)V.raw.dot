digraph "CFG forpl.droidsonroids.gif.ConditionVariable.set(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: INVOKE  (r0 I:pl.droidsonroids.gif.ConditionVariable) pl.droidsonroids.gif.ConditionVariable.open():void type: VIRTUAL A[Catch:\{ all \-\> 0x0007 \}, TRY_ENTER]\l0x0006: GOTO  \-\> 0x000c A[Catch:\{ all \-\> 0x0007 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x0007: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0007 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: GOTO  \-\> 0x000e A[Catch:\{ all \-\> 0x0007 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: INVOKE  (r0 I:pl.droidsonroids.gif.ConditionVariable) pl.droidsonroids.gif.ConditionVariable.close():void type: VIRTUAL A[Catch:\{ all \-\> 0x0007 \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|0x000c: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x000d|0x000d: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x000e|0x000e: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x000f|0x000f: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{synchronized void pl.droidsonroids.gif.ConditionVariable.set((r0 'this' I:pl.droidsonroids.gif.ConditionVariable A[IMMUTABLE_TYPE, THIS]), (r1 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
}

