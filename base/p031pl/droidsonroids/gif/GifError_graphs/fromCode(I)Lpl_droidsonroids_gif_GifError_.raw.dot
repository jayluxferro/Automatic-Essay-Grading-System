digraph "CFG forpl.droidsonroids.gif.GifError.fromCode(I)Lpl\/droidsonroids\/gif\/GifError;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:pl.droidsonroids.gif.GifError[]) =  pl.droidsonroids.gif.GifError.values():pl.droidsonroids.gif.GifError[] type: STATIC \l0x0004: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l0x0005: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:6:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: AGET  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x000a: IGET  (r4 I:int) = (r3 I:pl.droidsonroids.gif.GifError) pl.droidsonroids.gif.GifError.errorCode int \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: RETURN  (r3 I:pl.droidsonroids.gif.GifError) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: SGET  (r0 I:pl.droidsonroids.gif.GifError) =  pl.droidsonroids.gif.GifError.UNKNOWN pl.droidsonroids.gif.GifError \l0x0014: IPUT  (r5 I:int), (r0 I:pl.droidsonroids.gif.GifError) pl.droidsonroids.gif.GifError.errorCode int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: RETURN  (r0 I:pl.droidsonroids.gif.GifError) \l}"];
MethodNode[shape=record,label="{static pl.droidsonroids.gif.GifError pl.droidsonroids.gif.GifError.fromCode((r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
}

