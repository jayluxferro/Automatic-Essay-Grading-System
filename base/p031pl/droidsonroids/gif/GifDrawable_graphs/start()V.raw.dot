digraph "CFG forpl.droidsonroids.gif.GifDrawable.start()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:boolean) = (r2 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mIsRunning boolean A[Catch:\{ all \-\> 0x0015 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0007 A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: RETURN   A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|0x0007: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0015 \}]\l0x0008: IPUT  (r0 I:boolean), (r2 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mIsRunning boolean A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|0x000a: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0015 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x000b|0x000b: IGET  (r0 I:pl.droidsonroids.gif.GifInfoHandle) = (r2 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle \l0x000d: INVOKE  (r0 I:long) = (r0 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.restoreRemainder():long type: VIRTUAL \l0x0011: INVOKE  (r2 I:pl.droidsonroids.gif.GifDrawable), (r0 I:long) pl.droidsonroids.gif.GifDrawable.startAnimation(long):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|0x0014: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0015: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|SYNTHETIC\lSplitter:B:11:0x0016\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x0016\l|0x0016: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0015 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0017|0x0017: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void pl.droidsonroids.gif.GifDrawable.start((r2 'this' I:pl.droidsonroids.gif.GifDrawable A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_10;
Node_12 -> Node_13;
Node_12 -> Node_10;
}

