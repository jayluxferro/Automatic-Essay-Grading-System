digraph "CFG forpl.droidsonroids.gif.GifDrawable.seekToPositionAndGet(I)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:12:0x001d \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:pl.droidsonroids.gif.GifInfoHandle) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|SYNTHETIC\lSplitter:B:3:0x0005\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0005\l|0x0005: IGET  (r1 I:pl.droidsonroids.gif.GifInfoHandle) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle A[Catch:\{ all \-\> 0x001a \}, TRY_ENTER]\l0x0007: IGET  (r2 I:android.graphics.Bitmap) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mBuffer android.graphics.Bitmap A[Catch:\{ all \-\> 0x001a \}]\l0x0009: INVOKE  \l  (r1 I:pl.droidsonroids.gif.GifInfoHandle)\l  (r5 I:int)\l  (r2 I:android.graphics.Bitmap)\l pl.droidsonroids.gif.GifInfoHandle.seekToTime(int, android.graphics.Bitmap):void type: VIRTUAL A[Catch:\{ all \-\> 0x001a \}]\l0x000c: INVOKE  (r5 I:android.graphics.Bitmap) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.getCurrentFrame():android.graphics.Bitmap type: VIRTUAL A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001a \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: IGET  (r0 I:pl.droidsonroids.gif.InvalidationHandler) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mInvalidationHandler pl.droidsonroids.gif.InvalidationHandler \l0x0013: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0014: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0016: INVOKE  \l  (r0 I:pl.droidsonroids.gif.InvalidationHandler)\l  (r1 I:int)\l  (r2 I:long)\l pl.droidsonroids.gif.InvalidationHandler.sendEmptyMessageAtTime(int, long):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: RETURN  (r5 I:android.graphics.Bitmap) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|ExcHandler: all null\lSplitter:B:3:0x0005\l|0x001a: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|SYNTHETIC\lSplitter:B:9:0x001b\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x001b\l|0x001b: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001a \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: NEW_INSTANCE  (r5 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x001f: CONST_STR  (r0 I:java.lang.String) =  \"Position is not positive\" \l0x0021: INVOKE  \l  (r5 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|0x0024: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public android.graphics.Bitmap pl.droidsonroids.gif.GifDrawable.seekToPositionAndGet((r4 'this' I:pl.droidsonroids.gif.GifDrawable A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.IntRange, \{from=0, to=2147483647\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_12;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_8;
Node_10 -> Node_11;
Node_10 -> Node_8;
Node_12 -> Node_13;
}

