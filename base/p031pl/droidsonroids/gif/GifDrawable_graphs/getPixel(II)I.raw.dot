digraph "CFG forpl.droidsonroids.gif.GifDrawable.getPixel(II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:pl.droidsonroids.gif.GifInfoHandle) = (r1 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle \l0x0002: INVOKE  (r0 I:int) = (r0 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.getWidth():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:pl.droidsonroids.gif.GifInfoHandle) = (r1 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle \l0x000a: INVOKE  (r0 I:int) = (r0 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.getHeight():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r3 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:6:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IGET  (r0 I:android.graphics.Bitmap) = (r1 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mBuffer android.graphics.Bitmap \l0x0012: INVOKE  (r2 I:int) = (r0 I:android.graphics.Bitmap), (r2 I:int), (r3 I:int) android.graphics.Bitmap.getPixel(int, int):int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: RETURN  (r2 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0019: CONST_STR  (r3 I:java.lang.String) =  \"y must be \< height\" \l0x001b: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0021: CONST_STR  (r3 I:java.lang.String) =  \"x must be \< width\" \l0x0023: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int pl.droidsonroids.gif.GifDrawable.getPixel((r1 'this' I:pl.droidsonroids.gif.GifDrawable A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

