digraph "CFG forpl.droidsonroids.gif.GifDrawable.\<init\>(Lpl\/droidsonroids\/gif\/GifInfoHandle;Lpl\/droidsonroids\/gif\/GifDrawable;Ljava\/util\/concurrent\/ScheduledThreadPoolExecutor;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0004: IPUT  (r0 I:boolean), (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mIsRunning boolean \l0x0006: CONST  (r1 I:?[long, double]) = (\-9223372036854775808 ?[long, double]) \l0x0008: IPUT  (r1 I:long), (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNextFrameRenderTime long \l0x000a: NEW_INSTANCE  (r1 I:android.graphics.Rect) =  android.graphics.Rect \l0x000c: INVOKE  (r1 I:android.graphics.Rect) android.graphics.Rect.\<init\>():void type: DIRECT \l0x000f: IPUT  \l  (r1 I:android.graphics.Rect)\l  (r4 I:pl.droidsonroids.gif.GifDrawable)\l pl.droidsonroids.gif.GifDrawable.mDstRect android.graphics.Rect \l0x0011: NEW_INSTANCE  (r1 I:android.graphics.Paint) =  android.graphics.Paint \l0x0013: CONST  (r2 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0014: INVOKE  (r1 I:android.graphics.Paint), (r2 I:int) android.graphics.Paint.\<init\>(int):void type: DIRECT \l0x0017: IPUT  \l  (r1 I:android.graphics.Paint)\l  (r4 I:pl.droidsonroids.gif.GifDrawable)\l pl.droidsonroids.gif.GifDrawable.mPaint android.graphics.Paint \l0x0019: NEW_INSTANCE  (r1 I:java.util.concurrent.ConcurrentLinkedQueue) =  java.util.concurrent.ConcurrentLinkedQueue \l0x001b: INVOKE  (r1 I:java.util.concurrent.ConcurrentLinkedQueue) java.util.concurrent.ConcurrentLinkedQueue.\<init\>():void type: DIRECT \l0x001e: IPUT  \l  (r1 I:java.util.concurrent.ConcurrentLinkedQueue\<pl.droidsonroids.gif.AnimationListener\>)\l  (r4 I:pl.droidsonroids.gif.GifDrawable)\l pl.droidsonroids.gif.GifDrawable.mListeners java.util.concurrent.ConcurrentLinkedQueue \l0x0020: NEW_INSTANCE  (r1 I:pl.droidsonroids.gif.RenderTask) =  pl.droidsonroids.gif.RenderTask \l0x0022: INVOKE  \l  (r1 I:pl.droidsonroids.gif.RenderTask)\l  (r4 I:pl.droidsonroids.gif.GifDrawable)\l pl.droidsonroids.gif.RenderTask.\<init\>(pl.droidsonroids.gif.GifDrawable):void type: DIRECT \l0x0025: IPUT  \l  (r1 I:pl.droidsonroids.gif.RenderTask)\l  (r4 I:pl.droidsonroids.gif.GifDrawable)\l pl.droidsonroids.gif.GifDrawable.mRenderTask pl.droidsonroids.gif.RenderTask \l0x0027: IPUT  (r8 I:boolean), (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mIsRenderingTriggeredOnDraw boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0029|0x0029: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x002c \l}"];
Node_3 [shape=record,label="{3\:\ 0x002c|0x002c: INVOKE  (r7 I:pl.droidsonroids.gif.GifRenderingExecutor) =  pl.droidsonroids.gif.GifRenderingExecutor.getInstance():pl.droidsonroids.gif.GifRenderingExecutor type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0030|0x0030: IPUT  \l  (r7 I:java.util.concurrent.ScheduledThreadPoolExecutor)\l  (r4 I:pl.droidsonroids.gif.GifDrawable)\l pl.droidsonroids.gif.GifDrawable.mExecutor java.util.concurrent.ScheduledThreadPoolExecutor \l0x0032: IPUT  \l  (r5 I:pl.droidsonroids.gif.GifInfoHandle)\l  (r4 I:pl.droidsonroids.gif.GifDrawable)\l pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle \l0x0034: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0035: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0036|0x0036: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x006d \l}"];
Node_6 [shape=record,label="{6\:\ 0x0038|0x0038: IGET  (r1 I:pl.droidsonroids.gif.GifInfoHandle) = (r6 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle \l}"];
Node_7 [shape=record,label="{7\:\ 0x003a|0x003a: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x003b|SYNTHETIC\lSplitter:B:8:0x003b\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x003b\l|0x003b: IGET  (r2 I:pl.droidsonroids.gif.GifInfoHandle) = (r6 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle A[Catch:\{ all \-\> 0x006a \}, TRY_ENTER]\l0x003d: INVOKE  (r2 I:boolean) = (r2 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.isRecycled():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|0x0041: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0068 A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0043|0x0043: IGET  (r2 I:pl.droidsonroids.gif.GifInfoHandle) = (r6 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle A[Catch:\{ all \-\> 0x006a \}]\l0x0045: INVOKE  (r2 I:int) = (r2 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.getHeight():int type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l0x0049: IGET  (r3 I:pl.droidsonroids.gif.GifInfoHandle) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle A[Catch:\{ all \-\> 0x006a \}]\l0x004b: INVOKE  (r3 I:int) = (r3 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.getHeight():int type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x004f|0x004f: IF  (r2 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:16:0x0068 A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0051|0x0051: IGET  (r2 I:pl.droidsonroids.gif.GifInfoHandle) = (r6 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle A[Catch:\{ all \-\> 0x006a \}]\l0x0053: INVOKE  (r2 I:int) = (r2 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.getWidth():int type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l0x0057: IGET  (r3 I:pl.droidsonroids.gif.GifInfoHandle) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle A[Catch:\{ all \-\> 0x006a \}]\l0x0059: INVOKE  (r3 I:int) = (r3 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.getWidth():int type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x005d|0x005d: IF  (r2 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:16:0x0068 A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x005f|0x005f: INVOKE  (r6 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.shutdown():void type: DIRECT A[Catch:\{ all \-\> 0x006a \}]\l0x0062: IGET  (r6 I:android.graphics.Bitmap) = (r6 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mBuffer android.graphics.Bitmap A[Catch:\{ all \-\> 0x006a \}]\l0x0064: INVOKE  (r6 I:android.graphics.Bitmap), (r8 I:int) android.graphics.Bitmap.eraseColor(int):void type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l0x0067: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0068|0x0068: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0069|0x0069: GOTO  \-\> 0x006d A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x006a|ExcHandler: all null\lSplitter:B:8:0x003b\l|0x006a: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x006b|0x006b: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x006a \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x006c|0x006c: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_21 [shape=record,label="{21\:\ 0x006d|0x006d: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0084 \l}"];
Node_22 [shape=record,label="{22\:\ 0x006f|0x006f: IGET  (r6 I:pl.droidsonroids.gif.GifInfoHandle) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle \l0x0071: INVOKE  (r6 I:int) = (r6 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.getWidth():int type: VIRTUAL \l0x0075: IGET  (r7 I:pl.droidsonroids.gif.GifInfoHandle) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle \l0x0077: INVOKE  (r7 I:int) = (r7 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.getHeight():int type: VIRTUAL \l0x007b: SGET  (r1 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config \l0x007d: INVOKE  (r6 I:android.graphics.Bitmap) = \l  (r6 I:int)\l  (r7 I:int)\l  (r1 I:android.graphics.Bitmap$Config)\l android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap type: STATIC \l0x0081: IPUT  \l  (r6 I:android.graphics.Bitmap)\l  (r4 I:pl.droidsonroids.gif.GifDrawable)\l pl.droidsonroids.gif.GifDrawable.mBuffer android.graphics.Bitmap \l}"];
Node_23 [shape=record,label="{23\:\ 0x0084|0x0084: IPUT  \l  (r7 I:android.graphics.Bitmap)\l  (r4 I:pl.droidsonroids.gif.GifDrawable)\l pl.droidsonroids.gif.GifDrawable.mBuffer android.graphics.Bitmap \l}"];
Node_24 [shape=record,label="{24\:\ 0x0086|0x0086: SGET  (r6 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0088: CONST  (r7 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x008a|0x008a: IF  (r6 I:?[int, byte, short, char]) \< (r7 I:?[int, byte, short, char])  \-\> B:27:0x0096 \l}"];
Node_26 [shape=record,label="{26\:\ 0x008c|0x008c: IGET  (r6 I:android.graphics.Bitmap) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mBuffer android.graphics.Bitmap \l0x008e: INVOKE  (r5 I:boolean) = (r5 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.isOpaque():boolean type: VIRTUAL \l0x0092: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) ^ (r0 I:?[int, boolean, short, byte, char]) \l0x0093: INVOKE  (r6 I:android.graphics.Bitmap), (r5 I:boolean) android.graphics.Bitmap.setHasAlpha(boolean):void type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x0096|0x0096: NEW_INSTANCE  (r5 I:android.graphics.Rect) =  android.graphics.Rect \l0x0098: IGET  (r6 I:pl.droidsonroids.gif.GifInfoHandle) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle \l0x009a: INVOKE  (r6 I:int) = (r6 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.getWidth():int type: VIRTUAL \l0x009e: IGET  (r7 I:pl.droidsonroids.gif.GifInfoHandle) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle \l0x00a0: INVOKE  (r7 I:int) = (r7 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.getHeight():int type: VIRTUAL \l0x00a4: INVOKE  \l  (r5 I:android.graphics.Rect)\l  (r8 I:int)\l  (r8 I:int)\l  (r6 I:int)\l  (r7 I:int)\l android.graphics.Rect.\<init\>(int, int, int, int):void type: DIRECT \l0x00a7: IPUT  \l  (r5 I:android.graphics.Rect)\l  (r4 I:pl.droidsonroids.gif.GifDrawable)\l pl.droidsonroids.gif.GifDrawable.mSrcRect android.graphics.Rect \l0x00a9: NEW_INSTANCE  (r5 I:pl.droidsonroids.gif.InvalidationHandler) =  pl.droidsonroids.gif.InvalidationHandler \l0x00ab: INVOKE  \l  (r5 I:pl.droidsonroids.gif.InvalidationHandler)\l  (r4 I:pl.droidsonroids.gif.GifDrawable)\l pl.droidsonroids.gif.InvalidationHandler.\<init\>(pl.droidsonroids.gif.GifDrawable):void type: DIRECT \l0x00ae: IPUT  \l  (r5 I:pl.droidsonroids.gif.InvalidationHandler)\l  (r4 I:pl.droidsonroids.gif.GifDrawable)\l pl.droidsonroids.gif.GifDrawable.mInvalidationHandler pl.droidsonroids.gif.InvalidationHandler \l0x00b0: IGET  (r5 I:pl.droidsonroids.gif.RenderTask) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mRenderTask pl.droidsonroids.gif.RenderTask \l0x00b2: INVOKE  (r5 I:pl.droidsonroids.gif.RenderTask) pl.droidsonroids.gif.RenderTask.doWork():void type: VIRTUAL \l0x00b5: IGET  (r5 I:pl.droidsonroids.gif.GifInfoHandle) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle \l0x00b7: INVOKE  (r5 I:int) = (r5 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.getWidth():int type: VIRTUAL \l0x00bb: IPUT  (r5 I:int), (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mScaledWidth int \l0x00bd: IGET  (r5 I:pl.droidsonroids.gif.GifInfoHandle) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNativeInfoHandle pl.droidsonroids.gif.GifInfoHandle \l0x00bf: INVOKE  (r5 I:int) = (r5 I:pl.droidsonroids.gif.GifInfoHandle) pl.droidsonroids.gif.GifInfoHandle.getHeight():int type: VIRTUAL \l0x00c3: IPUT  (r5 I:int), (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mScaledHeight int \l}"];
Node_28 [shape=record,label="{28\:\ 0x00c5|0x00c5: RETURN   \l}"];
MethodNode[shape=record,label="{void pl.droidsonroids.gif.GifDrawable.\<init\>((r4 'this' I:pl.droidsonroids.gif.GifDrawable A[IMMUTABLE_TYPE, THIS]), (r5 I:pl.droidsonroids.gif.GifInfoHandle A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:pl.droidsonroids.gif.GifDrawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.concurrent.ScheduledThreadPoolExecutor A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_4[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_21;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_18;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
}

