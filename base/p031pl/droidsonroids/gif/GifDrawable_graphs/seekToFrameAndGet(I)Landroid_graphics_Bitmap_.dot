digraph "CFG forpl.droidsonroids.gif.GifDrawable.seekToFrameAndGet(I)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 \< 0) goto L_0x001d\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|pl.droidsonroids.gif.GifInfoHandle r0 = r4.mNativeInfoHandle\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|monitor\-enter(r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|SYNTHETIC\l}"];
Node_4 [shape=record,label="{4\:\ ?|r4.mNativeInfoHandle.seekToFrame(r5, r4.mBuffer)\landroid.graphics.Bitmap r5 = getCurrentFrame()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|monitor\-exit(r0)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|r4.mInvalidationHandler.sendEmptyMessageAtTime(\-1, 0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|RETURN\l|return r5\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|LOOP_START\lREMOVE\lLOOP:0: B:8:0x001a\-\>B:14:0x001a\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|SYNTHETIC\lREMOVE\lSplitter:B:9:0x001b\l}"];
Node_10 [shape=record,label="{10\:\ ?|REMOVE\lSplitter:B:9:0x001b\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|REMOVE\l|throw r5\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d}"];
Node_13 [shape=record,label="{13\:\ 0x0024|throw new java.lang.IndexOutOfBoundsException(\"Frame index is not positive\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x001a|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:8:0x001a\-\>B:14:0x001a\l}"];
Node_15 [shape=record,label="{15\:\ 0x001c|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_16 [shape=record,label="{16\:\ 0x001a|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
MethodNode[shape=record,label="{public android.graphics.Bitmap pl.droidsonroids.gif.GifDrawable.seekToFrameAndGet((r4v0 'this' pl.droidsonroids.gif.GifDrawable A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.IntRange, \{from=0, to=2147483647\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_12;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_14;
Node_10 -> Node_15;
Node_10 -> Node_16;
Node_12 -> Node_13;
Node_14 -> Node_8;
Node_15 -> Node_11;
Node_16 -> Node_14;
}

