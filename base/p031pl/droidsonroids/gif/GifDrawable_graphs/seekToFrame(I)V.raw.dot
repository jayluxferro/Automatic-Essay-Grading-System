digraph "CFG forpl.droidsonroids.gif.GifDrawable.seekToFrame(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:java.util.concurrent.ScheduledThreadPoolExecutor) = (r2 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mExecutor java.util.concurrent.ScheduledThreadPoolExecutor \l0x0004: NEW_INSTANCE  (r1 I:pl.droidsonroids.gif.GifDrawable$3) =  pl.droidsonroids.gif.GifDrawable$3 \l0x0006: INVOKE  \l  (r1 I:pl.droidsonroids.gif.GifDrawable$3)\l  (r2 I:pl.droidsonroids.gif.GifDrawable)\l  (r2 I:pl.droidsonroids.gif.GifDrawable)\l  (r3 I:int)\l pl.droidsonroids.gif.GifDrawable.3.\<init\>(pl.droidsonroids.gif.GifDrawable, pl.droidsonroids.gif.GifDrawable, int):void type: DIRECT \l0x0009: INVOKE  \l  (r0 I:java.util.concurrent.ScheduledThreadPoolExecutor)\l  (r1 I:java.lang.Runnable)\l java.util.concurrent.ScheduledThreadPoolExecutor.execute(java.lang.Runnable):void type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: NEW_INSTANCE  (r3 I:java.lang.IndexOutOfBoundsException) =  java.lang.IndexOutOfBoundsException \l0x000f: CONST_STR  (r0 I:java.lang.String) =  \"Frame index is not positive\" \l0x0011: INVOKE  \l  (r3 I:java.lang.IndexOutOfBoundsException)\l  (r0 I:java.lang.String)\l java.lang.IndexOutOfBoundsException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void pl.droidsonroids.gif.GifDrawable.seekToFrame((r2 'this' I:pl.droidsonroids.gif.GifDrawable A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.IntRange, \{from=0, to=2147483647\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

