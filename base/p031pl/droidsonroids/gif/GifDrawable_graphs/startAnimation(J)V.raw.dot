digraph "CFG forpl.droidsonroids.gif.GifDrawable.startAnimation(J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mIsRenderingTriggeredOnDraw boolean \l0x0002: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IPUT  (r1 I:long), (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mNextFrameRenderTime long \l0x0008: IGET  (r5 I:pl.droidsonroids.gif.InvalidationHandler) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mInvalidationHandler pl.droidsonroids.gif.InvalidationHandler \l0x000a: CONST  (r6 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x000b: INVOKE  \l  (r5 I:pl.droidsonroids.gif.InvalidationHandler)\l  (r6 I:int)\l  (r1 I:long)\l pl.droidsonroids.gif.InvalidationHandler.sendEmptyMessageAtTime(int, long):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: INVOKE  (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.cancelPendingRenderTask():void type: DIRECT \l0x0012: IGET  (r0 I:java.util.concurrent.ScheduledThreadPoolExecutor) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mExecutor java.util.concurrent.ScheduledThreadPoolExecutor \l0x0014: IGET  (r3 I:pl.droidsonroids.gif.RenderTask) = (r4 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.mRenderTask pl.droidsonroids.gif.RenderTask \l0x0016: INVOKE  (r5 I:long) = (r5 I:long), (r1 I:long) java.lang.Math.max(long, long):long type: STATIC \l0x001a: SGET  (r1 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.MILLISECONDS java.util.concurrent.TimeUnit \l0x001c: INVOKE  (r5 I:java.util.concurrent.ScheduledFuture) = \l  (r0 I:java.util.concurrent.ScheduledThreadPoolExecutor)\l  (r3 I:java.lang.Runnable)\l  (r5 I:long)\l  (r1 I:java.util.concurrent.TimeUnit)\l java.util.concurrent.ScheduledThreadPoolExecutor.schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit):java.util.concurrent.ScheduledFuture type: VIRTUAL \l0x0020: IPUT  \l  (r5 I:java.util.concurrent.ScheduledFuture\<?\>)\l  (r4 I:pl.droidsonroids.gif.GifDrawable)\l pl.droidsonroids.gif.GifDrawable.mRenderTaskSchedule java.util.concurrent.ScheduledFuture \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: RETURN   \l}"];
MethodNode[shape=record,label="{void pl.droidsonroids.gif.GifDrawable.startAnimation((r4 'this' I:pl.droidsonroids.gif.GifDrawable A[IMMUTABLE_TYPE, THIS]), (r5 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

