digraph "CFG forpl.droidsonroids.gif.GifTextView.onSaveInstanceState()Landroid\/os\/Parcelable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l0x0001: NEW_ARRAY  (r0 I:android.graphics.drawable.Drawable[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: android.graphics.drawable.Drawable[] \l0x0003: IGET  (r1 I:boolean) = (r4 I:pl.droidsonroids.gif.GifTextView) pl.droidsonroids.gif.GifTextView.mFreezesAnimation boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x002c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r1 I:android.graphics.drawable.Drawable[]) = (r4 I:pl.droidsonroids.gif.GifTextView) pl.droidsonroids.gif.GifTextView.getCompoundDrawables():android.graphics.drawable.Drawable[] type: VIRTUAL \l0x000b: ARRAY_LENGTH  (r2 I:int) = (r1 I:?[]) \l0x000c: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: INVOKE  \l  (r1 I:java.lang.Object)\l  (r3 I:int)\l  (r0 I:java.lang.Object)\l  (r3 I:int)\l  (r2 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0010: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0012: CONST  (r2 I:?[int, float, short, byte, char]) = (17 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IF  (r1 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:5:0x0025 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: INVOKE  (r1 I:android.graphics.drawable.Drawable[]) = (r4 I:pl.droidsonroids.gif.GifTextView) pl.droidsonroids.gif.GifTextView.getCompoundDrawablesRelative():android.graphics.drawable.Drawable[] type: VIRTUAL \l0x001a: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x001b: AGET  (r3 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x001d: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x001f: CONST  (r2 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0020: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0021: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0023: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: CONST  (r1 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0026: INVOKE  (r2 I:android.graphics.drawable.Drawable) = (r4 I:pl.droidsonroids.gif.GifTextView) pl.droidsonroids.gif.GifTextView.getBackground():android.graphics.drawable.Drawable type: VIRTUAL \l0x002a: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|0x002c: NEW_INSTANCE  (r1 I:pl.droidsonroids.gif.GifViewSavedState) =  pl.droidsonroids.gif.GifViewSavedState \l0x002e: INVOKE  (r2 I:android.os.Parcelable) = (r4 I:android.widget.TextView) android.widget.TextView.onSaveInstanceState():android.os.Parcelable type: SUPER \l0x0032: INVOKE  \l  (r1 I:pl.droidsonroids.gif.GifViewSavedState)\l  (r2 I:android.os.Parcelable)\l  (r0 I:android.graphics.drawable.Drawable[])\l pl.droidsonroids.gif.GifViewSavedState.\<init\>(android.os.Parcelable, android.graphics.drawable.Drawable[]):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|0x0035: RETURN  (r1 I:android.os.Parcelable) \l}"];
MethodNode[shape=record,label="{public android.os.Parcelable pl.droidsonroids.gif.GifTextView.onSaveInstanceState((r4 'this' I:pl.droidsonroids.gif.GifTextView A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

