digraph "CFG forpl.droidsonroids.gif.GifTextView.hideCompoundDrawables([Landroid\/graphics\/drawable\/Drawable;)V" {
subgraph cluster_Region_388218028 {
label = "R(2:0|(3:2|(1:4)(0)|5))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r5.length\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_321250319 {
label = "LOOP:0: (3:2|(1:4)(0)|5)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:5:0x000c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:5:0x000c\l|if (r2 \< r0) goto L_0x0005\l}"];
subgraph cluster_Region_109581751 {
label = "R(3:2|(1:4)(0)|5)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|r3 = r5[r2]\l}"];
subgraph cluster_IfRegion_1455847088 {
label = "IF [B:3:0x0007] THEN: R(1:4) ELSE: R(0)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r3 != null) goto L_0x0009\l}"];
subgraph cluster_Region_72867643 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|r3.setVisible(false, false)\l}"];
}
subgraph cluster_Region_1663440983 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_5 [shape=record,label="{5\:\ 0x000c|LOOP_END\lLOOP:0: B:1:0x0003\-\>B:5:0x000c\l|r2++\l}"];
}
}
}
Node_6 [shape=record,color=red,label="{6\:\ 0x000f}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000f|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000c|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x000c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void pl.droidsonroids.gif.GifTextView.hideCompoundDrawables((r4v0 'this' pl.droidsonroids.gif.GifTextView A[IMMUTABLE_TYPE, THIS]), (r5v0 android.graphics.drawable.Drawable[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_9[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_1;
Node_7 -> Node_6;
Node_8 -> Node_5;
Node_9 -> Node_5;
}

