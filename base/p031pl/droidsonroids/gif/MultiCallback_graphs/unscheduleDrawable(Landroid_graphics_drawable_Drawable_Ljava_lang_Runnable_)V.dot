digraph "CFG forpl.droidsonroids.gif.MultiCallback.unscheduleDrawable(Landroid\/graphics\/drawable\/Drawable;Ljava\/lang\/Runnable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:7:0x0022] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:7:0x0022\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|if (r0 \>= r3.mCallbacks.size()) goto L_0x0025\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|pl.droidsonroids.gif.MultiCallback$CallbackWeakReference r1 = r3.mCallbacks.get(r0)\landroid.graphics.drawable.Drawable$Callback r2 = (android.graphics.drawable.Drawable.Callback) r1.get()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|if (r2 == null) goto L_0x001d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|r2.unscheduleDrawable(r4, r5)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|r3.mCallbacks.remove(r1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:7:0x0022\l|int r0 = r0 + 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void pl.droidsonroids.gif.MultiCallback.unscheduleDrawable((r3v0 'this' pl.droidsonroids.gif.MultiCallback A[IMMUTABLE_TYPE, THIS]), (r4v0 android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.Runnable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_11;
Node_6 -> Node_10;
Node_7 -> Node_1;
Node_9 -> Node_8;
Node_10 -> Node_7;
Node_11 -> Node_7;
}

