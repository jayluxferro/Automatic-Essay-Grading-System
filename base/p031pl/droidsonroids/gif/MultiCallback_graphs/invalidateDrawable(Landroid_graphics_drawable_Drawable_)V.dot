digraph "CFG forpl.droidsonroids.gif.MultiCallback.invalidateDrawable(Landroid\/graphics\/drawable\/Drawable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:12:0x0030] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:12:0x0030\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|if (r0 \>= r3.mCallbacks.size()) goto L_0x0033\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|pl.droidsonroids.gif.MultiCallback$CallbackWeakReference r1 = r3.mCallbacks.get(r0)\landroid.graphics.drawable.Drawable$Callback r2 = (android.graphics.drawable.Drawable.Callback) r1.get()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|if (r2 == null) goto L_0x002b\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019}"];
Node_6 [shape=record,label="{6\:\ 0x001b|if (r3.mUseViewInvalidate == false) goto L_0x0027\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d}"];
Node_8 [shape=record,label="{8\:\ 0x001f|if ((r2 instanceof android.view.View) == false) goto L_0x0027\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|((android.view.View) r2).invalidate()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|r2.invalidateDrawable(r4)\l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|r3.mCallbacks.remove(r1)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:12:0x0030\l|int r0 = r0 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0030|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0030|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0030|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void pl.droidsonroids.gif.MultiCallback.invalidateDrawable((r3v0 'this' pl.droidsonroids.gif.MultiCallback A[IMMUTABLE_TYPE, THIS]), (r4v0 android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_16;
Node_10 -> Node_17;
Node_11 -> Node_15;
Node_12 -> Node_1;
Node_14 -> Node_13;
Node_15 -> Node_12;
Node_16 -> Node_12;
Node_17 -> Node_12;
}

