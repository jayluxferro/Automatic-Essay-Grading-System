digraph "CFG forpl.droidsonroids.gif.MultiCallback.\<init\>(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:java.util.concurrent.CopyOnWriteArrayList) =  java.util.concurrent.CopyOnWriteArrayList \l0x0005: INVOKE  (r0 I:java.util.concurrent.CopyOnWriteArrayList) java.util.concurrent.CopyOnWriteArrayList.\<init\>():void type: DIRECT \l0x0008: IPUT  \l  (r0 I:java.util.concurrent.CopyOnWriteArrayList\<pl.droidsonroids.gif.MultiCallback$CallbackWeakReference\>)\l  (r1 I:pl.droidsonroids.gif.MultiCallback)\l pl.droidsonroids.gif.MultiCallback.mCallbacks java.util.concurrent.CopyOnWriteArrayList \l0x000a: IPUT  (r2 I:boolean), (r1 I:pl.droidsonroids.gif.MultiCallback) pl.droidsonroids.gif.MultiCallback.mUseViewInvalidate boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: RETURN   \l}"];
MethodNode[shape=record,label="{public void pl.droidsonroids.gif.MultiCallback.\<init\>((r1 'this' I:pl.droidsonroids.gif.MultiCallback A[IMMUTABLE_TYPE, THIS]), (r2 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

