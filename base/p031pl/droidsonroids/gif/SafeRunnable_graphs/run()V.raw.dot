digraph "CFG forpl.droidsonroids.gif.SafeRunnable.run()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:pl.droidsonroids.gif.GifDrawable) = (r3 I:pl.droidsonroids.gif.SafeRunnable) pl.droidsonroids.gif.SafeRunnable.mGifDrawable pl.droidsonroids.gif.GifDrawable A[Catch:\{ Throwable \-\> 0x000c \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:pl.droidsonroids.gif.GifDrawable) pl.droidsonroids.gif.GifDrawable.isRecycled():boolean type: VIRTUAL A[Catch:\{ Throwable \-\> 0x000c \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b A[Catch:\{ Throwable \-\> 0x000c \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r3 I:pl.droidsonroids.gif.SafeRunnable) pl.droidsonroids.gif.SafeRunnable.doWork():void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x000c \}, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|ExcHandler: Throwable null\lSplitter:B:0:0x0000\l|0x000c: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: INVOKE  (r1 I:java.lang.Thread$UncaughtExceptionHandler) =  java.lang.Thread.getDefaultUncaughtExceptionHandler():java.lang.Thread$UncaughtExceptionHandler type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001a \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: INVOKE  (r2 I:java.lang.Thread) =  java.lang.Thread.currentThread():java.lang.Thread type: STATIC \l0x0017: INVOKE  \l  (r1 I:java.lang.Thread$UncaughtExceptionHandler)\l  (r2 I:java.lang.Thread)\l  (r0 I:java.lang.Throwable)\l java.lang.Thread.UncaughtExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable):void type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final void pl.droidsonroids.gif.SafeRunnable.run((r3 'this' I:pl.droidsonroids.gif.SafeRunnable A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
}

