digraph "CFG forpl.droidsonroids.gif.GifTextureView.setInputSource(Lpl\/droidsonroids\/gif\/InputSource;Lpl\/droidsonroids\/gif\/GifTextureView$PlaceholderDrawListener;)V" {
subgraph cluster_Region_223210338 {
label = "R(1:(1:(2:2|(1:4))))";
node [shape=record,color=blue];
subgraph cluster_Region_1424854312 {
label = "R(1:(2:2|(1:4)))";
node [shape=record,color=blue];
subgraph cluster_Region_239139898 {
label = "R(2:2|(1:4))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|r1.mRenderThread.dispose(r1, r3)\lr1.mInputSource = r2\lr1.mRenderThread = new p031pl.droidsonroids.gif.GifTextureView.RenderThread(r1)\l}"];
subgraph cluster_IfRegion_238561878 {
label = "IF [B:3:0x000f] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000f|if (r2 != null) goto L_0x0011\l}"];
subgraph cluster_Region_1825363464 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|r1.mRenderThread.start()\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0016|DONT_GENERATE\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0017}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0018|REMOVE\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0019|REMOVE\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001a|REMOVE\l|throw r2\l}"];
MethodNode[shape=record,label="{public synchronized void pl.droidsonroids.gif.GifTextureView.setInputSource((r1v0 'this' pl.droidsonroids.gif.GifTextureView A[IMMUTABLE_TYPE, THIS]), (r2v0 pl.droidsonroids.gif.InputSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 pl.droidsonroids.gif.GifTextureView$PlaceholderDrawListener A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[BUILD, pl.droidsonroids.gif.annotations.Beta, \{\}]\l}"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

