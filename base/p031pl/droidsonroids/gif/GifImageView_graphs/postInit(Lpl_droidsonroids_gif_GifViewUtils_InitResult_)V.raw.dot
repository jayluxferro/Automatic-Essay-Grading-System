digraph "CFG forpl.droidsonroids.gif.GifImageView.postInit(Lpl\/droidsonroids\/gif\/GifViewUtils$InitResult;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r2 I:pl.droidsonroids.gif.GifViewUtils$InitResult) pl.droidsonroids.gif.GifViewUtils.InitResult.mFreezesAnimation boolean \l0x0002: IPUT  (r0 I:boolean), (r1 I:pl.droidsonroids.gif.GifImageView) pl.droidsonroids.gif.GifImageView.mFreezesAnimation boolean \l0x0004: IGET  (r0 I:int) = (r2 I:pl.droidsonroids.gif.GifViewUtils$InitResult) pl.droidsonroids.gif.GifViewUtils.InitResult.mSourceResId int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:int) = (r2 I:pl.droidsonroids.gif.GifViewUtils$InitResult) pl.droidsonroids.gif.GifViewUtils.InitResult.mSourceResId int \l0x000a: INVOKE  (r1 I:android.widget.ImageView), (r0 I:int) android.widget.ImageView.setImageResource(int):void type: SUPER \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IGET  (r0 I:int) = (r2 I:pl.droidsonroids.gif.GifViewUtils$InitResult) pl.droidsonroids.gif.GifViewUtils.InitResult.mBackgroundResId int \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x0016 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IGET  (r2 I:int) = (r2 I:pl.droidsonroids.gif.GifViewUtils$InitResult) pl.droidsonroids.gif.GifViewUtils.InitResult.mBackgroundResId int \l0x0013: INVOKE  (r1 I:android.widget.ImageView), (r2 I:int) android.widget.ImageView.setBackgroundResource(int):void type: SUPER \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: RETURN   \l}"];
MethodNode[shape=record,label="{private void pl.droidsonroids.gif.GifImageView.postInit((r1 'this' I:pl.droidsonroids.gif.GifImageView A[IMMUTABLE_TYPE, THIS]), (r2 I:pl.droidsonroids.gif.GifViewUtils$InitResult A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
}

