digraph "CFG forpl.droidsonroids.gif.GifRenderingExecutor.\<init\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.concurrent.ThreadPoolExecutor$DiscardPolicy) =  java.util.concurrent.ThreadPoolExecutor$DiscardPolicy \l0x0002: INVOKE  \l  (r0 I:java.util.concurrent.ThreadPoolExecutor$DiscardPolicy)\l java.util.concurrent.ThreadPoolExecutor.DiscardPolicy.\<init\>():void type: DIRECT \l0x0005: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0006: INVOKE  \l  (r2 I:java.util.concurrent.ScheduledThreadPoolExecutor)\l  (r1 I:int)\l  (r0 I:java.util.concurrent.RejectedExecutionHandler)\l java.util.concurrent.ScheduledThreadPoolExecutor.\<init\>(int, java.util.concurrent.RejectedExecutionHandler):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN   \l}"];
MethodNode[shape=record,label="{private void pl.droidsonroids.gif.GifRenderingExecutor.\<init\>((r2 'this' I:pl.droidsonroids.gif.GifRenderingExecutor A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

