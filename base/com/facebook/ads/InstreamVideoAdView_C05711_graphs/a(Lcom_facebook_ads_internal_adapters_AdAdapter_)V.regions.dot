digraph "CFG forcom.facebook.ads.InstreamVideoAdView.1.a(Lcom\/facebook\/ads\/internal\/adapters\/AdAdapter;)V" {
subgraph cluster_Region_2120627676 {
label = "R(1:(1:(2:2|(1:(1:4)))))";
node [shape=record,color=blue];
subgraph cluster_Region_2146845714 {
label = "R(1:(2:2|(1:(1:4))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_656913598 {
label = "IF [B:1:0x0006] THEN: R(2:2|(1:(1:4))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (com.facebook.ads.InstreamVideoAdView.this.f122d != null) goto L_0x0009\l}"];
subgraph cluster_Region_1877692867 {
label = "R(2:2|(1:(1:4)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|boolean unused = com.facebook.ads.InstreamVideoAdView.this.f124f = true\l}"];
subgraph cluster_Region_543969591 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1844922364 {
label = "IF [B:3:0x0015] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0015|if (com.facebook.ads.InstreamVideoAdView.this.f125g != null) goto L_0x0017\l}"];
subgraph cluster_Region_2003803320 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0017|com.facebook.ads.InstreamVideoAdView.this.f125g.onAdLoaded(com.facebook.ads.InstreamVideoAdView.this)\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.facebook.ads.InstreamVideoAdView.1.a((r2v0 'this' com.facebook.ads.InstreamVideoAdView$1 A[IMMUTABLE_TYPE, THIS]), (r3v0 com.facebook.ads.internal.adapters.AdAdapter A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_7;
Node_0 -> Node_1;
}

