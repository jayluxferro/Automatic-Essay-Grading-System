digraph "CFG forcom.facebook.ads.MediaView.b(Lcom\/facebook\/ads\/NativeAd;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r0 I:java.util.List) = (r4 I:com.facebook.ads.NativeAd) com.facebook.ads.NativeAd.e():java.util.List type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: RETURN  (r0 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: INVOKE  (r0 I:java.util.List) = (r4 I:com.facebook.ads.NativeAd) com.facebook.ads.NativeAd.e():java.util.List type: VIRTUAL \l0x000d: INVOKE  (r2 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: INVOKE  (r0 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: INVOKE  (r0 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x001b: CHECK_CAST  (r0 I:com.facebook.ads.NativeAd) = (com.facebook.ads.NativeAd) (r0 I:?[OBJECT, ARRAY]) \l0x001d: INVOKE  (r0 I:com.facebook.ads.NativeAdBase$Image) = (r0 I:com.facebook.ads.NativeAd) com.facebook.ads.NativeAd.getAdCoverImage():com.facebook.ads.NativeAdBase$Image type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{private boolean com.facebook.ads.MediaView.b((r3 'this' I:com.facebook.ads.MediaView A[IMMUTABLE_TYPE, THIS]), (r4 I:com.facebook.ads.NativeAd A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_5;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_3;
Node_10 -> Node_3;
}

