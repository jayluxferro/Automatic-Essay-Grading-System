digraph "CFG forcom.facebook.ads.InstreamVideoAdView.getSaveInstanceState()Landroid\/os\/Bundle;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IGET  (r0 I:com.facebook.ads.internal.adapters.j) = (r3 I:com.facebook.ads.InstreamVideoAdView) com.facebook.ads.InstreamVideoAdView.e com.facebook.ads.internal.adapters.j \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r0 I:com.facebook.ads.internal.adapters.j) = (r3 I:com.facebook.ads.InstreamVideoAdView) com.facebook.ads.InstreamVideoAdView.e com.facebook.ads.internal.adapters.j \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: RETURN  (r0 I:android.os.Bundle) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: IGET  (r0 I:com.facebook.ads.internal.DisplayAdController) = (r3 I:com.facebook.ads.InstreamVideoAdView) com.facebook.ads.InstreamVideoAdView.d com.facebook.ads.internal.DisplayAdController \l0x000d: INVOKE  (r0 I:com.facebook.ads.internal.adapters.AdAdapter) = (r0 I:com.facebook.ads.internal.DisplayAdController) com.facebook.ads.internal.DisplayAdController.f():com.facebook.ads.internal.adapters.AdAdapter type: VIRTUAL \l0x0011: CHECK_CAST  (r0 I:com.facebook.ads.internal.adapters.s) = (com.facebook.ads.internal.adapters.s) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: INVOKE  (r2 I:android.os.Bundle) = (r0 I:com.facebook.ads.internal.adapters.s) com.facebook.ads.internal.adapters.s.g():android.os.Bundle type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001c \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: NEW_INSTANCE  (r0 I:android.os.Bundle) =  android.os.Bundle \l0x001e: INVOKE  (r0 I:android.os.Bundle) android.os.Bundle.\<init\>():void type: DIRECT \l0x0021: CONST_STR  (r1 I:java.lang.String) =  \"adapter\" \l0x0023: INVOKE  \l  (r0 I:android.os.Bundle)\l  (r1 I:java.lang.String)\l  (r2 I:android.os.Bundle)\l android.os.Bundle.putBundle(java.lang.String, android.os.Bundle):void type: VIRTUAL \l0x0026: CONST_STR  (r1 I:java.lang.String) =  \"placementID\" \l0x0028: IGET  (r2 I:java.lang.String) = (r3 I:com.facebook.ads.InstreamVideoAdView) com.facebook.ads.InstreamVideoAdView.b java.lang.String \l0x002a: INVOKE  \l  (r0 I:android.os.Bundle)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l android.os.Bundle.putString(java.lang.String, java.lang.String):void type: VIRTUAL \l0x002d: CONST_STR  (r1 I:java.lang.String) =  \"adSize\" \l0x002f: IGET  (r2 I:com.facebook.ads.AdSize) = (r3 I:com.facebook.ads.InstreamVideoAdView) com.facebook.ads.InstreamVideoAdView.c com.facebook.ads.AdSize \l0x0031: INVOKE  \l  (r0 I:android.os.Bundle)\l  (r1 I:java.lang.String)\l  (r2 I:java.io.Serializable)\l android.os.Bundle.putSerializable(java.lang.String, java.io.Serializable):void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{public android.os.Bundle com.facebook.ads.InstreamVideoAdView.getSaveInstanceState((r3 'this' I:com.facebook.ads.InstreamVideoAdView A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_6 -> Node_3;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_5;
Node_10 -> Node_5;
}

