digraph "CFG forcom.facebook.ads.NativeAdScrollView.\<init\>(Landroid\/content\/Context;Lcom\/facebook\/ads\/NativeAdsManager;Lcom\/facebook\/ads\/NativeAdScrollView$AdViewProvider;Lcom\/facebook\/ads\/NativeAdView$Type;Lcom\/facebook\/ads\/NativeAdViewAttributes;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r2 I:android.widget.LinearLayout)\l  (r3 I:android.content.Context)\l android.widget.LinearLayout.\<init\>(android.content.Context):void type: DIRECT \l0x0003: INVOKE  (r0 I:boolean) = (r4 I:com.facebook.ads.NativeAdsManager) com.facebook.ads.NativeAdsManager.isLoaded():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x000b: CONST_STR  (r1 I:java.lang.String) =  \"NativeAdsManager not loaded\" \l0x000d: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001d \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0017: CONST_STR  (r1 I:java.lang.String) =  \"Must provide a NativeAdView.Type or AdViewProvider\" \l0x0019: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r1 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: IPUT  \l  (r3 I:android.content.Context)\l  (r2 I:com.facebook.ads.NativeAdScrollView)\l com.facebook.ads.NativeAdScrollView.a android.content.Context \l0x001f: IPUT  \l  (r4 I:com.facebook.ads.NativeAdsManager)\l  (r2 I:com.facebook.ads.NativeAdScrollView)\l com.facebook.ads.NativeAdScrollView.b com.facebook.ads.NativeAdsManager \l0x0021: IPUT  \l  (r7 I:com.facebook.ads.NativeAdViewAttributes)\l  (r2 I:com.facebook.ads.NativeAdScrollView)\l com.facebook.ads.NativeAdScrollView.g com.facebook.ads.NativeAdViewAttributes \l0x0023: IPUT  \l  (r5 I:com.facebook.ads.NativeAdScrollView$AdViewProvider)\l  (r2 I:com.facebook.ads.NativeAdScrollView)\l com.facebook.ads.NativeAdScrollView.c com.facebook.ads.NativeAdScrollView$AdViewProvider \l0x0025: IPUT  \l  (r6 I:com.facebook.ads.NativeAdView$Type)\l  (r2 I:com.facebook.ads.NativeAdScrollView)\l com.facebook.ads.NativeAdScrollView.d com.facebook.ads.NativeAdView$Type \l0x0027: IPUT  (r8 I:int), (r2 I:com.facebook.ads.NativeAdScrollView) com.facebook.ads.NativeAdScrollView.e int \l0x0029: NEW_INSTANCE  (r0 I:com.facebook.ads.NativeAdScrollView$a) =  com.facebook.ads.NativeAdScrollView$a \l0x002b: INVOKE  \l  (r0 I:com.facebook.ads.NativeAdScrollView$a)\l  (r2 I:com.facebook.ads.NativeAdScrollView)\l com.facebook.ads.NativeAdScrollView.a.\<init\>(com.facebook.ads.NativeAdScrollView):void type: DIRECT \l0x002e: NEW_INSTANCE  (r1 I:com.facebook.ads.NativeAdScrollView$b) =  com.facebook.ads.NativeAdScrollView$b \l0x0030: INVOKE  \l  (r1 I:com.facebook.ads.NativeAdScrollView$b)\l  (r2 I:com.facebook.ads.NativeAdScrollView)\l  (r3 I:android.content.Context)\l com.facebook.ads.NativeAdScrollView.b.\<init\>(com.facebook.ads.NativeAdScrollView, android.content.Context):void type: DIRECT \l0x0033: IPUT  \l  (r1 I:com.facebook.ads.NativeAdScrollView$b)\l  (r2 I:com.facebook.ads.NativeAdScrollView)\l com.facebook.ads.NativeAdScrollView.f com.facebook.ads.NativeAdScrollView$b \l0x0035: IGET  (r1 I:com.facebook.ads.NativeAdScrollView$b) = (r2 I:com.facebook.ads.NativeAdScrollView) com.facebook.ads.NativeAdScrollView.f com.facebook.ads.NativeAdScrollView$b \l0x0037: INVOKE  \l  (r1 I:com.facebook.ads.NativeAdScrollView$b)\l  (r0 I:android.support.v4.view.PagerAdapter)\l com.facebook.ads.NativeAdScrollView.b.setAdapter(android.support.v4.view.PagerAdapter):void type: VIRTUAL \l0x003a: CONST  (r1 I:?[int, float, short, byte, char]) = (20 ?[int, float, short, byte, char]) \l0x003c: INVOKE  (r2 I:com.facebook.ads.NativeAdScrollView), (r1 I:int) com.facebook.ads.NativeAdScrollView.setInset(int):void type: VIRTUAL \l0x003f: INVOKE  (r0 I:com.facebook.ads.NativeAdScrollView$a) com.facebook.ads.NativeAdScrollView.a.a():void type: VIRTUAL \l0x0042: IGET  (r0 I:com.facebook.ads.NativeAdScrollView$b) = (r2 I:com.facebook.ads.NativeAdScrollView) com.facebook.ads.NativeAdScrollView.f com.facebook.ads.NativeAdScrollView$b \l0x0044: INVOKE  \l  (r2 I:com.facebook.ads.NativeAdScrollView)\l  (r0 I:android.view.View)\l com.facebook.ads.NativeAdScrollView.addView(android.view.View):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0047|0x0047: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.facebook.ads.NativeAdScrollView.\<init\>((r2 'this' I:com.facebook.ads.NativeAdScrollView A[IMMUTABLE_TYPE, THIS]), (r3 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.facebook.ads.NativeAdsManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.facebook.ads.NativeAdScrollView$AdViewProvider A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.facebook.ads.NativeAdView$Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.facebook.ads.NativeAdViewAttributes A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

