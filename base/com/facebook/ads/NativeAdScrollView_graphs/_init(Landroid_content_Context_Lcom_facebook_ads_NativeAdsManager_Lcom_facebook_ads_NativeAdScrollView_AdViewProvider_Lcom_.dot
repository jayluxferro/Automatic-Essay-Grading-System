digraph "CFG forcom.facebook.ads.NativeAdScrollView.\<init\>(Landroid\/content\/Context;Lcom\/facebook\/ads\/NativeAdsManager;Lcom\/facebook\/ads\/NativeAdScrollView$AdViewProvider;Lcom\/facebook\/ads\/NativeAdView$Type;Lcom\/facebook\/ads\/NativeAdViewAttributes;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super(r3)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r4.isLoaded() != false) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009}"];
Node_3 [shape=record,label="{3\:\ 0x0010|throw new java.lang.IllegalStateException(\"NativeAdsManager not loaded\")\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|if (r6 != null) goto L_0x001d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|if (r5 != null) goto L_0x001d\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015}"];
Node_7 [shape=record,label="{7\:\ 0x001c|throw new java.lang.IllegalArgumentException(\"Must provide a NativeAdView.Type or AdViewProvider\")\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|r2.f185a = r3\lr2.f186b = r4\lr2.f191g = r7\lr2.f187c = r5\lr2.f188d = r6\lr2.f189e = r8\lcom.facebook.ads.NativeAdScrollView$a r0 = new com.facebook.ads.NativeAdScrollView.C0587a(r2)\lr2.f190f = new com.facebook.ads.NativeAdScrollView.C0588b(r2, r3)\lr2.f190f.setAdapter(r0)\lsetInset(20)\lr0.mo10123a()\laddView(r2.f190f)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0047|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.facebook.ads.NativeAdScrollView.\<init\>((r2v0 'this' com.facebook.ads.NativeAdScrollView A[IMMUTABLE_TYPE, THIS]), (r3v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 com.facebook.ads.NativeAdsManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 com.facebook.ads.NativeAdScrollView$AdViewProvider A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 com.facebook.ads.NativeAdView$Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 com.facebook.ads.NativeAdViewAttributes A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

