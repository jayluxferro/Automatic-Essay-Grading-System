digraph "CFG forcom.facebook.ads.internal.e.e.onUpgrade(Landroid\/database\/sqlite\/SQLiteDatabase;II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0001: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r6 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: CONST_STR  (r0 I:java.lang.String) =  \"DROP TABLE IF EXISTS crashes\" \l0x0008: INVOKE  \l  (r4 I:android.database.sqlite.SQLiteDatabase)\l  (r0 I:java.lang.String)\l android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r5 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:8:0x003c \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: IF  (r6 I:?[int, byte, short, char]) \< (r0 I:?[int, byte, short, char])  \-\> B:8:0x003c \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: SGET  (r0 I:com.facebook.ads.internal.e.b) =  com.facebook.ads.internal.e.c.i com.facebook.ads.internal.e.b \l0x0012: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0014: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0017: CONST_STR  (r2 I:java.lang.String) =  \"ALTER TABLE events ADD COLUMN \" \l0x0019: INVOKE  (r1 I:java.lang.StringBuilder) = (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001d: IGET  (r2 I:java.lang.String) = (r0 I:com.facebook.ads.internal.e.b) com.facebook.ads.internal.e.b.b java.lang.String \l0x001f: INVOKE  (r1 I:java.lang.StringBuilder) = (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0023: CONST_STR  (r2 I:java.lang.String) =  \" \" \l0x0025: INVOKE  (r1 I:java.lang.StringBuilder) = (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0029: IGET  (r0 I:java.lang.String) = (r0 I:com.facebook.ads.internal.e.b) com.facebook.ads.internal.e.b.c java.lang.String \l0x002b: INVOKE  (r0 I:java.lang.StringBuilder) = (r1 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002f: CONST_STR  (r1 I:java.lang.String) =  \" DEFAULT 0\" \l0x0031: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0035: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0039: INVOKE  \l  (r4 I:android.database.sqlite.SQLiteDatabase)\l  (r0 I:java.lang.String)\l android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|0x003c: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.facebook.ads.internal.e.e.onUpgrade((r3 'this' I:com.facebook.ads.internal.e.e A[IMMUTABLE_TYPE, THIS]), (r4 I:android.database.sqlite.SQLiteDatabase A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
}

