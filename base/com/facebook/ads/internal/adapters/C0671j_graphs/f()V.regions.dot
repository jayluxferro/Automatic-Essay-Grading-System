digraph "CFG forcom.facebook.ads.internal.adapters.j.f()V" {
subgraph cluster_Region_849197410 {
label = "R(1:(1:(2:4|(1:(1:6)))))";
node [shape=record,color=blue];
subgraph cluster_Region_738081342 {
label = "R(1:(2:4|(1:(1:6))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_334314743 {
label = "IF [B:1:0x0002, B:3:0x0007] THEN: R(2:4|(1:(1:6))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3.f500a != null) goto L_0x0005\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|ADDED_TO_REGION\l|if (r3.f513o == false) goto L_0x0009\l}"];
subgraph cluster_Region_1961184023 {
label = "R(2:4|(1:(1:6)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|r3.f513o = true\lr3.f500a.mo10674a(r3.f512n, new java.util.HashMap())\l}"];
subgraph cluster_Region_728541760 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1905871577 {
label = "IF [B:5:0x001a] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001a|if (r3.f508j != null) goto L_0x001c\l}"];
subgraph cluster_Region_199875225 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001c|r3.f508j.mo9981c(r3)\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0005}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void com.facebook.ads.internal.adapters.j.f((r3v0 'this' com.facebook.ads.internal.adapters.j A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_8[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_9[style=dashed];
Node_6 -> Node_10;
Node_0 -> Node_1;
Node_2 -> Node_3;
}

