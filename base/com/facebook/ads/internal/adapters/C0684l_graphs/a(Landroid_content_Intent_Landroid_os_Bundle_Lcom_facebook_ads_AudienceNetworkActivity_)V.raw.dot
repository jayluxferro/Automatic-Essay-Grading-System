digraph "CFG forcom.facebook.ads.internal.adapters.l.a(Landroid\/content\/Intent;Landroid\/os\/Bundle;Lcom\/facebook\/ads\/AudienceNetworkActivity;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r4 I:android.app.Activity)\l  (r1 I:com.facebook.ads.internal.adapters.l)\l com.facebook.ads.internal.adapters.l.l android.app.Activity \l0x0002: SGET  (r0 I:boolean) =  com.facebook.ads.internal.adapters.l.i boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:com.facebook.ads.internal.view.a$a) = (r1 I:com.facebook.ads.internal.adapters.l) com.facebook.ads.internal.adapters.l.k com.facebook.ads.internal.view.a$a \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: NEW_INSTANCE  (r0 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x000c: INVOKE  (r0 I:java.lang.AssertionError) java.lang.AssertionError.\<init\>():void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IGET  (r0 I:com.facebook.ads.AudienceNetworkActivity$BackButtonInterceptor) = (r1 I:com.facebook.ads.internal.adapters.l) com.facebook.ads.internal.adapters.l.m com.facebook.ads.AudienceNetworkActivity$BackButtonInterceptor \l0x0012: INVOKE  \l  (r4 I:com.facebook.ads.AudienceNetworkActivity)\l  (r0 I:com.facebook.ads.AudienceNetworkActivity$BackButtonInterceptor)\l com.facebook.ads.AudienceNetworkActivity.addBackButtonInterceptor(com.facebook.ads.AudienceNetworkActivity$BackButtonInterceptor):void type: VIRTUAL \l0x0015: INVOKE  (r1 I:com.facebook.ads.internal.adapters.l) com.facebook.ads.internal.adapters.l.p():void type: DIRECT \l0x0018: IGET  (r0 I:android.app.Activity) = (r1 I:com.facebook.ads.internal.adapters.l) com.facebook.ads.internal.adapters.l.l android.app.Activity \l0x001a: INVOKE  (r0 I:android.content.res.Resources) = (r0 I:android.app.Activity) android.app.Activity.getResources():android.content.res.Resources type: VIRTUAL \l0x001e: INVOKE  (r0 I:android.content.res.Configuration) = (r0 I:android.content.res.Resources) android.content.res.Resources.getConfiguration():android.content.res.Configuration type: VIRTUAL \l0x0022: IGET  (r0 I:int) = (r0 I:android.content.res.Configuration) android.content.res.Configuration.orientation int \l0x0024: INVOKE  (r1 I:com.facebook.ads.internal.adapters.l), (r0 I:int) com.facebook.ads.internal.adapters.l.a(int):void type: DIRECT \l0x0027: INVOKE  (r0 I:boolean) = (r1 I:com.facebook.ads.internal.adapters.l) com.facebook.ads.internal.adapters.l.h():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0031 \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: INVOKE  (r1 I:com.facebook.ads.internal.adapters.l) com.facebook.ads.internal.adapters.l.e():boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: INVOKE  (r1 I:com.facebook.ads.internal.adapters.l) com.facebook.ads.internal.adapters.l.f():void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{public void com.facebook.ads.internal.adapters.l.a((r1 'this' I:com.facebook.ads.internal.adapters.l A[IMMUTABLE_TYPE, THIS]), (r2 I:android.content.Intent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.facebook.ads.AudienceNetworkActivity A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=17\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_9;
}

