digraph "CFG forcom.facebook.ads.internal.view.a.f.b.onConsoleMessage(Landroid\/webkit\/ConsoleMessage;)Z" {
subgraph cluster_Region_998278491 {
label = "R(2:0|(2:(1:10)|(2:6|7)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String java.lang.String r1 = r4.message()\l}"];
subgraph cluster_Region_1807456468 {
label = "R(2:(1:10)|(2:6|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2111929774 {
label = "IF [B:1:0x0008, B:3:0x0010, B:5:0x0018] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if (android.text.TextUtils.isEmpty(r1) == true) goto L_?\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|ADDED_TO_REGION\l|if (r4.messageLevel() != android.webkit.ConsoleMessage.MessageLevel.LOG) goto L_?\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|ADDED_TO_REGION\l|if (r3.f1570b.get() == null) goto L_?\l}"];
subgraph cluster_Region_1863541896 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
subgraph cluster_Region_42502700 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001a|((com.facebook.ads.internal.view.p033a.C0967d) r3.f1570b.get()).mo11014a(r1)\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000a}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0012}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return true\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return true\l}"];
MethodNode[shape=record,label="{public boolean com.facebook.ads.internal.view.a.f.b.onConsoleMessage((r3v0 'this' com.facebook.ads.internal.view.a.f$b A[IMMUTABLE_TYPE, THIS]), (r4v0 android.webkit.ConsoleMessage A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

