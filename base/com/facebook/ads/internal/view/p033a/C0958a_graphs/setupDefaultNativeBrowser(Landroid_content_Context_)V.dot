digraph "CFG forcom.facebook.ads.internal.view.a.a.setupDefaultNativeBrowser(Landroid\/content\/Context;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.List r0 = r5.getPackageManager().queryIntentActivities(new android.content.Intent(\"android.intent.action.VIEW\", f1526b), 65536)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|if (r0.size() != 0) goto L_0x0027\l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|r4.f1531g.setVisibility(8)\lr0 = null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|PHI: r0 \l  PHI: (r0v11 android.graphics.Bitmap) = (r0v3 android.graphics.Bitmap), (r0v10 android.graphics.Bitmap), (r0v13 android.graphics.Bitmap) binds: [B:10:0x0048, B:9:0x0041, B:2:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|r4.f1531g.setImageBitmap(r0)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x0027}"];
Node_6 [shape=record,label="{6\:\ 0x002c|if (r0.size() != 1) goto L_0x0048\l}"];
Node_7 [shape=record,label="{7\:\ 0x002e}"];
Node_8 [shape=record,label="{8\:\ 0x003f|if (\"com.android.chrome\".equals(r0.get(0).activityInfo.packageName) == false) goto L_0x0048\l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|android.graphics.Bitmap r0 = com.facebook.ads.internal.p026q.p028b.C0932c.m1777a(com.facebook.ads.internal.p026q.p028b.C0931b.BROWSER_LAUNCH_CHROME)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|android.graphics.Bitmap r0 = com.facebook.ads.internal.p026q.p028b.C0932c.m1777a(com.facebook.ads.internal.p026q.p028b.C0931b.BROWSER_LAUNCH_NATIVE)\l}"];
MethodNode[shape=record,label="{private void com.facebook.ads.internal.view.a.a.setupDefaultNativeBrowser((r4v0 'this' com.facebook.ads.internal.view.a.a A[IMMUTABLE_TYPE, THIS]), (r5v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_3;
Node_10 -> Node_3;
}

