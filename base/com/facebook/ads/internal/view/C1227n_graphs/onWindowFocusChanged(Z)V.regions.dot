digraph "CFG forcom.facebook.ads.internal.view.n.onWindowFocusChanged(Z)V" {
subgraph cluster_Region_195985083 {
label = "R(2:0|(1:(1:5)(1:6))(0))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super.onWindowFocusChanged(r2)\l}"];
subgraph cluster_IfRegion_772994110 {
label = "IF [B:1:0x0005, B:3:0x000d] THEN: R(1:(1:5)(1:6)) ELSE: R(0)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r1.f2353k != null) goto L_0x0007\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|ADDED_TO_REGION\l|if (r1.f2353k.get() != null) goto L_0x0010\l}"];
subgraph cluster_Region_321992438 {
label = "R(1:(1:5)(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1187793906 {
label = "IF [B:4:0x0010] THEN: R(1:5) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|if (r2 == true) goto L_0x0012\l}"];
subgraph cluster_Region_1055899190 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|mo10442j()\l}"];
}
subgraph cluster_Region_124063441 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|mo10441i()\l}"];
}
}
}
subgraph cluster_Region_502861389 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0007}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.facebook.ads.internal.view.n.onWindowFocusChanged((r1v0 'this' com.facebook.ads.internal.view.n A[IMMUTABLE_TYPE, THIS]), (r2v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_8[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_10;
Node_2 -> Node_3;
}

