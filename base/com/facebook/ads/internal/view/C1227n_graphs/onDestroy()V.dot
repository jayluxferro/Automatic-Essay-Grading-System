digraph "CFG forcom.facebook.ads.internal.view.n.onDestroy()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.f2351i.mo10937b()\lr4.f2350h.mo10937b()\lr4.f2349g.setToolbarListener((com.facebook.ads.internal.view.C1059f.C1066a) null)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|if (r4.f2356n == null) goto L_0x0022\l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|r4.f2356n.removeBackButtonInterceptor(r4.f2361s)\lr4.f2356n.setRequestedOrientation(r4.f2352j)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|com.facebook.ads.internal.view.b.a r0 = (com.facebook.ads.internal.view.p034b.C0977a) r4.f2353k.get()\l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|if (r0 == null) goto L_0x0031\l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|r0.removeJavascriptInterface(\"FbPlayableAd\")\l}"];
Node_6 [shape=record,label="{6\:\ 0x0031|if (r0 == null) goto L_0x0067\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033}"];
Node_8 [shape=record,label="{8\:\ 0x003d|if (android.text.TextUtils.isEmpty(r4.f2346d.mo10350g()) != false) goto L_0x0067\l}"];
Node_9 [shape=record,label="{9\:\ 0x003f|java.util.HashMap r1 = new java.util.HashMap()\lr0.getViewabilityChecker().mo10983a((java.util.Map\<java.lang.String, java.lang.String\>) r1)\lr1.put(\"touch\", com.facebook.ads.internal.p026q.p027a.C0910k.m1728a(r0.getTouchDataRecorder().mo10958e()))\lr4.f2345c.mo10683i(r4.f2346d.mo10350g(), r1)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0067|r4.f2357o = null\lr4.f2358p = null\lr4.f2356n = null\lr4.f2355m = null\l}"];
Node_11 [shape=record,label="{11\:\ 0x006f|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.facebook.ads.internal.view.n.onDestroy((r4v0 'this' com.facebook.ads.internal.view.n A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

