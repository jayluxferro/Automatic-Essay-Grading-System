digraph "CFG forcom.facebook.ads.internal.view.f.d.b.onVideoSizeChanged(Landroid\/media\/MediaPlayer;II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r2 I:android.media.MediaPlayer) android.media.MediaPlayer.getVideoWidth():int type: VIRTUAL \l0x0004: IPUT  (r0 I:int), (r1 I:com.facebook.ads.internal.view.f.d.b) com.facebook.ads.internal.view.f.d.b.m int \l0x0006: INVOKE  (r0 I:int) = (r2 I:android.media.MediaPlayer) android.media.MediaPlayer.getVideoHeight():int type: VIRTUAL \l0x000a: IPUT  (r0 I:int), (r1 I:com.facebook.ads.internal.view.f.d.b) com.facebook.ads.internal.view.f.d.b.n int \l0x000c: IGET  (r0 I:int) = (r1 I:com.facebook.ads.internal.view.f.d.b) com.facebook.ads.internal.view.f.d.b.m int \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IGET  (r0 I:int) = (r1 I:com.facebook.ads.internal.view.f.d.b) com.facebook.ads.internal.view.f.d.b.n int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: INVOKE  (r1 I:com.facebook.ads.internal.view.f.d.b) com.facebook.ads.internal.view.f.d.b.requestLayout():void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.facebook.ads.internal.view.f.d.b.onVideoSizeChanged((r1 'this' I:com.facebook.ads.internal.view.f.d.b A[IMMUTABLE_TYPE, THIS]), (r2 I:android.media.MediaPlayer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
}

