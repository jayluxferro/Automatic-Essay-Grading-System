digraph "CFG forcom.facebook.ads.internal.view.component.h.a(Ljava\/lang\/String;Ljava\/lang\/String;ZZ)V" {
subgraph cluster_Region_364253964 {
label = "R(9:0|1|(1:5)|6|(1:18)|8|(1:19)|10|(2:(2:16|33)|(3:26|(1:30)|28)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|boolean r2 = false\lint r1 = 1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|boolean r0 = !android.text.TextUtils.isEmpty(r7)\l}"];
subgraph cluster_IfRegion_1614282145 {
label = "IF [B:4:0x000f] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|if (android.text.TextUtils.isEmpty(r8) == false) goto L_0x0011\l}"];
subgraph cluster_Region_2034218675 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|r2 = true\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0012|PHI: r2 \l  PHI: (r2v1 boolean) = (r2v0 boolean), (r2v3 boolean) binds: [B:4:0x000f, B:5:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|android.widget.TextView android.widget.TextView r5 = r6.f1840d\l}"];
subgraph cluster_IfRegion_2037967660 {
label = "IF [B:7:0x0014] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0014|if (r0 == false) goto L_0x002f\l}"];
subgraph cluster_Region_941873577 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x002f|r7 = r8\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0016|PHI: r7 \l  PHI: (r7v2 java.lang.String) = (r7v0 java.lang.String), (r7v1 java.lang.String) binds: [B:7:0x0014, B:18:0x002f] A[DONT_GENERATE, DONT_INLINE]\l|r5.setText(r7)\landroid.widget.TextView android.widget.TextView r5 = r6.f1841e\l}"];
subgraph cluster_IfRegion_569324650 {
label = "IF [B:9:0x001b] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001b|if (r0 == false) goto L_0x0031\l}"];
subgraph cluster_Region_623475019 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0031|java.lang.String r8 = \"\"\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x001d|PHI: r8 \l  PHI: (r8v2 java.lang.String) = (r8v0 java.lang.String), (r8v1 java.lang.String) binds: [B:9:0x001b, B:19:0x0031] A[DONT_GENERATE, DONT_INLINE]\l|r5.setText(r8)\l}"];
subgraph cluster_Region_964392937 {
label = "R(2:(2:16|33)|(3:26|(1:30)|28))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2108993398 {
label = "IF [B:11:0x0020, B:12:0x0022] THEN: R(2:16|33) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0020|if (r0 == false) goto L_0x0024\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|ADDED_TO_REGION\l|if (r2 == false) goto L_0x0024\l}"];
subgraph cluster_Region_1719558034 {
label = "R(2:16|33)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0029|PHI: r0 \l  PHI: (r0v5 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r6.f1840d.setMaxLines(r9 ? 2 : r10 ? 4 : 3)\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
}
}
subgraph cluster_Region_2113290255 {
label = "R(3:26|(1:30)|28)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x003f|PHI: r0 \l  PHI: (r0v8 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r6.f1840d.setMaxLines(r9 ? 1 : 2)\landroid.widget.TextView android.widget.TextView r0 = r6.f1841e\l}"];
subgraph cluster_IfRegion_1085684837 {
label = "IF [B:27:0x0044] THEN: R(1:30) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0044|if (r9 == false) goto L_0x004c\l}"];
subgraph cluster_Region_1484588671 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x004c|r1 = r10 ? 3 : 2\l}"];
}
}
Node_28 [shape=record,label="{28\:\ 0x0046|PHI: r1 \l  PHI: (r1v4 int) = (r1v0 int), (r1v3 int) binds: [B:27:0x0044, B:31:0x004e] A[DONT_GENERATE, DONT_INLINE]\l|r0.setMaxLines(r1)\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000a}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000b|PHI: r0 \l  PHI: (r0v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0024}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0026}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0028}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x002d}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0034}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0036}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0038}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x003a}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x003c}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x003e}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x004a}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x004e}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0050}"];
Node_34 [shape=record,color=red,label="{34\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.facebook.ads.internal.view.component.h.a((r6v0 'this' com.facebook.ads.internal.view.component.h A[IMMUTABLE_TYPE, THIS]), (r7v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_17;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_18;
Node_18 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_19;
Node_19 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_12 -> Node_23[style=dashed];
Node_16 -> Node_33;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_32;
Node_28 -> Node_34;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_17 -> Node_3;
Node_20 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_16;
Node_22 -> Node_16;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_29;
Node_25 -> Node_26;
Node_29 -> Node_26;
Node_31 -> Node_28;
Node_32 -> Node_28;
}

