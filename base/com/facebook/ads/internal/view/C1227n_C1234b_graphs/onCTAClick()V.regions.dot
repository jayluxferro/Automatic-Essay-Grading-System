digraph "CFG forcom.facebook.ads.internal.view.n.b.onCTAClick()V" {
subgraph cluster_Region_633410402 {
label = "R(1:(1:(1:2)))";
node [shape=record,color=blue];
subgraph cluster_Region_984973332 {
label = "R(1:(1:2))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1290483012 {
label = "IF [B:1:0x000a] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|if (com.facebook.ads.internal.view.C1227n.this.f2353k.get() != null) goto L_0x000d\l}"];
subgraph cluster_Region_580465329 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000d|com.facebook.ads.internal.view.b.a com.facebook.ads.internal.view.p034b.C0977a r9 = (com.facebook.ads.internal.view.p034b.C0977a) com.facebook.ads.internal.view.C1227n.this.f2353k.get()\lcom.facebook.ads.internal.view.component.a com.facebook.ads.internal.view.component.C1013a r0 = new com.facebook.ads.internal.view.component.C1013a(com.facebook.ads.internal.view.C1227n.this.f2355m, true, false, com.facebook.ads.internal.view.p041f.p043b.C1114z.REWARDED_VIDEO_AD_CLICK.mo11301a(), com.facebook.ads.internal.view.C1227n.this.f2348f.mo10273a(), com.facebook.ads.internal.view.C1227n.this.f2345c, com.facebook.ads.internal.view.C1227n.this.f2357o, r9.getViewabilityChecker(), r9.getTouchDataRecorder())\lr0.mo11132a(com.facebook.ads.internal.view.C1227n.this.f2346d.mo10346c(), com.facebook.ads.internal.view.C1227n.this.f2346d.mo10350g(), new java.util.HashMap())\lr0.performClick()\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.facebook.ads.internal.view.n.b.onCTAClick((r10v0 'this' com.facebook.ads.internal.view.n$b A[IMMUTABLE_TYPE, THIS]))  | Annotation[RUNTIME, android.webkit.JavascriptInterface, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_0 -> Node_1;
}

