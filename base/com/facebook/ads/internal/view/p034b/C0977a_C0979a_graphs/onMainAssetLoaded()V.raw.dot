digraph "CFG forcom.facebook.ads.internal.view.b.a.a.onMainAssetLoaded()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.ref.WeakReference\<com.facebook.ads.internal.view.b.a\>) = (r3 I:com.facebook.ads.internal.view.b.a$a) com.facebook.ads.internal.view.b.a.a.b java.lang.ref.WeakReference \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:java.lang.ref.WeakReference\<java.util.concurrent.atomic.AtomicBoolean\>) = (r3 I:com.facebook.ads.internal.view.b.a$a) com.facebook.ads.internal.view.b.a.a.e java.lang.ref.WeakReference \l0x000a: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IGET  (r0 I:java.lang.ref.WeakReference\<java.util.concurrent.atomic.AtomicBoolean\>) = (r3 I:com.facebook.ads.internal.view.b.a$a) com.facebook.ads.internal.view.b.a.a.f java.lang.ref.WeakReference \l0x0012: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0019 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: IGET  (r0 I:boolean) = (r3 I:com.facebook.ads.internal.view.b.a$a) com.facebook.ads.internal.view.b.a.a.g boolean \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: IGET  (r0 I:java.lang.ref.WeakReference\<java.util.concurrent.atomic.AtomicBoolean\>) = (r3 I:com.facebook.ads.internal.view.b.a$a) com.facebook.ads.internal.view.b.a.a.f java.lang.ref.WeakReference \l0x001f: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l0x0023: CHECK_CAST  (r0 I:java.util.concurrent.atomic.AtomicBoolean) = (java.util.concurrent.atomic.AtomicBoolean) (r0 I:?[OBJECT, ARRAY]) \l0x0025: INVOKE  (r0 I:boolean) = (r0 I:java.util.concurrent.atomic.AtomicBoolean) java.util.concurrent.atomic.AtomicBoolean.get():boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: IGET  (r0 I:java.lang.ref.WeakReference\<java.util.concurrent.atomic.AtomicBoolean\>) = (r3 I:com.facebook.ads.internal.view.b.a$a) com.facebook.ads.internal.view.b.a.a.e java.lang.ref.WeakReference \l0x002d: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l0x0031: CHECK_CAST  (r0 I:java.util.concurrent.atomic.AtomicBoolean) = (java.util.concurrent.atomic.AtomicBoolean) (r0 I:?[OBJECT, ARRAY]) \l0x0033: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0034: INVOKE  \l  (r0 I:java.util.concurrent.atomic.AtomicBoolean)\l  (r1 I:boolean)\l java.util.concurrent.atomic.AtomicBoolean.set(boolean):void type: VIRTUAL \l0x0037: IGET  (r0 I:java.lang.ref.WeakReference\<com.facebook.ads.internal.view.b.a\>) = (r3 I:com.facebook.ads.internal.view.b.a$a) com.facebook.ads.internal.view.b.a.a.b java.lang.ref.WeakReference \l0x0039: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l0x003d: CHECK_CAST  (r0 I:com.facebook.ads.internal.view.b.a) = (com.facebook.ads.internal.view.b.a) (r0 I:?[OBJECT, ARRAY]) \l0x003f: INVOKE  (r0 I:boolean) = (r0 I:com.facebook.ads.internal.view.b.a) com.facebook.ads.internal.view.b.a.isShown():boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0043|0x0043: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0045|0x0045: NEW_INSTANCE  (r0 I:android.os.Handler) =  android.os.Handler \l0x0047: INVOKE  (r1 I:android.os.Looper) =  android.os.Looper.getMainLooper():android.os.Looper type: STATIC \l0x004b: INVOKE  (r0 I:android.os.Handler), (r1 I:android.os.Looper) android.os.Handler.\<init\>(android.os.Looper):void type: DIRECT \l0x004e: NEW_INSTANCE  (r1 I:com.facebook.ads.internal.view.b.a$e) =  com.facebook.ads.internal.view.b.a$e \l0x0050: IGET  (r2 I:java.lang.ref.WeakReference\<com.facebook.ads.internal.r.a\>) = (r3 I:com.facebook.ads.internal.view.b.a$a) com.facebook.ads.internal.view.b.a.a.d java.lang.ref.WeakReference \l0x0052: INVOKE  \l  (r1 I:com.facebook.ads.internal.view.b.a$e)\l  (r2 I:java.lang.ref.WeakReference)\l com.facebook.ads.internal.view.b.a.e.\<init\>(java.lang.ref.WeakReference):void type: DIRECT \l0x0055: INVOKE  (r0 I:android.os.Handler), (r1 I:java.lang.Runnable) android.os.Handler.post(java.lang.Runnable):boolean type: VIRTUAL \l}"];
MethodNode[shape=record,label="{public void com.facebook.ads.internal.view.b.a.a.onMainAssetLoaded((r3 'this' I:com.facebook.ads.internal.view.b.a$a A[IMMUTABLE_TYPE, THIS]))  | Annotation[RUNTIME, android.webkit.JavascriptInterface, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_6;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_6;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_6;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_6;
}

