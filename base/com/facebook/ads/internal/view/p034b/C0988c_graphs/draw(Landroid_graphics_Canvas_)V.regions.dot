digraph "CFG forcom.facebook.ads.internal.view.b.c.draw(Landroid\/graphics\/Canvas;)V" {
subgraph cluster_Region_932030833 {
label = "R(1:(1:(1:2)))";
node [shape=record,color=blue];
subgraph cluster_Region_1017977614 {
label = "R(1:(1:2))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_356070816 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r13.f1628j != false) goto L_0x0005\l}"];
subgraph cluster_Region_1093935799 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|int int r8 = r14.getWidth()\lint int r9 = r14.getHeight()\lr14.drawRect(0.0f, 0.0f, (float) r8, (float) r9, r13.f1619a)\landroid.text.StaticLayout android.text.StaticLayout r0 = new android.text.StaticLayout(r13.f1626h, r13.f1622d, r13.f1627i, android.text.Layout.Alignment.ALIGN_CENTER, 1.0f, 0.0f, false)\lfloat float r7 = ((float) r8) \/ 2.0f\lfloat float r10 = ((float) r9) \/ 2.0f\lfloat float r11 = ((float) r0.getWidth()) \/ 2.0f\lfloat float r12 = ((float) r0.getHeight()) \/ 2.0f\lr14.drawRect((r7 \- r11) \- 40.0f, (r10 \- r12) \- 40.0f, 40.0f + r7 + r11, 40.0f + r10 + r12, r13.f1623e)\lr14.save()\lr14.translate(r7 \- r11, r10 \- r12)\lr0.draw(r14)\lr14.restore()\lr13.f1621c.reset()\lr13.f1621c.moveTo(0.0f, 0.0f)\lr13.f1621c.lineTo((float) r8, 0.0f)\lr13.f1621c.lineTo((float) r8, (float) r9)\lr13.f1621c.lineTo(0.0f, (float) r9)\lr13.f1621c.lineTo(0.0f, 0.0f)\lr14.drawPath(r13.f1621c, r13.f1620b)\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.facebook.ads.internal.view.b.c.draw((r13v0 'this' com.facebook.ads.internal.view.b.c A[IMMUTABLE_TYPE, THIS]), (r14v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_0 -> Node_1;
}

