digraph "CFG forcom.facebook.ads.internal.view.b.a.onWindowVisibilityChanged(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:com.facebook.ads.internal.q.c.a), (r2 I:int) com.facebook.ads.internal.q.c.a.onWindowVisibilityChanged(int):void type: SUPER \l0x0003: IGET  (r0 I:java.lang.ref.WeakReference\<com.facebook.ads.internal.view.b.a$b\>) = (r1 I:com.facebook.ads.internal.view.b.a) com.facebook.ads.internal.view.b.a.b java.lang.ref.WeakReference \l0x0005: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IGET  (r0 I:java.lang.ref.WeakReference\<com.facebook.ads.internal.view.b.a$b\>) = (r1 I:com.facebook.ads.internal.view.b.a) com.facebook.ads.internal.view.b.a.b java.lang.ref.WeakReference \l0x000d: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l0x0011: CHECK_CAST  (r0 I:com.facebook.ads.internal.view.b.a$b) = (com.facebook.ads.internal.view.b.a$b) (r0 I:?[OBJECT, ARRAY]) \l0x0013: INVOKE  (r0 I:com.facebook.ads.internal.view.b.a$b), (r2 I:int) com.facebook.ads.internal.view.b.a.b.a(int):void type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IGET  (r0 I:com.facebook.ads.internal.r.a) = (r1 I:com.facebook.ads.internal.view.b.a) com.facebook.ads.internal.view.b.a.f com.facebook.ads.internal.r.a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001b \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0029 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: INVOKE  (r0 I:boolean) = (r1 I:com.facebook.ads.internal.view.b.a) com.facebook.ads.internal.view.b.a.d():boolean type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0029 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: IGET  (r0 I:com.facebook.ads.internal.r.a) = (r1 I:com.facebook.ads.internal.view.b.a) com.facebook.ads.internal.view.b.a.f com.facebook.ads.internal.r.a \l0x0025: INVOKE  (r0 I:com.facebook.ads.internal.r.a) com.facebook.ads.internal.r.a.a():void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: CONST  (r0 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001a \l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|0x002d: IGET  (r0 I:com.facebook.ads.internal.r.a) = (r1 I:com.facebook.ads.internal.view.b.a) com.facebook.ads.internal.view.b.a.f com.facebook.ads.internal.r.a \l0x002f: INVOKE  (r0 I:com.facebook.ads.internal.r.a) com.facebook.ads.internal.r.a.c():void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{protected void com.facebook.ads.internal.view.b.a.onWindowVisibilityChanged((r1 'this' I:com.facebook.ads.internal.view.b.a A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_5;
Node_10 -> Node_11;
Node_11 -> Node_5;
Node_11 -> Node_12[style=dashed];
Node_12 -> Node_5;
}

