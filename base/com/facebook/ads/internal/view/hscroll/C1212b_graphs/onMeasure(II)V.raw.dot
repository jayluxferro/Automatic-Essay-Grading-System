digraph "CFG forcom.facebook.ads.internal.view.hscroll.b.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r3 I:com.facebook.ads.internal.view.hscroll.d)\l  (r4 I:int)\l  (r5 I:int)\l com.facebook.ads.internal.view.hscroll.d.onMeasure(int, int):void type: SUPER \l0x0003: INVOKE  (r0 I:int) = (r3 I:com.facebook.ads.internal.view.hscroll.b) com.facebook.ads.internal.view.hscroll.b.getMeasuredWidth():int type: VIRTUAL \l0x0007: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0008: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1072986849(0x3ff47ae1, float:1.91) ?[int, float, short, byte, char])\l \l0x000b: ARITH  (r0 I:float) = (r0 I:float) \/ (r1 I:float) \l0x000c: INVOKE  (r0 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0010: INVOKE  (r1 I:int) = (r5 I:int) android.view.View.MeasureSpec.getMode(int):int type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[\-2147483648, 1073741824] t:[0x003b, 0x0036] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: INVOKE  (r1 I:int) = (r3 I:com.facebook.ads.internal.view.hscroll.b) com.facebook.ads.internal.view.hscroll.b.getPaddingTop():int type: VIRTUAL \l0x001b: INVOKE  (r2 I:int) = (r3 I:com.facebook.ads.internal.view.hscroll.b) com.facebook.ads.internal.view.hscroll.b.getPaddingBottom():int type: VIRTUAL \l0x001f: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x0020: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0021: INVOKE  (r0 I:int) = (r3 I:com.facebook.ads.internal.view.hscroll.b), (r0 I:int) com.facebook.ads.internal.view.hscroll.b.b(int):int type: DIRECT \l0x0025: INVOKE  (r2 I:int) = (r3 I:com.facebook.ads.internal.view.hscroll.b) com.facebook.ads.internal.view.hscroll.b.getMeasuredWidth():int type: VIRTUAL \l0x0029: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x002a: INVOKE  \l  (r3 I:com.facebook.ads.internal.view.hscroll.b)\l  (r2 I:int)\l  (r1 I:int)\l com.facebook.ads.internal.view.hscroll.b.setMeasuredDimension(int, int):void type: VIRTUAL \l0x002d: IGET  (r1 I:int) = (r3 I:com.facebook.ads.internal.view.hscroll.b) com.facebook.ads.internal.view.hscroll.b.h int \l0x002f: ARITH  (r1 I:int) = (r1 I:int) * (2 int) \l0x0031: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0032: INVOKE  (r3 I:com.facebook.ads.internal.view.hscroll.b), (r0 I:int) com.facebook.ads.internal.view.hscroll.b.setChildWidth(int):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0035|0x0035: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0036|0x0036: INVOKE  (r0 I:int) = (r5 I:int) android.view.View.MeasureSpec.getSize(int):int type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x003b|0x003b: INVOKE  (r1 I:int) = (r5 I:int) android.view.View.MeasureSpec.getSize(int):int type: STATIC \l0x003f: INVOKE  (r0 I:int) = (r1 I:int), (r0 I:int) java.lang.Math.min(int, int):int type: STATIC \l}"];
MethodNode[shape=record,label="{protected void com.facebook.ads.internal.view.hscroll.b.onMeasure((r3 'this' I:com.facebook.ads.internal.view.hscroll.b A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_4 -> Node_2;
Node_5 -> Node_2;
}

