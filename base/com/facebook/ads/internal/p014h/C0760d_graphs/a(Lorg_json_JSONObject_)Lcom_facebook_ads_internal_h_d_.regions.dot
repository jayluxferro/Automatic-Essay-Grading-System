digraph "CFG forcom.facebook.ads.internal.h.d.a(Lorg\/json\/JSONObject;)Lcom\/facebook\/ads\/internal\/h\/d;" {
subgraph cluster_Region_1093978209 {
label = "R(1:(2:(1:1)|(3:2|(1:5)|8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1305877933 {
label = "R(2:(1:1)|(3:2|(1:5)|8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2002021712 {
label = "IF [B:0:0x0000] THEN: R(1:1) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r4 == null) goto L_0x0002\l}"];
subgraph cluster_Region_86088567 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1190247488 {
label = "R(3:2|(1:5)|8)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|java.util.Iterator java.util.Iterator\<java.lang.String\> r1 = r4.keys()\ljava.util.HashMap java.util.HashMap r2 = new java.util.HashMap()\l}"];
subgraph cluster_LoopRegion_478292770 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|if (r1.hasNext() != false) goto L_0x0013\l}"];
subgraph cluster_Region_1765015215 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|LOOP_END\lLOOP:0: B:3:0x000d\-\>B:5:0x0013\l|java.lang.String java.lang.String r0 = r1.next()\lr2.put(r0, java.lang.String.valueOf(r4.opt(r0)))\l}"];
}
}
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return new com.facebook.ads.internal.p014h.C0760d(r2)\l}"];
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x000d|LOOP_START\lLOOP:0: B:3:0x000d\-\>B:5:0x0013\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0025}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0025|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static com.facebook.ads.internal.h.d com.facebook.ads.internal.h.d.a((r4v0 org.json.JSONObject A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_5 -> Node_3;
Node_3 -> Node_4;
Node_6 -> Node_8;
Node_7 -> Node_6;
}

