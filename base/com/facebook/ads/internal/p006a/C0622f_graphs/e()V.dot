digraph "CFG forcom.facebook.ads.internal.a.f.e()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = null\ljava.lang.String r0 = \"opened_deeplink\"\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (m312g() != false) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|SYNTHETIC\lSplitter:B:2:0x0009\l}"];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ Exception \-\> 0x0024 \}\lSplitter:B:2:0x0009\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|Catch:\{ Exception \-\> 0x0024 \}\l|if (m313h() == false) goto L_0x0021     \/\/ Catch:\{ Exception \-\> 0x0024 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|Catch:\{ Exception \-\> 0x0024 \}\l|java.lang.String r0 = \"opened_store_url\"     \/\/ Catch:\{ Exception \-\> 0x0024 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|PHI: r0 r1 \l  PHI: (r0v1 java.lang.String) = (r0v0 java.lang.String), (r0v0 java.lang.String), (r0v3 java.lang.String), (r0v4 java.lang.String) binds: [B:1:0x0007, B:10:0x0025, B:8:0x0021, B:5:0x000f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 com.facebook.ads.internal.a.a) = (r1v0 com.facebook.ads.internal.a.a), (r1v4 com.facebook.ads.internal.a.a), (r1v0 com.facebook.ads.internal.a.a), (r1v0 com.facebook.ads.internal.a.a) binds: [B:1:0x0007, B:10:0x0025, B:8:0x0021, B:5:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|r4.f316g.put(r0, java.lang.String.valueOf(true))\lmo10256a(r4.f316g, r1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|java.lang.String r0 = \"opened_store_fallback_url\"\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:2:0x0009\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|android.util.Log.d(f314e, \"Failed to open all options including fallback url, can't open anything\")\lcom.facebook.ads.internal.a.a r1 = com.facebook.ads.internal.p006a.C0616a.CANNOT_OPEN\l}"];
MethodNode[shape=record,label="{void com.facebook.ads.internal.a.f.e((r4v0 'this' com.facebook.ads.internal.a.f A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_6;
Node_9 -> Node_10;
Node_10 -> Node_6;
}

