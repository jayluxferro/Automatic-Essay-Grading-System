digraph "CFG forcom.facebook.ads.internal.q.a.e.a(Lorg\/xmlpull\/v1\/XmlPullParser;)I" {
subgraph cluster_Region_742191683 {
label = "R(2:(1:(3:7|(1:(2:(1:20)|(1:13)))|19))|21)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_2090495955 {
label = "LOOP:0: (1:(3:7|(1:(2:(1:20)|(1:13)))|19))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r4.next() != 1) goto L_0x0008\l}"];
subgraph cluster_Region_2012935916 {
label = "R(1:(3:7|(1:(2:(1:20)|(1:13)))|19))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1332488110 {
label = "IF [B:4:0x000d, B:6:0x0019] THEN: R(3:7|(1:(2:(1:20)|(1:13)))|19) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|ADDED_TO_REGION\l|if (r4.getEventType() == 2) goto L_0x000f\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|ADDED_TO_REGION\l|if (r4.getName().equals(\"uses\-sdk\") == true) goto L_0x001b\l}"];
subgraph cluster_Region_671998251 {
label = "R(3:7|(1:(2:(1:20)|(1:13)))|19)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001b|int r0 = 0\l}"];
subgraph cluster_LoopRegion_956916003 {
label = "LOOP:1: (1:(2:(1:20)|(1:13)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0020|if (r0 \< r4.getAttributeCount()) goto L_0x0022\l}"];
subgraph cluster_Region_76118762 {
label = "R(1:(2:(1:20)|(1:13)))";
node [shape=record,color=blue];
subgraph cluster_Region_734165343 {
label = "R(2:(1:20)|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1003693293 {
label = "IF [B:11:0x002c] THEN: R(1:20) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002c|if (r4.getAttributeName(r0).equals(\"minSdkVersion\") == true) goto L_0x002e\l}"];
subgraph cluster_Region_2089848325 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return java.lang.Integer.parseInt(r4.getAttributeValue(r0))\l}"];
}
}
subgraph cluster_Region_280250319 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0037|LOOP_END\lLOOP:1: B:8:0x001c\-\>B:13:0x0037\l|r0++\l}"];
}
}
}
}
Node_19 [shape=record,label="{19\:\ 0x0001|SYNTHETIC\l|continue\l}"];
}
}
}
}
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return 0\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|LOOP_START\lLOOP:0: B:1:0x0001\-\>B:14:0x0001\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0008}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000f}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001c|LOOP_START\lPHI: r0 \l  PHI: (r0v5 int) = (r0v4 int), (r0v7 int) binds: [B:7:0x001b, B:13:0x0037] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:8:0x001c\-\>B:13:0x0037\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0022}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x002e}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0001|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0001\-\>B:14:0x0001\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0036|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x002e|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0001|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0001|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static int com.facebook.ads.internal.q.a.e.a((r4v0 org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.VisibleForTesting, \{otherwise=2\}]\l}"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_2 -> Node_15[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_17[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_18[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_19[style=dashed];
Node_11 -> Node_13[style=dashed];
Node_11 -> Node_16;
Node_13 -> Node_8;
Node_19 -> Node_14;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_20;
Node_14 -> Node_1;
Node_15 -> Node_21;
Node_16 -> Node_12;
Node_17 -> Node_14;
Node_18 -> Node_14;
}

