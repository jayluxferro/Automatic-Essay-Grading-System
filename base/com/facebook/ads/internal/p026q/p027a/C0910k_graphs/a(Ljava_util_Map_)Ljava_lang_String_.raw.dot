digraph "CFG forcom.facebook.ads.internal.q.a.k.a(Ljava\/util\/Map;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r2 I:org.json.JSONObject) =  org.json.JSONObject \l0x0002: INVOKE  (r2 I:org.json.JSONObject) org.json.JSONObject.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r0 I:java.util.Set) = (r4 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x000b: INVOKE  (r3 I:java.util.Iterator) = (r0 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: INVOKE  (r0 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0019: CHECK_CAST  (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|SYNTHETIC\lSplitter:B:6:0x001b\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x001b\l|0x001b: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE A[Catch:\{ JSONException \-\> 0x0029 \}, TRY_ENTER]\l0x001f: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ JSONException \-\> 0x0029 \}]\l0x0021: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE A[Catch:\{ JSONException \-\> 0x0029 \}]\l0x0025: INVOKE  \l  (r2 I:org.json.JSONObject)\l  (r1 I:java.lang.String)\l  (r0 I:java.lang.Object)\l org.json.JSONObject.put(java.lang.String, java.lang.Object):org.json.JSONObject type: VIRTUAL A[Catch:\{ JSONException \-\> 0x0029 \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|ExcHandler: JSONException null\lSplitter:B:6:0x001b\l|0x0029: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: INVOKE  (r0 I:org.json.JSONException) org.json.JSONException.printStackTrace():void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: INVOKE  (r0 I:java.lang.String) = (r2 I:org.json.JSONObject) org.json.JSONObject.toString():java.lang.String type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|0x0032: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static java.lang.String com.facebook.ads.internal.q.a.k.a((r4 I:java.util.Map\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Map, \<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;), Ljava\/lang\/String;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9;
Node_7 -> Node_9;
Node_7 -> Node_3;
Node_9 -> Node_10;
Node_10 -> Node_3;
Node_11 -> Node_12;
}

