digraph "CFG forcom.facebook.ads.internal.q.a.z.a(Ljava\/util\/Map;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r5 == null) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r5.isEmpty() == false) goto L_0x0012\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|android.util.Log.v(f1399a, \"Invalid Window info in window interactive check, assuming is not a Lockscreen.\")\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|java.lang.String r0 = r5.get(\"wfdkg\")\ljava.lang.String r1 = r5.get(\"wfswl\")\ljava.lang.String r2 = r5.get(\"kgr\")\l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|if (r0 == null) goto L_0x004a\l}"];
Node_7 [shape=record,label="{7\:\ 0x002c}"];
Node_8 [shape=record,label="{8\:\ 0x0032|if (r0.equals(\"1\") == false) goto L_0x004a\l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|if (r1 == null) goto L_0x004a\l}"];
Node_10 [shape=record,label="{10\:\ 0x0036}"];
Node_11 [shape=record,label="{11\:\ 0x003c|if (r1.equals(\"1\") == false) goto L_0x004a\l}"];
Node_12 [shape=record,label="{12\:\ 0x003e|if (r2 == null) goto L_0x004a\l}"];
Node_13 [shape=record,label="{13\:\ 0x0040}"];
Node_14 [shape=record,label="{14\:\ 0x0046|if (r2.equals(\"true\") == false) goto L_0x004a\l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|SYNTHETIC\lRETURN\l|return true\l}"];
Node_16 [shape=record,label="{16\:\ 0x004a}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static boolean com.facebook.ads.internal.q.a.z.a((r5v0 java.util.Map\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Map, \<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_17;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_16;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_16 -> Node_18;
}

