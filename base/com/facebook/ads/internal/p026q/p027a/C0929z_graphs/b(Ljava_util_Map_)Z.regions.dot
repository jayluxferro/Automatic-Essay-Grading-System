digraph "CFG forcom.facebook.ads.internal.q.a.z.b(Ljava\/util\/Map;)Z" {
subgraph cluster_Region_720240783 {
label = "R(1:(2:(2:4|19)|(2:5|(2:(1:20)|(1:(2:(1:21)|(2:12|22)))))))";
node [shape=record,color=blue];
subgraph cluster_Region_491853486 {
label = "R(2:(2:4|19)|(2:5|(2:(1:20)|(1:(2:(1:21)|(2:12|22))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_81295493 {
label = "IF [B:1:0x0001, B:3:0x0007] THEN: R(2:4|19) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r4 == null) goto L_0x0009\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|ADDED_TO_REGION\l|if (r4.isEmpty() == true) goto L_0x0009\l}"];
subgraph cluster_Region_523714468 {
label = "R(2:4|19)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|android.util.Log.v(f1399a, \"Invalid Window info in window interactive check, assuming not obstructed by Keyguard.\")\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1895961030 {
label = "R(2:5|(2:(1:20)|(1:(2:(1:21)|(2:12|22)))))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|java.lang.String java.lang.String r0 = r4.get(\"wfdkg\")\ljava.lang.String java.lang.String r1 = r4.get(\"wfswl\")\l}"];
subgraph cluster_Region_1166519989 {
label = "R(2:(1:20)|(1:(2:(1:21)|(2:12|22))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1799055595 {
label = "IF [B:6:0x0021, B:8:0x0029] THEN: R(1:20) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0021|if (r0 != null) goto L_0x0023\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|ADDED_TO_REGION\l|if (r0.equals(\"1\") != false) goto L_?\l}"];
subgraph cluster_Region_1349919949 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_397238806 {
label = "R(1:(2:(1:21)|(2:12|22)))";
node [shape=record,color=blue];
subgraph cluster_Region_834774360 {
label = "R(2:(1:21)|(2:12|22))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_112427618 {
label = "IF [B:9:0x002b, B:11:0x0033] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002b|if (r1 != null) goto L_0x002d\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|ADDED_TO_REGION\l|if (r1.equals(\"1\") != false) goto L_?\l}"];
subgraph cluster_Region_1229674451 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_642562415 {
label = "R(2:12|22)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0035|java.lang.String java.lang.String r0 = r4.get(\"kgr\")\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return r0 != null && r0.equals(\"true\")\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0003}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0023}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002d}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x003d}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x003f}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0045|REMOVE\lADDED_TO_REGION\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0047}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0048|PHI: r0 \l  PHI: (r0v9 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x004a}"];
MethodNode[shape=record,label="{public static boolean com.facebook.ads.internal.q.a.z.b((r4v0 java.util.Map\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Map, \<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_19;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_20;
Node_9 -> Node_10;
Node_9 -> Node_12[style=dashed];
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_13;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_22;
Node_18 -> Node_17;
}

