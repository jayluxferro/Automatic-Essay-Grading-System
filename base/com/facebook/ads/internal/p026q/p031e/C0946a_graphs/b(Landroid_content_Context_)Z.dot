digraph "CFG forcom.facebook.ads.internal.q.e.a.b(Landroid\/content\/Context;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r4 != null) goto L_0x000c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|android.util.Log.v(f1464a, \"Invalid context in screen interactive check, assuming interactive.\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c}"];
Node_4 [shape=record,label="{4\:\ 0x000e|SYNTHETIC\lSplitter:B:4:0x000e\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ Exception \-\> 0x0024 \}\lSplitter:B:4:0x000e\l|android.os.PowerManager r0 = (android.os.PowerManager) r4.getSystemService(\"power\")     \/\/ Catch:\{ Exception \-\> 0x0024 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|Catch:\{ Exception \-\> 0x0024 \}\l|if (android.os.Build.VERSION.SDK_INT \< 20) goto L_0x001f     \/\/ Catch:\{ Exception \-\> 0x0024 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|Catch:\{ Exception \-\> 0x0024 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|Catch:\{ Exception \-\> 0x0024 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|ExcHandler: Exception (r0v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:4:0x000e\l|java.lang.Exception r0 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|android.util.Log.e(f1464a, \"Exception in screen interactive check, assuming interactive.\", r0)\lcom.facebook.ads.internal.p026q.p030d.C0944a.m1821a(r4, \"risky\", com.facebook.ads.internal.p026q.p030d.C0945b.f1459q, r0)\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return r0.isInteractive()\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return r0.isScreenOn()\l}"];
MethodNode[shape=record,label="{public static boolean com.facebook.ads.internal.q.e.a.b((r4v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_12;
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_13;
}

