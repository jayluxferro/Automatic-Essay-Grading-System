digraph "CFG forcom.facebook.ads.internal.q.b.c.a(Ljava\/lang\/String;II)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:android.graphics.BitmapFactory$Options) =  android.graphics.BitmapFactory$Options \l0x0002: INVOKE  (r0 I:android.graphics.BitmapFactory$Options) android.graphics.BitmapFactory.Options.\<init\>():void type: DIRECT \l0x0005: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0006: IPUT  \l  (r1 I:boolean)\l  (r0 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.Options.inJustDecodeBounds boolean \l0x0008: INVOKE  \l  (r2 I:java.lang.String)\l  (r0 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.decodeFile(java.lang.String, android.graphics.BitmapFactory$Options):android.graphics.Bitmap type: STATIC \l0x000b: INVOKE  (r1 I:int) = \l  (r0 I:android.graphics.BitmapFactory$Options)\l  (r4 I:int)\l  (r3 I:int)\l com.facebook.ads.internal.q.b.c.a(android.graphics.BitmapFactory$Options, int, int):int type: STATIC \l0x000f: IPUT  (r1 I:int), (r0 I:android.graphics.BitmapFactory$Options) android.graphics.BitmapFactory.Options.inSampleSize int \l0x0011: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: IPUT  \l  (r1 I:boolean)\l  (r0 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.Options.inJustDecodeBounds boolean \l0x0014: INVOKE  (r0 I:android.graphics.Bitmap) = \l  (r2 I:java.lang.String)\l  (r0 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.decodeFile(java.lang.String, android.graphics.BitmapFactory$Options):android.graphics.Bitmap type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: RETURN  (r0 I:android.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{public static android.graphics.Bitmap com.facebook.ads.internal.q.b.c.a((r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.WorkerThread, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

