digraph "CFG forcom.facebook.ads.internal.q.c.g.a(Lcom\/facebook\/ads\/internal\/q\/c\/g;Landroid\/content\/Context;Landroid\/net\/Uri;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (m1815a(r5.getScheme()) == false) goto L_0x0029\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a}"];
Node_3 [shape=record,label="{3\:\ 0x0014|if (r5.getHost().equals(\"play.google.com\") == false) goto L_0x0029\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|r0 = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|PHI: r0 \l  PHI: (r0v3 boolean) = (r0v2 boolean), (r0v7 boolean) binds: [B:10:0x0029, B:4:0x0016] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|if (r5.getScheme().equals(\"market\") != false) goto L_0x0025\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|if (r0 == false) goto L_0x0030\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|SYNTHETIC\lSplitter:B:8:0x0025\l}"];
Node_9 [shape=record,label="{9\:\ ?|Catch:\{ c \-\> 0x002b \}\lSplitter:B:8:0x0025\l|r3.mo10979a(r4, r5)     \/\/ Catch:\{ c \-\> 0x002b \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|r0 = false\l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|ExcHandler: c (e com.facebook.ads.internal.q.c.c)\lSplitter:B:8:0x0025\l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|r3.mo10980a(r4, r5, r6)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|r3.mo10980a(r4, r5, r6)\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public static void com.facebook.ads.internal.q.c.g.a((r3v0 com.facebook.ads.internal.q.c.g A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 android.net.Uri A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_8 -> Node_11;
Node_9 -> Node_11;
Node_9 -> Node_14;
Node_10 -> Node_5;
Node_11 -> Node_12;
Node_12 -> Node_15;
Node_13 -> Node_16;
}

