digraph "CFG forcom.facebook.ads.internal.q.c.g.a(Landroid\/content\/Context;Landroid\/net\/Uri;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r2 I:com.facebook.ads.internal.q.c.g)\l  (r3 I:android.content.Context)\l com.facebook.ads.internal.q.c.g.a(android.content.Context):boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: NEW_INSTANCE  (r0 I:com.facebook.ads.internal.q.c.c) =  com.facebook.ads.internal.q.c.c \l0x0008: INVOKE  (r0 I:com.facebook.ads.internal.q.c.c) com.facebook.ads.internal.q.c.c.\<init\>():void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: INVOKE  (r0 I:android.content.Intent) = \l  (r2 I:com.facebook.ads.internal.q.c.g)\l  (r3 I:android.content.Context)\l  (r4 I:android.net.Uri)\l com.facebook.ads.internal.q.c.g.c(android.content.Context, android.net.Uri):android.content.Intent type: DIRECT \l0x0010: CONST_STR  (r1 I:java.lang.String) =  \"com.android.vending\" \l0x0012: INVOKE  (r0 I:android.content.Intent), (r1 I:java.lang.String) android.content.Intent.setPackage(java.lang.String):android.content.Intent type: VIRTUAL \l0x0015: INVOKE  \l  (r3 I:android.content.Context)\l  (r0 I:android.content.Intent)\l android.content.Context.startActivity(android.content.Intent):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.facebook.ads.internal.q.c.g.a((r2 'this' I:com.facebook.ads.internal.q.c.g A[IMMUTABLE_TYPE, THIS]), (r3 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.net.Uri A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

