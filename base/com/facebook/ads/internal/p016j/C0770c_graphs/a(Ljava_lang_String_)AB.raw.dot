digraph "CFG forcom.facebook.ads.internal.j.c.a(Ljava\/lang\/String;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: NEW_INSTANCE  (r1 I:java.io.ByteArrayOutputStream) =  java.io.ByteArrayOutputStream A[Catch:\{ Exception \-\> 0x0020 \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:int) = (r3 I:java.lang.String) java.lang.String.length():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x0020 \}]\l0x0006: INVOKE  (r1 I:java.io.ByteArrayOutputStream), (r0 I:int) java.io.ByteArrayOutputStream.\<init\>(int):void type: DIRECT A[Catch:\{ Exception \-\> 0x0020 \}]\l0x0009: NEW_INSTANCE  (r0 I:java.util.zip.GZIPOutputStream) =  java.util.zip.GZIPOutputStream A[Catch:\{ Exception \-\> 0x0020 \}]\l0x000b: INVOKE  \l  (r0 I:java.util.zip.GZIPOutputStream)\l  (r1 I:java.io.OutputStream)\l java.util.zip.GZIPOutputStream.\<init\>(java.io.OutputStream):void type: DIRECT A[Catch:\{ Exception \-\> 0x0020 \}]\l0x000e: INVOKE  (r2 I:byte[]) = (r3 I:java.lang.String) java.lang.String.getBytes():byte[] type: VIRTUAL A[Catch:\{ Exception \-\> 0x0020 \}]\l0x0012: INVOKE  (r0 I:java.util.zip.GZIPOutputStream), (r2 I:byte[]) java.util.zip.GZIPOutputStream.write(byte[]):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x0020 \}]\l0x0015: INVOKE  (r0 I:java.util.zip.GZIPOutputStream) java.util.zip.GZIPOutputStream.close():void type: VIRTUAL A[Catch:\{ Exception \-\> 0x0020 \}]\l0x0018: INVOKE  (r0 I:byte[]) = (r1 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.toByteArray():byte[] type: VIRTUAL A[Catch:\{ Exception \-\> 0x0020 \}]\l0x001c: INVOKE  (r1 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.close():void type: VIRTUAL A[Catch:\{ Exception \-\> 0x0020 \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x001f|0x001f: RETURN  (r0 I:byte[]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|ExcHandler: Exception null\lSplitter:B:0:0x0000\l|0x0020: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: CONST_STR  (r1 I:java.lang.String) =  \"Error compressing data\" \l0x0023: INVOKE  (r1 I:com.facebook.ads.internal.j.a) = (r0 I:java.lang.Throwable), (r1 I:java.lang.String) com.facebook.ads.internal.j.a.a(java.lang.Throwable, java.lang.String):com.facebook.ads.internal.j.a type: STATIC \l0x0027: INVOKE  (r1 I:com.facebook.ads.internal.j.a) com.facebook.ads.internal.j.b.a(com.facebook.ads.internal.j.a):void type: STATIC \l0x002a: INVOKE  (r0 I:java.lang.Exception) java.lang.Exception.printStackTrace():void type: VIRTUAL \l0x002d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002e: NEW_ARRAY  (r0 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l}"];
MethodNode[shape=record,label="{public static byte[] com.facebook.ads.internal.j.c.a((r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_2;
}

