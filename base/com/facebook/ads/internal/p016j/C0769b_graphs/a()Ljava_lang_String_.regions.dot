digraph "CFG forcom.facebook.ads.internal.j.b.a()Ljava\/lang\/String;" {
subgraph cluster_Region_1726710410 {
label = "R(2:0|2)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
subgraph cluster_SynchronizedRegion_816737687 {
label = "Synchronized:R(2:1|(1:(2:(1:22)|(1:7))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
subgraph cluster_Region_1570971622 {
label = "R(1:(2:(1:22)|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_1850886896 {
label = "R(2:(1:22)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1419213410 {
label = "IF [B:4:0x0009] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|if (f927a.isEmpty() == true) goto L_0x000b\l}"];
subgraph cluster_Region_387348402 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return \"\"\l}"];
}
}
subgraph cluster_Region_722219481 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000f|java.util.ArrayList java.util.ArrayList r0 = new java.util.ArrayList(f927a)     \/\/ Catch:\{  \}\lf927a.clear()\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,color=red,label="{3\:\ ?}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000b}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000d|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x000d: MONITOR_EXIT  \l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001b|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x001b: MONITOR_EXIT  \l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001c|org.json.JSONArray r1 = new org.json.JSONArray()\ljava.util.Iterator r2 = r0.iterator()\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0025|LOOP_START\lLOOP:0: B:10:0x0025\-\>B:12:0x002b\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0029|if (r2.hasNext() == false) goto L_0x003c\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x002b|LOOP_END\lLOOP:0: B:10:0x0025\-\>B:12:0x002b\l|r1.put(((com.facebook.ads.internal.p016j.C0766a) r2.next()).mo10632a())\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0039|LOOP_START\lREMOVE\lLOOP:1: B:13:0x0039\-\>B:19:0x0039\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x003a|SYNTHETIC\lREMOVE\lSplitter:B:14:0x003a\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|REMOVE\lSplitter:B:14:0x003a\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x003b|REMOVE\l|throw r0\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x003c}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x003c|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0039|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:1: B:13:0x0039\-\>B:19:0x0039\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x003b|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0039|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_23 [shape=record,color=red,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return r1.toString()     \/\/ Catch:\{  \}\l}"];
MethodNode[shape=record,label="{public static java.lang.String com.facebook.ads.internal.j.b.a()  | INCONSISTENT_CODE\lCode restructure failed: missing block: B:9:0x001c, code lost:\l    r1 = new org.json.JSONArray();\l    r2 = r0.iterator();\l\lCode restructure failed: missing block: B:11:0x0029, code lost:\l    if (r2.hasNext() == false) goto L_0x003c;\l\lCode restructure failed: missing block: B:12:0x002b, code lost:\l    r1.put(((com.facebook.ads.internal.p016j.C0766a) r2.next()).mo10632a());\l\lCode restructure failed: missing block: B:23:?, code lost:\l    return r1.toString();\l\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_22;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_10;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_19;
Node_15 -> Node_20;
Node_15 -> Node_21;
Node_17 -> Node_23;
Node_18 -> Node_17;
Node_19 -> Node_13;
Node_20 -> Node_16;
Node_21 -> Node_19;
}

