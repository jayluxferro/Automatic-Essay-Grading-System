digraph "CFG forcom.facebook.ads.internal.DisplayAdController.c.onReceive(Landroid\/content\/Context;Landroid\/content\/Intent;)V" {
subgraph cluster_Region_1688124182 {
label = "R(2:0|(1:2)(1:(1:5)(0)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String java.lang.String r0 = r4.getAction()\l}"];
subgraph cluster_IfRegion_755170166 {
label = "IF [B:1:0x000a] THEN: R(1:2) ELSE: R(1:(1:5)(0))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|if (\"android.intent.action.SCREEN_OFF\".equals(r0) == true) goto L_0x000c\l}"];
subgraph cluster_Region_504944592 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000c|com.facebook.ads.internal.DisplayAdController.this.m245m()\l}"];
}
subgraph cluster_Region_209527353 {
label = "R(1:(1:5)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1270072065 {
label = "IF [B:4:0x0018] THEN: R(1:5) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0018|if (\"android.intent.action.SCREEN_ON\".equals(r0) == true) goto L_0x001a\l}"];
subgraph cluster_Region_1485020160 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001a|com.facebook.ads.internal.DisplayAdController.this.m244l()\l}"];
}
subgraph cluster_Region_1580155857 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0012}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.facebook.ads.internal.DisplayAdController.c.onReceive((r2v0 'this' com.facebook.ads.internal.DisplayAdController$c A[IMMUTABLE_TYPE, THIS]), (r3v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.content.Intent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_5 -> Node_8;
Node_3 -> Node_4;
}

