digraph "CFG forcom.facebook.ads.internal.p.a.a.c(Ljava\/net\/HttpURLConnection;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Map\<java.lang.String, java.lang.String\>) = (r3 I:com.facebook.ads.internal.p.a.a) com.facebook.ads.internal.p.a.a.i java.util.Map \l0x0002: INVOKE  (r0 I:java.util.Set) = (r0 I:java.util.Map) java.util.Map.keySet():java.util.Set type: INTERFACE \l0x0006: INVOKE  (r2 I:java.util.Iterator) = (r0 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: INVOKE  (r0 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0022 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: INVOKE  (r0 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0014: CHECK_CAST  (r0 I:java.lang.String) = (java.lang.String) (r0 I:?[OBJECT, ARRAY]) \l0x0016: IGET  (r1 I:java.util.Map\<java.lang.String, java.lang.String\>) = (r3 I:com.facebook.ads.internal.p.a.a) com.facebook.ads.internal.p.a.a.i java.util.Map \l0x0018: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.Map), (r0 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x001c: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) \l0x001e: INVOKE  \l  (r4 I:java.net.HttpURLConnection)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l java.net.HttpURLConnection.setRequestProperty(java.lang.String, java.lang.String):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.facebook.ads.internal.p.a.a.c((r3 'this' I:com.facebook.ads.internal.p.a.a A[IMMUTABLE_TYPE, THIS]), (r4 I:java.net.HttpURLConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

