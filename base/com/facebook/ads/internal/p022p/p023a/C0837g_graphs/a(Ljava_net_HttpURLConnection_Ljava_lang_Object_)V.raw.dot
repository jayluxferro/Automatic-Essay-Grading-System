digraph "CFG forcom.facebook.ads.internal.p.a.g.a(Ljava\/net\/HttpURLConnection;Ljava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"=== HTTP Request ===\" \l0x0002: INVOKE  \l  (r2 I:com.facebook.ads.internal.p.a.g)\l  (r0 I:java.lang.String)\l com.facebook.ads.internal.p.a.g.a(java.lang.String):void type: VIRTUAL \l0x0005: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0007: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000a: INVOKE  (r1 I:java.lang.String) = (r3 I:java.net.HttpURLConnection) java.net.HttpURLConnection.getRequestMethod():java.lang.String type: VIRTUAL \l0x000e: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0012: CONST_STR  (r1 I:java.lang.String) =  \" \" \l0x0014: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0018: INVOKE  (r1 I:java.net.URL) = (r3 I:java.net.HttpURLConnection) java.net.HttpURLConnection.getURL():java.net.URL type: VIRTUAL \l0x001c: INVOKE  (r1 I:java.lang.String) = (r1 I:java.net.URL) java.net.URL.toString():java.lang.String type: VIRTUAL \l0x0020: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0024: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0028: INVOKE  \l  (r2 I:com.facebook.ads.internal.p.a.g)\l  (r0 I:java.lang.String)\l com.facebook.ads.internal.p.a.g.a(java.lang.String):void type: VIRTUAL \l0x002b: INSTANCE_OF  (r0 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.String \l}"];
Node_1 [shape=record,label="{1\:\ 0x002d|0x002d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0047 \l}"];
Node_2 [shape=record,label="{2\:\ 0x002f|0x002f: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0031: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0034: CONST_STR  (r1 I:java.lang.String) =  \"Content: \" \l0x0036: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003a: CHECK_CAST  (r4 I:java.lang.String) = (java.lang.String) (r4 I:?[OBJECT, ARRAY]) \l0x003c: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0040: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0044: INVOKE  \l  (r2 I:com.facebook.ads.internal.p.a.g)\l  (r0 I:java.lang.String)\l com.facebook.ads.internal.p.a.g.a(java.lang.String):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0047|0x0047: INVOKE  (r0 I:java.util.Map) = (r3 I:java.net.HttpURLConnection) java.net.HttpURLConnection.getRequestProperties():java.util.Map type: VIRTUAL \l0x004b: INVOKE  \l  (r2 I:com.facebook.ads.internal.p.a.g)\l  (r0 I:java.util.Map)\l com.facebook.ads.internal.p.a.g.a(java.util.Map):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x004e|0x004e: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.facebook.ads.internal.p.a.g.a((r2 'this' I:com.facebook.ads.internal.p.a.g A[IMMUTABLE_TYPE, THIS]), (r3 I:java.net.HttpURLConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

