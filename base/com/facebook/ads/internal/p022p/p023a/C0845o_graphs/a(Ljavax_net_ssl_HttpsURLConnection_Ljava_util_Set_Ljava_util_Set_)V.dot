digraph "CFG forcom.facebook.ads.internal.p.a.o.a(Ljavax\/net\/ssl\/HttpsURLConnection;Ljava\/util\/Set;Ljava\/util\/Set;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT != 15) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (\"4.0.3\".equals(android.os.Build.VERSION.RELEASE) == false) goto L_0x0011\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|SYNTHETIC\lSplitter:B:4:0x0011\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ Exception \-\> 0x0052 \}\lSplitter:B:4:0x0011\l|java.security.cert.Certificate[] r2 = r6.getServerCertificates()     \/\/ Catch:\{ Exception \-\> 0x0052 \}\lint r3 = r2.length     \/\/ Catch:\{ Exception \-\> 0x0052 \}\lr1 = 0     \/\/ Catch:\{ Exception \-\> 0x0052 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|LOOP_START\lCatch:\{ Exception \-\> 0x0052 \}\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v4 int) binds: [B:5:?, B:15:0x0046] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0018\-\>B:15:0x0046\l|if (r1 \>= r3) goto L_0x004a     \/\/ Catch:\{ Exception \-\> 0x0052 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|Catch:\{ Exception \-\> 0x0052 \}\l|java.security.cert.X509Certificate r0 = (java.security.cert.X509Certificate) r2[r1]     \/\/ Catch:\{ Exception \-\> 0x0052 \}\ljava.lang.String r4 = m1527a(r0.getEncoded(), \"SHA\-1\")     \/\/ Catch:\{ Exception \-\> 0x0052 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|Catch:\{ Exception \-\> 0x0052 \}\l|if (r7 == null) goto L_0x0030     \/\/ Catch:\{ Exception \-\> 0x0052 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|Catch:\{ Exception \-\> 0x0052 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|Catch:\{ Exception \-\> 0x0052 \}\l|if (r7.contains(r4) != false) goto L_0x0010     \/\/ Catch:\{ Exception \-\> 0x0052 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|Catch:\{ Exception \-\> 0x0052 \}\l|java.lang.String r0 = m1527a(r0.getPublicKey().getEncoded(), \"SHA\-1\")     \/\/ Catch:\{ Exception \-\> 0x0052 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x003e|Catch:\{ Exception \-\> 0x0052 \}\l|if (r8 == null) goto L_0x0046     \/\/ Catch:\{ Exception \-\> 0x0052 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|Catch:\{ Exception \-\> 0x0052 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0044|Catch:\{ Exception \-\> 0x0052 \}\l|if (r8.contains(r0) != false) goto L_0x0010     \/\/ Catch:\{ Exception \-\> 0x0052 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0046|LOOP_END\lCatch:\{ Exception \-\> 0x0052 \}\lLOOP:0: B:6:0x0018\-\>B:15:0x0046\l|r1 = r1 + 1     \/\/ Catch:\{ Exception \-\> 0x0052 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x004a|Catch:\{ Exception \-\> 0x0052 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0051|Catch:\{ Exception \-\> 0x0052 \}\l|throw new java.security.cert.CertificateException(\"Unable to find valid certificate or public key.\")     \/\/ Catch:\{ Exception \-\> 0x0052 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x0052|ExcHandler: Exception (r0v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:4:0x0011\l|java.lang.Exception r0 = move\-exception\l}"];
Node_19 [shape=record,label="{19\:\ 0x0053|throw r0\l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x004a|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0046|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0046|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public static void com.facebook.ads.internal.p.a.o.a((r6v0 javax.net.ssl.HttpsURLConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.util.Set\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.util.Set\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljavax\/net\/ssl\/HttpsURLConnection;, Ljava\/util\/Set, \<, Ljava\/lang\/String;, \>;, Ljava\/util\/Set, \<, Ljava\/lang\/String;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_25[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_18;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_21;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_22;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_23;
Node_13 -> Node_14;
Node_14 -> Node_20;
Node_14 -> Node_24[style=dashed];
Node_15 -> Node_6;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_26;
Node_21 -> Node_16;
Node_22 -> Node_27;
Node_23 -> Node_15;
Node_24 -> Node_15;
}

