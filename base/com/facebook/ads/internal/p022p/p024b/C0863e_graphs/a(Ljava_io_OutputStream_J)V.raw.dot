digraph "CFG forcom.facebook.ads.internal.p.b.e.a(Ljava\/io\/OutputStream;J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (8192(0x2000, float:1.14794E\-41) ?[int, float, short, byte, char])\l \l0x0002: NEW_ARRAY  (r0 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l0x0005: INVOKE  (r1 I:int) = \l  (r4 I:com.facebook.ads.internal.p.b.e)\l  (r0 I:byte[])\l  (r6 I:long)\l  (r1 I:int)\l com.facebook.ads.internal.p.b.e.a(byte[], long, int):int type: VIRTUAL \l0x0009: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0013 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: INVOKE  \l  (r5 I:java.io.OutputStream)\l  (r0 I:byte[])\l  (r2 I:int)\l  (r1 I:int)\l java.io.OutputStream.write(byte[], int, int):void type: VIRTUAL \l0x0010: CAST  (r2 I:long) = (long) (r1 I:int) \l0x0011: ARITH  (r6 I:long) = (r6 I:long) + (r2 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: INVOKE  (r5 I:java.io.OutputStream) java.io.OutputStream.flush():void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.facebook.ads.internal.p.b.e.a((r4 'this' I:com.facebook.ads.internal.p.b.e A[IMMUTABLE_TYPE, THIS]), (r5 I:java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

