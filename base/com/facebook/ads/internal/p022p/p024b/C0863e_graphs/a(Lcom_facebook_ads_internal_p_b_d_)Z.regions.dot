digraph "CFG forcom.facebook.ads.internal.p.b.e.a(Lcom\/facebook\/ads\/internal\/p\/b\/d;)Z" {
subgraph cluster_Region_604854929 {
label = "R(5:0|1|3|(1:(1:12))|11)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r3 = r8.f1196a.mo10904a()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|boolean r0 = r3 \> 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|PHI: r0 \l  PHI: (r0v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r4 = r8.f1197b.mo10872a()\l}"];
subgraph cluster_IfRegion_906120583 {
label = "IF [B:4:0x0011, B:6:0x0015] THEN: R(1:(1:12)) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|ADDED_TO_REGION\l|if (r0 == true) goto L_0x0013\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|ADDED_TO_REGION\l|if (r9.f1195c == true) goto L_0x0017\l}"];
subgraph cluster_Region_430096527 {
label = "R(1:(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_679062056 {
label = "IF [B:8:0x0023] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0023|if (((float) r9.f1194b) \> ((((float) r3) * 0.2f) + ((float) r4))) goto L_?\l}"];
subgraph cluster_Region_1563313727 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
}
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000a}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0013}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0017}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0025}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0027}"];
MethodNode[shape=record,label="{private boolean com.facebook.ads.internal.p.b.e.a((r8v0 'this' com.facebook.ads.internal.p.b.e A[IMMUTABLE_TYPE, THIS]), (r9v0 com.facebook.ads.internal.p.b.d A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_11;
Node_10 -> Node_3;
}

