digraph "CFG forcom.facebook.ads.internal.p.b.a.e.a(Ljava\/util\/List;)V" {
subgraph cluster_Region_481132398 {
label = "R(2:0|(2:1|(3:3|(2:5|(1:7)(1:9))(0)|8)(1:10)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|long long r2 = m1570b(r9)\lint int r0 = r9.size()\ljava.util.Iterator java.util.Iterator\<java.io.File\> r4 = r9.iterator()\l}"];
subgraph cluster_LoopRegion_925247179 {
label = "LOOP:0: (2:1|(3:3|(2:5|(1:7)(1:9))(0)|8)(1:10))";
node [shape=record,color=blue];
subgraph cluster_Region_97278407 {
label = "R(2:1|(3:3|(2:5|(1:7)(1:9))(0)|8)(1:10))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000d|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v1 int) = (r0v0 int), (r0v5 int) binds: [B:0:0x0000, B:8:0x004b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 long) = (r2v0 long), (r2v2 long) binds: [B:0:0x0000, B:8:0x004b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000d\-\>B:8:0x004b\l|int r1 = r0\l}"];
subgraph cluster_IfRegion_518361530 {
label = "IF [B:2:0x0011] THEN: R(3:3|(2:5|(1:7)(1:9))(0)|8) ELSE: R(1:10)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0011|if (r4.hasNext() == true) goto L_0x0013\l}"];
subgraph cluster_Region_1928138491 {
label = "R(3:3|(2:5|(1:7)(1:9))(0)|8)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0013|java.io.File java.io.File r0 = r4.next()\l}"];
subgraph cluster_IfRegion_1838535937 {
label = "IF [B:4:0x001d] THEN: R(2:5|(1:7)(1:9)) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001d|if (mo10882a(r0, r2, r1) == false) goto L_0x001f\l}"];
subgraph cluster_Region_1570468538 {
label = "R(2:5|(1:7)(1:9))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001f|long long r6 = r0.length()\l}"];
subgraph cluster_IfRegion_1192965412 {
label = "IF [B:6:0x0027] THEN: R(1:7) ELSE: R(1:9)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0027|if (r0.delete() == true) goto L_0x0029\l}"];
subgraph cluster_Region_56822334 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0029|r1\-\-\lr2 \-= r6\landroid.util.Log.i(\"ProxyCache\", \"Cache file \" + r0 + \" is deleted because it exceeds cache limit\")\l}"];
}
subgraph cluster_Region_545152609 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x004d|android.util.Log.e(\"ProxyCache\", \"Error deleting file \" + r0 + \" for trimming cache\")\l}"];
}
}
}
subgraph cluster_Region_1891025158 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_8 [shape=record,label="{8\:\ 0x004b|LOOP_END\lPHI: r1 r2 \l  PHI: (r1v1 int) = (r1v0 int), (r1v0 int), (r1v2 int) binds: [B:14:0x004b, B:13:0x004b, B:12:0x004b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 long) = (r2v1 long), (r2v1 long), (r2v3 long) binds: [B:14:0x004b, B:13:0x004b, B:12:0x004b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000d\-\>B:8:0x004b\l|r0 = r1\l}"];
}
subgraph cluster_Region_106536587 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x006d|RETURN\l|return\l}"];
}
}
}
}
}
Node_11 [shape=record,color=red,label="{11\:\ 0x006d|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x004b|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x004b|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x004b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.facebook.ads.internal.p.b.a.e.a((r8v0 'this' com.facebook.ads.internal.p.b.a.e A[IMMUTABLE_TYPE, THIS]), (r9v0 java.util.List\<java.io.File\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List, \<, Ljava\/io\/File;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_11[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_14[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_7 -> Node_12;
Node_9 -> Node_13;
Node_8 -> Node_1;
Node_11 -> Node_10;
Node_12 -> Node_8;
Node_13 -> Node_8;
Node_14 -> Node_8;
}

