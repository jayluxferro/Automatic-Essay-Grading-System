digraph "CFG forcom.facebook.ads.internal.p.b.h.a(II)Ljava\/net\/HttpURLConnection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IGET  (r0 I:java.lang.String) = (r7 I:com.facebook.ads.internal.p.b.h) com.facebook.ads.internal.p.b.h.a java.lang.String \l0x0003: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0004: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: CONST_STR  (r4 I:java.lang.String) =  \"ProxyCache\" \l0x0007: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0009: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000c: CONST_STR  (r5 I:java.lang.String) =  \"Open connection \" \l0x000e: INVOKE  (r5 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: IF  (r8 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:22:0x00a9 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0016: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0019: CONST_STR  (r6 I:java.lang.String) =  \" with offset \" \l0x001b: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001f: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r8 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0023: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0027|0x0027: INVOKE  (r0 I:java.lang.StringBuilder) = (r5 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002b: CONST_STR  (r5 I:java.lang.String) =  \" to \" \l0x002d: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0031: INVOKE  (r0 I:java.lang.StringBuilder) = (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0035: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0039: INVOKE  (r4 I:java.lang.String), (r0 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l0x003c: NEW_INSTANCE  (r0 I:java.net.URL) =  java.net.URL \l0x003e: INVOKE  (r0 I:java.net.URL), (r1 I:java.lang.String) java.net.URL.\<init\>(java.lang.String):void type: DIRECT \l0x0041: INVOKE  (r0 I:java.net.URLConnection) = (r0 I:java.net.URL) java.net.URL.openConnection():java.net.URLConnection type: VIRTUAL \l0x0045: CHECK_CAST  (r0 I:java.net.HttpURLConnection) = (java.net.HttpURLConnection) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0047|0x0047: IF  (r8 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x0067 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0049|0x0049: CONST_STR  (r4 I:java.lang.String) =  \"Range\" \l0x004b: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004d: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0050: CONST_STR  (r6 I:java.lang.String) =  \"bytes=\" \l0x0052: INVOKE  (r5 I:java.lang.StringBuilder) = (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0056: INVOKE  (r5 I:java.lang.StringBuilder) = (r5 I:java.lang.StringBuilder), (r8 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x005a: CONST_STR  (r6 I:java.lang.String) =  \"\-\" \l0x005c: INVOKE  (r5 I:java.lang.StringBuilder) = (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0060: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0064: INVOKE  \l  (r0 I:java.net.HttpURLConnection)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l java.net.HttpURLConnection.setRequestProperty(java.lang.String, java.lang.String):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0067|0x0067: IF  (r9 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:9:0x006f \l}"];
Node_8 [shape=record,label="{8\:\ 0x0069|0x0069: INVOKE  (r0 I:java.net.HttpURLConnection), (r9 I:int) java.net.HttpURLConnection.setConnectTimeout(int):void type: VIRTUAL \l0x006c: INVOKE  (r0 I:java.net.HttpURLConnection), (r9 I:int) java.net.HttpURLConnection.setReadTimeout(int):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x006f|0x006f: INVOKE  (r4 I:int) = (r0 I:java.net.HttpURLConnection) java.net.HttpURLConnection.getResponseCode():int type: VIRTUAL \l0x0073: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (301(0x12d, float:4.22E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0075|0x0075: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x007f \l}"];
Node_11 [shape=record,label="{11\:\ 0x0077|0x0077: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (302(0x12e, float:4.23E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0079|0x0079: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x007f \l}"];
Node_13 [shape=record,label="{13\:\ 0x007b|0x007b: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (303(0x12f, float:4.25E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x007d|0x007d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x00ad \l}"];
Node_15 [shape=record,label="{15\:\ 0x007f|0x007f: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0080|0x0080: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x008d \l}"];
Node_17 [shape=record,label="{17\:\ 0x0082|0x0082: CONST_STR  (r1 I:java.lang.String) =  \"Location\" \l0x0084: INVOKE  (r1 I:java.lang.String) = (r0 I:java.net.HttpURLConnection), (r1 I:java.lang.String) java.net.HttpURLConnection.getHeaderField(java.lang.String):java.lang.String type: VIRTUAL \l0x0088: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x008a: INVOKE  (r0 I:java.net.HttpURLConnection) java.net.HttpURLConnection.disconnect():void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x008d|0x008d: CONST  (r5 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x008e|0x008e: IF  (r2 I:?[int, byte, short, char]) \<= (r5 I:?[int, byte, short, char])  \-\> B:24:0x00af \l}"];
Node_20 [shape=record,label="{20\:\ 0x0090|0x0090: NEW_INSTANCE  (r0 I:com.facebook.ads.internal.p.b.l) =  com.facebook.ads.internal.p.b.l \l0x0092: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0094: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0097: CONST_STR  (r3 I:java.lang.String) =  \"Too many redirects: \" \l0x0099: INVOKE  (r1 I:java.lang.StringBuilder) = (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009d: INVOKE  (r1 I:java.lang.StringBuilder) = (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x00a1: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00a5: INVOKE  \l  (r0 I:com.facebook.ads.internal.p.b.l)\l  (r1 I:java.lang.String)\l com.facebook.ads.internal.p.b.l.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x00a8|0x00a8: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_22 [shape=record,label="{22\:\ 0x00a9|0x00a9: CONST_STR  (r0 I:java.lang.String) =  \"\" \l}"];
Node_23 [shape=record,label="{23\:\ 0x00ad|0x00ad: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x00af|0x00af: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0005 \l}"];
Node_25 [shape=record,label="{25\:\ 0x00b1|0x00b1: RETURN  (r0 I:java.net.HttpURLConnection) \l}"];
MethodNode[shape=record,label="{private java.net.HttpURLConnection com.facebook.ads.internal.p.b.h.a((r7 'this' I:com.facebook.ads.internal.p.b.h A[IMMUTABLE_TYPE, THIS]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_22;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_23;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_22 -> Node_4;
Node_23 -> Node_16;
Node_24 -> Node_1;
Node_24 -> Node_25[style=dashed];
}

