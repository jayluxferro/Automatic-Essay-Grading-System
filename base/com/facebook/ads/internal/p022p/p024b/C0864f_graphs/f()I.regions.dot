digraph "CFG forcom.facebook.ads.internal.p.b.f.f()I" {
subgraph cluster_Region_2022307602 {
label = "R(3:0|2|9) | DECL_VAR: int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
subgraph cluster_SynchronizedRegion_1904296190 {
label = "Synchronized:R(2:1|(2:4|(1:7)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
subgraph cluster_Region_938714319 {
label = "R(2:4|(1:7))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ ?|java.util.Iterator r3 = r4.f1201c.values().iterator()\lr1 = 0\l}"];
subgraph cluster_LoopRegion_902865296 {
label = "LOOP:0: (1:7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0013|if (r3.hasNext() != false) goto L_0x0015\l}"];
subgraph cluster_Region_1576249306 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0015|LOOP_END\lLOOP:0: B:5:0x000f\-\>B:7:0x0015\l|r1 = r0.mo10902b() + r1\l}"];
}
}
}
}
Node_9 [shape=record,label="{9\:\ 0x0023|RETURN\l|return r1\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0003}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0004|SYNTHETIC\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000f|LOOP_START\lPHI: r1 \l  PHI: (r1v3 int) = (r1v2 int), (r1v4 int) binds: [B:4:?, B:7:0x0015] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x000f\-\>B:7:0x0015\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0022|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x0022: MONITOR_EXIT  \l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0024|REMOVE\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0025|REMOVE\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0026|REMOVE\l|throw r0\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0022|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int com.facebook.ads.internal.p.b.f.f((r4v0 'this' com.facebook.ads.internal.p.b.f A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_13[style=dashed];
Node_7 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_10;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_8;
}

