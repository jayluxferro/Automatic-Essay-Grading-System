digraph "CFG forcom.facebook.ads.internal.p.b.f.f()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r2 I:java.lang.Object) = (r4 I:com.facebook.ads.internal.p.b.f) com.facebook.ads.internal.p.b.f.a java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|SYNTHETIC\lSplitter:B:3:0x0004\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0004\l|0x0004: IGET  (r1 I:java.util.Map\<java.lang.String, com.facebook.ads.internal.p.b.g\>) = (r4 I:com.facebook.ads.internal.p.b.f) com.facebook.ads.internal.p.b.f.c java.util.Map A[Catch:\{ all \-\> 0x0024 \}, TRY_ENTER]\l0x0006: INVOKE  (r1 I:java.util.Collection) = (r1 I:java.util.Map) java.util.Map.values():java.util.Collection type: INTERFACE A[Catch:\{ all \-\> 0x0024 \}]\l0x000a: INVOKE  (r3 I:java.util.Iterator) = (r1 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ all \-\> 0x0024 \}]\l0x000e: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: INVOKE  (r0 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0022 A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0024 \}]\l0x0019: CHECK_CAST  (r0 I:com.facebook.ads.internal.p.b.g) = (com.facebook.ads.internal.p.b.g) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0024 \}]\l0x001b: INVOKE  (r0 I:int) = (r0 I:com.facebook.ads.internal.p.b.g) com.facebook.ads.internal.p.b.g.b():int type: VIRTUAL A[Catch:\{ all \-\> 0x0024 \}]\l0x001f: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) A[Catch:\{ all \-\> 0x0024 \}]\l0x0020: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0024 \}]\l0x0021: GOTO  \-\> 0x000f A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: RETURN  (r1 I:int) A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|ExcHandler: all null\lSplitter:B:3:0x0004\l|0x0024: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0024 \}, TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|0x0026: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private int com.facebook.ads.internal.p.b.f.f((r4 'this' I:com.facebook.ads.internal.p.b.f A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

