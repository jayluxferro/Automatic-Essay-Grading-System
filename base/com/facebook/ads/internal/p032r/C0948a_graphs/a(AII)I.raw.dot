digraph "CFG forcom.facebook.ads.internal.r.a.a([II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: ARRAY_LENGTH  (r1 I:int) = (r5 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:10:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: ARITH  (r0 I:int) = (r1 I:int) \- (r2 I:int) \l0x0006: ARITH  (r0 I:int) = (r0 I:int) \/ (2 int) \l0x0008: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l0x0009: AGET  (r3 I:?[int, float]) = (r5 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: RETURN  (r0 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: AGET  (r3 I:?[int, float]) = (r5 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IF  (r3 I:?[int, byte, short, char]) \<= (r6 I:?[int, byte, short, char])  \-\> B:9:0x0016 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|0x0016: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0018: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001a: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{private static int com.facebook.ads.internal.r.a.a((r5 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_8;
Node_10 -> Node_4;
}

