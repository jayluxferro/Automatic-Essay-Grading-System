digraph "CFG forcom.facebook.ads.internal.r.a.a(Ljava\/util\/Vector;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r6 I:int) = (r13 I:java.util.Vector) java.util.Vector.size():int type: VIRTUAL \l0x0005: ARITH  (r0 I:int) = (r6 I:int) * (2 int) \l0x0007: NEW_ARRAY  (r7 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0009: ARITH  (r0 I:int) = (r6 I:int) * (2 int) \l0x000b: NEW_ARRAY  (r8 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x000d: ARITH  (r0 I:int) = (r6 I:int) * (2 int) \l0x000f: ARITH  (r1 I:int) = (r6 I:int) * (2 int) \l0x0011: FILLED_NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]), (r1 I:int A[IMMUTABLE_TYPE]) elemType: int \l0x0015: SGET  (r1 I:java.lang.Class) =  java.lang.Boolean.TYPE java.lang.Class \l0x0017: INVOKE  (r0 I:java.lang.Object) = (r1 I:java.lang.Class), (r0 I:int[]) java.lang.reflect.Array.newInstance(java.lang.Class, int[]):java.lang.Object type: STATIC \l0x001b: CHECK_CAST  (r0 I:boolean[][]) = (boolean[][]) (r0 I:?[OBJECT, ARRAY]) \l0x001d: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001e: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001f: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0020|0x0020: IF  (r3 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:3:0x0044 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0022|0x0022: INVOKE  (r1 I:java.lang.Object) = (r13 I:java.util.Vector), (r3 I:int) java.util.Vector.elementAt(int):java.lang.Object type: VIRTUAL \l0x0026: CHECK_CAST  (r1 I:android.graphics.Rect) = (android.graphics.Rect) (r1 I:?[OBJECT, ARRAY]) \l0x0028: ARITH  (r9 I:int) = (r5 I:int) + (1 int) \l0x002a: IGET  (r10 I:int) = (r1 I:android.graphics.Rect) android.graphics.Rect.left int \l0x002c: APUT  \l  (r7 I:?[int, float][])\l  (r5 I:?[int, short, byte, char])\l  (r10 I:?[int, float])\l \l0x002e: ARITH  (r10 I:int) = (r4 I:int) + (1 int) \l0x0030: IGET  (r5 I:int) = (r1 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x0032: APUT  \l  (r8 I:?[int, float][])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:?[int, float])\l \l0x0034: ARITH  (r5 I:int) = (r9 I:int) + (1 int) \l0x0036: IGET  (r4 I:int) = (r1 I:android.graphics.Rect) android.graphics.Rect.right int \l0x0038: APUT  \l  (r7 I:?[int, float][])\l  (r9 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x003a: ARITH  (r4 I:int) = (r10 I:int) + (1 int) \l0x003c: IGET  (r1 I:int) = (r1 I:android.graphics.Rect) android.graphics.Rect.top int \l0x003e: APUT  \l  (r8 I:?[int, float][])\l  (r10 I:?[int, short, byte, char])\l  (r1 I:?[int, float])\l \l0x0040: ARITH  (r1 I:int) = (r3 I:int) + (1 int) \l0x0042: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0044|0x0044: INVOKE  (r7 I:int[]) java.util.Arrays.sort(int[]):void type: STATIC \l0x0047: INVOKE  (r8 I:int[]) java.util.Arrays.sort(int[]):void type: STATIC \l0x004a: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x004b|0x004b: IF  (r4 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:12:0x0084 \l}"];
Node_5 [shape=record,label="{5\:\ 0x004d|0x004d: INVOKE  (r1 I:java.lang.Object) = (r13 I:java.util.Vector), (r4 I:int) java.util.Vector.elementAt(int):java.lang.Object type: VIRTUAL \l0x0051: CHECK_CAST  (r1 I:android.graphics.Rect) = (android.graphics.Rect) (r1 I:?[OBJECT, ARRAY]) \l0x0053: IGET  (r3 I:int) = (r1 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0055: INVOKE  (r3 I:int) = (r7 I:int[]), (r3 I:int) com.facebook.ads.internal.r.a.a(int[], int):int type: STATIC \l0x0059: IGET  (r5 I:int) = (r1 I:android.graphics.Rect) android.graphics.Rect.right int \l0x005b: INVOKE  (r5 I:int) = (r7 I:int[]), (r5 I:int) com.facebook.ads.internal.r.a.a(int[], int):int type: STATIC \l0x005f: IGET  (r9 I:int) = (r1 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0061: INVOKE  (r9 I:int) = (r8 I:int[]), (r9 I:int) com.facebook.ads.internal.r.a.a(int[], int):int type: STATIC \l0x0065: IGET  (r1 I:int) = (r1 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x0067: INVOKE  (r10 I:int) = (r8 I:int[]), (r1 I:int) com.facebook.ads.internal.r.a.a(int[], int):int type: STATIC \l0x006b: ARITH  (r1 I:int) = (r3 I:int) + (1 int) \l0x006d: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x006e|0x006e: IF  (r3 I:?[int, byte, short, char]) \> (r5 I:?[int, byte, short, char])  \-\> B:11:0x0080 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0070|0x0070: ARITH  (r1 I:int) = (r9 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0072|0x0072: IF  (r1 I:?[int, byte, short, char]) \> (r10 I:?[int, byte, short, char])  \-\> B:10:0x007c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0074|0x0074: AGET  (r11 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0076: CONST  (r12 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0077: APUT  \l  (r11 I:boolean[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l  (r12 I:boolean A[IMMUTABLE_TYPE])\l \l0x0079: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x007c|0x007c: ARITH  (r1 I:int) = (r3 I:int) + (1 int) \l0x007e: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0080|0x0080: ARITH  (r1 I:int) = (r4 I:int) + (1 int) \l0x0082: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0084|0x0084: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0085: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0086|0x0086: ARITH  (r3 I:int) = (r6 I:int) * (2 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0088|0x0088: IF  (r5 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:24:0x00b1 \l}"];
Node_15 [shape=record,label="{15\:\ 0x008a|0x008a: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x008b: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x008c|0x008c: ARITH  (r1 I:int) = (r6 I:int) * (2 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x008e|0x008e: IF  (r3 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:23:0x00ac \l}"];
Node_18 [shape=record,label="{18\:\ 0x0090|0x0090: AGET  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r5 I:?[int, short, byte, char]) \l0x0092: AGET  (r1 I:boolean A[IMMUTABLE_TYPE]) = \l  (r1 I:boolean[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x0094|0x0094: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x00aa \l}"];
Node_20 [shape=record,label="{20\:\ 0x0096|0x0096: AGET  (r1 I:?[int, float]) = (r7 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l0x0098: ARITH  (r9 I:int) = (r5 I:int) + (\-1 int) \l0x009a: AGET  (r9 I:?[int, float]) = (r7 I:?[int, float][]), (r9 I:?[int, short, byte, char]) \l0x009c: ARITH  (r1 I:int) = (r1 I:int) \- (r9 I:int) \l0x009d: AGET  (r9 I:?[int, float]) = (r8 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x009f: ARITH  (r10 I:int) = (r3 I:int) + (\-1 int) \l0x00a1: AGET  (r10 I:?[int, float]) = (r8 I:?[int, float][]), (r10 I:?[int, short, byte, char]) \l0x00a3: ARITH  (r9 I:int) = (r9 I:int) \- (r10 I:int) \l0x00a4: ARITH  (r1 I:int) = (r1 I:int) * (r9 I:int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x00a5|0x00a5: ARITH  (r4 I:int) = (r4 I:int) + (r1 I:int) \l0x00a6: ARITH  (r1 I:int) = (r3 I:int) + (1 int) \l0x00a8: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x00aa|0x00aa: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x00ac|0x00ac: ARITH  (r1 I:int) = (r5 I:int) + (1 int) \l0x00ae: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00af: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x00b1|0x00b1: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{private static int com.facebook.ads.internal.r.a.a((r13 I:java.util.Vector\<android.graphics.Rect\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Vector, \<, Landroid\/graphics\/Rect;, \>;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_8;
Node_10 -> Node_6;
Node_11 -> Node_4;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_24;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_16;
Node_22 -> Node_21;
Node_23 -> Node_13;
}

