digraph "CFG forcom.facebook.ads.internal.m.g.a(Lorg\/json\/JSONArray;Lorg\/json\/JSONArray;I)Lorg\/json\/JSONArray;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r19 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0003 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: RETURN  (r20 I:org.json.JSONArray) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0008 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: MOVE  (r20 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: INVOKE  (r15 I:int) = (r19 I:org.json.JSONArray) org.json.JSONArray.length():int type: VIRTUAL \l0x000c: INVOKE  (r16 I:int) = (r20 I:org.json.JSONArray) org.json.JSONArray.length():int type: VIRTUAL \l0x0010: NEW_INSTANCE  (r9 I:org.json.JSONArray) =  org.json.JSONArray \l0x0012: INVOKE  (r9 I:org.json.JSONArray) org.json.JSONArray.\<init\>():void type: DIRECT \l0x0015: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0016: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0017: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0018: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: CONST  (r6 I:?[long, double]) = \l  (9218868437227405311(0x7fefffffffffffff, double:1.7976931348623157E308) ?[long, double])\l \l0x001e: CONST  (r2 I:?[long, double]) = \l  (9218868437227405311(0x7fefffffffffffff, double:1.7976931348623157E308) ?[long, double])\l \l0x0023: MOVE  (r12 I:?[long, double]) = (r2 I:?[long, double]) \l0x0024: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0025: MOVE  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0026: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|0x0027: IF  (r8 I:?[int, byte, short, char]) \< (r15 I:?[int, byte, short, char])  \-\> B:8:0x002d \l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|0x0029: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: IF  (r14 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:36:0x009b \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: IF  (r21 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:36:0x009b \l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: IF  (r8 I:?[int, byte, short, char]) \>= (r15 I:?[int, byte, short, char])  \-\> B:43:0x00b0 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x00b0 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|SYNTHETIC\lSplitter:B:12:0x0035\l}"];
Node_13 [shape=record,label="{13\:\ ?|Splitter:B:12:0x0035\l|0x0035: INVOKE  (r4 I:org.json.JSONObject) = (r0 I:org.json.JSONArray), (r8 I:int) org.json.JSONArray.getJSONObject(int):org.json.JSONObject type: VIRTUAL A[Catch:\{ JSONException \-\> 0x007f \}, TRY_ENTER]\l0x0039: CONST_STR  (r2 I:java.lang.String) =  \"time\" A[Catch:\{ JSONException \-\> 0x007f \}]\l0x003b: INVOKE  (r2 I:double) = (r4 I:org.json.JSONObject), (r2 I:java.lang.String) org.json.JSONObject.getDouble(java.lang.String):double type: VIRTUAL A[Catch:\{ JSONException \-\> 0x007f \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|0x003f: ARITH  (r5 I:int) = (r8 I:int) + (1 int) \l0x0041: MOVE  (r6 I:?[long, double]) = (r2 I:?[long, double]) \l0x0042: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0043: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0044|0x0044: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0046|0x0046: IF  (r14 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:42:0x00ac \l}"];
Node_18 [shape=record,label="{18\:\ 0x0048|0x0048: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x00ac \l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|0x004a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x004c|SYNTHETIC\lSplitter:B:20:0x004c\l}"];
Node_21 [shape=record,label="{21\:\ ?|Splitter:B:20:0x004c\l|0x004c: INVOKE  (r4 I:org.json.JSONObject) = (r0 I:org.json.JSONArray), (r14 I:int) org.json.JSONArray.getJSONObject(int):org.json.JSONObject type: VIRTUAL A[Catch:\{ JSONException \-\> 0x0087 \}, TRY_ENTER]\l0x0050: CONST_STR  (r2 I:java.lang.String) =  \"time\" A[Catch:\{ JSONException \-\> 0x0087 \}]\l0x0052: INVOKE  (r2 I:double) = (r4 I:org.json.JSONObject), (r2 I:java.lang.String) org.json.JSONObject.getDouble(java.lang.String):double type: VIRTUAL A[Catch:\{ JSONException \-\> 0x0087 \}, TRY_LEAVE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0056|0x0056: ARITH  (r14 I:int) = (r14 I:int) + (1 int) \l0x0058: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0059: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x005a|0x005a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x005e \l}"];
Node_25 [shape=record,label="{25\:\ 0x005c|0x005c: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x00b2 \l}"];
Node_26 [shape=record,label="{26\:\ 0x005e|0x005e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0064 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0060|0x0060: CMP_G  (r4 I:int) = (r2 I:double), (r6 I:double) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0062|0x0062: IF  (r4 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:35:0x008f \l}"];
Node_29 [shape=record,label="{29\:\ 0x0064|0x0064: INVOKE  (r9 I:org.json.JSONArray), (r8 I:java.lang.Object) org.json.JSONArray.put(java.lang.Object):org.json.JSONArray type: VIRTUAL \l0x0067: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0068: CONST  (r2 I:?[long, double]) = \l  (9218868437227405311(0x7fefffffffffffff, double:1.7976931348623157E308) ?[long, double])\l \l0x006d: MOVE  (r17 I:?[long, double]) = (r6 I:?[long, double]) \l0x006f: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0070: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x0071: MOVE  (r4 I:?[long, double]) = (r17 I:?[long, double]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0073|0x0073: ARITH  (r21 I:int) = (r21 I:int) + (\-1 int) \l0x0075: MOVE  (r12 I:?[long, double]) = (r2 I:?[long, double]) \l0x0076: MOVE  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0077: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0078: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0079: MOVE  (r17 I:?[long, double]) = (r4 I:?[long, double]) \l0x007b: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x007c: MOVE  (r6 I:?[long, double]) = (r17 I:?[long, double]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x007f|ExcHandler: JSONException null\lSplitter:B:12:0x0035\l|0x007f: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_32 [shape=record,label="{32\:\ 0x0080|0x0080: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0081: CONST  (r2 I:?[long, double]) = \l  (9218868437227405311(0x7fefffffffffffff, double:1.7976931348623157E308) ?[long, double])\l \l}"];
Node_33 [shape=record,label="{33\:\ 0x0087|ExcHandler: JSONException null\lSplitter:B:20:0x004c\l|0x0087: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_34 [shape=record,label="{34\:\ 0x0088|0x0088: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0089: CONST  (r2 I:?[long, double]) = \l  (9218868437227405311(0x7fefffffffffffff, double:1.7976931348623157E308) ?[long, double])\l \l}"];
Node_35 [shape=record,label="{35\:\ 0x008f|0x008f: INVOKE  (r9 I:org.json.JSONArray), (r5 I:java.lang.Object) org.json.JSONArray.put(java.lang.Object):org.json.JSONArray type: VIRTUAL \l0x0092: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0093: CONST  (r4 I:?[long, double]) = \l  (9218868437227405311(0x7fefffffffffffff, double:1.7976931348623157E308) ?[long, double])\l \l0x0098: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0099: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x009b|0x009b: IF  (r21 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:39:0x00a2 \l}"];
Node_37 [shape=record,label="{37\:\ 0x009d|0x009d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x00a6 \l}"];
Node_38 [shape=record,label="{38\:\ 0x009f|0x009f: INVOKE  (r9 I:org.json.JSONArray), (r5 I:java.lang.Object) org.json.JSONArray.put(java.lang.Object):org.json.JSONArray type: VIRTUAL \l}"];
Node_39 [shape=record,label="{39\:\ 0x00a2|0x00a2: MOVE  (r20 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x00a6|0x00a6: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x00a2 \l}"];
Node_41 [shape=record,label="{41\:\ 0x00a8|0x00a8: INVOKE  (r9 I:org.json.JSONArray), (r11 I:java.lang.Object) org.json.JSONArray.put(java.lang.Object):org.json.JSONArray type: VIRTUAL \l}"];
Node_42 [shape=record,label="{42\:\ 0x00ac|0x00ac: MOVE  (r2 I:?[long, double]) = (r12 I:?[long, double]) \l0x00ad: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x00ae: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_43 [shape=record,label="{43\:\ 0x00b0|0x00b0: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_44 [shape=record,label="{44\:\ 0x00b2|0x00b2: MOVE  (r12 I:?[long, double]) = (r2 I:?[long, double]) \l0x00b3: MOVE  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b4: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x00b5: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{private static org.json.JSONArray com.facebook.ads.internal.m.g.a((r19 I:org.json.JSONArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:org.json.JSONArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_36;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_36;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_43;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_43;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_31;
Node_13 -> Node_31;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_42;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_42;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_33;
Node_21 -> Node_33;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_44;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_35;
Node_29 -> Node_30;
Node_30 -> Node_5;
Node_31 -> Node_32;
Node_32 -> Node_15;
Node_33 -> Node_34;
Node_34 -> Node_23;
Node_35 -> Node_30;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_39;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_40;
Node_38 -> Node_39;
Node_39 -> Node_1;
Node_40 -> Node_39;
Node_40 -> Node_41[style=dashed];
Node_41 -> Node_39;
Node_42 -> Node_24;
Node_43 -> Node_16;
Node_44 -> Node_5;
}

