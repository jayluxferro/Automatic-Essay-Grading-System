digraph "CFG forcom.facebook.ads.internal.g.a.a(Landroid\/content\/Context;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_CLASS  (r1 I:java.lang.Class\<com.facebook.ads.internal.g.a\>) =  com.facebook.ads.internal.g.a.class \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: INVOKE  (r5 I:android.content.Context) com.facebook.ads.internal.g.a.b(android.content.Context):void type: STATIC A[Catch:\{ all \-\> 0x006f \}, TRY_ENTER]\l0x0006: INVOKE  (r5 I:android.content.Context) com.facebook.ads.internal.g.a.c(android.content.Context):void type: STATIC A[Catch:\{ all \-\> 0x006f \}]\l0x0009: INVOKE  (r5 I:android.content.Context) com.facebook.ads.internal.g.a.d(android.content.Context):void type: STATIC A[Catch:\{ all \-\> 0x006f \}]\l0x000c: SGET  (r0 I:android.hardware.SensorManager) =  com.facebook.ads.internal.g.a.a android.hardware.SensorManager A[Catch:\{ all \-\> 0x006f \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0020 A[Catch:\{ all \-\> 0x006f \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: CONST_STR  (r0 I:java.lang.String) =  \"sensor\" A[Catch:\{ all \-\> 0x006f \}]\l0x0012: INVOKE  (r0 I:java.lang.Object) = (r5 I:android.content.Context), (r0 I:java.lang.String) android.content.Context.getSystemService(java.lang.String):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x006f \}]\l0x0016: CHECK_CAST  (r0 I:android.hardware.SensorManager) = (android.hardware.SensorManager) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x006f \}]\l0x0018: SPUT  (r0 I:android.hardware.SensorManager) com.facebook.ads.internal.g.a.a android.hardware.SensorManager A[Catch:\{ all \-\> 0x006f \}]\l0x001a: SGET  (r0 I:android.hardware.SensorManager) =  com.facebook.ads.internal.g.a.a android.hardware.SensorManager A[Catch:\{ all \-\> 0x006f \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0020 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|SYNTHETIC\lSplitter:B:9:0x0020\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x0020\l|0x0020: SGET  (r0 I:android.hardware.Sensor) =  com.facebook.ads.internal.g.a.b android.hardware.Sensor A[Catch:\{ all \-\> 0x006f \}, TRY_ENTER]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002d A[Catch:\{ all \-\> 0x006f \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: SGET  (r0 I:android.hardware.SensorManager) =  com.facebook.ads.internal.g.a.a android.hardware.SensorManager A[Catch:\{ all \-\> 0x006f \}]\l0x0026: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x006f \}]\l0x0027: INVOKE  (r0 I:android.hardware.Sensor) = (r0 I:android.hardware.SensorManager), (r2 I:int) android.hardware.SensorManager.getDefaultSensor(int):android.hardware.Sensor type: VIRTUAL A[Catch:\{ all \-\> 0x006f \}]\l0x002b: SPUT  (r0 I:android.hardware.Sensor) com.facebook.ads.internal.g.a.b android.hardware.Sensor A[Catch:\{ all \-\> 0x006f \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: SGET  (r0 I:android.hardware.Sensor) =  com.facebook.ads.internal.g.a.c android.hardware.Sensor A[Catch:\{ all \-\> 0x006f \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|0x002f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x003a A[Catch:\{ all \-\> 0x006f \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0031: SGET  (r0 I:android.hardware.SensorManager) =  com.facebook.ads.internal.g.a.a android.hardware.SensorManager A[Catch:\{ all \-\> 0x006f \}]\l0x0033: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x006f \}]\l0x0034: INVOKE  (r0 I:android.hardware.Sensor) = (r0 I:android.hardware.SensorManager), (r2 I:int) android.hardware.SensorManager.getDefaultSensor(int):android.hardware.Sensor type: VIRTUAL A[Catch:\{ all \-\> 0x006f \}]\l0x0038: SPUT  (r0 I:android.hardware.Sensor) com.facebook.ads.internal.g.a.c android.hardware.Sensor A[Catch:\{ all \-\> 0x006f \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|0x003a: SGET  (r0 I:android.hardware.SensorEventListener) =  com.facebook.ads.internal.g.a.h android.hardware.SensorEventListener A[Catch:\{ all \-\> 0x006f \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x003c|0x003c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0054 A[Catch:\{ all \-\> 0x006f \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x003e|0x003e: NEW_INSTANCE  (r0 I:com.facebook.ads.internal.g.a$a) =  com.facebook.ads.internal.g.a$a A[Catch:\{ all \-\> 0x006f \}]\l0x0040: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x006f \}]\l0x0041: INVOKE  \l  (r0 I:com.facebook.ads.internal.g.a$a)\l  (r2 I:com.facebook.ads.internal.g.a$1)\l com.facebook.ads.internal.g.a.a.\<init\>(com.facebook.ads.internal.g.a$1):void type: DIRECT A[Catch:\{ all \-\> 0x006f \}]\l0x0044: SPUT  (r0 I:android.hardware.SensorEventListener) com.facebook.ads.internal.g.a.h android.hardware.SensorEventListener A[Catch:\{ all \-\> 0x006f \}]\l0x0046: SGET  (r0 I:android.hardware.Sensor) =  com.facebook.ads.internal.g.a.b android.hardware.Sensor A[Catch:\{ all \-\> 0x006f \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0048|0x0048: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0054 A[Catch:\{ all \-\> 0x006f \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x004a|0x004a: SGET  (r0 I:android.hardware.SensorManager) =  com.facebook.ads.internal.g.a.a android.hardware.SensorManager A[Catch:\{ all \-\> 0x006f \}]\l0x004c: SGET  (r2 I:android.hardware.SensorEventListener) =  com.facebook.ads.internal.g.a.h android.hardware.SensorEventListener A[Catch:\{ all \-\> 0x006f \}]\l0x004e: SGET  (r3 I:android.hardware.Sensor) =  com.facebook.ads.internal.g.a.b android.hardware.Sensor A[Catch:\{ all \-\> 0x006f \}]\l0x0050: CONST  (r4 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x006f \}]\l0x0051: INVOKE  \l  (r0 I:android.hardware.SensorManager)\l  (r2 I:android.hardware.SensorEventListener)\l  (r3 I:android.hardware.Sensor)\l  (r4 I:int)\l android.hardware.SensorManager.registerListener(android.hardware.SensorEventListener, android.hardware.Sensor, int):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x006f \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0054|0x0054: SGET  (r0 I:android.hardware.SensorEventListener) =  com.facebook.ads.internal.g.a.i android.hardware.SensorEventListener A[Catch:\{ all \-\> 0x006f \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0056|0x0056: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001e A[Catch:\{ all \-\> 0x006f \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0058|0x0058: NEW_INSTANCE  (r0 I:com.facebook.ads.internal.g.a$b) =  com.facebook.ads.internal.g.a$b A[Catch:\{ all \-\> 0x006f \}]\l0x005a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x006f \}]\l0x005b: INVOKE  \l  (r0 I:com.facebook.ads.internal.g.a$b)\l  (r2 I:com.facebook.ads.internal.g.a$1)\l com.facebook.ads.internal.g.a.b.\<init\>(com.facebook.ads.internal.g.a$1):void type: DIRECT A[Catch:\{ all \-\> 0x006f \}]\l0x005e: SPUT  (r0 I:android.hardware.SensorEventListener) com.facebook.ads.internal.g.a.i android.hardware.SensorEventListener A[Catch:\{ all \-\> 0x006f \}]\l0x0060: SGET  (r0 I:android.hardware.Sensor) =  com.facebook.ads.internal.g.a.c android.hardware.Sensor A[Catch:\{ all \-\> 0x006f \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0062|0x0062: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001e A[Catch:\{ all \-\> 0x006f \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0064|0x0064: SGET  (r0 I:android.hardware.SensorManager) =  com.facebook.ads.internal.g.a.a android.hardware.SensorManager A[Catch:\{ all \-\> 0x006f \}]\l0x0066: SGET  (r2 I:android.hardware.SensorEventListener) =  com.facebook.ads.internal.g.a.i android.hardware.SensorEventListener A[Catch:\{ all \-\> 0x006f \}]\l0x0068: SGET  (r3 I:android.hardware.Sensor) =  com.facebook.ads.internal.g.a.c android.hardware.Sensor A[Catch:\{ all \-\> 0x006f \}]\l0x006a: CONST  (r4 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x006f \}]\l0x006b: INVOKE  \l  (r0 I:android.hardware.SensorManager)\l  (r2 I:android.hardware.SensorEventListener)\l  (r3 I:android.hardware.Sensor)\l  (r4 I:int)\l android.hardware.SensorManager.registerListener(android.hardware.SensorEventListener, android.hardware.Sensor, int):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x006f \}, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x006f|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x006f: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_28 [shape=record,label="{28\:\ 0x0070|0x0070: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0071|0x0071: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static synchronized void com.facebook.ads.internal.g.a.a((r5 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_27;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_27;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_7;
Node_22 -> Node_23[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_7;
Node_24 -> Node_25[style=dashed];
Node_25 -> Node_7;
Node_27 -> Node_28;
Node_28 -> Node_29;
}

