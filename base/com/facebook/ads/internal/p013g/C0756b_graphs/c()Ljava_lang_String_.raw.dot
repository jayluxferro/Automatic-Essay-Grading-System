digraph "CFG forcom.facebook.ads.internal.g.b.c()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.content.Context) = (r2 I:com.facebook.ads.internal.g.b) com.facebook.ads.internal.g.b.b android.content.Context \l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"phone\" \l0x0004: INVOKE  (r0 I:java.lang.Object) = (r0 I:android.content.Context), (r1 I:java.lang.String) android.content.Context.getSystemService(java.lang.String):java.lang.Object type: VIRTUAL \l0x0008: CHECK_CAST  (r0 I:android.telephony.TelephonyManager) = (android.telephony.TelephonyManager) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0019 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r0 I:java.lang.String) = (r0 I:android.telephony.TelephonyManager) android.telephony.TelephonyManager.getNetworkOperatorName():java.lang.String type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: INVOKE  (r1 I:int) = (r0 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x0019 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: RETURN  (r0 I:java.lang.String) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: CONST_STR  (r0 I:java.lang.String) =  \"\" \l}"];
MethodNode[shape=record,label="{public java.lang.String com.facebook.ads.internal.g.b.c((r2 'this' I:com.facebook.ads.internal.g.b A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_6;
}

