digraph "CFG forcom.facebook.ads.internal.g.b.h()I" {
subgraph cluster_Region_1326873490 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_2041417794 {
label = "Try: R(1:5) catches: R(3:3|4|6)";
node [shape=record,color=blue];
subgraph cluster_Region_737795884 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r4.f864b.getPackageManager().getPackageInfo(mo10599f(), 0).versionCode\l}"];
}
subgraph cluster_Region_2028187225 {
label = "R(3:3|4|6) | ExcHandler: NameNotFoundException (r1v0 'e' android.content.pm.PackageManager$NameNotFoundException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0013|ExcHandler: NameNotFoundException (r1v0 'e' android.content.pm.PackageManager$NameNotFoundException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0001\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|r1.printStackTrace()\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return 0\l}"];
}
}
}
subgraph cluster_Region_2028187225 {
label = "R(3:3|4|6) | ExcHandler: NameNotFoundException (r1v0 'e' android.content.pm.PackageManager$NameNotFoundException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0013|ExcHandler: NameNotFoundException (r1v0 'e' android.content.pm.PackageManager$NameNotFoundException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0001\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|r1.printStackTrace()\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return 0\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?|Catch:\{ NameNotFoundException \-\> 0x0013 \}\lSplitter:B:1:0x0001\l}"];
MethodNode[shape=record,label="{public int com.facebook.ads.internal.g.b.h((r4v0 'this' com.facebook.ads.internal.g.b A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_2 -> Node_5;
}

