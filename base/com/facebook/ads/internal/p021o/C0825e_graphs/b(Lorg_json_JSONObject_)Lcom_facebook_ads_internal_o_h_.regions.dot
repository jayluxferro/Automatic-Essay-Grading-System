digraph "CFG forcom.facebook.ads.internal.o.e.b(Lorg\/json\/JSONObject;)Lcom\/facebook\/ads\/internal\/o\/h;" {
subgraph cluster_Region_1656701059 {
label = "R(1:(2:2|5))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1641925678 {
label = "Try: R(2:2|5) catches: R(1:6)";
node [shape=record,color=blue];
subgraph cluster_Region_433998611 {
label = "R(2:2|5)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ JSONException \-\> 0x0035 \}\lSplitter:B:1:0x0002\l|org.json.JSONObject org.json.JSONObject r0 = r7.getJSONArray(\"placements\").getJSONObject(0)     \/\/ Catch:\{ JSONException \-\> 0x0035 \}\l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return new com.facebook.ads.internal.p021o.C0829h(r7.optString(\"message\", \"\"), r7.optInt(\"code\", 0), new com.facebook.ads.internal.p014h.C0759c(com.facebook.ads.internal.p014h.C0760d.m1079a(r0.getJSONObject(\"definition\")), r0.optString(\"feature_config\")))\l}"];
}
subgraph cluster_Region_1387029211 {
label = "R(1:6) | ExcHandler: JSONException (e org.json.JSONException)\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return m1459c(r7)\l}"];
}
}
}
subgraph cluster_Region_1387029211 {
label = "R(1:6) | ExcHandler: JSONException (e org.json.JSONException)\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return m1459c(r7)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0035|ExcHandler: JSONException (e org.json.JSONException)\lSplitter:B:1:0x0002\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0036}"];
MethodNode[shape=record,label="{private com.facebook.ads.internal.o.h com.facebook.ads.internal.o.e.b((r6v0 'this' com.facebook.ads.internal.o.e A[IMMUTABLE_TYPE, THIS]), (r7v0 org.json.JSONObject A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_6;
}

