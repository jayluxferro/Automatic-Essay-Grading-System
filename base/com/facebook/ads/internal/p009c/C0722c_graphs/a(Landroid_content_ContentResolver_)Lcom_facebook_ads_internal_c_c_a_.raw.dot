digraph "CFG forcom.facebook.ads.internal.c.c.a(Landroid\/content\/ContentResolver;)Lcom\/facebook\/ads\/internal\/c\/c$a;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0002\l|0x0002: NEW_ARRAY  (r2 I:java.lang.String[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}, TRY_ENTER]\l0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}]\l0x0005: CONST_STR  (r1 I:java.lang.String) =  \"aid\" A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}]\l0x0007: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}]\l0x0009: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}]\l0x000a: CONST_STR  (r1 I:java.lang.String) =  \"androidid\" A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}]\l0x000c: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}]\l0x000e: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}]\l0x000f: CONST_STR  (r1 I:java.lang.String) =  \"limit_tracking\" A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}]\l0x0011: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}]\l0x0013: CONST_STR  (r0 I:java.lang.String) =  \"content:\/\/com.facebook.katana.provider.AttributionIdProvider\" A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}]\l0x0015: INVOKE  (r1 I:android.net.Uri) = (r0 I:java.lang.String) android.net.Uri.parse(java.lang.String):android.net.Uri type: STATIC A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}]\l0x0019: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}]\l0x001a: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}]\l0x001b: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}]\l0x001c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}]\l0x001d: INVOKE  (r1 I:android.database.Cursor) = \l  (r0 I:android.content.ContentResolver)\l  (r1 I:android.net.Uri)\l  (r2 I:java.lang.String[])\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String[])\l  (r5 I:java.lang.String)\l android.content.ContentResolver.query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String):android.database.Cursor type: VIRTUAL A[Catch:\{ Exception \-\> 0x0068, all \-\> 0x0078 \}, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0029 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|SYNTHETIC\lSplitter:B:5:0x0023\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0023\l|0x0023: INVOKE  (r0 I:boolean) = (r1 I:android.database.Cursor) android.database.Cursor.moveToFirst():boolean type: INTERFACE A[Catch:\{ Exception \-\> 0x0082 \}, TRY_ENTER]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0037 A[Catch:\{ Exception \-\> 0x0082 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: NEW_INSTANCE  (r0 I:com.facebook.ads.internal.c.c$a) =  com.facebook.ads.internal.c.c$a A[Catch:\{ Exception \-\> 0x0082 \}]\l0x002b: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0082 \}]\l0x002c: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0082 \}]\l0x002d: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0082 \}]\l0x002e: INVOKE  \l  (r0 I:com.facebook.ads.internal.c.c$a)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:boolean)\l com.facebook.ads.internal.c.c.a.\<init\>(java.lang.String, java.lang.String, boolean):void type: DIRECT A[Catch:\{ Exception \-\> 0x0082 \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0036 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|0x0033: INVOKE  (r1 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|0x0036: RETURN  (r0 I:com.facebook.ads.internal.c.c$a) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|0x0037: CONST_STR  (r0 I:java.lang.String) =  \"aid\" \l}"];
Node_13 [shape=record,label="{13\:\ 0x0039|SYNTHETIC\lSplitter:B:13:0x0039\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x0039\l|0x0039: INVOKE  (r0 I:int) = (r1 I:android.database.Cursor), (r0 I:java.lang.String) android.database.Cursor.getColumnIndex(java.lang.String):int type: INTERFACE A[Catch:\{ Exception \-\> 0x0082 \}, TRY_ENTER]\l0x003d: INVOKE  (r2 I:java.lang.String) = (r1 I:android.database.Cursor), (r0 I:int) android.database.Cursor.getString(int):java.lang.String type: INTERFACE A[Catch:\{ Exception \-\> 0x0082 \}]\l0x0041: CONST_STR  (r0 I:java.lang.String) =  \"androidid\" A[Catch:\{ Exception \-\> 0x0082 \}]\l0x0043: INVOKE  (r0 I:int) = (r1 I:android.database.Cursor), (r0 I:java.lang.String) android.database.Cursor.getColumnIndex(java.lang.String):int type: INTERFACE A[Catch:\{ Exception \-\> 0x0082 \}]\l0x0047: INVOKE  (r3 I:java.lang.String) = (r1 I:android.database.Cursor), (r0 I:int) android.database.Cursor.getString(int):java.lang.String type: INTERFACE A[Catch:\{ Exception \-\> 0x0082 \}]\l0x004b: CONST_STR  (r0 I:java.lang.String) =  \"limit_tracking\" A[Catch:\{ Exception \-\> 0x0082 \}]\l0x004d: INVOKE  (r0 I:int) = (r1 I:android.database.Cursor), (r0 I:java.lang.String) android.database.Cursor.getColumnIndex(java.lang.String):int type: INTERFACE A[Catch:\{ Exception \-\> 0x0082 \}]\l0x0051: INVOKE  (r0 I:java.lang.String) = (r1 I:android.database.Cursor), (r0 I:int) android.database.Cursor.getString(int):java.lang.String type: INTERFACE A[Catch:\{ Exception \-\> 0x0082 \}]\l0x0055: INVOKE  (r4 I:java.lang.Boolean) = (r0 I:java.lang.String) java.lang.Boolean.valueOf(java.lang.String):java.lang.Boolean type: STATIC A[Catch:\{ Exception \-\> 0x0082 \}]\l0x0059: NEW_INSTANCE  (r0 I:com.facebook.ads.internal.c.c$a) =  com.facebook.ads.internal.c.c$a A[Catch:\{ Exception \-\> 0x0082 \}]\l0x005b: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x0082 \}]\l0x005f: INVOKE  \l  (r0 I:com.facebook.ads.internal.c.c$a)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:boolean)\l com.facebook.ads.internal.c.c.a.\<init\>(java.lang.String, java.lang.String, boolean):void type: DIRECT A[Catch:\{ Exception \-\> 0x0082 \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0062|0x0062: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0036 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0064|0x0064: INVOKE  (r1 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_17 [shape=record,label="{17\:\ 0x0068|ExcHandler: Exception null\lSplitter:B:1:0x0002\l|0x0068: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x0069|0x0069: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x006a|SYNTHETIC\lSplitter:B:19:0x006a\l}"];
Node_20 [shape=record,label="{20\:\ ?|Splitter:B:19:0x006a\l|0x006a: NEW_INSTANCE  (r0 I:com.facebook.ads.internal.c.c$a) =  com.facebook.ads.internal.c.c$a A[Catch:\{ all \-\> 0x0080 \}, TRY_ENTER]\l0x006c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0080 \}]\l0x006d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0080 \}]\l0x006e: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0080 \}]\l0x006f: INVOKE  \l  (r0 I:com.facebook.ads.internal.c.c$a)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:boolean)\l com.facebook.ads.internal.c.c.a.\<init\>(java.lang.String, java.lang.String, boolean):void type: DIRECT A[Catch:\{ all \-\> 0x0080 \}, TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0072|0x0072: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0036 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0074|0x0074: INVOKE  (r1 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_23 [shape=record,label="{23\:\ 0x0078|ExcHandler: all null\lSplitter:B:1:0x0002\l|0x0078: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_24 [shape=record,label="{24\:\ 0x0079|0x0079: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x007a|0x007a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x007f \l}"];
Node_26 [shape=record,label="{26\:\ 0x007c|0x007c: INVOKE  (r1 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_27 [shape=record,label="{27\:\ 0x007f|0x007f: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0080|ExcHandler: all null\lSplitter:B:19:0x006a\l|0x0080: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_30 [shape=record,label="{30\:\ 0x0082|ExcHandler: Exception null\lSplitter:B:5:0x0023\l|0x0082: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
MethodNode[shape=record,label="{public static com.facebook.ads.internal.c.c$a com.facebook.ads.internal.c.c.a((r7 I:android.content.ContentResolver A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_17;
Node_1 -> Node_23;
Node_2 -> Node_17;
Node_2 -> Node_23;
Node_2 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_5 -> Node_30;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_30;
Node_14 -> Node_15;
Node_14 -> Node_30;
Node_15 -> Node_11;
Node_15 -> Node_16[style=dashed];
Node_16 -> Node_11;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_28;
Node_20 -> Node_21;
Node_20 -> Node_28;
Node_21 -> Node_11;
Node_21 -> Node_22[style=dashed];
Node_22 -> Node_11;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_28 -> Node_25;
Node_30 -> Node_19;
}

