digraph "CFG forcom.pnikosis.materialishprogress.ProgressWheel.setupBounds(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r5 I:int) = (r14 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.getPaddingTop():int type: VIRTUAL \l0x0004: INVOKE  (r2 I:int) = (r14 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.getPaddingBottom():int type: VIRTUAL \l0x0008: INVOKE  (r3 I:int) = (r14 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.getPaddingLeft():int type: VIRTUAL \l0x000c: INVOKE  (r4 I:int) = (r14 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.getPaddingRight():int type: VIRTUAL \l0x0010: IGET  (r8 I:boolean) = (r14 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.fillRadius boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0057 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: ARITH  (r8 I:int) = (r15 I:int A[D('layout_width' int)]) \- (r3 I:int A[D('paddingLeft' int)]) \l0x0016: ARITH  (r8 I:int) = (r8 I:int) \- (r4 I:int A[D('paddingRight' int)]) \l0x0017: ARITH  (r9 I:int) = (r16 I:int A[D('layout_height' int)]) \- (r2 I:int A[D('paddingBottom' int)]) \l0x0019: ARITH  (r9 I:int) = (r9 I:int) \- (r5 I:int A[D('paddingTop' int)]) \l0x001a: INVOKE  (r1 I:int) = (r8 I:int), (r9 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x001e: IGET  (r8 I:int) = (r14 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.circleRadius int \l0x0020: ARITH  (r8 I:int) = (r8 I:int) * (2 int) \l0x0022: IGET  (r9 I:int) = (r14 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.barWidth int \l0x0024: ARITH  (r9 I:int) = (r9 I:int) * (2 int) \l0x0026: ARITH  (r8 I:int) = (r8 I:int) \- (r9 I:int) \l0x0027: INVOKE  (r0 I:int) = (r1 I:int A[D('minValue' int)]), (r8 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x002b: ARITH  (r8 I:int) = (r15 I:int A[D('layout_width' int)]) \- (r3 I:int A[D('paddingLeft' int)]) \l0x002d: ARITH  (r8 I:int) = (r8 I:int) \- (r4 I:int A[D('paddingRight' int)]) \l0x002e: ARITH  (r8 I:int) = (r8 I:int) \- (r0 I:int A[D('circleDiameter' int)]) \l0x002f: ARITH  (r8 I:int) = (r8 I:int) \/ (2 int) \l0x0031: ARITH  (r6 I:int) = (r8 I:int) + (r3 I:int A[D('paddingLeft' int)]) \l0x0033: ARITH  (r8 I:int) = (r16 I:int A[D('layout_height' int)]) \- (r5 I:int A[D('paddingTop' int)]) \l0x0035: ARITH  (r8 I:int) = (r8 I:int) \- (r2 I:int A[D('paddingBottom' int)]) \l0x0036: ARITH  (r8 I:int) = (r8 I:int) \- (r0 I:int A[D('circleDiameter' int)]) \l0x0037: ARITH  (r8 I:int) = (r8 I:int) \/ (2 int) \l0x0039: ARITH  (r7 I:int) = (r8 I:int) + (r5 I:int A[D('paddingTop' int)]) \l0x003b: NEW_INSTANCE  (r8 I:android.graphics.RectF) =  android.graphics.RectF \l0x003d: IGET  (r9 I:int) = (r14 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.barWidth int \l0x003f: ARITH  (r9 I:int) = (r9 I:int) + (r6 I:int A[D('xOffset' int)]) \l0x0040: CAST  (r9 I:float) = (float) (r9 I:int) \l0x0041: IGET  (r10 I:int) = (r14 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.barWidth int \l0x0043: ARITH  (r10 I:int) = (r10 I:int) + (r7 I:int A[D('yOffset' int)]) \l0x0044: CAST  (r10 I:float) = (float) (r10 I:int) \l0x0045: ARITH  (r11 I:int) = (r6 I:int A[D('xOffset' int)]) + (r0 I:int A[D('circleDiameter' int)]) \l0x0047: IGET  (r12 I:int) = (r14 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.barWidth int \l0x0049: ARITH  (r11 I:int) = (r11 I:int) \- (r12 I:int) \l0x004a: CAST  (r11 I:float) = (float) (r11 I:int) \l0x004b: ARITH  (r12 I:int) = (r7 I:int A[D('yOffset' int)]) + (r0 I:int A[D('circleDiameter' int)]) \l0x004d: IGET  (r13 I:int) = (r14 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.barWidth int \l0x004f: ARITH  (r12 I:int) = (r12 I:int) \- (r13 I:int) \l0x0050: CAST  (r12 I:float) = (float) (r12 I:int) \l0x0051: INVOKE  \l  (r8 I:android.graphics.RectF)\l  (r9 I:float)\l  (r10 I:float)\l  (r11 I:float)\l  (r12 I:float)\l android.graphics.RectF.\<init\>(float, float, float, float):void type: DIRECT \l0x0054: IPUT  \l  (r8 I:android.graphics.RectF)\l  (r14 I:com.pnikosis.materialishprogress.ProgressWheel)\l com.pnikosis.materialishprogress.ProgressWheel.circleBounds android.graphics.RectF \l}"];
Node_3 [shape=record,label="{3\:\ 0x0056|0x0056: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0057|0x0057: NEW_INSTANCE  (r8 I:android.graphics.RectF) =  android.graphics.RectF \l0x0059: IGET  (r9 I:int) = (r14 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.barWidth int \l0x005b: ARITH  (r9 I:int) = (r9 I:int) + (r3 I:int A[D('paddingLeft' int)]) \l0x005c: CAST  (r9 I:float) = (float) (r9 I:int) \l0x005d: IGET  (r10 I:int) = (r14 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.barWidth int \l0x005f: ARITH  (r10 I:int) = (r10 I:int) + (r5 I:int A[D('paddingTop' int)]) \l0x0060: CAST  (r10 I:float) = (float) (r10 I:int) \l0x0061: ARITH  (r11 I:int) = (r15 I:int A[D('layout_width' int)]) \- (r4 I:int A[D('paddingRight' int)]) \l0x0063: IGET  (r12 I:int) = (r14 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.barWidth int \l0x0065: ARITH  (r11 I:int) = (r11 I:int) \- (r12 I:int) \l0x0066: CAST  (r11 I:float) = (float) (r11 I:int) \l0x0067: ARITH  (r12 I:int) = (r16 I:int A[D('layout_height' int)]) \- (r2 I:int A[D('paddingBottom' int)]) \l0x0069: IGET  (r13 I:int) = (r14 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.barWidth int \l0x006b: ARITH  (r12 I:int) = (r12 I:int) \- (r13 I:int) \l0x006c: CAST  (r12 I:float) = (float) (r12 I:int) \l0x006d: INVOKE  \l  (r8 I:android.graphics.RectF)\l  (r9 I:float)\l  (r10 I:float)\l  (r11 I:float)\l  (r12 I:float)\l android.graphics.RectF.\<init\>(float, float, float, float):void type: DIRECT \l0x0070: IPUT  \l  (r8 I:android.graphics.RectF)\l  (r14 I:com.pnikosis.materialishprogress.ProgressWheel)\l com.pnikosis.materialishprogress.ProgressWheel.circleBounds android.graphics.RectF \l}"];
MethodNode[shape=record,label="{private void com.pnikosis.materialishprogress.ProgressWheel.setupBounds((r14 'this' I:com.pnikosis.materialishprogress.ProgressWheel A[IMMUTABLE_TYPE, THIS]), (r15 I:int A[D('layout_width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:int A[D('layout_height' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x002b\-0x0056: r0 'circleDiameter' int\l  0x001e\-0x0056: r1 'minValue' int\l  0x0033\-0x0056: r6 'xOffset' int\l  0x003b\-0x0056: r7 'yOffset' int\l  0x0008\-0x0072: r2 'paddingBottom' int\l  0x000c\-0x0072: r3 'paddingLeft' int\l  0x0010\-0x0072: r4 'paddingRight' int\l  0x0004\-0x0072: r5 'paddingTop' int\l  ?\-0x0072: r15 'layout_width' int\l  ?\-0x0072: r16 'layout_height' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_3;
}

