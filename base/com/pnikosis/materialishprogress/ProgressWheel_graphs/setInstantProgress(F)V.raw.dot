digraph "CFG forcom.pnikosis.materialishprogress.ProgressWheel.setInstantProgress(F)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1135869952(0x43b40000, float:360.0) ?[int, float, short, byte, char])\l \l0x0002: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: IGET  (r0 I:boolean) = (r4 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.isSpinning boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IPUT  \l  (r1 I:float)\l  (r4 I:com.pnikosis.materialishprogress.ProgressWheel)\l com.pnikosis.materialishprogress.ProgressWheel.mProgress float \l0x000b: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: IPUT  \l  (r0 I:boolean)\l  (r4 I:com.pnikosis.materialishprogress.ProgressWheel)\l com.pnikosis.materialishprogress.ProgressWheel.isSpinning boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: CMP_L  (r0 I:int) = (r5 I:float A[D('progress' float)]), (r2 I:float) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:9:0x001a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: ARITH  (r5 I:float A[D('progress' float)]) = (r5 I:float A[D('progress' float)]) \- (r2 I:float) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IGET  (r0 I:float) = (r4 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.mTargetProgress float \l0x0015: CMP_L  (r0 I:int) = (r5 I:float A[D('progress' float)]), (r0 I:float) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0020 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: CMP_G  (r0 I:int) = (r5 I:float A[D('progress' float)]), (r1 I:float) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('progress' float)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: ARITH  (r0 I:float) = (r5 I:float A[D('progress' float)]) * (r3 I:float) \l0x0022: INVOKE  (r0 I:float) = (r0 I:float), (r3 I:float) java.lang.Math.min(float, float):float type: STATIC \l0x0026: IPUT  \l  (r0 I:float)\l  (r4 I:com.pnikosis.materialishprogress.ProgressWheel)\l com.pnikosis.materialishprogress.ProgressWheel.mTargetProgress float \l0x0028: IGET  (r0 I:float) = (r4 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.mTargetProgress float \l0x002a: IPUT  \l  (r0 I:float)\l  (r4 I:com.pnikosis.materialishprogress.ProgressWheel)\l com.pnikosis.materialishprogress.ProgressWheel.mProgress float \l0x002c: INVOKE  (r0 I:long) =  android.os.SystemClock.uptimeMillis():long type: STATIC \l0x0030: IPUT  \l  (r0 I:long)\l  (r4 I:com.pnikosis.materialishprogress.ProgressWheel)\l com.pnikosis.materialishprogress.ProgressWheel.lastTimeAnimated long \l0x0032: INVOKE  (r4 I:com.pnikosis.materialishprogress.ProgressWheel) com.pnikosis.materialishprogress.ProgressWheel.invalidate():void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{public void com.pnikosis.materialishprogress.ProgressWheel.setInstantProgress((r4 'this' I:com.pnikosis.materialishprogress.ProgressWheel A[IMMUTABLE_TYPE, THIS]), (r5 I:float A[D('progress' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0035: r5 'progress' float\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_6;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_6;
Node_12 -> Node_8;
}

