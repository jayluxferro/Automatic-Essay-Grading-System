digraph "CFG forcom.pnikosis.materialishprogress.ProgressWheel.parseAttributes(Landroid\/content\/res\/TypedArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.util.DisplayMetrics r1 = getContext().getResources().getDisplayMetrics()\lr7.barWidth = (int) android.util.TypedValue.applyDimension(1, (float) r7.barWidth, r1)\lr7.rimWidth = (int) android.util.TypedValue.applyDimension(1, (float) r7.rimWidth, r1)\lr7.circleRadius = (int) r8.getDimension(com.pnikosis.materialishprogress.C1413R.styleable.ProgressWheel_circleRadius, (float) r7.circleRadius)\lr7.fillRadius = r8.getBoolean(com.pnikosis.materialishprogress.C1413R.styleable.ProgressWheel_fillRadius, false)\lr7.barWidth = (int) r8.getDimension(com.pnikosis.materialishprogress.C1413R.styleable.ProgressWheel_barWidth, (float) r7.barWidth)\lr7.rimWidth = (int) r8.getDimension(com.pnikosis.materialishprogress.C1413R.styleable.ProgressWheel_rimWidth, (float) r7.rimWidth)\lr7.spinSpeed = r8.getFloat(com.pnikosis.materialishprogress.C1413R.styleable.ProgressWheel_spinSpeed, r7.spinSpeed \/ 360.0f) * 360.0f\lr7.barSpinCycleTime = (double) r8.getInt(com.pnikosis.materialishprogress.C1413R.styleable.ProgressWheel_barSpinCycleTime, (int) r7.barSpinCycleTime)\lr7.barColor = r8.getColor(com.pnikosis.materialishprogress.C1413R.styleable.ProgressWheel_barColor, r7.barColor)\lr7.rimColor = r8.getColor(com.pnikosis.materialishprogress.C1413R.styleable.ProgressWheel_rimColor, r7.rimColor)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0083|if (r8.getBoolean(com.pnikosis.materialishprogress.C1413R.styleable.ProgressWheel_progressIndeterminate, false) == false) goto L_0x0088\l}"];
Node_2 [shape=record,label="{2\:\ 0x0085|spin()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0088|r8.recycle()\l}"];
Node_4 [shape=record,label="{4\:\ 0x008b|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.pnikosis.materialishprogress.ProgressWheel.parseAttributes((r7v0 'this' com.pnikosis.materialishprogress.ProgressWheel A[IMMUTABLE_TYPE, THIS]), (r8v0 'a' android.content.res.TypedArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

