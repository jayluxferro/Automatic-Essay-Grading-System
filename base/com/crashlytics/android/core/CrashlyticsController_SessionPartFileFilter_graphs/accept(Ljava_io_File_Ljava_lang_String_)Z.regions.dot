digraph "CFG forcom.crashlytics.android.core.CrashlyticsController.SessionPartFileFilter.accept(Ljava\/io\/File;Ljava\/lang\/String;)Z" {
subgraph cluster_Region_1561648964 {
label = "R(2:0|(2:(1:7)|(1:9)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
subgraph cluster_Region_873883282 {
label = "R(2:(1:7)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_876842604 {
label = "IF [B:1:0x0018, B:4:0x0021, B:6:0x0029] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0018|if (r3.equals(r1.sessionId + com.crashlytics.android.core.ClsFileOutputStream.SESSION_FILE_EXTENSION) == false) goto L_0x001b\l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|ADDED_TO_REGION\l|if (r3.contains(r1.sessionId) == true) goto L_0x0023\l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|ADDED_TO_REGION\l|if (r3.endsWith(com.crashlytics.android.core.ClsFileOutputStream.IN_PROGRESS_SESSION_FILE_EXTENSION) == false) goto L_0x002b\l}"];
subgraph cluster_Region_366772079 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002b|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1850305647 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x001a|RETURN\lADDED_TO_REGION\l|return false\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x001b}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0023}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{public boolean com.crashlytics.android.core.CrashlyticsController.SessionPartFileFilter.accept((r1v0 'this' com.crashlytics.android.core.CrashlyticsController$SessionPartFileFilter A[IMMUTABLE_TYPE, THIS]), (r2v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
}

