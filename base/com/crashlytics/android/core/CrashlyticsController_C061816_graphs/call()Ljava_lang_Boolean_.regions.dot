digraph "CFG forcom.crashlytics.android.core.CrashlyticsController.16.call()Ljava\/lang\/Boolean;" {
subgraph cluster_Region_1256089578 {
label = "R(4:0|(1:6)|7|8) | DECL_VAR: java.io.File null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.TreeSet\<java.io.File\> java.util.TreeSet\<java.io.File\> r0 = r3.timestampedDirectories\ljava.lang.String java.lang.String r1 = com.crashlytics.android.core.CrashlyticsController.this.getPreviousSessionId()\l}"];
subgraph cluster_IfRegion_1325403258 {
label = "IF [B:1:0x000a, B:3:0x0010, B:5:0x0018] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|ADDED_TO_REGION\l|if (r1 == null) goto L_0x0029\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|ADDED_TO_REGION\l|if (r0.isEmpty() != false) goto L_0x0029\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|ADDED_TO_REGION\l|if ((r2 = r0.first()) == null) goto L_0x0029\l}"];
subgraph cluster_Region_1531611131 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001a|com.crashlytics.android.core.CrashlyticsController.this.finalizeMostRecentNativeCrash(com.crashlytics.android.core.CrashlyticsController.this.crashlyticsCore.getContext(), r2, r1)\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x0029|com.crashlytics.android.core.CrashlyticsController.this.recursiveDelete((java.util.Set\<java.io.File\>) r0)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|RETURN\l|return java.lang.Boolean.TRUE\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000c}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0012}"];
MethodNode[shape=record,label="{public java.lang.Boolean com.crashlytics.android.core.CrashlyticsController.16.call((r5v0 'this' com.crashlytics.android.core.CrashlyticsController$16 A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

