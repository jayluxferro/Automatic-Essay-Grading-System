digraph "CFG forcom.crashlytics.android.core.CrashlyticsController.13.call()Ljava\/lang\/Boolean;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.crashlytics.android.core.CrashlyticsController) = \l  (r3 I:com.crashlytics.android.core.CrashlyticsController$13)\l com.crashlytics.android.core.CrashlyticsController.13.this$0 com.crashlytics.android.core.CrashlyticsController \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:com.crashlytics.android.core.CrashlyticsController) com.crashlytics.android.core.CrashlyticsController.isHandlingException():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r0 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"CrashlyticsCore\" \l0x000e: CONST_STR  (r2 I:java.lang.String) =  \"Skipping session finalization because a crash has already occurred.\" \l0x0010: INVOKE  \l  (r0 I:io.fabric.sdk.android.Logger)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l io.fabric.sdk.android.Logger.d(java.lang.String, java.lang.String):void type: INTERFACE \l0x0013: SGET  (r0 I:java.lang.Boolean) =  java.lang.Boolean.FALSE java.lang.Boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: RETURN  (r0 I:java.lang.Boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: INVOKE  (r0 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x001a: CONST_STR  (r1 I:java.lang.String) =  \"CrashlyticsCore\" \l0x001c: CONST_STR  (r2 I:java.lang.String) =  \"Finalizing previously open sessions.\" \l0x001e: INVOKE  \l  (r0 I:io.fabric.sdk.android.Logger)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l io.fabric.sdk.android.Logger.d(java.lang.String, java.lang.String):void type: INTERFACE \l0x0021: IGET  (r0 I:com.crashlytics.android.core.CrashlyticsController) = \l  (r3 I:com.crashlytics.android.core.CrashlyticsController$13)\l com.crashlytics.android.core.CrashlyticsController.13.this$0 com.crashlytics.android.core.CrashlyticsController \l0x0023: IGET  (r1 I:io.fabric.sdk.android.services.settings.SessionSettingsData) = \l  (r3 I:com.crashlytics.android.core.CrashlyticsController$13)\l com.crashlytics.android.core.CrashlyticsController.13.val$sessionSettingsData io.fabric.sdk.android.services.settings.SessionSettingsData \l0x0025: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0026: INVOKE  \l  (r0 I:com.crashlytics.android.core.CrashlyticsController)\l  (r1 I:io.fabric.sdk.android.services.settings.SessionSettingsData)\l  (r2 I:boolean)\l com.crashlytics.android.core.CrashlyticsController.access$1300(com.crashlytics.android.core.CrashlyticsController, io.fabric.sdk.android.services.settings.SessionSettingsData, boolean):void type: STATIC \l0x0029: INVOKE  (r0 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x002d: CONST_STR  (r1 I:java.lang.String) =  \"CrashlyticsCore\" \l0x002f: CONST_STR  (r2 I:java.lang.String) =  \"Closed all previously open sessions\" \l0x0031: INVOKE  \l  (r0 I:io.fabric.sdk.android.Logger)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l io.fabric.sdk.android.Logger.d(java.lang.String, java.lang.String):void type: INTERFACE \l0x0034: SGET  (r0 I:java.lang.Boolean) =  java.lang.Boolean.TRUE java.lang.Boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x0036|0x0036: RETURN  (r0 I:java.lang.Boolean) \l}"];
MethodNode[shape=record,label="{public java.lang.Boolean com.crashlytics.android.core.CrashlyticsController.13.call((r3 'this' I:com.crashlytics.android.core.CrashlyticsController$13 A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

