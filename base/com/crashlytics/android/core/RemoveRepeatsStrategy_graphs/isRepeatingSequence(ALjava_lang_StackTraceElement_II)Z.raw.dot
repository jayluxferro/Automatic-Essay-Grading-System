digraph "CFG forcom.crashlytics.android.core.RemoveRepeatsStrategy.isRepeatingSequence([Ljava\/lang\/StackTraceElement;II)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r0 I:int) = (r7 I:int) \- (r6 I:int) \l0x0002: ARITH  (r1 I:int) = (r7 I:int) + (r0 I:int) \l0x0004: ARRAY_LENGTH  (r2 I:int) = (r5 I:?[]) \l0x0005: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: RETURN  (r3 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:9:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: ARITH  (r2 I:int) = (r6 I:int) + (r1 I:int) \l0x000e: AGET  (r2 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0010: ARITH  (r4 I:int) = (r7 I:int) + (r1 I:int) \l0x0012: AGET  (r4 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x0014: INVOKE  (r2 I:boolean) = (r2 I:java.lang.StackTraceElement), (r4 I:java.lang.Object) java.lang.StackTraceElement.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001b \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: RETURN  (r3 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: RETURN  (r5 I:boolean) \l}"];
MethodNode[shape=record,label="{private static boolean com.crashlytics.android.core.RemoveRepeatsStrategy.isRepeatingSequence((r5 I:java.lang.StackTraceElement[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_4;
Node_9 -> Node_10;
}

