digraph "CFG forcom.crashlytics.android.core.RemoveRepeatsStrategy.isRepeatingSequence([Ljava\/lang\/StackTraceElement;II)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r7 \- r6\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if ((r7 + r0) \<= r5.length) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|RETURN\l|return false\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|r1 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|LOOP_START\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v3 int) binds: [B:3:0x0009, B:8:0x001b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000a\-\>B:8:0x001b\l|if (r1 \>= r0) goto L_0x001e\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c}"];
Node_6 [shape=record,label="{6\:\ 0x0018|if (r5[r6 + r1].equals(r5[r7 + r1]) != false) goto L_0x001b\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|RETURN\l|return false\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|LOOP_END\lLOOP:0: B:4:0x000a\-\>B:8:0x001b\l|int r1 = r1 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|RETURN\l|return true\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static boolean com.crashlytics.android.core.RemoveRepeatsStrategy.isRepeatingSequence((r5v0 java.lang.StackTraceElement[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_10[style=dashed];
Node_8 -> Node_4;
Node_10 -> Node_7;
Node_11 -> Node_9;
}

