digraph "CFG forcom.crashlytics.android.core.CodedOutputStream.writeRawVarint32(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:4:0x0008] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:4:0x0008\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r2 & \-128) != 0) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|writeRawByte(r2)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|LOOP_END\lLOOP:0: B:0:0x0000\-\>B:4:0x0008\l|writeRawByte((r2 & 127) \| 128)\lint r2 = r2 \>\>\> 7\l}"];
Node_5 [shape=record,label="{5\:\ 0x0004|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.crashlytics.android.core.CodedOutputStream.writeRawVarint32((r1v0 'this' com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_4;
Node_1 -> Node_5[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_0;
Node_5 -> Node_2;
}

