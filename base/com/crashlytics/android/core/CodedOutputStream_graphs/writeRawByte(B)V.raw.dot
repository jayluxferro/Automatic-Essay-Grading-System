digraph "CFG forcom.crashlytics.android.core.CodedOutputStream.writeRawByte(B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.position int \l0x0002: IGET  (r1 I:int) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.limit int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.refreshBuffer():void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r0 I:byte[]) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.buffer byte[] \l0x000b: IGET  (r1 I:int) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.position int \l0x000d: ARITH  (r2 I:int) = (r1 I:int) + (1 int) \l0x000f: IPUT  \l  (r2 I:int)\l  (r3 I:com.crashlytics.android.core.CodedOutputStream)\l com.crashlytics.android.core.CodedOutputStream.position int \l0x0011: APUT  \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l  (r4 I:byte A[IMMUTABLE_TYPE])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.crashlytics.android.core.CodedOutputStream.writeRawByte((r3 'this' I:com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, THIS]), (r4 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

