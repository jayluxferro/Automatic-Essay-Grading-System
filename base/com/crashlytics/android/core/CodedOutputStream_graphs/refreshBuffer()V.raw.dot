digraph "CFG forcom.crashlytics.android.core.CodedOutputStream.refreshBuffer()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.io.OutputStream) = (r4 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.output java.io.OutputStream \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:java.io.OutputStream) = (r4 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.output java.io.OutputStream \l0x0006: IGET  (r1 I:byte[]) = (r4 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.buffer byte[] \l0x0008: IGET  (r2 I:int) = (r4 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.position int \l0x000a: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: INVOKE  \l  (r0 I:java.io.OutputStream)\l  (r1 I:byte[])\l  (r3 I:int)\l  (r2 I:int)\l java.io.OutputStream.write(byte[], int, int):void type: VIRTUAL \l0x000e: IPUT  \l  (r3 I:int)\l  (r4 I:com.crashlytics.android.core.CodedOutputStream)\l com.crashlytics.android.core.CodedOutputStream.position int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: NEW_INSTANCE  (r0 I:com.crashlytics.android.core.CodedOutputStream$OutOfSpaceException) =  com.crashlytics.android.core.CodedOutputStream$OutOfSpaceException \l0x0013: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream$OutOfSpaceException)\l com.crashlytics.android.core.CodedOutputStream.OutOfSpaceException.\<init\>():void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void com.crashlytics.android.core.CodedOutputStream.refreshBuffer((r4 'this' I:com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

