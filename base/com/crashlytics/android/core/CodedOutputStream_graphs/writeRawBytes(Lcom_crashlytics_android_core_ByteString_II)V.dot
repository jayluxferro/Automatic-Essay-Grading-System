digraph "CFG forcom.crashlytics.android.core.CodedOutputStream.writeRawBytes(Lcom\/crashlytics\/android\/core\/ByteString;II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if ((r6.limit \- r6.position) \< r9) goto L_0x0014\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|r7.copyTo(r6.buffer, r8, r6.position, r9)\lr6.position = r6.position + r9\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|int r0 = r6.limit \- r6.position\lr7.copyTo(r6.buffer, r8, r6.position, r0)\lint r8 = r8 + r0\lint r9 = r9 \- r0\lr6.position = r6.limit\lrefreshBuffer()\l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|if (r9 \> r6.limit) goto L_0x0036\l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|r7.copyTo(r6.buffer, r8, 0, r9)\lr6.position = r9\l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|java.io.InputStream r7 = r7.newInput()\llong r2 = (long) r8\l}"];
Node_7 [shape=record,label="{7\:\ 0x0041|if ((r2 \> r7.skip(r2) ? 1 : (r2 == r7.skip(r2) ? 0 : \-1)) != 0) goto L_0x0065\l}"];
Node_8 [shape=record,label="{8\:\ 0x0043|LOOP_START\lPHI: r9 \l  PHI: (r9v2 int) = (r9v1 int), (r9v3 int) binds: [B:7:0x0041, B:11:0x0053] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x0043\-\>B:11:0x0053\l|if (r9 \<= 0) goto L_0x0064\l}"];
Node_9 [shape=record,label="{9\:\ 0x0045|int r8 = java.lang.Math.min(r9, r6.limit)\lint r0 = r7.read(r6.buffer, 0, r8)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0051|if (r0 != r8) goto L_0x005c\l}"];
Node_11 [shape=record,label="{11\:\ 0x0053|LOOP_END\lLOOP:0: B:8:0x0043\-\>B:11:0x0053\l|r6.output.write(r6.buffer, 0, r0)\lint r9 = r9 \- r0\l}"];
Node_12 [shape=record,label="{12\:\ 0x005c}"];
Node_13 [shape=record,label="{13\:\ 0x0063|throw new java.lang.IllegalStateException(\"Read failed.\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x0065}"];
Node_15 [shape=record,label="{15\:\ 0x006c|throw new java.lang.IllegalStateException(\"Skip failed.\")\l}"];
Node_16 [shape=record,label="{16\:\ 0x005c|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0064|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.crashlytics.android.core.CodedOutputStream.writeRawBytes((r6v0 'this' com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, THIS]), (r7v0 com.crashlytics.android.core.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_18;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_19;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_12;
Node_17 -> Node_20;
}

