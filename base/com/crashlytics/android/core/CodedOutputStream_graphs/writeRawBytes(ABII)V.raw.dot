digraph "CFG forcom.crashlytics.android.core.CodedOutputStream.writeRawBytes([BII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.limit int \l0x0002: IGET  (r1 I:int) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.position int \l0x0004: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, byte, short, char]) \< (r6 I:?[int, byte, short, char])  \-\> B:3:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IGET  (r0 I:byte[]) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.buffer byte[] \l0x0009: IGET  (r1 I:int) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.position int \l0x000b: INVOKE  \l  (r4 I:java.lang.Object)\l  (r5 I:int)\l  (r0 I:java.lang.Object)\l  (r1 I:int)\l  (r6 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x000e: IGET  (r4 I:int) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.position int \l0x0010: ARITH  (r4 I:int) = (r4 I:int) + (r6 I:int) \l0x0011: IPUT  \l  (r4 I:int)\l  (r3 I:com.crashlytics.android.core.CodedOutputStream)\l com.crashlytics.android.core.CodedOutputStream.position int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IGET  (r0 I:int) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.limit int \l0x0016: IGET  (r1 I:int) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.position int \l0x0018: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0019: IGET  (r1 I:byte[]) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.buffer byte[] \l0x001b: IGET  (r2 I:int) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.position int \l0x001d: INVOKE  \l  (r4 I:java.lang.Object)\l  (r5 I:int)\l  (r1 I:java.lang.Object)\l  (r2 I:int)\l  (r0 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0020: ARITH  (r5 I:int) = (r5 I:int) + (r0 I:int) \l0x0021: ARITH  (r6 I:int) = (r6 I:int) \- (r0 I:int) \l0x0022: IGET  (r0 I:int) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.limit int \l0x0024: IPUT  \l  (r0 I:int)\l  (r3 I:com.crashlytics.android.core.CodedOutputStream)\l com.crashlytics.android.core.CodedOutputStream.position int \l0x0026: INVOKE  (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.refreshBuffer():void type: DIRECT \l0x0029: IGET  (r0 I:int) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.limit int \l}"];
Node_4 [shape=record,label="{4\:\ 0x002b|0x002b: IF  (r6 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:6:0x0036 \l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|0x002d: IGET  (r0 I:byte[]) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.buffer byte[] \l0x002f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0030: INVOKE  \l  (r4 I:java.lang.Object)\l  (r5 I:int)\l  (r0 I:java.lang.Object)\l  (r1 I:int)\l  (r6 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0033: IPUT  \l  (r6 I:int)\l  (r3 I:com.crashlytics.android.core.CodedOutputStream)\l com.crashlytics.android.core.CodedOutputStream.position int \l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|0x0036: IGET  (r0 I:java.io.OutputStream) = (r3 I:com.crashlytics.android.core.CodedOutputStream) com.crashlytics.android.core.CodedOutputStream.output java.io.OutputStream \l0x0038: INVOKE  \l  (r0 I:java.io.OutputStream)\l  (r4 I:byte[])\l  (r5 I:int)\l  (r6 I:int)\l java.io.OutputStream.write(byte[], int, int):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x003b|0x003b: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.crashlytics.android.core.CodedOutputStream.writeRawBytes((r3 'this' I:com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, THIS]), (r4 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
}

