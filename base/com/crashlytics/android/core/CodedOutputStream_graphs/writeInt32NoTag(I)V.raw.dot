digraph "CFG forcom.crashlytics.android.core.CodedOutputStream.writeInt32NoTag(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:2:0x0006 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  \l  (r2 I:com.crashlytics.android.core.CodedOutputStream)\l  (r3 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeRawVarint32(int):void type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CAST  (r0 I:long) = (long) (r3 I:int) \l0x0007: INVOKE  \l  (r2 I:com.crashlytics.android.core.CodedOutputStream)\l  (r0 I:long)\l com.crashlytics.android.core.CodedOutputStream.writeRawVarint64(long):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.crashlytics.android.core.CodedOutputStream.writeInt32NoTag((r2 'this' I:com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_3;
}

