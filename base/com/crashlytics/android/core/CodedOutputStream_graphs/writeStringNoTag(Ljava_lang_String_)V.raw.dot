digraph "CFG forcom.crashlytics.android.core.CodedOutputStream.writeStringNoTag(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"UTF\-8\" \l0x0002: INVOKE  (r2 I:byte[]) = (r2 I:java.lang.String), (r0 I:java.lang.String) java.lang.String.getBytes(java.lang.String):byte[] type: VIRTUAL \l0x0006: ARRAY_LENGTH  (r0 I:int) = (r2 I:?[]) \l0x0007: INVOKE  \l  (r1 I:com.crashlytics.android.core.CodedOutputStream)\l  (r0 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeRawVarint32(int):void type: VIRTUAL \l0x000a: INVOKE  \l  (r1 I:com.crashlytics.android.core.CodedOutputStream)\l  (r2 I:byte[])\l com.crashlytics.android.core.CodedOutputStream.writeRawBytes(byte[]):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.crashlytics.android.core.CodedOutputStream.writeStringNoTag((r1 'this' I:com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

