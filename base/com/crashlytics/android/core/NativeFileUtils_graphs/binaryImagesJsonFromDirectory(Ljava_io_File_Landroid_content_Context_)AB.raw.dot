digraph "CFG forcom.crashlytics.android.core.NativeFileUtils.binaryImagesJsonFromDirectory(Ljava\/io\/File;Landroid\/content\/Context;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \".binary_libs\" \l0x0002: INVOKE  (r1 I:java.io.File) = (r1 I:java.io.File), (r0 I:java.lang.String) com.crashlytics.android.core.NativeFileUtils.filter(java.io.File, java.lang.String):java.io.File type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: INVOKE  (r1 I:byte[]) = (r1 I:java.io.File), (r2 I:android.content.Context) com.crashlytics.android.core.NativeFileUtils.binaryImagesJsonFromFile(java.io.File, android.content.Context):byte[] type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: RETURN  (r1 I:byte[]) \l}"];
MethodNode[shape=record,label="{static byte[] com.crashlytics.android.core.NativeFileUtils.binaryImagesJsonFromDirectory((r1 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

