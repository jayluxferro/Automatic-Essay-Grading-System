digraph "CFG forcom.crashlytics.android.core.NativeFileUtils.readFile(Ljava\/io\/File;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: NEW_INSTANCE  (r1 I:java.io.FileInputStream) =  java.io.FileInputStream A[Catch:\{ FileNotFoundException \-\> 0x001b, IOException \-\> 0x0016, all \-\> 0x0011 \}, TRY_ENTER]\l0x0003: INVOKE  (r1 I:java.io.FileInputStream), (r2 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT A[Catch:\{ FileNotFoundException \-\> 0x001b, IOException \-\> 0x0016, all \-\> 0x0011 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|SYNTHETIC\lSplitter:B:3:0x0006\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0006\l|0x0006: INVOKE  (r2 I:byte[]) = (r1 I:java.io.InputStream) com.crashlytics.android.core.NativeFileUtils.readBytes(java.io.InputStream):byte[] type: STATIC A[Catch:\{ FileNotFoundException \-\> 0x001c, IOException \-\> 0x0017, all \-\> 0x000e \}, TRY_ENTER]\l0x0009: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: INVOKE  (r1 I:java.io.Closeable) io.fabric.sdk.android.services.common.CommonUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: RETURN  (r2 I:byte[]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|ExcHandler: all null\lSplitter:B:3:0x0006\l|0x000e: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0011: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|0x0012: INVOKE  (r0 I:java.io.Closeable) io.fabric.sdk.android.services.common.CommonUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|0x0015: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0016|0x0016: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:1:0x0001\l}"];
Node_14 [shape=record,label="{14\:\ 0x0017|0x0017: INVOKE  (r1 I:java.io.Closeable) io.fabric.sdk.android.services.common.CommonUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:3:0x0006\l}"];
Node_16 [shape=record,label="{16\:\ 0x001a|0x001a: RETURN  (r0 I:byte[]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x001b|0x001b: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lExcHandler: FileNotFoundException null\lSplitter:B:1:0x0001\l}"];
Node_19 [shape=record,label="{19\:\ 0x001c|0x001c: INVOKE  (r1 I:java.io.Closeable) io.fabric.sdk.android.services.common.CommonUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lExcHandler: FileNotFoundException null\lSplitter:B:3:0x0006\l}"];
Node_21 [shape=record,label="{21\:\ 0x001f|0x001f: RETURN  (r0 I:byte[]) \l}"];
MethodNode[shape=record,label="{static byte[] com.crashlytics.android.core.NativeFileUtils.readFile((r2 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_18;
Node_1 -> Node_13;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_2 -> Node_18;
Node_2 -> Node_13;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_3 -> Node_20;
Node_3 -> Node_15;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_14;
Node_13 -> Node_12;
Node_14 -> Node_16;
Node_15 -> Node_14;
Node_17 -> Node_19;
Node_18 -> Node_17;
Node_19 -> Node_21;
Node_20 -> Node_19;
}

