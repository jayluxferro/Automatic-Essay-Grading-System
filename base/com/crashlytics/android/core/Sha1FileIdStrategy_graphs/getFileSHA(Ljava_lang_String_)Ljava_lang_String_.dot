digraph "CFG forcom.crashlytics.android.core.Sha1FileIdStrategy.getFileSHA(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x0016 \}\lSplitter:B:1:0x0001\l|java.io.BufferedInputStream r1 = new java.io.BufferedInputStream(new java.io.FileInputStream(r3))     \/\/ Catch:\{ all \-\> 0x0016 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|SYNTHETIC\lSplitter:B:3:0x000b\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ all \-\> 0x0013 \}\lSplitter:B:3:0x000b\l|java.lang.String r3 = p018io.fabric.sdk.android.services.common.CommonUtils.sha1((java.io.InputStream) r1)     \/\/ Catch:\{ all \-\> 0x0013 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|p018io.fabric.sdk.android.services.common.CommonUtils.closeQuietly(r1)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|RETURN\l|return r3\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:3:0x000b\l|java.lang.Throwable r3 = th\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|r0 = r1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:1:0x0001\l|java.lang.Throwable r3 = th\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|PHI: r0 r3 \l  PHI: (r0v1 java.io.BufferedInputStream) = (r0v0 java.io.BufferedInputStream), (r0v2 java.io.BufferedInputStream) binds: [B:9:0x0016, B:8:0x0014] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'th' java.lang.Throwable) = (r3v2 'th' java.lang.Throwable), (r3v3 'th' java.lang.Throwable) binds: [B:9:0x0016, B:8:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|p018io.fabric.sdk.android.services.common.CommonUtils.closeQuietly(r0)\l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|throw r3\l}"];
MethodNode[shape=record,label="{private static java.lang.String com.crashlytics.android.core.Sha1FileIdStrategy.getFileSHA((r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

