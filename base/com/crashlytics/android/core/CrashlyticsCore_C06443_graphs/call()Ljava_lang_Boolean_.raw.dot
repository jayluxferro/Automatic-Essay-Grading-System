digraph "CFG forcom.crashlytics.android.core.CrashlyticsCore.3.call()Ljava\/lang\/Boolean;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:com.crashlytics.android.core.CrashlyticsCore) = (r5 I:com.crashlytics.android.core.CrashlyticsCore$3) com.crashlytics.android.core.CrashlyticsCore.3.this$0 com.crashlytics.android.core.CrashlyticsCore A[Catch:\{ Exception \-\> 0x0029 \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:com.crashlytics.android.core.CrashlyticsFileMarker) = (r0 I:com.crashlytics.android.core.CrashlyticsCore) com.crashlytics.android.core.CrashlyticsCore.access$100(com.crashlytics.android.core.CrashlyticsCore):com.crashlytics.android.core.CrashlyticsFileMarker type: STATIC A[Catch:\{ Exception \-\> 0x0029 \}]\l0x0006: INVOKE  (r0 I:boolean) = (r0 I:com.crashlytics.android.core.CrashlyticsFileMarker) com.crashlytics.android.core.CrashlyticsFileMarker.remove():boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x0029 \}]\l0x000a: INVOKE  (r1 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC A[Catch:\{ Exception \-\> 0x0029 \}]\l0x000e: CONST_STR  (r2 I:java.lang.String) =  \"CrashlyticsCore\" A[Catch:\{ Exception \-\> 0x0029 \}]\l0x0010: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Exception \-\> 0x0029 \}]\l0x0012: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Exception \-\> 0x0029 \}]\l0x0015: CONST_STR  (r4 I:java.lang.String) =  \"Initialization marker file removed: \" A[Catch:\{ Exception \-\> 0x0029 \}]\l0x0017: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x0029 \}]\l0x001a: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:boolean) java.lang.StringBuilder.append(boolean):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x0029 \}]\l0x001d: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x0029 \}]\l0x0021: INVOKE  \l  (r1 I:io.fabric.sdk.android.Logger)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l io.fabric.sdk.android.Logger.d(java.lang.String, java.lang.String):void type: INTERFACE A[Catch:\{ Exception \-\> 0x0029 \}]\l0x0024: INVOKE  (r0 I:java.lang.Boolean) = (r0 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC A[Catch:\{ Exception \-\> 0x0029 \}]\l0x0027: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0028|0x0028: RETURN  (r0 I:java.lang.Boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|ExcHandler: Exception null\lSplitter:B:0:0x0000\l|0x0029: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|0x002a: INVOKE  (r1 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x002e: CONST_STR  (r2 I:java.lang.String) =  \"CrashlyticsCore\" \l0x0030: CONST_STR  (r3 I:java.lang.String) =  \"Problem encountered deleting Crashlytics initialization marker.\" \l0x0032: INVOKE  \l  (r1 I:io.fabric.sdk.android.Logger)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l io.fabric.sdk.android.Logger.e(java.lang.String, java.lang.String, java.lang.Throwable):void type: INTERFACE \l0x0035: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0036: INVOKE  (r0 I:java.lang.Boolean) = (r0 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x003a|0x003a: RETURN  (r0 I:java.lang.Boolean) \l}"];
MethodNode[shape=record,label="{public java.lang.Boolean com.crashlytics.android.core.CrashlyticsCore.3.call((r5 'this' I:com.crashlytics.android.core.CrashlyticsCore$3 A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

