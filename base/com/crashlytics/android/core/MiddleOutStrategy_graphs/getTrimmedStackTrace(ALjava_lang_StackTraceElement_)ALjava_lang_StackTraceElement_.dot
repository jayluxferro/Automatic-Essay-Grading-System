digraph "CFG forcom.crashlytics.android.core.MiddleOutStrategy.getTrimmedStackTrace([Ljava\/lang\/StackTraceElement;)[Ljava\/lang\/StackTraceElement;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r5.length \> r4.trimmedSize) goto L_0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|RETURN\l|return r5\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|int r0 = r4.trimmedSize \/ 2\lint r1 = r4.trimmedSize \- r0\ljava.lang.StackTraceElement[] r2 = new java.lang.StackTraceElement[r4.trimmedSize]\ljava.lang.System.arraycopy(r5, 0, r2, 0, r1)\ljava.lang.System.arraycopy(r5, r5.length \- r0, r2, r1, r0)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|RETURN\l|return r2\l}"];
MethodNode[shape=record,label="{public java.lang.StackTraceElement[] com.crashlytics.android.core.MiddleOutStrategy.getTrimmedStackTrace((r4v0 'this' com.crashlytics.android.core.MiddleOutStrategy A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.StackTraceElement[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

