digraph "CFG forcom.crashlytics.android.core.CrashlyticsCore.checkForPreviousCrash()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.crashlytics.android.core.CrashlyticsBackgroundWorker) = (r4 I:com.crashlytics.android.core.CrashlyticsCore) com.crashlytics.android.core.CrashlyticsCore.backgroundWorker com.crashlytics.android.core.CrashlyticsBackgroundWorker \l0x0002: NEW_INSTANCE  (r1 I:com.crashlytics.android.core.CrashlyticsCore$CrashMarkerCheck) =  com.crashlytics.android.core.CrashlyticsCore$CrashMarkerCheck \l0x0004: IGET  (r2 I:com.crashlytics.android.core.CrashlyticsFileMarker) = (r4 I:com.crashlytics.android.core.CrashlyticsCore) com.crashlytics.android.core.CrashlyticsCore.crashMarker com.crashlytics.android.core.CrashlyticsFileMarker \l0x0006: INVOKE  \l  (r1 I:com.crashlytics.android.core.CrashlyticsCore$CrashMarkerCheck)\l  (r2 I:com.crashlytics.android.core.CrashlyticsFileMarker)\l com.crashlytics.android.core.CrashlyticsCore.CrashMarkerCheck.\<init\>(com.crashlytics.android.core.CrashlyticsFileMarker):void type: DIRECT \l0x0009: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.crashlytics.android.core.CrashlyticsBackgroundWorker)\l  (r1 I:java.util.concurrent.Callable)\l com.crashlytics.android.core.CrashlyticsBackgroundWorker.submitAndWait(java.util.concurrent.Callable):java.lang.Object type: VIRTUAL \l0x000d: CHECK_CAST  (r0 I:java.lang.Boolean) = (java.lang.Boolean) (r0 I:?[OBJECT, ARRAY]) \l0x000f: SGET  (r1 I:java.lang.Boolean) =  java.lang.Boolean.TRUE java.lang.Boolean \l0x0011: INVOKE  (r0 I:boolean) = (r1 I:java.lang.Boolean), (r0 I:java.lang.Object) java.lang.Boolean.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|SYNTHETIC\lSplitter:B:3:0x0018\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0018\l|0x0018: IGET  (r0 I:com.crashlytics.android.core.CrashlyticsListener) = (r4 I:com.crashlytics.android.core.CrashlyticsCore) com.crashlytics.android.core.CrashlyticsCore.listener com.crashlytics.android.core.CrashlyticsListener A[Catch:\{ Exception \-\> 0x001e \}, TRY_ENTER]\l0x001a: INVOKE  (r0 I:com.crashlytics.android.core.CrashlyticsListener) com.crashlytics.android.core.CrashlyticsListener.crashlyticsDidDetectCrashDuringPreviousExecution():void type: INTERFACE A[Catch:\{ Exception \-\> 0x001e \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|ExcHandler: Exception null\lSplitter:B:3:0x0018\l|0x001e: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: INVOKE  (r1 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x0023: CONST_STR  (r2 I:java.lang.String) =  \"CrashlyticsCore\" \l0x0025: CONST_STR  (r3 I:java.lang.String) =  \"Exception thrown by CrashlyticsListener while notifying of previous crash.\" \l0x0027: INVOKE  \l  (r1 I:io.fabric.sdk.android.Logger)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l io.fabric.sdk.android.Logger.e(java.lang.String, java.lang.String, java.lang.Throwable):void type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.crashlytics.android.core.CrashlyticsCore.checkForPreviousCrash((r4 'this' I:com.crashlytics.android.core.CrashlyticsCore A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_6;
Node_4 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

