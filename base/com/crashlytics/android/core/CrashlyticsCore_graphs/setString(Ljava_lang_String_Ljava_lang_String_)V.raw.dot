digraph "CFG forcom.crashlytics.android.core.CrashlyticsCore.setString(Ljava\/lang\/String;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r2 I:com.crashlytics.android.core.CrashlyticsCore) com.crashlytics.android.core.CrashlyticsCore.disabled boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: CONST_STR  (r0 I:java.lang.String) =  \"prior to setting keys.\" \l0x0007: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String) com.crashlytics.android.core.CrashlyticsCore.ensureFabricWithCalled(java.lang.String):boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000e \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0032 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: INVOKE  (r3 I:android.content.Context) = (r2 I:com.crashlytics.android.core.CrashlyticsCore) com.crashlytics.android.core.CrashlyticsCore.getContext():android.content.Context type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0025 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|0x0016: INVOKE  (r3 I:boolean) = (r3 I:android.content.Context) io.fabric.sdk.android.services.common.CommonUtils.isAppDebuggable(android.content.Context):boolean type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x001d \l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x001f: CONST_STR  (r4 I:java.lang.String) =  \"Custom attribute key must not be null.\" \l0x0021: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|0x0024: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|0x0025: INVOKE  (r3 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x0029: CONST_STR  (r4 I:java.lang.String) =  \"CrashlyticsCore\" \l0x002b: CONST_STR  (r0 I:java.lang.String) =  \"Attempting to set custom attribute with null key, ignoring.\" \l0x002d: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002e: INVOKE  \l  (r3 I:io.fabric.sdk.android.Logger)\l  (r4 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Throwable)\l io.fabric.sdk.android.Logger.e(java.lang.String, java.lang.String, java.lang.Throwable):void type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0031: RETURN   \l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|0x0032: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String) com.crashlytics.android.core.CrashlyticsCore.sanitizeAttribute(java.lang.String):java.lang.String type: STATIC \l0x0036: IGET  (r0 I:java.util.concurrent.ConcurrentHashMap\<java.lang.String, java.lang.String\>) = (r2 I:com.crashlytics.android.core.CrashlyticsCore) com.crashlytics.android.core.CrashlyticsCore.attributes java.util.concurrent.ConcurrentHashMap \l0x0038: INVOKE  (r0 I:int) = (r0 I:java.util.concurrent.ConcurrentHashMap) java.util.concurrent.ConcurrentHashMap.size():int type: VIRTUAL \l0x003c: CONST  (r1 I:?[int, float, short, byte, char]) = (64 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x003e|0x003e: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:22:0x0054 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0040|0x0040: IGET  (r0 I:java.util.concurrent.ConcurrentHashMap\<java.lang.String, java.lang.String\>) = (r2 I:com.crashlytics.android.core.CrashlyticsCore) com.crashlytics.android.core.CrashlyticsCore.attributes java.util.concurrent.ConcurrentHashMap \l0x0042: INVOKE  (r0 I:boolean) = \l  (r0 I:java.util.concurrent.ConcurrentHashMap)\l  (r3 I:java.lang.Object)\l java.util.concurrent.ConcurrentHashMap.containsKey(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0046|0x0046: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0054 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0048|0x0048: INVOKE  (r3 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x004c: CONST_STR  (r4 I:java.lang.String) =  \"CrashlyticsCore\" \l0x004e: CONST_STR  (r0 I:java.lang.String) =  \"Exceeded maximum number of custom attributes (64)\" \l0x0050: INVOKE  \l  (r3 I:io.fabric.sdk.android.Logger)\l  (r4 I:java.lang.String)\l  (r0 I:java.lang.String)\l io.fabric.sdk.android.Logger.d(java.lang.String, java.lang.String):void type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x0053|0x0053: RETURN   \l}"];
Node_22 [shape=record,label="{22\:\ 0x0054|0x0054: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0059 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0056|0x0056: CONST_STR  (r4 I:java.lang.String) =  \"\" \l}"];
Node_24 [shape=record,label="{24\:\ 0x0059|0x0059: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String) com.crashlytics.android.core.CrashlyticsCore.sanitizeAttribute(java.lang.String):java.lang.String type: STATIC \l}"];
Node_25 [shape=record,label="{25\:\ 0x005d|0x005d: IGET  (r0 I:java.util.concurrent.ConcurrentHashMap\<java.lang.String, java.lang.String\>) = (r2 I:com.crashlytics.android.core.CrashlyticsCore) com.crashlytics.android.core.CrashlyticsCore.attributes java.util.concurrent.ConcurrentHashMap \l0x005f: INVOKE  \l  (r0 I:java.util.concurrent.ConcurrentHashMap)\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l java.util.concurrent.ConcurrentHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l0x0062: IGET  (r3 I:com.crashlytics.android.core.CrashlyticsController) = (r2 I:com.crashlytics.android.core.CrashlyticsCore) com.crashlytics.android.core.CrashlyticsCore.controller com.crashlytics.android.core.CrashlyticsController \l0x0064: IGET  (r4 I:java.util.concurrent.ConcurrentHashMap\<java.lang.String, java.lang.String\>) = (r2 I:com.crashlytics.android.core.CrashlyticsCore) com.crashlytics.android.core.CrashlyticsCore.attributes java.util.concurrent.ConcurrentHashMap \l0x0066: INVOKE  \l  (r3 I:com.crashlytics.android.core.CrashlyticsController)\l  (r4 I:java.util.Map)\l com.crashlytics.android.core.CrashlyticsController.cacheKeyData(java.util.Map):void type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0069|0x0069: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.crashlytics.android.core.CrashlyticsCore.setString((r2 'this' I:com.crashlytics.android.core.CrashlyticsCore A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_16;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_14[style=dashed];
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
}

