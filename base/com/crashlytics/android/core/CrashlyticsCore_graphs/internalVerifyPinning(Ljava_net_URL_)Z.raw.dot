digraph "CFG forcom.crashlytics.android.core.CrashlyticsCore.internalVerifyPinning(Ljava\/net\/URL;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.crashlytics.android.core.PinningInfoProvider) = (r3 I:com.crashlytics.android.core.CrashlyticsCore) com.crashlytics.android.core.CrashlyticsCore.getPinningInfoProvider():com.crashlytics.android.core.PinningInfoProvider type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0021 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IGET  (r0 I:io.fabric.sdk.android.services.network.HttpRequestFactory) = (r3 I:com.crashlytics.android.core.CrashlyticsCore) com.crashlytics.android.core.CrashlyticsCore.httpRequestFactory io.fabric.sdk.android.services.network.HttpRequestFactory \l0x0009: SGET  (r2 I:io.fabric.sdk.android.services.network.HttpMethod) =  io.fabric.sdk.android.services.network.HttpMethod.GET io.fabric.sdk.android.services.network.HttpMethod \l0x000b: INVOKE  (r4 I:java.lang.String) = (r4 I:java.net.URL) java.net.URL.toString():java.lang.String type: VIRTUAL \l0x000f: INVOKE  (r4 I:io.fabric.sdk.android.services.network.HttpRequest) = \l  (r0 I:io.fabric.sdk.android.services.network.HttpRequestFactory)\l  (r2 I:io.fabric.sdk.android.services.network.HttpMethod)\l  (r4 I:java.lang.String)\l io.fabric.sdk.android.services.network.HttpRequestFactory.buildHttpRequest(io.fabric.sdk.android.services.network.HttpMethod, java.lang.String):io.fabric.sdk.android.services.network.HttpRequest type: INTERFACE \l0x0013: INVOKE  (r0 I:java.net.HttpURLConnection) = (r4 I:io.fabric.sdk.android.services.network.HttpRequest) io.fabric.sdk.android.services.network.HttpRequest.getConnection():java.net.HttpURLConnection type: VIRTUAL \l0x0017: CHECK_CAST  (r0 I:javax.net.ssl.HttpsURLConnection) = (javax.net.ssl.HttpsURLConnection) (r0 I:?[OBJECT, ARRAY]) \l0x0019: INVOKE  (r0 I:javax.net.ssl.HttpsURLConnection), (r1 I:boolean) javax.net.ssl.HttpsURLConnection.setInstanceFollowRedirects(boolean):void type: VIRTUAL \l0x001c: INVOKE  (r4 I:io.fabric.sdk.android.services.network.HttpRequest) io.fabric.sdk.android.services.network.HttpRequest.code():int type: VIRTUAL \l0x001f: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|0x0020: RETURN  (r4 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean com.crashlytics.android.core.CrashlyticsCore.internalVerifyPinning((r3 'this' I:com.crashlytics.android.core.CrashlyticsCore A[IMMUTABLE_TYPE, THIS]), (r4 I:java.net.URL A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

