digraph "CFG forcom.crashlytics.android.core.CrashlyticsCore.setListener(Lcom\/crashlytics\/android\/core\/CrashlyticsListener;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r0 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC A[Catch:\{ all \-\> 0x001a \}, TRY_ENTER]\l0x0005: CONST_STR  (r1 I:java.lang.String) =  \"CrashlyticsCore\" A[Catch:\{ all \-\> 0x001a \}]\l0x0007: CONST_STR  (r2 I:java.lang.String) =  \"Use of setListener is deprecated.\" A[Catch:\{ all \-\> 0x001a \}]\l0x0009: INVOKE  \l  (r0 I:io.fabric.sdk.android.Logger)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l io.fabric.sdk.android.Logger.w(java.lang.String, java.lang.String):void type: INTERFACE A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0012 A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IPUT  \l  (r4 I:com.crashlytics.android.core.CrashlyticsListener)\l  (r3 I:com.crashlytics.android.core.CrashlyticsCore)\l com.crashlytics.android.core.CrashlyticsCore.listener com.crashlytics.android.core.CrashlyticsListener A[Catch:\{ all \-\> 0x001a \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|SYNTHETIC\lSplitter:B:7:0x0012\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0012\l|0x0012: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException A[Catch:\{ all \-\> 0x001a \}, TRY_ENTER]\l0x0014: CONST_STR  (r0 I:java.lang.String) =  \"listener must not be null.\" A[Catch:\{ all \-\> 0x001a \}]\l0x0016: INVOKE  \l  (r4 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: THROW  (r4 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x001a \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x001a: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|0x001c: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void com.crashlytics.android.core.CrashlyticsCore.setListener((r3 'this' I:com.crashlytics.android.core.CrashlyticsCore A[IMMUTABLE_TYPE, THIS]), (r4 I:com.crashlytics.android.core.CrashlyticsListener A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, java.lang.Deprecated, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

