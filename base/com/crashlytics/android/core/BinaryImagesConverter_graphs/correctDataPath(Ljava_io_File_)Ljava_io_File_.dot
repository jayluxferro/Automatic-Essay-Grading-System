digraph "CFG forcom.crashlytics.android.core.BinaryImagesConverter.correctDataPath(Ljava\/io\/File;)Ljava\/io\/File;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 9) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return r5\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007}"];
Node_4 [shape=record,label="{4\:\ 0x0011|if (r5.getAbsolutePath().startsWith(DATA_DIR) == false) goto L_?\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|SYNTHETIC\lSplitter:B:5:0x0013\l}"];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ NameNotFoundException \-\> 0x0031 \}\lSplitter:B:5:0x0013\l}"];
Node_7 [shape=record,label="{7\:\ 0x002f}"];
Node_8 [shape=record,label="{8\:\ 0x0031|ExcHandler: NameNotFoundException (r0v3 'e' android.content.pm.PackageManager$NameNotFoundException A[CUSTOM_DECLARE])\lSplitter:B:5:0x0013\l|android.content.pm.PackageManager$NameNotFoundException r0 = move\-exception\l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|p018io.fabric.sdk.android.Fabric.getLogger().mo22224e(com.crashlytics.android.core.CrashlyticsCore.TAG, \"Error getting ApplicationInfo\", r0)\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r5\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return r5\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return new java.io.File(r4.context.getPackageManager().getApplicationInfo(r4.context.getPackageName(), 0).nativeLibraryDir, r5.getName())\l}"];
MethodNode[shape=record,label="{private java.io.File com.crashlytics.android.core.BinaryImagesConverter.correctDataPath((r4v0 'this' com.crashlytics.android.core.BinaryImagesConverter A[IMMUTABLE_TYPE, THIS]), (r5v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

