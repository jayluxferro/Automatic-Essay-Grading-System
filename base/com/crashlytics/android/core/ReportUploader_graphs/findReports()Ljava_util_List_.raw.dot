digraph "CFG forcom.crashlytics.android.core.ReportUploader.findReports()Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x0004: CONST_STR  (r1 I:java.lang.String) =  \"CrashlyticsCore\" \l0x0006: CONST_STR  (r2 I:java.lang.String) =  \"Checking for crash reports...\" \l0x0008: INVOKE  \l  (r0 I:io.fabric.sdk.android.Logger)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l io.fabric.sdk.android.Logger.d(java.lang.String, java.lang.String):void type: INTERFACE \l0x000b: IGET  (r0 I:java.lang.Object) = (r12 I:com.crashlytics.android.core.ReportUploader) com.crashlytics.android.core.ReportUploader.fileAccessLock java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|SYNTHETIC\lSplitter:B:2:0x000e\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x000e\l|0x000e: IGET  (r1 I:com.crashlytics.android.core.ReportUploader$ReportFilesProvider) = (r12 I:com.crashlytics.android.core.ReportUploader) com.crashlytics.android.core.ReportUploader.reportFilesProvider com.crashlytics.android.core.ReportUploader$ReportFilesProvider A[Catch:\{ all \-\> 0x00f0 \}, TRY_ENTER]\l0x0010: INVOKE  (r1 I:java.io.File[]) = \l  (r1 I:com.crashlytics.android.core.ReportUploader$ReportFilesProvider)\l com.crashlytics.android.core.ReportUploader.ReportFilesProvider.getCompleteSessionFiles():java.io.File[] type: INTERFACE A[Catch:\{ all \-\> 0x00f0 \}]\l0x0014: IGET  (r2 I:com.crashlytics.android.core.ReportUploader$ReportFilesProvider) = (r12 I:com.crashlytics.android.core.ReportUploader) com.crashlytics.android.core.ReportUploader.reportFilesProvider com.crashlytics.android.core.ReportUploader$ReportFilesProvider A[Catch:\{ all \-\> 0x00f0 \}]\l0x0016: INVOKE  (r2 I:java.io.File[]) = \l  (r2 I:com.crashlytics.android.core.ReportUploader$ReportFilesProvider)\l com.crashlytics.android.core.ReportUploader.ReportFilesProvider.getInvalidSessionFiles():java.io.File[] type: INTERFACE A[Catch:\{ all \-\> 0x00f0 \}]\l0x001a: IGET  (r3 I:com.crashlytics.android.core.ReportUploader$ReportFilesProvider) = (r12 I:com.crashlytics.android.core.ReportUploader) com.crashlytics.android.core.ReportUploader.reportFilesProvider com.crashlytics.android.core.ReportUploader$ReportFilesProvider A[Catch:\{ all \-\> 0x00f0 \}]\l0x001c: INVOKE  (r3 I:java.io.File[]) = \l  (r3 I:com.crashlytics.android.core.ReportUploader$ReportFilesProvider)\l com.crashlytics.android.core.ReportUploader.ReportFilesProvider.getNativeReportFiles():java.io.File[] type: INTERFACE A[Catch:\{ all \-\> 0x00f0 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x00f0 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: NEW_INSTANCE  (r0 I:java.util.LinkedList) =  java.util.LinkedList \l0x0023: INVOKE  (r0 I:java.util.LinkedList) java.util.LinkedList.\<init\>():void type: DIRECT \l0x0026: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0058 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: ARRAY_LENGTH  (r5 I:int) = (r1 I:?[]) \l0x002a: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|0x002b: IF  (r6 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:10:0x0058 \l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: AGET  (r7 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r6 I:?[int, short, byte, char]) \l0x002f: INVOKE  (r8 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x0033: CONST_STR  (r9 I:java.lang.String) =  \"CrashlyticsCore\" \l0x0035: NEW_INSTANCE  (r10 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0037: INVOKE  (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x003a: CONST_STR  (r11 I:java.lang.String) =  \"Found crash report \" \l0x003c: INVOKE  (r10 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003f: INVOKE  (r11 I:java.lang.String) = (r7 I:java.io.File) java.io.File.getPath():java.lang.String type: VIRTUAL \l0x0043: INVOKE  (r10 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0046: INVOKE  (r10 I:java.lang.String) = (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004a: INVOKE  \l  (r8 I:io.fabric.sdk.android.Logger)\l  (r9 I:java.lang.String)\l  (r10 I:java.lang.String)\l io.fabric.sdk.android.Logger.d(java.lang.String, java.lang.String):void type: INTERFACE \l0x004d: NEW_INSTANCE  (r8 I:com.crashlytics.android.core.SessionReport) =  com.crashlytics.android.core.SessionReport \l0x004f: INVOKE  \l  (r8 I:com.crashlytics.android.core.SessionReport)\l  (r7 I:java.io.File)\l com.crashlytics.android.core.SessionReport.\<init\>(java.io.File):void type: DIRECT \l0x0052: INVOKE  (r0 I:java.util.List), (r8 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0055: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0058|0x0058: NEW_INSTANCE  (r1 I:java.util.HashMap) =  java.util.HashMap \l0x005a: INVOKE  (r1 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x005d|0x005d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0083 \l}"];
Node_12 [shape=record,label="{12\:\ 0x005f|0x005f: ARRAY_LENGTH  (r5 I:int) = (r2 I:?[]) \l0x0060: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0061|0x0061: IF  (r6 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:18:0x0083 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0063|0x0063: AGET  (r7 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r6 I:?[int, short, byte, char]) \l0x0065: INVOKE  (r8 I:java.lang.String) = (r7 I:java.io.File) com.crashlytics.android.core.CrashlyticsController.getSessionIdFromSessionFile(java.io.File):java.lang.String type: STATIC \l0x0069: INVOKE  (r9 I:boolean) = (r1 I:java.util.Map), (r8 I:java.lang.Object) java.util.Map.containsKey(java.lang.Object):boolean type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x006d|0x006d: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0077 \l}"];
Node_16 [shape=record,label="{16\:\ 0x006f|0x006f: NEW_INSTANCE  (r9 I:java.util.LinkedList) =  java.util.LinkedList \l0x0071: INVOKE  (r9 I:java.util.LinkedList) java.util.LinkedList.\<init\>():void type: DIRECT \l0x0074: INVOKE  \l  (r1 I:java.util.Map)\l  (r8 I:java.lang.Object)\l  (r9 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_17 [shape=record,label="{17\:\ 0x0077|0x0077: INVOKE  (r8 I:java.lang.Object) = (r1 I:java.util.Map), (r8 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x007b: CHECK_CAST  (r8 I:java.util.List) = (java.util.List) (r8 I:?[OBJECT, ARRAY]) \l0x007d: INVOKE  (r8 I:java.util.List), (r7 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0080: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0083|0x0083: INVOKE  (r2 I:java.util.Set) = (r1 I:java.util.Map) java.util.Map.keySet():java.util.Set type: INTERFACE \l0x0087: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_19 [shape=record,label="{19\:\ 0x008b|0x008b: INVOKE  (r5 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_20 [shape=record,label="{20\:\ 0x008f|0x008f: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x00cc \l}"];
Node_21 [shape=record,label="{21\:\ 0x0091|0x0091: INVOKE  (r5 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0095: CHECK_CAST  (r5 I:java.lang.String) = (java.lang.String) (r5 I:?[OBJECT, ARRAY]) \l0x0097: INVOKE  (r6 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x009b: CONST_STR  (r7 I:java.lang.String) =  \"CrashlyticsCore\" \l0x009d: NEW_INSTANCE  (r8 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x009f: INVOKE  (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00a2: CONST_STR  (r9 I:java.lang.String) =  \"Found invalid session: \" \l0x00a4: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a7: INVOKE  (r8 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00aa: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00ae: INVOKE  \l  (r6 I:io.fabric.sdk.android.Logger)\l  (r7 I:java.lang.String)\l  (r8 I:java.lang.String)\l io.fabric.sdk.android.Logger.d(java.lang.String, java.lang.String):void type: INTERFACE \l0x00b1: INVOKE  (r6 I:java.lang.Object) = (r1 I:java.util.Map), (r5 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x00b5: CHECK_CAST  (r6 I:java.util.List) = (java.util.List) (r6 I:?[OBJECT, ARRAY]) \l0x00b7: NEW_INSTANCE  (r7 I:com.crashlytics.android.core.InvalidSessionReport) =  com.crashlytics.android.core.InvalidSessionReport \l0x00b9: INVOKE  (r8 I:int) = (r6 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x00bd: NEW_ARRAY  (r8 I:java.io.File[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: java.io.File[] \l0x00bf: INVOKE  (r6 I:java.lang.Object[]) = (r6 I:java.util.List), (r8 I:java.lang.Object[]) java.util.List.toArray(java.lang.Object[]):java.lang.Object[] type: INTERFACE \l0x00c3: CHECK_CAST  (r6 I:java.io.File[]) = (java.io.File[]) (r6 I:?[OBJECT, ARRAY]) \l0x00c5: INVOKE  \l  (r7 I:com.crashlytics.android.core.InvalidSessionReport)\l  (r5 I:java.lang.String)\l  (r6 I:java.io.File[])\l com.crashlytics.android.core.InvalidSessionReport.\<init\>(java.lang.String, java.io.File[]):void type: DIRECT \l0x00c8: INVOKE  (r0 I:java.util.List), (r7 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x00cc|0x00cc: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x00de \l}"];
Node_23 [shape=record,label="{23\:\ 0x00ce|0x00ce: ARRAY_LENGTH  (r1 I:int) = (r3 I:?[]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x00cf|0x00cf: IF  (r4 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:26:0x00de \l}"];
Node_25 [shape=record,label="{25\:\ 0x00d1|0x00d1: AGET  (r2 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x00d3: NEW_INSTANCE  (r5 I:com.crashlytics.android.core.NativeSessionReport) =  com.crashlytics.android.core.NativeSessionReport \l0x00d5: INVOKE  \l  (r5 I:com.crashlytics.android.core.NativeSessionReport)\l  (r2 I:java.io.File)\l com.crashlytics.android.core.NativeSessionReport.\<init\>(java.io.File):void type: DIRECT \l0x00d8: INVOKE  (r0 I:java.util.List), (r5 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x00db: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x00de|0x00de: INVOKE  (r1 I:boolean) = (r0 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_27 [shape=record,label="{27\:\ 0x00e2|0x00e2: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00ef \l}"];
Node_28 [shape=record,label="{28\:\ 0x00e4|0x00e4: INVOKE  (r1 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x00e8: CONST_STR  (r2 I:java.lang.String) =  \"CrashlyticsCore\" \l0x00ea: CONST_STR  (r3 I:java.lang.String) =  \"No reports found.\" \l0x00ec: INVOKE  \l  (r1 I:io.fabric.sdk.android.Logger)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l io.fabric.sdk.android.Logger.d(java.lang.String, java.lang.String):void type: INTERFACE \l}"];
Node_29 [shape=record,label="{29\:\ 0x00ef|0x00ef: RETURN  (r0 I:java.util.List\<com.crashlytics.android.core.Report\>) \l}"];
Node_30 [shape=record,label="{30\:\ 0x00f0|ExcHandler: all null\lSplitter:B:2:0x000e\l|0x00f0: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_31 [shape=record,label="{31\:\ 0x00f1|SYNTHETIC\lSplitter:B:31:0x00f1\l}"];
Node_32 [shape=record,label="{32\:\ ?|Splitter:B:31:0x00f1\l|0x00f1: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x00f0 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_33 [shape=record,label="{33\:\ 0x00f2|0x00f2: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{java.util.List\<com.crashlytics.android.core.Report\> com.crashlytics.android.core.ReportUploader.findReports((r12 'this' I:com.crashlytics.android.core.ReportUploader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/List\<, Lcom\/crashlytics\/android\/core\/Report;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_30;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_8;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_19;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_24;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_30;
Node_32 -> Node_33;
Node_32 -> Node_30;
}

