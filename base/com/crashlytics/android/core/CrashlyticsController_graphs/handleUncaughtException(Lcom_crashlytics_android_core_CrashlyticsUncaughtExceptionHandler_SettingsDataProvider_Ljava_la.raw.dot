digraph "CFG forcom.crashlytics.android.core.CrashlyticsController.handleUncaughtException(Lcom\/crashlytics\/android\/core\/CrashlyticsUncaughtExceptionHandler$SettingsDataProvider;Ljava\/lang\/Thread;Ljava\/lang\/Throwable;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r0 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC A[Catch:\{ all \-\> 0x0043 \}, TRY_ENTER]\l0x0005: CONST_STR  (r1 I:java.lang.String) =  \"CrashlyticsCore\" A[Catch:\{ all \-\> 0x0043 \}]\l0x0007: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0043 \}]\l0x0009: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0043 \}]\l0x000c: CONST_STR  (r3 I:java.lang.String) =  \"Crashlytics is handling uncaught exception \"\" A[Catch:\{ all \-\> 0x0043 \}]\l0x000e: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0043 \}]\l0x0011: INVOKE  (r2 I:java.lang.StringBuilder), (r12 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0043 \}]\l0x0014: CONST_STR  (r3 I:java.lang.String) =  \"\" from thread \" A[Catch:\{ all \-\> 0x0043 \}]\l0x0016: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0043 \}]\l0x0019: INVOKE  (r3 I:java.lang.String) = (r11 I:java.lang.Thread) java.lang.Thread.getName():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0043 \}]\l0x001d: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0043 \}]\l0x0020: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0043 \}]\l0x0024: INVOKE  \l  (r0 I:io.fabric.sdk.android.Logger)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l io.fabric.sdk.android.Logger.d(java.lang.String, java.lang.String):void type: INTERFACE A[Catch:\{ all \-\> 0x0043 \}]\l0x0027: IGET  (r0 I:com.crashlytics.android.core.DevicePowerStateListener) = (r9 I:com.crashlytics.android.core.CrashlyticsController) com.crashlytics.android.core.CrashlyticsController.devicePowerStateListener com.crashlytics.android.core.DevicePowerStateListener A[Catch:\{ all \-\> 0x0043 \}]\l0x0029: INVOKE  \l  (r0 I:com.crashlytics.android.core.DevicePowerStateListener)\l com.crashlytics.android.core.DevicePowerStateListener.dispose():void type: VIRTUAL A[Catch:\{ all \-\> 0x0043 \}]\l0x002c: NEW_INSTANCE  (r3 I:java.util.Date) =  java.util.Date A[Catch:\{ all \-\> 0x0043 \}]\l0x002e: INVOKE  (r3 I:java.util.Date) java.util.Date.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0043 \}]\l0x0031: IGET  (r0 I:com.crashlytics.android.core.CrashlyticsBackgroundWorker) = (r9 I:com.crashlytics.android.core.CrashlyticsController) com.crashlytics.android.core.CrashlyticsController.backgroundWorker com.crashlytics.android.core.CrashlyticsBackgroundWorker A[Catch:\{ all \-\> 0x0043 \}]\l0x0033: NEW_INSTANCE  (r8 I:com.crashlytics.android.core.CrashlyticsController$7) =  com.crashlytics.android.core.CrashlyticsController$7 A[Catch:\{ all \-\> 0x0043 \}]\l0x0035: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0043 \}]\l0x0036: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0043 \}]\l0x0037: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0043 \}]\l0x0038: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0043 \}]\l0x0039: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0043 \}]\l0x003a: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0043 \}]\l0x003b: INVOKE  \l  (r1 I:com.crashlytics.android.core.CrashlyticsController$7)\l  (r2 I:com.crashlytics.android.core.CrashlyticsController)\l  (r3 I:java.util.Date)\l  (r4 I:java.lang.Thread)\l  (r5 I:java.lang.Throwable)\l  (r6 I:com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$SettingsDataProvider)\l  (r7 I:boolean)\l com.crashlytics.android.core.CrashlyticsController.7.\<init\>(com.crashlytics.android.core.CrashlyticsController, java.util.Date, java.lang.Thread, java.lang.Throwable, com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$SettingsDataProvider, boolean):void type: DIRECT A[Catch:\{ all \-\> 0x0043 \}]\l0x003e: INVOKE  \l  (r0 I:com.crashlytics.android.core.CrashlyticsBackgroundWorker)\l  (r8 I:java.util.concurrent.Callable)\l com.crashlytics.android.core.CrashlyticsBackgroundWorker.submitAndWait(java.util.concurrent.Callable):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0043 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0041|0x0041: MONITOR_EXIT  (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0042|0x0042: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0043|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0043: MOVE_EXCEPTION  (r10 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0044|0x0044: MONITOR_EXIT  (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0045|0x0045: THROW  (r10 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{synchronized void com.crashlytics.android.core.CrashlyticsController.handleUncaughtException((r9 'this' I:com.crashlytics.android.core.CrashlyticsController A[IMMUTABLE_TYPE, THIS]), (r10 I:com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$SettingsDataProvider A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.Thread A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.lang.Throwable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

