digraph "CFG forcom.crashlytics.android.core.CrashlyticsController.trimOpenSessions(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.HashSet) =  java.util.HashSet \l0x0002: INVOKE  (r0 I:java.util.HashSet) java.util.HashSet.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r1 I:java.io.File[]) = (r4 I:com.crashlytics.android.core.CrashlyticsController) com.crashlytics.android.core.CrashlyticsController.listSortedSessionBeginFiles():java.io.File[] type: DIRECT \l0x0009: ARRAY_LENGTH  (r2 I:int) = (r1 I:?[]) \l0x000a: INVOKE  (r5 I:int) = (r5 I:int), (r2 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x000e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r2 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:3:0x001d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: AGET  (r3 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0013: INVOKE  (r3 I:java.lang.String) = (r3 I:java.io.File) com.crashlytics.android.core.CrashlyticsController.getSessionIdFromSessionFile(java.io.File):java.lang.String type: STATIC \l0x0017: INVOKE  (r0 I:java.util.Set), (r3 I:java.lang.Object) java.util.Set.add(java.lang.Object):boolean type: INTERFACE \l0x001a: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: IGET  (r5 I:com.crashlytics.android.core.LogFileManager) = (r4 I:com.crashlytics.android.core.CrashlyticsController) com.crashlytics.android.core.CrashlyticsController.logFileManager com.crashlytics.android.core.LogFileManager \l0x001f: INVOKE  \l  (r5 I:com.crashlytics.android.core.LogFileManager)\l  (r0 I:java.util.Set)\l com.crashlytics.android.core.LogFileManager.discardOldLogFiles(java.util.Set):void type: VIRTUAL \l0x0022: NEW_INSTANCE  (r5 I:com.crashlytics.android.core.CrashlyticsController$AnySessionPartFileFilter) =  com.crashlytics.android.core.CrashlyticsController$AnySessionPartFileFilter \l0x0024: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0025: INVOKE  \l  (r5 I:com.crashlytics.android.core.CrashlyticsController$AnySessionPartFileFilter)\l  (r1 I:com.crashlytics.android.core.CrashlyticsController$1)\l com.crashlytics.android.core.CrashlyticsController.AnySessionPartFileFilter.\<init\>(com.crashlytics.android.core.CrashlyticsController$1):void type: DIRECT \l0x0028: INVOKE  (r5 I:java.io.File[]) = \l  (r4 I:com.crashlytics.android.core.CrashlyticsController)\l  (r5 I:java.io.FilenameFilter)\l com.crashlytics.android.core.CrashlyticsController.listFilesMatching(java.io.FilenameFilter):java.io.File[] type: DIRECT \l0x002c: INVOKE  \l  (r4 I:com.crashlytics.android.core.CrashlyticsController)\l  (r5 I:java.io.File[])\l  (r0 I:java.util.Set)\l com.crashlytics.android.core.CrashlyticsController.retainSessions(java.io.File[], java.util.Set):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x002f|0x002f: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.crashlytics.android.core.CrashlyticsController.trimOpenSessions((r4 'this' I:com.crashlytics.android.core.CrashlyticsController A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
Node_3 -> Node_4;
}

