digraph "CFG forcom.crashlytics.android.core.CrashlyticsController.gzip([BLjava\/io\/File;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: NEW_INSTANCE  (r1 I:java.util.zip.GZIPOutputStream) =  java.util.zip.GZIPOutputStream A[Catch:\{ all \-\> 0x0018 \}, TRY_ENTER]\l0x0003: NEW_INSTANCE  (r2 I:java.io.FileOutputStream) =  java.io.FileOutputStream A[Catch:\{ all \-\> 0x0018 \}]\l0x0005: INVOKE  (r2 I:java.io.FileOutputStream), (r5 I:java.io.File) java.io.FileOutputStream.\<init\>(java.io.File):void type: DIRECT A[Catch:\{ all \-\> 0x0018 \}]\l0x0008: INVOKE  \l  (r1 I:java.util.zip.GZIPOutputStream)\l  (r2 I:java.io.OutputStream)\l java.util.zip.GZIPOutputStream.\<init\>(java.io.OutputStream):void type: DIRECT A[Catch:\{ all \-\> 0x0018 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|SYNTHETIC\lSplitter:B:3:0x000b\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x000b\l|0x000b: INVOKE  (r1 I:java.util.zip.GZIPOutputStream), (r4 I:byte[]) java.util.zip.GZIPOutputStream.write(byte[]):void type: VIRTUAL A[Catch:\{ all \-\> 0x0015 \}, TRY_ENTER]\l0x000e: INVOKE  (r1 I:java.util.zip.GZIPOutputStream) java.util.zip.GZIPOutputStream.finish():void type: VIRTUAL A[Catch:\{ all \-\> 0x0015 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: INVOKE  (r1 I:java.io.Closeable) io.fabric.sdk.android.services.common.CommonUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|ExcHandler: all null\lSplitter:B:3:0x000b\l|0x0015: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0018: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: INVOKE  (r0 I:java.io.Closeable) io.fabric.sdk.android.services.common.CommonUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void com.crashlytics.android.core.CrashlyticsController.gzip((r3 'this' I:com.crashlytics.android.core.CrashlyticsController A[IMMUTABLE_TYPE, THIS]), (r4 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

