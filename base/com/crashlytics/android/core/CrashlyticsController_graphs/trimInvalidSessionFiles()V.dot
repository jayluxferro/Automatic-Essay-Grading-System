digraph "CFG forcom.crashlytics.android.core.CrashlyticsController.trimInvalidSessionFiles()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.io.File r0 = getInvalidFilesDir()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0.exists() != false) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|java.io.File[] r1 = listFilesMatching(r0, new com.crashlytics.android.core.CrashlyticsController.InvalidPartFileFilter())\ljava.util.Arrays.sort(r1, java.util.Collections.reverseOrder())\ljava.util.HashSet r2 = new java.util.HashSet()\lr3 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|LOOP_START\lPHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:3:0x000b, B:8:0x002b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0021\-\>B:8:0x002b\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|if (r3 \>= r1.length) goto L_0x0037\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024}"];
Node_7 [shape=record,label="{7\:\ 0x0029|if (r2.size() \>= 4) goto L_0x0037\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|LOOP_END\lLOOP:0: B:4:0x0021\-\>B:8:0x002b\l|r2.add(getSessionIdFromSessionFile(r1[r3]))\lint r3 = r3 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|retainSessions(listFiles(r0), r2)\l}"];
Node_10 [shape=record,label="{10\:\ 0x003e|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.crashlytics.android.core.CrashlyticsController.trimInvalidSessionFiles((r6v0 'this' com.crashlytics.android.core.CrashlyticsController A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_4;
Node_9 -> Node_10;
Node_11 -> Node_9;
Node_12 -> Node_9;
}

