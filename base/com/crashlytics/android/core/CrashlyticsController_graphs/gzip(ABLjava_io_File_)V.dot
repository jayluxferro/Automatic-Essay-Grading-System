digraph "CFG forcom.crashlytics.android.core.CrashlyticsController.gzip([BLjava\/io\/File;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x0018 \}\lSplitter:B:1:0x0001\l|java.util.zip.GZIPOutputStream r1 = new java.util.zip.GZIPOutputStream(new java.io.FileOutputStream(r5))     \/\/ Catch:\{ all \-\> 0x0018 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|SYNTHETIC\lSplitter:B:3:0x000b\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ all \-\> 0x0015 \}\lSplitter:B:3:0x000b\l|r1.write(r4)     \/\/ Catch:\{ all \-\> 0x0015 \}\lr1.finish()     \/\/ Catch:\{ all \-\> 0x0015 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|p018io.fabric.sdk.android.services.common.CommonUtils.closeQuietly(r1)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:3:0x000b\l|java.lang.Throwable r4 = th\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|r0 = r1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:1:0x0001\l|java.lang.Throwable r4 = th\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|PHI: r0 r4 \l  PHI: (r0v1 java.util.zip.GZIPOutputStream) = (r0v0 java.util.zip.GZIPOutputStream), (r0v2 java.util.zip.GZIPOutputStream) binds: [B:9:0x0018, B:8:0x0016] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'th' java.lang.Throwable) = (r4v2 'th' java.lang.Throwable), (r4v3 'th' java.lang.Throwable) binds: [B:9:0x0018, B:8:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|p018io.fabric.sdk.android.services.common.CommonUtils.closeQuietly(r0)\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|throw r4\l}"];
MethodNode[shape=record,label="{private void com.crashlytics.android.core.CrashlyticsController.gzip((r3v0 'this' com.crashlytics.android.core.CrashlyticsController A[IMMUTABLE_TYPE, THIS]), (r4v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

