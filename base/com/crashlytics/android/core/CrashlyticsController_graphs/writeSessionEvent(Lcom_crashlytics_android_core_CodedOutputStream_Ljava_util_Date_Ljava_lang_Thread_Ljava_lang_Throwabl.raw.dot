digraph "CFG forcom.crashlytics.android.core.CrashlyticsController.writeSessionEvent(Lcom\/crashlytics\/android\/core\/CodedOutputStream;Ljava\/util\/Date;Ljava\/lang\/Thread;Ljava\/lang\/Throwable;Ljava\/lang\/String;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0002: NEW_INSTANCE  (r5 I:com.crashlytics.android.core.TrimmedThrowableData) =  com.crashlytics.android.core.TrimmedThrowableData \l0x0004: IGET  (r1 I:com.crashlytics.android.core.StackTraceTrimmingStrategy) = (r0 I:com.crashlytics.android.core.CrashlyticsController) com.crashlytics.android.core.CrashlyticsController.stackTraceTrimmingStrategy com.crashlytics.android.core.StackTraceTrimmingStrategy \l0x0006: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x0008: INVOKE  \l  (r5 I:com.crashlytics.android.core.TrimmedThrowableData)\l  (r2 I:java.lang.Throwable)\l  (r1 I:com.crashlytics.android.core.StackTraceTrimmingStrategy)\l com.crashlytics.android.core.TrimmedThrowableData.\<init\>(java.lang.Throwable, com.crashlytics.android.core.StackTraceTrimmingStrategy):void type: DIRECT \l0x000b: IGET  (r1 I:com.crashlytics.android.core.CrashlyticsCore) = (r0 I:com.crashlytics.android.core.CrashlyticsController) com.crashlytics.android.core.CrashlyticsController.crashlyticsCore com.crashlytics.android.core.CrashlyticsCore \l0x000d: INVOKE  (r1 I:android.content.Context) = (r1 I:com.crashlytics.android.core.CrashlyticsCore) com.crashlytics.android.core.CrashlyticsCore.getContext():android.content.Context type: VIRTUAL \l0x0011: INVOKE  (r2 I:long) = (r26 I:java.util.Date) java.util.Date.getTime():long type: VIRTUAL \l0x0015: CONST  (r6 I:?[long, double]) = (1000(0x3e8, double:4.94E\-321) ?[long, double]) \l0x0017: ARITH  (r2 I:long) = (r2 I:long) \/ (r6 I:long) \l0x0018: INVOKE  (r16 I:java.lang.Float) = (r1 I:android.content.Context) io.fabric.sdk.android.services.common.CommonUtils.getBatteryLevel(android.content.Context):java.lang.Float type: STATIC \l0x001c: IGET  (r4 I:com.crashlytics.android.core.DevicePowerStateListener) = (r0 I:com.crashlytics.android.core.CrashlyticsController) com.crashlytics.android.core.CrashlyticsController.devicePowerStateListener com.crashlytics.android.core.DevicePowerStateListener \l0x001e: INVOKE  (r4 I:boolean) = \l  (r4 I:com.crashlytics.android.core.DevicePowerStateListener)\l com.crashlytics.android.core.DevicePowerStateListener.isPowerConnected():boolean type: VIRTUAL \l0x0022: INVOKE  (r17 I:int) = (r1 I:android.content.Context), (r4 I:boolean) io.fabric.sdk.android.services.common.CommonUtils.getBatteryVelocity(android.content.Context, boolean):int type: STATIC \l0x0026: INVOKE  (r18 I:boolean) = (r1 I:android.content.Context) io.fabric.sdk.android.services.common.CommonUtils.getProximitySensorEnabled(android.content.Context):boolean type: STATIC \l0x002a: INVOKE  (r4 I:android.content.res.Resources) = (r1 I:android.content.Context) android.content.Context.getResources():android.content.res.Resources type: VIRTUAL \l0x002e: INVOKE  (r4 I:android.content.res.Configuration) = (r4 I:android.content.res.Resources) android.content.res.Resources.getConfiguration():android.content.res.Configuration type: VIRTUAL \l0x0032: IGET  (r13 I:int) = (r4 I:android.content.res.Configuration) android.content.res.Configuration.orientation int \l0x0034: INVOKE  (r6 I:long) =  io.fabric.sdk.android.services.common.CommonUtils.getTotalRamInBytes():long type: STATIC \l0x0038: INVOKE  (r8 I:long) = (r1 I:android.content.Context) io.fabric.sdk.android.services.common.CommonUtils.calculateFreeRamInBytes(android.content.Context):long type: STATIC \l0x003c: ARITH  (r19 I:long) = (r6 I:long) \- (r8 I:long) \l0x003e: INVOKE  (r4 I:java.io.File) =  android.os.Environment.getDataDirectory():java.io.File type: STATIC \l0x0042: INVOKE  (r4 I:java.lang.String) = (r4 I:java.io.File) java.io.File.getPath():java.lang.String type: VIRTUAL \l0x0046: INVOKE  (r21 I:long) = (r4 I:java.lang.String) io.fabric.sdk.android.services.common.CommonUtils.calculateUsedDiskSpaceInBytes(java.lang.String):long type: STATIC \l0x004a: INVOKE  (r4 I:java.lang.String) = (r1 I:android.content.Context) android.content.Context.getPackageName():java.lang.String type: VIRTUAL \l0x004e: INVOKE  (r12 I:android.app.ActivityManager$RunningAppProcessInfo) = (r4 I:java.lang.String), (r1 I:android.content.Context) io.fabric.sdk.android.services.common.CommonUtils.getAppProcessInfo(java.lang.String, android.content.Context):android.app.ActivityManager$RunningAppProcessInfo type: STATIC \l0x0052: NEW_INSTANCE  (r9 I:java.util.LinkedList) =  java.util.LinkedList \l0x0054: INVOKE  (r9 I:java.util.LinkedList) java.util.LinkedList.\<init\>():void type: DIRECT \l0x0057: IGET  (r7 I:java.lang.StackTraceElement[]) = (r5 I:com.crashlytics.android.core.TrimmedThrowableData) com.crashlytics.android.core.TrimmedThrowableData.stacktrace java.lang.StackTraceElement[] \l0x0059: IGET  (r4 I:com.crashlytics.android.core.AppData) = (r0 I:com.crashlytics.android.core.CrashlyticsController) com.crashlytics.android.core.CrashlyticsController.appData com.crashlytics.android.core.AppData \l0x005b: IGET  (r15 I:java.lang.String) = (r4 I:com.crashlytics.android.core.AppData) com.crashlytics.android.core.AppData.buildId java.lang.String \l0x005d: IGET  (r4 I:io.fabric.sdk.android.services.common.IdManager) = (r0 I:com.crashlytics.android.core.CrashlyticsController) com.crashlytics.android.core.CrashlyticsController.idManager io.fabric.sdk.android.services.common.IdManager \l0x005f: INVOKE  (r14 I:java.lang.String) = (r4 I:io.fabric.sdk.android.services.common.IdManager) io.fabric.sdk.android.services.common.IdManager.getAppIdentifier():java.lang.String type: VIRTUAL \l0x0063: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0064|0x0064: IF  (r30 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x00a1 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0066|0x0066: INVOKE  (r8 I:java.util.Map) =  java.lang.Thread.getAllStackTraces():java.util.Map type: STATIC \l0x006a: INVOKE  (r10 I:int) = (r8 I:java.util.Map) java.util.Map.size():int type: INTERFACE \l0x006e: NEW_ARRAY  (r10 I:java.lang.Thread[]) = (r10 I:int A[IMMUTABLE_TYPE]) type: java.lang.Thread[] \l0x0070: INVOKE  (r8 I:java.util.Set) = (r8 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x0074: INVOKE  (r8 I:java.util.Iterator) = (r8 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0078|0x0078: INVOKE  (r11 I:boolean) = (r8 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x007c|0x007c: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x009e \l}"];
Node_5 [shape=record,label="{5\:\ 0x007e|0x007e: INVOKE  (r11 I:java.lang.Object) = (r8 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0082: CHECK_CAST  (r11 I:java.util.Map$Entry) = (java.util.Map$Entry) (r11 I:?[OBJECT, ARRAY]) \l0x0084: INVOKE  (r23 I:java.lang.Object) = (r11 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x0088: CHECK_CAST  (r23 I:java.lang.Thread) = (java.lang.Thread) (r23 I:?[OBJECT, ARRAY]) \l0x008a: APUT  \l  (r10 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r23 I:?[OBJECT, ARRAY])\l \l0x008c: IGET  (r6 I:com.crashlytics.android.core.StackTraceTrimmingStrategy) = (r0 I:com.crashlytics.android.core.CrashlyticsController) com.crashlytics.android.core.CrashlyticsController.stackTraceTrimmingStrategy com.crashlytics.android.core.StackTraceTrimmingStrategy \l0x008e: INVOKE  (r11 I:java.lang.Object) = (r11 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x0092: CHECK_CAST  (r11 I:java.lang.StackTraceElement[]) = (java.lang.StackTraceElement[]) (r11 I:?[OBJECT, ARRAY]) \l0x0094: INVOKE  (r6 I:java.lang.StackTraceElement[]) = \l  (r6 I:com.crashlytics.android.core.StackTraceTrimmingStrategy)\l  (r11 I:java.lang.StackTraceElement[])\l com.crashlytics.android.core.StackTraceTrimmingStrategy.getTrimmedStackTrace(java.lang.StackTraceElement[]):java.lang.StackTraceElement[] type: INTERFACE \l0x0098: INVOKE  (r9 I:java.util.List), (r6 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x009b: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x009c: ARITH  (r4 I:int) = (r4 I:int) + (r6 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x009e|0x009e: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x009f: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x00a1|0x00a1: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00a2: NEW_ARRAY  (r4 I:java.lang.Thread[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Thread[] \l0x00a4: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x00a5|0x00a5: CONST_STR  (r4 I:java.lang.String) =  \"com.crashlytics.CollectCustomKeys\" \l0x00a7: INVOKE  (r1 I:boolean) = \l  (r1 I:android.content.Context)\l  (r4 I:java.lang.String)\l  (r6 I:boolean)\l io.fabric.sdk.android.services.common.CommonUtils.getBooleanResourceValue(android.content.Context, java.lang.String, boolean):boolean type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x00ab|0x00ab: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x00b4 \l}"];
Node_10 [shape=record,label="{10\:\ 0x00ad|0x00ad: NEW_INSTANCE  (r1 I:java.util.TreeMap) =  java.util.TreeMap \l0x00af: INVOKE  (r1 I:java.util.TreeMap) java.util.TreeMap.\<init\>():void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x00b2|0x00b2: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x00b4|0x00b4: IGET  (r1 I:com.crashlytics.android.core.CrashlyticsCore) = (r0 I:com.crashlytics.android.core.CrashlyticsController) com.crashlytics.android.core.CrashlyticsController.crashlyticsCore com.crashlytics.android.core.CrashlyticsCore \l0x00b6: INVOKE  (r1 I:java.util.Map) = (r1 I:com.crashlytics.android.core.CrashlyticsCore) com.crashlytics.android.core.CrashlyticsCore.getAttributes():java.util.Map type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x00ba|0x00ba: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x00b2 \l}"];
Node_14 [shape=record,label="{14\:\ 0x00bc|0x00bc: INVOKE  (r4 I:int) = (r1 I:java.util.Map) java.util.Map.size():int type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x00c0|0x00c0: IF  (r4 I:?[int, byte, short, char]) \<= (r6 I:?[int, byte, short, char])  \-\> B:11:0x00b2 \l}"];
Node_16 [shape=record,label="{16\:\ 0x00c2|0x00c2: NEW_INSTANCE  (r4 I:java.util.TreeMap) =  java.util.TreeMap \l0x00c4: INVOKE  (r4 I:java.util.TreeMap), (r1 I:java.util.Map) java.util.TreeMap.\<init\>(java.util.Map):void type: DIRECT \l0x00c7: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x00c8|0x00c8: IGET  (r11 I:com.crashlytics.android.core.LogFileManager) = (r0 I:com.crashlytics.android.core.CrashlyticsController) com.crashlytics.android.core.CrashlyticsController.logFileManager com.crashlytics.android.core.LogFileManager \l0x00ca: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x00cc: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r29 I:?[OBJECT, ARRAY]) \l0x00ce: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r27 I:?[OBJECT, ARRAY]) \l0x00d0: INVOKE  \l  (r1 I:com.crashlytics.android.core.CodedOutputStream)\l  (r2 I:long)\l  (r4 I:java.lang.String)\l  (r5 I:com.crashlytics.android.core.TrimmedThrowableData)\l  (r6 I:java.lang.Thread)\l  (r7 I:java.lang.StackTraceElement[])\l  (r8 I:java.lang.Thread[])\l  (r9 I:java.util.List)\l  (r10 I:java.util.Map)\l  (r11 I:com.crashlytics.android.core.LogFileManager)\l  (r12 I:android.app.ActivityManager$RunningAppProcessInfo)\l  (r13 I:int)\l  (r14 I:java.lang.String)\l  (r15 I:java.lang.String)\l  (r16 I:java.lang.Float)\l  (r17 I:int)\l  (r18 I:boolean)\l  (r19 I:long)\l  (r21 I:long)\l com.crashlytics.android.core.SessionProtobufHelper.writeSessionEvent(com.crashlytics.android.core.CodedOutputStream, long, java.lang.String, com.crashlytics.android.core.TrimmedThrowableData, java.lang.Thread, java.lang.StackTraceElement[], java.lang.Thread[], java.util.List, java.util.Map, com.crashlytics.android.core.LogFileManager, android.app.ActivityManager$RunningAppProcessInfo, int, java.lang.String, java.lang.String, java.lang.Float, int, boolean, long, long):void type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x00d3|0x00d3: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.crashlytics.android.core.CrashlyticsController.writeSessionEvent((r24 'this' I:com.crashlytics.android.core.CrashlyticsController A[IMMUTABLE_TYPE, THIS]), (r25 I:com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:java.util.Date A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:java.lang.Thread A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:java.lang.Throwable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_3;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_13 -> Node_11;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_11;
Node_15 -> Node_16[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
}

