digraph "CFG forcom.crashlytics.android.core.CrashlyticsController.writeSessionEvent(Lcom\/crashlytics\/android\/core\/CodedOutputStream;Ljava\/util\/Date;Ljava\/lang\/Thread;Ljava\/lang\/Throwable;Ljava\/lang\/String;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r24\lr2 = r28\lcom.crashlytics.android.core.TrimmedThrowableData r5 = new com.crashlytics.android.core.TrimmedThrowableData(r2, r0.stackTraceTrimmingStrategy)\landroid.content.Context r1 = r0.crashlyticsCore.getContext()\llong r2 = r26.getTime() \/ 1000\ljava.lang.Float r16 = p018io.fabric.sdk.android.services.common.CommonUtils.getBatteryLevel(r1)\lint r17 = p018io.fabric.sdk.android.services.common.CommonUtils.getBatteryVelocity(r1, r0.devicePowerStateListener.isPowerConnected())\lboolean r18 = p018io.fabric.sdk.android.services.common.CommonUtils.getProximitySensorEnabled(r1)\lint r13 = r1.getResources().getConfiguration().orientation\llong r19 = p018io.fabric.sdk.android.services.common.CommonUtils.getTotalRamInBytes() \- p018io.fabric.sdk.android.services.common.CommonUtils.calculateFreeRamInBytes(r1)\llong r21 = p018io.fabric.sdk.android.services.common.CommonUtils.calculateUsedDiskSpaceInBytes(android.os.Environment.getDataDirectory().getPath())\landroid.app.ActivityManager$RunningAppProcessInfo r12 = p018io.fabric.sdk.android.services.common.CommonUtils.getAppProcessInfo(r1.getPackageName(), r1)\ljava.util.LinkedList r9 = new java.util.LinkedList()\ljava.lang.StackTraceElement[] r7 = r5.stacktrace\ljava.lang.String r15 = r0.appData.buildId\ljava.lang.String r14 = r0.idManager.getAppIdentifier()\lr4 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0064|if (r30 == false) goto L_0x00a1\l}"];
Node_2 [shape=record,label="{2\:\ 0x0066|java.util.Map r8 = java.lang.Thread.getAllStackTraces()\ljava.lang.Thread[] r10 = new java.lang.Thread[r8.size()]\ljava.util.Iterator r8 = r8.entrySet().iterator()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0078|LOOP_START\lPHI: r4 \l  PHI: (r4v15 int) = (r4v9 int), (r4v16 int) binds: [B:2:0x0066, B:5:0x007e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0078\-\>B:5:0x007e\l}"];
Node_4 [shape=record,label="{4\:\ 0x007c|if (r8.hasNext() == false) goto L_0x009e\l}"];
Node_5 [shape=record,label="{5\:\ 0x007e|LOOP_END\lLOOP:0: B:3:0x0078\-\>B:5:0x007e\l|java.util.Map$Entry r11 = r8.next()\lr10[r4] = (java.lang.Thread) r11.getKey()\lr9.add(r0.stackTraceTrimmingStrategy.getTrimmedStackTrace((java.lang.StackTraceElement[]) r11.getValue()))\lint r4 = r4 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x009e|r6 = 1\lr8 = r10\l}"];
Node_7 [shape=record,label="{7\:\ 0x00a1|r6 = 1\lr8 = new java.lang.Thread[0]\l}"];
Node_8 [shape=record,label="{8\:\ 0x00a5|PHI: r6 r8 \l  PHI: (r6v2 ?) = (r6v4 ?), (r6v5 ?) binds: [B:7:0x00a1, B:6:0x009e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 java.lang.Thread[]) = (r8v2 java.lang.Thread[]), (r8v6 java.lang.Thread[]) binds: [B:7:0x00a1, B:6:0x009e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x00ab|if (p018io.fabric.sdk.android.services.common.CommonUtils.getBooleanResourceValue(r1, COLLECT_CUSTOM_KEYS, r6) != false) goto L_0x00b4\l}"];
Node_10 [shape=record,label="{10\:\ 0x00ad|java.util.TreeMap r1 = new java.util.TreeMap()\l}"];
Node_11 [shape=record,label="{11\:\ 0x00b2|PHI: r1 \l  PHI: (r1v7 java.util.Map) = (r1v6 java.util.Map), (r1v6 java.util.Map), (r1v8 java.util.Map) binds: [B:13:0x00ba, B:15:0x00c0, B:10:0x00ad] A[DONT_GENERATE, DONT_INLINE]\l|r10 = r1\l}"];
Node_12 [shape=record,label="{12\:\ 0x00b4|java.util.Map r1 = r0.crashlyticsCore.getAttributes()\l}"];
Node_13 [shape=record,label="{13\:\ 0x00ba|if (r1 == null) goto L_0x00b2\l}"];
Node_14 [shape=record,label="{14\:\ 0x00bc}"];
Node_15 [shape=record,label="{15\:\ 0x00c0|if (r1.size() \<= r6) goto L_0x00b2\l}"];
Node_16 [shape=record,label="{16\:\ 0x00c2|r10 = new java.util.TreeMap(r1)\l}"];
Node_17 [shape=record,label="{17\:\ 0x00c8|PHI: r10 \l  PHI: (r10v0 java.util.Map) = (r10v1 java.util.Map), (r10v2 java.util.Map) binds: [B:16:0x00c2, B:11:0x00b2] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r25\lr4 = r29\lr6 = r27\lcom.crashlytics.android.core.SessionProtobufHelper.writeSessionEvent(r1, r2, r4, r5, r6, r7, r8, r9, r10, r0.logFileManager, r12, r13, r14, r15, r16, r17, r18, r19, r21)\l}"];
Node_18 [shape=record,label="{18\:\ 0x00d3|RETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ 0x009e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.crashlytics.android.core.CrashlyticsController.writeSessionEvent((r24v0 'this' com.crashlytics.android.core.CrashlyticsController A[IMMUTABLE_TYPE, THIS]), (r25v0 com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 java.util.Date A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27v0 java.lang.Thread A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28v0 java.lang.Throwable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r10v1, resolved type: java.util.TreeMap\}\lJADX WARNING: type inference failed for: r6v2, types: [boolean]\lJADX WARNING: type inference failed for: r6v4\lJADX WARNING: type inference failed for: r6v5\lMulti\-variable type inference failed\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_19;
Node_5 -> Node_3;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_13 -> Node_11;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_11;
Node_15 -> Node_16[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_6;
}

