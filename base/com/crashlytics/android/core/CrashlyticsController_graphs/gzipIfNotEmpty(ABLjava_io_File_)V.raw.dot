digraph "CFG forcom.crashlytics.android.core.CrashlyticsController.gzipIfNotEmpty([BLjava\/io\/File;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0008 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: ARRAY_LENGTH  (r0 I:int) = (r2 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:4:0x0008 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: INVOKE  \l  (r1 I:com.crashlytics.android.core.CrashlyticsController)\l  (r2 I:byte[])\l  (r3 I:java.io.File)\l com.crashlytics.android.core.CrashlyticsController.gzip(byte[], java.io.File):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.crashlytics.android.core.CrashlyticsController.gzipIfNotEmpty((r1 'this' I:com.crashlytics.android.core.CrashlyticsController A[IMMUTABLE_TYPE, THIS]), (r2 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
}

