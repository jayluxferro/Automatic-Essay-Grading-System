digraph "CFG forcom.crashlytics.android.core.CrashlyticsController.handleUncaughtException(Lcom\/crashlytics\/android\/core\/CrashlyticsUncaughtExceptionHandler$SettingsDataProvider;Ljava\/lang\/Thread;Ljava\/lang\/Throwable;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r9)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?|io.fabric.sdk.android.Logger r0 = p018io.fabric.sdk.android.Fabric.getLogger()\ljava.lang.StringBuilder r2 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr2.append(\"Crashlytics is handling uncaught exception \"\")\lr2.append(r12)\lr2.append(\"\" from thread \")\lr2.append(r11.getName())\lr0.mo22221d(com.crashlytics.android.core.CrashlyticsCore.TAG, r2.toString())\lr9.devicePowerStateListener.dispose()\ljava.util.Date r3 = new java.util.Date()     \/\/ Catch:\{  \}\lr4 = r11\lr5 = r12\lr6 = r10\lr7 = r13\lr9.backgroundWorker.submitAndWait(new com.crashlytics.android.core.CrashlyticsController.C06377(r9))\l}"];
Node_3 [shape=record,label="{3\:\ 0x0041|monitor\-exit(r9)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0042|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x0043|REMOVE\l|java.lang.Throwable r10 = move\-exception\l}"];
Node_6 [shape=record,label="{6\:\ 0x0044|REMOVE\l}"];
Node_7 [shape=record,label="{7\:\ 0x0045|REMOVE\l|throw r10\l}"];
MethodNode[shape=record,label="{synchronized void com.crashlytics.android.core.CrashlyticsController.handleUncaughtException((r9v0 'this' com.crashlytics.android.core.CrashlyticsController A[IMMUTABLE_TYPE, THIS]), (r10v0 com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$SettingsDataProvider A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 java.lang.Thread A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 java.lang.Throwable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

