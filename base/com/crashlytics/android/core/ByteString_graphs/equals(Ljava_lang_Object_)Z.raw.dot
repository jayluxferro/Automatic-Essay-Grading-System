digraph "CFG forcom.crashlytics.android.core.ByteString.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INSTANCE_OF  (r1 I:boolean) = (r8 I:?[OBJECT, ARRAY]) com.crashlytics.android.core.ByteString \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: RETURN  (r2 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: CHECK_CAST  (r8 I:com.crashlytics.android.core.ByteString) = (com.crashlytics.android.core.ByteString) (r8 I:?[OBJECT, ARRAY]) \l0x000c: IGET  (r1 I:byte[]) = (r7 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.ByteString.bytes byte[] \l0x000e: ARRAY_LENGTH  (r1 I:int) = (r1 I:?[]) \l0x000f: IGET  (r3 I:byte[]) = (r8 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.ByteString.bytes byte[] \l0x0011: ARRAY_LENGTH  (r3 I:int) = (r3 I:?[]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0015 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: RETURN  (r2 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: IGET  (r3 I:byte[]) = (r7 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.ByteString.bytes byte[] \l0x0017: IGET  (r8 I:byte[]) = (r8 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.ByteString.bytes byte[] \l0x0019: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: IF  (r4 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:15:0x0026 \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r3 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x001e: AGET  (r6 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0023 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|0x0022: RETURN  (r2 I:boolean) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|0x0023: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0026|0x0026: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.crashlytics.android.core.ByteString.equals((r7 'this' I:com.crashlytics.android.core.ByteString A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_10;
}

