digraph "CFG forcom.crashlytics.android.core.ByteString.newOutput(I)Lcom\/crashlytics\/android\/core\/ByteString$Output;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.crashlytics.android.core.ByteString$Output) =  com.crashlytics.android.core.ByteString$Output \l0x0002: NEW_INSTANCE  (r1 I:java.io.ByteArrayOutputStream) =  java.io.ByteArrayOutputStream \l0x0004: INVOKE  (r1 I:java.io.ByteArrayOutputStream), (r2 I:int) java.io.ByteArrayOutputStream.\<init\>(int):void type: DIRECT \l0x0007: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: INVOKE  \l  (r0 I:com.crashlytics.android.core.ByteString$Output)\l  (r1 I:java.io.ByteArrayOutputStream)\l  (r2 I:com.crashlytics.android.core.ByteString$1)\l com.crashlytics.android.core.ByteString.Output.\<init\>(java.io.ByteArrayOutputStream, com.crashlytics.android.core.ByteString$1):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: RETURN  (r0 I:com.crashlytics.android.core.ByteString$Output) \l}"];
MethodNode[shape=record,label="{public static com.crashlytics.android.core.ByteString$Output com.crashlytics.android.core.ByteString.newOutput((r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

