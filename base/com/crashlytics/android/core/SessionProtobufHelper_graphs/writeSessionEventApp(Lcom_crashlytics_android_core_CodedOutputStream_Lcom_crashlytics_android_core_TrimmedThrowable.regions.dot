digraph "CFG forcom.crashlytics.android.core.SessionProtobufHelper.writeSessionEventApp(Lcom\/crashlytics\/android\/core\/CodedOutputStream;Lcom\/crashlytics\/android\/core\/TrimmedThrowableData;Ljava\/lang\/Thread;[Ljava\/lang\/StackTraceElement;[Ljava\/lang\/Thread;Ljava\/util\/List;ILcom\/crashlytics\/android\/core\/ByteString;Lcom\/crashlytics\/android\/core\/ByteString;Ljava\/util\/Map;Landroid\/app\/ActivityManager$RunningAppProcessInfo;I)V" {
subgraph cluster_Region_985106809 {
label = "R(4:0|(1:4)|(1:10)|11)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.writeTag(3, 2)\lr2.writeRawVarint32(getEventAppSize(r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13))\lwriteSessionEventAppExecution(r2, r3, r4, r5, r6, r7, r8, r9, r10)\l}"];
subgraph cluster_IfRegion_361384099 {
label = "IF [B:1:0x000f, B:3:0x0015] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000f|ADDED_TO_REGION\l|if (r11 != null) goto L_0x0011\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|ADDED_TO_REGION\l|if (r11.isEmpty() == false) goto L_0x0017\l}"];
subgraph cluster_Region_1447788812 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0017|writeSessionEventAppCustomAttributes(r2, r11)\l}"];
}
}
subgraph cluster_IfRegion_682746794 {
label = "IF [B:5:0x001a] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001a|if (r12 != null) goto L_0x001c\l}"];
subgraph cluster_Region_785079172 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0025|PHI: r3 \l  PHI: (r3v3 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r2.writeBool(3, r12.importance != 100)\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x0028|r2.writeUInt32(4, r13)\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0011}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001c}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0020}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0022}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0024}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x002c}"];
MethodNode[shape=record,label="{private static void com.crashlytics.android.core.SessionProtobufHelper.writeSessionEventApp((r2v0 com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 com.crashlytics.android.core.TrimmedThrowableData A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Thread A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.StackTraceElement[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.Thread[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.util.List\<java.lang.StackTraceElement[]\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 com.crashlytics.android.core.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 com.crashlytics.android.core.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 java.util.Map\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 android.app.ActivityManager$RunningAppProcessInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/crashlytics\/android\/core\/CodedOutputStream;, Lcom\/crashlytics\/android\/core\/TrimmedThrowableData;, Ljava\/lang\/Thread;, [, Ljava\/lang\/StackTraceElement;, [, Ljava\/lang\/Thread;, Ljava\/util\/List\<, [, Ljava\/lang\/StackTraceElement;, \>;I, Lcom\/crashlytics\/android\/core\/ByteString;, Lcom\/crashlytics\/android\/core\/ByteString;, Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;, Landroid\/app\/ActivityManager$RunningAppProcessInfo;, I)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_2 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
}

