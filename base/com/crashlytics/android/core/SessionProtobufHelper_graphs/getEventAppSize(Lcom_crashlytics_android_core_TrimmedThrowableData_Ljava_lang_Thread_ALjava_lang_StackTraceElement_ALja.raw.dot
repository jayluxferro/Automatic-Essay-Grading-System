digraph "CFG forcom.crashlytics.android.core.SessionProtobufHelper.getEventAppSize(Lcom\/crashlytics\/android\/core\/TrimmedThrowableData;Ljava\/lang\/Thread;[Ljava\/lang\/StackTraceElement;[Ljava\/lang\/Thread;Ljava\/util\/List;ILcom\/crashlytics\/android\/core\/ByteString;Lcom\/crashlytics\/android\/core\/ByteString;Ljava\/util\/Map;Landroid\/app\/ActivityManager$RunningAppProcessInfo;I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = \l  (r0 I:com.crashlytics.android.core.TrimmedThrowableData)\l  (r1 I:java.lang.Thread)\l  (r2 I:java.lang.StackTraceElement[])\l  (r3 I:java.lang.Thread[])\l  (r4 I:java.util.List)\l  (r5 I:int)\l  (r6 I:com.crashlytics.android.core.ByteString)\l  (r7 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.SessionProtobufHelper.getEventAppExecutionSize(com.crashlytics.android.core.TrimmedThrowableData, java.lang.Thread, java.lang.StackTraceElement[], java.lang.Thread[], java.util.List, int, com.crashlytics.android.core.ByteString, com.crashlytics.android.core.ByteString):int type: STATIC \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: INVOKE  (r2 I:int) = (r1 I:int) com.crashlytics.android.core.CodedOutputStream.computeTagSize(int):int type: STATIC \l0x0009: INVOKE  (r3 I:int) = (r0 I:int) com.crashlytics.android.core.CodedOutputStream.computeRawVarint32Size(int):int type: STATIC \l0x000d: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x000e: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int) \l0x000f: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0044 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: INVOKE  (r3 I:java.util.Set) = (r8 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x0017: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0044 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0025: CHECK_CAST  (r4 I:java.util.Map$Entry) = (java.util.Map$Entry) (r4 I:?[OBJECT, ARRAY]) \l0x0027: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x002b: CHECK_CAST  (r5 I:java.lang.String) = (java.lang.String) (r5 I:?[OBJECT, ARRAY]) \l0x002d: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x0031: CHECK_CAST  (r4 I:java.lang.String) = (java.lang.String) (r4 I:?[OBJECT, ARRAY]) \l0x0033: INVOKE  (r4 I:int) = (r5 I:java.lang.String), (r4 I:java.lang.String) com.crashlytics.android.core.SessionProtobufHelper.getEventAppCustomAttributeSize(java.lang.String, java.lang.String):int type: STATIC \l0x0037: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0038: INVOKE  (r5 I:int) = (r5 I:int) com.crashlytics.android.core.CodedOutputStream.computeTagSize(int):int type: STATIC \l0x003c: INVOKE  (r6 I:int) = (r4 I:int) com.crashlytics.android.core.CodedOutputStream.computeRawVarint32Size(int):int type: STATIC \l0x0040: ARITH  (r5 I:int) = (r5 I:int) + (r6 I:int) \l0x0041: ARITH  (r5 I:int) = (r5 I:int) + (r4 I:int) \l0x0042: ARITH  (r2 I:int) = (r2 I:int) + (r5 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0044|0x0044: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0053 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0046|0x0046: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0047: IGET  (r4 I:int) = (r9 I:android.app.ActivityManager$RunningAppProcessInfo) android.app.ActivityManager.RunningAppProcessInfo.importance int \l0x0049: CONST  (r5 I:?[int, float, short, byte, char]) = (100 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x004b|0x004b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x004e \l}"];
Node_9 [shape=record,label="{9\:\ 0x004d|0x004d: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x004e|0x004e: INVOKE  (r0 I:int) = (r3 I:int), (r0 I:boolean) com.crashlytics.android.core.CodedOutputStream.computeBoolSize(int, boolean):int type: STATIC \l0x0052: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0053|0x0053: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0054: INVOKE  (r0 I:int) = (r0 I:int), (r10 I:int) com.crashlytics.android.core.CodedOutputStream.computeUInt32Size(int, int):int type: STATIC \l0x0058: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0059|0x0059: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{private static int com.crashlytics.android.core.SessionProtobufHelper.getEventAppSize((r0 I:com.crashlytics.android.core.TrimmedThrowableData A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:java.lang.Thread A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.StackTraceElement[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Thread[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.util.List\<java.lang.StackTraceElement[]\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.crashlytics.android.core.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.crashlytics.android.core.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.util.Map\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.app.ActivityManager$RunningAppProcessInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/crashlytics\/android\/core\/TrimmedThrowableData;, Ljava\/lang\/Thread;, [, Ljava\/lang\/StackTraceElement;, [, Ljava\/lang\/Thread;, Ljava\/util\/List\<, [, Ljava\/lang\/StackTraceElement;, \>;I, Lcom\/crashlytics\/android\/core\/ByteString;, Lcom\/crashlytics\/android\/core\/ByteString;, Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;, Landroid\/app\/ActivityManager$RunningAppProcessInfo;, I)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_3;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

