digraph "CFG forcom.crashlytics.android.core.SessionProtobufHelper.getFrameSize(Ljava\/lang\/StackTraceElement;Z)I" {
subgraph cluster_Region_226960283 {
label = "R(7:0|(1:2)(1:3)|4|(1:6)|(1:11)|(1:14)|16) | DECL_VAR: int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r2 = 0\l}"];
subgraph cluster_IfRegion_1403363416 {
label = "IF [B:1:0x0006] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r6.isNativeMethod() == true) goto L_0x0008\l}"];
subgraph cluster_Region_2030366812 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|int r0 = com.crashlytics.android.core.CodedOutputStream.computeUInt64Size(1, (long) java.lang.Math.max(r6.getLineNumber(), 0)) + 0\l}"];
}
subgraph cluster_Region_936623906 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0017|int r0 = com.crashlytics.android.core.CodedOutputStream.computeUInt64Size(1, 0) + 0\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x001e|PHI: r0 \l  PHI: (r0v1 int) = (r0v9 int), (r0v13 int) binds: [B:3:0x0017, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|int int r0 = r0 + com.crashlytics.android.core.CodedOutputStream.computeBytesSize(2, com.crashlytics.android.core.ByteString.copyFromUtf8(r6.getClassName() + mil.nga.geopackage.property.PropertyConstants.PROPERTY_DIVIDER + r6.getMethodName()))\l}"];
subgraph cluster_IfRegion_852434017 {
label = "IF [B:5:0x0048] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0048|if (r6.getFileName() != null) goto L_0x004a\l}"];
subgraph cluster_Region_719925126 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x004a|r0 += com.crashlytics.android.core.CodedOutputStream.computeBytesSize(3, com.crashlytics.android.core.ByteString.copyFromUtf8(r6.getFileName()))\l}"];
}
}
subgraph cluster_IfRegion_1579077578 {
label = "IF [B:8:0x005c, B:10:0x0062] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x005c|ADDED_TO_REGION\l|if (r6.isNativeMethod() == false) goto L_0x005e\l}"];
Node_10 [shape=record,label="{10\:\ 0x0062|ADDED_TO_REGION\l|if (r6.getLineNumber() \> 0) goto L_0x0064\l}"];
subgraph cluster_Region_1303093020 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0064|r0 += com.crashlytics.android.core.CodedOutputStream.computeUInt64Size(4, (long) r6.getLineNumber())\l}"];
}
}
subgraph cluster_IfRegion_1354785584 {
label = "IF [B:13:0x0070] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0070|if (r7 == true) goto L_0x0072\l}"];
subgraph cluster_Region_1728054451 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0072|r2 = 2\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x0078|RETURN\l|return r0 + com.crashlytics.android.core.CodedOutputStream.computeUInt32Size(5, r2)\l}"];
}
Node_7 [shape=record,color=red,label="{7\:\ 0x0058|PHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v7 int) binds: [B:5:0x0048, B:6:0x004a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x005e}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x006f|PHI: r0 \l  PHI: (r0v4 int) = (r0v3 int), (r0v3 int), (r0v6 int) binds: [B:8:0x005c, B:10:0x0062, B:11:0x0064] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0073|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:13:0x0070, B:14:0x0072] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{private static int com.crashlytics.android.core.SessionProtobufHelper.getFrameSize((r6v0 java.lang.StackTraceElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_12[style=dashed];
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_15;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_15 -> Node_16;
}

