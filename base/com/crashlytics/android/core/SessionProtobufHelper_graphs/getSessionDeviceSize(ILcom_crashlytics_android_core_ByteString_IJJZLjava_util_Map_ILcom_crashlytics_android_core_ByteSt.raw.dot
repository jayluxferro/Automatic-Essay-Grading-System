digraph "CFG forcom.crashlytics.android.core.SessionProtobufHelper.getSessionDeviceSize(ILcom\/crashlytics\/android\/core\/ByteString;IJJZLjava\/util\/Map;ILcom\/crashlytics\/android\/core\/ByteString;Lcom\/crashlytics\/android\/core\/ByteString;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0001: INVOKE  (r2 I:int) = (r0 I:int), (r2 I:int) com.crashlytics.android.core.CodedOutputStream.computeEnumSize(int, int):int type: STATIC \l0x0005: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x000c: INVOKE  (r3 I:int) = (r1 I:int), (r3 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.CodedOutputStream.computeBytesSize(int, com.crashlytics.android.core.ByteString):int type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0011: CONST  (r3 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0012: INVOKE  (r3 I:int) = (r3 I:int), (r4 I:int) com.crashlytics.android.core.CodedOutputStream.computeUInt32Size(int, int):int type: STATIC \l0x0016: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0017: CONST  (r3 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0018: INVOKE  (r3 I:int) = (r3 I:int), (r5 I:long) com.crashlytics.android.core.CodedOutputStream.computeUInt64Size(int, long):int type: STATIC \l0x001c: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x001d: CONST  (r3 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l0x001e: INVOKE  (r3 I:int) = (r3 I:int), (r7 I:long) com.crashlytics.android.core.CodedOutputStream.computeUInt64Size(int, long):int type: STATIC \l0x0022: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0023: CONST  (r3 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0025: INVOKE  (r3 I:int) = (r3 I:int), (r9 I:boolean) com.crashlytics.android.core.CodedOutputStream.computeBoolSize(int, boolean):int type: STATIC \l0x0029: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|0x002a: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x005e \l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|0x002c: INVOKE  (r3 I:java.util.Set) = (r10 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x0030: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|0x0034: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x0038|0x0038: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x005e \l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|0x003a: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x003e: CHECK_CAST  (r4 I:java.util.Map$Entry) = (java.util.Map$Entry) (r4 I:?[OBJECT, ARRAY]) \l0x0040: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x0044: CHECK_CAST  (r5 I:io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType) = (io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType) (r5 I:?[OBJECT, ARRAY]) \l0x0046: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x004a: CHECK_CAST  (r4 I:java.lang.String) = (java.lang.String) (r4 I:?[OBJECT, ARRAY]) \l0x004c: INVOKE  (r4 I:int) = \l  (r5 I:io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType)\l  (r4 I:java.lang.String)\l com.crashlytics.android.core.SessionProtobufHelper.getDeviceIdentifierSize(io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType, java.lang.String):int type: STATIC \l0x0050: CONST  (r5 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l0x0052: INVOKE  (r5 I:int) = (r5 I:int) com.crashlytics.android.core.CodedOutputStream.computeTagSize(int):int type: STATIC \l0x0056: INVOKE  (r6 I:int) = (r4 I:int) com.crashlytics.android.core.CodedOutputStream.computeRawVarint32Size(int):int type: STATIC \l0x005a: ARITH  (r5 I:int) = (r5 I:int) + (r6 I:int) \l0x005b: ARITH  (r5 I:int) = (r5 I:int) + (r4 I:int) \l0x005c: ARITH  (r2 I:int) = (r2 I:int) + (r5 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x005e|0x005e: CONST  (r3 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l0x0060: INVOKE  (r3 I:int) = (r3 I:int), (r11 I:int) com.crashlytics.android.core.CodedOutputStream.computeUInt32Size(int, int):int type: STATIC \l0x0064: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0065|0x0065: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0069 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0067|0x0067: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0069|0x0069: CONST  (r3 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l0x006b: INVOKE  (r3 I:int) = (r3 I:int), (r12 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.CodedOutputStream.computeBytesSize(int, com.crashlytics.android.core.ByteString):int type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x006f|0x006f: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0070|0x0070: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0073 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0073|0x0073: CONST  (r3 I:?[int, float, short, byte, char]) = (14 ?[int, float, short, byte, char]) \l0x0075: INVOKE  (r0 I:int) = (r3 I:int), (r13 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.CodedOutputStream.computeBytesSize(int, com.crashlytics.android.core.ByteString):int type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x0079|0x0079: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x007a|0x007a: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{private static int com.crashlytics.android.core.SessionProtobufHelper.getSessionDeviceSize((r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.crashlytics.android.core.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.util.Map\<io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:com.crashlytics.android.core.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:com.crashlytics.android.core.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(I, Lcom\/crashlytics\/android\/core\/ByteString;, IJJZ, Ljava\/util\/Map\<, Lio\/fabric\/sdk\/android\/services\/common\/IdManager$DeviceIdentifierType;, Ljava\/lang\/String;, \>;I, Lcom\/crashlytics\/android\/core\/ByteString;, Lcom\/crashlytics\/android\/core\/ByteString;, )I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_7;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
}

