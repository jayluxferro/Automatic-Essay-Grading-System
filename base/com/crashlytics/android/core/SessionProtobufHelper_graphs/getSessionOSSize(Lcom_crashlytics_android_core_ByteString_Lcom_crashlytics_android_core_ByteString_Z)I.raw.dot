digraph "CFG forcom.crashlytics.android.core.SessionProtobufHelper.getSessionOSSize(Lcom\/crashlytics\/android\/core\/ByteString;Lcom\/crashlytics\/android\/core\/ByteString;Z)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0001: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0002: INVOKE  (r1 I:int) = (r1 I:int), (r0 I:int) com.crashlytics.android.core.CodedOutputStream.computeEnumSize(int, int):int type: STATIC \l0x0006: ARITH  (r1 I:int) = (r1 I:int) + (0 int) \l0x0008: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0009: INVOKE  (r3 I:int) = (r2 I:int), (r3 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.CodedOutputStream.computeBytesSize(int, com.crashlytics.android.core.ByteString):int type: STATIC \l0x000d: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int) \l0x000e: INVOKE  (r3 I:int) = (r0 I:int), (r4 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.CodedOutputStream.computeBytesSize(int, com.crashlytics.android.core.ByteString):int type: STATIC \l0x0012: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int) \l0x0013: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0014: INVOKE  (r3 I:int) = (r3 I:int), (r5 I:boolean) com.crashlytics.android.core.CodedOutputStream.computeBoolSize(int, boolean):int type: STATIC \l0x0018: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{private static int com.crashlytics.android.core.SessionProtobufHelper.getSessionOSSize((r3 I:com.crashlytics.android.core.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.crashlytics.android.core.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

