digraph "CFG forcom.crashlytics.android.core.SessionProtobufHelper.writeBeginSession(Lcom\/crashlytics\/android\/core\/CodedOutputStream;Ljava\/lang\/String;Ljava\/lang\/String;J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:com.crashlytics.android.core.ByteString) = (r3 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x0004: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: INVOKE  \l  (r1 I:com.crashlytics.android.core.CodedOutputStream)\l  (r0 I:int)\l  (r3 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l0x0008: INVOKE  (r2 I:com.crashlytics.android.core.ByteString) = (r2 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x000c: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000d: INVOKE  \l  (r1 I:com.crashlytics.android.core.CodedOutputStream)\l  (r3 I:int)\l  (r2 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l0x0010: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0011: INVOKE  \l  (r1 I:com.crashlytics.android.core.CodedOutputStream)\l  (r2 I:int)\l  (r4 I:long)\l com.crashlytics.android.core.CodedOutputStream.writeUInt64(int, long):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: RETURN   \l}"];
MethodNode[shape=record,label="{public static void com.crashlytics.android.core.SessionProtobufHelper.writeBeginSession((r1 I:com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

