digraph "CFG forcom.crashlytics.android.core.SessionProtobufHelper.getFrameSize(Ljava\/lang\/StackTraceElement;Z)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r6 I:java.lang.StackTraceElement) java.lang.StackTraceElement.isNativeMethod():boolean type: VIRTUAL \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0017 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r0 I:int) = (r6 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getLineNumber():int type: VIRTUAL \l0x000c: INVOKE  (r0 I:int) = (r0 I:int), (r2 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x0010: CAST  (r3 I:long) = (long) (r0 I:int) \l0x0011: INVOKE  (r0 I:int) = (r1 I:int), (r3 I:long) com.crashlytics.android.core.CodedOutputStream.computeUInt64Size(int, long):int type: STATIC \l0x0015: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: CONST  (r3 I:?[long, double]) = (0 ?[long, double]) \l0x0019: INVOKE  (r0 I:int) = (r1 I:int), (r3 I:long) com.crashlytics.android.core.CodedOutputStream.computeUInt64Size(int, long):int type: STATIC \l0x001d: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0020: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0023: INVOKE  (r3 I:java.lang.String) = (r6 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getClassName():java.lang.String type: VIRTUAL \l0x0027: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002a: CONST_STR  (r3 I:java.lang.String) =  \".\" \l0x002c: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002f: INVOKE  (r3 I:java.lang.String) = (r6 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getMethodName():java.lang.String type: VIRTUAL \l0x0033: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0036: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003a: INVOKE  (r1 I:com.crashlytics.android.core.ByteString) = (r1 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x003e: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x003f: INVOKE  (r1 I:int) = (r3 I:int), (r1 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.CodedOutputStream.computeBytesSize(int, com.crashlytics.android.core.ByteString):int type: STATIC \l0x0043: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0044: INVOKE  (r1 I:java.lang.String) = (r6 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getFileName():java.lang.String type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0048|0x0048: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0058 \l}"];
Node_6 [shape=record,label="{6\:\ 0x004a|0x004a: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x004b: INVOKE  (r4 I:java.lang.String) = (r6 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getFileName():java.lang.String type: VIRTUAL \l0x004f: INVOKE  (r4 I:com.crashlytics.android.core.ByteString) = (r4 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x0053: INVOKE  (r1 I:int) = (r1 I:int), (r4 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.CodedOutputStream.computeBytesSize(int, com.crashlytics.android.core.ByteString):int type: STATIC \l0x0057: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0058|0x0058: INVOKE  (r1 I:boolean) = (r6 I:java.lang.StackTraceElement) java.lang.StackTraceElement.isNativeMethod():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x005c|0x005c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x006f \l}"];
Node_9 [shape=record,label="{9\:\ 0x005e|0x005e: INVOKE  (r1 I:int) = (r6 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getLineNumber():int type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0062|0x0062: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x006f \l}"];
Node_11 [shape=record,label="{11\:\ 0x0064|0x0064: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0065: INVOKE  (r6 I:int) = (r6 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getLineNumber():int type: VIRTUAL \l0x0069: CAST  (r4 I:long) = (long) (r6 I:int) \l0x006a: INVOKE  (r6 I:int) = (r1 I:int), (r4 I:long) com.crashlytics.android.core.CodedOutputStream.computeUInt64Size(int, long):int type: STATIC \l0x006e: ARITH  (r0 I:int) = (r0 I:int) + (r6 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x006f|0x006f: CONST  (r6 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0070|0x0070: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0073 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0072|0x0072: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0073|0x0073: INVOKE  (r6 I:int) = (r6 I:int), (r2 I:int) com.crashlytics.android.core.CodedOutputStream.computeUInt32Size(int, int):int type: STATIC \l0x0077: ARITH  (r0 I:int) = (r0 I:int) + (r6 I:int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0078|0x0078: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{private static int com.crashlytics.android.core.SessionProtobufHelper.getFrameSize((r6 I:java.lang.StackTraceElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

