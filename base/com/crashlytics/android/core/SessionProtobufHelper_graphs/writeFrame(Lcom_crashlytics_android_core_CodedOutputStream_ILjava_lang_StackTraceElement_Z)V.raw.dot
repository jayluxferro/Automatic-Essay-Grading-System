digraph "CFG forcom.crashlytics.android.core.SessionProtobufHelper.writeFrame(Lcom\/crashlytics\/android\/core\/CodedOutputStream;ILjava\/lang\/StackTraceElement;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0001: INVOKE  \l  (r5 I:com.crashlytics.android.core.CodedOutputStream)\l  (r6 I:int)\l  (r0 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeTag(int, int):void type: VIRTUAL \l0x0004: INVOKE  (r6 I:int) = (r7 I:java.lang.StackTraceElement), (r8 I:boolean) com.crashlytics.android.core.SessionProtobufHelper.getFrameSize(java.lang.StackTraceElement, boolean):int type: STATIC \l0x0008: INVOKE  \l  (r5 I:com.crashlytics.android.core.CodedOutputStream)\l  (r6 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeRawVarint32(int):void type: VIRTUAL \l0x000b: INVOKE  (r6 I:boolean) = (r7 I:java.lang.StackTraceElement) java.lang.StackTraceElement.isNativeMethod():boolean type: VIRTUAL \l0x000f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0020 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: INVOKE  (r6 I:int) = (r7 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getLineNumber():int type: VIRTUAL \l0x0017: INVOKE  (r6 I:int) = (r6 I:int), (r1 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x001b: CAST  (r3 I:long) = (long) (r6 I:int) \l0x001c: INVOKE  \l  (r5 I:com.crashlytics.android.core.CodedOutputStream)\l  (r2 I:int)\l  (r3 I:long)\l com.crashlytics.android.core.CodedOutputStream.writeUInt64(int, long):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|0x0020: CONST  (r3 I:?[long, double]) = (0 ?[long, double]) \l0x0022: INVOKE  \l  (r5 I:com.crashlytics.android.core.CodedOutputStream)\l  (r2 I:int)\l  (r3 I:long)\l com.crashlytics.android.core.CodedOutputStream.writeUInt64(int, long):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0027: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002a: INVOKE  (r2 I:java.lang.String) = (r7 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getClassName():java.lang.String type: VIRTUAL \l0x002e: INVOKE  (r6 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0031: CONST_STR  (r2 I:java.lang.String) =  \".\" \l0x0033: INVOKE  (r6 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0036: INVOKE  (r2 I:java.lang.String) = (r7 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getMethodName():java.lang.String type: VIRTUAL \l0x003a: INVOKE  (r6 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003d: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0041: INVOKE  (r6 I:com.crashlytics.android.core.ByteString) = (r6 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x0045: INVOKE  \l  (r5 I:com.crashlytics.android.core.CodedOutputStream)\l  (r0 I:int)\l  (r6 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l0x0048: INVOKE  (r6 I:java.lang.String) = (r7 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getFileName():java.lang.String type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x004c|0x004c: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x005a \l}"];
Node_6 [shape=record,label="{6\:\ 0x004e|0x004e: CONST  (r6 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x004f: INVOKE  (r0 I:java.lang.String) = (r7 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getFileName():java.lang.String type: VIRTUAL \l0x0053: INVOKE  (r0 I:com.crashlytics.android.core.ByteString) = (r0 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x0057: INVOKE  \l  (r5 I:com.crashlytics.android.core.CodedOutputStream)\l  (r6 I:int)\l  (r0 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x005a|0x005a: INVOKE  (r6 I:boolean) = (r7 I:java.lang.StackTraceElement) java.lang.StackTraceElement.isNativeMethod():boolean type: VIRTUAL \l0x005e: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x005f|0x005f: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x006f \l}"];
Node_9 [shape=record,label="{9\:\ 0x0061|0x0061: INVOKE  (r6 I:int) = (r7 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getLineNumber():int type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0065|0x0065: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x006f \l}"];
Node_11 [shape=record,label="{11\:\ 0x0067|0x0067: INVOKE  (r6 I:int) = (r7 I:java.lang.StackTraceElement) java.lang.StackTraceElement.getLineNumber():int type: VIRTUAL \l0x006b: CAST  (r6 I:long) = (long) (r6 I:int) \l0x006c: INVOKE  \l  (r5 I:com.crashlytics.android.core.CodedOutputStream)\l  (r0 I:int)\l  (r6 I:long)\l com.crashlytics.android.core.CodedOutputStream.writeUInt64(int, long):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x006f|0x006f: CONST  (r6 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0070|0x0070: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0073 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0073|0x0073: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0074|0x0074: INVOKE  \l  (r5 I:com.crashlytics.android.core.CodedOutputStream)\l  (r6 I:int)\l  (r0 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeUInt32(int, int):void type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0077|0x0077: RETURN   \l}"];
MethodNode[shape=record,label="{private static void com.crashlytics.android.core.SessionProtobufHelper.writeFrame((r5 I:com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.StackTraceElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
}

