digraph "CFG forcom.crashlytics.android.core.SessionProtobufHelper.getSessionEventSize(JLjava\/lang\/String;Lcom\/crashlytics\/android\/core\/TrimmedThrowableData;Ljava\/lang\/Thread;[Ljava\/lang\/StackTraceElement;[Ljava\/lang\/Thread;Ljava\/util\/List;ILjava\/util\/Map;Landroid\/app\/ActivityManager$RunningAppProcessInfo;ILcom\/crashlytics\/android\/core\/ByteString;Lcom\/crashlytics\/android\/core\/ByteString;Ljava\/lang\/Float;IZJJLcom\/crashlytics\/android\/core\/ByteString;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: MOVE  (r1 I:?[long, double]) = (r12 I:?[long, double]) \l0x0002: INVOKE  (r0 I:int) = (r0 I:int), (r12 I:long) com.crashlytics.android.core.CodedOutputStream.computeUInt64Size(int, long):int type: STATIC \l0x0006: ARITH  (r0 I:int) = (r0 I:int) + (0 int) \l0x0008: INVOKE  (r1 I:com.crashlytics.android.core.ByteString) = (r14 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x000c: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000d: INVOKE  (r1 I:int) = (r2 I:int), (r1 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.CodedOutputStream.computeBytesSize(int, com.crashlytics.android.core.ByteString):int type: STATIC \l0x0011: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0012: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0013: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0015: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0017: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0019: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x001b: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001d: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x001f: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x0021: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0023: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0025: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0027: INVOKE  (r1 I:int) = \l  (r1 I:com.crashlytics.android.core.TrimmedThrowableData)\l  (r2 I:java.lang.Thread)\l  (r3 I:java.lang.StackTraceElement[])\l  (r4 I:java.lang.Thread[])\l  (r5 I:java.util.List)\l  (r6 I:int)\l  (r7 I:com.crashlytics.android.core.ByteString)\l  (r8 I:com.crashlytics.android.core.ByteString)\l  (r9 I:java.util.Map)\l  (r10 I:android.app.ActivityManager$RunningAppProcessInfo)\l  (r11 I:int)\l com.crashlytics.android.core.SessionProtobufHelper.getEventAppSize(com.crashlytics.android.core.TrimmedThrowableData, java.lang.Thread, java.lang.StackTraceElement[], java.lang.Thread[], java.util.List, int, com.crashlytics.android.core.ByteString, com.crashlytics.android.core.ByteString, java.util.Map, android.app.ActivityManager$RunningAppProcessInfo, int):int type: STATIC \l0x002b: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x002c: INVOKE  (r2 I:int) = (r2 I:int) com.crashlytics.android.core.CodedOutputStream.computeTagSize(int):int type: STATIC \l0x0030: INVOKE  (r3 I:int) = (r1 I:int) com.crashlytics.android.core.CodedOutputStream.computeRawVarint32Size(int):int type: STATIC \l0x0034: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0035: ARITH  (r2 I:int) = (r2 I:int) + (r1 I:int) \l0x0036: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l0x0037: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x0039: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003b: MOVE  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r28 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003d: MOVE  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003f: MOVE  (r16 I:?[long, double]) = (r29 I:?[long, double]) \l0x0041: MOVE  (r18 I:?[long, double]) = (r31 I:?[long, double]) \l0x0043: INVOKE  (r1 I:int) = \l  (r12 I:java.lang.Float)\l  (r13 I:int)\l  (r14 I:boolean)\l  (r15 I:int)\l  (r16 I:long)\l  (r18 I:long)\l com.crashlytics.android.core.SessionProtobufHelper.getEventDeviceSize(java.lang.Float, int, boolean, int, long, long):int type: STATIC \l0x0047: CONST  (r2 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0048: INVOKE  (r2 I:int) = (r2 I:int) com.crashlytics.android.core.CodedOutputStream.computeTagSize(int):int type: STATIC \l0x004c: INVOKE  (r3 I:int) = (r1 I:int) com.crashlytics.android.core.CodedOutputStream.computeRawVarint32Size(int):int type: STATIC \l0x0050: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0051: ARITH  (r2 I:int) = (r2 I:int) + (r1 I:int) \l0x0052: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0053|0x0053: IF  (r33 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0065 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0055|0x0055: INVOKE  (r1 I:int) = (r33 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.SessionProtobufHelper.getEventLogSize(com.crashlytics.android.core.ByteString):int type: STATIC \l0x0059: CONST  (r2 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x005a: INVOKE  (r2 I:int) = (r2 I:int) com.crashlytics.android.core.CodedOutputStream.computeTagSize(int):int type: STATIC \l0x005e: INVOKE  (r3 I:int) = (r1 I:int) com.crashlytics.android.core.CodedOutputStream.computeRawVarint32Size(int):int type: STATIC \l0x0062: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0063: ARITH  (r2 I:int) = (r2 I:int) + (r1 I:int) \l0x0064: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0065|0x0065: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{private static int com.crashlytics.android.core.SessionProtobufHelper.getSessionEventSize((r12 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:com.crashlytics.android.core.TrimmedThrowableData A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:java.lang.Thread A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:java.lang.StackTraceElement[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:java.lang.Thread[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:java.util.List\<java.lang.StackTraceElement[]\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:java.util.Map\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:android.app.ActivityManager$RunningAppProcessInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:com.crashlytics.android.core.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:com.crashlytics.android.core.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:java.lang.Float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33 I:com.crashlytics.android.core.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(J, Ljava\/lang\/String;, Lcom\/crashlytics\/android\/core\/TrimmedThrowableData;, Ljava\/lang\/Thread;, [, Ljava\/lang\/StackTraceElement;, [, Ljava\/lang\/Thread;, Ljava\/util\/List\<, [, Ljava\/lang\/StackTraceElement;, \>;I, Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;, Landroid\/app\/ActivityManager$RunningAppProcessInfo;, I, Lcom\/crashlytics\/android\/core\/ByteString;, Lcom\/crashlytics\/android\/core\/ByteString;, Ljava\/lang\/Float;, IZJJ, Lcom\/crashlytics\/android\/core\/ByteString;, )I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

