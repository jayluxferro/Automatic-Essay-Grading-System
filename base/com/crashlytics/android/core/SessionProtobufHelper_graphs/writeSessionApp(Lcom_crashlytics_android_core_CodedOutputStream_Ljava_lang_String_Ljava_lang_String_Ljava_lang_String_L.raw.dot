digraph "CFG forcom.crashlytics.android.core.SessionProtobufHelper.writeSessionApp(Lcom\/crashlytics\/android\/core\/CodedOutputStream;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;ILjava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r9 I:com.crashlytics.android.core.ByteString) = (r9 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x0004: INVOKE  (r10 I:com.crashlytics.android.core.ByteString) = (r10 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x0008: INVOKE  (r11 I:com.crashlytics.android.core.ByteString) = (r11 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x000c: INVOKE  (r12 I:com.crashlytics.android.core.ByteString) = (r12 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x0010: INVOKE  (r13 I:com.crashlytics.android.core.ByteString) = (r13 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: INVOKE  (r15 I:com.crashlytics.android.core.ByteString) = (r15 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: CONST  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: CONST  (r0 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l0x001d: CONST  (r7 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x001e: INVOKE  \l  (r8 I:com.crashlytics.android.core.CodedOutputStream)\l  (r0 I:int)\l  (r7 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeTag(int, int):void type: VIRTUAL \l0x0021: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0022: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0023: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0024: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0025: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0026: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0027: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0028: INVOKE  (r0 I:int) = \l  (r0 I:com.crashlytics.android.core.ByteString)\l  (r1 I:com.crashlytics.android.core.ByteString)\l  (r2 I:com.crashlytics.android.core.ByteString)\l  (r3 I:com.crashlytics.android.core.ByteString)\l  (r4 I:com.crashlytics.android.core.ByteString)\l  (r5 I:int)\l  (r6 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.SessionProtobufHelper.getSessionAppSize(com.crashlytics.android.core.ByteString, com.crashlytics.android.core.ByteString, com.crashlytics.android.core.ByteString, com.crashlytics.android.core.ByteString, com.crashlytics.android.core.ByteString, int, com.crashlytics.android.core.ByteString):int type: STATIC \l0x002c: INVOKE  \l  (r8 I:com.crashlytics.android.core.CodedOutputStream)\l  (r0 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeRawVarint32(int):void type: VIRTUAL \l0x002f: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0030: INVOKE  \l  (r8 I:com.crashlytics.android.core.CodedOutputStream)\l  (r0 I:int)\l  (r9 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l0x0033: INVOKE  \l  (r8 I:com.crashlytics.android.core.CodedOutputStream)\l  (r7 I:int)\l  (r11 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l0x0036: CONST  (r9 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0037: INVOKE  \l  (r8 I:com.crashlytics.android.core.CodedOutputStream)\l  (r9 I:int)\l  (r12 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l0x003a: CONST  (r9 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x003b: INVOKE  \l  (r8 I:com.crashlytics.android.core.CodedOutputStream)\l  (r9 I:int)\l  (r7 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeTag(int, int):void type: VIRTUAL \l0x003e: INVOKE  (r9 I:int) = (r10 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.SessionProtobufHelper.getSessionAppOrgSize(com.crashlytics.android.core.ByteString):int type: STATIC \l0x0042: INVOKE  \l  (r8 I:com.crashlytics.android.core.CodedOutputStream)\l  (r9 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeRawVarint32(int):void type: VIRTUAL \l0x0045: INVOKE  \l  (r8 I:com.crashlytics.android.core.CodedOutputStream)\l  (r0 I:int)\l  (r10 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l0x0048: CONST  (r9 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0049: INVOKE  \l  (r8 I:com.crashlytics.android.core.CodedOutputStream)\l  (r9 I:int)\l  (r13 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x004c|0x004c: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x005a \l}"];
Node_6 [shape=record,label="{6\:\ 0x004e|0x004e: CONST  (r9 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0050: SGET  (r10 I:com.crashlytics.android.core.ByteString) =  com.crashlytics.android.core.SessionProtobufHelper.UNITY_PLATFORM_BYTE_STRING com.crashlytics.android.core.ByteString \l0x0052: INVOKE  \l  (r8 I:com.crashlytics.android.core.CodedOutputStream)\l  (r9 I:int)\l  (r10 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l0x0055: CONST  (r9 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l0x0057: INVOKE  \l  (r8 I:com.crashlytics.android.core.CodedOutputStream)\l  (r9 I:int)\l  (r15 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x005a|0x005a: CONST  (r9 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x005c: INVOKE  \l  (r8 I:com.crashlytics.android.core.CodedOutputStream)\l  (r9 I:int)\l  (r14 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeEnum(int, int):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x005f|0x005f: RETURN   \l}"];
MethodNode[shape=record,label="{public static void com.crashlytics.android.core.SessionProtobufHelper.writeSessionApp((r8 I:com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

