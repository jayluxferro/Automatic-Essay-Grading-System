digraph "CFG forcom.crashlytics.android.core.SessionProtobufHelper.writeSessionDevice(Lcom\/crashlytics\/android\/core\/CodedOutputStream;ILjava\/lang\/String;IJJZLjava\/util\/Map;ILjava\/lang\/String;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0002: INVOKE  (r13 I:com.crashlytics.android.core.ByteString) = (r19 I:java.lang.String) com.crashlytics.android.core.SessionProtobufHelper.stringToByteString(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x0006: INVOKE  (r14 I:com.crashlytics.android.core.ByteString) = (r29 I:java.lang.String) com.crashlytics.android.core.SessionProtobufHelper.stringToByteString(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x000a: INVOKE  (r15 I:com.crashlytics.android.core.ByteString) = (r28 I:java.lang.String) com.crashlytics.android.core.SessionProtobufHelper.stringToByteString(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x000e: CONST  (r12 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000f: CONST  (r1 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l0x0011: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream)\l  (r1 I:int)\l  (r12 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeTag(int, int):void type: VIRTUAL \l0x0014: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0016: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0017: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: MOVE  (r4 I:?[long, double]) = (r21 I:?[long, double]) \l0x001b: MOVE  (r6 I:?[long, double]) = (r23 I:?[long, double]) \l0x001d: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001f: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x0021: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0024: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0026: CONST  (r15 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0027: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0028: INVOKE  (r1 I:int) = \l  (r1 I:int)\l  (r2 I:com.crashlytics.android.core.ByteString)\l  (r3 I:int)\l  (r4 I:long)\l  (r6 I:long)\l  (r8 I:boolean)\l  (r9 I:java.util.Map)\l  (r10 I:int)\l  (r11 I:com.crashlytics.android.core.ByteString)\l  (r12 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.SessionProtobufHelper.getSessionDeviceSize(int, com.crashlytics.android.core.ByteString, int, long, long, boolean, java.util.Map, int, com.crashlytics.android.core.ByteString, com.crashlytics.android.core.ByteString):int type: STATIC \l0x002c: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream)\l  (r1 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeRawVarint32(int):void type: VIRTUAL \l0x002f: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0030: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0032: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream)\l  (r1 I:int)\l  (r2 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeEnum(int, int):void type: VIRTUAL \l0x0035: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0036: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream)\l  (r1 I:int)\l  (r13 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l0x0039: CONST  (r1 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x003a: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003c: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream)\l  (r1 I:int)\l  (r2 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeUInt32(int, int):void type: VIRTUAL \l0x003f: CONST  (r1 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0040: MOVE  (r2 I:?[long, double]) = (r21 I:?[long, double]) \l0x0042: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream)\l  (r1 I:int)\l  (r2 I:long)\l com.crashlytics.android.core.CodedOutputStream.writeUInt64(int, long):void type: VIRTUAL \l0x0045: CONST  (r1 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l0x0046: MOVE  (r2 I:?[long, double]) = (r23 I:?[long, double]) \l0x0048: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream)\l  (r1 I:int)\l  (r2 I:long)\l com.crashlytics.android.core.CodedOutputStream.writeUInt64(int, long):void type: VIRTUAL \l0x004b: CONST  (r1 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x004d: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004f: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream)\l  (r1 I:int)\l  (r2 I:boolean)\l com.crashlytics.android.core.CodedOutputStream.writeBool(int, boolean):void type: VIRTUAL \l0x0052: INVOKE  (r1 I:java.util.Set) = (r26 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x0056: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x005a|0x005a: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x005e|0x005e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0098 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0060|0x0060: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0064: CHECK_CAST  (r2 I:java.util.Map$Entry) = (java.util.Map$Entry) (r2 I:?[OBJECT, ARRAY]) \l0x0066: CONST  (r3 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l0x0068: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream)\l  (r3 I:int)\l  (r15 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeTag(int, int):void type: VIRTUAL \l0x006b: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x006f: CHECK_CAST  (r3 I:io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType) = (io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType) (r3 I:?[OBJECT, ARRAY]) \l0x0071: INVOKE  (r4 I:java.lang.Object) = (r2 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x0075: CHECK_CAST  (r4 I:java.lang.String) = (java.lang.String) (r4 I:?[OBJECT, ARRAY]) \l0x0077: INVOKE  (r3 I:int) = \l  (r3 I:io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType)\l  (r4 I:java.lang.String)\l com.crashlytics.android.core.SessionProtobufHelper.getDeviceIdentifierSize(io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType, java.lang.String):int type: STATIC \l0x007b: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream)\l  (r3 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeRawVarint32(int):void type: VIRTUAL \l0x007e: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x007f: INVOKE  (r4 I:java.lang.Object) = (r2 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x0083: CHECK_CAST  (r4 I:io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType) = (io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType) (r4 I:?[OBJECT, ARRAY]) \l0x0085: IGET  (r4 I:int) = \l  (r4 I:io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType)\l io.fabric.sdk.android.services.common.IdManager.DeviceIdentifierType.protobufIndex int \l0x0087: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream)\l  (r3 I:int)\l  (r4 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeEnum(int, int):void type: VIRTUAL \l0x008a: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x008e: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x0090: INVOKE  (r2 I:com.crashlytics.android.core.ByteString) = (r2 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x0094: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream)\l  (r15 I:int)\l  (r2 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0098|0x0098: CONST  (r1 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l0x009a: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x009c: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream)\l  (r1 I:int)\l  (r2 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeUInt32(int, int):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x009f|0x009f: IF  (r16 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x00a8 \l}"];
Node_6 [shape=record,label="{6\:\ 0x00a1|0x00a1: CONST  (r1 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l0x00a3: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x00a5: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream)\l  (r1 I:int)\l  (r2 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x00a8|0x00a8: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x00af \l}"];
Node_8 [shape=record,label="{8\:\ 0x00aa|0x00aa: CONST  (r1 I:?[int, float, short, byte, char]) = (14 ?[int, float, short, byte, char]) \l0x00ac: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream)\l  (r1 I:int)\l  (r14 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x00af|0x00af: RETURN   \l}"];
MethodNode[shape=record,label="{public static void com.crashlytics.android.core.SessionProtobufHelper.writeSessionDevice((r17 I:com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:java.util.Map\<io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/crashlytics\/android\/core\/CodedOutputStream;, I, Ljava\/lang\/String;, IJJZ, Ljava\/util\/Map\<, Lio\/fabric\/sdk\/android\/services\/common\/IdManager$DeviceIdentifierType;, Ljava\/lang\/String;, \>;I, Ljava\/lang\/String;, Ljava\/lang\/String;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
}

