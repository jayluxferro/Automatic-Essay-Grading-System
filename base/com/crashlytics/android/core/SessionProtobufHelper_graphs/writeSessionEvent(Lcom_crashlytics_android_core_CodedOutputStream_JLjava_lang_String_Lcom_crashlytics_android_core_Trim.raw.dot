digraph "CFG forcom.crashlytics.android.core.SessionProtobufHelper.writeSessionEvent(Lcom\/crashlytics\/android\/core\/CodedOutputStream;JLjava\/lang\/String;Lcom\/crashlytics\/android\/core\/TrimmedThrowableData;Ljava\/lang\/Thread;[Ljava\/lang\/StackTraceElement;[Ljava\/lang\/Thread;Ljava\/util\/List;Ljava\/util\/Map;Lcom\/crashlytics\/android\/core\/LogFileManager;Landroid\/app\/ActivityManager$RunningAppProcessInfo;ILjava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/Float;IZJJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r35 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r49 I:?[OBJECT, ARRAY]) \l0x0004: INVOKE  (r7 I:com.crashlytics.android.core.ByteString) = (r48 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: CONST_STR  (r1 I:java.lang.String) =  \"\-\" \l0x000f: CONST_STR  (r2 I:java.lang.String) =  \"\" \l0x0011: INVOKE  (r0 I:java.lang.String) = \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.CharSequence)\l  (r2 I:java.lang.CharSequence)\l java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence):java.lang.String type: VIRTUAL \l0x0015: INVOKE  (r0 I:com.crashlytics.android.core.ByteString) = (r0 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: INVOKE  (r11 I:com.crashlytics.android.core.ByteString) = (r45 I:com.crashlytics.android.core.LogFileManager) com.crashlytics.android.core.LogFileManager.getByteStringForLog():com.crashlytics.android.core.ByteString type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002b \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: INVOKE  (r0 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x0024: CONST_STR  (r1 I:java.lang.String) =  \"CrashlyticsCore\" \l0x0026: CONST_STR  (r2 I:java.lang.String) =  \"No log data to include with this event.\" \l0x0028: INVOKE  \l  (r0 I:io.fabric.sdk.android.Logger)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l io.fabric.sdk.android.Logger.d(java.lang.String, java.lang.String):void type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|0x002b: INVOKE  (r45 I:com.crashlytics.android.core.LogFileManager) com.crashlytics.android.core.LogFileManager.clearLog():void type: VIRTUAL \l0x002e: CONST  (r0 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0030: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0031: INVOKE  \l  (r12 I:com.crashlytics.android.core.CodedOutputStream)\l  (r0 I:int)\l  (r1 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeTag(int, int):void type: VIRTUAL \l0x0034: CONST  (r21 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0036: MOVE  (r13 I:?[long, double]) = (r36 I:?[long, double]) \l0x0038: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r38 I:?[OBJECT, ARRAY]) \l0x003a: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r39 I:?[OBJECT, ARRAY]) \l0x003c: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r40 I:?[OBJECT, ARRAY]) \l0x003e: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r41 I:?[OBJECT, ARRAY]) \l0x0040: MOVE  (r19 I:?[OBJECT, ARRAY]) = (r42 I:?[OBJECT, ARRAY]) \l0x0042: MOVE  (r20 I:?[OBJECT, ARRAY]) = (r43 I:?[OBJECT, ARRAY]) \l0x0044: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r44 I:?[OBJECT, ARRAY]) \l0x0046: MOVE  (r23 I:?[OBJECT, ARRAY]) = (r46 I:?[OBJECT, ARRAY]) \l0x0048: MOVE  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r47 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004a: MOVE  (r25 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x004c: MOVE  (r26 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x004e: MOVE  (r27 I:?[OBJECT, ARRAY]) = (r50 I:?[OBJECT, ARRAY]) \l0x0050: MOVE  (r28 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r51 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0052: MOVE  (r29 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r52 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0054: MOVE  (r30 I:?[long, double]) = (r53 I:?[long, double]) \l0x0056: MOVE  (r32 I:?[long, double]) = (r55 I:?[long, double]) \l0x0058: MOVE  (r34 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x005a: INVOKE  (r0 I:int) = \l  (r13 I:long)\l  (r15 I:java.lang.String)\l  (r16 I:com.crashlytics.android.core.TrimmedThrowableData)\l  (r17 I:java.lang.Thread)\l  (r18 I:java.lang.StackTraceElement[])\l  (r19 I:java.lang.Thread[])\l  (r20 I:java.util.List)\l  (r21 I:int)\l  (r22 I:java.util.Map)\l  (r23 I:android.app.ActivityManager$RunningAppProcessInfo)\l  (r24 I:int)\l  (r25 I:com.crashlytics.android.core.ByteString)\l  (r26 I:com.crashlytics.android.core.ByteString)\l  (r27 I:java.lang.Float)\l  (r28 I:int)\l  (r29 I:boolean)\l  (r30 I:long)\l  (r32 I:long)\l  (r34 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.SessionProtobufHelper.getSessionEventSize(long, java.lang.String, com.crashlytics.android.core.TrimmedThrowableData, java.lang.Thread, java.lang.StackTraceElement[], java.lang.Thread[], java.util.List, int, java.util.Map, android.app.ActivityManager$RunningAppProcessInfo, int, com.crashlytics.android.core.ByteString, com.crashlytics.android.core.ByteString, java.lang.Float, int, boolean, long, long, com.crashlytics.android.core.ByteString):int type: STATIC \l0x005e: INVOKE  \l  (r12 I:com.crashlytics.android.core.CodedOutputStream)\l  (r0 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeRawVarint32(int):void type: VIRTUAL \l0x0061: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0062: MOVE  (r2 I:?[long, double]) = (r36 I:?[long, double]) \l0x0064: INVOKE  \l  (r12 I:com.crashlytics.android.core.CodedOutputStream)\l  (r0 I:int)\l  (r2 I:long)\l com.crashlytics.android.core.CodedOutputStream.writeUInt64(int, long):void type: VIRTUAL \l0x0067: INVOKE  (r0 I:com.crashlytics.android.core.ByteString) = (r38 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x006b: INVOKE  \l  (r12 I:com.crashlytics.android.core.CodedOutputStream)\l  (r1 I:int)\l  (r0 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l0x006e: CONST  (r6 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0070: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r35 I:?[OBJECT, ARRAY]) \l0x0072: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r39 I:?[OBJECT, ARRAY]) \l0x0074: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r40 I:?[OBJECT, ARRAY]) \l0x0076: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r41 I:?[OBJECT, ARRAY]) \l0x0078: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r42 I:?[OBJECT, ARRAY]) \l0x007a: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r43 I:?[OBJECT, ARRAY]) \l0x007c: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r44 I:?[OBJECT, ARRAY]) \l0x007e: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r46 I:?[OBJECT, ARRAY]) \l0x0080: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0081: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r47 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0083: INVOKE  \l  (r0 I:com.crashlytics.android.core.CodedOutputStream)\l  (r1 I:com.crashlytics.android.core.TrimmedThrowableData)\l  (r2 I:java.lang.Thread)\l  (r3 I:java.lang.StackTraceElement[])\l  (r4 I:java.lang.Thread[])\l  (r5 I:java.util.List)\l  (r6 I:int)\l  (r7 I:com.crashlytics.android.core.ByteString)\l  (r8 I:com.crashlytics.android.core.ByteString)\l  (r9 I:java.util.Map)\l  (r10 I:android.app.ActivityManager$RunningAppProcessInfo)\l  (r11 I:int)\l com.crashlytics.android.core.SessionProtobufHelper.writeSessionEventApp(com.crashlytics.android.core.CodedOutputStream, com.crashlytics.android.core.TrimmedThrowableData, java.lang.Thread, java.lang.StackTraceElement[], java.lang.Thread[], java.util.List, int, com.crashlytics.android.core.ByteString, com.crashlytics.android.core.ByteString, java.util.Map, android.app.ActivityManager$RunningAppProcessInfo, int):void type: STATIC \l0x0086: MOVE  (r36 I:?[OBJECT, ARRAY]) = (r35 I:?[OBJECT, ARRAY]) \l0x0088: MOVE  (r37 I:?[OBJECT, ARRAY]) = (r50 I:?[OBJECT, ARRAY]) \l0x008a: MOVE  (r38 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r51 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x008c: MOVE  (r39 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r52 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x008e: MOVE  (r40 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r47 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0090: MOVE  (r41 I:?[long, double]) = (r53 I:?[long, double]) \l0x0092: MOVE  (r43 I:?[long, double]) = (r55 I:?[long, double]) \l0x0094: INVOKE  \l  (r36 I:com.crashlytics.android.core.CodedOutputStream)\l  (r37 I:java.lang.Float)\l  (r38 I:int)\l  (r39 I:boolean)\l  (r40 I:int)\l  (r41 I:long)\l  (r43 I:long)\l com.crashlytics.android.core.SessionProtobufHelper.writeSessionEventDevice(com.crashlytics.android.core.CodedOutputStream, java.lang.Float, int, boolean, int, long, long):void type: STATIC \l0x0097: INVOKE  \l  (r12 I:com.crashlytics.android.core.CodedOutputStream)\l  (r13 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.SessionProtobufHelper.writeSessionEventLog(com.crashlytics.android.core.CodedOutputStream, com.crashlytics.android.core.ByteString):void type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x009a|0x009a: RETURN   \l}"];
MethodNode[shape=record,label="{public static void com.crashlytics.android.core.SessionProtobufHelper.writeSessionEvent((r35 I:com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r36 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r38 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r39 I:com.crashlytics.android.core.TrimmedThrowableData A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r40 I:java.lang.Thread A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r41 I:java.lang.StackTraceElement[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r42 I:java.lang.Thread[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r43 I:java.util.List\<java.lang.StackTraceElement[]\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r44 I:java.util.Map\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r45 I:com.crashlytics.android.core.LogFileManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r46 I:android.app.ActivityManager$RunningAppProcessInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r47 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r48 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r49 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r50 I:java.lang.Float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r51 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r52 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r53 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r55 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/crashlytics\/android\/core\/CodedOutputStream;, J, Ljava\/lang\/String;, Lcom\/crashlytics\/android\/core\/TrimmedThrowableData;, Ljava\/lang\/Thread;, [, Ljava\/lang\/StackTraceElement;, [, Ljava\/lang\/Thread;, Ljava\/util\/List\<, [, Ljava\/lang\/StackTraceElement;, \>;, Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;, Lcom\/crashlytics\/android\/core\/LogFileManager;, Landroid\/app\/ActivityManager$RunningAppProcessInfo;, I, Ljava\/lang\/String;, Ljava\/lang\/String;, Ljava\/lang\/Float;, IZJJ)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_4 -> Node_3;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

