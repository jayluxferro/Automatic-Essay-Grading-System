digraph "CFG forcom.crashlytics.android.core.SessionProtobufHelper.writeSessionUser(Lcom\/crashlytics\/android\/core\/CodedOutputStream;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0004 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST_STR  (r8 I:java.lang.String) =  \"\" \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r8 I:com.crashlytics.android.core.ByteString) = (r8 I:java.lang.String) com.crashlytics.android.core.ByteString.copyFromUtf8(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x0008: INVOKE  (r0 I:com.crashlytics.android.core.ByteString) = (r9 I:java.lang.String) com.crashlytics.android.core.SessionProtobufHelper.stringToByteString(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x000c: INVOKE  (r1 I:com.crashlytics.android.core.ByteString) = (r10 I:java.lang.String) com.crashlytics.android.core.SessionProtobufHelper.stringToByteString(java.lang.String):com.crashlytics.android.core.ByteString type: STATIC \l0x0010: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0011: INVOKE  (r3 I:int) = (r2 I:int), (r8 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.CodedOutputStream.computeBytesSize(int, com.crashlytics.android.core.ByteString):int type: STATIC \l0x0015: ARITH  (r3 I:int) = (r3 I:int) + (0 int) \l0x0017: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001f \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: INVOKE  (r5 I:int) = (r4 I:int), (r0 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.CodedOutputStream.computeBytesSize(int, com.crashlytics.android.core.ByteString):int type: STATIC \l0x001e: ARITH  (r3 I:int) = (r3 I:int) + (r5 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: CONST  (r5 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0027 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: INVOKE  (r6 I:int) = (r5 I:int), (r1 I:com.crashlytics.android.core.ByteString) com.crashlytics.android.core.CodedOutputStream.computeBytesSize(int, com.crashlytics.android.core.ByteString):int type: STATIC \l0x0026: ARITH  (r3 I:int) = (r3 I:int) + (r6 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: CONST  (r6 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0028: INVOKE  \l  (r7 I:com.crashlytics.android.core.CodedOutputStream)\l  (r6 I:int)\l  (r4 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeTag(int, int):void type: VIRTUAL \l0x002b: INVOKE  \l  (r7 I:com.crashlytics.android.core.CodedOutputStream)\l  (r3 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeRawVarint32(int):void type: VIRTUAL \l0x002e: INVOKE  \l  (r7 I:com.crashlytics.android.core.CodedOutputStream)\l  (r2 I:int)\l  (r8 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0036 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|0x0033: INVOKE  \l  (r7 I:com.crashlytics.android.core.CodedOutputStream)\l  (r4 I:int)\l  (r0 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|0x0036: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x003b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|0x0038: INVOKE  \l  (r7 I:com.crashlytics.android.core.CodedOutputStream)\l  (r5 I:int)\l  (r1 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.CodedOutputStream.writeBytes(int, com.crashlytics.android.core.ByteString):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|0x003b: RETURN   \l}"];
MethodNode[shape=record,label="{public static void com.crashlytics.android.core.SessionProtobufHelper.writeSessionUser((r7 I:com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
}

