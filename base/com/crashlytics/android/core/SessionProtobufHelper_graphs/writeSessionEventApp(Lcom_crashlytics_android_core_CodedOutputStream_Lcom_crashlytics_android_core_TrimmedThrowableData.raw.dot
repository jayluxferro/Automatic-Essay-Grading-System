digraph "CFG forcom.crashlytics.android.core.SessionProtobufHelper.writeSessionEventApp(Lcom\/crashlytics\/android\/core\/CodedOutputStream;Lcom\/crashlytics\/android\/core\/TrimmedThrowableData;Ljava\/lang\/Thread;[Ljava\/lang\/StackTraceElement;[Ljava\/lang\/Thread;Ljava\/util\/List;ILcom\/crashlytics\/android\/core\/ByteString;Lcom\/crashlytics\/android\/core\/ByteString;Ljava\/util\/Map;Landroid\/app\/ActivityManager$RunningAppProcessInfo;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0001: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0002: INVOKE  \l  (r2 I:com.crashlytics.android.core.CodedOutputStream)\l  (r0 I:int)\l  (r1 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeTag(int, int):void type: VIRTUAL \l0x0005: INVOKE  (r1 I:int) = \l  (r3 I:com.crashlytics.android.core.TrimmedThrowableData)\l  (r4 I:java.lang.Thread)\l  (r5 I:java.lang.StackTraceElement[])\l  (r6 I:java.lang.Thread[])\l  (r7 I:java.util.List)\l  (r8 I:int)\l  (r9 I:com.crashlytics.android.core.ByteString)\l  (r10 I:com.crashlytics.android.core.ByteString)\l  (r11 I:java.util.Map)\l  (r12 I:android.app.ActivityManager$RunningAppProcessInfo)\l  (r13 I:int)\l com.crashlytics.android.core.SessionProtobufHelper.getEventAppSize(com.crashlytics.android.core.TrimmedThrowableData, java.lang.Thread, java.lang.StackTraceElement[], java.lang.Thread[], java.util.List, int, com.crashlytics.android.core.ByteString, com.crashlytics.android.core.ByteString, java.util.Map, android.app.ActivityManager$RunningAppProcessInfo, int):int type: STATIC \l0x0009: INVOKE  \l  (r2 I:com.crashlytics.android.core.CodedOutputStream)\l  (r1 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeRawVarint32(int):void type: VIRTUAL \l0x000c: INVOKE  \l  (r2 I:com.crashlytics.android.core.CodedOutputStream)\l  (r3 I:com.crashlytics.android.core.TrimmedThrowableData)\l  (r4 I:java.lang.Thread)\l  (r5 I:java.lang.StackTraceElement[])\l  (r6 I:java.lang.Thread[])\l  (r7 I:java.util.List)\l  (r8 I:int)\l  (r9 I:com.crashlytics.android.core.ByteString)\l  (r10 I:com.crashlytics.android.core.ByteString)\l com.crashlytics.android.core.SessionProtobufHelper.writeSessionEventAppExecution(com.crashlytics.android.core.CodedOutputStream, com.crashlytics.android.core.TrimmedThrowableData, java.lang.Thread, java.lang.StackTraceElement[], java.lang.Thread[], java.util.List, int, com.crashlytics.android.core.ByteString, com.crashlytics.android.core.ByteString):void type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: INVOKE  (r3 I:boolean) = (r11 I:java.util.Map) java.util.Map.isEmpty():boolean type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: INVOKE  \l  (r2 I:com.crashlytics.android.core.CodedOutputStream)\l  (r11 I:java.util.Map)\l com.crashlytics.android.core.SessionProtobufHelper.writeSessionEventAppCustomAttributes(com.crashlytics.android.core.CodedOutputStream, java.util.Map):void type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0028 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IGET  (r3 I:int) = (r12 I:android.app.ActivityManager$RunningAppProcessInfo) android.app.ActivityManager.RunningAppProcessInfo.importance int \l0x001e: CONST  (r4 I:?[int, float, short, byte, char]) = (100 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0024 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: INVOKE  \l  (r2 I:com.crashlytics.android.core.CodedOutputStream)\l  (r0 I:int)\l  (r3 I:boolean)\l com.crashlytics.android.core.CodedOutputStream.writeBool(int, boolean):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0029: INVOKE  \l  (r2 I:com.crashlytics.android.core.CodedOutputStream)\l  (r3 I:int)\l  (r13 I:int)\l com.crashlytics.android.core.CodedOutputStream.writeUInt32(int, int):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|0x002c: RETURN   \l}"];
MethodNode[shape=record,label="{private static void com.crashlytics.android.core.SessionProtobufHelper.writeSessionEventApp((r2 I:com.crashlytics.android.core.CodedOutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.crashlytics.android.core.TrimmedThrowableData A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Thread A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.StackTraceElement[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Thread[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.List\<java.lang.StackTraceElement[]\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:com.crashlytics.android.core.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:com.crashlytics.android.core.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.util.Map\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.app.ActivityManager$RunningAppProcessInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/crashlytics\/android\/core\/CodedOutputStream;, Lcom\/crashlytics\/android\/core\/TrimmedThrowableData;, Ljava\/lang\/Thread;, [, Ljava\/lang\/StackTraceElement;, [, Ljava\/lang\/Thread;, Ljava\/util\/List\<, [, Ljava\/lang\/StackTraceElement;, \>;I, Lcom\/crashlytics\/android\/core\/ByteString;, Lcom\/crashlytics\/android\/core\/ByteString;, Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;, Landroid\/app\/ActivityManager$RunningAppProcessInfo;, I)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

