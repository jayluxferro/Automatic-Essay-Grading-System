digraph "CFG forcom.crashlytics.android.answers.SessionAnalyticsManager.enable()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.crashlytics.android.answers.AnswersEventsHandler) = \l  (r3 I:com.crashlytics.android.answers.SessionAnalyticsManager)\l com.crashlytics.android.answers.SessionAnalyticsManager.eventsHandler com.crashlytics.android.answers.AnswersEventsHandler \l0x0002: INVOKE  (r0 I:com.crashlytics.android.answers.AnswersEventsHandler) com.crashlytics.android.answers.AnswersEventsHandler.enable():void type: VIRTUAL \l0x0005: IGET  (r0 I:io.fabric.sdk.android.ActivityLifecycleManager) = \l  (r3 I:com.crashlytics.android.answers.SessionAnalyticsManager)\l com.crashlytics.android.answers.SessionAnalyticsManager.lifecycleManager io.fabric.sdk.android.ActivityLifecycleManager \l0x0007: NEW_INSTANCE  (r1 I:com.crashlytics.android.answers.AnswersLifecycleCallbacks) =  com.crashlytics.android.answers.AnswersLifecycleCallbacks \l0x0009: IGET  (r2 I:com.crashlytics.android.answers.BackgroundManager) = \l  (r3 I:com.crashlytics.android.answers.SessionAnalyticsManager)\l com.crashlytics.android.answers.SessionAnalyticsManager.backgroundManager com.crashlytics.android.answers.BackgroundManager \l0x000b: INVOKE  \l  (r1 I:com.crashlytics.android.answers.AnswersLifecycleCallbacks)\l  (r3 I:com.crashlytics.android.answers.SessionAnalyticsManager)\l  (r2 I:com.crashlytics.android.answers.BackgroundManager)\l com.crashlytics.android.answers.AnswersLifecycleCallbacks.\<init\>(com.crashlytics.android.answers.SessionAnalyticsManager, com.crashlytics.android.answers.BackgroundManager):void type: DIRECT \l0x000e: INVOKE  \l  (r0 I:io.fabric.sdk.android.ActivityLifecycleManager)\l  (r1 I:io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)\l io.fabric.sdk.android.ActivityLifecycleManager.registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks):boolean type: VIRTUAL \l0x0011: IGET  (r0 I:com.crashlytics.android.answers.BackgroundManager) = \l  (r3 I:com.crashlytics.android.answers.SessionAnalyticsManager)\l com.crashlytics.android.answers.SessionAnalyticsManager.backgroundManager com.crashlytics.android.answers.BackgroundManager \l0x0013: INVOKE  \l  (r0 I:com.crashlytics.android.answers.BackgroundManager)\l  (r3 I:com.crashlytics.android.answers.BackgroundManager$Listener)\l com.crashlytics.android.answers.BackgroundManager.registerListener(com.crashlytics.android.answers.BackgroundManager$Listener):void type: VIRTUAL \l0x0016: INVOKE  (r0 I:boolean) = \l  (r3 I:com.crashlytics.android.answers.SessionAnalyticsManager)\l com.crashlytics.android.answers.SessionAnalyticsManager.isFirstLaunch():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0026 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001c|0x001c: IGET  (r0 I:long) = \l  (r3 I:com.crashlytics.android.answers.SessionAnalyticsManager)\l com.crashlytics.android.answers.SessionAnalyticsManager.installedAt long \l0x001e: INVOKE  \l  (r3 I:com.crashlytics.android.answers.SessionAnalyticsManager)\l  (r0 I:long)\l com.crashlytics.android.answers.SessionAnalyticsManager.onInstall(long):void type: VIRTUAL \l0x0021: IGET  (r0 I:com.crashlytics.android.answers.AnswersPreferenceManager) = \l  (r3 I:com.crashlytics.android.answers.SessionAnalyticsManager)\l com.crashlytics.android.answers.SessionAnalyticsManager.preferenceManager com.crashlytics.android.answers.AnswersPreferenceManager \l0x0023: INVOKE  \l  (r0 I:com.crashlytics.android.answers.AnswersPreferenceManager)\l com.crashlytics.android.answers.AnswersPreferenceManager.setAnalyticsLaunched():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0026|0x0026: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.crashlytics.android.answers.SessionAnalyticsManager.enable((r3 'this' I:com.crashlytics.android.answers.SessionAnalyticsManager A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

