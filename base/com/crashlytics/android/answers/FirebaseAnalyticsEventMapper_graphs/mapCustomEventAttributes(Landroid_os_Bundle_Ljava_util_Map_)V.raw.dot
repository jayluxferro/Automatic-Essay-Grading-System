digraph "CFG forcom.crashlytics.android.answers.FirebaseAnalyticsEventMapper.mapCustomEventAttributes(Landroid\/os\/Bundle;Ljava\/util\/Map;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:java.util.Set) = (r6 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x0004: INVOKE  (r6 I:java.util.Iterator) = (r6 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: INVOKE  (r0 I:boolean) = (r6 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0068 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: INVOKE  (r0 I:java.lang.Object) = (r6 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0012: CHECK_CAST  (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:?[OBJECT, ARRAY]) \l0x0014: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x0018: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x001c: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x001e: INVOKE  (r2 I:java.lang.String) = \l  (r4 I:com.crashlytics.android.answers.FirebaseAnalyticsEventMapper)\l  (r2 I:java.lang.String)\l com.crashlytics.android.answers.FirebaseAnalyticsEventMapper.mapAttribute(java.lang.String):java.lang.String type: DIRECT \l0x0022: INSTANCE_OF  (r3 I:boolean) = (r1 I:?[OBJECT, ARRAY]) java.lang.String \l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0032 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x002a: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) java.lang.Object.toString():java.lang.String type: VIRTUAL \l0x002e: INVOKE  \l  (r5 I:android.os.Bundle)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.String)\l android.os.Bundle.putString(java.lang.String, java.lang.String):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0032|0x0032: INSTANCE_OF  (r3 I:boolean) = (r1 I:?[OBJECT, ARRAY]) java.lang.Double \l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|0x0034: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0044 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0036|0x0036: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x003a: CHECK_CAST  (r0 I:java.lang.Double) = (java.lang.Double) (r0 I:?[OBJECT, ARRAY]) \l0x003c: INVOKE  (r0 I:double) = (r0 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0040: INVOKE  \l  (r5 I:android.os.Bundle)\l  (r2 I:java.lang.String)\l  (r0 I:double)\l android.os.Bundle.putDouble(java.lang.String, double):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0044|0x0044: INSTANCE_OF  (r3 I:boolean) = (r1 I:?[OBJECT, ARRAY]) java.lang.Long \l}"];
Node_10 [shape=record,label="{10\:\ 0x0046|0x0046: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0056 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0048|0x0048: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x004c: CHECK_CAST  (r0 I:java.lang.Long) = (java.lang.Long) (r0 I:?[OBJECT, ARRAY]) \l0x004e: INVOKE  (r0 I:long) = (r0 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL \l0x0052: INVOKE  \l  (r5 I:android.os.Bundle)\l  (r2 I:java.lang.String)\l  (r0 I:long)\l android.os.Bundle.putLong(java.lang.String, long):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0056|0x0056: INSTANCE_OF  (r1 I:boolean) = (r1 I:?[OBJECT, ARRAY]) java.lang.Integer \l}"];
Node_13 [shape=record,label="{13\:\ 0x0058|0x0058: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0008 \l}"];
Node_14 [shape=record,label="{14\:\ 0x005a|0x005a: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x005e: CHECK_CAST  (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:?[OBJECT, ARRAY]) \l0x0060: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0064: INVOKE  \l  (r5 I:android.os.Bundle)\l  (r2 I:java.lang.String)\l  (r0 I:int)\l android.os.Bundle.putInt(java.lang.String, int):void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0068|0x0068: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.crashlytics.android.answers.FirebaseAnalyticsEventMapper.mapCustomEventAttributes((r4 'this' I:com.crashlytics.android.answers.FirebaseAnalyticsEventMapper A[IMMUTABLE_TYPE, THIS]), (r5 I:android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.Map\<java.lang.String, java.lang.Object\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/os\/Bundle;, Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/lang\/Object;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_1;
}

