digraph "CFG forcom.crashlytics.android.answers.FirebaseAnalyticsApiAdapter.processEvent(Lcom\/crashlytics\/android\/answers\/SessionEvent;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.crashlytics.android.answers.EventLogger r0 = getFirebaseAnalytics()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 != null) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|p018io.fabric.sdk.android.Fabric.getLogger().mo22221d(com.crashlytics.android.answers.Answers.TAG, \"Firebase analytics logging was enabled, but not available...\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|com.crashlytics.android.answers.FirebaseAnalyticsEvent r1 = r4.eventMapper.mapEvent(r5)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r1 != null) goto L_0x0035\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|io.fabric.sdk.android.Logger r0 = p018io.fabric.sdk.android.Fabric.getLogger()\ljava.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Fabric event was not mappable to Firebase event: \")\lr2.append(r5)\lr0.mo22221d(com.crashlytics.android.answers.Answers.TAG, r2.toString())\l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x0035|r0.logEvent(r1.getEventName(), r1.getEventParams())\l}"];
Node_9 [shape=record,label="{9\:\ 0x0048|if (\"levelEnd\".equals(r5.predefinedType) == false) goto L_?\l}"];
Node_10 [shape=record,label="{10\:\ 0x004a|r0.logEvent(com.google.firebase.analytics.FirebaseAnalytics.Event.POST_SCORE, r1.getEventParams())\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter.processEvent((r4v0 'this' com.crashlytics.android.answers.FirebaseAnalyticsApiAdapter A[IMMUTABLE_TYPE, THIS]), (r5v0 com.crashlytics.android.answers.SessionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
}

