digraph "CFG forcom.crashlytics.android.answers.AnswersEventsHandler.executeSync(Ljava\/lang\/Runnable;)V" {
subgraph cluster_Region_1768408327 {
label = "R(1:(1:1))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_2065292577 {
label = "Try: R(1:1) catches: R(2:2|3)";
node [shape=record,color=blue];
subgraph cluster_Region_1967715743 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ Exception \-\> 0x000a \}\lSplitter:B:0:0x0000\l|r3.executor.submit(r4).get()     \/\/ Catch:\{ Exception \-\> 0x000a \}\l}"];
}
subgraph cluster_Region_917375103 {
label = "R(2:2|3) | ExcHandler: Exception (r4v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|ExcHandler: Exception (r4v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|p018io.fabric.sdk.android.Fabric.getLogger().mo22224e(com.crashlytics.android.answers.Answers.TAG, \"Failed to run events task\", r4)\l}"];
}
}
}
subgraph cluster_Region_917375103 {
label = "R(2:2|3) | ExcHandler: Exception (r4v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|ExcHandler: Exception (r4v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|p018io.fabric.sdk.android.Fabric.getLogger().mo22224e(com.crashlytics.android.answers.Answers.TAG, \"Failed to run events task\", r4)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.crashlytics.android.answers.AnswersEventsHandler.executeSync((r3v0 'this' com.crashlytics.android.answers.AnswersEventsHandler A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.Runnable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_0 -> Node_1;
Node_0 -> Node_2;
}

