digraph "CFG forcom.crashlytics.android.answers.CustomEvent.\<init\>(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:com.crashlytics.android.answers.AnswersEvent) com.crashlytics.android.answers.AnswersEvent.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r0 I:com.crashlytics.android.answers.AnswersEventValidator) = (r1 I:com.crashlytics.android.answers.CustomEvent) com.crashlytics.android.answers.CustomEvent.validator com.crashlytics.android.answers.AnswersEventValidator \l0x0007: INVOKE  (r2 I:java.lang.String) = \l  (r0 I:com.crashlytics.android.answers.AnswersEventValidator)\l  (r2 I:java.lang.String)\l com.crashlytics.android.answers.AnswersEventValidator.limitStringLength(java.lang.String):java.lang.String type: VIRTUAL \l0x000b: IPUT  \l  (r2 I:java.lang.String)\l  (r1 I:com.crashlytics.android.answers.CustomEvent)\l com.crashlytics.android.answers.CustomEvent.eventName java.lang.String \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: NEW_INSTANCE  (r2 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x0010: CONST_STR  (r0 I:java.lang.String) =  \"eventName must not be null\" \l0x0012: INVOKE  \l  (r2 I:java.lang.NullPointerException)\l  (r0 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.crashlytics.android.answers.CustomEvent.\<init\>((r1 'this' I:com.crashlytics.android.answers.CustomEvent A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

