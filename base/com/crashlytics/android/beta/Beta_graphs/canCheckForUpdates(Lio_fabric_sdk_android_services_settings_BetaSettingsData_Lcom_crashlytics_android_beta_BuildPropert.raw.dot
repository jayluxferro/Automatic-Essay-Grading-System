digraph "CFG forcom.crashlytics.android.beta.Beta.canCheckForUpdates(Lio\/fabric\/sdk\/android\/services\/settings\/BetaSettingsData;Lcom\/crashlytics\/android\/beta\/BuildProperties;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000e \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r1 I:java.lang.String) = \l  (r1 I:io.fabric.sdk.android.services.settings.BetaSettingsData)\l io.fabric.sdk.android.services.settings.BetaSettingsData.updateUrl java.lang.String \l0x0004: INVOKE  (r1 I:boolean) = (r1 I:java.lang.CharSequence) android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000e \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean com.crashlytics.android.beta.Beta.canCheckForUpdates((r0 'this' I:com.crashlytics.android.beta.Beta A[IMMUTABLE_TYPE, THIS]), (r1 I:io.fabric.sdk.android.services.settings.BetaSettingsData A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:com.crashlytics.android.beta.BuildProperties A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
}

