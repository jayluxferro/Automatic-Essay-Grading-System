digraph "CFG forcom.crashlytics.android.beta.AbstractCheckForUpdatesController.initialize(Landroid\/content\/Context;Lcom\/crashlytics\/android\/beta\/Beta;Lio\/fabric\/sdk\/android\/services\/common\/IdManager;Lio\/fabric\/sdk\/android\/services\/settings\/BetaSettingsData;Lcom\/crashlytics\/android\/beta\/BuildProperties;Lio\/fabric\/sdk\/android\/services\/persistence\/PreferenceStore;Lio\/fabric\/sdk\/android\/services\/common\/CurrentTimeProvider;Lio\/fabric\/sdk\/android\/services\/network\/HttpRequestFactory;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0.context = r1\lr0.beta = r2\lr0.idManager = r3\lr0.betaSettings = r4\lr0.buildProps = r5\lr0.preferenceStore = r6\lr0.currentTimeProvider = r7\lr0.httpRequestFactory = r8\l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|if (signalInitialized() == false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|checkForUpdates()\l}"];
Node_3 [shape=record,label="{3\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.crashlytics.android.beta.AbstractCheckForUpdatesController.initialize((r0v0 'this' com.crashlytics.android.beta.AbstractCheckForUpdatesController A[IMMUTABLE_TYPE, THIS]), (r1v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 com.crashlytics.android.beta.Beta A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 io.fabric.sdk.android.services.common.IdManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 io.fabric.sdk.android.services.settings.BetaSettingsData A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 com.crashlytics.android.beta.BuildProperties A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 io.fabric.sdk.android.services.persistence.PreferenceStore A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 io.fabric.sdk.android.services.common.CurrentTimeProvider A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 io.fabric.sdk.android.services.network.HttpRequestFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

