digraph "CFG forcom.crashlytics.android.beta.AbstractCheckForUpdatesController.checkForUpdates()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|io.fabric.sdk.android.services.persistence.PreferenceStore r0 = r9.preferenceStore\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|monitor\-enter(r0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?}"];
Node_4 [shape=record,label="{4\:\ 0x000f|if (r9.preferenceStore.get().contains(LAST_UPDATE_CHECK_KEY) == false) goto L_0x0022\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|r9.preferenceStore.save(r9.preferenceStore.edit().remove(LAST_UPDATE_CHECK_KEY))\l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|monitor\-exit(r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|long r0 = r9.currentTimeProvider.getCurrentTimeMillis()\llong r2 = ((long) r9.betaSettings.updateSuspendDurationSeconds) * 1000\lio.fabric.sdk.android.Logger r4 = p018io.fabric.sdk.android.Fabric.getLogger()\ljava.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"Check for updates delay: \")\lr6.append(r2)\lr4.mo22221d(com.crashlytics.android.beta.Beta.TAG, r6.toString())\lio.fabric.sdk.android.Logger r4 = p018io.fabric.sdk.android.Fabric.getLogger()\ljava.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"Check for updates last check time: \")\lr6.append(getLastCheckTimeMillis())\lr4.mo22221d(com.crashlytics.android.beta.Beta.TAG, r6.toString())\llong r4 = getLastCheckTimeMillis() + r2\lio.fabric.sdk.android.Logger r2 = p018io.fabric.sdk.android.Fabric.getLogger()\ljava.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"Check for updates current time: \")\lr6.append(r0)\lr6.append(\", next check time: \")\lr6.append(r4)\lr2.mo22221d(com.crashlytics.android.beta.Beta.TAG, r6.toString())\l}"];
Node_8 [shape=record,label="{8\:\ 0x0093|if ((r0 \> r4 ? 1 : (r0 == r4 ? 0 : \-1)) \< 0) goto L_0x00a1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0095|SYNTHETIC\lSplitter:B:9:0x0095\l}"];
Node_10 [shape=record,label="{10\:\ ?|Catch:\{ all \-\> 0x009c \}\lSplitter:B:9:0x0095\l|performUpdateCheck()     \/\/ Catch:\{ all \-\> 0x009c \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0098|DONT_GENERATE\l|setLastCheckTimeMillis(r0)\l}"];
Node_12 [shape=record,label="{12\:\ 0x009c|ExcHandler:  FINALLY\lSplitter:B:9:0x0095\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_13 [shape=record,label="{13\:\ 0x009d|FINALLY_INSNS\l|setLastCheckTimeMillis(r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x00a0|throw r2\l}"];
Node_15 [shape=record,label="{15\:\ 0x00a1|p018io.fabric.sdk.android.Fabric.getLogger().mo22221d(com.crashlytics.android.beta.Beta.TAG, \"Check for updates next check time was not passed\")\l}"];
Node_16 [shape=record,label="{16\:\ 0x00ad|LOOP_START\lREMOVE\lLOOP:0: B:16:0x00ad\-\>B:20:0x00ad\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_17 [shape=record,label="{17\:\ 0x00ae|SYNTHETIC\lREMOVE\lSplitter:B:17:0x00ae\l}"];
Node_18 [shape=record,label="{18\:\ ?|REMOVE\lSplitter:B:17:0x00ae\l}"];
Node_19 [shape=record,label="{19\:\ 0x00af|REMOVE\l|throw r1\l}"];
Node_20 [shape=record,label="{20\:\ 0x00ad|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:16:0x00ad\-\>B:20:0x00ad\l}"];
Node_21 [shape=record,label="{21\:\ 0x00af|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_22 [shape=record,label="{22\:\ 0x00ad|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void com.crashlytics.android.beta.AbstractCheckForUpdatesController.checkForUpdates((r9v0 'this' com.crashlytics.android.beta.AbstractCheckForUpdatesController A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.annotation.SuppressLint, \{value=[CommitPrefEdits]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_16;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_24;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_23;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_20;
Node_18 -> Node_21;
Node_18 -> Node_22;
Node_20 -> Node_16;
Node_21 -> Node_19;
Node_22 -> Node_20;
}

