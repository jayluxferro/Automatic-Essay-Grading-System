digraph "CFG forcom.crashlytics.android.beta.DeviceTokenLoader.load(Landroid\/content\/Context;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:long) =  java.lang.System.nanoTime():long type: STATIC \l0x0004: CONST_STR  (r2 I:java.lang.String) =  \"\" \l0x0006: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CONST_STR  (r4 I:java.lang.String) =  \"io.crash.air\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|SYNTHETIC\lSplitter:B:1:0x0009\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0009\l|0x0009: INVOKE  (r9 I:java.util.zip.ZipInputStream) = \l  (r8 I:com.crashlytics.android.beta.DeviceTokenLoader)\l  (r9 I:android.content.Context)\l  (r4 I:java.lang.String)\l com.crashlytics.android.beta.DeviceTokenLoader.getZipInputStreamOfApkFrom(android.content.Context, java.lang.String):java.util.zip.ZipInputStream type: VIRTUAL A[Catch:\{ NameNotFoundException \-\> 0x005b, FileNotFoundException \-\> 0x0049, IOException \-\> 0x0037 \}, TRY_ENTER]\l0x000c: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|SYNTHETIC\lSplitter:B:3:0x000d\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x000d\l|0x000d: INVOKE  (r3 I:java.lang.String) = \l  (r8 I:com.crashlytics.android.beta.DeviceTokenLoader)\l  (r9 I:java.util.zip.ZipInputStream)\l com.crashlytics.android.beta.DeviceTokenLoader.determineDeviceToken(java.util.zip.ZipInputStream):java.lang.String type: VIRTUAL A[Catch:\{ NameNotFoundException \-\> 0x0033, FileNotFoundException \-\> 0x002e, IOException \-\> 0x0029, all \-\> 0x0025 \}, TRY_ENTER]\l0x0010: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0023 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|SYNTHETIC\lSplitter:B:6:0x0013\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0013\l|0x0013: INVOKE  (r9 I:java.util.zip.ZipInputStream) java.util.zip.ZipInputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0017 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|ExcHandler: IOException null\lSplitter:B:6:0x0013\l|0x0017: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|0x0018: INVOKE  (r2 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x001c: CONST_STR  (r4 I:java.lang.String) =  \"Beta\" \l0x001e: CONST_STR  (r5 I:java.lang.String) =  \"Failed to close the APK file\" \l0x0020: INVOKE  \l  (r2 I:io.fabric.sdk.android.Logger)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r9 I:java.lang.Throwable)\l io.fabric.sdk.android.Logger.e(java.lang.String, java.lang.String, java.lang.Throwable):void type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|ExcHandler: all null\lSplitter:B:3:0x000d\l|0x0025: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|0x0026: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|ExcHandler: IOException null\lSplitter:B:3:0x000d\l|0x0029: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|0x002a: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x002b: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x002c: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x002e|ExcHandler: FileNotFoundException null\lSplitter:B:3:0x000d\l|0x002e: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x002f|0x002f: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0030: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0031: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0033|0x0033: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lExcHandler: NameNotFoundException null\lSplitter:B:3:0x000d\l}"];
Node_20 [shape=record,label="{20\:\ 0x0035|ExcHandler: all null\lSplitter:B:23:0x0038\l|0x0035: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_22 [shape=record,label="{22\:\ 0x0037|ExcHandler: IOException null\lSplitter:B:1:0x0009\l|0x0037: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_23 [shape=record,label="{23\:\ 0x0038|SYNTHETIC\lSplitter:B:23:0x0038\l}"];
Node_24 [shape=record,label="{24\:\ ?|Splitter:B:23:0x0038\l|0x0038: INVOKE  (r4 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC A[Catch:\{ all \-\> 0x0035 \}, TRY_ENTER]\l0x003c: CONST_STR  (r5 I:java.lang.String) =  \"Beta\" A[Catch:\{ all \-\> 0x0035 \}]\l0x003e: CONST_STR  (r6 I:java.lang.String) =  \"Failed to read the APK file\" A[Catch:\{ all \-\> 0x0035 \}]\l0x0040: INVOKE  \l  (r4 I:io.fabric.sdk.android.Logger)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r9 I:java.lang.Throwable)\l io.fabric.sdk.android.Logger.e(java.lang.String, java.lang.String, java.lang.Throwable):void type: INTERFACE A[Catch:\{ all \-\> 0x0035 \}, TRY_LEAVE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0043|0x0043: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0078 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0045|SYNTHETIC\lSplitter:B:26:0x0045\l}"];
Node_27 [shape=record,label="{27\:\ ?|Splitter:B:26:0x0045\l|0x0045: INVOKE  (r3 I:java.util.zip.ZipInputStream) java.util.zip.ZipInputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x006c \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0049|ExcHandler: FileNotFoundException null\lSplitter:B:1:0x0009\l|0x0049: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_30 [shape=record,label="{30\:\ 0x004a|SYNTHETIC\lSplitter:B:30:0x004a\l}"];
Node_31 [shape=record,label="{31\:\ ?|Splitter:B:30:0x004a\l|0x004a: INVOKE  (r4 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC A[Catch:\{ all \-\> 0x0035 \}, TRY_ENTER]\l0x004e: CONST_STR  (r5 I:java.lang.String) =  \"Beta\" A[Catch:\{ all \-\> 0x0035 \}]\l0x0050: CONST_STR  (r6 I:java.lang.String) =  \"Failed to find the APK file\" A[Catch:\{ all \-\> 0x0035 \}]\l0x0052: INVOKE  \l  (r4 I:io.fabric.sdk.android.Logger)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r9 I:java.lang.Throwable)\l io.fabric.sdk.android.Logger.e(java.lang.String, java.lang.String, java.lang.Throwable):void type: INTERFACE A[Catch:\{ all \-\> 0x0035 \}, TRY_LEAVE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0055|0x0055: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0078 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0057|SYNTHETIC\lSplitter:B:33:0x0057\l}"];
Node_34 [shape=record,label="{34\:\ ?|Splitter:B:33:0x0057\l|0x0057: INVOKE  (r3 I:java.util.zip.ZipInputStream) java.util.zip.ZipInputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x006c \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_36 [shape=record,label="{36\:\ 0x005b|SYNTHETIC\lSplitter:B:36:0x005b\l}"];
Node_37 [shape=record,label="{37\:\ ?|Splitter:B:36:0x005b\l|0x005b: INVOKE  (r9 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC A[Catch:\{ all \-\> 0x0035 \}, ExcHandler: NameNotFoundException null, TRY_ENTER]\l0x005f: CONST_STR  (r4 I:java.lang.String) =  \"Beta\" A[Catch:\{ all \-\> 0x0035 \}]\l0x0061: CONST_STR  (r5 I:java.lang.String) =  \"Beta by Crashlytics app is not installed\" A[Catch:\{ all \-\> 0x0035 \}]\l0x0063: INVOKE  \l  (r9 I:io.fabric.sdk.android.Logger)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l io.fabric.sdk.android.Logger.d(java.lang.String, java.lang.String):void type: INTERFACE A[Catch:\{ all \-\> 0x0035 \}, TRY_LEAVE]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0066|0x0066: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0078 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0068|SYNTHETIC\lSplitter:B:39:0x0068\l}"];
Node_40 [shape=record,label="{40\:\ ?|Splitter:B:39:0x0068\l|0x0068: INVOKE  (r3 I:java.util.zip.ZipInputStream) java.util.zip.ZipInputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x006c \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_42 [shape=record,label="{42\:\ 0x006c|ExcHandler: IOException null\lSplitter:B:26:0x0045\l|0x006c: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_43 [shape=record,label="{43\:\ 0x006d|0x006d: INVOKE  (r3 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x0071: CONST_STR  (r4 I:java.lang.String) =  \"Beta\" \l0x0073: CONST_STR  (r5 I:java.lang.String) =  \"Failed to close the APK file\" \l0x0075: INVOKE  \l  (r3 I:io.fabric.sdk.android.Logger)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r9 I:java.lang.Throwable)\l io.fabric.sdk.android.Logger.e(java.lang.String, java.lang.String, java.lang.Throwable):void type: INTERFACE \l}"];
Node_44 [shape=record,label="{44\:\ 0x0078|0x0078: INVOKE  (r3 I:long) =  java.lang.System.nanoTime():long type: STATIC \l0x007c: ARITH  (r3 I:long) = (r3 I:long) \- (r0 I:long) \l0x007d: CAST  (r0 I:double) = (double) (r3 I:long) \l0x007e: CONST  (r3 I:?[long, double]) = \l  (4696837146684686336(0x412e848000000000, double:1000000.0) ?[long, double])\l \l0x0083: ARITH  (r0 I:double) = (r0 I:double) \/ (r3 I:double) \l0x0084: INVOKE  (r9 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x0088: CONST_STR  (r3 I:java.lang.String) =  \"Beta\" \l0x008a: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x008c: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x008f: CONST_STR  (r5 I:java.lang.String) =  \"Beta device token load took \" \l0x0091: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0094: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:double) java.lang.StringBuilder.append(double):java.lang.StringBuilder type: VIRTUAL \l0x0097: CONST_STR  (r0 I:java.lang.String) =  \"ms\" \l0x0099: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009c: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00a0: INVOKE  \l  (r9 I:io.fabric.sdk.android.Logger)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.String)\l io.fabric.sdk.android.Logger.d(java.lang.String, java.lang.String):void type: INTERFACE \l}"];
Node_45 [shape=record,label="{45\:\ 0x00a3|0x00a3: RETURN  (r2 I:java.lang.String) \l}"];
Node_46 [shape=record,label="{46\:\ 0x00a4|0x00a4: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x00b6 \l}"];
Node_47 [shape=record,label="{47\:\ 0x00a6|SYNTHETIC\lSplitter:B:47:0x00a6\l}"];
Node_48 [shape=record,label="{48\:\ ?|Splitter:B:47:0x00a6\l|0x00a6: INVOKE  (r3 I:java.util.zip.ZipInputStream) java.util.zip.ZipInputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x00aa \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_50 [shape=record,label="{50\:\ 0x00aa|ExcHandler: IOException null\lSplitter:B:47:0x00a6\l|0x00aa: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_51 [shape=record,label="{51\:\ 0x00ab|0x00ab: INVOKE  (r1 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x00af: CONST_STR  (r2 I:java.lang.String) =  \"Beta\" \l0x00b1: CONST_STR  (r3 I:java.lang.String) =  \"Failed to close the APK file\" \l0x00b3: INVOKE  \l  (r1 I:io.fabric.sdk.android.Logger)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r9 I:java.lang.Throwable)\l io.fabric.sdk.android.Logger.e(java.lang.String, java.lang.String, java.lang.Throwable):void type: INTERFACE \l}"];
Node_52 [shape=record,label="{52\:\ 0x00b6|0x00b6: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.lang.String com.crashlytics.android.beta.DeviceTokenLoader.load((r8 'this' I:com.crashlytics.android.beta.DeviceTokenLoader A[IMMUTABLE_TYPE, THIS]), (r9 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_36;
Node_1 -> Node_29;
Node_1 -> Node_22;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_19;
Node_3 -> Node_16;
Node_3 -> Node_14;
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_6 -> Node_9;
Node_7 -> Node_9;
Node_7 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_44;
Node_12 -> Node_13;
Node_13 -> Node_46;
Node_14 -> Node_15;
Node_15 -> Node_23;
Node_16 -> Node_17;
Node_17 -> Node_30;
Node_18 -> Node_36;
Node_19 -> Node_18;
Node_20 -> Node_46;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_20;
Node_24 -> Node_25;
Node_24 -> Node_20;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_44;
Node_26 -> Node_27;
Node_26 -> Node_42;
Node_27 -> Node_42;
Node_27 -> Node_44;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_20;
Node_31 -> Node_32;
Node_31 -> Node_20;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_44;
Node_33 -> Node_34;
Node_33 -> Node_42;
Node_34 -> Node_42;
Node_34 -> Node_44;
Node_36 -> Node_37;
Node_36 -> Node_20;
Node_37 -> Node_38;
Node_37 -> Node_20;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_44;
Node_39 -> Node_40;
Node_39 -> Node_42;
Node_40 -> Node_42;
Node_40 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_52;
Node_47 -> Node_48;
Node_47 -> Node_50;
Node_48 -> Node_50;
Node_48 -> Node_52;
Node_50 -> Node_51;
Node_51 -> Node_52;
}

