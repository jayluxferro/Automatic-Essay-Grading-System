digraph "CFG forcom.crashlytics.android.beta.DeviceTokenLoader.getZipInputStreamOfApkFrom(Landroid\/content\/Context;Ljava\/lang\/String;)Ljava\/util\/zip\/ZipInputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:android.content.pm.PackageManager) = (r2 I:android.content.Context) android.content.Context.getPackageManager():android.content.pm.PackageManager type: VIRTUAL \l0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: INVOKE  (r2 I:android.content.pm.ApplicationInfo) = \l  (r2 I:android.content.pm.PackageManager)\l  (r3 I:java.lang.String)\l  (r0 I:int)\l android.content.pm.PackageManager.getApplicationInfo(java.lang.String, int):android.content.pm.ApplicationInfo type: VIRTUAL \l0x0009: NEW_INSTANCE  (r3 I:java.util.zip.ZipInputStream) =  java.util.zip.ZipInputStream \l0x000b: NEW_INSTANCE  (r0 I:java.io.FileInputStream) =  java.io.FileInputStream \l0x000d: IGET  (r2 I:java.lang.String) = (r2 I:android.content.pm.ApplicationInfo) android.content.pm.ApplicationInfo.sourceDir java.lang.String \l0x000f: INVOKE  (r0 I:java.io.FileInputStream), (r2 I:java.lang.String) java.io.FileInputStream.\<init\>(java.lang.String):void type: DIRECT \l0x0012: INVOKE  \l  (r3 I:java.util.zip.ZipInputStream)\l  (r0 I:java.io.InputStream)\l java.util.zip.ZipInputStream.\<init\>(java.io.InputStream):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: RETURN  (r3 I:java.util.zip.ZipInputStream) \l}"];
MethodNode[shape=record,label="{java.util.zip.ZipInputStream com.crashlytics.android.beta.DeviceTokenLoader.getZipInputStreamOfApkFrom((r1 'this' I:com.crashlytics.android.beta.DeviceTokenLoader A[IMMUTABLE_TYPE, THIS]), (r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.content.pm.PackageManager$NameNotFoundException, java.io.FileNotFoundException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

