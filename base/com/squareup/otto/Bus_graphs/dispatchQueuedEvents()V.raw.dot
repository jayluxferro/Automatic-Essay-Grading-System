digraph "CFG forcom.squareup.otto.Bus.dispatchQueuedEvents()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.ThreadLocal\<java.lang.Boolean\>) = (r3 I:com.squareup.otto.Bus) com.squareup.otto.Bus.isDispatching java.lang.ThreadLocal \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ThreadLocal) java.lang.ThreadLocal.get():java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:java.lang.Boolean) = (java.lang.Boolean) (r0 I:?[OBJECT, ARRAY]) \l0x0008: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IGET  (r0 I:java.lang.ThreadLocal\<java.lang.Boolean\>) = (r3 I:com.squareup.otto.Bus) com.squareup.otto.Bus.isDispatching java.lang.ThreadLocal \l0x0011: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0012: INVOKE  (r1 I:java.lang.Boolean) = (r1 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l0x0016: INVOKE  (r0 I:java.lang.ThreadLocal), (r1 I:java.lang.Object) java.lang.ThreadLocal.set(java.lang.Object):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|SYNTHETIC\lSplitter:B:5:0x001a\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x001a\l|0x001a: IGET  (r1 I:java.lang.ThreadLocal\<java.util.concurrent.ConcurrentLinkedQueue\<com.squareup.otto.Bus$EventWithHandler\>\>) = (r3 I:com.squareup.otto.Bus) com.squareup.otto.Bus.eventsToDispatch java.lang.ThreadLocal A[Catch:\{ all \-\> 0x0044 \}, TRY_ENTER]\l0x001c: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.ThreadLocal) java.lang.ThreadLocal.get():java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0044 \}]\l0x0020: CHECK_CAST  (r1 I:java.util.concurrent.ConcurrentLinkedQueue) = (java.util.concurrent.ConcurrentLinkedQueue) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0044 \}]\l0x0022: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.concurrent.ConcurrentLinkedQueue) java.util.concurrent.ConcurrentLinkedQueue.poll():java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0044 \}]\l0x0026: CHECK_CAST  (r1 I:com.squareup.otto.Bus$EventWithHandler) = (com.squareup.otto.Bus$EventWithHandler) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0044 \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0034 \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: IGET  (r1 I:java.lang.ThreadLocal\<java.lang.Boolean\>) = (r3 I:com.squareup.otto.Bus) com.squareup.otto.Bus.isDispatching java.lang.ThreadLocal \l0x002c: INVOKE  (r0 I:java.lang.Boolean) = (r0 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l0x0030: INVOKE  (r1 I:java.lang.ThreadLocal), (r0 I:java.lang.Object) java.lang.ThreadLocal.set(java.lang.Object):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|0x0033: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|SYNTHETIC\lSplitter:B:10:0x0034\l}"];
Node_11 [shape=record,label="{11\:\ ?|Splitter:B:10:0x0034\l|0x0034: IGET  (r2 I:com.squareup.otto.EventHandler) = (r1 I:com.squareup.otto.Bus$EventWithHandler) com.squareup.otto.Bus.EventWithHandler.handler com.squareup.otto.EventHandler A[Catch:\{ all \-\> 0x0044 \}, TRY_ENTER]\l0x0036: INVOKE  (r2 I:boolean) = (r2 I:com.squareup.otto.EventHandler) com.squareup.otto.EventHandler.isValid():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0044 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|0x003a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0019 A[Catch:\{ all \-\> 0x0044 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|0x003c: IGET  (r2 I:java.lang.Object) = (r1 I:com.squareup.otto.Bus$EventWithHandler) com.squareup.otto.Bus.EventWithHandler.event java.lang.Object A[Catch:\{ all \-\> 0x0044 \}]\l0x003e: IGET  (r1 I:com.squareup.otto.EventHandler) = (r1 I:com.squareup.otto.Bus$EventWithHandler) com.squareup.otto.Bus.EventWithHandler.handler com.squareup.otto.EventHandler A[Catch:\{ all \-\> 0x0044 \}]\l0x0040: INVOKE  \l  (r3 I:com.squareup.otto.Bus)\l  (r2 I:java.lang.Object)\l  (r1 I:com.squareup.otto.EventHandler)\l com.squareup.otto.Bus.dispatch(java.lang.Object, com.squareup.otto.EventHandler):void type: VIRTUAL A[Catch:\{ all \-\> 0x0044 \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|ExcHandler: all null\lSplitter:B:5:0x001a\l|0x0044: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x0045|0x0045: IGET  (r2 I:java.lang.ThreadLocal\<java.lang.Boolean\>) = (r3 I:com.squareup.otto.Bus) com.squareup.otto.Bus.isDispatching java.lang.ThreadLocal \l0x0047: INVOKE  (r0 I:java.lang.Boolean) = (r0 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l0x004b: INVOKE  (r2 I:java.lang.ThreadLocal), (r0 I:java.lang.Object) java.lang.ThreadLocal.set(java.lang.Object):void type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x004e|0x004e: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected void com.squareup.otto.Bus.dispatchQueuedEvents((r3 'this' I:com.squareup.otto.Bus A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_6 -> Node_15;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_4;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_4;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

