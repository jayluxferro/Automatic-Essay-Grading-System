digraph "CFG forcom.squareup.otto.Bus.flattenHierarchy(Ljava\/lang\/Class;)Ljava\/util\/Set;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.concurrent.ConcurrentMap\<java.lang.Class\<?\>, java.util.Set\<java.lang.Class\<?\>\>\>) = (r2 I:com.squareup.otto.Bus) com.squareup.otto.Bus.flattenHierarchyCache java.util.concurrent.ConcurrentMap \l0x0002: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:java.util.concurrent.ConcurrentMap)\l  (r3 I:java.lang.Object)\l java.util.concurrent.ConcurrentMap.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0006: CHECK_CAST  (r0 I:java.util.Set) = (java.util.Set) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001a \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  (r0 I:java.util.Set) = (r2 I:com.squareup.otto.Bus), (r3 I:java.lang.Class) com.squareup.otto.Bus.getClassesFor(java.lang.Class):java.util.Set type: DIRECT \l0x000e: IGET  (r1 I:java.util.concurrent.ConcurrentMap\<java.lang.Class\<?\>, java.util.Set\<java.lang.Class\<?\>\>\>) = (r2 I:com.squareup.otto.Bus) com.squareup.otto.Bus.flattenHierarchyCache java.util.concurrent.ConcurrentMap \l0x0010: INVOKE  (r3 I:java.lang.Object) = \l  (r1 I:java.util.concurrent.ConcurrentMap)\l  (r3 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l java.util.concurrent.ConcurrentMap.putIfAbsent(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x0014: CHECK_CAST  (r3 I:java.util.Set) = (java.util.Set) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0019 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: RETURN  (r0 I:java.util.Set\<java.lang.Class\<?\>\>) \l}"];
MethodNode[shape=record,label="{java.util.Set\<java.lang.Class\<?\>\> com.squareup.otto.Bus.flattenHierarchy((r2 'this' I:com.squareup.otto.Bus A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/Class\<, *\>;), Ljava\/util\/Set\<, Ljava\/lang\/Class\<, *\>;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_6;
}

