digraph "CFG forcom.squareup.otto.Bus.unregister(Ljava\/lang\/Object;)V" {
subgraph cluster_Region_75549183 {
label = "R(1:(2:(5:1|(2:4|(2:(2:9|10)|(1:8)))|11|(2:14|(2:(2:25|26)|(3:18|(2:21|(1:23)(0))|24)))|27)|(1:29)))";
node [shape=record,color=blue];
subgraph cluster_Region_477968555 {
label = "R(2:(5:1|(2:4|(2:(2:9|10)|(1:8)))|11|(2:14|(2:(2:25|26)|(3:18|(2:21|(1:23)(0))|24)))|27)|(1:29))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1605494871 {
label = "IF [B:0:0x0000] THEN: R(5:1|(2:4|(2:(2:9|10)|(1:8)))|11|(2:14|(2:(2:25|26)|(3:18|(2:21|(1:23)(0))|24)))|27) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r7 != null) goto L_0x0002\l}"];
subgraph cluster_Region_309366743 {
label = "R(5:1|(2:4|(2:(2:9|10)|(1:8)))|11|(2:14|(2:(2:25|26)|(3:18|(2:21|(1:23)(0))|24)))|27)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|r6.enforcer.enforce(r6)\ljava.util.Iterator r0 = r6.handlerFinder.findAllProducers(r7).entrySet().iterator()\l}"];
subgraph cluster_LoopRegion_280851287 {
label = "LOOP:0: (2:4|(2:(2:9|10)|(1:8)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0019|if (r0.hasNext() != false) goto L_0x001b\l}"];
subgraph cluster_Region_310646867 {
label = "R(2:4|(2:(2:9|10)|(1:8)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001b|java.util.Map$Entry r1 = r0.next()\ljava.lang.Class java.lang.Class r2 = (java.lang.Class) r1.getKey()\lcom.squareup.otto.EventProducer com.squareup.otto.EventProducer r3 = getProducerForEventType(r2)\lcom.squareup.otto.EventProducer com.squareup.otto.EventProducer r1 = (com.squareup.otto.EventProducer) r1.getValue()\l}"];
subgraph cluster_Region_1701882251 {
label = "R(2:(2:9|10)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_530166840 {
label = "IF [B:5:0x0031, B:7:0x0037] THEN: R(2:9|10) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0031|if (r1 == null) goto L_0x0045\l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|ADDED_TO_REGION\l|if (r1.equals(r3) == false) goto L_0x0045\l}"];
subgraph cluster_Region_894633506 {
label = "R(2:9|10)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0045}"];
Node_10 [shape=record,label="{10\:\ 0x0064|throw new java.lang.IllegalArgumentException(\"Missing event producer for an annotated method. Is \" + r7.getClass() + \" registered?\")\l}"];
}
}
subgraph cluster_Region_1261799792 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0039|LOOP_END\lLOOP:0: B:2:0x0015\-\>B:8:0x0039\l|((com.squareup.otto.EventProducer) r6.producersByType.remove(r2)).invalidate()\l}"];
}
}
}
}
Node_11 [shape=record,label="{11\:\ 0x0065|java.util.Iterator r0 = r6.handlerFinder.findAllSubscribers(r7).entrySet().iterator()\l}"];
subgraph cluster_LoopRegion_600516968 {
label = "LOOP:1: (2:14|(2:(2:25|26)|(3:18|(2:21|(1:23)(0))|24)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0077|if (r0.hasNext() != false) goto L_0x0079\l}"];
subgraph cluster_Region_1000420632 {
label = "R(2:14|(2:(2:25|26)|(3:18|(2:21|(1:23)(0))|24)))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0079|java.util.Map$Entry r1 = r0.next()\ljava.util.Set java.util.Set\<com.squareup.otto.EventHandler\> r2 = getHandlersForEventType((java.lang.Class) r1.getKey())\ljava.util.Collection java.util.Collection r1 = (java.util.Collection) r1.getValue()\l}"];
subgraph cluster_Region_1477951885 {
label = "R(2:(2:25|26)|(3:18|(2:21|(1:23)(0))|24))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2016684952 {
label = "IF [B:15:0x008f, B:17:0x0095] THEN: R(2:25|26) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x008f|if (r2 == null) goto L_0x00b5\l}"];
Node_17 [shape=record,label="{17\:\ 0x0095|ADDED_TO_REGION\l|if (r2.containsAll(r1) == false) goto L_0x00b5\l}"];
subgraph cluster_Region_952834037 {
label = "R(2:25|26)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x00b5}"];
Node_26 [shape=record,label="{26\:\ 0x00d4|throw new java.lang.IllegalArgumentException(\"Missing event handler for an annotated method. Is \" + r7.getClass() + \" registered?\")\l}"];
}
}
subgraph cluster_Region_245062754 {
label = "R(3:18|(2:21|(1:23)(0))|24)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0097|java.util.Iterator r3 = r2.iterator()\l}"];
subgraph cluster_LoopRegion_360998104 {
label = "LOOP:2: (2:21|(1:23)(0))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x009f|if (r3.hasNext() != false) goto L_0x00a1\l}"];
subgraph cluster_Region_1870565225 {
label = "R(2:21|(1:23)(0))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x00a1|com.squareup.otto.EventHandler r4 = r3.next()\l}"];
subgraph cluster_IfRegion_549449897 {
label = "IF [B:22:0x00ab] THEN: R(1:23) ELSE: R(0)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x00ab|if (r1.contains(r4) == true) goto L_0x00ad\l}"];
subgraph cluster_Region_151204002 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x00ad|r4.invalidate()\l}"];
}
subgraph cluster_Region_1763179208 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_24 [shape=record,label="{24\:\ 0x00b1|LOOP_END\lLOOP:1: B:12:0x0073\-\>B:24:0x00b1\l|r2.removeAll(r1)\l}"];
}
}
}
}
Node_27 [shape=record,label="{27\:\ 0x00d5|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1602482582 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x00dd|throw new java.lang.NullPointerException(\"Object to unregister must not be null.\")\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0015|LOOP_START\lLOOP:0: B:2:0x0015\-\>B:8:0x0039\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0033}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0073|LOOP_START\lLOOP:1: B:12:0x0073\-\>B:24:0x00b1\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0091}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x009b|LOOP_START\lLOOP:2: B:19:0x009b\-\>B:36:0x009b\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x00d6}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0045|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0045|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0065|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x00b5|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x00b5|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x00d5|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x009b|LOOP_END\lSYNTHETIC\lLOOP:2: B:19:0x009b\-\>B:36:0x009b\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x00b1|SYNTHETIC\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x009b|SYNTHETIC\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x009b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.squareup.otto.Bus.unregister((r6v0 'this' com.squareup.otto.Bus A[IMMUTABLE_TYPE, THIS]), (r7v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_28[style=dashed];
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_3 -> Node_32[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_30;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_31;
Node_9 -> Node_10;
Node_8 -> Node_2;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_35[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_33;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_34;
Node_25 -> Node_26;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_20 -> Node_37[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_38[style=dashed];
Node_23 -> Node_39;
Node_24 -> Node_12;
Node_2 -> Node_3;
Node_6 -> Node_7;
Node_12 -> Node_13;
Node_16 -> Node_17;
Node_19 -> Node_20;
Node_28 -> Node_29;
Node_30 -> Node_9;
Node_31 -> Node_9;
Node_32 -> Node_11;
Node_33 -> Node_25;
Node_34 -> Node_25;
Node_35 -> Node_27;
Node_36 -> Node_19;
Node_37 -> Node_24;
Node_38 -> Node_36;
Node_39 -> Node_36;
}

