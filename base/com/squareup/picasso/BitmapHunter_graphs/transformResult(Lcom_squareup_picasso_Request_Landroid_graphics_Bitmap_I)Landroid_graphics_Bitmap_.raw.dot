digraph "CFG forcom.squareup.picasso.BitmapHunter.transformResult(Lcom\/squareup\/picasso\/Request;Landroid\/graphics\/Bitmap;I)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x0002: INVOKE  (r2 I:int) = (r32 I:android.graphics.Bitmap) android.graphics.Bitmap.getWidth():int type: VIRTUAL \l0x0006: INVOKE  (r3 I:int) = (r32 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL \l0x000a: IGET  (r4 I:boolean) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.onlyScaleDown boolean \l0x000c: NEW_INSTANCE  (r10 I:android.graphics.Matrix) =  android.graphics.Matrix \l0x000e: INVOKE  (r10 I:android.graphics.Matrix) android.graphics.Matrix.\<init\>():void type: DIRECT \l0x0011: INVOKE  (r5 I:boolean) = (r31 I:com.squareup.picasso.Request) com.squareup.picasso.Request.needsMatrixTransform():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: IF  (r33 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001a \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001b: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x001c: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: IGET  (r5 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetWidth int \l0x0021: IGET  (r7 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetHeight int \l0x0023: IGET  (r8 I:float) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.rotationDegrees float \l0x0025: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0026: CMP_L  (r9 I:int) = (r8 I:float), (r9 I:float) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x015d \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: CAST  (r11 I:double) = (double) (r8 I:float) \l0x002b: INVOKE  (r13 I:double) = (r11 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x002f: INVOKE  (r13 I:double) = (r13 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0033: INVOKE  (r11 I:double) = (r11 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x0037: INVOKE  (r11 I:double) = (r11 I:double) java.lang.Math.sin(double):double type: STATIC \l0x003b: IGET  (r5 I:boolean) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.hasRotationPivot boolean \l}"];
Node_8 [shape=record,label="{8\:\ 0x003d|0x003d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x00e4 \l}"];
Node_9 [shape=record,label="{9\:\ 0x003f|0x003f: IGET  (r5 I:float) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.rotationPivotX float \l0x0041: IGET  (r7 I:float) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.rotationPivotY float \l0x0043: INVOKE  \l  (r10 I:android.graphics.Matrix)\l  (r8 I:float)\l  (r5 I:float)\l  (r7 I:float)\l android.graphics.Matrix.setRotate(float, float, float):void type: VIRTUAL \l0x0046: IGET  (r5 I:float) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.rotationPivotX float \l0x0048: CAST  (r7 I:double) = (double) (r5 I:float) \l0x0049: CONST  (r15 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x004b: ARITH  (r15 I:double) = (r15 I:double) \- (r13 I:double) \l0x004c: ARITH  (r7 I:double) = (r7 I:double) * (r15 I:double) \l0x004e: IGET  (r5 I:float) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.rotationPivotY float \l0x0050: CAST  (r5 I:double) = (double) (r5 I:float) \l0x0051: ARITH  (r5 I:double) = (r5 I:double) * (r11 I:double) \l0x0053: ARITH  (r7 I:double) = (r7 I:double) + (r5 I:double) \l0x0054: IGET  (r5 I:float) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.rotationPivotY float \l0x0056: CAST  (r5 I:double) = (double) (r5 I:float) \l0x0057: ARITH  (r5 I:double) = (r5 I:double) * (r15 I:double) \l0x0059: IGET  (r9 I:float) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.rotationPivotX float \l0x005b: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005d: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005f: CAST  (r3 I:double) = (double) (r9 I:float) \l0x0060: ARITH  (r3 I:double) = (r3 I:double) * (r11 I:double) \l0x0062: ARITH  (r5 I:double) = (r5 I:double) \- (r3 I:double) \l0x0063: IGET  (r3 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetWidth int \l0x0065: CAST  (r3 I:double) = (double) (r3 I:int) \l0x0066: ARITH  (r3 I:double) = (r3 I:double) * (r13 I:double) \l0x0068: ARITH  (r3 I:double) = (r3 I:double) + (r7 I:double) \l0x0069: IGET  (r9 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetWidth int \l0x006b: MOVE  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006d: CAST  (r1 I:double) = (double) (r9 I:int) \l0x006e: ARITH  (r1 I:double) = (r1 I:double) * (r11 I:double) \l0x0070: ARITH  (r1 I:double) = (r1 I:double) + (r5 I:double) \l0x0071: IGET  (r9 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetWidth int \l0x0073: MOVE  (r21 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0075: CAST  (r9 I:double) = (double) (r9 I:int) \l0x0076: ARITH  (r9 I:double) = (r9 I:double) * (r13 I:double) \l0x0078: ARITH  (r9 I:double) = (r9 I:double) + (r7 I:double) \l0x0079: IGET  (r15 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetHeight int \l0x007b: MOVE  (r22 I:?[long, double]) = (r1 I:?[long, double]) \l0x007d: CAST  (r1 I:double) = (double) (r15 I:int) \l0x007e: ARITH  (r1 I:double) = (r1 I:double) * (r11 I:double) \l0x0080: ARITH  (r9 I:double) = (r9 I:double) \- (r1 I:double) \l0x0081: IGET  (r1 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetWidth int \l0x0083: CAST  (r1 I:double) = (double) (r1 I:int) \l0x0084: ARITH  (r1 I:double) = (r1 I:double) * (r11 I:double) \l0x0086: ARITH  (r1 I:double) = (r1 I:double) + (r5 I:double) \l0x0087: IGET  (r15 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetHeight int \l0x0089: MOVE  (r24 I:?[long, double]) = (r9 I:?[long, double]) \l0x008b: CAST  (r9 I:double) = (double) (r15 I:int) \l0x008c: ARITH  (r9 I:double) = (r9 I:double) * (r13 I:double) \l0x008e: ARITH  (r1 I:double) = (r1 I:double) + (r9 I:double) \l0x008f: IGET  (r9 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetHeight int \l0x0091: CAST  (r9 I:double) = (double) (r9 I:int) \l0x0092: ARITH  (r9 I:double) = (r9 I:double) * (r11 I:double) \l0x0094: ARITH  (r9 I:double) = (r7 I:double) \- (r9 I:double) \l0x0096: IGET  (r11 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetHeight int \l0x0098: CAST  (r11 I:double) = (double) (r11 I:int) \l0x0099: ARITH  (r11 I:double) = (r11 I:double) * (r13 I:double) \l0x009b: ARITH  (r11 I:double) = (r11 I:double) + (r5 I:double) \l0x009c: INVOKE  (r13 I:double) = (r7 I:double), (r3 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x00a0: MOVE  (r26 I:?[long, double]) = (r11 I:?[long, double]) \l0x00a2: MOVE  (r11 I:?[long, double]) = (r24 I:?[long, double]) \l0x00a4: INVOKE  (r13 I:double) = (r11 I:double), (r13 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x00a8: INVOKE  (r13 I:double) = (r9 I:double), (r13 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x00ac: INVOKE  (r3 I:double) = (r7 I:double), (r3 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x00b0: INVOKE  (r3 I:double) = (r11 I:double), (r3 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x00b4: INVOKE  (r3 I:double) = (r9 I:double), (r3 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x00b8: MOVE  (r7 I:?[long, double]) = (r22 I:?[long, double]) \l0x00ba: INVOKE  (r9 I:double) = (r5 I:double), (r7 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x00be: INVOKE  (r9 I:double) = (r1 I:double), (r9 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x00c2: MOVE  (r11 I:?[long, double]) = (r26 I:?[long, double]) \l0x00c4: INVOKE  (r9 I:double) = (r11 I:double), (r9 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x00c8: INVOKE  (r5 I:double) = (r5 I:double), (r7 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x00cc: INVOKE  (r1 I:double) = (r1 I:double), (r5 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x00d0: INVOKE  (r1 I:double) = (r11 I:double), (r1 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x00d4: ARITH  (r13 I:double) = (r13 I:double) \- (r3 I:double) \l0x00d5: INVOKE  (r3 I:double) = (r13 I:double) java.lang.Math.floor(double):double type: STATIC \l0x00d9: CAST  (r5 I:int) = (int) (r3 I:double) \l0x00da: ARITH  (r9 I:double) = (r9 I:double) \- (r1 I:double) \l0x00db: INVOKE  (r1 I:double) = (r9 I:double) java.lang.Math.floor(double):double type: STATIC \l0x00df: CAST  (r7 I:int) = (int) (r1 I:double) \l0x00e0: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x00e4|0x00e4: MOVE  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00e6: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00e8: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ea: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x00eb: INVOKE  (r1 I:android.graphics.Matrix), (r8 I:float) android.graphics.Matrix.setRotate(float):void type: VIRTUAL \l0x00ee: IGET  (r2 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetWidth int \l0x00f0: CAST  (r2 I:double) = (double) (r2 I:int) \l0x00f1: ARITH  (r2 I:double) = (r2 I:double) * (r13 I:double) \l0x00f3: IGET  (r4 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetWidth int \l0x00f5: CAST  (r4 I:double) = (double) (r4 I:int) \l0x00f6: ARITH  (r4 I:double) = (r4 I:double) * (r11 I:double) \l0x00f8: IGET  (r6 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetWidth int \l0x00fa: CAST  (r6 I:double) = (double) (r6 I:int) \l0x00fb: ARITH  (r6 I:double) = (r6 I:double) * (r13 I:double) \l0x00fd: IGET  (r8 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetHeight int \l0x00ff: CAST  (r8 I:double) = (double) (r8 I:int) \l0x0100: ARITH  (r8 I:double) = (r8 I:double) * (r11 I:double) \l0x0102: ARITH  (r6 I:double) = (r6 I:double) \- (r8 I:double) \l0x0103: IGET  (r8 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetWidth int \l0x0105: CAST  (r8 I:double) = (double) (r8 I:int) \l0x0106: ARITH  (r8 I:double) = (r8 I:double) * (r11 I:double) \l0x0108: IGET  (r10 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetHeight int \l0x010a: MOVE  (r28 I:?[long, double]) = (r4 I:?[long, double]) \l0x010c: CAST  (r4 I:double) = (double) (r10 I:int) \l0x010d: ARITH  (r4 I:double) = (r4 I:double) * (r13 I:double) \l0x010f: ARITH  (r8 I:double) = (r8 I:double) + (r4 I:double) \l0x0110: IGET  (r4 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetHeight int \l0x0112: CAST  (r4 I:double) = (double) (r4 I:int) \l0x0113: ARITH  (r4 I:double) = (r4 I:double) * (r11 I:double) \l0x0115: NEG  (r4 I:double) = (r4 I:double) \l0x0116: IGET  (r10 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetHeight int \l0x0118: CAST  (r10 I:double) = (double) (r10 I:int) \l0x0119: ARITH  (r10 I:double) = (r10 I:double) * (r13 I:double) \l0x011b: CONST  (r12 I:?[long, double]) = (0 ?[long, double]) \l0x011d: INVOKE  (r14 I:double) = (r12 I:double), (r2 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x0121: INVOKE  (r14 I:double) = (r6 I:double), (r14 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x0125: INVOKE  (r14 I:double) = (r4 I:double), (r14 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x0129: INVOKE  (r2 I:double) = (r12 I:double), (r2 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x012d: INVOKE  (r2 I:double) = (r6 I:double), (r2 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x0131: INVOKE  (r2 I:double) = (r4 I:double), (r2 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x0135: MOVE  (r4 I:?[long, double]) = (r28 I:?[long, double]) \l0x0137: INVOKE  (r6 I:double) = (r12 I:double), (r4 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x013b: INVOKE  (r6 I:double) = (r8 I:double), (r6 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x013f: INVOKE  (r6 I:double) = (r10 I:double), (r6 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x0143: INVOKE  (r4 I:double) = (r12 I:double), (r4 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x0147: INVOKE  (r4 I:double) = (r8 I:double), (r4 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x014b: INVOKE  (r4 I:double) = (r10 I:double), (r4 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x014f: ARITH  (r14 I:double) = (r14 I:double) \- (r2 I:double) \l0x0150: INVOKE  (r2 I:double) = (r14 I:double) java.lang.Math.floor(double):double type: STATIC \l0x0154: CAST  (r2 I:int) = (int) (r2 I:double) \l0x0155: ARITH  (r6 I:double) = (r6 I:double) \- (r4 I:double) \l0x0156: INVOKE  (r3 I:double) = (r6 I:double) java.lang.Math.floor(double):double type: STATIC \l0x015a: CAST  (r7 I:int) = (int) (r3 I:double) \l0x015b: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x015d|0x015d: MOVE  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x015f: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0161: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0163: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0164|0x0164: IF  (r33 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x018a \l}"];
Node_13 [shape=record,label="{13\:\ 0x0166|0x0166: INVOKE  (r3 I:int) = (r33 I:int) com.squareup.picasso.BitmapHunter.getExifRotation(int):int type: STATIC \l0x016a: INVOKE  (r2 I:int) = (r33 I:int) com.squareup.picasso.BitmapHunter.getExifTranslation(int):int type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x016e|0x016e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0181 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0170|0x0170: CAST  (r4 I:float) = (float) (r3 I:int) \l0x0171: INVOKE  (r1 I:android.graphics.Matrix), (r4 I:float) android.graphics.Matrix.preRotate(float):boolean type: VIRTUAL \l0x0174: CONST  (r4 I:?[int, float, short, byte, char]) = (90 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0176|0x0176: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x017c \l}"];
Node_17 [shape=record,label="{17\:\ 0x0178|0x0178: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (270(0x10e, float:3.78E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x017a|0x017a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0181 \l}"];
Node_19 [shape=record,label="{19\:\ 0x017c|0x017c: MOVE  (r30 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x017e: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x017f: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r30 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x0181|0x0181: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0182|0x0182: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x018a \l}"];
Node_22 [shape=record,label="{22\:\ 0x0184|0x0184: CAST  (r2 I:float) = (float) (r2 I:int) \l0x0185: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0187: INVOKE  (r1 I:android.graphics.Matrix), (r2 I:float), (r3 I:float) android.graphics.Matrix.postScale(float, float):boolean type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x018a|0x018a: IGET  (r2 I:boolean) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.centerCrop boolean \l}"];
Node_24 [shape=record,label="{24\:\ 0x018c|0x018c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0222 \l}"];
Node_25 [shape=record,label="{25\:\ 0x018e|0x018e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0198 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0190|0x0190: CAST  (r2 I:float) = (float) (r5 I:int) \l0x0191: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0193: CAST  (r4 I:float) = (float) (r3 I:int) \l0x0194: ARITH  (r2 I:float) = (r2 I:float) \/ (r4 I:float) \l0x0195: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_27 [shape=record,label="{27\:\ 0x0198|0x0198: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x019a: CAST  (r2 I:float) = (float) (r7 I:int) \l0x019b: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x019d: CAST  (r6 I:float) = (float) (r4 I:int) \l0x019e: ARITH  (r2 I:float) = (r2 I:float) \/ (r6 I:float) \l}"];
Node_28 [shape=record,label="{28\:\ 0x019f|0x019f: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x01a5 \l}"];
Node_29 [shape=record,label="{29\:\ 0x01a1|0x01a1: CAST  (r6 I:float) = (float) (r7 I:int) \l0x01a2: CAST  (r8 I:float) = (float) (r4 I:int) \l}"];
Node_30 [shape=record,label="{30\:\ 0x01a3|0x01a3: ARITH  (r6 I:float) = (r6 I:float) \/ (r8 I:float) \l}"];
Node_31 [shape=record,label="{31\:\ 0x01a5|0x01a5: CAST  (r6 I:float) = (float) (r5 I:int) \l0x01a6: CAST  (r8 I:float) = (float) (r3 I:int) \l}"];
Node_32 [shape=record,label="{32\:\ 0x01a8|0x01a8: CMP_L  (r8 I:int) = (r2 I:float), (r6 I:float) \l}"];
Node_33 [shape=record,label="{33\:\ 0x01aa|0x01aa: IF  (r8 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:42:0x01d8 \l}"];
Node_34 [shape=record,label="{34\:\ 0x01ac|0x01ac: CAST  (r8 I:float) = (float) (r4 I:int) \l0x01ad: ARITH  (r6 I:float) = (r6 I:float) \/ (r2 I:float) \l0x01ae: ARITH  (r8 I:float) = (r8 I:float) * (r6 I:float) \l0x01b0: CAST  (r8 I:double) = (double) (r8 I:float) \l0x01b1: INVOKE  (r8 I:double) = (r8 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x01b5: CAST  (r6 I:int) = (int) (r8 I:double) \l0x01b6: IGET  (r8 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.centerCropGravity int \l0x01b8: CONST  (r9 I:?[int, float, short, byte, char]) = (48 ?[int, float, short, byte, char]) \l0x01ba: ARITH  (r8 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char]) & (r9 I:?[int, boolean, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x01bb|0x01bb: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x01bf \l}"];
Node_36 [shape=record,label="{36\:\ 0x01bd|0x01bd: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_37 [shape=record,label="{37\:\ 0x01bf|0x01bf: IGET  (r0 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.centerCropGravity int \l0x01c1: CONST  (r8 I:?[int, float, short, byte, char]) = (80 ?[int, float, short, byte, char]) \l0x01c3: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (r8 I:?[int, boolean, short, byte, char]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x01c4|0x01c4: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x01c9 \l}"];
Node_39 [shape=record,label="{39\:\ 0x01c6|0x01c6: ARITH  (r0 I:int) = (r4 I:int) \- (r6 I:int) \l}"];
Node_40 [shape=record,label="{40\:\ 0x01c9|0x01c9: ARITH  (r0 I:int) = (r4 I:int) \- (r6 I:int) \l0x01cb: ARITH  (r0 I:int) = (r0 I:int) \/ (2 int) \l}"];
Node_41 [shape=record,label="{41\:\ 0x01cd|0x01cd: CAST  (r8 I:float) = (float) (r7 I:int) \l0x01ce: CAST  (r9 I:float) = (float) (r6 I:int) \l0x01cf: ARITH  (r8 I:float) = (r8 I:float) \/ (r9 I:float) \l0x01d0: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01d1: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01d2: CONST  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01d4: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01d5: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_42 [shape=record,label="{42\:\ 0x01d8|0x01d8: CMP_G  (r8 I:int) = (r2 I:float), (r6 I:float) \l}"];
Node_43 [shape=record,label="{43\:\ 0x01da|0x01da: IF  (r8 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:52:0x020b \l}"];
Node_44 [shape=record,label="{44\:\ 0x01dc|0x01dc: CAST  (r8 I:float) = (float) (r3 I:int) \l0x01dd: ARITH  (r2 I:float) = (r2 I:float) \/ (r6 I:float) \l0x01de: ARITH  (r8 I:float) = (r8 I:float) * (r2 I:float) \l0x01e0: CAST  (r8 I:double) = (double) (r8 I:float) \l0x01e1: INVOKE  (r8 I:double) = (r8 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x01e5: CAST  (r2 I:int) = (int) (r8 I:double) \l0x01e6: IGET  (r8 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.centerCropGravity int \l0x01e8: CONST  (r9 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x01e9: ARITH  (r8 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char]) & (r9 I:?[int, boolean, short, byte, char]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x01ea|0x01ea: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x01ee \l}"];
Node_46 [shape=record,label="{46\:\ 0x01ec|0x01ec: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_47 [shape=record,label="{47\:\ 0x01ee|0x01ee: IGET  (r0 I:int) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.centerCropGravity int \l0x01f0: CONST  (r8 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x01f1: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (r8 I:?[int, boolean, short, byte, char]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x01f2|0x01f2: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x01f7 \l}"];
Node_49 [shape=record,label="{49\:\ 0x01f4|0x01f4: ARITH  (r0 I:int) = (r3 I:int) \- (r2 I:int) \l}"];
Node_50 [shape=record,label="{50\:\ 0x01f7|0x01f7: ARITH  (r0 I:int) = (r3 I:int) \- (r2 I:int) \l0x01f9: ARITH  (r0 I:int) = (r0 I:int) \/ (2 int) \l}"];
Node_51 [shape=record,label="{51\:\ 0x01fb|0x01fb: CAST  (r8 I:float) = (float) (r5 I:int) \l0x01fc: CAST  (r9 I:float) = (float) (r2 I:int) \l0x01fd: ARITH  (r8 I:float) = (r8 I:float) \/ (r9 I:float) \l0x01fe: MOVE  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0200: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0201: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0202: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0204: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0205: MOVE  (r30 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0207: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0208: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r30 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_52 [shape=record,label="{52\:\ 0x020b|0x020b: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x020c: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x020d: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x020e: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0210: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0211: CONST  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_53 [shape=record,label="{53\:\ 0x0213|0x0213: INVOKE  (r2 I:boolean) = \l  (r2 I:boolean)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r7 I:int)\l com.squareup.picasso.BitmapHunter.shouldResize(boolean, int, int, int, int):boolean type: STATIC \l}"];
Node_54 [shape=record,label="{54\:\ 0x0217|0x0217: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x021c \l}"];
Node_55 [shape=record,label="{55\:\ 0x0219|0x0219: INVOKE  (r1 I:android.graphics.Matrix), (r6 I:float), (r8 I:float) android.graphics.Matrix.preScale(float, float):boolean type: VIRTUAL \l}"];
Node_56 [shape=record,label="{56\:\ 0x021c|0x021c: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x021d: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x021e: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x021f: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_57 [shape=record,label="{57\:\ 0x0222|0x0222: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0224: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0226: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0228: IGET  (r0 I:boolean) = (r0 I:com.squareup.picasso.Request) com.squareup.picasso.Request.centerInside boolean \l}"];
Node_58 [shape=record,label="{58\:\ 0x022a|0x022a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:74:0x024e \l}"];
Node_59 [shape=record,label="{59\:\ 0x022c|0x022c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x0232 \l}"];
Node_60 [shape=record,label="{60\:\ 0x022e|0x022e: CAST  (r0 I:float) = (float) (r5 I:int) \l0x022f: CAST  (r6 I:float) = (float) (r3 I:int) \l}"];
Node_61 [shape=record,label="{61\:\ 0x0230|0x0230: ARITH  (r0 I:float) = (r0 I:float) \/ (r6 I:float) \l}"];
Node_62 [shape=record,label="{62\:\ 0x0232|0x0232: CAST  (r0 I:float) = (float) (r7 I:int) \l0x0233: CAST  (r6 I:float) = (float) (r4 I:int) \l}"];
Node_63 [shape=record,label="{63\:\ 0x0235|0x0235: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x023b \l}"];
Node_64 [shape=record,label="{64\:\ 0x0237|0x0237: CAST  (r6 I:float) = (float) (r7 I:int) \l0x0238: CAST  (r8 I:float) = (float) (r4 I:int) \l}"];
Node_65 [shape=record,label="{65\:\ 0x0239|0x0239: ARITH  (r6 I:float) = (r6 I:float) \/ (r8 I:float) \l}"];
Node_66 [shape=record,label="{66\:\ 0x023b|0x023b: CAST  (r6 I:float) = (float) (r5 I:int) \l0x023c: CAST  (r8 I:float) = (float) (r3 I:int) \l}"];
Node_67 [shape=record,label="{67\:\ 0x023e|0x023e: CMP_G  (r8 I:int) = (r0 I:float), (r6 I:float) \l}"];
Node_68 [shape=record,label="{68\:\ 0x0240|0x0240: IF  (r8 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:70:0x0243 \l}"];
Node_70 [shape=record,label="{70\:\ 0x0243|0x0243: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_71 [shape=record,label="{71\:\ 0x0244|0x0244: INVOKE  (r2 I:boolean) = \l  (r2 I:boolean)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r7 I:int)\l com.squareup.picasso.BitmapHunter.shouldResize(boolean, int, int, int, int):boolean type: STATIC \l}"];
Node_72 [shape=record,label="{72\:\ 0x0248|0x0248: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:89:0x0271 \l}"];
Node_73 [shape=record,label="{73\:\ 0x024a|0x024a: INVOKE  (r1 I:android.graphics.Matrix), (r0 I:float), (r0 I:float) android.graphics.Matrix.preScale(float, float):boolean type: VIRTUAL \l}"];
Node_74 [shape=record,label="{74\:\ 0x024e|0x024e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:76:0x0252 \l}"];
Node_75 [shape=record,label="{75\:\ 0x0250|0x0250: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:89:0x0271 \l}"];
Node_76 [shape=record,label="{76\:\ 0x0252|0x0252: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:78:0x0256 \l}"];
Node_77 [shape=record,label="{77\:\ 0x0254|0x0254: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:89:0x0271 \l}"];
Node_78 [shape=record,label="{78\:\ 0x0256|0x0256: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:81:0x025c \l}"];
Node_79 [shape=record,label="{79\:\ 0x0258|0x0258: CAST  (r0 I:float) = (float) (r5 I:int) \l0x0259: CAST  (r6 I:float) = (float) (r3 I:int) \l}"];
Node_80 [shape=record,label="{80\:\ 0x025a|0x025a: ARITH  (r0 I:float) = (r0 I:float) \/ (r6 I:float) \l}"];
Node_81 [shape=record,label="{81\:\ 0x025c|0x025c: CAST  (r0 I:float) = (float) (r7 I:int) \l0x025d: CAST  (r6 I:float) = (float) (r4 I:int) \l}"];
Node_82 [shape=record,label="{82\:\ 0x025f|0x025f: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:85:0x0265 \l}"];
Node_83 [shape=record,label="{83\:\ 0x0261|0x0261: CAST  (r6 I:float) = (float) (r7 I:int) \l0x0262: CAST  (r8 I:float) = (float) (r4 I:int) \l}"];
Node_84 [shape=record,label="{84\:\ 0x0263|0x0263: ARITH  (r6 I:float) = (r6 I:float) \/ (r8 I:float) \l}"];
Node_85 [shape=record,label="{85\:\ 0x0265|0x0265: CAST  (r6 I:float) = (float) (r5 I:int) \l0x0266: CAST  (r8 I:float) = (float) (r3 I:int) \l}"];
Node_86 [shape=record,label="{86\:\ 0x0268|0x0268: INVOKE  (r2 I:boolean) = \l  (r2 I:boolean)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r7 I:int)\l com.squareup.picasso.BitmapHunter.shouldResize(boolean, int, int, int, int):boolean type: STATIC \l}"];
Node_87 [shape=record,label="{87\:\ 0x026c|0x026c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:89:0x0271 \l}"];
Node_88 [shape=record,label="{88\:\ 0x026e|0x026e: INVOKE  (r1 I:android.graphics.Matrix), (r0 I:float), (r6 I:float) android.graphics.Matrix.preScale(float, float):boolean type: VIRTUAL \l}"];
Node_89 [shape=record,label="{89\:\ 0x0271|0x0271: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0272: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0273: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0274: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_90 [shape=record,label="{90\:\ 0x0275|0x0275: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0276: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0278: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0279: INVOKE  (r0 I:android.graphics.Bitmap) = \l  (r5 I:android.graphics.Bitmap)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:int)\l  (r10 I:android.graphics.Matrix)\l  (r11 I:boolean)\l android.graphics.Bitmap.createBitmap(android.graphics.Bitmap, int, int, int, int, android.graphics.Matrix, boolean):android.graphics.Bitmap type: STATIC \l0x027d: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l}"];
Node_91 [shape=record,label="{91\:\ 0x027f|0x027f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:93:0x0285 \l}"];
Node_92 [shape=record,label="{92\:\ 0x0281|0x0281: INVOKE  (r32 I:android.graphics.Bitmap) android.graphics.Bitmap.recycle():void type: VIRTUAL \l}"];
Node_93 [shape=record,label="{93\:\ 0x0285|0x0285: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_94 [shape=record,label="{94\:\ 0x0286|0x0286: RETURN  (r0 I:android.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{static android.graphics.Bitmap com.squareup.picasso.BitmapHunter.transformResult((r31 I:com.squareup.picasso.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32 I:android.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_4;
Node_2 -> Node_5[style=dashed];
Node_4 -> Node_89;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_12;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_23;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_57;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_32;
Node_31 -> Node_30;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_42;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_41;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_53;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_52;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_51;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_51;
Node_50 -> Node_51;
Node_51 -> Node_53;
Node_52 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_56;
Node_56 -> Node_90;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_74;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_62;
Node_60 -> Node_61;
Node_61 -> Node_63;
Node_62 -> Node_61;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_66;
Node_64 -> Node_65;
Node_65 -> Node_67;
Node_66 -> Node_65;
Node_67 -> Node_68;
Node_68 -> Node_70;
Node_68 -> Node_71[style=dashed];
Node_70 -> Node_71;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_89;
Node_73 -> Node_89;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_76;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_89;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_78;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_89;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_81;
Node_79 -> Node_80;
Node_80 -> Node_82;
Node_81 -> Node_80;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_85;
Node_83 -> Node_84;
Node_84 -> Node_86;
Node_85 -> Node_84;
Node_86 -> Node_87;
Node_87 -> Node_88[style=dashed];
Node_87 -> Node_89;
Node_88 -> Node_89;
Node_89 -> Node_90;
Node_90 -> Node_91;
Node_91 -> Node_92[style=dashed];
Node_91 -> Node_93;
Node_92 -> Node_94;
Node_93 -> Node_94;
}

