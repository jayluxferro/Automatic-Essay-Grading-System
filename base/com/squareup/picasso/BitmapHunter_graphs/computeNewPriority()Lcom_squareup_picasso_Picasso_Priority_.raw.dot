digraph "CFG forcom.squareup.picasso.BitmapHunter.computeNewPriority()Lcom\/squareup\/picasso\/Picasso$Priority;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:com.squareup.picasso.Picasso$Priority) =  com.squareup.picasso.Picasso.Priority.LOW com.squareup.picasso.Picasso$Priority \l0x0002: IGET  (r1 I:java.util.List\<com.squareup.picasso.Action\>) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.actions java.util.List \l0x0004: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r1 I:java.util.List\<com.squareup.picasso.Action\>) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.actions java.util.List \l0x000a: INVOKE  (r1 I:boolean) = (r1 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IGET  (r4 I:com.squareup.picasso.Action) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.action com.squareup.picasso.Action \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001b \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001a \l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001e \l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: RETURN  (r0 I:com.squareup.picasso.Picasso$Priority) \l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|0x001e: IGET  (r2 I:com.squareup.picasso.Action) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.action com.squareup.picasso.Action \l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|0x0020: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0028 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0022|0x0022: IGET  (r0 I:com.squareup.picasso.Action) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.action com.squareup.picasso.Action \l0x0024: INVOKE  (r0 I:com.squareup.picasso.Picasso$Priority) = (r0 I:com.squareup.picasso.Action) com.squareup.picasso.Action.getPriority():com.squareup.picasso.Picasso$Priority type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0028|0x0028: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x004c \l}"];
Node_17 [shape=record,label="{17\:\ 0x002a|0x002a: IGET  (r1 I:java.util.List\<com.squareup.picasso.Action\>) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.actions java.util.List \l0x002c: INVOKE  (r1 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x0030|0x0030: IF  (r3 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:23:0x004c \l}"];
Node_19 [shape=record,label="{19\:\ 0x0032|0x0032: IGET  (r2 I:java.util.List\<com.squareup.picasso.Action\>) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.actions java.util.List \l0x0034: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.List), (r3 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0038: CHECK_CAST  (r2 I:com.squareup.picasso.Action) = (com.squareup.picasso.Action) (r2 I:?[OBJECT, ARRAY]) \l0x003a: INVOKE  (r2 I:com.squareup.picasso.Picasso$Priority) = (r2 I:com.squareup.picasso.Action) com.squareup.picasso.Action.getPriority():com.squareup.picasso.Picasso$Priority type: VIRTUAL \l0x003e: INVOKE  (r4 I:int) = (r2 I:com.squareup.picasso.Picasso$Priority) com.squareup.picasso.Picasso.Priority.ordinal():int type: VIRTUAL \l0x0042: INVOKE  (r5 I:int) = (r0 I:com.squareup.picasso.Picasso$Priority) com.squareup.picasso.Picasso.Priority.ordinal():int type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0046|0x0046: IF  (r4 I:?[int, byte, short, char]) \<= (r5 I:?[int, byte, short, char])  \-\> B:22:0x0049 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0048|0x0048: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0049|0x0049: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x004c|0x004c: RETURN  (r0 I:com.squareup.picasso.Picasso$Priority) \l}"];
MethodNode[shape=record,label="{private com.squareup.picasso.Picasso$Priority com.squareup.picasso.BitmapHunter.computeNewPriority((r6 'this' I:com.squareup.picasso.BitmapHunter A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_10;
Node_8 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_18;
}

