digraph "CFG forcom.squareup.picasso.BitmapHunter.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.lang.Object) =  java.lang.Object \l0x0002: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0005: SPUT  (r0 I:java.lang.Object) com.squareup.picasso.BitmapHunter.DECODE_LOCK java.lang.Object \l0x0007: NEW_INSTANCE  (r0 I:com.squareup.picasso.BitmapHunter$1) =  com.squareup.picasso.BitmapHunter$1 \l0x0009: INVOKE  (r0 I:com.squareup.picasso.BitmapHunter$1) com.squareup.picasso.BitmapHunter.1.\<init\>():void type: DIRECT \l0x000c: SPUT  (r0 I:java.lang.ThreadLocal\<java.lang.StringBuilder\>) com.squareup.picasso.BitmapHunter.NAME_BUILDER java.lang.ThreadLocal \l0x000e: NEW_INSTANCE  (r0 I:java.util.concurrent.atomic.AtomicInteger) =  java.util.concurrent.atomic.AtomicInteger \l0x0010: INVOKE  (r0 I:java.util.concurrent.atomic.AtomicInteger) java.util.concurrent.atomic.AtomicInteger.\<init\>():void type: DIRECT \l0x0013: SPUT  (r0 I:java.util.concurrent.atomic.AtomicInteger) com.squareup.picasso.BitmapHunter.SEQUENCE_GENERATOR java.util.concurrent.atomic.AtomicInteger \l0x0015: NEW_INSTANCE  (r0 I:com.squareup.picasso.BitmapHunter$2) =  com.squareup.picasso.BitmapHunter$2 \l0x0017: INVOKE  (r0 I:com.squareup.picasso.BitmapHunter$2) com.squareup.picasso.BitmapHunter.2.\<init\>():void type: DIRECT \l0x001a: SPUT  (r0 I:com.squareup.picasso.RequestHandler) com.squareup.picasso.BitmapHunter.ERRORING_HANDLER com.squareup.picasso.RequestHandler \l}"];
Node_1 [shape=record,label="{1\:\ 0x001c|0x001c: RETURN   \l}"];
MethodNode[shape=record,label="{static void com.squareup.picasso.BitmapHunter.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

