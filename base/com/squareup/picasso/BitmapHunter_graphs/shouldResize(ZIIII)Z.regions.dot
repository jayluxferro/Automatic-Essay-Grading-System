digraph "CFG forcom.squareup.picasso.BitmapHunter.shouldResize(ZIIII)Z" {
subgraph cluster_Region_1106602287 {
label = "R(1:0)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lRETURN\l|return !r0 \|\| (r3 != 0 && r1 \> r3) \|\| (r4 != 0 && r2 \> r4)\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002|REMOVE\lADDED_TO_REGION\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004|REMOVE\lADDED_TO_REGION\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0006|REMOVE\lADDED_TO_REGION\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0008|REMOVE\lADDED_TO_REGION\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000b|SYNTHETIC\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000d|SYNTHETIC\lORIG_RETURN\l}"];
MethodNode[shape=record,label="{private static boolean com.squareup.picasso.BitmapHunter.shouldResize((r0v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_6;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_4 -> Node_6;
}

