digraph "CFG forcom.squareup.picasso.BitmapHunter.attach(Lcom\/squareup\/picasso\/Action;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.squareup.picasso.Picasso) = (r4 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.picasso com.squareup.picasso.Picasso \l0x0002: IGET  (r0 I:boolean) = (r0 I:com.squareup.picasso.Picasso) com.squareup.picasso.Picasso.loggingEnabled boolean \l0x0004: IGET  (r1 I:com.squareup.picasso.Request) = (r5 I:com.squareup.picasso.Action) com.squareup.picasso.Action.request com.squareup.picasso.Request \l0x0006: IGET  (r2 I:com.squareup.picasso.Action) = (r4 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.action com.squareup.picasso.Action \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IPUT  \l  (r5 I:com.squareup.picasso.Action)\l  (r4 I:com.squareup.picasso.BitmapHunter)\l com.squareup.picasso.BitmapHunter.action com.squareup.picasso.Action \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x003a \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IGET  (r5 I:java.util.List\<com.squareup.picasso.Action\>) = (r4 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.actions java.util.List \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002d \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IGET  (r5 I:java.util.List\<com.squareup.picasso.Action\>) = (r4 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.actions java.util.List \l0x0014: INVOKE  (r5 I:boolean) = (r5 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001b \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: CONST_STR  (r5 I:java.lang.String) =  \"Hunter\" \l0x001d: CONST_STR  (r0 I:java.lang.String) =  \"joined\" \l0x001f: INVOKE  (r1 I:java.lang.String) = (r1 I:com.squareup.picasso.Request) com.squareup.picasso.Request.logId():java.lang.String type: VIRTUAL \l0x0023: CONST_STR  (r2 I:java.lang.String) =  \"to \" \l0x0025: INVOKE  (r2 I:java.lang.String) = \l  (r4 I:com.squareup.picasso.BitmapHunter)\l  (r2 I:java.lang.String)\l com.squareup.picasso.Utils.getLogIdsForHunter(com.squareup.picasso.BitmapHunter, java.lang.String):java.lang.String type: STATIC \l0x0029: INVOKE  \l  (r5 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l com.squareup.picasso.Utils.log(java.lang.String, java.lang.String, java.lang.String, java.lang.String):void type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: CONST_STR  (r5 I:java.lang.String) =  \"Hunter\" \l0x002f: CONST_STR  (r0 I:java.lang.String) =  \"joined\" \l0x0031: INVOKE  (r1 I:java.lang.String) = (r1 I:com.squareup.picasso.Request) com.squareup.picasso.Request.logId():java.lang.String type: VIRTUAL \l0x0035: CONST_STR  (r2 I:java.lang.String) =  \"to empty hunter\" \l0x0037: INVOKE  \l  (r5 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l com.squareup.picasso.Utils.log(java.lang.String, java.lang.String, java.lang.String, java.lang.String):void type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|0x003a: RETURN   \l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: IGET  (r2 I:java.util.List\<com.squareup.picasso.Action\>) = (r4 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.actions java.util.List \l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0047 \l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|0x003f: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x0041: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0042: INVOKE  (r2 I:java.util.ArrayList), (r3 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x0045: IPUT  \l  (r2 I:java.util.List\<com.squareup.picasso.Action\>)\l  (r4 I:com.squareup.picasso.BitmapHunter)\l com.squareup.picasso.BitmapHunter.actions java.util.List \l}"];
Node_15 [shape=record,label="{15\:\ 0x0047|0x0047: IGET  (r2 I:java.util.List\<com.squareup.picasso.Action\>) = (r4 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.actions java.util.List \l0x0049: INVOKE  (r2 I:java.util.List), (r5 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|0x004c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x005f \l}"];
Node_17 [shape=record,label="{17\:\ 0x004e|0x004e: CONST_STR  (r0 I:java.lang.String) =  \"Hunter\" \l0x0050: CONST_STR  (r2 I:java.lang.String) =  \"joined\" \l0x0052: INVOKE  (r1 I:java.lang.String) = (r1 I:com.squareup.picasso.Request) com.squareup.picasso.Request.logId():java.lang.String type: VIRTUAL \l0x0056: CONST_STR  (r3 I:java.lang.String) =  \"to \" \l0x0058: INVOKE  (r3 I:java.lang.String) = \l  (r4 I:com.squareup.picasso.BitmapHunter)\l  (r3 I:java.lang.String)\l com.squareup.picasso.Utils.getLogIdsForHunter(com.squareup.picasso.BitmapHunter, java.lang.String):java.lang.String type: STATIC \l0x005c: INVOKE  \l  (r0 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r3 I:java.lang.String)\l com.squareup.picasso.Utils.log(java.lang.String, java.lang.String, java.lang.String, java.lang.String):void type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x005f|0x005f: INVOKE  (r5 I:com.squareup.picasso.Picasso$Priority) = (r5 I:com.squareup.picasso.Action) com.squareup.picasso.Action.getPriority():com.squareup.picasso.Picasso$Priority type: VIRTUAL \l0x0063: INVOKE  (r0 I:int) = (r5 I:com.squareup.picasso.Picasso$Priority) com.squareup.picasso.Picasso.Priority.ordinal():int type: VIRTUAL \l0x0067: IGET  (r1 I:com.squareup.picasso.Picasso$Priority) = (r4 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.priority com.squareup.picasso.Picasso$Priority \l0x0069: INVOKE  (r1 I:int) = (r1 I:com.squareup.picasso.Picasso$Priority) com.squareup.picasso.Picasso.Priority.ordinal():int type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x006d|0x006d: IF  (r0 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:21:0x0071 \l}"];
Node_20 [shape=record,label="{20\:\ 0x006f|0x006f: IPUT  \l  (r5 I:com.squareup.picasso.Picasso$Priority)\l  (r4 I:com.squareup.picasso.BitmapHunter)\l com.squareup.picasso.BitmapHunter.priority com.squareup.picasso.Picasso$Priority \l}"];
Node_21 [shape=record,label="{21\:\ 0x0071|0x0071: RETURN   \l}"];
MethodNode[shape=record,label="{void com.squareup.picasso.BitmapHunter.attach((r4 'this' I:com.squareup.picasso.BitmapHunter A[IMMUTABLE_TYPE, THIS]), (r5 I:com.squareup.picasso.Action A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
}

