digraph "CFG forcom.squareup.picasso.BitmapHunter.detach(Lcom\/squareup\/picasso\/Action;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3.action != r4) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r3.action = null\lr0 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009}"];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r3.actions == null) goto L_0x0014\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|boolean r0 = r3.actions.remove(r4)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|r0 = false\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v8 boolean), (r0v10 boolean), (r0v12 boolean) binds: [B:6:0x0014, B:5:0x000d, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L_0x0025\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017}"];
Node_9 [shape=record,label="{9\:\ 0x001d|if (r4.getPriority() != r3.priority) goto L_0x0025\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|r3.priority = computeNewPriority()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025}"];
Node_12 [shape=record,label="{12\:\ 0x0029|if (r3.picasso.loggingEnabled == false) goto L_?\l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|com.squareup.picasso.Utils.log(\"Hunter\", \"removed\", r4.request.logId(), com.squareup.picasso.Utils.getLogIdsForHunter(r3, \"from \"))\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void com.squareup.picasso.BitmapHunter.detach((r3v0 'this' com.squareup.picasso.BitmapHunter A[IMMUTABLE_TYPE, THIS]), (r4v0 com.squareup.picasso.Action A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
}

