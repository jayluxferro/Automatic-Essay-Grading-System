digraph "CFG forcom.squareup.picasso.BitmapHunter.\<init\>(Lcom\/squareup\/picasso\/Picasso;Lcom\/squareup\/picasso\/Dispatcher;Lcom\/squareup\/picasso\/Cache;Lcom\/squareup\/picasso\/Stats;Lcom\/squareup\/picasso\/Action;Lcom\/squareup\/picasso\/RequestHandler;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.sequence = SEQUENCE_GENERATOR.incrementAndGet()\lr1.picasso = r2\lr1.dispatcher = r3\lr1.cache = r4\lr1.stats = r5\lr1.action = r6\lr1.key = r6.getKey()\lr1.data = r6.getRequest()\lr1.priority = r6.getPriority()\lr1.memoryPolicy = r6.getMemoryPolicy()\lr1.networkPolicy = r6.getNetworkPolicy()\lr1.requestHandler = r7\lr1.retryCount = r7.getRetryCount()\l}"];
Node_1 [shape=record,label="{1\:\ 0x003b|RETURN\l|return\l}"];
MethodNode[shape=record,label="{void com.squareup.picasso.BitmapHunter.\<init\>((r1v0 'this' com.squareup.picasso.BitmapHunter A[IMMUTABLE_TYPE, THIS]), (r2v0 com.squareup.picasso.Picasso A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 com.squareup.picasso.Dispatcher A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 com.squareup.picasso.Cache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 com.squareup.picasso.Stats A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 com.squareup.picasso.Action A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 com.squareup.picasso.RequestHandler A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

