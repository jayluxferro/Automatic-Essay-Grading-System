digraph "CFG forcom.squareup.picasso.BitmapHunter.shouldResize(ZIIII)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r0 == false) goto L_0x000d\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3 == 0) goto L_0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r1 \> r3) goto L_0x000d\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r4 == 0) goto L_0x000b\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|if (r2 \<= r4) goto L_0x000b\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|SYNTHETIC\lRETURN\l|return false\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
MethodNode[shape=record,label="{private static boolean com.squareup.picasso.BitmapHunter.shouldResize((r0v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_6;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
}

