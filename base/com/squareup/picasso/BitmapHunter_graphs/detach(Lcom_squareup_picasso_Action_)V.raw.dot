digraph "CFG forcom.squareup.picasso.BitmapHunter.detach(Lcom\/squareup\/picasso\/Action;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.squareup.picasso.Action) = (r3 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.action com.squareup.picasso.Action \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: IPUT  \l  (r0 I:com.squareup.picasso.Action)\l  (r3 I:com.squareup.picasso.BitmapHunter)\l com.squareup.picasso.BitmapHunter.action com.squareup.picasso.Action \l0x0007: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r0 I:java.util.List\<com.squareup.picasso.Action\>) = (r3 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.actions java.util.List \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0014 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IGET  (r0 I:java.util.List\<com.squareup.picasso.Action\>) = (r3 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.actions java.util.List \l0x000f: INVOKE  (r0 I:boolean) = (r0 I:java.util.List), (r4 I:java.lang.Object) java.util.List.remove(java.lang.Object):boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0025 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: INVOKE  (r0 I:com.squareup.picasso.Picasso$Priority) = (r4 I:com.squareup.picasso.Action) com.squareup.picasso.Action.getPriority():com.squareup.picasso.Picasso$Priority type: VIRTUAL \l0x001b: IGET  (r1 I:com.squareup.picasso.Picasso$Priority) = (r3 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.priority com.squareup.picasso.Picasso$Priority \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0025 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: INVOKE  (r0 I:com.squareup.picasso.Picasso$Priority) = (r3 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.computeNewPriority():com.squareup.picasso.Picasso$Priority type: DIRECT \l0x0023: IPUT  \l  (r0 I:com.squareup.picasso.Picasso$Priority)\l  (r3 I:com.squareup.picasso.BitmapHunter)\l com.squareup.picasso.BitmapHunter.priority com.squareup.picasso.Picasso$Priority \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: IGET  (r0 I:com.squareup.picasso.Picasso) = (r3 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.picasso com.squareup.picasso.Picasso \l0x0027: IGET  (r0 I:boolean) = (r0 I:com.squareup.picasso.Picasso) com.squareup.picasso.Picasso.loggingEnabled boolean \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003e \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: CONST_STR  (r0 I:java.lang.String) =  \"Hunter\" \l0x002d: CONST_STR  (r1 I:java.lang.String) =  \"removed\" \l0x002f: IGET  (r4 I:com.squareup.picasso.Request) = (r4 I:com.squareup.picasso.Action) com.squareup.picasso.Action.request com.squareup.picasso.Request \l0x0031: INVOKE  (r4 I:java.lang.String) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.logId():java.lang.String type: VIRTUAL \l0x0035: CONST_STR  (r2 I:java.lang.String) =  \"from \" \l0x0037: INVOKE  (r2 I:java.lang.String) = \l  (r3 I:com.squareup.picasso.BitmapHunter)\l  (r2 I:java.lang.String)\l com.squareup.picasso.Utils.getLogIdsForHunter(com.squareup.picasso.BitmapHunter, java.lang.String):java.lang.String type: STATIC \l0x003b: INVOKE  \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r2 I:java.lang.String)\l com.squareup.picasso.Utils.log(java.lang.String, java.lang.String, java.lang.String, java.lang.String):void type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|0x003e: RETURN   \l}"];
MethodNode[shape=record,label="{void com.squareup.picasso.BitmapHunter.detach((r3 'this' I:com.squareup.picasso.BitmapHunter A[IMMUTABLE_TYPE, THIS]), (r4 I:com.squareup.picasso.Action A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
}

