digraph "CFG forcom.squareup.picasso.BitmapHunter.shouldRetry(ZLandroid\/net\/NetworkInfo;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r3 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.retryCount int \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000c \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: RETURN  (r1 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IGET  (r0 I:int) = (r3 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.retryCount int \l0x000e: ARITH  (r0 I:int) = (r0 I:int) \- (r2 I:int) \l0x000f: IPUT  (r0 I:int), (r3 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.retryCount int \l0x0011: IGET  (r0 I:com.squareup.picasso.RequestHandler) = (r3 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.requestHandler com.squareup.picasso.RequestHandler \l0x0013: INVOKE  (r4 I:boolean) = \l  (r0 I:com.squareup.picasso.RequestHandler)\l  (r4 I:boolean)\l  (r5 I:android.net.NetworkInfo)\l com.squareup.picasso.RequestHandler.shouldRetry(boolean, android.net.NetworkInfo):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: RETURN  (r4 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean com.squareup.picasso.BitmapHunter.shouldRetry((r3 'this' I:com.squareup.picasso.BitmapHunter A[IMMUTABLE_TYPE, THIS]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.net.NetworkInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
}

