digraph "CFG forcom.squareup.picasso.BitmapHunter.hunt()Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.memoryPolicy int \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:int) com.squareup.picasso.MemoryPolicy.shouldReadFromMemoryCache(int):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0031 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:com.squareup.picasso.Cache) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.cache com.squareup.picasso.Cache \l0x000a: IGET  (r1 I:java.lang.String) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.key java.lang.String \l0x000c: INVOKE  (r0 I:android.graphics.Bitmap) = (r0 I:com.squareup.picasso.Cache), (r1 I:java.lang.String) com.squareup.picasso.Cache.get(java.lang.String):android.graphics.Bitmap type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0032 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IGET  (r1 I:com.squareup.picasso.Stats) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.stats com.squareup.picasso.Stats \l0x0014: INVOKE  (r1 I:com.squareup.picasso.Stats) com.squareup.picasso.Stats.dispatchCacheHit():void type: VIRTUAL \l0x0017: SGET  (r1 I:com.squareup.picasso.Picasso$LoadedFrom) =  com.squareup.picasso.Picasso.LoadedFrom.MEMORY com.squareup.picasso.Picasso$LoadedFrom \l0x0019: IPUT  \l  (r1 I:com.squareup.picasso.Picasso$LoadedFrom)\l  (r6 I:com.squareup.picasso.BitmapHunter)\l com.squareup.picasso.BitmapHunter.loadedFrom com.squareup.picasso.Picasso$LoadedFrom \l0x001b: IGET  (r1 I:com.squareup.picasso.Picasso) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.picasso com.squareup.picasso.Picasso \l0x001d: IGET  (r1 I:boolean) = (r1 I:com.squareup.picasso.Picasso) com.squareup.picasso.Picasso.loggingEnabled boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0030 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: CONST_STR  (r1 I:java.lang.String) =  \"Hunter\" \l0x0023: CONST_STR  (r2 I:java.lang.String) =  \"decoded\" \l0x0025: IGET  (r3 I:com.squareup.picasso.Request) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.data com.squareup.picasso.Request \l0x0027: INVOKE  (r3 I:java.lang.String) = (r3 I:com.squareup.picasso.Request) com.squareup.picasso.Request.logId():java.lang.String type: VIRTUAL \l0x002b: CONST_STR  (r4 I:java.lang.String) =  \"from cache\" \l0x002d: INVOKE  \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l com.squareup.picasso.Utils.log(java.lang.String, java.lang.String, java.lang.String, java.lang.String):void type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|0x0030: RETURN  (r0 I:android.graphics.Bitmap) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|0x0032: IGET  (r1 I:int) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.retryCount int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003b \l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|0x0036: SGET  (r1 I:com.squareup.picasso.NetworkPolicy) =  com.squareup.picasso.NetworkPolicy.OFFLINE com.squareup.picasso.NetworkPolicy \l0x0038: IGET  (r1 I:int) = (r1 I:com.squareup.picasso.NetworkPolicy) com.squareup.picasso.NetworkPolicy.index int \l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: IGET  (r1 I:int) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.networkPolicy int \l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: IPUT  (r1 I:int), (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.networkPolicy int \l0x003f: IGET  (r1 I:com.squareup.picasso.RequestHandler) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.requestHandler com.squareup.picasso.RequestHandler \l0x0041: IGET  (r2 I:com.squareup.picasso.Request) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.data com.squareup.picasso.Request \l0x0043: IGET  (r3 I:int) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.networkPolicy int \l0x0045: INVOKE  (r1 I:com.squareup.picasso.RequestHandler$Result) = \l  (r1 I:com.squareup.picasso.RequestHandler)\l  (r2 I:com.squareup.picasso.Request)\l  (r3 I:int)\l com.squareup.picasso.RequestHandler.load(com.squareup.picasso.Request, int):com.squareup.picasso.RequestHandler$Result type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0049|0x0049: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0071 \l}"];
Node_15 [shape=record,label="{15\:\ 0x004b|0x004b: INVOKE  (r0 I:com.squareup.picasso.Picasso$LoadedFrom) = (r1 I:com.squareup.picasso.RequestHandler$Result) com.squareup.picasso.RequestHandler.Result.getLoadedFrom():com.squareup.picasso.Picasso$LoadedFrom type: VIRTUAL \l0x004f: IPUT  \l  (r0 I:com.squareup.picasso.Picasso$LoadedFrom)\l  (r6 I:com.squareup.picasso.BitmapHunter)\l com.squareup.picasso.BitmapHunter.loadedFrom com.squareup.picasso.Picasso$LoadedFrom \l0x0051: INVOKE  (r0 I:int) = (r1 I:com.squareup.picasso.RequestHandler$Result) com.squareup.picasso.RequestHandler.Result.getExifOrientation():int type: VIRTUAL \l0x0055: IPUT  (r0 I:int), (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.exifOrientation int \l0x0057: INVOKE  (r0 I:android.graphics.Bitmap) = (r1 I:com.squareup.picasso.RequestHandler$Result) com.squareup.picasso.RequestHandler.Result.getBitmap():android.graphics.Bitmap type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x005b|0x005b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0071 \l}"];
Node_17 [shape=record,label="{17\:\ 0x005d|0x005d: INVOKE  (r0 I:okio.Source) = (r1 I:com.squareup.picasso.RequestHandler$Result) com.squareup.picasso.RequestHandler.Result.getSource():okio.Source type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0061|SYNTHETIC\lSplitter:B:18:0x0061\l}"];
Node_19 [shape=record,label="{19\:\ ?|Splitter:B:18:0x0061\l|0x0061: IGET  (r1 I:com.squareup.picasso.Request) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.data com.squareup.picasso.Request A[Catch:\{ all \-\> 0x006c \}, TRY_ENTER]\l0x0063: INVOKE  (r1 I:android.graphics.Bitmap) = (r0 I:okio.Source), (r1 I:com.squareup.picasso.Request) com.squareup.picasso.BitmapHunter.decodeStream(okio.Source, com.squareup.picasso.Request):android.graphics.Bitmap type: STATIC A[Catch:\{ all \-\> 0x006c \}]\l0x0066: NOP   A[TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0067|SYNTHETIC\lSplitter:B:20:0x0067\l}"];
Node_21 [shape=record,label="{21\:\ ?|Splitter:B:20:0x0067\l|0x0067: INVOKE  (r0 I:okio.Source) okio.Source.close():void type: INTERFACE A[Catch:\{ IOException \-\> 0x006a \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x006a|0x006a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:20:0x0067\l}"];
Node_24 [shape=record,label="{24\:\ 0x006c|ExcHandler: all null\lSplitter:B:18:0x0061\l|0x006c: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_25 [shape=record,label="{25\:\ 0x006d|SYNTHETIC\lSplitter:B:25:0x006d\l}"];
Node_26 [shape=record,label="{26\:\ ?|Splitter:B:25:0x006d\l|0x006d: INVOKE  (r0 I:okio.Source) okio.Source.close():void type: INTERFACE A[Catch:\{ IOException \-\> 0x0070 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0070|0x0070: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:25:0x006d\l}"];
Node_29 [shape=record,label="{29\:\ 0x0071|0x0071: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x00f2 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0073|0x0073: IGET  (r1 I:com.squareup.picasso.Picasso) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.picasso com.squareup.picasso.Picasso \l0x0075: IGET  (r1 I:boolean) = (r1 I:com.squareup.picasso.Picasso) com.squareup.picasso.Picasso.loggingEnabled boolean \l}"];
Node_31 [shape=record,label="{31\:\ 0x0077|0x0077: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0086 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0079|0x0079: CONST_STR  (r1 I:java.lang.String) =  \"Hunter\" \l0x007b: CONST_STR  (r2 I:java.lang.String) =  \"decoded\" \l0x007d: IGET  (r3 I:com.squareup.picasso.Request) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.data com.squareup.picasso.Request \l0x007f: INVOKE  (r3 I:java.lang.String) = (r3 I:com.squareup.picasso.Request) com.squareup.picasso.Request.logId():java.lang.String type: VIRTUAL \l0x0083: INVOKE  \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l com.squareup.picasso.Utils.log(java.lang.String, java.lang.String, java.lang.String):void type: STATIC \l}"];
Node_33 [shape=record,label="{33\:\ 0x0086|0x0086: IGET  (r1 I:com.squareup.picasso.Stats) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.stats com.squareup.picasso.Stats \l0x0088: INVOKE  \l  (r1 I:com.squareup.picasso.Stats)\l  (r0 I:android.graphics.Bitmap)\l com.squareup.picasso.Stats.dispatchBitmapDecoded(android.graphics.Bitmap):void type: VIRTUAL \l0x008b: IGET  (r1 I:com.squareup.picasso.Request) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.data com.squareup.picasso.Request \l0x008d: INVOKE  (r1 I:boolean) = (r1 I:com.squareup.picasso.Request) com.squareup.picasso.Request.needsTransformation():boolean type: VIRTUAL \l}"];
Node_34 [shape=record,label="{34\:\ 0x0091|0x0091: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0097 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0093|0x0093: IGET  (r1 I:int) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.exifOrientation int \l}"];
Node_36 [shape=record,label="{36\:\ 0x0095|0x0095: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x00f2 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0097|0x0097: SGET  (r1 I:java.lang.Object) =  com.squareup.picasso.BitmapHunter.DECODE_LOCK java.lang.Object \l}"];
Node_38 [shape=record,label="{38\:\ 0x0099|0x0099: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x009a|SYNTHETIC\lSplitter:B:39:0x009a\l}"];
Node_40 [shape=record,label="{40\:\ ?|Splitter:B:39:0x009a\l|0x009a: IGET  (r2 I:com.squareup.picasso.Request) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.data com.squareup.picasso.Request A[Catch:\{ all \-\> 0x00ef \}, TRY_ENTER]\l0x009c: INVOKE  (r2 I:boolean) = (r2 I:com.squareup.picasso.Request) com.squareup.picasso.Request.needsMatrixTransform():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x00ef \}]\l}"];
Node_41 [shape=record,label="{41\:\ 0x00a0|0x00a0: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x00a6 A[Catch:\{ all \-\> 0x00ef \}]\l}"];
Node_42 [shape=record,label="{42\:\ 0x00a2|0x00a2: IGET  (r2 I:int) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.exifOrientation int A[Catch:\{ all \-\> 0x00ef \}]\l}"];
Node_43 [shape=record,label="{43\:\ 0x00a4|0x00a4: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x00c1 A[Catch:\{ all \-\> 0x00ef \}]\l}"];
Node_44 [shape=record,label="{44\:\ 0x00a6|0x00a6: IGET  (r2 I:com.squareup.picasso.Request) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.data com.squareup.picasso.Request A[Catch:\{ all \-\> 0x00ef \}]\l0x00a8: IGET  (r3 I:int) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.exifOrientation int A[Catch:\{ all \-\> 0x00ef \}]\l0x00aa: INVOKE  (r0 I:android.graphics.Bitmap) = \l  (r2 I:com.squareup.picasso.Request)\l  (r0 I:android.graphics.Bitmap)\l  (r3 I:int)\l com.squareup.picasso.BitmapHunter.transformResult(com.squareup.picasso.Request, android.graphics.Bitmap, int):android.graphics.Bitmap type: STATIC A[Catch:\{ all \-\> 0x00ef \}]\l0x00ae: IGET  (r2 I:com.squareup.picasso.Picasso) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.picasso com.squareup.picasso.Picasso A[Catch:\{ all \-\> 0x00ef \}]\l0x00b0: IGET  (r2 I:boolean) = (r2 I:com.squareup.picasso.Picasso) com.squareup.picasso.Picasso.loggingEnabled boolean A[Catch:\{ all \-\> 0x00ef \}]\l}"];
Node_45 [shape=record,label="{45\:\ 0x00b2|0x00b2: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x00c1 A[Catch:\{ all \-\> 0x00ef \}]\l}"];
Node_46 [shape=record,label="{46\:\ 0x00b4|0x00b4: CONST_STR  (r2 I:java.lang.String) =  \"Hunter\" A[Catch:\{ all \-\> 0x00ef \}]\l0x00b6: CONST_STR  (r3 I:java.lang.String) =  \"transformed\" A[Catch:\{ all \-\> 0x00ef \}]\l0x00b8: IGET  (r4 I:com.squareup.picasso.Request) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.data com.squareup.picasso.Request A[Catch:\{ all \-\> 0x00ef \}]\l0x00ba: INVOKE  (r4 I:java.lang.String) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.logId():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00ef \}]\l0x00be: INVOKE  \l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l com.squareup.picasso.Utils.log(java.lang.String, java.lang.String, java.lang.String):void type: STATIC A[Catch:\{ all \-\> 0x00ef \}]\l}"];
Node_47 [shape=record,label="{47\:\ 0x00c1|0x00c1: IGET  (r2 I:com.squareup.picasso.Request) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.data com.squareup.picasso.Request A[Catch:\{ all \-\> 0x00ef \}]\l0x00c3: INVOKE  (r2 I:boolean) = (r2 I:com.squareup.picasso.Request) com.squareup.picasso.Request.hasCustomTransformations():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x00ef \}]\l}"];
Node_48 [shape=record,label="{48\:\ 0x00c7|0x00c7: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x00e6 A[Catch:\{ all \-\> 0x00ef \}]\l}"];
Node_49 [shape=record,label="{49\:\ 0x00c9|0x00c9: IGET  (r2 I:com.squareup.picasso.Request) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.data com.squareup.picasso.Request A[Catch:\{ all \-\> 0x00ef \}]\l0x00cb: IGET  (r2 I:java.util.List\<com.squareup.picasso.Transformation\>) = (r2 I:com.squareup.picasso.Request) com.squareup.picasso.Request.transformations java.util.List A[Catch:\{ all \-\> 0x00ef \}]\l0x00cd: INVOKE  (r0 I:android.graphics.Bitmap) = (r2 I:java.util.List), (r0 I:android.graphics.Bitmap) com.squareup.picasso.BitmapHunter.applyCustomTransformations(java.util.List, android.graphics.Bitmap):android.graphics.Bitmap type: STATIC A[Catch:\{ all \-\> 0x00ef \}]\l0x00d1: IGET  (r2 I:com.squareup.picasso.Picasso) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.picasso com.squareup.picasso.Picasso A[Catch:\{ all \-\> 0x00ef \}]\l0x00d3: IGET  (r2 I:boolean) = (r2 I:com.squareup.picasso.Picasso) com.squareup.picasso.Picasso.loggingEnabled boolean A[Catch:\{ all \-\> 0x00ef \}]\l}"];
Node_50 [shape=record,label="{50\:\ 0x00d5|0x00d5: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x00e6 A[Catch:\{ all \-\> 0x00ef \}]\l}"];
Node_51 [shape=record,label="{51\:\ 0x00d7|0x00d7: CONST_STR  (r2 I:java.lang.String) =  \"Hunter\" A[Catch:\{ all \-\> 0x00ef \}]\l0x00d9: CONST_STR  (r3 I:java.lang.String) =  \"transformed\" A[Catch:\{ all \-\> 0x00ef \}]\l0x00db: IGET  (r4 I:com.squareup.picasso.Request) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.data com.squareup.picasso.Request A[Catch:\{ all \-\> 0x00ef \}]\l0x00dd: INVOKE  (r4 I:java.lang.String) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.logId():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00ef \}]\l0x00e1: CONST_STR  (r5 I:java.lang.String) =  \"from custom transformations\" A[Catch:\{ all \-\> 0x00ef \}]\l0x00e3: INVOKE  \l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l com.squareup.picasso.Utils.log(java.lang.String, java.lang.String, java.lang.String, java.lang.String):void type: STATIC A[Catch:\{ all \-\> 0x00ef \}]\l}"];
Node_52 [shape=record,label="{52\:\ 0x00e6|0x00e6: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x00ef \}, TRY_LEAVE]\l}"];
Node_53 [shape=record,label="{53\:\ 0x00e7|0x00e7: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x00f2 \l}"];
Node_54 [shape=record,label="{54\:\ 0x00e9|0x00e9: IGET  (r1 I:com.squareup.picasso.Stats) = (r6 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.stats com.squareup.picasso.Stats \l0x00eb: INVOKE  \l  (r1 I:com.squareup.picasso.Stats)\l  (r0 I:android.graphics.Bitmap)\l com.squareup.picasso.Stats.dispatchBitmapTransformed(android.graphics.Bitmap):void type: VIRTUAL \l}"];
Node_55 [shape=record,label="{55\:\ 0x00ef|ExcHandler: all null\lSplitter:B:39:0x009a\l|0x00ef: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_56 [shape=record,label="{56\:\ 0x00f0|SYNTHETIC\lSplitter:B:56:0x00f0\l}"];
Node_57 [shape=record,label="{57\:\ ?|Splitter:B:56:0x00f0\l|0x00f0: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x00ef \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_58 [shape=record,label="{58\:\ 0x00f1|0x00f1: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_59 [shape=record,label="{59\:\ 0x00f2|0x00f2: RETURN  (r0 I:android.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{android.graphics.Bitmap com.squareup.picasso.BitmapHunter.hunt((r6 'this' I:com.squareup.picasso.BitmapHunter A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_29;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_29;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_29;
Node_23 -> Node_22;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_27;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_59;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_37;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_59;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_55;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_47;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_52;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_59;
Node_54 -> Node_59;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_56 -> Node_55;
Node_57 -> Node_58;
Node_57 -> Node_55;
}

