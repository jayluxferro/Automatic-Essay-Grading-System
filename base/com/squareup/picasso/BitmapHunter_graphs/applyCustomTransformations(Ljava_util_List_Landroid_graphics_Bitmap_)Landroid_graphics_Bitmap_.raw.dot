digraph "CFG forcom.squareup.picasso.BitmapHunter.applyCustomTransformations(Ljava\/util\/List;Landroid\/graphics\/Bitmap;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r6 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:26:0x0090 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r2 I:java.lang.Object) = (r6 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x000b: CHECK_CAST  (r2 I:com.squareup.picasso.Transformation) = (com.squareup.picasso.Transformation) (r2 I:?[OBJECT, ARRAY]) \l0x000d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|SYNTHETIC\lSplitter:B:3:0x000e\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x000e\l|0x000e: INVOKE  (r4 I:android.graphics.Bitmap) = \l  (r2 I:com.squareup.picasso.Transformation)\l  (r7 I:android.graphics.Bitmap)\l com.squareup.picasso.Transformation.transform(android.graphics.Bitmap):android.graphics.Bitmap type: INTERFACE A[Catch:\{ RuntimeException \-\> 0x0084 \}, TRY_ENTER]\l0x0011: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x005a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0016: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0019: CONST_STR  (r0 I:java.lang.String) =  \"Transformation \" \l0x001b: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001e: INVOKE  (r0 I:java.lang.String) = (r2 I:com.squareup.picasso.Transformation) com.squareup.picasso.Transformation.key():java.lang.String type: INTERFACE \l0x0022: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0025: CONST_STR  (r0 I:java.lang.String) =  \" returned null after \" \l0x0027: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002a: INVOKE  (r7 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x002d: CONST_STR  (r0 I:java.lang.String) =  \" previous transformation(s).\l\lTransformation list:\l\" \l0x002f: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0032: INVOKE  (r6 I:java.util.Iterator) = (r6 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0036|0x0036: INVOKE  (r0 I:boolean) = (r6 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x003a|0x003a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x004f \l}"];
Node_9 [shape=record,label="{9\:\ 0x003c|0x003c: INVOKE  (r0 I:java.lang.Object) = (r6 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0040: CHECK_CAST  (r0 I:com.squareup.picasso.Transformation) = (com.squareup.picasso.Transformation) (r0 I:?[OBJECT, ARRAY]) \l0x0042: INVOKE  (r0 I:java.lang.String) = (r0 I:com.squareup.picasso.Transformation) com.squareup.picasso.Transformation.key():java.lang.String type: INTERFACE \l0x0046: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0049: CONST  (r0 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x004b: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x004f|0x004f: SGET  (r6 I:android.os.Handler) =  com.squareup.picasso.Picasso.HANDLER android.os.Handler \l0x0051: NEW_INSTANCE  (r0 I:com.squareup.picasso.BitmapHunter$4) =  com.squareup.picasso.BitmapHunter$4 \l0x0053: INVOKE  \l  (r0 I:com.squareup.picasso.BitmapHunter$4)\l  (r7 I:java.lang.StringBuilder)\l com.squareup.picasso.BitmapHunter.4.\<init\>(java.lang.StringBuilder):void type: DIRECT \l0x0056: INVOKE  (r6 I:android.os.Handler), (r0 I:java.lang.Runnable) android.os.Handler.post(java.lang.Runnable):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0059|0x0059: RETURN  (r3 I:android.graphics.Bitmap) \l}"];
Node_12 [shape=record,label="{12\:\ 0x005a|0x005a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x006d \l}"];
Node_13 [shape=record,label="{13\:\ 0x005c|0x005c: INVOKE  (r5 I:boolean) = (r7 I:android.graphics.Bitmap) android.graphics.Bitmap.isRecycled():boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0060|0x0060: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x006d \l}"];
Node_15 [shape=record,label="{15\:\ 0x0062|0x0062: SGET  (r6 I:android.os.Handler) =  com.squareup.picasso.Picasso.HANDLER android.os.Handler \l0x0064: NEW_INSTANCE  (r7 I:com.squareup.picasso.BitmapHunter$5) =  com.squareup.picasso.BitmapHunter$5 \l0x0066: INVOKE  \l  (r7 I:com.squareup.picasso.BitmapHunter$5)\l  (r2 I:com.squareup.picasso.Transformation)\l com.squareup.picasso.BitmapHunter.5.\<init\>(com.squareup.picasso.Transformation):void type: DIRECT \l0x0069: INVOKE  (r6 I:android.os.Handler), (r7 I:java.lang.Runnable) android.os.Handler.post(java.lang.Runnable):boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x006c|0x006c: RETURN  (r3 I:android.graphics.Bitmap) \l}"];
Node_17 [shape=record,label="{17\:\ 0x006d|0x006d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0080 \l}"];
Node_18 [shape=record,label="{18\:\ 0x006f|0x006f: INVOKE  (r7 I:boolean) = (r7 I:android.graphics.Bitmap) android.graphics.Bitmap.isRecycled():boolean type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0073|0x0073: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0080 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0075|0x0075: SGET  (r6 I:android.os.Handler) =  com.squareup.picasso.Picasso.HANDLER android.os.Handler \l0x0077: NEW_INSTANCE  (r7 I:com.squareup.picasso.BitmapHunter$6) =  com.squareup.picasso.BitmapHunter$6 \l0x0079: INVOKE  \l  (r7 I:com.squareup.picasso.BitmapHunter$6)\l  (r2 I:com.squareup.picasso.Transformation)\l com.squareup.picasso.BitmapHunter.6.\<init\>(com.squareup.picasso.Transformation):void type: DIRECT \l0x007c: INVOKE  (r6 I:android.os.Handler), (r7 I:java.lang.Runnable) android.os.Handler.post(java.lang.Runnable):boolean type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x007f|0x007f: RETURN  (r3 I:android.graphics.Bitmap) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0080|0x0080: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x0082: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0084|ExcHandler: RuntimeException null\lSplitter:B:3:0x000e\l|0x0084: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_24 [shape=record,label="{24\:\ 0x0085|0x0085: SGET  (r7 I:android.os.Handler) =  com.squareup.picasso.Picasso.HANDLER android.os.Handler \l0x0087: NEW_INSTANCE  (r0 I:com.squareup.picasso.BitmapHunter$3) =  com.squareup.picasso.BitmapHunter$3 \l0x0089: INVOKE  \l  (r0 I:com.squareup.picasso.BitmapHunter$3)\l  (r2 I:com.squareup.picasso.Transformation)\l  (r6 I:java.lang.RuntimeException)\l com.squareup.picasso.BitmapHunter.3.\<init\>(com.squareup.picasso.Transformation, java.lang.RuntimeException):void type: DIRECT \l0x008c: INVOKE  (r7 I:android.os.Handler), (r0 I:java.lang.Runnable) android.os.Handler.post(java.lang.Runnable):boolean type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x008f|0x008f: RETURN  (r3 I:android.graphics.Bitmap) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0090|0x0090: RETURN  (r7 I:android.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{static android.graphics.Bitmap com.squareup.picasso.BitmapHunter.applyCustomTransformations((r6 I:java.util.List\<com.squareup.picasso.Transformation\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lcom\/squareup\/picasso\/Transformation;, \>;, Landroid\/graphics\/Bitmap;, ), Landroid\/graphics\/Bitmap;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_26;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_23;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_7;
Node_10 -> Node_11;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_22 -> Node_1;
Node_23 -> Node_24;
Node_24 -> Node_25;
}

