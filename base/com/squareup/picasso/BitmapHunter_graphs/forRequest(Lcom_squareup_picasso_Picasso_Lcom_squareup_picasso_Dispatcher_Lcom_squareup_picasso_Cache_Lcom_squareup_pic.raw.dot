digraph "CFG forcom.squareup.picasso.BitmapHunter.forRequest(Lcom\/squareup\/picasso\/Picasso;Lcom\/squareup\/picasso\/Dispatcher;Lcom\/squareup\/picasso\/Cache;Lcom\/squareup\/picasso\/Stats;Lcom\/squareup\/picasso\/Action;)Lcom\/squareup\/picasso\/BitmapHunter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.squareup.picasso.Request) = (r16 I:com.squareup.picasso.Action) com.squareup.picasso.Action.getRequest():com.squareup.picasso.Request type: VIRTUAL \l0x0004: INVOKE  (r1 I:java.util.List) = (r12 I:com.squareup.picasso.Picasso) com.squareup.picasso.Picasso.getRequestHandlers():java.util.List type: VIRTUAL \l0x0008: INVOKE  (r2 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x000c: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r3 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:7:0x002c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: INVOKE  (r4 I:java.lang.Object) = (r1 I:java.util.List), (r3 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0013: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0014: CHECK_CAST  (r11 I:com.squareup.picasso.RequestHandler) = (com.squareup.picasso.RequestHandler) (r11 I:?[OBJECT, ARRAY]) \l0x0016: INVOKE  (r4 I:boolean) = \l  (r11 I:com.squareup.picasso.RequestHandler)\l  (r0 I:com.squareup.picasso.Request)\l com.squareup.picasso.RequestHandler.canHandleRequest(com.squareup.picasso.Request):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0029 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: NEW_INSTANCE  (r0 I:com.squareup.picasso.BitmapHunter) =  com.squareup.picasso.BitmapHunter \l0x001e: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x001f: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0020: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0021: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0022: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0023: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0025: INVOKE  \l  (r5 I:com.squareup.picasso.BitmapHunter)\l  (r6 I:com.squareup.picasso.Picasso)\l  (r7 I:com.squareup.picasso.Dispatcher)\l  (r8 I:com.squareup.picasso.Cache)\l  (r9 I:com.squareup.picasso.Stats)\l  (r10 I:com.squareup.picasso.Action)\l  (r11 I:com.squareup.picasso.RequestHandler)\l com.squareup.picasso.BitmapHunter.\<init\>(com.squareup.picasso.Picasso, com.squareup.picasso.Dispatcher, com.squareup.picasso.Cache, com.squareup.picasso.Stats, com.squareup.picasso.Action, com.squareup.picasso.RequestHandler):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0028|0x0028: RETURN  (r0 I:com.squareup.picasso.BitmapHunter) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|0x0029: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: NEW_INSTANCE  (r0 I:com.squareup.picasso.BitmapHunter) =  com.squareup.picasso.BitmapHunter \l0x002e: SGET  (r10 I:com.squareup.picasso.RequestHandler) =  com.squareup.picasso.BitmapHunter.ERRORING_HANDLER com.squareup.picasso.RequestHandler \l0x0030: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0031: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0032: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0033: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0034: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0035: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0037: INVOKE  \l  (r4 I:com.squareup.picasso.BitmapHunter)\l  (r5 I:com.squareup.picasso.Picasso)\l  (r6 I:com.squareup.picasso.Dispatcher)\l  (r7 I:com.squareup.picasso.Cache)\l  (r8 I:com.squareup.picasso.Stats)\l  (r9 I:com.squareup.picasso.Action)\l  (r10 I:com.squareup.picasso.RequestHandler)\l com.squareup.picasso.BitmapHunter.\<init\>(com.squareup.picasso.Picasso, com.squareup.picasso.Dispatcher, com.squareup.picasso.Cache, com.squareup.picasso.Stats, com.squareup.picasso.Action, com.squareup.picasso.RequestHandler):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x003a|0x003a: RETURN  (r0 I:com.squareup.picasso.BitmapHunter) \l}"];
MethodNode[shape=record,label="{static com.squareup.picasso.BitmapHunter com.squareup.picasso.BitmapHunter.forRequest((r12 I:com.squareup.picasso.Picasso A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:com.squareup.picasso.Dispatcher A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:com.squareup.picasso.Cache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:com.squareup.picasso.Stats A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:com.squareup.picasso.Action A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_1;
Node_7 -> Node_8;
}

