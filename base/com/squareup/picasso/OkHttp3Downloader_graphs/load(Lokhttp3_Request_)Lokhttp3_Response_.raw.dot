digraph "CFG forcom.squareup.picasso.OkHttp3Downloader.load(Lokhttp3\/Request;)Lokhttp3\/Response;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okhttp3.Call$Factory) = (r1 I:com.squareup.picasso.OkHttp3Downloader) com.squareup.picasso.OkHttp3Downloader.client okhttp3.Call$Factory \l0x0002: INVOKE  (r2 I:okhttp3.Call) = (r0 I:okhttp3.Call$Factory), (r2 I:okhttp3.Request) okhttp3.Call.Factory.newCall(okhttp3.Request):okhttp3.Call type: INTERFACE \l0x0006: INVOKE  (r2 I:okhttp3.Response) = (r2 I:okhttp3.Call) okhttp3.Call.execute():okhttp3.Response type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: RETURN  (r2 I:okhttp3.Response) \l}"];
MethodNode[shape=record,label="{public okhttp3.Response com.squareup.picasso.OkHttp3Downloader.load((r1 'this' I:com.squareup.picasso.OkHttp3Downloader A[IMMUTABLE_TYPE, THIS]), (r2 I:okhttp3.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

