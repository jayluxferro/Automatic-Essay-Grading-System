digraph "CFG forcom.squareup.picasso.ContentStreamRequestHandler.load(Lcom\/squareup\/picasso\/Request;I)Lcom\/squareup\/picasso\/RequestHandler$Result;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.io.InputStream) = \l  (r1 I:com.squareup.picasso.ContentStreamRequestHandler)\l  (r2 I:com.squareup.picasso.Request)\l com.squareup.picasso.ContentStreamRequestHandler.getInputStream(com.squareup.picasso.Request):java.io.InputStream type: VIRTUAL \l0x0004: INVOKE  (r2 I:okio.Source) = (r2 I:java.io.InputStream) okio.Okio.source(java.io.InputStream):okio.Source type: STATIC \l0x0008: NEW_INSTANCE  (r3 I:com.squareup.picasso.RequestHandler$Result) =  com.squareup.picasso.RequestHandler$Result \l0x000a: SGET  (r0 I:com.squareup.picasso.Picasso$LoadedFrom) =  com.squareup.picasso.Picasso.LoadedFrom.DISK com.squareup.picasso.Picasso$LoadedFrom \l0x000c: INVOKE  \l  (r3 I:com.squareup.picasso.RequestHandler$Result)\l  (r2 I:okio.Source)\l  (r0 I:com.squareup.picasso.Picasso$LoadedFrom)\l com.squareup.picasso.RequestHandler.Result.\<init\>(okio.Source, com.squareup.picasso.Picasso$LoadedFrom):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN  (r3 I:com.squareup.picasso.RequestHandler$Result) \l}"];
MethodNode[shape=record,label="{public com.squareup.picasso.RequestHandler$Result com.squareup.picasso.ContentStreamRequestHandler.load((r1 'this' I:com.squareup.picasso.ContentStreamRequestHandler A[IMMUTABLE_TYPE, THIS]), (r2 I:com.squareup.picasso.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

