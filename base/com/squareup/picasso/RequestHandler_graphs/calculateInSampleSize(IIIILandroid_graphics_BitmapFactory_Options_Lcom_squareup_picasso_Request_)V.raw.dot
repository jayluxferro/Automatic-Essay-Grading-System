digraph "CFG forcom.squareup.picasso.RequestHandler.calculateInSampleSize(IIIILandroid\/graphics\/BitmapFactory$Options;Lcom\/squareup\/picasso\/Request;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, byte, short, char]) \> (r3 I:?[int, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r4 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: CAST  (r3 I:float) = (float) (r4 I:int) \l0x000a: CAST  (r2 I:float) = (float) (r2 I:int) \l0x000b: ARITH  (r3 I:float) = (r3 I:float) \/ (r2 I:float) \l0x000c: CAST  (r2 I:double) = (double) (r3 I:float) \l0x000d: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.floor(double):double type: STATIC \l0x0011: CAST  (r2 I:int) = (int) (r2 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: CAST  (r2 I:float) = (float) (r5 I:int) \l0x0016: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0017: ARITH  (r2 I:float) = (r2 I:float) \/ (r3 I:float) \l0x0018: CAST  (r2 I:double) = (double) (r2 I:float) \l0x0019: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.floor(double):double type: STATIC \l0x001d: CAST  (r2 I:int) = (int) (r2 I:double) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: CAST  (r5 I:float) = (float) (r5 I:int) \l0x0020: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0021: ARITH  (r5 I:float) = (r5 I:float) \/ (r3 I:float) \l0x0022: CAST  (r0 I:double) = (double) (r5 I:float) \l0x0023: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.floor(double):double type: STATIC \l0x0027: CAST  (r3 I:int) = (int) (r0 I:double) \l0x0028: CAST  (r4 I:float) = (float) (r4 I:int) \l0x0029: CAST  (r2 I:float) = (float) (r2 I:int) \l0x002a: ARITH  (r4 I:float) = (r4 I:float) \/ (r2 I:float) \l0x002b: CAST  (r4 I:double) = (double) (r4 I:float) \l0x002c: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.floor(double):double type: STATIC \l0x0030: CAST  (r2 I:int) = (int) (r4 I:double) \l0x0031: IGET  (r4 I:boolean) = (r7 I:com.squareup.picasso.Request) com.squareup.picasso.Request.centerInside boolean \l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|0x0033: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x003a \l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|0x0035: INVOKE  (r2 I:int) = (r3 I:int), (r2 I:int) java.lang.Math.max(int, int):int type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|0x003a: INVOKE  (r2 I:int) = (r3 I:int), (r2 I:int) java.lang.Math.min(int, int):int type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x003e|0x003e: IPUT  (r2 I:int), (r6 I:android.graphics.BitmapFactory$Options) android.graphics.BitmapFactory.Options.inSampleSize int \l0x0040: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0041: IPUT  \l  (r2 I:boolean)\l  (r6 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.Options.inJustDecodeBounds boolean \l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|0x0043: RETURN   \l}"];
MethodNode[shape=record,label="{static void com.squareup.picasso.RequestHandler.calculateInSampleSize((r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.graphics.BitmapFactory$Options A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.squareup.picasso.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_1 -> Node_3;
Node_1 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_12;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

