digraph "CFG forcom.squareup.picasso.RequestHandler.createBitmapOptions(Lcom\/squareup\/picasso\/Request;)Landroid\/graphics\/BitmapFactory$Options;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|boolean r0 = r4.hasSize()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r4.config == null) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|r1 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|r1 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v2 boolean), (r1v3 boolean) binds: [B:3:0x000a, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|r2 = null\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|if (r0 != false) goto L_0x0014\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|if (r1 != false) goto L_0x0014\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010}"];
Node_8 [shape=record,label="{8\:\ 0x0012|if (r4.purgeable == false) goto L_0x0029\l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|android.graphics.BitmapFactory$Options r2 = new android.graphics.BitmapFactory.Options()\lr2.inJustDecodeBounds = r0\lr2.inInputShareable = r4.purgeable\lr2.inPurgeable = r4.purgeable\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|if (r1 == false) goto L_0x0029\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|r2.inPreferredConfig = r4.config\l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|RETURN\lPHI: r2 \l  PHI: (r2v1 android.graphics.BitmapFactory$Options) = (r2v2 android.graphics.BitmapFactory$Options), (r2v2 android.graphics.BitmapFactory$Options), (r2v0 android.graphics.BitmapFactory$Options) binds: [B:10:0x0023, B:11:0x0025, B:8:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|return r2\l}"];
MethodNode[shape=record,label="{static android.graphics.BitmapFactory$Options com.squareup.picasso.RequestHandler.createBitmapOptions((r4v0 com.squareup.picasso.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
}

