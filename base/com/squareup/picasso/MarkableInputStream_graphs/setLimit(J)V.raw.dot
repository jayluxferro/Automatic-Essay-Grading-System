digraph "CFG forcom.squareup.picasso.MarkableInputStream.setLimit(J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:long) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.reset long A[Catch:\{ IOException \-\> 0x003a \}, TRY_ENTER]\l0x0002: IGET  (r2 I:long) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.offset long A[Catch:\{ IOException \-\> 0x003a \}]\l0x0004: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) A[Catch:\{ IOException \-\> 0x003a \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:6:0x0028 A[Catch:\{ IOException \-\> 0x003a \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:long) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.offset long A[Catch:\{ IOException \-\> 0x003a \}]\l0x000a: IGET  (r2 I:long) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.limit long A[Catch:\{ IOException \-\> 0x003a \}]\l0x000c: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) A[Catch:\{ IOException \-\> 0x003a \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:6:0x0028 A[Catch:\{ IOException \-\> 0x003a \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IGET  (r0 I:java.io.InputStream) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.in java.io.InputStream A[Catch:\{ IOException \-\> 0x003a \}]\l0x0012: INVOKE  (r0 I:java.io.InputStream) java.io.InputStream.reset():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x003a \}]\l0x0015: IGET  (r0 I:java.io.InputStream) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.in java.io.InputStream A[Catch:\{ IOException \-\> 0x003a \}]\l0x0017: IGET  (r1 I:long) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.reset long A[Catch:\{ IOException \-\> 0x003a \}]\l0x0019: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x003a \}]\l0x001a: ARITH  (r1 I:long) = (r5 I:long) \- (r1 I:long) A[Catch:\{ IOException \-\> 0x003a \}]\l0x001c: CAST  (r1 I:int) = (int) (r1 I:long) A[Catch:\{ IOException \-\> 0x003a \}]\l0x001d: INVOKE  (r0 I:java.io.InputStream), (r1 I:int) java.io.InputStream.mark(int):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x003a \}]\l0x0020: IGET  (r0 I:long) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.reset long A[Catch:\{ IOException \-\> 0x003a \}]\l0x0022: IGET  (r2 I:long) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.offset long A[Catch:\{ IOException \-\> 0x003a \}]\l0x0024: INVOKE  \l  (r4 I:com.squareup.picasso.MarkableInputStream)\l  (r0 I:long)\l  (r2 I:long)\l com.squareup.picasso.MarkableInputStream.skip(long, long):void type: DIRECT A[Catch:\{ IOException \-\> 0x003a \}]\l0x0027: GOTO  \-\> 0x0037 A[Catch:\{ IOException \-\> 0x003a \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: IGET  (r0 I:long) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.offset long A[Catch:\{ IOException \-\> 0x003a \}]\l0x002a: IPUT  \l  (r0 I:long)\l  (r4 I:com.squareup.picasso.MarkableInputStream)\l com.squareup.picasso.MarkableInputStream.reset long A[Catch:\{ IOException \-\> 0x003a \}]\l0x002c: IGET  (r0 I:java.io.InputStream) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.in java.io.InputStream A[Catch:\{ IOException \-\> 0x003a \}]\l0x002e: IGET  (r1 I:long) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.offset long A[Catch:\{ IOException \-\> 0x003a \}]\l0x0030: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x003a \}]\l0x0031: ARITH  (r1 I:long) = (r5 I:long) \- (r1 I:long) A[Catch:\{ IOException \-\> 0x003a \}]\l0x0033: CAST  (r1 I:int) = (int) (r1 I:long) A[Catch:\{ IOException \-\> 0x003a \}]\l0x0034: INVOKE  (r0 I:java.io.InputStream), (r1 I:int) java.io.InputStream.mark(int):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x003a \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|0x0037: IPUT  \l  (r5 I:long)\l  (r4 I:com.squareup.picasso.MarkableInputStream)\l com.squareup.picasso.MarkableInputStream.limit long A[Catch:\{ IOException \-\> 0x003a \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|ExcHandler: IOException null\lSplitter:B:0:0x0000\l|0x003a: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|0x003b: NEW_INSTANCE  (r6 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x003d: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003f: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0042: CONST_STR  (r1 I:java.lang.String) =  \"Unable to mark: \" \l0x0044: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0047: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x004a: INVOKE  (r5 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004e: INVOKE  \l  (r6 I:java.lang.IllegalStateException)\l  (r5 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0051|0x0051: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void com.squareup.picasso.MarkableInputStream.setLimit((r4 'this' I:com.squareup.picasso.MarkableInputStream A[IMMUTABLE_TYPE, THIS]), (r5 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_9;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

