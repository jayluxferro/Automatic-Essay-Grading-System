digraph "CFG forcom.squareup.picasso.MarkableInputStream.setLimit(J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ IOException \-\> 0x003a \}\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|Catch:\{ IOException \-\> 0x003a \}\l|if ((r4.reset \> r4.offset ? 1 : (r4.reset == r4.offset ? 0 : \-1)) \>= 0) goto L_0x0028     \/\/ Catch:\{ IOException \-\> 0x003a \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|Catch:\{ IOException \-\> 0x003a \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|Catch:\{ IOException \-\> 0x003a \}\l|if ((r4.offset \> r4.limit ? 1 : (r4.offset == r4.limit ? 0 : \-1)) \> 0) goto L_0x0028     \/\/ Catch:\{ IOException \-\> 0x003a \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|Catch:\{ IOException \-\> 0x003a \}\l|r4.f218in.reset()     \/\/ Catch:\{ IOException \-\> 0x003a \}\lr4.f218in.mark((int) (r5 \- r4.reset))     \/\/ Catch:\{ IOException \-\> 0x003a \}\lskip(r4.reset, r4.offset)     \/\/ Catch:\{ IOException \-\> 0x003a \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|Catch:\{ IOException \-\> 0x003a \}\l|r4.reset = r4.offset     \/\/ Catch:\{ IOException \-\> 0x003a \}\lr4.f218in.mark((int) (r5 \- r4.offset))     \/\/ Catch:\{ IOException \-\> 0x003a \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|Catch:\{ IOException \-\> 0x003a \}\l|r4.limit = r5     \/\/ Catch:\{ IOException \-\> 0x003a \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|ExcHandler: IOException (r5v1 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.io.IOException r5 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Unable to mark: \")\lr0.append(r5)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0051|throw new java.lang.IllegalStateException(r0.toString())\l}"];
MethodNode[shape=record,label="{private void com.squareup.picasso.MarkableInputStream.setLimit((r4v0 'this' com.squareup.picasso.MarkableInputStream A[IMMUTABLE_TYPE, THIS]), (r5v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_9;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

