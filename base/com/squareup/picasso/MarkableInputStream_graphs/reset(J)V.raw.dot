digraph "CFG forcom.squareup.picasso.MarkableInputStream.reset(J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:long) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.offset long \l0x0002: IGET  (r2 I:long) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.limit long \l0x0004: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:6:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:long) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.reset long \l0x000a: CMP_L  (r0 I:int) = (r5 I:long), (r0 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:6:0x001b \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IGET  (r0 I:java.io.InputStream) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.in java.io.InputStream \l0x0010: INVOKE  (r0 I:java.io.InputStream) java.io.InputStream.reset():void type: VIRTUAL \l0x0013: IGET  (r0 I:long) = (r4 I:com.squareup.picasso.MarkableInputStream) com.squareup.picasso.MarkableInputStream.reset long \l0x0015: INVOKE  \l  (r4 I:com.squareup.picasso.MarkableInputStream)\l  (r0 I:long)\l  (r5 I:long)\l com.squareup.picasso.MarkableInputStream.skip(long, long):void type: DIRECT \l0x0018: IPUT  \l  (r5 I:long)\l  (r4 I:com.squareup.picasso.MarkableInputStream)\l com.squareup.picasso.MarkableInputStream.offset long \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: NEW_INSTANCE  (r5 I:java.io.IOException) =  java.io.IOException \l0x001d: CONST_STR  (r6 I:java.lang.String) =  \"Cannot reset\" \l0x001f: INVOKE  (r5 I:java.io.IOException), (r6 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.squareup.picasso.MarkableInputStream.reset((r4 'this' I:com.squareup.picasso.MarkableInputStream A[IMMUTABLE_TYPE, THIS]), (r5 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

