digraph "CFG forcom.squareup.picasso.MarkableInputStream.read([B)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4.allowExpire != false) goto L_0x001b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x000d|if (((r4.offset + ((long) r5.length)) \> r4.limit ? 1 : ((r4.offset + ((long) r5.length)) == r4.limit ? 0 : \-1)) \<= 0) goto L_0x001b\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|setLimit((r4.offset + ((long) r5.length)) + ((long) r4.limitIncrement))\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|int r5 = r4.f218in.read(r5)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|if (r5 == \-1) goto L_0x002a\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|r4.offset = r4.offset + ((long) r5)\l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|RETURN\l|return r5\l}"];
MethodNode[shape=record,label="{public int com.squareup.picasso.MarkableInputStream.read((r4v0 'this' com.squareup.picasso.MarkableInputStream A[IMMUTABLE_TYPE, THIS]), (r5v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
}

