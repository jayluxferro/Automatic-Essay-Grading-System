digraph "CFG forcom.squareup.picasso.PicassoExecutorService.PicassoFutureTask.\<init\>(Lcom\/squareup\/picasso\/BitmapHunter;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  \l  (r1 I:java.util.concurrent.FutureTask)\l  (r2 I:java.lang.Runnable)\l  (r0 I:java.lang.Object)\l java.util.concurrent.FutureTask.\<init\>(java.lang.Runnable, java.lang.Object):void type: DIRECT \l0x0004: IPUT  \l  (r2 I:com.squareup.picasso.BitmapHunter)\l  (r1 I:com.squareup.picasso.PicassoExecutorService$PicassoFutureTask)\l com.squareup.picasso.PicassoExecutorService.PicassoFutureTask.hunter com.squareup.picasso.BitmapHunter \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: RETURN   \l}"];
MethodNode[shape=record,label="{void com.squareup.picasso.PicassoExecutorService.PicassoFutureTask.\<init\>((r1 'this' I:com.squareup.picasso.PicassoExecutorService$PicassoFutureTask A[IMMUTABLE_TYPE, THIS]), (r2 I:com.squareup.picasso.BitmapHunter A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

