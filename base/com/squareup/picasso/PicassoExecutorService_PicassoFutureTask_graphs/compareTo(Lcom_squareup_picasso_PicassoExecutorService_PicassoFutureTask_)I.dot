digraph "CFG forcom.squareup.picasso.PicassoExecutorService.PicassoFutureTask.compareTo(Lcom\/squareup\/picasso\/PicassoExecutorService$PicassoFutureTask;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.squareup.picasso.Picasso$Priority r0 = r2.hunter.getPriority()\lcom.squareup.picasso.Picasso$Priority r1 = r3.hunter.getPriority()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if (r0 != r1) goto L_0x0018\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e}"];
Node_3 [shape=record,label="{3\:\ 0x0018}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r1.ordinal() \- r0.ordinal()\l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\l|return r2.hunter.sequence \- r3.hunter.sequence\l}"];
MethodNode[shape=record,label="{public int com.squareup.picasso.PicassoExecutorService.PicassoFutureTask.compareTo((r2v0 'this' com.squareup.picasso.PicassoExecutorService$PicassoFutureTask A[IMMUTABLE_TYPE, THIS]), (r3v0 com.squareup.picasso.PicassoExecutorService$PicassoFutureTask A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
}

