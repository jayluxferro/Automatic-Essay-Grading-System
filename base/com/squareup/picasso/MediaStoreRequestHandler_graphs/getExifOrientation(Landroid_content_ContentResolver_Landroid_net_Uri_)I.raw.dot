digraph "CFG forcom.squareup.picasso.MediaStoreRequestHandler.getExifOrientation(Landroid\/content\/ContentResolver;Landroid\/net\/Uri;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0002\l|0x0002: SGET  (r4 I:java.lang.String[]) =  com.squareup.picasso.MediaStoreRequestHandler.CONTENT_ORIENTATION java.lang.String[] A[Catch:\{ RuntimeException \-\> 0x0032, all \-\> 0x002a \}, TRY_ENTER]\l0x0004: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ RuntimeException \-\> 0x0032, all \-\> 0x002a \}]\l0x0005: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ RuntimeException \-\> 0x0032, all \-\> 0x002a \}]\l0x0006: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ RuntimeException \-\> 0x0032, all \-\> 0x002a \}]\l0x0007: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) A[Catch:\{ RuntimeException \-\> 0x0032, all \-\> 0x002a \}]\l0x0008: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) A[Catch:\{ RuntimeException \-\> 0x0032, all \-\> 0x002a \}]\l0x0009: INVOKE  (r8 I:android.database.Cursor) = \l  (r2 I:android.content.ContentResolver)\l  (r3 I:android.net.Uri)\l  (r4 I:java.lang.String[])\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String[])\l  (r7 I:java.lang.String)\l android.content.ContentResolver.query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String):android.database.Cursor type: VIRTUAL A[Catch:\{ RuntimeException \-\> 0x0032, all \-\> 0x002a \}]\l0x000c: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0024 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|SYNTHETIC\lSplitter:B:4:0x000f\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x000f\l|0x000f: INVOKE  (r9 I:boolean) = (r8 I:android.database.Cursor) android.database.Cursor.moveToFirst():boolean type: INTERFACE A[Catch:\{ RuntimeException \-\> 0x0022, all \-\> 0x0020 \}, TRY_ENTER]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0016 A[Catch:\{ RuntimeException \-\> 0x0022, all \-\> 0x0020 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: GOTO  \-\> 0x0024 A[Catch:\{ RuntimeException \-\> 0x0022, all \-\> 0x0020 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: INVOKE  (r9 I:int) = (r8 I:android.database.Cursor), (r0 I:int) android.database.Cursor.getInt(int):int type: INTERFACE A[Catch:\{ RuntimeException \-\> 0x0022, all \-\> 0x0020 \}]\l0x0019: NOP   A[TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001f \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: INVOKE  (r8 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: RETURN  (r9 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|ExcHandler: all null\lSplitter:B:4:0x000f\l|0x0020: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lExcHandler: RuntimeException null\lSplitter:B:4:0x000f\l}"];
Node_16 [shape=record,label="{16\:\ 0x0024|0x0024: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0029 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0026|0x0026: INVOKE  (r8 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x0029|0x0029: RETURN  (r0 I:int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x002a|ExcHandler: all null\lSplitter:B:1:0x0002\l|0x002a: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_20 [shape=record,label="{20\:\ 0x002b|0x002b: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x002c|0x002c: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0031 \l}"];
Node_22 [shape=record,label="{22\:\ 0x002e|0x002e: INVOKE  (r8 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_23 [shape=record,label="{23\:\ 0x0031|0x0031: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0032|0x0032: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lExcHandler: RuntimeException null\lSplitter:B:1:0x0002\l}"];
Node_26 [shape=record,label="{26\:\ 0x0033|0x0033: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0038 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0035|0x0035: INVOKE  (r8 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_28 [shape=record,label="{28\:\ 0x0038|0x0038: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{static int com.squareup.picasso.MediaStoreRequestHandler.getExifOrientation((r8 I:android.content.ContentResolver A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.net.Uri A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_25;
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_16;
Node_4 -> Node_5;
Node_4 -> Node_15;
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_16;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_12 -> Node_21;
Node_15 -> Node_26;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_24 -> Node_26;
Node_25 -> Node_24;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
}

