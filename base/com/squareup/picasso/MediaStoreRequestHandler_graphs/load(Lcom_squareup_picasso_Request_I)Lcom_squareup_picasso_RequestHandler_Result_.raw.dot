digraph "CFG forcom.squareup.picasso.MediaStoreRequestHandler.load(Lcom\/squareup\/picasso\/Request;I)Lcom\/squareup\/picasso\/RequestHandler$Result;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0004: IGET  (r0 I:android.content.Context) = (r7 I:com.squareup.picasso.MediaStoreRequestHandler) com.squareup.picasso.MediaStoreRequestHandler.context android.content.Context \l0x0006: INVOKE  (r8 I:android.content.ContentResolver) = (r0 I:android.content.Context) android.content.Context.getContentResolver():android.content.ContentResolver type: VIRTUAL \l0x000a: IGET  (r0 I:android.net.Uri) = (r6 I:com.squareup.picasso.Request) com.squareup.picasso.Request.uri android.net.Uri \l0x000c: INVOKE  (r9 I:int) = \l  (r8 I:android.content.ContentResolver)\l  (r0 I:android.net.Uri)\l com.squareup.picasso.MediaStoreRequestHandler.getExifOrientation(android.content.ContentResolver, android.net.Uri):int type: STATIC \l0x0010: IGET  (r0 I:android.net.Uri) = (r6 I:com.squareup.picasso.Request) com.squareup.picasso.Request.uri android.net.Uri \l0x0012: INVOKE  (r0 I:java.lang.String) = \l  (r8 I:android.content.ContentResolver)\l  (r0 I:android.net.Uri)\l android.content.ContentResolver.getType(android.net.Uri):java.lang.String type: VIRTUAL \l0x0016: CONST  (r10 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0023 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|0x0019: CONST_STR  (r1 I:java.lang.String) =  \"video\/\" \l0x001b: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0023 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0024: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: INVOKE  (r0 I:boolean) = (r17 I:com.squareup.picasso.Request) com.squareup.picasso.Request.hasSize():boolean type: VIRTUAL \l0x0029: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0084 \l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|0x002c: IGET  (r0 I:int) = (r6 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetWidth int \l0x002e: IGET  (r1 I:int) = (r6 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetHeight int \l0x0030: INVOKE  (r13 I:com.squareup.picasso.MediaStoreRequestHandler$PicassoKind) = (r0 I:int), (r1 I:int) com.squareup.picasso.MediaStoreRequestHandler.getPicassoKind(int, int):com.squareup.picasso.MediaStoreRequestHandler$PicassoKind type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x004a \l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: SGET  (r0 I:com.squareup.picasso.MediaStoreRequestHandler$PicassoKind) =  com.squareup.picasso.MediaStoreRequestHandler.PicassoKind.FULL com.squareup.picasso.MediaStoreRequestHandler$PicassoKind \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x004a \l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|0x003a: INVOKE  (r0 I:java.io.InputStream) = \l  (r16 I:com.squareup.picasso.MediaStoreRequestHandler)\l  (r17 I:com.squareup.picasso.Request)\l com.squareup.picasso.MediaStoreRequestHandler.getInputStream(com.squareup.picasso.Request):java.io.InputStream type: VIRTUAL \l0x003e: INVOKE  (r0 I:okio.Source) = (r0 I:java.io.InputStream) okio.Okio.source(java.io.InputStream):okio.Source type: STATIC \l0x0042: NEW_INSTANCE  (r1 I:com.squareup.picasso.RequestHandler$Result) =  com.squareup.picasso.RequestHandler$Result \l0x0044: SGET  (r2 I:com.squareup.picasso.Picasso$LoadedFrom) =  com.squareup.picasso.Picasso.LoadedFrom.DISK com.squareup.picasso.Picasso$LoadedFrom \l0x0046: INVOKE  \l  (r1 I:com.squareup.picasso.RequestHandler$Result)\l  (r12 I:android.graphics.Bitmap)\l  (r0 I:okio.Source)\l  (r2 I:com.squareup.picasso.Picasso$LoadedFrom)\l  (r9 I:int)\l com.squareup.picasso.RequestHandler.Result.\<init\>(android.graphics.Bitmap, okio.Source, com.squareup.picasso.Picasso$LoadedFrom, int):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0049|0x0049: RETURN  (r1 I:com.squareup.picasso.RequestHandler$Result) \l}"];
Node_14 [shape=record,label="{14\:\ 0x004a|0x004a: IGET  (r0 I:android.net.Uri) = (r6 I:com.squareup.picasso.Request) com.squareup.picasso.Request.uri android.net.Uri \l0x004c: INVOKE  (r14 I:long) = (r0 I:android.net.Uri) android.content.ContentUris.parseId(android.net.Uri):long type: STATIC \l0x0050: INVOKE  (r5 I:android.graphics.BitmapFactory$Options) = (r17 I:com.squareup.picasso.Request) com.squareup.picasso.MediaStoreRequestHandler.createBitmapOptions(com.squareup.picasso.Request):android.graphics.BitmapFactory$Options type: STATIC \l0x0054: IPUT  \l  (r10 I:boolean)\l  (r5 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.Options.inJustDecodeBounds boolean \l0x0056: IGET  (r0 I:int) = (r6 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetWidth int \l0x0058: IGET  (r1 I:int) = (r6 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetHeight int \l0x005a: IGET  (r2 I:int) = \l  (r13 I:com.squareup.picasso.MediaStoreRequestHandler$PicassoKind)\l com.squareup.picasso.MediaStoreRequestHandler.PicassoKind.width int \l0x005c: IGET  (r3 I:int) = \l  (r13 I:com.squareup.picasso.MediaStoreRequestHandler$PicassoKind)\l com.squareup.picasso.MediaStoreRequestHandler.PicassoKind.height int \l0x005e: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x005f: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x0060: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0062: INVOKE  \l  (r0 I:int)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:android.graphics.BitmapFactory$Options)\l  (r5 I:com.squareup.picasso.Request)\l com.squareup.picasso.MediaStoreRequestHandler.calculateInSampleSize(int, int, int, int, android.graphics.BitmapFactory$Options, com.squareup.picasso.Request):void type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x0065|0x0065: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0074 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0067|0x0067: SGET  (r0 I:com.squareup.picasso.MediaStoreRequestHandler$PicassoKind) =  com.squareup.picasso.MediaStoreRequestHandler.PicassoKind.FULL com.squareup.picasso.MediaStoreRequestHandler$PicassoKind \l}"];
Node_17 [shape=record,label="{17\:\ 0x0069|0x0069: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x006d \l}"];
Node_18 [shape=record,label="{18\:\ 0x006b|0x006b: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x006d|0x006d: IGET  (r0 I:int) = \l  (r13 I:com.squareup.picasso.MediaStoreRequestHandler$PicassoKind)\l com.squareup.picasso.MediaStoreRequestHandler.PicassoKind.androidKind int \l}"];
Node_20 [shape=record,label="{20\:\ 0x006f|0x006f: INVOKE  (r0 I:android.graphics.Bitmap) = \l  (r8 I:android.content.ContentResolver)\l  (r14 I:long)\l  (r0 I:int)\l  (r10 I:android.graphics.BitmapFactory$Options)\l android.provider.MediaStore.Video.Thumbnails.getThumbnail(android.content.ContentResolver, long, int, android.graphics.BitmapFactory$Options):android.graphics.Bitmap type: STATIC \l}"];
Node_21 [shape=record,label="{21\:\ 0x0074|0x0074: IGET  (r0 I:int) = \l  (r13 I:com.squareup.picasso.MediaStoreRequestHandler$PicassoKind)\l com.squareup.picasso.MediaStoreRequestHandler.PicassoKind.androidKind int \l0x0076: INVOKE  (r0 I:android.graphics.Bitmap) = \l  (r8 I:android.content.ContentResolver)\l  (r14 I:long)\l  (r0 I:int)\l  (r10 I:android.graphics.BitmapFactory$Options)\l android.provider.MediaStore.Images.Thumbnails.getThumbnail(android.content.ContentResolver, long, int, android.graphics.BitmapFactory$Options):android.graphics.Bitmap type: STATIC \l}"];
Node_22 [shape=record,label="{22\:\ 0x007a|0x007a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0084 \l}"];
Node_23 [shape=record,label="{23\:\ 0x007c|0x007c: NEW_INSTANCE  (r1 I:com.squareup.picasso.RequestHandler$Result) =  com.squareup.picasso.RequestHandler$Result \l0x007e: SGET  (r2 I:com.squareup.picasso.Picasso$LoadedFrom) =  com.squareup.picasso.Picasso.LoadedFrom.DISK com.squareup.picasso.Picasso$LoadedFrom \l0x0080: INVOKE  \l  (r1 I:com.squareup.picasso.RequestHandler$Result)\l  (r0 I:android.graphics.Bitmap)\l  (r12 I:okio.Source)\l  (r2 I:com.squareup.picasso.Picasso$LoadedFrom)\l  (r9 I:int)\l com.squareup.picasso.RequestHandler.Result.\<init\>(android.graphics.Bitmap, okio.Source, com.squareup.picasso.Picasso$LoadedFrom, int):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x0083|0x0083: RETURN  (r1 I:com.squareup.picasso.RequestHandler$Result) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0084|0x0084: INVOKE  (r0 I:java.io.InputStream) = \l  (r16 I:com.squareup.picasso.MediaStoreRequestHandler)\l  (r17 I:com.squareup.picasso.Request)\l com.squareup.picasso.MediaStoreRequestHandler.getInputStream(com.squareup.picasso.Request):java.io.InputStream type: VIRTUAL \l0x0088: INVOKE  (r0 I:okio.Source) = (r0 I:java.io.InputStream) okio.Okio.source(java.io.InputStream):okio.Source type: STATIC \l0x008c: NEW_INSTANCE  (r1 I:com.squareup.picasso.RequestHandler$Result) =  com.squareup.picasso.RequestHandler$Result \l0x008e: SGET  (r2 I:com.squareup.picasso.Picasso$LoadedFrom) =  com.squareup.picasso.Picasso.LoadedFrom.DISK com.squareup.picasso.Picasso$LoadedFrom \l0x0090: INVOKE  \l  (r1 I:com.squareup.picasso.RequestHandler$Result)\l  (r12 I:android.graphics.Bitmap)\l  (r0 I:okio.Source)\l  (r2 I:com.squareup.picasso.Picasso$LoadedFrom)\l  (r9 I:int)\l com.squareup.picasso.RequestHandler.Result.\<init\>(android.graphics.Bitmap, okio.Source, com.squareup.picasso.Picasso$LoadedFrom, int):void type: DIRECT \l}"];
Node_26 [shape=record,label="{26\:\ 0x0093|0x0093: RETURN  (r1 I:com.squareup.picasso.RequestHandler$Result) \l}"];
MethodNode[shape=record,label="{public com.squareup.picasso.RequestHandler$Result com.squareup.picasso.MediaStoreRequestHandler.load((r16 'this' I:com.squareup.picasso.MediaStoreRequestHandler A[IMMUTABLE_TYPE, THIS]), (r17 I:com.squareup.picasso.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_25;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_25 -> Node_26;
}

