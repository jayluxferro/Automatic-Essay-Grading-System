digraph "CFG forcom.squareup.picasso.Picasso.setSingletonInstance(Lcom\/squareup\/picasso\/Picasso;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0018 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST_CLASS  (r0 I:java.lang.Class\<com.squareup.picasso.Picasso\>) =  com.squareup.picasso.Picasso.class \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|SYNTHETIC\lSplitter:B:3:0x0005\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0005\l|0x0005: SGET  (r1 I:com.squareup.picasso.Picasso) =  com.squareup.picasso.Picasso.singleton com.squareup.picasso.Picasso A[Catch:\{ all \-\> 0x0015 \}, TRY_ENTER]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x000d A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: SPUT  (r2 I:com.squareup.picasso.Picasso) com.squareup.picasso.Picasso.singleton com.squareup.picasso.Picasso A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|0x000b: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x000c|0x000c: RETURN   A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x000d|0x000d: NEW_INSTANCE  (r2 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException A[Catch:\{ all \-\> 0x0015 \}]\l0x000f: CONST_STR  (r1 I:java.lang.String) =  \"Singleton instance already exists.\" A[Catch:\{ all \-\> 0x0015 \}]\l0x0011: INVOKE  \l  (r2 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|0x0014: THROW  (r2 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|ExcHandler: all null\lSplitter:B:3:0x0005\l|0x0015: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0016|0x0016: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0015 \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0017|0x0017: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|0x0018: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x001a: CONST_STR  (r0 I:java.lang.String) =  \"Picasso must not be null.\" \l0x001c: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x001f|0x001f: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void com.squareup.picasso.Picasso.setSingletonInstance((r2 I:com.squareup.picasso.Picasso A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_14;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

