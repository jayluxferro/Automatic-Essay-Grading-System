digraph "CFG forcom.squareup.picasso.Picasso.Builder.downloader(Lcom\/squareup\/picasso\/Downloader;)Lcom\/squareup\/picasso\/Picasso$Builder;" {
subgraph cluster_Region_1885938227 {
label = "R(1:(1:8)(1:(2:3|4)(1:6)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1618201292 {
label = "IF [B:0:0x0000] THEN: R(1:8) ELSE: R(1:(2:3|4)(1:6))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r2 == null) goto L_0x0011\l}"];
subgraph cluster_Region_1223327766 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0018|throw new java.lang.IllegalArgumentException(\"Downloader must not be null.\")\l}"];
}
subgraph cluster_Region_1274223999 {
label = "R(1:(2:3|4)(1:6)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1915934344 {
label = "IF [B:2:0x0004] THEN: R(2:3|4) ELSE: R(1:6) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r1.downloader == null) goto L_0x0006\l}"];
subgraph cluster_Region_216614824 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|r1.downloader = r2\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|RETURN\l|return r1\l}"];
}
subgraph cluster_Region_278895635 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0010|throw new java.lang.IllegalStateException(\"Downloader already set.\")\l}"];
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0009}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0011}"];
MethodNode[shape=record,label="{public com.squareup.picasso.Picasso$Builder com.squareup.picasso.Picasso.Builder.downloader((r1v0 'this' com.squareup.picasso.Picasso$Builder A[IMMUTABLE_TYPE, THIS]), (r2v0 com.squareup.picasso.Downloader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_7;
Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_1 -> Node_2;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

