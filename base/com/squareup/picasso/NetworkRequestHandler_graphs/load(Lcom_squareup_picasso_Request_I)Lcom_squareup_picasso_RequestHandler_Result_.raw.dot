digraph "CFG forcom.squareup.picasso.NetworkRequestHandler.load(Lcom\/squareup\/picasso\/Request;I)Lcom\/squareup\/picasso\/RequestHandler$Result;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r7 I:okhttp3.Request) = (r6 I:com.squareup.picasso.Request), (r7 I:int) com.squareup.picasso.NetworkRequestHandler.createRequest(com.squareup.picasso.Request, int):okhttp3.Request type: STATIC \l0x0004: IGET  (r0 I:com.squareup.picasso.Downloader) = (r5 I:com.squareup.picasso.NetworkRequestHandler) com.squareup.picasso.NetworkRequestHandler.downloader com.squareup.picasso.Downloader \l0x0006: INVOKE  (r7 I:okhttp3.Response) = \l  (r0 I:com.squareup.picasso.Downloader)\l  (r7 I:okhttp3.Request)\l com.squareup.picasso.Downloader.load(okhttp3.Request):okhttp3.Response type: INTERFACE \l0x000a: INVOKE  (r0 I:okhttp3.ResponseBody) = (r7 I:okhttp3.Response) okhttp3.Response.body():okhttp3.ResponseBody type: VIRTUAL \l0x000e: INVOKE  (r1 I:boolean) = (r7 I:okhttp3.Response) okhttp3.Response.isSuccessful():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0058 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: INVOKE  (r6 I:okhttp3.Response) = (r7 I:okhttp3.Response) okhttp3.Response.cacheResponse():okhttp3.Response type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001d \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: SGET  (r6 I:com.squareup.picasso.Picasso$LoadedFrom) =  com.squareup.picasso.Picasso.LoadedFrom.NETWORK com.squareup.picasso.Picasso$LoadedFrom \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: SGET  (r6 I:com.squareup.picasso.Picasso$LoadedFrom) =  com.squareup.picasso.Picasso.LoadedFrom.DISK com.squareup.picasso.Picasso$LoadedFrom \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: SGET  (r7 I:com.squareup.picasso.Picasso$LoadedFrom) =  com.squareup.picasso.Picasso.LoadedFrom.DISK com.squareup.picasso.Picasso$LoadedFrom \l0x0021: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0039 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: INVOKE  (r3 I:long) = (r0 I:okhttp3.ResponseBody) okhttp3.ResponseBody.contentLength():long type: VIRTUAL \l0x0029: CMP_L  (r7 I:int) = (r3 I:long), (r1 I:long) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002e \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: INVOKE  (r0 I:okhttp3.ResponseBody) okhttp3.ResponseBody.close():void type: VIRTUAL \l0x0031: NEW_INSTANCE  (r6 I:com.squareup.picasso.NetworkRequestHandler$ContentLengthException) =  com.squareup.picasso.NetworkRequestHandler$ContentLengthException \l0x0033: CONST_STR  (r7 I:java.lang.String) =  \"Received response with 0 content\-length header.\" \l0x0035: INVOKE  \l  (r6 I:com.squareup.picasso.NetworkRequestHandler$ContentLengthException)\l  (r7 I:java.lang.String)\l com.squareup.picasso.NetworkRequestHandler.ContentLengthException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|0x0038: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0039|0x0039: SGET  (r7 I:com.squareup.picasso.Picasso$LoadedFrom) =  com.squareup.picasso.Picasso.LoadedFrom.NETWORK com.squareup.picasso.Picasso$LoadedFrom \l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|0x003b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x004e \l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|0x003d: INVOKE  (r3 I:long) = (r0 I:okhttp3.ResponseBody) okhttp3.ResponseBody.contentLength():long type: VIRTUAL \l0x0041: CMP_L  (r7 I:int) = (r3 I:long), (r1 I:long) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0043|0x0043: IF  (r7 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:18:0x004e \l}"];
Node_17 [shape=record,label="{17\:\ 0x0045|0x0045: IGET  (r7 I:com.squareup.picasso.Stats) = (r5 I:com.squareup.picasso.NetworkRequestHandler) com.squareup.picasso.NetworkRequestHandler.stats com.squareup.picasso.Stats \l0x0047: INVOKE  (r1 I:long) = (r0 I:okhttp3.ResponseBody) okhttp3.ResponseBody.contentLength():long type: VIRTUAL \l0x004b: INVOKE  (r7 I:com.squareup.picasso.Stats), (r1 I:long) com.squareup.picasso.Stats.dispatchDownloadFinished(long):void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x004e|0x004e: NEW_INSTANCE  (r7 I:com.squareup.picasso.RequestHandler$Result) =  com.squareup.picasso.RequestHandler$Result \l0x0050: INVOKE  (r0 I:okio.BufferedSource) = (r0 I:okhttp3.ResponseBody) okhttp3.ResponseBody.source():okio.BufferedSource type: VIRTUAL \l0x0054: INVOKE  \l  (r7 I:com.squareup.picasso.RequestHandler$Result)\l  (r0 I:okio.Source)\l  (r6 I:com.squareup.picasso.Picasso$LoadedFrom)\l com.squareup.picasso.RequestHandler.Result.\<init\>(okio.Source, com.squareup.picasso.Picasso$LoadedFrom):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0057|0x0057: RETURN  (r7 I:com.squareup.picasso.RequestHandler$Result) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0058|0x0058: INVOKE  (r0 I:okhttp3.ResponseBody) okhttp3.ResponseBody.close():void type: VIRTUAL \l0x005b: NEW_INSTANCE  (r0 I:com.squareup.picasso.NetworkRequestHandler$ResponseException) =  com.squareup.picasso.NetworkRequestHandler$ResponseException \l0x005d: INVOKE  (r7 I:int) = (r7 I:okhttp3.Response) okhttp3.Response.code():int type: VIRTUAL \l0x0061: IGET  (r6 I:int) = (r6 I:com.squareup.picasso.Request) com.squareup.picasso.Request.networkPolicy int \l0x0063: INVOKE  \l  (r0 I:com.squareup.picasso.NetworkRequestHandler$ResponseException)\l  (r7 I:int)\l  (r6 I:int)\l com.squareup.picasso.NetworkRequestHandler.ResponseException.\<init\>(int, int):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x0066|0x0066: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.squareup.picasso.RequestHandler$Result com.squareup.picasso.NetworkRequestHandler.load((r5 'this' I:com.squareup.picasso.NetworkRequestHandler A[IMMUTABLE_TYPE, THIS]), (r6 I:com.squareup.picasso.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_21;
}

