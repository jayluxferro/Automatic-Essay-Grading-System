digraph "CFG forcom.squareup.picasso.NetworkRequestHandler.canHandleRequest(Lcom\/squareup\/picasso\/Request;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r2 = r2.uri.getScheme()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if (SCHEME_HTTP.equals(r2) != false) goto L_0x0019\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e}"];
Node_3 [shape=record,label="{3\:\ 0x0014|if (SCHEME_HTTPS.equals(r2) == false) goto L_0x0017\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|SYNTHETIC\lRETURN\l|return false\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean com.squareup.picasso.NetworkRequestHandler.canHandleRequest((r1v0 'this' com.squareup.picasso.NetworkRequestHandler A[IMMUTABLE_TYPE, THIS]), (r2v0 com.squareup.picasso.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
}

