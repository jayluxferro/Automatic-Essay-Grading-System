digraph "CFG forcom.squareup.picasso.NetworkRequestHandler.createRequest(Lcom\/squareup\/picasso\/Request;I)Lokhttp3\/Request;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r3 == 0) goto L_0x0027\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (com.squareup.picasso.NetworkPolicy.isOfflineOnly(r3) == false) goto L_0x000b\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|okhttp3.CacheControl r3 = okhttp3.CacheControl.FORCE_CACHE\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|okhttp3.CacheControl$Builder r0 = new okhttp3.CacheControl.Builder()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|if (com.squareup.picasso.NetworkPolicy.shouldReadFromDiskCache(r3) != false) goto L_0x0019\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|r0.noCache()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019}"];
Node_8 [shape=record,label="{8\:\ 0x001d|if (com.squareup.picasso.NetworkPolicy.shouldWriteToDiskCache(r3) != false) goto L_0x0022\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|r0.noStore()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|okhttp3.CacheControl r3 = r0.build()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|r3 = null\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|PHI: r3 \l  PHI: (r3v1 okhttp3.CacheControl) = (r3v2 okhttp3.CacheControl), (r3v4 okhttp3.CacheControl), (r3v5 okhttp3.CacheControl) binds: [B:11:0x0027, B:10:0x0022, B:3:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|okhttp3.Request$Builder r2 = new okhttp3.Request.Builder().url(r2.uri.toString())\l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|if (r3 == null) goto L_0x003c\l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|r2.cacheControl(r3)\l}"];
Node_15 [shape=record,label="{15\:\ 0x003c}"];
Node_16 [shape=record,label="{16\:\ 0x0040|RETURN\l|return r2.build()\l}"];
MethodNode[shape=record,label="{private static okhttp3.Request com.squareup.picasso.NetworkRequestHandler.createRequest((r2v0 com.squareup.picasso.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_11;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

