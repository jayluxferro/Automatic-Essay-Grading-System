digraph "CFG forcom.squareup.picasso.NetworkRequestHandler.load(Lcom\/squareup\/picasso\/Request;I)Lcom\/squareup\/picasso\/RequestHandler$Result;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|okhttp3.Request r7 = createRequest(r6, r7)\lokhttp3.Response r7 = r5.downloader.load(r7)\lokhttp3.ResponseBody r0 = r7.body()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|if (r7.isSuccessful() == false) goto L_0x0058\l}"];
Node_2 [shape=record,label="{2\:\ 0x0014}"];
Node_3 [shape=record,label="{3\:\ 0x0018|if (r7.cacheResponse() != null) goto L_0x001d\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|com.squareup.picasso.Picasso$LoadedFrom r6 = com.squareup.picasso.Picasso.LoadedFrom.NETWORK\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|com.squareup.picasso.Picasso$LoadedFrom r6 = com.squareup.picasso.Picasso.LoadedFrom.DISK\l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|PHI: r6 \l  PHI: (r6v3 com.squareup.picasso.Picasso$LoadedFrom) = (r6v5 com.squareup.picasso.Picasso$LoadedFrom), (r6v6 com.squareup.picasso.Picasso$LoadedFrom) binds: [B:5:0x001d, B:4:0x001a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|if (r6 != com.squareup.picasso.Picasso.LoadedFrom.DISK) goto L_0x0039\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025}"];
Node_9 [shape=record,label="{9\:\ 0x002b|if ((r0.contentLength() \> 0 ? 1 : (r0.contentLength() == 0 ? 0 : \-1)) == 0) goto L_0x002e\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|r0.close()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|throw new com.squareup.picasso.NetworkRequestHandler.ContentLengthException(\"Received response with 0 content\-length header.\")\l}"];
Node_12 [shape=record,label="{12\:\ 0x0039}"];
Node_13 [shape=record,label="{13\:\ 0x003b|if (r6 != com.squareup.picasso.Picasso.LoadedFrom.NETWORK) goto L_0x004e\l}"];
Node_14 [shape=record,label="{14\:\ 0x003d}"];
Node_15 [shape=record,label="{15\:\ 0x0043|if ((r0.contentLength() \> 0 ? 1 : (r0.contentLength() == 0 ? 0 : \-1)) \<= 0) goto L_0x004e\l}"];
Node_16 [shape=record,label="{16\:\ 0x0045|r5.stats.dispatchDownloadFinished(r0.contentLength())\l}"];
Node_17 [shape=record,label="{17\:\ 0x004e}"];
Node_18 [shape=record,label="{18\:\ 0x0057|RETURN\l|return new com.squareup.picasso.RequestHandler.Result((okio.Source) r0.source(), r6)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0058|r0.close()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0066|throw new com.squareup.picasso.NetworkRequestHandler.ResponseException(r7.code(), r6.networkPolicy)\l}"];
MethodNode[shape=record,label="{public com.squareup.picasso.RequestHandler$Result com.squareup.picasso.NetworkRequestHandler.load((r5v0 'this' com.squareup.picasso.NetworkRequestHandler A[IMMUTABLE_TYPE, THIS]), (r6v0 com.squareup.picasso.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_12[style=dashed];
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_20;
}

