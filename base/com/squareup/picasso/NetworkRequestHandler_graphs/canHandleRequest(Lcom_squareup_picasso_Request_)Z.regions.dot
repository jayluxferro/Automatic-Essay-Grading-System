digraph "CFG forcom.squareup.picasso.NetworkRequestHandler.canHandleRequest(Lcom\/squareup\/picasso\/Request;)Z" {
subgraph cluster_Region_699900476 {
label = "R(2:0|1)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String java.lang.String r2 = r2.uri.getScheme()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|RETURN\l|return SCHEME_HTTP.equals(r2) \|\| SCHEME_HTTPS.equals(r2)\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000e}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0014|REMOVE\lADDED_TO_REGION\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0017|SYNTHETIC\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0019|SYNTHETIC\lORIG_RETURN\l}"];
MethodNode[shape=record,label="{public boolean com.squareup.picasso.NetworkRequestHandler.canHandleRequest((r1v0 'this' com.squareup.picasso.NetworkRequestHandler A[IMMUTABLE_TYPE, THIS]), (r2v0 com.squareup.picasso.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
}

