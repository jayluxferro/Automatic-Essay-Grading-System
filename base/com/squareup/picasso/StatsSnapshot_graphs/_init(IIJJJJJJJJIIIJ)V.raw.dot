digraph "CFG forcom.squareup.picasso.StatsSnapshot.\<init\>(IIJJJJJJJJIIIJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0001: INVOKE  (r3 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0004: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: IPUT  (r1 I:int), (r0 I:com.squareup.picasso.StatsSnapshot) com.squareup.picasso.StatsSnapshot.maxSize int \l0x0007: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: IPUT  (r1 I:int), (r0 I:com.squareup.picasso.StatsSnapshot) com.squareup.picasso.StatsSnapshot.size int \l0x000a: MOVE  (r1 I:?[long, double]) = (r6 I:?[long, double]) \l0x000b: IPUT  (r1 I:long), (r0 I:com.squareup.picasso.StatsSnapshot) com.squareup.picasso.StatsSnapshot.cacheHits long \l0x000d: MOVE  (r1 I:?[long, double]) = (r8 I:?[long, double]) \l0x000e: IPUT  (r1 I:long), (r0 I:com.squareup.picasso.StatsSnapshot) com.squareup.picasso.StatsSnapshot.cacheMisses long \l0x0010: MOVE  (r1 I:?[long, double]) = (r10 I:?[long, double]) \l0x0011: IPUT  (r1 I:long), (r0 I:com.squareup.picasso.StatsSnapshot) com.squareup.picasso.StatsSnapshot.totalDownloadSize long \l0x0013: MOVE  (r1 I:?[long, double]) = (r12 I:?[long, double]) \l0x0014: IPUT  (r1 I:long), (r0 I:com.squareup.picasso.StatsSnapshot) com.squareup.picasso.StatsSnapshot.totalOriginalBitmapSize long \l0x0016: MOVE  (r1 I:?[long, double]) = (r14 I:?[long, double]) \l0x0017: IPUT  (r1 I:long), (r0 I:com.squareup.picasso.StatsSnapshot) com.squareup.picasso.StatsSnapshot.totalTransformedBitmapSize long \l0x0019: MOVE  (r1 I:?[long, double]) = (r16 I:?[long, double]) \l0x001b: IPUT  (r1 I:long), (r0 I:com.squareup.picasso.StatsSnapshot) com.squareup.picasso.StatsSnapshot.averageDownloadSize long \l0x001d: MOVE  (r1 I:?[long, double]) = (r18 I:?[long, double]) \l0x001f: IPUT  (r1 I:long), (r0 I:com.squareup.picasso.StatsSnapshot) com.squareup.picasso.StatsSnapshot.averageOriginalBitmapSize long \l0x0021: MOVE  (r1 I:?[long, double]) = (r20 I:?[long, double]) \l0x0023: IPUT  (r1 I:long), (r0 I:com.squareup.picasso.StatsSnapshot) com.squareup.picasso.StatsSnapshot.averageTransformedBitmapSize long \l0x0025: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0027: IPUT  (r1 I:int), (r0 I:com.squareup.picasso.StatsSnapshot) com.squareup.picasso.StatsSnapshot.downloadCount int \l0x0029: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002b: IPUT  (r1 I:int), (r0 I:com.squareup.picasso.StatsSnapshot) com.squareup.picasso.StatsSnapshot.originalBitmapCount int \l0x002d: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: IPUT  (r1 I:int), (r0 I:com.squareup.picasso.StatsSnapshot) com.squareup.picasso.StatsSnapshot.transformedBitmapCount int \l0x0031: MOVE  (r1 I:?[long, double]) = (r25 I:?[long, double]) \l0x0033: IPUT  (r1 I:long), (r0 I:com.squareup.picasso.StatsSnapshot) com.squareup.picasso.StatsSnapshot.timeStamp long \l}"];
Node_1 [shape=record,label="{1\:\ 0x0035|0x0035: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.squareup.picasso.StatsSnapshot.\<init\>((r3 'this' I:com.squareup.picasso.StatsSnapshot A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

