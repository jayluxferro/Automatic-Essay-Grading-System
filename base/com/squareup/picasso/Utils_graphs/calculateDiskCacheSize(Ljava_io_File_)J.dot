digraph "CFG forcom.squareup.picasso.Utils.calculateDiskCacheSize(Ljava\/io\/File;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IllegalArgumentException \-\> 0x0031 \}\lSplitter:B:1:0x0003\l|android.os.StatFs r2 = new android.os.StatFs(r6.getAbsolutePath())     \/\/ Catch:\{ IllegalArgumentException \-\> 0x0031 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|Catch:\{ IllegalArgumentException \-\> 0x0031 \}\l|if (android.os.Build.VERSION.SDK_INT \>= 18) goto L_0x0018     \/\/ Catch:\{ IllegalArgumentException \-\> 0x0031 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|Catch:\{ IllegalArgumentException \-\> 0x0031 \}\l|long r4 = (long) r2.getBlockCount()     \/\/ Catch:\{ IllegalArgumentException \-\> 0x0031 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|Catch:\{ IllegalArgumentException \-\> 0x0031 \}\l|long r4 = r2.getBlockCountLong()     \/\/ Catch:\{ IllegalArgumentException \-\> 0x0031 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|Catch:\{ IllegalArgumentException \-\> 0x0031 \}\lPHI: r4 \l  PHI: (r4v1 long) = (r4v3 long), (r4v4 long) binds: [B:5:0x0018, B:4:0x0012] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|Catch:\{ IllegalArgumentException \-\> 0x0031 \}\l|if (android.os.Build.VERSION.SDK_INT \>= 18) goto L_0x0026     \/\/ Catch:\{ IllegalArgumentException \-\> 0x0031 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|Catch:\{ IllegalArgumentException \-\> 0x0031 \}\l|long r2 = (long) r2.getBlockSize()     \/\/ Catch:\{ IllegalArgumentException \-\> 0x0031 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|Catch:\{ IllegalArgumentException \-\> 0x0031 \}\l|long r2 = r2.getBlockSizeLong()     \/\/ Catch:\{ IllegalArgumentException \-\> 0x0031 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|Catch:\{ IllegalArgumentException \-\> 0x0031 \}\lPHI: r2 \l  PHI: (r2v4 long) = (r2v7 long), (r2v8 long) binds: [B:9:0x0026, B:8:0x0020] A[DONT_GENERATE, DONT_INLINE]\l|long r2 = (r4 * r2) \/ 50     \/\/ Catch:\{ IllegalArgumentException \-\> 0x0031 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|r2 = 5242880\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lExcHandler: IllegalArgumentException (unused java.lang.IllegalArgumentException)\lSplitter:B:1:0x0003\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|PHI: r2 \l  PHI: (r2v0 long) = (r2v2 long), (r2v6 long) binds: [B:11:0x0031, B:10:0x002a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|RETURN\l|return java.lang.Math.max(java.lang.Math.min(r2, 52428800), 5242880)\l}"];
MethodNode[shape=record,label="{static long com.squareup.picasso.Utils.calculateDiskCacheSize((r6v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=18\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_13;
Node_11 -> Node_13;
Node_12 -> Node_11;
Node_13 -> Node_14;
}

