digraph "CFG forcom.squareup.picasso.Utils.calculateDiskCacheSize(Ljava\/io\/File;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = (5242880(0x500000, double:2.590327E\-317) ?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: NEW_INSTANCE  (r2 I:android.os.StatFs) =  android.os.StatFs A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}, TRY_ENTER]\l0x0005: INVOKE  (r6 I:java.lang.String) = (r6 I:java.io.File) java.io.File.getAbsolutePath():java.lang.String type: VIRTUAL A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l0x0009: INVOKE  (r2 I:android.os.StatFs), (r6 I:java.lang.String) android.os.StatFs.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l0x000c: SGET  (r6 I:int) =  android.os.Build.VERSION.SDK_INT int A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l0x000e: CONST  (r3 I:?[int, float, short, byte, char]) = (18 ?[int, float, short, byte, char]) A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r6 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:5:0x0018 A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: INVOKE  (r6 I:int) = (r2 I:android.os.StatFs) android.os.StatFs.getBlockCount():int type: VIRTUAL A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l0x0016: CAST  (r4 I:long) = (long) (r6 I:int) A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l0x0017: GOTO  \-\> 0x001c A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: INVOKE  (r4 I:long) = (r2 I:android.os.StatFs) android.os.StatFs.getBlockCountLong():long type: VIRTUAL A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: SGET  (r6 I:int) =  android.os.Build.VERSION.SDK_INT int A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: IF  (r6 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:9:0x0026 A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: INVOKE  (r6 I:int) = (r2 I:android.os.StatFs) android.os.StatFs.getBlockSize():int type: VIRTUAL A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l0x0024: CAST  (r2 I:long) = (long) (r6 I:int) A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l0x0025: GOTO  \-\> 0x002a A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: INVOKE  (r2 I:long) = (r2 I:android.os.StatFs) android.os.StatFs.getBlockSizeLong():long type: VIRTUAL A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: ARITH  (r4 I:long) = (r4 I:long) * (r2 I:long) A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l0x002c: CONST  (r2 I:?[long, double]) = (50 ?[long, double]) A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}]\l0x002e: ARITH  (r2 I:long) = (r4 I:long) \/ (r2 I:long) A[Catch:\{ IllegalArgumentException \-\> 0x0031 \}, TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: MOVE  (r2 I:?[long, double]) = (r0 I:?[long, double]) \l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lExcHandler: IllegalArgumentException null\lSplitter:B:1:0x0003\l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: CONST  (r4 I:?[long, double]) = \l  (52428800(0x3200000, double:2.5903269E\-316) ?[long, double])\l \l0x0035: INVOKE  (r2 I:long) = (r2 I:long), (r4 I:long) java.lang.Math.min(long, long):long type: STATIC \l0x0039: INVOKE  (r0 I:long) = (r2 I:long), (r0 I:long) java.lang.Math.max(long, long):long type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|0x003d: RETURN  (r0 I:long) \l}"];
MethodNode[shape=record,label="{static long com.squareup.picasso.Utils.calculateDiskCacheSize((r6 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=18\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_14;
Node_12 -> Node_14;
Node_13 -> Node_12;
Node_14 -> Node_15;
}

