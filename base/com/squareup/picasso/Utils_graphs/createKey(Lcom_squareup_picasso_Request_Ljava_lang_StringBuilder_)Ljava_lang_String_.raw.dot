digraph "CFG forcom.squareup.picasso.Utils.createKey(Lcom\/squareup\/picasso\/Request;Ljava\/lang\/StringBuilder;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.String) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.stableKey java.lang.String \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (50 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:java.lang.String) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.stableKey java.lang.String \l0x0008: INVOKE  (r0 I:int) = (r0 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x000c: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x000d: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:int) java.lang.StringBuilder.ensureCapacity(int):void type: VIRTUAL \l0x0010: IGET  (r0 I:java.lang.String) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.stableKey java.lang.String \l0x0012: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IGET  (r0 I:android.net.Uri) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.uri android.net.Uri \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x002c \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IGET  (r0 I:android.net.Uri) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.uri android.net.Uri \l0x001c: INVOKE  (r0 I:java.lang.String) = (r0 I:android.net.Uri) android.net.Uri.toString():java.lang.String type: VIRTUAL \l0x0020: INVOKE  (r2 I:int) = (r0 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0024: ARITH  (r2 I:int) = (r2 I:int) + (r1 I:int) \l0x0025: INVOKE  (r5 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.ensureCapacity(int):void type: VIRTUAL \l0x0028: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|0x002c: INVOKE  (r5 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.ensureCapacity(int):void type: VIRTUAL \l0x002f: IGET  (r0 I:int) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.resourceId int \l0x0031: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|0x0034: CONST  (r0 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0036: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0039: IGET  (r1 I:float) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.rotationDegrees float \l0x003b: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003c: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (120(0x78, float:1.68E\-43) ?[int, float, short, byte, char])\l \l0x003e: CMP_L  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0040|0x0040: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0065 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0042|0x0042: CONST_STR  (r1 I:java.lang.String) =  \"rotation:\" \l0x0044: INVOKE  (r5 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0047: IGET  (r1 I:float) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.rotationDegrees float \l0x0049: INVOKE  (r5 I:java.lang.StringBuilder), (r1 I:float) java.lang.StringBuilder.append(float):java.lang.StringBuilder type: VIRTUAL \l0x004c: IGET  (r1 I:boolean) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.hasRotationPivot boolean \l}"];
Node_10 [shape=record,label="{10\:\ 0x004e|0x004e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0062 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|0x0050: CONST  (r1 I:?[int, float, short, byte, char]) = (64 ?[int, float, short, byte, char]) \l0x0052: INVOKE  (r5 I:java.lang.StringBuilder), (r1 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0055: IGET  (r1 I:float) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.rotationPivotX float \l0x0057: INVOKE  (r5 I:java.lang.StringBuilder), (r1 I:float) java.lang.StringBuilder.append(float):java.lang.StringBuilder type: VIRTUAL \l0x005a: INVOKE  (r5 I:java.lang.StringBuilder), (r3 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x005d: IGET  (r1 I:float) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.rotationPivotY float \l0x005f: INVOKE  (r5 I:java.lang.StringBuilder), (r1 I:float) java.lang.StringBuilder.append(float):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0062|0x0062: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0065|0x0065: INVOKE  (r1 I:boolean) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.hasSize():boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0069|0x0069: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0080 \l}"];
Node_15 [shape=record,label="{15\:\ 0x006b|0x006b: CONST_STR  (r1 I:java.lang.String) =  \"resize:\" \l0x006d: INVOKE  (r5 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0070: IGET  (r1 I:int) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetWidth int \l0x0072: INVOKE  (r5 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0075: INVOKE  (r5 I:java.lang.StringBuilder), (r3 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0078: IGET  (r1 I:int) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.targetHeight int \l0x007a: INVOKE  (r5 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x007d: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0080|0x0080: IGET  (r1 I:boolean) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.centerCrop boolean \l}"];
Node_17 [shape=record,label="{17\:\ 0x0082|0x0082: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0092 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0084|0x0084: CONST_STR  (r1 I:java.lang.String) =  \"centerCrop:\" \l0x0086: INVOKE  (r5 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0089: IGET  (r1 I:int) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.centerCropGravity int \l0x008b: INVOKE  (r5 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x008e: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0092|0x0092: IGET  (r1 I:boolean) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.centerInside boolean \l}"];
Node_20 [shape=record,label="{20\:\ 0x0094|0x0094: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x009e \l}"];
Node_21 [shape=record,label="{21\:\ 0x0096|0x0096: CONST_STR  (r1 I:java.lang.String) =  \"centerInside\" \l0x0098: INVOKE  (r5 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009b: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x009e|0x009e: IGET  (r1 I:java.util.List\<com.squareup.picasso.Transformation\>) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.transformations java.util.List \l}"];
Node_23 [shape=record,label="{23\:\ 0x00a0|0x00a0: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x00c0 \l}"];
Node_24 [shape=record,label="{24\:\ 0x00a2|0x00a2: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a3: IGET  (r2 I:java.util.List\<com.squareup.picasso.Transformation\>) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.transformations java.util.List \l0x00a5: INVOKE  (r2 I:int) = (r2 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_25 [shape=record,label="{25\:\ 0x00a9|0x00a9: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:27:0x00c0 \l}"];
Node_26 [shape=record,label="{26\:\ 0x00ab|0x00ab: IGET  (r3 I:java.util.List\<com.squareup.picasso.Transformation\>) = (r4 I:com.squareup.picasso.Request) com.squareup.picasso.Request.transformations java.util.List \l0x00ad: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x00b1: CHECK_CAST  (r3 I:com.squareup.picasso.Transformation) = (com.squareup.picasso.Transformation) (r3 I:?[OBJECT, ARRAY]) \l0x00b3: INVOKE  (r3 I:java.lang.String) = (r3 I:com.squareup.picasso.Transformation) com.squareup.picasso.Transformation.key():java.lang.String type: INTERFACE \l0x00b7: INVOKE  (r5 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00ba: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x00bd: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_27 [shape=record,label="{27\:\ 0x00c0|0x00c0: INVOKE  (r4 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x00c4|0x00c4: RETURN  (r4 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{static java.lang.String com.squareup.picasso.Utils.createKey((r4 I:com.squareup.picasso.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_27;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_25;
Node_27 -> Node_28;
}

