digraph "CFG forcom.squareup.picasso.PicassoExecutorService.adjustThreadCount(Landroid\/net\/NetworkInfo;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x003d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: INVOKE  (r1 I:boolean) = (r4 I:android.net.NetworkInfo) android.net.NetworkInfo.isConnectedOrConnecting():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000a \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: INVOKE  (r1 I:int) = (r4 I:android.net.NetworkInfo) android.net.NetworkInfo.getType():int type: VIRTUAL \l0x000e: CONST  (r2 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0038 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: CONST  (r2 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0038 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1] t:[0x001c, 0x0038] \l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|0x0018: INVOKE  \l  (r3 I:com.squareup.picasso.PicassoExecutorService)\l  (r0 I:int)\l com.squareup.picasso.PicassoExecutorService.setThreadCount(int):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: INVOKE  (r4 I:int) = (r4 I:android.net.NetworkInfo) android.net.NetworkInfo.getSubtype():int type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: SWITCH  \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6] t:[0x0033, 0x0033, 0x002e, 0x002e, 0x002e, 0x002e] \l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|0x0023: SWITCH  \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[12, 13, 14, 15] t:[0x002e, 0x002a, 0x002a, 0x002a] \l}"];
Node_14 [shape=record,label="{14\:\ 0x0026|0x0026: INVOKE  \l  (r3 I:com.squareup.picasso.PicassoExecutorService)\l  (r0 I:int)\l com.squareup.picasso.PicassoExecutorService.setThreadCount(int):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|0x002a: INVOKE  \l  (r3 I:com.squareup.picasso.PicassoExecutorService)\l  (r0 I:int)\l com.squareup.picasso.PicassoExecutorService.setThreadCount(int):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x002e|0x002e: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x002f: INVOKE  \l  (r3 I:com.squareup.picasso.PicassoExecutorService)\l  (r4 I:int)\l com.squareup.picasso.PicassoExecutorService.setThreadCount(int):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0033|0x0033: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0034: INVOKE  \l  (r3 I:com.squareup.picasso.PicassoExecutorService)\l  (r4 I:int)\l com.squareup.picasso.PicassoExecutorService.setThreadCount(int):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x0038|0x0038: CONST  (r4 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0039: INVOKE  \l  (r3 I:com.squareup.picasso.PicassoExecutorService)\l  (r4 I:int)\l com.squareup.picasso.PicassoExecutorService.setThreadCount(int):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x003c|0x003c: RETURN   \l}"];
Node_20 [shape=record,label="{20\:\ 0x003d|0x003d: INVOKE  \l  (r3 I:com.squareup.picasso.PicassoExecutorService)\l  (r0 I:int)\l com.squareup.picasso.PicassoExecutorService.setThreadCount(int):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x0040|0x0040: RETURN   \l}"];
MethodNode[shape=record,label="{void com.squareup.picasso.PicassoExecutorService.adjustThreadCount((r3 'this' I:com.squareup.picasso.PicassoExecutorService A[IMMUTABLE_TYPE, THIS]), (r4 I:android.net.NetworkInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_20[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_18;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_18;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_9 -> Node_18;
Node_10 -> Node_19;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_16;
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_13 -> Node_16;
Node_14 -> Node_19;
Node_15 -> Node_19;
Node_16 -> Node_19;
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_20 -> Node_21;
}

