digraph "CFG forcom.squareup.picasso.Dispatcher.NetworkBroadcastReceiver.onReceive(Landroid\/content\/Context;Landroid\/content\/Intent;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r4 != null) goto L_0x0003\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|RETURN\l|return\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|java.lang.String r0 = r4.getAction()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|if (\"android.intent.action.AIRPLANE_MODE\".equals(r0) == false) goto L_0x0025\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f}"];
Node_5 [shape=record,label="{5\:\ 0x0015|if (r4.hasExtra(EXTRA_AIRPLANE_STATE) != false) goto L_0x0018\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|r2.dispatcher.dispatchAirplaneModeChange(r4.getBooleanExtra(EXTRA_AIRPLANE_STATE, false))\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025}"];
Node_9 [shape=record,label="{9\:\ 0x002b|if (\"android.net.conn.CONNECTIVITY_CHANGE\".equals(r0) == false) goto L_?\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|r2.dispatcher.dispatchNetworkStateChange(((android.net.ConnectivityManager) com.squareup.picasso.Utils.getService(r3, \"connectivity\")).getActiveNetworkInfo())\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.squareup.picasso.Dispatcher.NetworkBroadcastReceiver.onReceive((r2v0 'this' com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver A[IMMUTABLE_TYPE, THIS]), (r3v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.content.Intent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.SuppressLint, \{value=[MissingPermission]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
}

