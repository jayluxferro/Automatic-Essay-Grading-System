digraph "CFG forcom.squareup.picasso.Request.Builder.onlyScaleDown()Lcom\/squareup\/picasso\/Request$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r2 I:com.squareup.picasso.Request$Builder) com.squareup.picasso.Request.Builder.targetHeight int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:int) = (r2 I:com.squareup.picasso.Request$Builder) com.squareup.picasso.Request.Builder.targetWidth int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0009 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x000b: CONST_STR  (r1 I:java.lang.String) =  \"onlyScaleDown can not be applied without resize\" \l0x000d: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0012: IPUT  (r0 I:boolean), (r2 I:com.squareup.picasso.Request$Builder) com.squareup.picasso.Request.Builder.onlyScaleDown boolean \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: RETURN  (r2 I:com.squareup.picasso.Request$Builder) \l}"];
MethodNode[shape=record,label="{public com.squareup.picasso.Request$Builder com.squareup.picasso.Request.Builder.onlyScaleDown((r2 'this' I:com.squareup.picasso.Request$Builder A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_7[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
}

