digraph "CFG forcom.squareup.picasso.Request.Builder.transform(Lcom\/squareup\/picasso\/Transformation;)Lcom\/squareup\/picasso\/Request$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0022 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:java.lang.String) = (r3 I:com.squareup.picasso.Transformation) com.squareup.picasso.Transformation.key():java.lang.String type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001a \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:java.util.List\<com.squareup.picasso.Transformation\>) = (r2 I:com.squareup.picasso.Request$Builder) com.squareup.picasso.Request.Builder.transformations java.util.List \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0014 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x000e: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000f: INVOKE  (r0 I:java.util.ArrayList), (r1 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x0012: IPUT  \l  (r0 I:java.util.List\<com.squareup.picasso.Transformation\>)\l  (r2 I:com.squareup.picasso.Request$Builder)\l com.squareup.picasso.Request.Builder.transformations java.util.List \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IGET  (r0 I:java.util.List\<com.squareup.picasso.Transformation\>) = (r2 I:com.squareup.picasso.Request$Builder) com.squareup.picasso.Request.Builder.transformations java.util.List \l0x0016: INVOKE  (r0 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: RETURN  (r2 I:com.squareup.picasso.Request$Builder) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x001c: CONST_STR  (r0 I:java.lang.String) =  \"Transformation key must not be null.\" \l0x001e: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0024: CONST_STR  (r0 I:java.lang.String) =  \"Transformation must not be null.\" \l0x0026: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.squareup.picasso.Request$Builder com.squareup.picasso.Request.Builder.transform((r2 'this' I:com.squareup.picasso.Request$Builder A[IMMUTABLE_TYPE, THIS]), (r3 I:com.squareup.picasso.Transformation A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

