digraph "CFG forcom.squareup.picasso.Request.Builder.transform(Ljava\/util\/List;)Lcom\/squareup\/picasso\/Request$Builder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  (r1 I:int) = (r4 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:4:0x0015 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: INVOKE  (r2 I:java.lang.Object) = (r4 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x000d: CHECK_CAST  (r2 I:com.squareup.picasso.Transformation) = (com.squareup.picasso.Transformation) (r2 I:?[OBJECT, ARRAY]) \l0x000f: INVOKE  \l  (r3 I:com.squareup.picasso.Request$Builder)\l  (r2 I:com.squareup.picasso.Transformation)\l com.squareup.picasso.Request.Builder.transform(com.squareup.picasso.Transformation):com.squareup.picasso.Request$Builder type: VIRTUAL \l0x0012: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: RETURN  (r3 I:com.squareup.picasso.Request$Builder) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0018: CONST_STR  (r0 I:java.lang.String) =  \"Transformation list must not be null.\" \l0x001a: INVOKE  \l  (r4 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.squareup.picasso.Request$Builder com.squareup.picasso.Request.Builder.transform((r3 'this' I:com.squareup.picasso.Request$Builder A[IMMUTABLE_TYPE, THIS]), (r4 I:java.util.List\<? extends com.squareup.picasso.Transformation\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, +, Lcom\/squareup\/picasso\/Transformation;, \>;), Lcom\/squareup\/picasso\/Request$Builder;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_2;
Node_5 -> Node_6;
}

