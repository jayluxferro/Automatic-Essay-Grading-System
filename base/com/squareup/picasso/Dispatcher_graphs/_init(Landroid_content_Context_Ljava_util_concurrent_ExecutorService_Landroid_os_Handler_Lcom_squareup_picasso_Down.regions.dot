digraph "CFG forcom.squareup.picasso.Dispatcher.\<init\>(Landroid\/content\/Context;Ljava\/util\/concurrent\/ExecutorService;Landroid\/os\/Handler;Lcom\/squareup\/picasso\/Downloader;Lcom\/squareup\/picasso\/Cache;Lcom\/squareup\/picasso\/Stats;)V" {
subgraph cluster_Region_1304492943 {
label = "R(1:0)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.dispatcherThread.start()\lcom.squareup.picasso.Utils.flushStackLocalLeaks(r1.dispatcherThread.getLooper())\lr1.context = r2\lr1.service = r3\lr1.hunterMap = new java.util.LinkedHashMap()\lr1.failedActions = new java.util.WeakHashMap()\lr1.pausedActions = new java.util.WeakHashMap()\lr1.pausedTags = new java.util.LinkedHashSet()\lr1.handler = new com.squareup.picasso.Dispatcher.DispatcherHandler(r1.dispatcherThread.getLooper(), r1)\lr1.downloader = r5\lr1.mainThreadHandler = r4\lr1.cache = r6\lr1.stats = r7\lr1.batch = new java.util.ArrayList(4)\lr1.airplaneMode = com.squareup.picasso.Utils.isAirplaneModeOn(r1.context)\lr1.scansNetworkChanges = com.squareup.picasso.Utils.hasPermission(r2, \"android.permission.ACCESS_NETWORK_STATE\")\lr1.receiver = new com.squareup.picasso.Dispatcher.NetworkBroadcastReceiver(r1)\lr1.receiver.register()\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0071}"];
MethodNode[shape=record,label="{void com.squareup.picasso.Dispatcher.\<init\>((r1v0 'this' com.squareup.picasso.Dispatcher A[IMMUTABLE_TYPE, THIS]), (r2v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.util.concurrent.ExecutorService A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.os.Handler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 com.squareup.picasso.Downloader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 com.squareup.picasso.Cache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 com.squareup.picasso.Stats A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

