digraph "CFG forcom.squareup.picasso.Dispatcher.\<init\>(Landroid\/content\/Context;Ljava\/util\/concurrent\/ExecutorService;Landroid\/os\/Handler;Lcom\/squareup\/picasso\/Downloader;Lcom\/squareup\/picasso\/Cache;Lcom\/squareup\/picasso\/Stats;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:com.squareup.picasso.Dispatcher$DispatcherThread) =  com.squareup.picasso.Dispatcher$DispatcherThread \l0x0005: INVOKE  (r0 I:com.squareup.picasso.Dispatcher$DispatcherThread) com.squareup.picasso.Dispatcher.DispatcherThread.\<init\>():void type: DIRECT \l0x0008: IPUT  \l  (r0 I:com.squareup.picasso.Dispatcher$DispatcherThread)\l  (r1 I:com.squareup.picasso.Dispatcher)\l com.squareup.picasso.Dispatcher.dispatcherThread com.squareup.picasso.Dispatcher$DispatcherThread \l0x000a: IGET  (r0 I:com.squareup.picasso.Dispatcher$DispatcherThread) = (r1 I:com.squareup.picasso.Dispatcher) com.squareup.picasso.Dispatcher.dispatcherThread com.squareup.picasso.Dispatcher$DispatcherThread \l0x000c: INVOKE  (r0 I:com.squareup.picasso.Dispatcher$DispatcherThread) com.squareup.picasso.Dispatcher.DispatcherThread.start():void type: VIRTUAL \l0x000f: IGET  (r0 I:com.squareup.picasso.Dispatcher$DispatcherThread) = (r1 I:com.squareup.picasso.Dispatcher) com.squareup.picasso.Dispatcher.dispatcherThread com.squareup.picasso.Dispatcher$DispatcherThread \l0x0011: INVOKE  (r0 I:android.os.Looper) = (r0 I:com.squareup.picasso.Dispatcher$DispatcherThread) com.squareup.picasso.Dispatcher.DispatcherThread.getLooper():android.os.Looper type: VIRTUAL \l0x0015: INVOKE  (r0 I:android.os.Looper) com.squareup.picasso.Utils.flushStackLocalLeaks(android.os.Looper):void type: STATIC \l0x0018: IPUT  \l  (r2 I:android.content.Context)\l  (r1 I:com.squareup.picasso.Dispatcher)\l com.squareup.picasso.Dispatcher.context android.content.Context \l0x001a: IPUT  \l  (r3 I:java.util.concurrent.ExecutorService)\l  (r1 I:com.squareup.picasso.Dispatcher)\l com.squareup.picasso.Dispatcher.service java.util.concurrent.ExecutorService \l0x001c: NEW_INSTANCE  (r3 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x001e: INVOKE  (r3 I:java.util.LinkedHashMap) java.util.LinkedHashMap.\<init\>():void type: DIRECT \l0x0021: IPUT  \l  (r3 I:java.util.Map\<java.lang.String, com.squareup.picasso.BitmapHunter\>)\l  (r1 I:com.squareup.picasso.Dispatcher)\l com.squareup.picasso.Dispatcher.hunterMap java.util.Map \l0x0023: NEW_INSTANCE  (r3 I:java.util.WeakHashMap) =  java.util.WeakHashMap \l0x0025: INVOKE  (r3 I:java.util.WeakHashMap) java.util.WeakHashMap.\<init\>():void type: DIRECT \l0x0028: IPUT  \l  (r3 I:java.util.Map\<java.lang.Object, com.squareup.picasso.Action\>)\l  (r1 I:com.squareup.picasso.Dispatcher)\l com.squareup.picasso.Dispatcher.failedActions java.util.Map \l0x002a: NEW_INSTANCE  (r3 I:java.util.WeakHashMap) =  java.util.WeakHashMap \l0x002c: INVOKE  (r3 I:java.util.WeakHashMap) java.util.WeakHashMap.\<init\>():void type: DIRECT \l0x002f: IPUT  \l  (r3 I:java.util.Map\<java.lang.Object, com.squareup.picasso.Action\>)\l  (r1 I:com.squareup.picasso.Dispatcher)\l com.squareup.picasso.Dispatcher.pausedActions java.util.Map \l0x0031: NEW_INSTANCE  (r3 I:java.util.LinkedHashSet) =  java.util.LinkedHashSet \l0x0033: INVOKE  (r3 I:java.util.LinkedHashSet) java.util.LinkedHashSet.\<init\>():void type: DIRECT \l0x0036: IPUT  \l  (r3 I:java.util.Set\<java.lang.Object\>)\l  (r1 I:com.squareup.picasso.Dispatcher)\l com.squareup.picasso.Dispatcher.pausedTags java.util.Set \l0x0038: NEW_INSTANCE  (r3 I:com.squareup.picasso.Dispatcher$DispatcherHandler) =  com.squareup.picasso.Dispatcher$DispatcherHandler \l0x003a: IGET  (r0 I:com.squareup.picasso.Dispatcher$DispatcherThread) = (r1 I:com.squareup.picasso.Dispatcher) com.squareup.picasso.Dispatcher.dispatcherThread com.squareup.picasso.Dispatcher$DispatcherThread \l0x003c: INVOKE  (r0 I:android.os.Looper) = (r0 I:com.squareup.picasso.Dispatcher$DispatcherThread) com.squareup.picasso.Dispatcher.DispatcherThread.getLooper():android.os.Looper type: VIRTUAL \l0x0040: INVOKE  \l  (r3 I:com.squareup.picasso.Dispatcher$DispatcherHandler)\l  (r0 I:android.os.Looper)\l  (r1 I:com.squareup.picasso.Dispatcher)\l com.squareup.picasso.Dispatcher.DispatcherHandler.\<init\>(android.os.Looper, com.squareup.picasso.Dispatcher):void type: DIRECT \l0x0043: IPUT  \l  (r3 I:android.os.Handler)\l  (r1 I:com.squareup.picasso.Dispatcher)\l com.squareup.picasso.Dispatcher.handler android.os.Handler \l0x0045: IPUT  \l  (r5 I:com.squareup.picasso.Downloader)\l  (r1 I:com.squareup.picasso.Dispatcher)\l com.squareup.picasso.Dispatcher.downloader com.squareup.picasso.Downloader \l0x0047: IPUT  \l  (r4 I:android.os.Handler)\l  (r1 I:com.squareup.picasso.Dispatcher)\l com.squareup.picasso.Dispatcher.mainThreadHandler android.os.Handler \l0x0049: IPUT  \l  (r6 I:com.squareup.picasso.Cache)\l  (r1 I:com.squareup.picasso.Dispatcher)\l com.squareup.picasso.Dispatcher.cache com.squareup.picasso.Cache \l0x004b: IPUT  \l  (r7 I:com.squareup.picasso.Stats)\l  (r1 I:com.squareup.picasso.Dispatcher)\l com.squareup.picasso.Dispatcher.stats com.squareup.picasso.Stats \l0x004d: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList \l0x004f: CONST  (r4 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0050: INVOKE  (r3 I:java.util.ArrayList), (r4 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x0053: IPUT  \l  (r3 I:java.util.List\<com.squareup.picasso.BitmapHunter\>)\l  (r1 I:com.squareup.picasso.Dispatcher)\l com.squareup.picasso.Dispatcher.batch java.util.List \l0x0055: IGET  (r3 I:android.content.Context) = (r1 I:com.squareup.picasso.Dispatcher) com.squareup.picasso.Dispatcher.context android.content.Context \l0x0057: INVOKE  (r3 I:boolean) = (r3 I:android.content.Context) com.squareup.picasso.Utils.isAirplaneModeOn(android.content.Context):boolean type: STATIC \l0x005b: IPUT  (r3 I:boolean), (r1 I:com.squareup.picasso.Dispatcher) com.squareup.picasso.Dispatcher.airplaneMode boolean \l0x005d: CONST_STR  (r3 I:java.lang.String) =  \"android.permission.ACCESS_NETWORK_STATE\" \l0x005f: INVOKE  (r2 I:boolean) = (r2 I:android.content.Context), (r3 I:java.lang.String) com.squareup.picasso.Utils.hasPermission(android.content.Context, java.lang.String):boolean type: STATIC \l0x0063: IPUT  (r2 I:boolean), (r1 I:com.squareup.picasso.Dispatcher) com.squareup.picasso.Dispatcher.scansNetworkChanges boolean \l0x0065: NEW_INSTANCE  (r2 I:com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver) =  com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver \l0x0067: INVOKE  \l  (r2 I:com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver)\l  (r1 I:com.squareup.picasso.Dispatcher)\l com.squareup.picasso.Dispatcher.NetworkBroadcastReceiver.\<init\>(com.squareup.picasso.Dispatcher):void type: DIRECT \l0x006a: IPUT  \l  (r2 I:com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver)\l  (r1 I:com.squareup.picasso.Dispatcher)\l com.squareup.picasso.Dispatcher.receiver com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver \l0x006c: IGET  (r2 I:com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver) = (r1 I:com.squareup.picasso.Dispatcher) com.squareup.picasso.Dispatcher.receiver com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver \l0x006e: INVOKE  \l  (r2 I:com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver)\l com.squareup.picasso.Dispatcher.NetworkBroadcastReceiver.register():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0071|0x0071: RETURN   \l}"];
MethodNode[shape=record,label="{void com.squareup.picasso.Dispatcher.\<init\>((r1 'this' I:com.squareup.picasso.Dispatcher A[IMMUTABLE_TYPE, THIS]), (r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.util.concurrent.ExecutorService A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.os.Handler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.squareup.picasso.Downloader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.squareup.picasso.Cache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.squareup.picasso.Stats A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

