digraph "CFG forcom.squareup.picasso.Dispatcher.performRetry(Lcom\/squareup\/picasso\/BitmapHunter;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r4 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.isCancelled():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IGET  (r0 I:java.util.concurrent.ExecutorService) = (r3 I:com.squareup.picasso.Dispatcher) com.squareup.picasso.Dispatcher.service java.util.concurrent.ExecutorService \l0x0009: INVOKE  (r0 I:boolean) = (r0 I:java.util.concurrent.ExecutorService) java.util.concurrent.ExecutorService.isShutdown():boolean type: INTERFACE \l0x000d: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: INVOKE  \l  (r3 I:com.squareup.picasso.Dispatcher)\l  (r4 I:com.squareup.picasso.BitmapHunter)\l  (r1 I:boolean)\l com.squareup.picasso.Dispatcher.performError(com.squareup.picasso.BitmapHunter, boolean):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0015: IGET  (r2 I:boolean) = (r3 I:com.squareup.picasso.Dispatcher) com.squareup.picasso.Dispatcher.scansNetworkChanges boolean \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0027 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: IGET  (r0 I:android.content.Context) = (r3 I:com.squareup.picasso.Dispatcher) com.squareup.picasso.Dispatcher.context android.content.Context \l0x001b: CONST_STR  (r2 I:java.lang.String) =  \"connectivity\" \l0x001d: INVOKE  (r0 I:java.lang.Object) = (r0 I:android.content.Context), (r2 I:java.lang.String) com.squareup.picasso.Utils.getService(android.content.Context, java.lang.String):java.lang.Object type: STATIC \l0x0021: CHECK_CAST  (r0 I:android.net.ConnectivityManager) = (android.net.ConnectivityManager) (r0 I:?[OBJECT, ARRAY]) \l0x0023: INVOKE  (r0 I:android.net.NetworkInfo) = (r0 I:android.net.ConnectivityManager) android.net.ConnectivityManager.getActiveNetworkInfo():android.net.NetworkInfo type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: IGET  (r2 I:boolean) = (r3 I:com.squareup.picasso.Dispatcher) com.squareup.picasso.Dispatcher.airplaneMode boolean \l0x0029: INVOKE  (r0 I:boolean) = \l  (r4 I:com.squareup.picasso.BitmapHunter)\l  (r2 I:boolean)\l  (r0 I:android.net.NetworkInfo)\l com.squareup.picasso.BitmapHunter.shouldRetry(boolean, android.net.NetworkInfo):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x005c \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: INVOKE  (r0 I:com.squareup.picasso.Picasso) = (r4 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.getPicasso():com.squareup.picasso.Picasso type: VIRTUAL \l0x0033: IGET  (r0 I:boolean) = (r0 I:com.squareup.picasso.Picasso) com.squareup.picasso.Picasso.loggingEnabled boolean \l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|0x0035: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0042 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: CONST_STR  (r0 I:java.lang.String) =  \"Dispatcher\" \l0x0039: CONST_STR  (r1 I:java.lang.String) =  \"retrying\" \l0x003b: INVOKE  (r2 I:java.lang.String) = (r4 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.Utils.getLogIdsForHunter(com.squareup.picasso.BitmapHunter):java.lang.String type: STATIC \l0x003f: INVOKE  \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l com.squareup.picasso.Utils.log(java.lang.String, java.lang.String, java.lang.String):void type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|0x0042: INVOKE  (r0 I:java.lang.Exception) = (r4 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.getException():java.lang.Exception type: VIRTUAL \l0x0046: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) com.squareup.picasso.NetworkRequestHandler$ContentLengthException \l}"];
Node_16 [shape=record,label="{16\:\ 0x0048|0x0048: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0053 \l}"];
Node_17 [shape=record,label="{17\:\ 0x004a|0x004a: IGET  (r0 I:int) = (r4 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.networkPolicy int \l0x004c: SGET  (r1 I:com.squareup.picasso.NetworkPolicy) =  com.squareup.picasso.NetworkPolicy.NO_CACHE com.squareup.picasso.NetworkPolicy \l0x004e: IGET  (r1 I:int) = (r1 I:com.squareup.picasso.NetworkPolicy) com.squareup.picasso.NetworkPolicy.index int \l0x0050: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) \| (r1 I:?[int, boolean, short, byte, char]) \l0x0051: IPUT  (r0 I:int), (r4 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.networkPolicy int \l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|0x0053: IGET  (r0 I:java.util.concurrent.ExecutorService) = (r3 I:com.squareup.picasso.Dispatcher) com.squareup.picasso.Dispatcher.service java.util.concurrent.ExecutorService \l0x0055: INVOKE  (r0 I:java.util.concurrent.Future) = \l  (r0 I:java.util.concurrent.ExecutorService)\l  (r4 I:java.lang.Runnable)\l java.util.concurrent.ExecutorService.submit(java.lang.Runnable):java.util.concurrent.Future type: INTERFACE \l0x0059: IPUT  \l  (r0 I:java.util.concurrent.Future\<?\>)\l  (r4 I:com.squareup.picasso.BitmapHunter)\l com.squareup.picasso.BitmapHunter.future java.util.concurrent.Future \l}"];
Node_19 [shape=record,label="{19\:\ 0x005c|0x005c: IGET  (r0 I:boolean) = (r3 I:com.squareup.picasso.Dispatcher) com.squareup.picasso.Dispatcher.scansNetworkChanges boolean \l}"];
Node_20 [shape=record,label="{20\:\ 0x005e|0x005e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0067 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0060|0x0060: INVOKE  (r0 I:boolean) = (r4 I:com.squareup.picasso.BitmapHunter) com.squareup.picasso.BitmapHunter.supportsReplay():boolean type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x0064|0x0064: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0067 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0066|0x0066: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0067|0x0067: INVOKE  \l  (r3 I:com.squareup.picasso.Dispatcher)\l  (r4 I:com.squareup.picasso.BitmapHunter)\l  (r1 I:boolean)\l com.squareup.picasso.Dispatcher.performError(com.squareup.picasso.BitmapHunter, boolean):void type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x006a|0x006a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x006f \l}"];
Node_26 [shape=record,label="{26\:\ 0x006c|0x006c: INVOKE  \l  (r3 I:com.squareup.picasso.Dispatcher)\l  (r4 I:com.squareup.picasso.BitmapHunter)\l com.squareup.picasso.Dispatcher.markForReplay(com.squareup.picasso.BitmapHunter):void type: DIRECT \l}"];
Node_27 [shape=record,label="{27\:\ 0x006f|0x006f: RETURN   \l}"];
MethodNode[shape=record,label="{void com.squareup.picasso.Dispatcher.performRetry((r3 'this' I:com.squareup.picasso.Dispatcher A[IMMUTABLE_TYPE, THIS]), (r4 I:com.squareup.picasso.BitmapHunter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.SuppressLint, \{value=[MissingPermission]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
}

