digraph "CFG forcom.squareup.picasso.AssetRequestHandler.canHandleRequest(Lcom\/squareup\/picasso\/Request;)Z" {
subgraph cluster_Region_741825604 {
label = "R(2:0|(2:(1:9)|(1:6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.net.Uri android.net.Uri r3 = r3.uri\l}"];
subgraph cluster_Region_386363986 {
label = "R(2:(1:9)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1188517181 {
label = "IF [B:1:0x000d, B:3:0x0017, B:5:0x0027] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000d|if (\"file\".equals(r3.getScheme()) == false) goto L_?\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|ADDED_TO_REGION\l|if (r3.getPathSegments().isEmpty() == true) goto L_?\l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|ADDED_TO_REGION\l|if (ANDROID_ASSET.equals(r3.getPathSegments().get(0)) == false) goto L_?\l}"];
subgraph cluster_Region_1954380268 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1226761459 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0029|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000f}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0019}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{public boolean com.squareup.picasso.AssetRequestHandler.canHandleRequest((r2v0 'this' com.squareup.picasso.AssetRequestHandler A[IMMUTABLE_TYPE, THIS]), (r3v0 com.squareup.picasso.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

