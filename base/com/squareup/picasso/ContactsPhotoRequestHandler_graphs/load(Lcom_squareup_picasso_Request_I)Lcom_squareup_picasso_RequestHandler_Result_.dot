digraph "CFG forcom.squareup.picasso.ContactsPhotoRequestHandler.load(Lcom\/squareup\/picasso\/Request;I)Lcom\/squareup\/picasso\/RequestHandler$Result;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.io.InputStream r2 = getInputStream(r2)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r2 != null) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
Node_4 [shape=record,label="{4\:\ 0x0013|RETURN\l|return new com.squareup.picasso.RequestHandler.Result(okio.Okio.source(r2), com.squareup.picasso.Picasso.LoadedFrom.DISK)\l}"];
MethodNode[shape=record,label="{public com.squareup.picasso.RequestHandler$Result com.squareup.picasso.ContactsPhotoRequestHandler.load((r1v0 'this' com.squareup.picasso.ContactsPhotoRequestHandler A[IMMUTABLE_TYPE, THIS]), (r2v0 com.squareup.picasso.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

