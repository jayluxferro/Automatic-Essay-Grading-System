digraph "CFG forcom.squareup.picasso.ContactsPhotoRequestHandler.load(Lcom\/squareup\/picasso\/Request;I)Lcom\/squareup\/picasso\/RequestHandler$Result;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.io.InputStream) = \l  (r1 I:com.squareup.picasso.ContactsPhotoRequestHandler)\l  (r2 I:com.squareup.picasso.Request)\l com.squareup.picasso.ContactsPhotoRequestHandler.getInputStream(com.squareup.picasso.Request):java.io.InputStream type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: RETURN  (r2 I:com.squareup.picasso.RequestHandler$Result) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: NEW_INSTANCE  (r3 I:com.squareup.picasso.RequestHandler$Result) =  com.squareup.picasso.RequestHandler$Result \l0x000a: INVOKE  (r2 I:okio.Source) = (r2 I:java.io.InputStream) okio.Okio.source(java.io.InputStream):okio.Source type: STATIC \l0x000e: SGET  (r0 I:com.squareup.picasso.Picasso$LoadedFrom) =  com.squareup.picasso.Picasso.LoadedFrom.DISK com.squareup.picasso.Picasso$LoadedFrom \l0x0010: INVOKE  \l  (r3 I:com.squareup.picasso.RequestHandler$Result)\l  (r2 I:okio.Source)\l  (r0 I:com.squareup.picasso.Picasso$LoadedFrom)\l com.squareup.picasso.RequestHandler.Result.\<init\>(okio.Source, com.squareup.picasso.Picasso$LoadedFrom):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: RETURN  (r3 I:com.squareup.picasso.RequestHandler$Result) \l}"];
MethodNode[shape=record,label="{public com.squareup.picasso.RequestHandler$Result com.squareup.picasso.ContactsPhotoRequestHandler.load((r1 'this' I:com.squareup.picasso.ContactsPhotoRequestHandler A[IMMUTABLE_TYPE, THIS]), (r2 I:com.squareup.picasso.Request A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

