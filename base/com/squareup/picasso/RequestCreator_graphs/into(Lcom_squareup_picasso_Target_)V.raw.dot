digraph "CFG forcom.squareup.picasso.RequestCreator.into(Lcom\/squareup\/picasso\/Target;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:long) =  java.lang.System.nanoTime():long type: STATIC \l0x0004: INVOKE   com.squareup.picasso.Utils.checkMain():void type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0076 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r2 I:boolean) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.deferred boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x006e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r2 I:com.squareup.picasso.Request$Builder) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.data com.squareup.picasso.Request$Builder \l0x000f: INVOKE  (r2 I:boolean) = (r2 I:com.squareup.picasso.Request$Builder) com.squareup.picasso.Request.Builder.hasImage():boolean type: VIRTUAL \l0x0013: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0027 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IGET  (r0 I:com.squareup.picasso.Picasso) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.picasso com.squareup.picasso.Picasso \l0x0018: INVOKE  \l  (r0 I:com.squareup.picasso.Picasso)\l  (r15 I:com.squareup.picasso.Target)\l com.squareup.picasso.Picasso.cancelRequest(com.squareup.picasso.Target):void type: VIRTUAL \l0x001b: IGET  (r0 I:boolean) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.setPlaceholder boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0023 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: INVOKE  (r3 I:android.graphics.drawable.Drawable) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.getPlaceholderDrawable():android.graphics.drawable.Drawable type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: INVOKE  \l  (r15 I:com.squareup.picasso.Target)\l  (r3 I:android.graphics.drawable.Drawable)\l com.squareup.picasso.Target.onPrepareLoad(android.graphics.drawable.Drawable):void type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: RETURN   \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: INVOKE  (r7 I:com.squareup.picasso.Request) = (r14 I:com.squareup.picasso.RequestCreator), (r0 I:long) com.squareup.picasso.RequestCreator.createRequest(long):com.squareup.picasso.Request type: DIRECT \l0x002b: INVOKE  (r11 I:java.lang.String) = (r7 I:com.squareup.picasso.Request) com.squareup.picasso.Utils.createKey(com.squareup.picasso.Request):java.lang.String type: STATIC \l0x002f: IGET  (r0 I:int) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.memoryPolicy int \l0x0031: INVOKE  (r0 I:boolean) = (r0 I:int) com.squareup.picasso.MemoryPolicy.shouldReadFromMemoryCache(int):boolean type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|0x0035: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x004a \l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|0x0037: IGET  (r0 I:com.squareup.picasso.Picasso) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.picasso com.squareup.picasso.Picasso \l0x0039: INVOKE  (r0 I:android.graphics.Bitmap) = \l  (r0 I:com.squareup.picasso.Picasso)\l  (r11 I:java.lang.String)\l com.squareup.picasso.Picasso.quickMemoryCacheCheck(java.lang.String):android.graphics.Bitmap type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|0x003d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x004a \l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|0x003f: IGET  (r1 I:com.squareup.picasso.Picasso) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.picasso com.squareup.picasso.Picasso \l0x0041: INVOKE  \l  (r1 I:com.squareup.picasso.Picasso)\l  (r15 I:com.squareup.picasso.Target)\l com.squareup.picasso.Picasso.cancelRequest(com.squareup.picasso.Target):void type: VIRTUAL \l0x0044: SGET  (r1 I:com.squareup.picasso.Picasso$LoadedFrom) =  com.squareup.picasso.Picasso.LoadedFrom.MEMORY com.squareup.picasso.Picasso$LoadedFrom \l0x0046: INVOKE  \l  (r15 I:com.squareup.picasso.Target)\l  (r0 I:android.graphics.Bitmap)\l  (r1 I:com.squareup.picasso.Picasso$LoadedFrom)\l com.squareup.picasso.Target.onBitmapLoaded(android.graphics.Bitmap, com.squareup.picasso.Picasso$LoadedFrom):void type: INTERFACE \l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|0x0049: RETURN   \l}"];
Node_17 [shape=record,label="{17\:\ 0x004a|0x004a: IGET  (r0 I:boolean) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.setPlaceholder boolean \l}"];
Node_18 [shape=record,label="{18\:\ 0x004c|0x004c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0052 \l}"];
Node_19 [shape=record,label="{19\:\ 0x004e|0x004e: INVOKE  (r3 I:android.graphics.drawable.Drawable) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.getPlaceholderDrawable():android.graphics.drawable.Drawable type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x0052|0x0052: INVOKE  \l  (r15 I:com.squareup.picasso.Target)\l  (r3 I:android.graphics.drawable.Drawable)\l com.squareup.picasso.Target.onPrepareLoad(android.graphics.drawable.Drawable):void type: INTERFACE \l0x0055: NEW_INSTANCE  (r0 I:com.squareup.picasso.TargetAction) =  com.squareup.picasso.TargetAction \l0x0057: IGET  (r5 I:com.squareup.picasso.Picasso) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.picasso com.squareup.picasso.Picasso \l0x0059: IGET  (r8 I:int) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.memoryPolicy int \l0x005b: IGET  (r9 I:int) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.networkPolicy int \l0x005d: IGET  (r10 I:android.graphics.drawable.Drawable) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.errorDrawable android.graphics.drawable.Drawable \l0x005f: IGET  (r12 I:java.lang.Object) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.tag java.lang.Object \l0x0061: IGET  (r13 I:int) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.errorResId int \l0x0063: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0064: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0065: INVOKE  \l  (r4 I:com.squareup.picasso.TargetAction)\l  (r5 I:com.squareup.picasso.Picasso)\l  (r6 I:com.squareup.picasso.Target)\l  (r7 I:com.squareup.picasso.Request)\l  (r8 I:int)\l  (r9 I:int)\l  (r10 I:android.graphics.drawable.Drawable)\l  (r11 I:java.lang.String)\l  (r12 I:java.lang.Object)\l  (r13 I:int)\l com.squareup.picasso.TargetAction.\<init\>(com.squareup.picasso.Picasso, com.squareup.picasso.Target, com.squareup.picasso.Request, int, int, android.graphics.drawable.Drawable, java.lang.String, java.lang.Object, int):void type: DIRECT \l0x0068: IGET  (r15 I:com.squareup.picasso.Picasso) = (r14 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.picasso com.squareup.picasso.Picasso \l0x006a: INVOKE  \l  (r15 I:com.squareup.picasso.Picasso)\l  (r0 I:com.squareup.picasso.Action)\l com.squareup.picasso.Picasso.enqueueAndSubmit(com.squareup.picasso.Action):void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x006d|0x006d: RETURN   \l}"];
Node_22 [shape=record,label="{22\:\ 0x006e|0x006e: NEW_INSTANCE  (r15 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0070: CONST_STR  (r0 I:java.lang.String) =  \"Fit cannot be used with a Target.\" \l0x0072: INVOKE  \l  (r15 I:java.lang.IllegalStateException)\l  (r0 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x0075|0x0075: THROW  (r15 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0076|0x0076: NEW_INSTANCE  (r15 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0078: CONST_STR  (r0 I:java.lang.String) =  \"Target must not be null.\" \l0x007a: INVOKE  \l  (r15 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_25 [shape=record,label="{25\:\ 0x007d|0x007d: THROW  (r15 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.squareup.picasso.RequestCreator.into((r14 'this' I:com.squareup.picasso.RequestCreator A[IMMUTABLE_TYPE, THIS]), (r15 I:com.squareup.picasso.Target A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_24;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_22;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_24 -> Node_25;
}

