digraph "CFG forcom.squareup.picasso.RequestCreator.memoryPolicy(Lcom\/squareup\/picasso\/MemoryPolicy;[Lcom\/squareup\/picasso\/MemoryPolicy;)Lcom\/squareup\/picasso\/RequestCreator;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0031 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:int) = (r3 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.memoryPolicy int \l0x0004: IGET  (r4 I:int) = (r4 I:com.squareup.picasso.MemoryPolicy) com.squareup.picasso.MemoryPolicy.index int \l0x0006: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) \| (r0 I:?[int, boolean, short, byte, char]) \l0x0007: IPUT  (r4 I:int), (r3 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.memoryPolicy int \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0029 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: ARRAY_LENGTH  (r4 I:int) = (r5 I:?[]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x0028 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: ARRAY_LENGTH  (r4 I:int) = (r5 I:?[]) \l0x000f: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IF  (r0 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:12:0x0028 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: AGET  (r1 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0020 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|0x0016: IGET  (r2 I:int) = (r3 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.memoryPolicy int \l0x0018: IGET  (r1 I:int) = (r1 I:com.squareup.picasso.MemoryPolicy) com.squareup.picasso.MemoryPolicy.index int \l0x001a: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) \| (r2 I:?[int, boolean, short, byte, char]) \l0x001b: IPUT  (r1 I:int), (r3 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.memoryPolicy int \l0x001d: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|0x0020: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0022: CONST_STR  (r5 I:java.lang.String) =  \"Memory policy cannot be null.\" \l0x0024: INVOKE  \l  (r4 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: RETURN  (r3 I:com.squareup.picasso.RequestCreator) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|0x0029: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x002b: CONST_STR  (r5 I:java.lang.String) =  \"Memory policy cannot be null.\" \l0x002d: INVOKE  \l  (r4 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|0x0030: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0031: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0033: CONST_STR  (r5 I:java.lang.String) =  \"Memory policy cannot be null.\" \l0x0035: INVOKE  \l  (r4 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0038|0x0038: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.squareup.picasso.RequestCreator com.squareup.picasso.RequestCreator.memoryPolicy((r3 'this' I:com.squareup.picasso.RequestCreator A[IMMUTABLE_TYPE, THIS]), (r4 I:com.squareup.picasso.MemoryPolicy A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.squareup.picasso.MemoryPolicy[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_15;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_6;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_15 -> Node_16;
}

