digraph "CFG forcom.squareup.picasso.RequestCreator.into(Landroid\/widget\/RemoteViews;I[ILcom\/squareup\/picasso\/Callback;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0001: INVOKE  (r1 I:long) =  java.lang.System.nanoTime():long type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r16 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x005a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IF  (r18 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0052 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r3 I:boolean) = (r0 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.deferred boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x004a \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IGET  (r3 I:android.graphics.drawable.Drawable) = (r0 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.placeholderDrawable android.graphics.drawable.Drawable \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0042 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IGET  (r3 I:int) = (r0 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.placeholderResId int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0042 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: IGET  (r3 I:android.graphics.drawable.Drawable) = (r0 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.errorDrawable android.graphics.drawable.Drawable \l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|0x0017: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0042 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|0x0019: INVOKE  (r5 I:com.squareup.picasso.Request) = (r15 I:com.squareup.picasso.RequestCreator), (r1 I:long) com.squareup.picasso.RequestCreator.createRequest(long):com.squareup.picasso.Request type: DIRECT \l0x001d: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001f: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0022: INVOKE  (r11 I:java.lang.String) = \l  (r5 I:com.squareup.picasso.Request)\l  (r1 I:java.lang.StringBuilder)\l com.squareup.picasso.Utils.createKey(com.squareup.picasso.Request, java.lang.StringBuilder):java.lang.String type: STATIC \l0x0026: NEW_INSTANCE  (r1 I:com.squareup.picasso.RemoteViewsAction$AppWidgetAction) =  com.squareup.picasso.RemoteViewsAction$AppWidgetAction \l0x0028: IGET  (r4 I:com.squareup.picasso.Picasso) = (r0 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.picasso com.squareup.picasso.Picasso \l0x002a: IGET  (r9 I:int) = (r0 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.memoryPolicy int \l0x002c: IGET  (r10 I:int) = (r0 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.networkPolicy int \l0x002e: IGET  (r12 I:java.lang.Object) = (r0 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.tag java.lang.Object \l0x0030: IGET  (r13 I:int) = (r0 I:com.squareup.picasso.RequestCreator) com.squareup.picasso.RequestCreator.errorResId int \l0x0032: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0033: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0035: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0037: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0039: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x003b: INVOKE  \l  (r3 I:com.squareup.picasso.RemoteViewsAction$AppWidgetAction)\l  (r4 I:com.squareup.picasso.Picasso)\l  (r5 I:com.squareup.picasso.Request)\l  (r6 I:android.widget.RemoteViews)\l  (r7 I:int)\l  (r8 I:int[])\l  (r9 I:int)\l  (r10 I:int)\l  (r11 I:java.lang.String)\l  (r12 I:java.lang.Object)\l  (r13 I:int)\l  (r14 I:com.squareup.picasso.Callback)\l com.squareup.picasso.RemoteViewsAction.AppWidgetAction.\<init\>(com.squareup.picasso.Picasso, com.squareup.picasso.Request, android.widget.RemoteViews, int, int[], int, int, java.lang.String, java.lang.Object, int, com.squareup.picasso.Callback):void type: DIRECT \l0x003e: INVOKE  \l  (r15 I:com.squareup.picasso.RequestCreator)\l  (r1 I:com.squareup.picasso.RemoteViewsAction)\l com.squareup.picasso.RequestCreator.performRemoteViewInto(com.squareup.picasso.RemoteViewsAction):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|0x0041: RETURN   \l}"];
Node_13 [shape=record,label="{13\:\ 0x0042|0x0042: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0044: CONST_STR  (r2 I:java.lang.String) =  \"Cannot use placeholder or error drawables with remote views.\" \l0x0046: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x0049|0x0049: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|0x004a: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x004c: CONST_STR  (r2 I:java.lang.String) =  \"Fit cannot be used with remote views.\" \l0x004e: INVOKE  \l  (r1 I:java.lang.IllegalStateException)\l  (r2 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0051|0x0051: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0052|0x0052: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0054: CONST_STR  (r2 I:java.lang.String) =  \"appWidgetIds must not be null.\" \l0x0056: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x0059|0x0059: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ 0x005a|0x005a: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x005c: CONST_STR  (r2 I:java.lang.String) =  \"remoteViews must not be null.\" \l0x005e: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x0061|0x0061: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.squareup.picasso.RequestCreator.into((r15 'this' I:com.squareup.picasso.RequestCreator A[IMMUTABLE_TYPE, THIS]), (r16 I:android.widget.RemoteViews A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:com.squareup.picasso.Callback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.IdRes, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_17;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_15;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_20;
}

