digraph "CFG forcom.squareup.picasso.RequestCreator.get()Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|long r0 = java.lang.System.nanoTime()\lcom.squareup.picasso.Utils.checkNotMain()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r8.deferred != false) goto L_0x0047\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b}"];
Node_3 [shape=record,label="{3\:\ 0x0011|if (r8.data.hasImage() != false) goto L_0x0015\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|RETURN\l|return null\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|com.squareup.picasso.Request r3 = createRequest(r0)\ljava.lang.String r7 = com.squareup.picasso.Utils.createKey(r3, new java.lang.StringBuilder())\lcom.squareup.picasso.GetAction r1 = new com.squareup.picasso.GetAction(r8.picasso, r3, r8.memoryPolicy, r8.networkPolicy, r8.tag, r7)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0046|RETURN\l|return com.squareup.picasso.BitmapHunter.forRequest(r8.picasso, r8.picasso.dispatcher, r8.picasso.cache, r8.picasso.stats, r1).hunt()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0047}"];
Node_8 [shape=record,label="{8\:\ 0x004e|throw new java.lang.IllegalStateException(\"Fit cannot be used with get.\")\l}"];
MethodNode[shape=record,label="{public android.graphics.Bitmap com.squareup.picasso.RequestCreator.get((r8v0 'this' com.squareup.picasso.RequestCreator A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

