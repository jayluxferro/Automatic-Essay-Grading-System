digraph "CFG forcom.squareup.picasso.ImageViewAction.error(Ljava\/lang\/Exception;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.widget.ImageView r0 = (android.widget.ImageView) r3.target.get()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0 != null) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|android.graphics.drawable.Drawable r1 = r0.getDrawable()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|if ((r1 instanceof android.graphics.drawable.Animatable) == false) goto L_0x0018\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|((android.graphics.drawable.Animatable) r1).stop()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018}"];
Node_7 [shape=record,label="{7\:\ 0x001a|if (r3.errorResId == 0) goto L_0x0022\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|r0.setImageResource(r3.errorResId)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022}"];
Node_10 [shape=record,label="{10\:\ 0x0024|if (r3.errorDrawable == null) goto L_0x002b\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|r0.setImageDrawable(r3.errorDrawable)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002b}"];
Node_13 [shape=record,label="{13\:\ 0x002d|if (r3.callback == null) goto L_?\l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|r3.callback.onError(r4)\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.squareup.picasso.ImageViewAction.error((r3v0 'this' com.squareup.picasso.ImageViewAction A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.Exception A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
}

