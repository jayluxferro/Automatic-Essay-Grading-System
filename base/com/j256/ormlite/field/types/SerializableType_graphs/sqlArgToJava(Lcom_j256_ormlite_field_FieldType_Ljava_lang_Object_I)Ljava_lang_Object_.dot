digraph "CFG forcom.j256.ormlite.field.types.SerializableType.sqlArgToJava(Lcom\/j256\/ormlite\/field\/FieldType;Ljava\/lang\/Object;I)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|byte[] r5 = (byte[]) r5\lr4 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Exception \-\> 0x0020 \}\lSplitter:B:1:0x0003\l|java.io.ObjectInputStream r6 = new java.io.ObjectInputStream(new java.io.ByteArrayInputStream(r5))     \/\/ Catch:\{ Exception \-\> 0x0020 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|SYNTHETIC\lSplitter:B:3:0x000d\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ Exception \-\> 0x0019, all \-\> 0x0015 \}\lSplitter:B:3:0x000d\l|java.lang.Object r4 = r6.readObject()     \/\/ Catch:\{ Exception \-\> 0x0019, all \-\> 0x0015 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|com.j256.ormlite.misc.IOUtils.closeQuietly(r6)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|RETURN\l|return r4\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|ExcHandler: all (r4v6 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:3:0x000d\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|r5 = r4\lr4 = r6\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|ExcHandler: Exception (r4v4 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:3:0x000d\l|java.lang.Exception r4 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|r2 = r6\lr6 = r4\lr4 = r2\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:13:0x0021\l|java.lang.Throwable r5 = th\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:1:0x0003\l|java.lang.Exception r6 = e\l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|SYNTHETIC\lPHI: r4 r6 \l  PHI: (r4v3 java.io.ObjectInputStream) = (r4v1 java.io.ObjectInputStream), (r4v5 java.io.ObjectInputStream) binds: [B:12:0x0020, B:10:0x001a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 'e' java.lang.Exception) = (r6v2 'e' java.lang.Exception), (r6v4 'e' java.lang.Exception) binds: [B:12:0x0020, B:10:0x001a] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:13:0x0021\l}"];
Node_14 [shape=record,label="{14\:\ ?|Catch:\{ all \-\> 0x001e \}\lSplitter:B:13:0x0021\l|java.lang.StringBuilder r0 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x001e \}\lr0.append(\"Could not read serialized object from byte array: \")     \/\/ Catch:\{ all \-\> 0x001e \}\lr0.append(java.util.Arrays.toString(r5))     \/\/ Catch:\{ all \-\> 0x001e \}\lr0.append(\"(len \")     \/\/ Catch:\{ all \-\> 0x001e \}\lr0.append(r5.length)     \/\/ Catch:\{ all \-\> 0x001e \}\lr0.append(\")\")     \/\/ Catch:\{ all \-\> 0x001e \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|Catch:\{ all \-\> 0x001e \}\l|throw com.j256.ormlite.misc.SqlExceptionUtil.create(r0.toString(), r6)     \/\/ Catch:\{ all \-\> 0x001e \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|PHI: r4 r5 \l  PHI: (r4v2 java.io.ObjectInputStream) = (r4v3 java.io.ObjectInputStream), (r4v7 java.io.ObjectInputStream) binds: [B:11:0x001e, B:8:0x0016] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 'th' java.lang.Throwable) = (r5v7 'th' java.lang.Throwable), (r5v8 'th' java.lang.Throwable) binds: [B:11:0x001e, B:8:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|com.j256.ormlite.misc.IOUtils.closeQuietly(r4)\l}"];
Node_17 [shape=record,label="{17\:\ 0x004c|throw r5\l}"];
MethodNode[shape=record,label="{public java.lang.Object com.j256.ormlite.field.types.SerializableType.sqlArgToJava((r3v0 'this' com.j256.ormlite.field.types.SerializableType A[IMMUTABLE_TYPE, THIS]), (r4v0 com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_2 -> Node_12;
Node_3 -> Node_4;
Node_3 -> Node_9;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_16;
Node_9 -> Node_10;
Node_10 -> Node_13;
Node_11 -> Node_16;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_11;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

