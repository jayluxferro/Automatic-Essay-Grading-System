digraph "CFG forcom.j256.ormlite.field.types.SerializableType.javaToSqlArg(Lcom\/j256\/ormlite\/field\/FieldType;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: NEW_INSTANCE  (r0 I:java.io.ByteArrayOutputStream) =  java.io.ByteArrayOutputStream A[Catch:\{ Exception \-\> 0x0021 \}, TRY_ENTER]\l0x0003: INVOKE  (r0 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.\<init\>():void type: DIRECT A[Catch:\{ Exception \-\> 0x0021 \}]\l0x0006: NEW_INSTANCE  (r1 I:java.io.ObjectOutputStream) =  java.io.ObjectOutputStream A[Catch:\{ Exception \-\> 0x0021 \}]\l0x0008: INVOKE  \l  (r1 I:java.io.ObjectOutputStream)\l  (r0 I:java.io.OutputStream)\l java.io.ObjectOutputStream.\<init\>(java.io.OutputStream):void type: DIRECT A[Catch:\{ Exception \-\> 0x0021 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|SYNTHETIC\lSplitter:B:3:0x000b\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x000b\l|0x000b: INVOKE  (r1 I:java.io.ObjectOutputStream), (r5 I:java.lang.Object) java.io.ObjectOutputStream.writeObject(java.lang.Object):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x001c, all \-\> 0x0019 \}, TRY_ENTER]\l0x000e: INVOKE  (r1 I:java.io.ObjectOutputStream) java.io.ObjectOutputStream.close():void type: VIRTUAL A[Catch:\{ Exception \-\> 0x001c, all \-\> 0x0019 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|SYNTHETIC\lSplitter:B:5:0x0011\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0011\l|0x0011: INVOKE  (r0 I:byte[]) = (r0 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.toByteArray():byte[] type: VIRTUAL A[Catch:\{ Exception \-\> 0x0021 \}, TRY_ENTER]\l0x0014: NOP   A[TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: INVOKE  (r4 I:java.io.Closeable) com.j256.ormlite.misc.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: RETURN  (r0 I:java.lang.Object) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|ExcHandler: all null\lSplitter:B:3:0x000b\l|0x0019: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|ExcHandler: Exception null\lSplitter:B:3:0x000b\l|0x001c: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|ExcHandler: all null\lSplitter:B:16:0x0022\l|0x001f: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0021|ExcHandler: Exception null\lSplitter:B:1:0x0001\l|0x0021: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x0022|SYNTHETIC\lSplitter:B:16:0x0022\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x0022\l|0x0022: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x001f \}, TRY_ENTER]\l0x0024: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x001f \}]\l0x0027: CONST_STR  (r2 I:java.lang.String) =  \"Could not write serialized object to byte array: \" A[Catch:\{ all \-\> 0x001f \}]\l0x0029: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x001f \}]\l0x002c: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x001f \}]\l0x002f: INVOKE  (r5 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x001f \}]\l0x0033: INVOKE  (r5 I:java.sql.SQLException) = (r5 I:java.lang.String), (r0 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC A[Catch:\{ all \-\> 0x001f \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|0x0037: THROW  (r5 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x001f \}, TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0038|0x0038: INVOKE  (r4 I:java.io.Closeable) com.j256.ormlite.misc.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_20 [shape=record,label="{20\:\ 0x003b|0x003b: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.lang.Object com.j256.ormlite.field.types.SerializableType.javaToSqlArg((r3 'this' I:com.j256.ormlite.field.types.SerializableType A[IMMUTABLE_TYPE, THIS]), (r4 I:com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_3 -> Node_11;
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_4 -> Node_11;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_19;
Node_11 -> Node_12;
Node_12 -> Node_16;
Node_13 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_13;
Node_17 -> Node_18;
Node_19 -> Node_20;
}

