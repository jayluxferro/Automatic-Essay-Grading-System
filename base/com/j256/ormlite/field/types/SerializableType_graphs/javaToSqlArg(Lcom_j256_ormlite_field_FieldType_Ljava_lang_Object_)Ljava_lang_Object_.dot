digraph "CFG forcom.j256.ormlite.field.types.SerializableType.javaToSqlArg(Lcom\/j256\/ormlite\/field\/FieldType;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Exception \-\> 0x0021 \}\lSplitter:B:1:0x0001\l|java.io.ByteArrayOutputStream r0 = new java.io.ByteArrayOutputStream()     \/\/ Catch:\{ Exception \-\> 0x0021 \}\ljava.io.ObjectOutputStream r1 = new java.io.ObjectOutputStream(r0)     \/\/ Catch:\{ Exception \-\> 0x0021 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|SYNTHETIC\lSplitter:B:3:0x000b\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ Exception \-\> 0x001c, all \-\> 0x0019 \}\lSplitter:B:3:0x000b\l|r1.writeObject(r5)     \/\/ Catch:\{ Exception \-\> 0x001c, all \-\> 0x0019 \}\lr1.close()     \/\/ Catch:\{ Exception \-\> 0x001c, all \-\> 0x0019 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|SYNTHETIC\lSplitter:B:5:0x0011\l}"];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ Exception \-\> 0x0021 \}\lSplitter:B:5:0x0011\l|byte[] r0 = r0.toByteArray()     \/\/ Catch:\{ Exception \-\> 0x0021 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|com.j256.ormlite.misc.IOUtils.closeQuietly((java.io.Closeable) null)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|RETURN\l|return r0\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:3:0x000b\l|java.lang.Throwable r5 = th\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|r4 = r1\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:3:0x000b\l|java.lang.Exception r0 = e\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|r4 = r1\l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:15:0x0022\l|java.lang.Throwable r5 = th\l}"];
Node_14 [shape=record,label="{14\:\ 0x0021|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:1:0x0001\l|java.lang.Exception r0 = e\l}"];
Node_15 [shape=record,label="{15\:\ 0x0022|SYNTHETIC\lPHI: r0 r4 \l  PHI: (r0v0 'e' java.lang.Exception) = (r0v1 'e' java.lang.Exception), (r0v3 'e' java.lang.Exception) binds: [B:14:0x0021, B:12:0x001d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 java.io.ObjectOutputStream) = (r4v1 java.io.ObjectOutputStream), (r4v4 java.io.ObjectOutputStream) binds: [B:14:0x0021, B:12:0x001d] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:15:0x0022\l}"];
Node_16 [shape=record,label="{16\:\ ?|Catch:\{ all \-\> 0x001f \}\lSplitter:B:15:0x0022\l|java.lang.StringBuilder r1 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x001f \}\lr1.append(\"Could not write serialized object to byte array: \")     \/\/ Catch:\{ all \-\> 0x001f \}\lr1.append(r5)     \/\/ Catch:\{ all \-\> 0x001f \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0037|Catch:\{ all \-\> 0x001f \}\l|throw com.j256.ormlite.misc.SqlExceptionUtil.create(r1.toString(), r0)     \/\/ Catch:\{ all \-\> 0x001f \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x0038|PHI: r4 r5 \l  PHI: (r4v2 java.io.ObjectOutputStream) = (r4v3 java.io.ObjectOutputStream), (r4v5 java.io.ObjectOutputStream) binds: [B:13:0x001f, B:10:0x001a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'th' java.lang.Throwable) = (r5v4 'th' java.lang.Throwable), (r5v5 'th' java.lang.Throwable) binds: [B:13:0x001f, B:10:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|com.j256.ormlite.misc.IOUtils.closeQuietly(r4)\l}"];
Node_19 [shape=record,label="{19\:\ 0x003b|throw r5\l}"];
MethodNode[shape=record,label="{public java.lang.Object com.j256.ormlite.field.types.SerializableType.javaToSqlArg((r3v0 'this' com.j256.ormlite.field.types.SerializableType A[IMMUTABLE_TYPE, THIS]), (r4v0 com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_3 -> Node_11;
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_4 -> Node_11;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_18;
Node_11 -> Node_12;
Node_12 -> Node_15;
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_13;
Node_16 -> Node_17;
Node_18 -> Node_19;
}

