digraph "CFG forcom.j256.ormlite.field.types.BaseEnumType.enumVal(Lcom\/j256\/ormlite\/field\/FieldType;Ljava\/lang\/Object;Ljava\/lang\/Enum;Ljava\/lang\/Enum;)Ljava\/lang\/Enum;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0003 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: RETURN  (r3 I:java.lang.Enum\<?\>) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0006 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: RETURN  (r4 I:java.lang.Enum\<?\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: NEW_INSTANCE  (r3 I:java.sql.SQLException) =  java.sql.SQLException \l0x0008: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000a: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000d: CONST_STR  (r0 I:java.lang.String) =  \"Cannot get enum value of '\" \l0x000f: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0012: INVOKE  (r4 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0015: CONST_STR  (r2 I:java.lang.String) =  \"' for field \" \l0x0017: INVOKE  (r4 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001a: INVOKE  (r4 I:java.lang.StringBuilder), (r1 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x001d: INVOKE  (r1 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0021: INVOKE  (r3 I:java.sql.SQLException), (r1 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected static java.lang.Enum\<?\> com.j256.ormlite.field.types.BaseEnumType.enumVal((r1 I:com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Enum\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Enum\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/field\/FieldType;, Ljava\/lang\/Object;, Ljava\/lang\/Enum\<, *\>;, Ljava\/lang\/Enum\<, *\>;), Ljava\/lang\/Enum\<, *\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_4 -> Node_5;
}

