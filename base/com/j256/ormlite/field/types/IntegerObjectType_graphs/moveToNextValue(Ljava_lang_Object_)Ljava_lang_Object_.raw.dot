digraph "CFG forcom.j256.ormlite.field.types.IntegerObjectType.moveToNextValue(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: INVOKE  (r2 I:java.lang.Integer) = (r0 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: RETURN  (r2 I:java.lang.Object) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: CHECK_CAST  (r2 I:java.lang.Integer) = (java.lang.Integer) (r2 I:?[OBJECT, ARRAY]) \l0x000a: INVOKE  (r2 I:int) = (r2 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x000e: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int) \l0x000f: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: RETURN  (r2 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public java.lang.Object com.j256.ormlite.field.types.IntegerObjectType.moveToNextValue((r1 'this' I:com.j256.ormlite.field.types.IntegerObjectType A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

