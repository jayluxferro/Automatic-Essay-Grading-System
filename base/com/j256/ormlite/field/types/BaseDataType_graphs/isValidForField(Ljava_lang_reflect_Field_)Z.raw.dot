digraph "CFG forcom.j256.ormlite.field.types.BaseDataType.isValidForField(Ljava\/lang\/reflect\/Field;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Class\<?\>[]) = (r7 I:com.j256.ormlite.field.types.BaseDataType) com.j256.ormlite.field.types.BaseDataType.classes java.lang.Class[] \l0x0002: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l0x0003: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IGET  (r0 I:java.lang.Class\<?\>[]) = (r7 I:com.j256.ormlite.field.types.BaseDataType) com.j256.ormlite.field.types.BaseDataType.classes java.lang.Class[] \l0x0009: ARRAY_LENGTH  (r2 I:int) = (r0 I:?[]) \l0x000a: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r4 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:9:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: AGET  (r5 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x0010: INVOKE  (r6 I:java.lang.Class) = (r8 I:java.lang.reflect.Field) java.lang.reflect.Field.getType():java.lang.Class type: VIRTUAL \l0x0014: INVOKE  (r5 I:boolean) = (r5 I:java.lang.Class), (r6 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001b \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: RETURN  (r1 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: RETURN  (r3 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.j256.ormlite.field.types.BaseDataType.isValidForField((r7 'this' I:com.j256.ormlite.field.types.BaseDataType A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.reflect.Field A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_4;
}

