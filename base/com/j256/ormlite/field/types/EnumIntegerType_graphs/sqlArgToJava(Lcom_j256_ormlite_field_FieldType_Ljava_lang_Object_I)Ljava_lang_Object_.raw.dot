digraph "CFG forcom.j256.ormlite.field.types.EnumIntegerType.sqlArgToJava(Lcom\/j256\/ormlite\/field\/FieldType;Ljava\/lang\/Object;I)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0003 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: RETURN  (r3 I:java.lang.Object) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: CHECK_CAST  (r3 I:java.lang.Integer) = (java.lang.Integer) (r3 I:?[OBJECT, ARRAY]) \l0x0005: INVOKE  (r4 I:java.lang.Object) = (r2 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getDataTypeConfigObj():java.lang.Object type: VIRTUAL \l0x0009: CHECK_CAST  (r4 I:java.util.Map) = (java.util.Map) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: INVOKE  (r0 I:java.lang.Enum) = (r2 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getUnknownEnumVal():java.lang.Enum type: VIRTUAL \l0x0012: INVOKE  (r2 I:java.lang.Enum) = \l  (r2 I:com.j256.ormlite.field.FieldType)\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Enum)\l  (r0 I:java.lang.Enum)\l com.j256.ormlite.field.types.EnumIntegerType.enumVal(com.j256.ormlite.field.FieldType, java.lang.Object, java.lang.Enum, java.lang.Enum):java.lang.Enum type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: RETURN  (r2 I:java.lang.Object) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.Map), (r3 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x001b: CHECK_CAST  (r4 I:java.lang.Enum) = (java.lang.Enum) (r4 I:?[OBJECT, ARRAY]) \l0x001d: INVOKE  (r0 I:java.lang.Enum) = (r2 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getUnknownEnumVal():java.lang.Enum type: VIRTUAL \l0x0021: INVOKE  (r2 I:java.lang.Enum) = \l  (r2 I:com.j256.ormlite.field.FieldType)\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Enum)\l  (r0 I:java.lang.Enum)\l com.j256.ormlite.field.types.EnumIntegerType.enumVal(com.j256.ormlite.field.FieldType, java.lang.Object, java.lang.Enum, java.lang.Enum):java.lang.Enum type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: RETURN  (r2 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public java.lang.Object com.j256.ormlite.field.types.EnumIntegerType.sqlArgToJava((r1 'this' I:com.j256.ormlite.field.types.EnumIntegerType A[IMMUTABLE_TYPE, THIS]), (r2 I:com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

