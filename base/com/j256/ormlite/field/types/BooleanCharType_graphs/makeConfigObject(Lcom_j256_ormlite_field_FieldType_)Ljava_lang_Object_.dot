digraph "CFG forcom.j256.ormlite.field.types.BooleanCharType.makeConfigObject(Lcom\/j256\/ormlite\/field\/FieldType;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r4 = r4.getFormat()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r4 != null) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return DEFAULT_TRUE_FALSE_FORMAT\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009}"];
Node_4 [shape=record,label="{4\:\ 0x000e|if (r4.length() != 2) goto L_0x001d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010}"];
Node_6 [shape=record,label="{6\:\ 0x001a|if (r4.charAt(0) == r4.charAt(1)) goto L_0x001d\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|RETURN\l|return r4\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Invalid boolean format must have 2 different characters that represent true\/false like \"10\" or \"tf\": \")\lr1.append(r4)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|throw new java.sql.SQLException(r1.toString())\l}"];
MethodNode[shape=record,label="{public java.lang.Object com.j256.ormlite.field.types.BooleanCharType.makeConfigObject((r3v0 'this' com.j256.ormlite.field.types.BooleanCharType A[IMMUTABLE_TYPE, THIS]), (r4v0 com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
}

