digraph "CFG forcom.j256.ormlite.field.types.StringBytesType.sqlArgToJava(Lcom\/j256\/ormlite\/field\/FieldType;Ljava\/lang\/Object;I)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CHECK_CAST  (r3 I:byte[]) = (byte[]) (r3 I:?[OBJECT, ARRAY]) \l0x0002: INVOKE  (r2 I:java.lang.String) = \l  (r1 I:com.j256.ormlite.field.types.StringBytesType)\l  (r2 I:com.j256.ormlite.field.FieldType)\l com.j256.ormlite.field.types.StringBytesType.getCharsetName(com.j256.ormlite.field.FieldType):java.lang.String type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|SYNTHETIC\lSplitter:B:1:0x0006\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0006\l|0x0006: NEW_INSTANCE  (r4 I:java.lang.String) =  java.lang.String A[Catch:\{ UnsupportedEncodingException \-\> 0x000c \}, TRY_ENTER]\l0x0008: INVOKE  \l  (r4 I:java.lang.String)\l  (r3 I:byte[])\l  (r2 I:java.lang.String)\l java.lang.String.\<init\>(byte[], java.lang.String):void type: DIRECT A[Catch:\{ UnsupportedEncodingException \-\> 0x000c \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: RETURN  (r4 I:java.lang.Object) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|ExcHandler: UnsupportedEncodingException null\lSplitter:B:1:0x0006\l|0x000c: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000f: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0012: CONST_STR  (r0 I:java.lang.String) =  \"Could not convert string with charset name: \" \l0x0014: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0017: INVOKE  (r4 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001a: INVOKE  (r2 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x001e: INVOKE  (r2 I:java.sql.SQLException) = (r2 I:java.lang.String), (r3 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.lang.Object com.j256.ormlite.field.types.StringBytesType.sqlArgToJava((r1 'this' I:com.j256.ormlite.field.types.StringBytesType A[IMMUTABLE_TYPE, THIS]), (r2 I:com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

