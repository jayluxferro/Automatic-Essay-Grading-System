digraph "CFG forcom.j256.ormlite.field.FieldType.createFieldType(Lcom\/j256\/ormlite\/support\/ConnectionSource;Ljava\/lang\/String;Ljava\/lang\/reflect\/Field;Ljava\/lang\/Class;)Lcom\/j256\/ormlite\/field\/FieldType;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.j256.ormlite.db.DatabaseType) = (r7 I:com.j256.ormlite.support.ConnectionSource) com.j256.ormlite.support.ConnectionSource.getDatabaseType():com.j256.ormlite.db.DatabaseType type: INTERFACE \l0x0004: INVOKE  (r5 I:com.j256.ormlite.field.DatabaseFieldConfig) = \l  (r0 I:com.j256.ormlite.db.DatabaseType)\l  (r8 I:java.lang.String)\l  (r9 I:java.lang.reflect.Field)\l com.j256.ormlite.field.DatabaseFieldConfig.fromField(com.j256.ormlite.db.DatabaseType, java.lang.String, java.lang.reflect.Field):com.j256.ormlite.field.DatabaseFieldConfig type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: RETURN  (r7 I:com.j256.ormlite.field.FieldType) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:com.j256.ormlite.field.FieldType) =  com.j256.ormlite.field.FieldType \l0x000e: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x000f: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0010: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0011: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0012: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0013: INVOKE  \l  (r1 I:com.j256.ormlite.field.FieldType)\l  (r2 I:com.j256.ormlite.support.ConnectionSource)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.reflect.Field)\l  (r5 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r6 I:java.lang.Class)\l com.j256.ormlite.field.FieldType.\<init\>(com.j256.ormlite.support.ConnectionSource, java.lang.String, java.lang.reflect.Field, com.j256.ormlite.field.DatabaseFieldConfig, java.lang.Class):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: RETURN  (r0 I:com.j256.ormlite.field.FieldType) \l}"];
MethodNode[shape=record,label="{public static com.j256.ormlite.field.FieldType com.j256.ormlite.field.FieldType.createFieldType((r7 I:com.j256.ormlite.support.ConnectionSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.reflect.Field A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/support\/ConnectionSource;, Ljava\/lang\/String;, Ljava\/lang\/reflect\/Field;, Ljava\/lang\/Class\<, *\>;), Lcom\/j256\/ormlite\/field\/FieldType;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

