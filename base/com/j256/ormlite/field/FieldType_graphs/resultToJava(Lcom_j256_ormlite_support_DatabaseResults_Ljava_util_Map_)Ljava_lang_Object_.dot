digraph "CFG forcom.j256.ormlite.field.FieldType.resultToJava(Lcom\/j256\/ormlite\/support\/DatabaseResults;Ljava\/util\/Map;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.Integer r0 = r5.get(r3.columnName)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0 != null) goto L_0x0019\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|java.lang.Integer r0 = java.lang.Integer.valueOf(r4.findColumn(r3.columnName))\lr5.put(r3.columnName, r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|PHI: r0 \l  PHI: (r0v3 java.lang.Integer) = (r0v2 java.lang.Integer), (r0v13 java.lang.Integer) binds: [B:1:0x0008, B:2:0x000a] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Object r5 = r3.fieldConverter.resultToJava(r3, r4, r0.intValue())\l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|if (r3.fieldConfig.isForeign() == false) goto L_0x0037\l}"];
Node_5 [shape=record,label="{5\:\ 0x002c}"];
Node_6 [shape=record,label="{6\:\ 0x0034|if (r4.wasNull(r0.intValue()) == false) goto L_0x0087\l}"];
Node_7 [shape=record,label="{7\:\ 0x0036|RETURN\l|return null\l}"];
Node_8 [shape=record,label="{8\:\ 0x0037}"];
Node_9 [shape=record,label="{9\:\ 0x003d|if (r3.dataPersister.isPrimitive() == false) goto L_0x0074\l}"];
Node_10 [shape=record,label="{10\:\ 0x003f}"];
Node_11 [shape=record,label="{11\:\ 0x0045|if (r3.fieldConfig.isThrowIfNull() == false) goto L_0x0087\l}"];
Node_12 [shape=record,label="{12\:\ 0x0047}"];
Node_13 [shape=record,label="{13\:\ 0x004f|if (r4.wasNull(r0.intValue()) != false) goto L_0x0052\l}"];
Node_14 [shape=record,label="{14\:\ 0x0052|java.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(\"Results value for primitive field '\")\lr5.append(r3.field.getName())\lr5.append(\"' was an invalid null value\")\l}"];
Node_15 [shape=record,label="{15\:\ 0x0073|throw new java.sql.SQLException(r5.toString())\l}"];
Node_16 [shape=record,label="{16\:\ 0x0074}"];
Node_17 [shape=record,label="{17\:\ 0x007a|if (r3.fieldConverter.isStreamType() != false) goto L_0x0087\l}"];
Node_18 [shape=record,label="{18\:\ 0x007c}"];
Node_19 [shape=record,label="{19\:\ 0x0084|if (r4.wasNull(r0.intValue()) == false) goto L_0x0087\l}"];
Node_20 [shape=record,label="{20\:\ 0x0086|RETURN\l|return null\l}"];
Node_21 [shape=record,label="{21\:\ 0x0087|RETURN\l|return r5\l}"];
MethodNode[shape=record,label="{public T com.j256.ormlite.field.FieldType.resultToJava((r3v0 'this' com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, THIS]), (r4v0 com.j256.ormlite.support.DatabaseResults A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.util.Map\<java.lang.String, java.lang.Integer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/support\/DatabaseResults;, Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/lang\/Integer;, \>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_21[style=dashed];
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
}

