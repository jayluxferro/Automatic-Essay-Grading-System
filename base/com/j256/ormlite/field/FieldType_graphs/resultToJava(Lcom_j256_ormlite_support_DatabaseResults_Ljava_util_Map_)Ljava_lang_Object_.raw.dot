digraph "CFG forcom.j256.ormlite.field.FieldType.resultToJava(Lcom\/j256\/ormlite\/support\/DatabaseResults;Ljava\/util\/Map;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.String) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.columnName java.lang.String \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r5 I:java.util.Map), (r0 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0006: CHECK_CAST  (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0019 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r0 I:java.lang.String) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.columnName java.lang.String \l0x000c: INVOKE  (r0 I:int) = \l  (r4 I:com.j256.ormlite.support.DatabaseResults)\l  (r0 I:java.lang.String)\l com.j256.ormlite.support.DatabaseResults.findColumn(java.lang.String):int type: INTERFACE \l0x0010: INVOKE  (r0 I:java.lang.Integer) = (r0 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0014: IGET  (r1 I:java.lang.String) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.columnName java.lang.String \l0x0016: INVOKE  \l  (r5 I:java.util.Map)\l  (r1 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: IGET  (r5 I:com.j256.ormlite.field.FieldConverter) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldConverter com.j256.ormlite.field.FieldConverter \l0x001b: INVOKE  (r1 I:int) = (r0 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x001f: INVOKE  (r5 I:java.lang.Object) = \l  (r5 I:com.j256.ormlite.field.FieldConverter)\l  (r3 I:com.j256.ormlite.field.FieldType)\l  (r4 I:com.j256.ormlite.support.DatabaseResults)\l  (r1 I:int)\l com.j256.ormlite.field.FieldConverter.resultToJava(com.j256.ormlite.field.FieldType, com.j256.ormlite.support.DatabaseResults, int):java.lang.Object type: INTERFACE \l0x0023: IGET  (r1 I:com.j256.ormlite.field.DatabaseFieldConfig) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldConfig com.j256.ormlite.field.DatabaseFieldConfig \l0x0025: INVOKE  (r1 I:boolean) = (r1 I:com.j256.ormlite.field.DatabaseFieldConfig) com.j256.ormlite.field.DatabaseFieldConfig.isForeign():boolean type: VIRTUAL \l0x0029: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|0x002a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0037 \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0030: INVOKE  (r4 I:boolean) = (r4 I:com.j256.ormlite.support.DatabaseResults), (r0 I:int) com.j256.ormlite.support.DatabaseResults.wasNull(int):boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0034|0x0034: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0087 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0036|0x0036: RETURN  (r2 I:T) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|0x0037: IGET  (r1 I:com.j256.ormlite.field.DataPersister) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.dataPersister com.j256.ormlite.field.DataPersister \l0x0039: INVOKE  (r1 I:boolean) = (r1 I:com.j256.ormlite.field.DataPersister) com.j256.ormlite.field.DataPersister.isPrimitive():boolean type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|0x003d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0074 \l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|0x003f: IGET  (r1 I:com.j256.ormlite.field.DatabaseFieldConfig) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldConfig com.j256.ormlite.field.DatabaseFieldConfig \l0x0041: INVOKE  (r1 I:boolean) = (r1 I:com.j256.ormlite.field.DatabaseFieldConfig) com.j256.ormlite.field.DatabaseFieldConfig.isThrowIfNull():boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0045|0x0045: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0087 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0047|0x0047: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x004b: INVOKE  (r4 I:boolean) = (r4 I:com.j256.ormlite.support.DatabaseResults), (r0 I:int) com.j256.ormlite.support.DatabaseResults.wasNull(int):boolean type: INTERFACE \l}"];
Node_13 [shape=record,label="{13\:\ 0x004f|0x004f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0052 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0052|0x0052: NEW_INSTANCE  (r4 I:java.sql.SQLException) =  java.sql.SQLException \l0x0054: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0056: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0059: CONST_STR  (r0 I:java.lang.String) =  \"Results value for primitive field '\" \l0x005b: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005e: IGET  (r0 I:java.lang.reflect.Field) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.field java.lang.reflect.Field \l0x0060: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.reflect.Field) java.lang.reflect.Field.getName():java.lang.String type: VIRTUAL \l0x0064: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0067: CONST_STR  (r0 I:java.lang.String) =  \"' was an invalid null value\" \l0x0069: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006c: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0070: INVOKE  (r4 I:java.sql.SQLException), (r5 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0073|0x0073: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0074|0x0074: IGET  (r1 I:com.j256.ormlite.field.FieldConverter) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldConverter com.j256.ormlite.field.FieldConverter \l0x0076: INVOKE  (r1 I:boolean) = (r1 I:com.j256.ormlite.field.FieldConverter) com.j256.ormlite.field.FieldConverter.isStreamType():boolean type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x007a|0x007a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0087 \l}"];
Node_19 [shape=record,label="{19\:\ 0x007c|0x007c: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0080: INVOKE  (r4 I:boolean) = (r4 I:com.j256.ormlite.support.DatabaseResults), (r0 I:int) com.j256.ormlite.support.DatabaseResults.wasNull(int):boolean type: INTERFACE \l}"];
Node_20 [shape=record,label="{20\:\ 0x0084|0x0084: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0087 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0086|0x0086: RETURN  (r2 I:T) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0087|0x0087: RETURN  (r5 I:T) \l}"];
MethodNode[shape=record,label="{public T com.j256.ormlite.field.FieldType.resultToJava((r3 'this' I:com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, THIS]), (r4 I:com.j256.ormlite.support.DatabaseResults A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.util.Map\<java.lang.String, java.lang.Integer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/support\/DatabaseResults;, Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/lang\/Integer;, \>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_22;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_22;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_22[style=dashed];
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
}

