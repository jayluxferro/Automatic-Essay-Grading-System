digraph "CFG forcom.j256.ormlite.field.FieldType.extractRawJavaFieldValue(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.fieldGetMethod != null) goto L_0x0022\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|SYNTHETIC\lSplitter:B:2:0x0004\l}"];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ Exception \-\> 0x000b \}\lSplitter:B:2:0x0004\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|ExcHandler: Exception (r3v4 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:2:0x0004\l|java.lang.Exception r3 = move\-exception\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Could not get field value for \")\lr0.append(r2)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|throw com.j256.ormlite.misc.SqlExceptionUtil.create(r0.toString(), r3)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|SYNTHETIC\lSplitter:B:7:0x0022\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ Exception \-\> 0x002c \}\lSplitter:B:7:0x0022\l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|ExcHandler: Exception (r3v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:7:0x0022\l|java.lang.Exception r3 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Could not call \")\lr0.append(r2.fieldGetMethod)\lr0.append(\" for \")\lr0.append(r2)\l}"];
Node_11 [shape=record,label="{11\:\ 0x004c|throw com.j256.ormlite.misc.SqlExceptionUtil.create(r0.toString(), r3)\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r2.fieldGetMethod.invoke(r3, new java.lang.Object[0])\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return r2.field.get(r3)\l}"];
MethodNode[shape=record,label="{public FV com.j256.ormlite.field.FieldType.extractRawJavaFieldValue((r2v0 'this' com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<FV:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Object;, )TFV;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

