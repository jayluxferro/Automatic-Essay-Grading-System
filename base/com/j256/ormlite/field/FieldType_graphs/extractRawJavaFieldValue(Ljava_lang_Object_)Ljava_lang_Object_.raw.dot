digraph "CFG forcom.j256.ormlite.field.FieldType.extractRawJavaFieldValue(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.reflect.Method) = (r2 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldGetMethod java.lang.reflect.Method \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|SYNTHETIC\lSplitter:B:2:0x0004\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0004\l|0x0004: IGET  (r0 I:java.lang.reflect.Field) = (r2 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.field java.lang.reflect.Field A[Catch:\{ Exception \-\> 0x000b \}, TRY_ENTER]\l0x0006: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.lang.reflect.Field), (r3 I:java.lang.Object) java.lang.reflect.Field.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ Exception \-\> 0x000b \}]\l0x0009: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|ExcHandler: Exception null\lSplitter:B:2:0x0004\l|0x000b: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000e: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0011: CONST_STR  (r1 I:java.lang.String) =  \"Could not get field value for \" \l0x0013: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0016: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0019: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x001d: INVOKE  (r3 I:java.sql.SQLException) = (r0 I:java.lang.String), (r3 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|SYNTHETIC\lSplitter:B:8:0x0022\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0022\l|0x0022: IGET  (r0 I:java.lang.reflect.Method) = (r2 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldGetMethod java.lang.reflect.Method A[Catch:\{ Exception \-\> 0x002c \}, TRY_ENTER]\l0x0024: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x002c \}]\l0x0025: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ Exception \-\> 0x002c \}]\l0x0027: INVOKE  (r3 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Method)\l  (r3 I:java.lang.Object)\l  (r1 I:java.lang.Object[])\l java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ Exception \-\> 0x002c \}]\l0x002a: NOP   A[TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: RETURN  (r3 I:FV) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|ExcHandler: Exception null\lSplitter:B:8:0x0022\l|0x002c: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|0x002d: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002f: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0032: CONST_STR  (r1 I:java.lang.String) =  \"Could not call \" \l0x0034: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0037: IGET  (r1 I:java.lang.reflect.Method) = (r2 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldGetMethod java.lang.reflect.Method \l0x0039: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x003c: CONST_STR  (r1 I:java.lang.String) =  \" for \" \l0x003e: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0041: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0044: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0048: INVOKE  (r3 I:java.sql.SQLException) = (r0 I:java.lang.String), (r3 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x004c|0x004c: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public FV com.j256.ormlite.field.FieldType.extractRawJavaFieldValue((r2 'this' I:com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<FV:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Object;, )TFV;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

