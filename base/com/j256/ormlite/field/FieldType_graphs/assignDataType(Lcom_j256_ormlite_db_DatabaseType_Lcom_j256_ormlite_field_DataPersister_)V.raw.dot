digraph "CFG forcom.j256.ormlite.field.FieldType.assignDataType(Lcom\/j256\/ormlite\/db\/DatabaseType;Lcom\/j256\/ormlite\/field\/DataPersister;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:com.j256.ormlite.field.DataPersister) = \l  (r5 I:com.j256.ormlite.db.DatabaseType)\l  (r6 I:com.j256.ormlite.field.DataPersister)\l  (r4 I:com.j256.ormlite.field.FieldType)\l com.j256.ormlite.db.DatabaseType.getDataPersister(com.j256.ormlite.field.DataPersister, com.j256.ormlite.field.FieldType):com.j256.ormlite.field.DataPersister type: INTERFACE \l0x0004: IPUT  \l  (r6 I:com.j256.ormlite.field.DataPersister)\l  (r4 I:com.j256.ormlite.field.FieldType)\l com.j256.ormlite.field.FieldType.dataPersister com.j256.ormlite.field.DataPersister \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0036 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r5 I:com.j256.ormlite.field.DatabaseFieldConfig) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldConfig com.j256.ormlite.field.DatabaseFieldConfig \l0x000a: INVOKE  (r5 I:boolean) = (r5 I:com.j256.ormlite.field.DatabaseFieldConfig) com.j256.ormlite.field.DatabaseFieldConfig.isForeign():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0035 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IGET  (r5 I:com.j256.ormlite.field.DatabaseFieldConfig) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldConfig com.j256.ormlite.field.DatabaseFieldConfig \l0x0012: INVOKE  (r5 I:boolean) = (r5 I:com.j256.ormlite.field.DatabaseFieldConfig) com.j256.ormlite.field.DatabaseFieldConfig.isForeignCollection():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0019 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: NEW_INSTANCE  (r5 I:java.sql.SQLException) =  java.sql.SQLException \l0x001b: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001d: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0020: CONST_STR  (r0 I:java.lang.String) =  \"Data persister for field \" \l0x0022: INVOKE  (r6 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0025: INVOKE  (r6 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0028: CONST_STR  (r0 I:java.lang.String) =  \" is null but the field is not a foreign or foreignCollection\" \l0x002a: INVOKE  (r6 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002d: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0031: INVOKE  (r5 I:java.sql.SQLException), (r6 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|0x0034: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|0x0035: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: INVOKE  (r5 I:com.j256.ormlite.field.FieldConverter) = \l  (r5 I:com.j256.ormlite.db.DatabaseType)\l  (r6 I:com.j256.ormlite.field.DataPersister)\l  (r4 I:com.j256.ormlite.field.FieldType)\l com.j256.ormlite.db.DatabaseType.getFieldConverter(com.j256.ormlite.field.DataPersister, com.j256.ormlite.field.FieldType):com.j256.ormlite.field.FieldConverter type: INTERFACE \l0x003a: IPUT  \l  (r5 I:com.j256.ormlite.field.FieldConverter)\l  (r4 I:com.j256.ormlite.field.FieldType)\l com.j256.ormlite.field.FieldType.fieldConverter com.j256.ormlite.field.FieldConverter \l0x003c: IGET  (r5 I:boolean) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.isGeneratedId boolean \l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|0x003e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x00a7 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|0x0040: INVOKE  (r5 I:boolean) = (r6 I:com.j256.ormlite.field.DataPersister) com.j256.ormlite.field.DataPersister.isValidGeneratedType():boolean type: INTERFACE \l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|0x0044: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x00a7 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|0x0046: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0048: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x004b: CONST_STR  (r0 I:java.lang.String) =  \"Generated\-id field '\" \l0x004d: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0050: IGET  (r0 I:java.lang.reflect.Field) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.field java.lang.reflect.Field \l0x0052: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.reflect.Field) java.lang.reflect.Field.getName():java.lang.String type: VIRTUAL \l0x0056: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0059: CONST_STR  (r0 I:java.lang.String) =  \"' in \" \l0x005b: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005e: IGET  (r0 I:java.lang.reflect.Field) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.field java.lang.reflect.Field \l0x0060: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.reflect.Field) java.lang.reflect.Field.getDeclaringClass():java.lang.Class type: VIRTUAL \l0x0064: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x0068: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006b: CONST_STR  (r0 I:java.lang.String) =  \" can't be type \" \l0x006d: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0070: INVOKE  (r6 I:com.j256.ormlite.field.SqlType) = (r6 I:com.j256.ormlite.field.DataPersister) com.j256.ormlite.field.DataPersister.getSqlType():com.j256.ormlite.field.SqlType type: INTERFACE \l0x0074: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0077: CONST_STR  (r6 I:java.lang.String) =  \".  Must be one of: \" \l0x0079: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007c: INVOKE  (r6 I:com.j256.ormlite.field.DataType[]) =  com.j256.ormlite.field.DataType.values():com.j256.ormlite.field.DataType[] type: STATIC \l0x0080: ARRAY_LENGTH  (r0 I:int) = (r6 I:?[]) \l0x0081: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0082|0x0082: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:22:0x009d \l}"];
Node_16 [shape=record,label="{16\:\ 0x0084|0x0084: AGET  (r2 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0086: INVOKE  (r3 I:com.j256.ormlite.field.DataPersister) = (r2 I:com.j256.ormlite.field.DataType) com.j256.ormlite.field.DataType.getDataPersister():com.j256.ormlite.field.DataPersister type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x008a|0x008a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x009a \l}"];
Node_18 [shape=record,label="{18\:\ 0x008c|0x008c: INVOKE  (r3 I:boolean) = (r3 I:com.j256.ormlite.field.DataPersister) com.j256.ormlite.field.DataPersister.isValidGeneratedType():boolean type: INTERFACE \l}"];
Node_19 [shape=record,label="{19\:\ 0x0090|0x0090: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x009a \l}"];
Node_20 [shape=record,label="{20\:\ 0x0092|0x0092: INVOKE  (r5 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0095: CONST  (r2 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0097: INVOKE  (r5 I:java.lang.StringBuilder), (r2 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x009a|0x009a: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x009d|0x009d: NEW_INSTANCE  (r6 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x009f: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00a3: INVOKE  \l  (r6 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x00a6|0x00a6: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x00a7|0x00a7: IGET  (r5 I:com.j256.ormlite.field.DatabaseFieldConfig) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldConfig com.j256.ormlite.field.DatabaseFieldConfig \l0x00a9: INVOKE  (r5 I:boolean) = (r5 I:com.j256.ormlite.field.DatabaseFieldConfig) com.j256.ormlite.field.DatabaseFieldConfig.isThrowIfNull():boolean type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x00ad|0x00ad: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00d8 \l}"];
Node_26 [shape=record,label="{26\:\ 0x00af|0x00af: INVOKE  (r5 I:boolean) = (r6 I:com.j256.ormlite.field.DataPersister) com.j256.ormlite.field.DataPersister.isPrimitive():boolean type: INTERFACE \l}"];
Node_27 [shape=record,label="{27\:\ 0x00b3|0x00b3: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00b6 \l}"];
Node_29 [shape=record,label="{29\:\ 0x00b6|0x00b6: NEW_INSTANCE  (r5 I:java.sql.SQLException) =  java.sql.SQLException \l0x00b8: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00ba: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00bd: CONST_STR  (r0 I:java.lang.String) =  \"Field \" \l0x00bf: INVOKE  (r6 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c2: IGET  (r0 I:java.lang.reflect.Field) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.field java.lang.reflect.Field \l0x00c4: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.reflect.Field) java.lang.reflect.Field.getName():java.lang.String type: VIRTUAL \l0x00c8: INVOKE  (r6 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00cb: CONST_STR  (r0 I:java.lang.String) =  \" must be a primitive if set with throwIfNull\" \l0x00cd: INVOKE  (r6 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00d0: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00d4: INVOKE  (r5 I:java.sql.SQLException), (r6 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_30 [shape=record,label="{30\:\ 0x00d7|0x00d7: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_31 [shape=record,label="{31\:\ 0x00d8|0x00d8: IGET  (r5 I:boolean) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.isId boolean \l}"];
Node_32 [shape=record,label="{32\:\ 0x00da|0x00da: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x010d \l}"];
Node_33 [shape=record,label="{33\:\ 0x00dc|0x00dc: INVOKE  (r5 I:boolean) = (r6 I:com.j256.ormlite.field.DataPersister) com.j256.ormlite.field.DataPersister.isAppropriateId():boolean type: INTERFACE \l}"];
Node_34 [shape=record,label="{34\:\ 0x00e0|0x00e0: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x00e3 \l}"];
Node_36 [shape=record,label="{36\:\ 0x00e3|0x00e3: NEW_INSTANCE  (r5 I:java.sql.SQLException) =  java.sql.SQLException \l0x00e5: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00e7: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00ea: CONST_STR  (r1 I:java.lang.String) =  \"Field '\" \l0x00ec: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00ef: IGET  (r1 I:java.lang.reflect.Field) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.field java.lang.reflect.Field \l0x00f1: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.reflect.Field) java.lang.reflect.Field.getName():java.lang.String type: VIRTUAL \l0x00f5: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00f8: CONST_STR  (r1 I:java.lang.String) =  \"' is of data type \" \l0x00fa: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00fd: INVOKE  (r0 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0100: CONST_STR  (r6 I:java.lang.String) =  \" which cannot be the ID field\" \l0x0102: INVOKE  (r0 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0105: INVOKE  (r6 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0109: INVOKE  (r5 I:java.sql.SQLException), (r6 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_37 [shape=record,label="{37\:\ 0x010c|0x010c: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_38 [shape=record,label="{38\:\ 0x010d|0x010d: INVOKE  (r5 I:java.lang.Object) = \l  (r6 I:com.j256.ormlite.field.DataPersister)\l  (r4 I:com.j256.ormlite.field.FieldType)\l com.j256.ormlite.field.DataPersister.makeConfigObject(com.j256.ormlite.field.FieldType):java.lang.Object type: INTERFACE \l0x0111: IPUT  \l  (r5 I:java.lang.Object)\l  (r4 I:com.j256.ormlite.field.FieldType)\l com.j256.ormlite.field.FieldType.dataTypeConfigObj java.lang.Object \l0x0113: IGET  (r5 I:com.j256.ormlite.field.DatabaseFieldConfig) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldConfig com.j256.ormlite.field.DatabaseFieldConfig \l0x0115: INVOKE  (r5 I:java.lang.String) = (r5 I:com.j256.ormlite.field.DatabaseFieldConfig) com.j256.ormlite.field.DatabaseFieldConfig.getDefaultValue():java.lang.String type: VIRTUAL \l}"];
Node_39 [shape=record,label="{39\:\ 0x0119|0x0119: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x011f \l}"];
Node_40 [shape=record,label="{40\:\ 0x011b|0x011b: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x011c: IPUT  \l  (r5 I:java.lang.Object)\l  (r4 I:com.j256.ormlite.field.FieldType)\l com.j256.ormlite.field.FieldType.defaultValue java.lang.Object \l}"];
Node_41 [shape=record,label="{41\:\ 0x011f|0x011f: IGET  (r6 I:boolean) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.isGeneratedId boolean \l}"];
Node_42 [shape=record,label="{42\:\ 0x0121|0x0121: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x012c \l}"];
Node_43 [shape=record,label="{43\:\ 0x0123|0x0123: IGET  (r6 I:com.j256.ormlite.field.FieldConverter) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldConverter com.j256.ormlite.field.FieldConverter \l0x0125: INVOKE  (r5 I:java.lang.Object) = \l  (r6 I:com.j256.ormlite.field.FieldConverter)\l  (r4 I:com.j256.ormlite.field.FieldType)\l  (r5 I:java.lang.String)\l com.j256.ormlite.field.FieldConverter.parseDefaultString(com.j256.ormlite.field.FieldType, java.lang.String):java.lang.Object type: INTERFACE \l0x0129: IPUT  \l  (r5 I:java.lang.Object)\l  (r4 I:com.j256.ormlite.field.FieldType)\l com.j256.ormlite.field.FieldType.defaultValue java.lang.Object \l}"];
Node_44 [shape=record,label="{44\:\ 0x012b|0x012b: RETURN   \l}"];
Node_45 [shape=record,label="{45\:\ 0x012c|0x012c: NEW_INSTANCE  (r6 I:java.sql.SQLException) =  java.sql.SQLException \l0x012e: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0130: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0133: CONST_STR  (r1 I:java.lang.String) =  \"Field '\" \l0x0135: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0138: IGET  (r1 I:java.lang.reflect.Field) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.field java.lang.reflect.Field \l0x013a: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.reflect.Field) java.lang.reflect.Field.getName():java.lang.String type: VIRTUAL \l0x013e: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0141: CONST_STR  (r1 I:java.lang.String) =  \"' cannot be a generatedId and have a default value '\" \l0x0143: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0146: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0149: CONST_STR  (r5 I:java.lang.String) =  \"'\" \l0x014b: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x014e: INVOKE  (r5 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0152: INVOKE  (r6 I:java.sql.SQLException), (r5 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_46 [shape=record,label="{46\:\ 0x0155|0x0155: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void com.j256.ormlite.field.FieldType.assignDataType((r4 'this' I:com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, THIS]), (r5 I:com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.j256.ormlite.field.DataPersister A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_24;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_24;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_15;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_31[style=dashed];
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_38;
Node_33 -> Node_34;
Node_34 -> Node_36;
Node_34 -> Node_38[style=dashed];
Node_36 -> Node_37;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_44;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_45;
Node_43 -> Node_44;
Node_45 -> Node_46;
}

