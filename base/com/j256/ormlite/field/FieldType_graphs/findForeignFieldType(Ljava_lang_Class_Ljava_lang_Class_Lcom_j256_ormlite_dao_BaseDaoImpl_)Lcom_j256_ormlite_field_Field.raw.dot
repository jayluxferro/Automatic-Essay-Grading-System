digraph "CFG forcom.j256.ormlite.field.FieldType.findForeignFieldType(Ljava\/lang\/Class;Ljava\/lang\/Class;Lcom\/j256\/ormlite\/dao\/BaseDaoImpl;)Lcom\/j256\/ormlite\/field\/FieldType;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.field.DatabaseFieldConfig) = (r5 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldConfig com.j256.ormlite.field.DatabaseFieldConfig \l0x0002: INVOKE  (r0 I:java.lang.String) = (r0 I:com.j256.ormlite.field.DatabaseFieldConfig) com.j256.ormlite.field.DatabaseFieldConfig.getForeignCollectionForeignFieldName():java.lang.String type: VIRTUAL \l0x0006: INVOKE  (r8 I:com.j256.ormlite.table.TableInfo) = (r8 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.getTableInfo():com.j256.ormlite.table.TableInfo type: VIRTUAL \l0x000a: INVOKE  (r8 I:com.j256.ormlite.field.FieldType[]) = (r8 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getFieldTypes():com.j256.ormlite.field.FieldType[] type: VIRTUAL \l0x000e: ARRAY_LENGTH  (r1 I:int) = (r8 I:?[]) \l0x000f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:16:0x0071 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: AGET  (r3 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0014: INVOKE  (r4 I:java.lang.Class) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getType():java.lang.Class type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x006e \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002a \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: INVOKE  (r4 I:java.lang.reflect.Field) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getField():java.lang.reflect.Field type: VIRTUAL \l0x0020: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.reflect.Field) java.lang.reflect.Field.getName():java.lang.String type: VIRTUAL \l0x0024: INVOKE  (r4 I:boolean) = (r4 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x006e \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: IGET  (r8 I:com.j256.ormlite.field.DatabaseFieldConfig) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldConfig com.j256.ormlite.field.DatabaseFieldConfig \l0x002c: INVOKE  (r8 I:boolean) = (r8 I:com.j256.ormlite.field.DatabaseFieldConfig) com.j256.ormlite.field.DatabaseFieldConfig.isForeign():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x006d \l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|0x0032: IGET  (r8 I:com.j256.ormlite.field.DatabaseFieldConfig) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldConfig com.j256.ormlite.field.DatabaseFieldConfig \l0x0034: INVOKE  (r8 I:boolean) = (r8 I:com.j256.ormlite.field.DatabaseFieldConfig) com.j256.ormlite.field.DatabaseFieldConfig.isForeignAutoRefresh():boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003b \l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: NEW_INSTANCE  (r8 I:java.sql.SQLException) =  java.sql.SQLException \l0x003d: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003f: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0042: CONST_STR  (r1 I:java.lang.String) =  \"Foreign collection object \" \l0x0044: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0047: INVOKE  (r0 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x004a: CONST_STR  (r6 I:java.lang.String) =  \" for field '\" \l0x004c: INVOKE  (r0 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004f: IGET  (r6 I:java.lang.reflect.Field) = (r5 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.field java.lang.reflect.Field \l0x0051: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.reflect.Field) java.lang.reflect.Field.getName():java.lang.String type: VIRTUAL \l0x0055: INVOKE  (r0 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0058: CONST_STR  (r6 I:java.lang.String) =  \"' contains a field of class \" \l0x005a: INVOKE  (r0 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005d: INVOKE  (r0 I:java.lang.StringBuilder), (r7 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0060: CONST_STR  (r6 I:java.lang.String) =  \" but it's not foreign\" \l0x0062: INVOKE  (r0 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0065: INVOKE  (r6 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0069: INVOKE  (r8 I:java.sql.SQLException), (r6 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x006c|0x006c: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x006d|0x006d: RETURN  (r3 I:com.j256.ormlite.field.FieldType) \l}"];
Node_15 [shape=record,label="{15\:\ 0x006e|0x006e: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0071|0x0071: NEW_INSTANCE  (r8 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0073: INVOKE  (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0076: CONST_STR  (r1 I:java.lang.String) =  \"Foreign collection class \" \l0x0078: INVOKE  (r8 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007b: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.Class) java.lang.Class.getName():java.lang.String type: VIRTUAL \l0x007f: INVOKE  (r8 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0082: CONST_STR  (r6 I:java.lang.String) =  \" for field '\" \l0x0084: INVOKE  (r8 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0087: IGET  (r6 I:java.lang.reflect.Field) = (r5 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.field java.lang.reflect.Field \l0x0089: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.reflect.Field) java.lang.reflect.Field.getName():java.lang.String type: VIRTUAL \l0x008d: INVOKE  (r8 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0090: CONST_STR  (r6 I:java.lang.String) =  \"' column\-name does not contain a foreign field\" \l0x0092: INVOKE  (r8 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0095|0x0095: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x00a4 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0097|0x0097: CONST_STR  (r6 I:java.lang.String) =  \" named '\" \l0x0099: INVOKE  (r8 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009c: INVOKE  (r8 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009f: CONST  (r6 I:?[int, float, short, byte, char]) = (39 ?[int, float, short, byte, char]) \l0x00a1: INVOKE  (r8 I:java.lang.StringBuilder), (r6 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x00a4|0x00a4: CONST_STR  (r6 I:java.lang.String) =  \" of class \" \l0x00a6: INVOKE  (r8 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a9: INVOKE  (r6 I:java.lang.String) = (r7 I:java.lang.Class) java.lang.Class.getName():java.lang.String type: VIRTUAL \l0x00ad: INVOKE  (r8 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00b0: NEW_INSTANCE  (r6 I:java.sql.SQLException) =  java.sql.SQLException \l0x00b2: INVOKE  (r7 I:java.lang.String) = (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00b6: INVOKE  (r6 I:java.sql.SQLException), (r7 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x00b9|0x00b9: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private com.j256.ormlite.field.FieldType com.j256.ormlite.field.FieldType.findForeignFieldType((r5 'this' I:com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.j256.ormlite.dao.BaseDaoImpl\<?, ?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/Class\<, *\>;, Ljava\/lang\/Class\<, *\>;, Lcom\/j256\/ormlite\/dao\/BaseDaoImpl\<, **\>;), Lcom\/j256\/ormlite\/field\/FieldType;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_14[style=dashed];
Node_12 -> Node_13;
Node_15 -> Node_1;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
}

