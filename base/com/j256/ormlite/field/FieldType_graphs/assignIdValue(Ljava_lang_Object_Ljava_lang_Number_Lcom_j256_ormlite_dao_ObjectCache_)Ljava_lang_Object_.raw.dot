digraph "CFG forcom.j256.ormlite.field.FieldType.assignIdValue(Ljava\/lang\/Object;Ljava\/lang\/Number;Lcom\/j256\/ormlite\/dao\/ObjectCache;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.field.DataPersister) = (r1 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.dataPersister com.j256.ormlite.field.DataPersister \l0x0002: INVOKE  (r3 I:java.lang.Object) = \l  (r0 I:com.j256.ormlite.field.DataPersister)\l  (r3 I:java.lang.Number)\l com.j256.ormlite.field.DataPersister.convertIdNumber(java.lang.Number):java.lang.Object type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: INVOKE  \l  (r1 I:com.j256.ormlite.field.FieldType)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l  (r0 I:boolean)\l  (r4 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.field.FieldType.assignField(java.lang.Object, java.lang.Object, boolean, com.j256.ormlite.dao.ObjectCache):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN  (r3 I:java.lang.Object) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: NEW_INSTANCE  (r2 I:java.sql.SQLException) =  java.sql.SQLException \l0x000f: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0011: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0014: CONST_STR  (r4 I:java.lang.String) =  \"Invalid class \" \l0x0016: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0019: IGET  (r4 I:com.j256.ormlite.field.DataPersister) = (r1 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.dataPersister com.j256.ormlite.field.DataPersister \l0x001b: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x001e: CONST_STR  (r4 I:java.lang.String) =  \" for sequence\-id \" \l0x0020: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0023: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0026: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002a: INVOKE  (r2 I:java.sql.SQLException), (r3 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|0x002d: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.lang.Object com.j256.ormlite.field.FieldType.assignIdValue((r1 'this' I:com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Number A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

