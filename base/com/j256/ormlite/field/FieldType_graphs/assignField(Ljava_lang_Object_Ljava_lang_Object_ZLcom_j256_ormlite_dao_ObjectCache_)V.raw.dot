digraph "CFG forcom.j256.ormlite.field.FieldType.assignField(Ljava\/lang\/Object;Ljava\/lang\/Object;ZLcom\/j256\/ormlite\/dao\/ObjectCache;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.field.FieldType.logger com.j256.ormlite.logger.Logger \l0x0002: SGET  (r1 I:com.j256.ormlite.logger.Log$Level) =  com.j256.ormlite.logger.Log.Level.TRACE com.j256.ormlite.logger.Log$Level \l0x0004: INVOKE  (r0 I:boolean) = \l  (r0 I:com.j256.ormlite.logger.Logger)\l  (r1 I:com.j256.ormlite.logger.Log$Level)\l com.j256.ormlite.logger.Logger.isLevelEnabled(com.j256.ormlite.logger.Log$Level):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0023 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: SGET  (r0 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.field.FieldType.logger com.j256.ormlite.logger.Logger \l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"assiging from data \{\}, val \{\}: \{\}\" \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0013 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: CONST_STR  (r2 I:java.lang.String) =  \"null\" \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: INVOKE  (r2 I:java.lang.Class) = (r5 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001c \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: CONST_STR  (r3 I:java.lang.String) =  \"null\" \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: INVOKE  (r3 I:java.lang.Class) = (r6 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: INVOKE  \l  (r0 I:com.j256.ormlite.logger.Logger)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l  (r6 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: IGET  (r0 I:com.j256.ormlite.field.FieldType) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.foreignRefField com.j256.ormlite.field.FieldType \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0052 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|0x0027: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0052 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|0x0029: INVOKE  (r0 I:java.lang.Object) = \l  (r4 I:com.j256.ormlite.field.FieldType)\l  (r5 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.extractJavaFieldValue(java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|0x002d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0036 \l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|0x002f: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r6 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0033|0x0033: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0036 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0035|0x0035: RETURN   \l}"];
Node_18 [shape=record,label="{18\:\ 0x0036|0x0036: IGET  (r0 I:com.j256.ormlite.dao.BaseDaoImpl\<?, ?\>) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.foreignDao com.j256.ormlite.dao.BaseDaoImpl \l0x0038: INVOKE  (r0 I:com.j256.ormlite.dao.ObjectCache) = (r0 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.getObjectCache():com.j256.ormlite.dao.ObjectCache type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x003c|0x003c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0040 \l}"];
Node_20 [shape=record,label="{20\:\ 0x003e|0x003e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x0040|0x0040: INVOKE  (r1 I:java.lang.Class) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getType():java.lang.Class type: VIRTUAL \l0x0044: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.j256.ormlite.dao.ObjectCache)\l  (r1 I:java.lang.Class)\l  (r6 I:java.lang.Object)\l com.j256.ormlite.dao.ObjectCache.get(java.lang.Class, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x0048|0x0048: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x004c \l}"];
Node_23 [shape=record,label="{23\:\ 0x004a|0x004a: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x004c|0x004c: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0052 \l}"];
Node_25 [shape=record,label="{25\:\ 0x004e|0x004e: INVOKE  (r6 I:java.lang.Object) = \l  (r4 I:com.j256.ormlite.field.FieldType)\l  (r6 I:java.lang.Object)\l  (r8 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.field.FieldType.createForeignObject(java.lang.Object, com.j256.ormlite.dao.ObjectCache):java.lang.Object type: DIRECT \l}"];
Node_26 [shape=record,label="{26\:\ 0x0052|0x0052: IGET  (r7 I:java.lang.reflect.Method) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldSetMethod java.lang.reflect.Method \l}"];
Node_27 [shape=record,label="{27\:\ 0x0054|0x0054: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x00b2 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0056|SYNTHETIC\lSplitter:B:28:0x0056\l}"];
Node_29 [shape=record,label="{29\:\ ?|Splitter:B:28:0x0056\l|0x0056: IGET  (r7 I:java.lang.reflect.Field) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.field java.lang.reflect.Field A[Catch:\{ IllegalArgumentException \-\> 0x0087, IllegalAccessException \-\> 0x005c \}, TRY_ENTER]\l0x0058: INVOKE  \l  (r7 I:java.lang.reflect.Field)\l  (r5 I:java.lang.Object)\l  (r6 I:java.lang.Object)\l java.lang.reflect.Field.set(java.lang.Object, java.lang.Object):void type: VIRTUAL A[Catch:\{ IllegalArgumentException \-\> 0x0087, IllegalAccessException \-\> 0x005c \}, TRY_LEAVE]\l}"];
Node_31 [shape=record,label="{31\:\ 0x005c|ExcHandler: IllegalAccessException null\lSplitter:B:28:0x0056\l|0x005c: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_32 [shape=record,label="{32\:\ 0x005d|0x005d: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x005f: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0062: CONST_STR  (r8 I:java.lang.String) =  \"Could not assign object '\" \l0x0064: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0067: INVOKE  (r7 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x006a: CONST_STR  (r8 I:java.lang.String) =  \"' of type \" \l0x006c: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006f: INVOKE  (r6 I:java.lang.Class) = (r6 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x0073: INVOKE  (r7 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0076: CONST_STR  (r6 I:java.lang.String) =  \"' to field \" \l0x0078: INVOKE  (r7 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007b: INVOKE  (r7 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x007e: INVOKE  (r6 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0082: INVOKE  (r5 I:java.sql.SQLException) = (r6 I:java.lang.String), (r5 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC \l}"];
Node_33 [shape=record,label="{33\:\ 0x0086|0x0086: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0087|ExcHandler: IllegalArgumentException null\lSplitter:B:28:0x0056\l|0x0087: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_35 [shape=record,label="{35\:\ 0x0088|0x0088: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x008a: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x008d: CONST_STR  (r8 I:java.lang.String) =  \"Could not assign object '\" \l0x008f: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0092: INVOKE  (r7 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0095: CONST_STR  (r8 I:java.lang.String) =  \"' of type \" \l0x0097: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009a: INVOKE  (r6 I:java.lang.Class) = (r6 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x009e: INVOKE  (r7 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x00a1: CONST_STR  (r6 I:java.lang.String) =  \" to field \" \l0x00a3: INVOKE  (r7 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a6: INVOKE  (r7 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x00a9: INVOKE  (r6 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00ad: INVOKE  (r5 I:java.sql.SQLException) = (r6 I:java.lang.String), (r5 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC \l}"];
Node_36 [shape=record,label="{36\:\ 0x00b1|0x00b1: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_37 [shape=record,label="{37\:\ 0x00b2|SYNTHETIC\lSplitter:B:37:0x00b2\l}"];
Node_38 [shape=record,label="{38\:\ ?|Splitter:B:37:0x00b2\l|0x00b2: IGET  (r7 I:java.lang.reflect.Method) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldSetMethod java.lang.reflect.Method A[Catch:\{ Exception \-\> 0x00be \}, TRY_ENTER]\l0x00b4: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x00be \}]\l0x00b5: NEW_ARRAY  (r8 I:java.lang.Object[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ Exception \-\> 0x00be \}]\l0x00b7: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x00be \}]\l0x00b8: APUT  \l  (r8 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x00be \}]\l0x00ba: INVOKE  \l  (r7 I:java.lang.reflect.Method)\l  (r5 I:java.lang.Object)\l  (r8 I:java.lang.Object[])\l java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ Exception \-\> 0x00be \}, TRY_LEAVE]\l}"];
Node_39 [shape=record,label="{39\:\ 0x00bd|0x00bd: RETURN   \l}"];
Node_40 [shape=record,label="{40\:\ 0x00be|ExcHandler: Exception null\lSplitter:B:37:0x00b2\l|0x00be: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_41 [shape=record,label="{41\:\ 0x00bf|0x00bf: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00c1: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00c4: CONST_STR  (r8 I:java.lang.String) =  \"Could not call \" \l0x00c6: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c9: IGET  (r8 I:java.lang.reflect.Method) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.fieldSetMethod java.lang.reflect.Method \l0x00cb: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x00ce: CONST_STR  (r8 I:java.lang.String) =  \" on object with '\" \l0x00d0: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00d3: INVOKE  (r7 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x00d6: CONST_STR  (r6 I:java.lang.String) =  \"' for \" \l0x00d8: INVOKE  (r7 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00db: INVOKE  (r7 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x00de: INVOKE  (r6 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00e2: INVOKE  (r5 I:java.sql.SQLException) = (r6 I:java.lang.String), (r5 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC \l}"];
Node_42 [shape=record,label="{42\:\ 0x00e6|0x00e6: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.field.FieldType.assignField((r4 'this' I:com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_26;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_26;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_26;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_37;
Node_28 -> Node_29;
Node_28 -> Node_34;
Node_28 -> Node_31;
Node_29 -> Node_34;
Node_29 -> Node_31;
Node_29 -> Node_39;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_37 -> Node_38;
Node_37 -> Node_40;
Node_38 -> Node_39;
Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42;
}

