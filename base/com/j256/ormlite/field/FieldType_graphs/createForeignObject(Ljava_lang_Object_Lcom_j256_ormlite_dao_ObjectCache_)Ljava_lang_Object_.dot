digraph "CFG forcom.j256.ormlite.field.FieldType.createForeignObject(Ljava\/lang\/Object;Lcom\/j256\/ormlite\/dao\/ObjectCache;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.j256.ormlite.field.FieldType$LevelCounters r0 = threadLevelCounters.get()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0 != null) goto L_0x0022\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a}"];
Node_3 [shape=record,label="{3\:\ 0x0010|if (r4.fieldConfig.isForeignAutoRefresh() != false) goto L_0x0017\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012}"];
Node_5 [shape=record,label="{5\:\ 0x0016|RETURN\l|return createForeignShell(r5, r6)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|com.j256.ormlite.field.FieldType$LevelCounters r0 = new com.j256.ormlite.field.FieldType.LevelCounters((com.j256.ormlite.field.FieldType.C09511) null)\lthreadLevelCounters.set(r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|PHI: r0 \l  PHI: (r0v3 com.j256.ormlite.field.FieldType$LevelCounters) = (r0v2 com.j256.ormlite.field.FieldType$LevelCounters), (r0v6 com.j256.ormlite.field.FieldType$LevelCounters) binds: [B:1:0x0008, B:6:0x0017] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|if (r0.autoRefreshLevel != 0) goto L_0x003b\l}"];
Node_9 [shape=record,label="{9\:\ 0x0026}"];
Node_10 [shape=record,label="{10\:\ 0x002c|if (r4.fieldConfig.isForeignAutoRefresh() != false) goto L_0x0033\l}"];
Node_11 [shape=record,label="{11\:\ 0x002e}"];
Node_12 [shape=record,label="{12\:\ 0x0032|RETURN\l|return createForeignShell(r5, r6)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|r0.autoRefreshLevelMax = r4.fieldConfig.getMaxForeignAutoRefreshLevel()\l}"];
Node_14 [shape=record,label="{14\:\ 0x003b}"];
Node_15 [shape=record,label="{15\:\ 0x003f|if (r0.autoRefreshLevel \< r0.autoRefreshLevelMax) goto L_0x0046\l}"];
Node_16 [shape=record,label="{16\:\ 0x0041}"];
Node_17 [shape=record,label="{17\:\ 0x0045|RETURN\l|return createForeignShell(r5, r6)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0046}"];
Node_19 [shape=record,label="{19\:\ 0x0048|if (r4.mappedQueryForForeignField != null) goto L_0x005e\l}"];
Node_20 [shape=record,label="{20\:\ 0x004a|r4.mappedQueryForForeignField = com.j256.ormlite.stmt.mapped.MappedQueryForFieldEq.build(r4.connectionSource.getDatabaseType(), r4.foreignDao.getTableInfo(), r4.foreignIdField)\l}"];
Node_21 [shape=record,label="{21\:\ 0x005e|r0.autoRefreshLevel = r0.autoRefreshLevel + 1\l}"];
Node_22 [shape=record,label="{22\:\ 0x0064|SYNTHETIC\lSplitter:B:22:0x0064\l}"];
Node_23 [shape=record,label="{23\:\ ?|Catch:\{ all \-\> 0x0087, all \-\> 0x008e \}\lSplitter:B:22:0x0064\l|com.j256.ormlite.support.DatabaseConnection r1 = r4.connectionSource.getReadOnlyConnection(r4.tableName)     \/\/ Catch:\{ all \-\> 0x0087, all \-\> 0x008e \}\l}"];
Node_24 [shape=record,label="{24\:\ 0x006c|SYNTHETIC\lSplitter:B:24:0x006c\l}"];
Node_25 [shape=record,label="{25\:\ ?|Catch:\{ all \-\> 0x0087, all \-\> 0x008e \}\lSplitter:B:24:0x006c\l|java.lang.Object r5 = r4.mappedQueryForForeignField.execute(r1, r5, r6)     \/\/ Catch:\{ all \-\> 0x0087, all \-\> 0x008e \}\l}"];
Node_26 [shape=record,label="{26\:\ 0x0072|SYNTHETIC\lSplitter:B:26:0x0072\l}"];
Node_27 [shape=record,label="{27\:\ ?|Catch:\{ all \-\> 0x0087, all \-\> 0x008e \}\lSplitter:B:26:0x0072\l|r4.connectionSource.releaseConnection(r1)     \/\/ Catch:\{ all \-\> 0x0087, all \-\> 0x008e \}\l}"];
Node_28 [shape=record,label="{28\:\ 0x0077|r0.autoRefreshLevel = r0.autoRefreshLevel + \-1\l}"];
Node_29 [shape=record,label="{29\:\ 0x007f|if (r0.autoRefreshLevel \> 0) goto L_0x0086\l}"];
Node_30 [shape=record,label="{30\:\ 0x0081|threadLevelCounters.remove()\l}"];
Node_31 [shape=record,label="{31\:\ 0x0086|RETURN\l|return r5\l}"];
Node_32 [shape=record,label="{32\:\ 0x0087|ExcHandler: all (r5v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:24:0x006c\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_33 [shape=record,label="{33\:\ 0x0088|SYNTHETIC\lSplitter:B:33:0x0088\l}"];
Node_34 [shape=record,label="{34\:\ ?|Catch:\{ all \-\> 0x0087, all \-\> 0x008e \}\lSplitter:B:33:0x0088\l|r4.connectionSource.releaseConnection(r1)     \/\/ Catch:\{ all \-\> 0x0087, all \-\> 0x008e \}\l}"];
Node_35 [shape=record,label="{35\:\ 0x008d|Catch:\{ all \-\> 0x0087, all \-\> 0x008e \}\l|throw r5     \/\/ Catch:\{ all \-\> 0x0087, all \-\> 0x008e \}\l}"];
Node_36 [shape=record,label="{36\:\ 0x008e|ExcHandler: all (r5v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:22:0x0064\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_37 [shape=record,label="{37\:\ 0x008f|r0.autoRefreshLevel = r0.autoRefreshLevel + \-1\l}"];
Node_38 [shape=record,label="{38\:\ 0x0097|if (r0.autoRefreshLevel \> 0) goto L_0x009e\l}"];
Node_39 [shape=record,label="{39\:\ 0x0099|threadLevelCounters.remove()\l}"];
Node_40 [shape=record,label="{40\:\ 0x009e|throw r5\l}"];
MethodNode[shape=record,label="{private java.lang.Object com.j256.ormlite.field.FieldType.createForeignObject((r4v0 'this' com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_36;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_32;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_36;
Node_27 -> Node_28;
Node_27 -> Node_36;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_40;
}

