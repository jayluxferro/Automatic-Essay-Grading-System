digraph "CFG forcom.j256.ormlite.field.DatabaseFieldConfig.findGetMethod(Ljava\/lang\/reflect\/Field;Z)Ljava\/lang\/reflect\/Method;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:java.util.Locale) =  java.util.Locale.ENGLISH java.util.Locale \l0x0002: INVOKE  (r1 I:java.util.Locale) =  java.util.Locale.getDefault():java.util.Locale type: STATIC \l0x0006: INVOKE  (r0 I:boolean) = (r0 I:java.util.Locale), (r1 I:java.lang.Object) java.util.Locale.equals(java.lang.Object):boolean type: VIRTUAL \l0x000a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000c: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0027 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: NEW_ARRAY  (r0 I:java.lang.String[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x0012: CONST_STR  (r2 I:java.lang.String) =  \"get\" \l0x0014: INVOKE  (r2 I:java.lang.String) = \l  (r6 I:java.lang.reflect.Field)\l  (r2 I:java.lang.String)\l  (r4 I:java.util.Locale)\l com.j256.ormlite.field.DatabaseFieldConfig.methodFromField(java.lang.reflect.Field, java.lang.String, java.util.Locale):java.lang.String type: STATIC \l0x0018: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x001a: CONST_STR  (r1 I:java.lang.String) =  \"is\" \l0x001c: INVOKE  (r1 I:java.lang.String) = \l  (r6 I:java.lang.reflect.Field)\l  (r1 I:java.lang.String)\l  (r4 I:java.util.Locale)\l com.j256.ormlite.field.DatabaseFieldConfig.methodFromField(java.lang.reflect.Field, java.lang.String, java.util.Locale):java.lang.String type: STATIC \l0x0020: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0022: INVOKE  (r0 I:java.lang.reflect.Method) = \l  (r6 I:java.lang.reflect.Field)\l  (r3 I:boolean)\l  (r7 I:boolean)\l  (r0 I:java.lang.String[])\l com.j256.ormlite.field.DatabaseFieldConfig.findMethodFromNames(java.lang.reflect.Field, boolean, boolean, java.lang.String[]):java.lang.reflect.Method type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|0x0027: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0028: NEW_ARRAY  (r0 I:java.lang.String[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x002a: CONST_STR  (r5 I:java.lang.String) =  \"get\" \l0x002c: INVOKE  (r5 I:java.lang.String) = \l  (r6 I:java.lang.reflect.Field)\l  (r5 I:java.lang.String)\l  (r4 I:java.util.Locale)\l com.j256.ormlite.field.DatabaseFieldConfig.methodFromField(java.lang.reflect.Field, java.lang.String, java.util.Locale):java.lang.String type: STATIC \l0x0030: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x0032: CONST_STR  (r1 I:java.lang.String) =  \"get\" \l0x0034: SGET  (r5 I:java.util.Locale) =  java.util.Locale.ENGLISH java.util.Locale \l0x0036: INVOKE  (r1 I:java.lang.String) = \l  (r6 I:java.lang.reflect.Field)\l  (r1 I:java.lang.String)\l  (r5 I:java.util.Locale)\l com.j256.ormlite.field.DatabaseFieldConfig.methodFromField(java.lang.reflect.Field, java.lang.String, java.util.Locale):java.lang.String type: STATIC \l0x003a: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x003c: CONST_STR  (r1 I:java.lang.String) =  \"is\" \l0x003e: INVOKE  (r1 I:java.lang.String) = \l  (r6 I:java.lang.reflect.Field)\l  (r1 I:java.lang.String)\l  (r4 I:java.util.Locale)\l com.j256.ormlite.field.DatabaseFieldConfig.methodFromField(java.lang.reflect.Field, java.lang.String, java.util.Locale):java.lang.String type: STATIC \l0x0042: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0044: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0045: CONST_STR  (r2 I:java.lang.String) =  \"is\" \l0x0047: SGET  (r5 I:java.util.Locale) =  java.util.Locale.ENGLISH java.util.Locale \l0x0049: INVOKE  (r2 I:java.lang.String) = \l  (r6 I:java.lang.reflect.Field)\l  (r2 I:java.lang.String)\l  (r5 I:java.util.Locale)\l com.j256.ormlite.field.DatabaseFieldConfig.methodFromField(java.lang.reflect.Field, java.lang.String, java.util.Locale):java.lang.String type: STATIC \l0x004d: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x004f: INVOKE  (r0 I:java.lang.reflect.Method) = \l  (r6 I:java.lang.reflect.Field)\l  (r3 I:boolean)\l  (r7 I:boolean)\l  (r0 I:java.lang.String[])\l com.j256.ormlite.field.DatabaseFieldConfig.findMethodFromNames(java.lang.reflect.Field, boolean, boolean, java.lang.String[]):java.lang.reflect.Method type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0053|0x0053: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0056 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0055|0x0055: RETURN  (r4 I:java.lang.reflect.Method) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0056|0x0056: INVOKE  (r1 I:java.lang.Class) = (r0 I:java.lang.reflect.Method) java.lang.reflect.Method.getReturnType():java.lang.Class type: VIRTUAL \l0x005a: INVOKE  (r2 I:java.lang.Class) = (r6 I:java.lang.reflect.Field) java.lang.reflect.Field.getType():java.lang.Class type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x005e|0x005e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x008a \l}"];
Node_8 [shape=record,label="{8\:\ 0x0060|0x0060: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0063 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0062|0x0062: RETURN  (r4 I:java.lang.reflect.Method) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0063|0x0063: NEW_INSTANCE  (r7 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0065: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0067: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x006a: CONST_STR  (r2 I:java.lang.String) =  \"Return type of get method \" \l0x006c: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006f: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.reflect.Method) java.lang.reflect.Method.getName():java.lang.String type: VIRTUAL \l0x0073: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0076: CONST_STR  (r0 I:java.lang.String) =  \" does not return \" \l0x0078: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007b: INVOKE  (r6 I:java.lang.Class) = (r6 I:java.lang.reflect.Field) java.lang.reflect.Field.getType():java.lang.Class type: VIRTUAL \l0x007f: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0082: INVOKE  (r6 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0086: INVOKE  \l  (r7 I:java.lang.IllegalArgumentException)\l  (r6 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0089|0x0089: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_12 [shape=record,label="{12\:\ 0x008a|0x008a: RETURN  (r0 I:java.lang.reflect.Method) \l}"];
MethodNode[shape=record,label="{public static java.lang.reflect.Method com.j256.ormlite.field.DatabaseFieldConfig.findGetMethod((r6 I:java.lang.reflect.Field A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.IllegalArgumentException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_10 -> Node_11;
}

