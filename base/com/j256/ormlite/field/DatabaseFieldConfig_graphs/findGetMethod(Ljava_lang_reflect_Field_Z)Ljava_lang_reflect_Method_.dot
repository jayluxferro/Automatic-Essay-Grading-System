digraph "CFG forcom.j256.ormlite.field.DatabaseFieldConfig.findGetMethod(Ljava\/lang\/reflect\/Field;Z)Ljava\/lang\/reflect\/Method;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (java.util.Locale.ENGLISH.equals(java.util.Locale.getDefault()) == false) goto L_0x0027\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|java.lang.String[] r0 = new java.lang.String[]\{methodFromField(r6, \"get\", (java.util.Locale) null), methodFromField(r6, \"is\", (java.util.Locale) null)\}\ljava.lang.reflect.Method r0 = findMethodFromNames(r6, true, r7, r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|java.lang.String[] r0 = new java.lang.String[]\{methodFromField(r6, \"get\", (java.util.Locale) null), methodFromField(r6, \"get\", java.util.Locale.ENGLISH), methodFromField(r6, \"is\", (java.util.Locale) null), methodFromField(r6, \"is\", java.util.Locale.ENGLISH)\}\ljava.lang.reflect.Method r0 = findMethodFromNames(r6, true, r7, r0)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0053|PHI: r0 \l  PHI: (r0v2 java.lang.reflect.Method) = (r0v7 java.lang.reflect.Method), (r0v9 java.lang.reflect.Method) binds: [B:3:0x0027, B:2:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != null) goto L_0x0056\l}"];
Node_5 [shape=record,label="{5\:\ 0x0055|RETURN\l|return null\l}"];
Node_6 [shape=record,label="{6\:\ 0x0056}"];
Node_7 [shape=record,label="{7\:\ 0x005e|if (r0.getReturnType() == r6.getType()) goto L_0x008a\l}"];
Node_8 [shape=record,label="{8\:\ 0x0060|if (r7 != false) goto L_0x0063\l}"];
Node_9 [shape=record,label="{9\:\ 0x0062|RETURN\l|return null\l}"];
Node_10 [shape=record,label="{10\:\ 0x0063|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Return type of get method \")\lr1.append(r0.getName())\lr1.append(\" does not return \")\lr1.append(r6.getType())\l}"];
Node_11 [shape=record,label="{11\:\ 0x0089|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
Node_12 [shape=record,label="{12\:\ 0x008a|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public static java.lang.reflect.Method com.j256.ormlite.field.DatabaseFieldConfig.findGetMethod((r6v0 java.lang.reflect.Field A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.IllegalArgumentException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_10 -> Node_11;
}

