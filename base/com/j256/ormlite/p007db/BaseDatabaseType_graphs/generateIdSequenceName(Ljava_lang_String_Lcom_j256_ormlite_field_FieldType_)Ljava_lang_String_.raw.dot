digraph "CFG forcom.j256.ormlite.db.BaseDatabaseType.generateIdSequenceName(Ljava\/lang\/String;Lcom\/j256\/ormlite\/field\/FieldType;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0002: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0008: SGET  (r1 I:java.lang.String) =  com.j256.ormlite.db.BaseDatabaseType.DEFAULT_SEQUENCE_SUFFIX java.lang.String \l0x000a: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x000d: INVOKE  (r1 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0011: INVOKE  (r2 I:boolean) = (r0 I:com.j256.ormlite.db.BaseDatabaseType) com.j256.ormlite.db.BaseDatabaseType.isEntityNamesMustBeUpCase():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: INVOKE  (r1 I:java.lang.String) = \l  (r0 I:com.j256.ormlite.db.BaseDatabaseType)\l  (r1 I:java.lang.String)\l com.j256.ormlite.db.BaseDatabaseType.upCaseEntityName(java.lang.String):java.lang.String type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: RETURN  (r1 I:java.lang.String) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: RETURN  (r1 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String com.j256.ormlite.db.BaseDatabaseType.generateIdSequenceName((r0 'this' I:com.j256.ormlite.db.BaseDatabaseType A[IMMUTABLE_TYPE, THIS]), (r1 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

