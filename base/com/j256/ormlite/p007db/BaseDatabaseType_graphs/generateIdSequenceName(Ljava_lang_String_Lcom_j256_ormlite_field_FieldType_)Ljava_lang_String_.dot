digraph "CFG forcom.j256.ormlite.db.BaseDatabaseType.generateIdSequenceName(Ljava\/lang\/String;Lcom\/j256\/ormlite\/field\/FieldType;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(r1)\lr2.append(DEFAULT_SEQUENCE_SUFFIX)\ljava.lang.String r1 = r2.toString()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|if (isEntityNamesMustBeUpCase() == false) goto L_0x001c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0017}"];
Node_3 [shape=record,label="{3\:\ 0x001b|RETURN\l|return upCaseEntityName(r1)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|RETURN\l|return r1\l}"];
MethodNode[shape=record,label="{public java.lang.String com.j256.ormlite.db.BaseDatabaseType.generateIdSequenceName((r0v0 'this' com.j256.ormlite.db.BaseDatabaseType A[IMMUTABLE_TYPE, THIS]), (r1v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

