digraph "CFG forcom.j256.ormlite.db.BaseDatabaseType.appendColumnArg(Ljava\/lang\/String;Ljava\/lang\/StringBuilder;Lcom\/j256\/ormlite\/field\/FieldType;Ljava\/util\/List;Ljava\/util\/List;Ljava\/util\/List;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r8 = r12\lr9 = r14\lr10 = r15\lappendEscapedEntityName(r14, r15.getColumnName())\lr14.append(' ')\lcom.j256.ormlite.field.DataPersister r0 = r15.getDataPersister()\lint r1 = r15.getWidth()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|if (r1 != 0) goto L_0x001d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|int r1 = r0.getDefaultWidth()\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v8 int) binds: [B:1:0x0017, B:2:0x0019] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0029|switch(r0.getSqlType()) \{\l    case com.j256.ormlite.field.SqlType.STRING :com.j256.ormlite.field.SqlType: goto L_0x0089;\l    case com.j256.ormlite.field.SqlType.LONG_STRING :com.j256.ormlite.field.SqlType: goto L_0x0085;\l    case com.j256.ormlite.field.SqlType.BOOLEAN :com.j256.ormlite.field.SqlType: goto L_0x0081;\l    case com.j256.ormlite.field.SqlType.DATE :com.j256.ormlite.field.SqlType: goto L_0x007d;\l    case com.j256.ormlite.field.SqlType.CHAR :com.j256.ormlite.field.SqlType: goto L_0x0079;\l    case com.j256.ormlite.field.SqlType.BYTE :com.j256.ormlite.field.SqlType: goto L_0x0075;\l    case com.j256.ormlite.field.SqlType.BYTE_ARRAY :com.j256.ormlite.field.SqlType: goto L_0x0071;\l    case com.j256.ormlite.field.SqlType.SHORT :com.j256.ormlite.field.SqlType: goto L_0x006d;\l    case com.j256.ormlite.field.SqlType.INTEGER :com.j256.ormlite.field.SqlType: goto L_0x0069;\l    case com.j256.ormlite.field.SqlType.LONG :com.j256.ormlite.field.SqlType: goto L_0x0065;\l    case com.j256.ormlite.field.SqlType.FLOAT :com.j256.ormlite.field.SqlType: goto L_0x0061;\l    case com.j256.ormlite.field.SqlType.DOUBLE :com.j256.ormlite.field.SqlType: goto L_0x005d;\l    case com.j256.ormlite.field.SqlType.SERIALIZABLE :com.j256.ormlite.field.SqlType: goto L_0x0059;\l    case com.j256.ormlite.field.SqlType.BIG_DECIMAL :com.j256.ormlite.field.SqlType: goto L_0x0055;\l    case com.j256.ormlite.field.SqlType.UUID :com.j256.ormlite.field.SqlType: goto L_0x0051;\l    case com.j256.ormlite.field.SqlType.OTHER :com.j256.ormlite.field.SqlType: goto L_0x0047;\l    default: goto L_0x002c;\l\}\l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Unknown SQL\-type \")\lr2.append(r0.getSqlType())\l}"];
Node_6 [shape=record,label="{6\:\ 0x0046|throw new java.lang.IllegalArgumentException(r2.toString())\l}"];
Node_7 [shape=record,label="{7\:\ 0x0047|java.lang.String r0 = r0.getSqlOtherType()\l}"];
Node_8 [shape=record,label="{8\:\ 0x004b|if (r0 == null) goto L_0x008c\l}"];
Node_9 [shape=record,label="{9\:\ 0x004d|r14.append(r0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0051|appendUuidNativeType(r14, r15, r1)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0055|appendBigDecimalNumericType(r14, r15, r1)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0059|appendSerializableType(r14, r15, r1)\l}"];
Node_13 [shape=record,label="{13\:\ 0x005d|appendDoubleType(r14, r15, r1)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0061|appendFloatType(r14, r15, r1)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0065|appendLongType(r14, r15, r1)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0069|appendIntegerType(r14, r15, r1)\l}"];
Node_17 [shape=record,label="{17\:\ 0x006d|appendShortType(r14, r15, r1)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0071|appendByteArrayType(r14, r15, r1)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0075|appendByteType(r14, r15, r1)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0079|appendCharType(r14, r15, r1)\l}"];
Node_21 [shape=record,label="{21\:\ 0x007d|appendDateType(r14, r15, r1)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0081|appendBooleanType(r14, r15, r1)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0085|appendLongStringType(r14, r15, r1)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0089|appendStringType(r14, r15, r1)\l}"];
Node_25 [shape=record,label="{25\:\ 0x008c|r14.append(' ')\l}"];
Node_26 [shape=record,label="{26\:\ 0x0093|if (r15.isGeneratedIdSequence() == false) goto L_0x00a8\l}"];
Node_27 [shape=record,label="{27\:\ 0x0095}"];
Node_28 [shape=record,label="{28\:\ 0x0099|if (r15.isSelfGeneratedId() != false) goto L_0x00a8\l}"];
Node_29 [shape=record,label="{29\:\ 0x009b|configureGeneratedIdSequence(r14, r15, r17, r16, r19)\l}"];
Node_30 [shape=record,label="{30\:\ 0x00a8}"];
Node_31 [shape=record,label="{31\:\ 0x00ac|if (r15.isGeneratedId() == false) goto L_0x00c4\l}"];
Node_32 [shape=record,label="{32\:\ 0x00ae}"];
Node_33 [shape=record,label="{33\:\ 0x00b2|if (r15.isSelfGeneratedId() != false) goto L_0x00c4\l}"];
Node_34 [shape=record,label="{34\:\ 0x00b4|configureGeneratedId(r13, r14, r15, r17, r18, r16, r19)\l}"];
Node_35 [shape=record,label="{35\:\ 0x00c4}"];
Node_36 [shape=record,label="{36\:\ 0x00c8|if (r15.isId() == false) goto L_0x00d6\l}"];
Node_37 [shape=record,label="{37\:\ 0x00ca|configureId(r14, r15, r17, r16, r19)\l}"];
Node_38 [shape=record,label="{38\:\ 0x00d6}"];
Node_39 [shape=record,label="{39\:\ 0x00da|if (r15.isGeneratedId() != false) goto L_?\l}"];
Node_40 [shape=record,label="{40\:\ 0x00dc|java.lang.Object r0 = r15.getDefaultValue()\l}"];
Node_41 [shape=record,label="{41\:\ 0x00e0|if (r0 == null) goto L_0x00ed\l}"];
Node_42 [shape=record,label="{42\:\ 0x00e2|r14.append(\"DEFAULT \")\lappendDefaultValue(r14, r15, r0)\lr14.append(' ')\l}"];
Node_43 [shape=record,label="{43\:\ 0x00ed}"];
Node_44 [shape=record,label="{44\:\ 0x00f1|if (r15.isCanBeNull() == false) goto L_0x00f7\l}"];
Node_45 [shape=record,label="{45\:\ 0x00f3|appendCanBeNull(r14, r15)\l}"];
Node_46 [shape=record,label="{46\:\ 0x00f7|r14.append(\"NOT NULL \")\l}"];
Node_47 [shape=record,label="{47\:\ 0x00fc}"];
Node_48 [shape=record,label="{48\:\ 0x0100|if (r15.isUnique() == false) goto L_?\l}"];
Node_49 [shape=record,label="{49\:\ 0x0102|addSingleUnique(r14, r15, r16, r18)\l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_52 [shape=record,label="{52\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.db.BaseDatabaseType.appendColumnArg((r12v0 'this' com.j256.ormlite.db.BaseDatabaseType A[IMMUTABLE_TYPE, THIS]), (r13v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 java.util.List\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 java.util.List\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 java.util.List\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 java.util.List\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/lang\/StringBuilder;, Lcom\/j256\/ormlite\/field\/FieldType;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_4 -> Node_10;
Node_4 -> Node_11;
Node_4 -> Node_12;
Node_4 -> Node_13;
Node_4 -> Node_14;
Node_4 -> Node_15;
Node_4 -> Node_16;
Node_4 -> Node_17;
Node_4 -> Node_18;
Node_4 -> Node_19;
Node_4 -> Node_20;
Node_4 -> Node_21;
Node_4 -> Node_22;
Node_4 -> Node_23;
Node_4 -> Node_24;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_25;
Node_9 -> Node_25;
Node_10 -> Node_25;
Node_11 -> Node_25;
Node_12 -> Node_25;
Node_13 -> Node_25;
Node_14 -> Node_25;
Node_15 -> Node_25;
Node_16 -> Node_25;
Node_17 -> Node_25;
Node_18 -> Node_25;
Node_19 -> Node_25;
Node_20 -> Node_25;
Node_21 -> Node_25;
Node_22 -> Node_25;
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_30;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_38;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_38;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_51;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_52;
Node_49 -> Node_50;
}

