digraph "CFG forcom.j256.ormlite.db.BaseSqliteDatabaseType.configureGeneratedId(Ljava\/lang\/String;Ljava\/lang\/StringBuilder;Lcom\/j256\/ormlite\/field\/FieldType;Ljava\/util\/List;Ljava\/util\/List;Ljava\/util\/List;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:com.j256.ormlite.field.SqlType) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getSqlType():com.j256.ormlite.field.SqlType type: VIRTUAL \l0x0004: SGET  (r4 I:com.j256.ormlite.field.SqlType) =  com.j256.ormlite.field.SqlType.INTEGER com.j256.ormlite.field.SqlType \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0019 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r1 I:com.j256.ormlite.field.SqlType) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getSqlType():com.j256.ormlite.field.SqlType type: VIRTUAL \l0x000c: SGET  (r3 I:com.j256.ormlite.field.SqlType) =  com.j256.ormlite.field.SqlType.LONG com.j256.ormlite.field.SqlType \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0013: CONST_STR  (r2 I:java.lang.String) =  \"Sqlite requires that auto\-increment generated\-id be integer or long type\" \l0x0015: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: CONST_STR  (r1 I:java.lang.String) =  \"PRIMARY KEY AUTOINCREMENT \" \l0x001b: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: RETURN   \l}"];
MethodNode[shape=record,label="{protected void com.j256.ormlite.db.BaseSqliteDatabaseType.configureGeneratedId((r0 'this' I:com.j256.ormlite.db.BaseSqliteDatabaseType A[IMMUTABLE_TYPE, THIS]), (r1 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.util.List\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.util.List\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.List\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.List\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/lang\/StringBuilder;, Lcom\/j256\/ormlite\/field\/FieldType;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_7[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
}

