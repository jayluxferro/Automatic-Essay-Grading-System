digraph "CFG forcom.j256.ormlite.stmt.BaseArgumentHolder.setMetaInfo(Lcom\/j256\/ormlite\/field\/FieldType;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3.fieldType != null) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r3.fieldType != r4) goto L_0x000c\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|r3.fieldType = r4\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"FieldType name cannot be set twice from \")\lr1.append(r3.fieldType)\lr1.append(\" to \")\lr1.append(r4)\lr1.append(\".  Using a SelectArg twice in query with different columns?\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.BaseArgumentHolder.setMetaInfo((r3v0 'this' com.j256.ormlite.stmt.BaseArgumentHolder A[IMMUTABLE_TYPE, THIS]), (r4v0 com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

