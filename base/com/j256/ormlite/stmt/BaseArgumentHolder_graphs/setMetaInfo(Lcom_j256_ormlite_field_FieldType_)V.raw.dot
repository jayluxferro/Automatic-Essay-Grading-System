digraph "CFG forcom.j256.ormlite.stmt.BaseArgumentHolder.setMetaInfo(Lcom\/j256\/ormlite\/field\/FieldType;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.field.FieldType) = (r3 I:com.j256.ormlite.stmt.BaseArgumentHolder) com.j256.ormlite.stmt.BaseArgumentHolder.fieldType com.j256.ormlite.field.FieldType \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IGET  (r0 I:com.j256.ormlite.field.FieldType) = (r3 I:com.j256.ormlite.stmt.BaseArgumentHolder) com.j256.ormlite.stmt.BaseArgumentHolder.fieldType com.j256.ormlite.field.FieldType \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000c \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: IPUT  \l  (r4 I:com.j256.ormlite.field.FieldType)\l  (r3 I:com.j256.ormlite.stmt.BaseArgumentHolder)\l com.j256.ormlite.stmt.BaseArgumentHolder.fieldType com.j256.ormlite.field.FieldType \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x000e: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0010: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0013: CONST_STR  (r2 I:java.lang.String) =  \"FieldType name cannot be set twice from \" \l0x0015: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0018: IGET  (r2 I:com.j256.ormlite.field.FieldType) = (r3 I:com.j256.ormlite.stmt.BaseArgumentHolder) com.j256.ormlite.stmt.BaseArgumentHolder.fieldType com.j256.ormlite.field.FieldType \l0x001a: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x001d: CONST_STR  (r2 I:java.lang.String) =  \" to \" \l0x001f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0022: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0025: CONST_STR  (r4 I:java.lang.String) =  \".  Using a SelectArg twice in query with different columns?\" \l0x0027: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002a: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002e: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.BaseArgumentHolder.setMetaInfo((r3 'this' I:com.j256.ormlite.stmt.BaseArgumentHolder A[IMMUTABLE_TYPE, THIS]), (r4 I:com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

