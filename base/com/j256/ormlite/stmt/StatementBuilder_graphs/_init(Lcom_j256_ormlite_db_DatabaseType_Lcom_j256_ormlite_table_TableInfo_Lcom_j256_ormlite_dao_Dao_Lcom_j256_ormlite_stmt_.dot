digraph "CFG forcom.j256.ormlite.stmt.StatementBuilder.\<init\>(Lcom\/j256\/ormlite\/db\/DatabaseType;Lcom\/j256\/ormlite\/table\/TableInfo;Lcom\/j256\/ormlite\/dao\/Dao;Lcom\/j256\/ormlite\/stmt\/StatementBuilder$StatementType;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.where = null\lr1.databaseType = r2\lr1.tableInfo = r3\lr1.tableName = r3.getTableName()\lr1.dao = r4\lr1.type = r5\l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|if (r5.isOkForStatementBuilder() == false) goto L_0x001b\l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|java.lang.StringBuilder r3 = new java.lang.StringBuilder()\lr3.append(\"Building a statement from a \")\lr3.append(r5)\lr3.append(\" statement is not allowed\")\l}"];
Node_4 [shape=record,label="{4\:\ 0x0036|throw new java.lang.IllegalStateException(r3.toString())\l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.StatementBuilder.\<init\>((r1v0 'this' com.j256.ormlite.stmt.StatementBuilder A[IMMUTABLE_TYPE, THIS]), (r2v0 com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 com.j256.ormlite.table.TableInfo\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 com.j256.ormlite.dao.Dao\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 com.j256.ormlite.stmt.StatementBuilder$StatementType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Lcom\/j256\/ormlite\/table\/TableInfo\<, TT;TID;\>;, Lcom\/j256\/ormlite\/dao\/Dao\<, TT;TID;\>;, Lcom\/j256\/ormlite\/stmt\/StatementBuilder$StatementType;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

