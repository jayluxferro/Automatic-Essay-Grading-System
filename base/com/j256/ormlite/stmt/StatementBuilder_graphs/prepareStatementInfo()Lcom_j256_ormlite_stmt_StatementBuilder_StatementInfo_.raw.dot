digraph "CFG forcom.j256.ormlite.stmt.StatementBuilder.prepareStatementInfo()Lcom\/j256\/ormlite\/stmt\/StatementBuilder$StatementInfo;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r1 I:java.lang.String) = \l  (r4 I:com.j256.ormlite.stmt.StatementBuilder)\l  (r0 I:java.util.List)\l com.j256.ormlite.stmt.StatementBuilder.buildStatementString(java.util.List):java.lang.String type: VIRTUAL \l0x0009: NEW_INSTANCE  (r2 I:com.j256.ormlite.stmt.StatementBuilder$StatementInfo) =  com.j256.ormlite.stmt.StatementBuilder$StatementInfo \l0x000b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: INVOKE  \l  (r2 I:com.j256.ormlite.stmt.StatementBuilder$StatementInfo)\l  (r1 I:java.lang.String)\l  (r0 I:java.util.List)\l  (r3 I:com.j256.ormlite.stmt.StatementBuilder$1)\l com.j256.ormlite.stmt.StatementBuilder.StatementInfo.\<init\>(java.lang.String, java.util.List, com.j256.ormlite.stmt.StatementBuilder$1):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN  (r2 I:com.j256.ormlite.stmt.StatementBuilder$StatementInfo) \l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.stmt.StatementBuilder$StatementInfo com.j256.ormlite.stmt.StatementBuilder.prepareStatementInfo((r4 'this' I:com.j256.ormlite.stmt.StatementBuilder A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

