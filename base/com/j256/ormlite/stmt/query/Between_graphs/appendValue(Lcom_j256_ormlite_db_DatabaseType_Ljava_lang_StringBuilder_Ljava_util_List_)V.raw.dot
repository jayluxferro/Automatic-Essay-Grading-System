digraph "CFG forcom.j256.ormlite.stmt.query.Between.appendValue(Lcom\/j256\/ormlite\/db\/DatabaseType;Ljava\/lang\/StringBuilder;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Object) = (r7 I:com.j256.ormlite.stmt.query.Between) com.j256.ormlite.stmt.query.Between.low java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x003e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:java.lang.Object) = (r7 I:com.j256.ormlite.stmt.query.Between) com.j256.ormlite.stmt.query.Between.high java.lang.Object \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0020 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r3 I:com.j256.ormlite.field.FieldType) = (r7 I:com.j256.ormlite.stmt.query.Between) com.j256.ormlite.stmt.query.Between.fieldType com.j256.ormlite.field.FieldType \l0x000a: IGET  (r6 I:java.lang.Object) = (r7 I:com.j256.ormlite.stmt.query.Between) com.j256.ormlite.stmt.query.Between.low java.lang.Object \l0x000c: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x000d: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x000e: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x000f: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0010: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.query.Between)\l  (r2 I:com.j256.ormlite.db.DatabaseType)\l  (r3 I:com.j256.ormlite.field.FieldType)\l  (r4 I:java.lang.StringBuilder)\l  (r5 I:java.util.List)\l  (r6 I:java.lang.Object)\l com.j256.ormlite.stmt.query.Between.appendArgOrValue(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.field.FieldType, java.lang.StringBuilder, java.util.List, java.lang.Object):void type: VIRTUAL \l0x0013: CONST_STR  (r0 I:java.lang.String) =  \"AND \" \l0x0015: INVOKE  (r9 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0018: IGET  (r3 I:com.j256.ormlite.field.FieldType) = (r7 I:com.j256.ormlite.stmt.query.Between) com.j256.ormlite.stmt.query.Between.fieldType com.j256.ormlite.field.FieldType \l0x001a: IGET  (r6 I:java.lang.Object) = (r7 I:com.j256.ormlite.stmt.query.Between) com.j256.ormlite.stmt.query.Between.high java.lang.Object \l0x001c: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.query.Between)\l  (r2 I:com.j256.ormlite.db.DatabaseType)\l  (r3 I:com.j256.ormlite.field.FieldType)\l  (r4 I:java.lang.StringBuilder)\l  (r5 I:java.util.List)\l  (r6 I:java.lang.Object)\l com.j256.ormlite.stmt.query.Between.appendArgOrValue(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.field.FieldType, java.lang.StringBuilder, java.util.List, java.lang.Object):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: NEW_INSTANCE  (r8 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0022: NEW_INSTANCE  (r9 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0024: INVOKE  (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0027: CONST_STR  (r10 I:java.lang.String) =  \"BETWEEN high value for '\" \l0x0029: INVOKE  (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002c: IGET  (r10 I:java.lang.String) = (r7 I:com.j256.ormlite.stmt.query.Between) com.j256.ormlite.stmt.query.Between.columnName java.lang.String \l0x002e: INVOKE  (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0031: CONST_STR  (r10 I:java.lang.String) =  \"' is null\" \l0x0033: INVOKE  (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0036: INVOKE  (r9 I:java.lang.String) = (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003a: INVOKE  \l  (r8 I:java.lang.IllegalArgumentException)\l  (r9 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|0x003d: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|0x003e: NEW_INSTANCE  (r8 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0040: NEW_INSTANCE  (r9 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0042: INVOKE  (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0045: CONST_STR  (r10 I:java.lang.String) =  \"BETWEEN low value for '\" \l0x0047: INVOKE  (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004a: IGET  (r10 I:java.lang.String) = (r7 I:com.j256.ormlite.stmt.query.Between) com.j256.ormlite.stmt.query.Between.columnName java.lang.String \l0x004c: INVOKE  (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004f: CONST_STR  (r10 I:java.lang.String) =  \"' is null\" \l0x0051: INVOKE  (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0054: INVOKE  (r9 I:java.lang.String) = (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0058: INVOKE  \l  (r8 I:java.lang.IllegalArgumentException)\l  (r9 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x005b|0x005b: THROW  (r8 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.query.Between.appendValue((r7 'this' I:com.j256.ormlite.stmt.query.Between A[IMMUTABLE_TYPE, THIS]), (r8 I:com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.util.List\<com.j256.ormlite.stmt.ArgumentHolder\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Ljava\/lang\/StringBuilder;, Ljava\/util\/List\<, Lcom\/j256\/ormlite\/stmt\/ArgumentHolder;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

