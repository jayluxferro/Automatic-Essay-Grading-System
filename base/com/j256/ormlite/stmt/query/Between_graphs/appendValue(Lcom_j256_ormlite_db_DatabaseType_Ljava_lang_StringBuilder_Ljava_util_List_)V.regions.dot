digraph "CFG forcom.j256.ormlite.stmt.query.Between.appendValue(Lcom\/j256\/ormlite\/db\/DatabaseType;Ljava\/lang\/StringBuilder;Ljava\/util\/List;)V" {
subgraph cluster_Region_75797967 {
label = "R(1:(2:8|9)(1:(1:4)(2:6|7)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_651593284 {
label = "IF [B:1:0x0002] THEN: R(2:8|9) ELSE: R(1:(1:4)(2:6|7))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r7.low == null) goto L_0x003e\l}"];
subgraph cluster_Region_1289743463 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x003e}"];
Node_9 [shape=record,label="{9\:\ 0x005b|throw new java.lang.IllegalArgumentException(\"BETWEEN low value for '\" + r7.columnName + \"' is null\")\l}"];
}
subgraph cluster_Region_810299339 {
label = "R(1:(1:4)(2:6|7)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_281476832 {
label = "IF [B:3:0x0006] THEN: R(1:4) ELSE: R(2:6|7) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r7.high != null) goto L_0x0008\l}"];
subgraph cluster_Region_1133527631 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0008|r1 = r7\lcom.j256.ormlite.p007db.DatabaseType r2 = r8\ljava.lang.StringBuilder r4 = r9\ljava.util.List\<com.j256.ormlite.stmt.ArgumentHolder\> r5 = r10\lappendArgOrValue(r2, r7.fieldType, r4, r5, r7.low)\lr9.append(\"AND \")\lappendArgOrValue(r2, r7.fieldType, r4, r5, r7.high)\l}"];
}
subgraph cluster_Region_36748826 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0020}"];
Node_7 [shape=record,label="{7\:\ 0x003d|throw new java.lang.IllegalArgumentException(\"BETWEEN high value for '\" + r7.columnName + \"' is null\")\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001f}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.query.Between.appendValue((r7v0 'this' com.j256.ormlite.stmt.query.Between A[IMMUTABLE_TYPE, THIS]), (r8v0 com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 java.util.List\<com.j256.ormlite.stmt.ArgumentHolder\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Ljava\/lang\/StringBuilder;, Ljava\/util\/List\<, Lcom\/j256\/ormlite\/stmt\/ArgumentHolder;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_8 -> Node_9;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_2 -> Node_3;
}

