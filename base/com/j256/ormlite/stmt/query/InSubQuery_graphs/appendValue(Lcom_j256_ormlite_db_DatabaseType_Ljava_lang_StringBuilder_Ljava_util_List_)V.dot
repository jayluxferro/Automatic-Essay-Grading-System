digraph "CFG forcom.j256.ormlite.stmt.query.InSubQuery.appendValue(Lcom\/j256\/ormlite\/db\/DatabaseType;Ljava\/lang\/StringBuilder;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.append('(')\lr2.subQueryBuilder.appendStatementString(r4, r5)\lcom.j256.ormlite.field.FieldType[] r3 = r2.subQueryBuilder.getResultFieldTypes()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|if (r3 != null) goto L_0x0013\l}"];
Node_2 [shape=record,label="{2\:\ 0x0013}"];
Node_3 [shape=record,label="{3\:\ 0x0015|if (r3.length != 1) goto L_0x004f\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017}"];
Node_5 [shape=record,label="{5\:\ 0x0024|if (r2.fieldType.getSqlType() != r3[0].getSqlType()) goto L_0x002c\l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|r4.append(\") \")\l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|java.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(\"Outer column \")\lr5.append(r2.fieldType)\lr5.append(\" is not the same type as inner column \")\lr5.append(r3[0])\l}"];
Node_9 [shape=record,label="{9\:\ 0x004e|throw new java.sql.SQLException(r5.toString())\l}"];
Node_10 [shape=record,label="{10\:\ 0x004f|java.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(\"There must be only 1 result column in sub\-query but we found \")\lr5.append(r3.length)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0066|throw new java.sql.SQLException(r5.toString())\l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.query.InSubQuery.appendValue((r2v0 'this' com.j256.ormlite.stmt.query.InSubQuery A[IMMUTABLE_TYPE, THIS]), (r3v0 com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.util.List\<com.j256.ormlite.stmt.ArgumentHolder\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Ljava\/lang\/StringBuilder;, Ljava\/util\/List\<, Lcom\/j256\/ormlite\/stmt\/ArgumentHolder;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

