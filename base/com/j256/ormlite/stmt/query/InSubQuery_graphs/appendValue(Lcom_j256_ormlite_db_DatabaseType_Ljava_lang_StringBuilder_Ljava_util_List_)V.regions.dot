digraph "CFG forcom.j256.ormlite.stmt.query.InSubQuery.appendValue(Lcom\/j256\/ormlite\/db\/DatabaseType;Ljava\/lang\/StringBuilder;Ljava\/util\/List;)V" {
subgraph cluster_Region_266858586 {
label = "R(3:0|(1:(2:10|11)(1:(2:8|9)))|6)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.append('(')\lr2.subQueryBuilder.appendStatementString(r4, r5)\lcom.j256.ormlite.field.FieldType[] com.j256.ormlite.field.FieldType[] r3 = r2.subQueryBuilder.getResultFieldTypes()\l}"];
subgraph cluster_IfRegion_978122959 {
label = "IF [B:1:0x0010] THEN: R(1:(2:10|11)(1:(2:8|9))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0010|if (r3 != null) goto L_0x0013\l}"];
subgraph cluster_Region_1476363491 {
label = "R(1:(2:10|11)(1:(2:8|9)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_234222595 {
label = "IF [B:3:0x0015] THEN: R(2:10|11) ELSE: R(1:(2:8|9))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0015|if (r3.length != 1) goto L_0x004f\l}"];
subgraph cluster_Region_525766156 {
label = "R(2:10|11)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x004f}"];
Node_11 [shape=record,label="{11\:\ 0x0066|throw new java.sql.SQLException(\"There must be only 1 result column in sub\-query but we found \" + r3.length)\l}"];
}
subgraph cluster_Region_1187211971 {
label = "R(1:(2:8|9)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_788777116 {
label = "IF [B:5:0x0024] THEN: R(2:8|9) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0024|if (r2.fieldType.getSqlType() != r3[0].getSqlType()) goto L_0x002c\l}"];
subgraph cluster_Region_1918158643 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002c}"];
Node_9 [shape=record,label="{9\:\ 0x004e|throw new java.sql.SQLException(\"Outer column \" + r2.fieldType + \" is not the same type as inner column \" + r3[0])\l}"];
}
}
}
}
}
}
Node_6 [shape=record,label="{6\:\ 0x0026|r4.append(\") \")\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0013}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0017}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x002b}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.query.InSubQuery.appendValue((r2v0 'this' com.j256.ormlite.stmt.query.InSubQuery A[IMMUTABLE_TYPE, THIS]), (r3v0 com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.util.List\<com.j256.ormlite.stmt.ArgumentHolder\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Ljava\/lang\/StringBuilder;, Ljava\/util\/List\<, Lcom\/j256\/ormlite\/stmt\/ArgumentHolder;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_10 -> Node_11;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_8 -> Node_9;
Node_6 -> Node_7;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

