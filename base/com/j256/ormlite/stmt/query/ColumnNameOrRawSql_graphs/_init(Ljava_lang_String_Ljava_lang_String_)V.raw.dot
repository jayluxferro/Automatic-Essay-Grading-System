digraph "CFG forcom.j256.ormlite.stmt.query.ColumnNameOrRawSql.\<init\>(Ljava\/lang\/String;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r1 I:java.lang.String)\l  (r0 I:com.j256.ormlite.stmt.query.ColumnNameOrRawSql)\l com.j256.ormlite.stmt.query.ColumnNameOrRawSql.columnName java.lang.String \l0x0005: IPUT  \l  (r2 I:java.lang.String)\l  (r0 I:com.j256.ormlite.stmt.query.ColumnNameOrRawSql)\l com.j256.ormlite.stmt.query.ColumnNameOrRawSql.rawSql java.lang.String \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.j256.ormlite.stmt.query.ColumnNameOrRawSql.\<init\>((r0 'this' I:com.j256.ormlite.stmt.query.ColumnNameOrRawSql A[IMMUTABLE_TYPE, THIS]), (r1 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

