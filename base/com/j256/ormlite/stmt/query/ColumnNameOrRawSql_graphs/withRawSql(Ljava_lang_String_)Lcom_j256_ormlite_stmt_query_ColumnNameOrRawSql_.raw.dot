digraph "CFG forcom.j256.ormlite.stmt.query.ColumnNameOrRawSql.withRawSql(Ljava\/lang\/String;)Lcom\/j256\/ormlite\/stmt\/query\/ColumnNameOrRawSql;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.j256.ormlite.stmt.query.ColumnNameOrRawSql) =  com.j256.ormlite.stmt.query.ColumnNameOrRawSql \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.query.ColumnNameOrRawSql)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l com.j256.ormlite.stmt.query.ColumnNameOrRawSql.\<init\>(java.lang.String, java.lang.String):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: RETURN  (r0 I:com.j256.ormlite.stmt.query.ColumnNameOrRawSql) \l}"];
MethodNode[shape=record,label="{public static com.j256.ormlite.stmt.query.ColumnNameOrRawSql com.j256.ormlite.stmt.query.ColumnNameOrRawSql.withRawSql((r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

