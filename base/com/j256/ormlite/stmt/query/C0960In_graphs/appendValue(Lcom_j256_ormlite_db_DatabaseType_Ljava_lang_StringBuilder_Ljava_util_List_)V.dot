digraph "CFG forcom.j256.ormlite.stmt.query.In.appendValue(Lcom\/j256\/ormlite\/db\/DatabaseType;Ljava\/lang\/StringBuilder;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r11.append('(')\ljava.util.Iterator r0 = r9.objects.iterator()\lr1 = true\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|LOOP_START\lPHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v2 boolean) binds: [B:0:0x0000, B:8:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000c\-\>B:8:0x0021\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|if (r0.hasNext() == false) goto L_0x0049\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|java.lang.Object r8 = r0.next()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|if (r8 == null) goto L_0x002b\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r1 == false) goto L_0x001c\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|r1 = false\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|r11.append(',')\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|LOOP_END\lPHI: r1 \l  PHI: (r1v2 boolean) = (r1v1 boolean), (r1v3 boolean) binds: [B:15:0x0021, B:16:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000c\-\>B:8:0x0021\l|r3 = r9\lr4 = r10\lsuper.appendArgOrValue(r4, r9.fieldType, r11, r12, r8)\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|java.lang.StringBuilder r11 = new java.lang.StringBuilder()\lr11.append(\"one of the IN values for '\")\lr11.append(r9.columnName)\lr11.append(\"' is null\")\l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|throw new java.lang.IllegalArgumentException(r11.toString())\l}"];
Node_11 [shape=record,label="{11\:\ 0x0049|r11.append(\") \")\l}"];
Node_12 [shape=record,label="{12\:\ 0x004e|RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ 0x0049|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0021|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0021|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.query.In.appendValue((r9v0 'this' com.j256.ormlite.stmt.query.In A[IMMUTABLE_TYPE, THIS]), (r10v0 com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 java.util.List\<com.j256.ormlite.stmt.ArgumentHolder\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Ljava\/lang\/StringBuilder;, Ljava\/util\/List\<, Lcom\/j256\/ormlite\/stmt\/ArgumentHolder;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_16;
Node_7 -> Node_15;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_11;
Node_14 -> Node_9;
Node_15 -> Node_8;
Node_16 -> Node_8;
}

