digraph "CFG forcom.j256.ormlite.stmt.query.Raw.appendSql(Lcom\/j256\/ormlite\/db\/DatabaseType;Ljava\/lang\/String;Ljava\/lang\/StringBuilder;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.append(r1.statement)\lr4.append(' ')\lcom.j256.ormlite.stmt.ArgumentHolder[] r2 = r1.args\lint r3 = r2.length\lr4 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|LOOP_START\lPHI: r4 \l  PHI: (r4v2 int) = (r4v1 int), (r4v3 int) binds: [B:0:0x0000, B:2:0x0010] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000e\-\>B:2:0x0010\l|if (r4 \>= r3) goto L_0x0018\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|LOOP_END\lLOOP:0: B:1:0x000e\-\>B:2:0x0010\l|r5.add(r2[r4])\lint r4 = r4 + 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.query.Raw.appendSql((r1v0 'this' com.j256.ormlite.stmt.query.Raw A[IMMUTABLE_TYPE, THIS]), (r2v0 com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.util.List\<com.j256.ormlite.stmt.ArgumentHolder\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Ljava\/lang\/String;, Ljava\/lang\/StringBuilder;, Ljava\/util\/List\<, Lcom\/j256\/ormlite\/stmt\/ArgumentHolder;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_1;
Node_4 -> Node_3;
}

