digraph "CFG forcom.j256.ormlite.stmt.query.ManyClause.\<init\>([Lcom\/j256\/ormlite\/stmt\/query\/Clause;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: AGET  (r0 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0006: IPUT  \l  (r0 I:com.j256.ormlite.stmt.query.Clause)\l  (r2 I:com.j256.ormlite.stmt.query.ManyClause)\l com.j256.ormlite.stmt.query.ManyClause.first com.j256.ormlite.stmt.query.Clause \l0x0008: ARRAY_LENGTH  (r0 I:int) = (r3 I:?[]) \l0x0009: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: IPUT  \l  (r0 I:com.j256.ormlite.stmt.query.Clause)\l  (r2 I:com.j256.ormlite.stmt.query.ManyClause)\l com.j256.ormlite.stmt.query.ManyClause.second com.j256.ormlite.stmt.query.Clause \l0x000f: ARRAY_LENGTH  (r0 I:int) = (r3 I:?[]) \l0x0010: IPUT  (r0 I:int), (r2 I:com.j256.ormlite.stmt.query.ManyClause) com.j256.ormlite.stmt.query.ManyClause.startOthersAt int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0014: AGET  (r0 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0016: IPUT  \l  (r0 I:com.j256.ormlite.stmt.query.Clause)\l  (r2 I:com.j256.ormlite.stmt.query.ManyClause)\l com.j256.ormlite.stmt.query.ManyClause.second com.j256.ormlite.stmt.query.Clause \l0x0018: IPUT  (r1 I:int), (r2 I:com.j256.ormlite.stmt.query.ManyClause) com.j256.ormlite.stmt.query.ManyClause.startOthersAt int \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: IPUT  \l  (r3 I:com.j256.ormlite.stmt.query.Clause[])\l  (r2 I:com.j256.ormlite.stmt.query.ManyClause)\l com.j256.ormlite.stmt.query.ManyClause.others com.j256.ormlite.stmt.query.Clause[] \l0x001c: IPUT  \l  (r4 I:java.lang.String)\l  (r2 I:com.j256.ormlite.stmt.query.ManyClause)\l com.j256.ormlite.stmt.query.ManyClause.operation java.lang.String \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.query.ManyClause.\<init\>((r2 'this' I:com.j256.ormlite.stmt.query.ManyClause A[IMMUTABLE_TYPE, THIS]), (r3 I:com.j256.ormlite.stmt.query.Clause[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

