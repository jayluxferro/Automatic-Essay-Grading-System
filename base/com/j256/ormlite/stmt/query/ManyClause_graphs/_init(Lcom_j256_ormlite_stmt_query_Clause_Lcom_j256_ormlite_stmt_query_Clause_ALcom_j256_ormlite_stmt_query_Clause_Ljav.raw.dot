digraph "CFG forcom.j256.ormlite.stmt.query.ManyClause.\<init\>(Lcom\/j256\/ormlite\/stmt\/query\/Clause;Lcom\/j256\/ormlite\/stmt\/query\/Clause;[Lcom\/j256\/ormlite\/stmt\/query\/Clause;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r1 I:com.j256.ormlite.stmt.query.Clause)\l  (r0 I:com.j256.ormlite.stmt.query.ManyClause)\l com.j256.ormlite.stmt.query.ManyClause.first com.j256.ormlite.stmt.query.Clause \l0x0005: IPUT  \l  (r2 I:com.j256.ormlite.stmt.query.Clause)\l  (r0 I:com.j256.ormlite.stmt.query.ManyClause)\l com.j256.ormlite.stmt.query.ManyClause.second com.j256.ormlite.stmt.query.Clause \l0x0007: IPUT  \l  (r3 I:com.j256.ormlite.stmt.query.Clause[])\l  (r0 I:com.j256.ormlite.stmt.query.ManyClause)\l com.j256.ormlite.stmt.query.ManyClause.others com.j256.ormlite.stmt.query.Clause[] \l0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: IPUT  (r1 I:int), (r0 I:com.j256.ormlite.stmt.query.ManyClause) com.j256.ormlite.stmt.query.ManyClause.startOthersAt int \l0x000c: IPUT  \l  (r4 I:java.lang.String)\l  (r0 I:com.j256.ormlite.stmt.query.ManyClause)\l com.j256.ormlite.stmt.query.ManyClause.operation java.lang.String \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.query.ManyClause.\<init\>((r0 'this' I:com.j256.ormlite.stmt.query.ManyClause A[IMMUTABLE_TYPE, THIS]), (r1 I:com.j256.ormlite.stmt.query.Clause A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:com.j256.ormlite.stmt.query.Clause A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.j256.ormlite.stmt.query.Clause[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

