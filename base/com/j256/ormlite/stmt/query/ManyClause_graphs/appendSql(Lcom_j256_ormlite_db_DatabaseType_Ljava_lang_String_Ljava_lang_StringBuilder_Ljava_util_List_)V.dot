digraph "CFG forcom.j256.ormlite.stmt.query.ManyClause.appendSql(Lcom\/j256\/ormlite\/db\/DatabaseType;Ljava\/lang\/String;Ljava\/lang\/StringBuilder;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r6.append('(')\lr3.first.appendSql(r4, r5, r6, r7)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r3.second == null) goto L_0x001d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|r6.append(r3.operation)\lr6.append(' ')\lr3.second.appendSql(r4, r5, r6, r7)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d}"];
Node_4 [shape=record,label="{4\:\ 0x001f|if (r3.others == null) goto L_0x003a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|int r0 = r3.startOthersAt\l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|LOOP_START\lPHI: r0 \l  PHI: (r0v5 int) = (r0v4 int), (r0v6 int) binds: [B:5:0x0021, B:8:0x0028] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0023\-\>B:8:0x0028\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|if (r0 \>= r3.others.length) goto L_0x003a\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|LOOP_END\lLOOP:0: B:6:0x0023\-\>B:8:0x0028\l|r6.append(r3.operation)\lr6.append(' ')\lr3.others[r0].appendSql(r4, r5, r6, r7)\lint r0 = r0 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|r6.append(\") \")\l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.query.ManyClause.appendSql((r3v0 'this' com.j256.ormlite.stmt.query.ManyClause A[IMMUTABLE_TYPE, THIS]), (r4v0 com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.util.List\<com.j256.ormlite.stmt.ArgumentHolder\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Ljava\/lang\/String;, Ljava\/lang\/StringBuilder;, Ljava\/util\/List\<, Lcom\/j256\/ormlite\/stmt\/ArgumentHolder;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_6;
Node_9 -> Node_10;
Node_11 -> Node_9;
}

