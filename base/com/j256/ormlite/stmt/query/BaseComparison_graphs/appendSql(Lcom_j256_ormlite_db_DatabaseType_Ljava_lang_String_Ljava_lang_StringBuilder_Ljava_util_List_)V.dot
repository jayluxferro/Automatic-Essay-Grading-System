digraph "CFG forcom.j256.ormlite.stmt.query.BaseComparison.appendSql(Lcom\/j256\/ormlite\/db\/DatabaseType;Ljava\/lang\/String;Ljava\/lang\/StringBuilder;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r2 == null) goto L_0x000a\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|r1.appendEscapedEntityName(r3, r2)\lr3.append('.')\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|r1.appendEscapedEntityName(r3, r0.columnName)\lr3.append(' ')\lappendOperation(r3)\lappendValue(r1, r3, r4)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.query.BaseComparison.appendSql((r0v0 'this' com.j256.ormlite.stmt.query.BaseComparison A[IMMUTABLE_TYPE, THIS]), (r1v0 com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.util.List\<com.j256.ormlite.stmt.ArgumentHolder\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Ljava\/lang\/String;, Ljava\/lang\/StringBuilder;, Ljava\/util\/List\<, Lcom\/j256\/ormlite\/stmt\/ArgumentHolder;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3;
}

