digraph "CFG forcom.j256.ormlite.stmt.query.BaseComparison.appendValue(Lcom\/j256\/ormlite\/db\/DatabaseType;Ljava\/lang\/StringBuilder;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r6\lr1 = r7\lr3 = r8\lr4 = r9\lappendArgOrValue(r1, r6.fieldType, r3, r4, r6.value)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.query.BaseComparison.appendValue((r6v0 'this' com.j256.ormlite.stmt.query.BaseComparison A[IMMUTABLE_TYPE, THIS]), (r7v0 com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.util.List\<com.j256.ormlite.stmt.ArgumentHolder\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Ljava\/lang\/StringBuilder;, Ljava\/util\/List\<, Lcom\/j256\/ormlite\/stmt\/ArgumentHolder;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

