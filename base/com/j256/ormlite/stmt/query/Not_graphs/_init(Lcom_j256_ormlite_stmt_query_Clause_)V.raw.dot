digraph "CFG forcom.j256.ormlite.stmt.query.Not.\<init\>(Lcom\/j256\/ormlite\/stmt\/query\/Clause;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: IPUT  \l  (r0 I:com.j256.ormlite.stmt.query.Comparison)\l  (r1 I:com.j256.ormlite.stmt.query.Not)\l com.j256.ormlite.stmt.query.Not.comparison com.j256.ormlite.stmt.query.Comparison \l0x0006: IPUT  \l  (r0 I:com.j256.ormlite.stmt.query.Exists)\l  (r1 I:com.j256.ormlite.stmt.query.Not)\l com.j256.ormlite.stmt.query.Not.exists com.j256.ormlite.stmt.query.Exists \l0x0008: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.query.Not)\l  (r2 I:com.j256.ormlite.stmt.query.Clause)\l com.j256.ormlite.stmt.query.Not.setMissingClause(com.j256.ormlite.stmt.query.Clause):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.query.Not.\<init\>((r1 'this' I:com.j256.ormlite.stmt.query.Not A[IMMUTABLE_TYPE, THIS]), (r2 I:com.j256.ormlite.stmt.query.Clause A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

