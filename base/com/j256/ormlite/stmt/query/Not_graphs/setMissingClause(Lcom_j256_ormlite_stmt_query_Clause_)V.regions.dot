digraph "CFG forcom.j256.ormlite.stmt.query.Not.setMissingClause(Lcom\/j256\/ormlite\/stmt\/query\/Clause;)V" {
subgraph cluster_Region_81114021 {
label = "R(1:(1:11)(1:(1:4)(1:(1:7)(2:8|9))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_785326069 {
label = "IF [B:1:0x0002] THEN: R(1:11) ELSE: R(1:(1:4)(1:(1:7)(2:8|9)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3.comparison != null) goto L_0x002d\l}"];
subgraph cluster_Region_1687104687 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0034|throw new java.lang.IllegalArgumentException(\"NOT operation already has a comparison set\")\l}"];
}
subgraph cluster_Region_1136867598 {
label = "R(1:(1:4)(1:(1:7)(2:8|9))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1780675144 {
label = "IF [B:3:0x0006] THEN: R(1:4) ELSE: R(1:(1:7)(2:8|9)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|if ((r4 instanceof com.j256.ormlite.stmt.query.Comparison) == true) goto L_0x0008\l}"];
subgraph cluster_Region_1011120206 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0008|r3.comparison = (com.j256.ormlite.stmt.query.Comparison) r4\l}"];
}
subgraph cluster_Region_557039933 {
label = "R(1:(1:7)(2:8|9)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2078447452 {
label = "IF [B:6:0x000f] THEN: R(1:7) ELSE: R(2:8|9) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000f|if ((r4 instanceof com.j256.ormlite.stmt.query.Exists) == true) goto L_0x0011\l}"];
subgraph cluster_Region_103783130 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0011|r3.exists = (com.j256.ormlite.stmt.query.Exists) r4\l}"];
}
subgraph cluster_Region_431363161 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0016}"];
Node_9 [shape=record,label="{9\:\ 0x002c|throw new java.lang.IllegalArgumentException(\"NOT operation can only work with comparison SQL clauses, not \" + r4)\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000d}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002d}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.query.Not.setMissingClause((r3v0 'this' com.j256.ormlite.stmt.query.Not A[IMMUTABLE_TYPE, THIS]), (r4v0 com.j256.ormlite.stmt.query.Clause A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_10 -> Node_11;
}

