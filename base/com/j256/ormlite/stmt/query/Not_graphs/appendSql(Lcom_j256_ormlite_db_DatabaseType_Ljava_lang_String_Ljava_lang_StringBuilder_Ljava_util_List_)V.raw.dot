digraph "CFG forcom.j256.ormlite.stmt.query.Not.appendSql(Lcom\/j256\/ormlite\/db\/DatabaseType;Ljava\/lang\/String;Ljava\/lang\/StringBuilder;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.stmt.query.Comparison) = (r1 I:com.j256.ormlite.stmt.query.Not) com.j256.ormlite.stmt.query.Not.comparison com.j256.ormlite.stmt.query.Comparison \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:com.j256.ormlite.stmt.query.Exists) = (r1 I:com.j256.ormlite.stmt.query.Not) com.j256.ormlite.stmt.query.Not.exists com.j256.ormlite.stmt.query.Exists \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0009 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: NEW_INSTANCE  (r2 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x000b: CONST_STR  (r3 I:java.lang.String) =  \"Clause has not been set in NOT operation\" \l0x000d: INVOKE  \l  (r2 I:java.lang.IllegalStateException)\l  (r3 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IGET  (r0 I:com.j256.ormlite.stmt.query.Comparison) = (r1 I:com.j256.ormlite.stmt.query.Not) com.j256.ormlite.stmt.query.Not.comparison com.j256.ormlite.stmt.query.Comparison \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0020 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: CONST_STR  (r0 I:java.lang.String) =  \"(NOT \" \l0x0017: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001a: IGET  (r0 I:com.j256.ormlite.stmt.query.Exists) = (r1 I:com.j256.ormlite.stmt.query.Not) com.j256.ormlite.stmt.query.Not.exists com.j256.ormlite.stmt.query.Exists \l0x001c: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.query.Exists)\l  (r2 I:com.j256.ormlite.db.DatabaseType)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.StringBuilder)\l  (r5 I:java.util.List)\l com.j256.ormlite.stmt.query.Exists.appendSql(com.j256.ormlite.db.DatabaseType, java.lang.String, java.lang.StringBuilder, java.util.List):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|0x0020: CONST_STR  (r0 I:java.lang.String) =  \"(NOT \" \l0x0022: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002f \l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|0x0027: INVOKE  \l  (r2 I:com.j256.ormlite.db.DatabaseType)\l  (r4 I:java.lang.StringBuilder)\l  (r3 I:java.lang.String)\l com.j256.ormlite.db.DatabaseType.appendEscapedEntityName(java.lang.StringBuilder, java.lang.String):void type: INTERFACE \l0x002a: CONST  (r3 I:?[int, float, short, byte, char]) = (46 ?[int, float, short, byte, char]) \l0x002c: INVOKE  (r4 I:java.lang.StringBuilder), (r3 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: IGET  (r3 I:com.j256.ormlite.stmt.query.Comparison) = (r1 I:com.j256.ormlite.stmt.query.Not) com.j256.ormlite.stmt.query.Not.comparison com.j256.ormlite.stmt.query.Comparison \l0x0031: INVOKE  (r3 I:java.lang.String) = (r3 I:com.j256.ormlite.stmt.query.Comparison) com.j256.ormlite.stmt.query.Comparison.getColumnName():java.lang.String type: INTERFACE \l0x0035: INVOKE  \l  (r2 I:com.j256.ormlite.db.DatabaseType)\l  (r4 I:java.lang.StringBuilder)\l  (r3 I:java.lang.String)\l com.j256.ormlite.db.DatabaseType.appendEscapedEntityName(java.lang.StringBuilder, java.lang.String):void type: INTERFACE \l0x0038: CONST  (r3 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x003a: INVOKE  (r4 I:java.lang.StringBuilder), (r3 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x003d: IGET  (r3 I:com.j256.ormlite.stmt.query.Comparison) = (r1 I:com.j256.ormlite.stmt.query.Not) com.j256.ormlite.stmt.query.Not.comparison com.j256.ormlite.stmt.query.Comparison \l0x003f: INVOKE  \l  (r3 I:com.j256.ormlite.stmt.query.Comparison)\l  (r4 I:java.lang.StringBuilder)\l com.j256.ormlite.stmt.query.Comparison.appendOperation(java.lang.StringBuilder):void type: INTERFACE \l0x0042: IGET  (r3 I:com.j256.ormlite.stmt.query.Comparison) = (r1 I:com.j256.ormlite.stmt.query.Not) com.j256.ormlite.stmt.query.Not.comparison com.j256.ormlite.stmt.query.Comparison \l0x0044: INVOKE  \l  (r3 I:com.j256.ormlite.stmt.query.Comparison)\l  (r2 I:com.j256.ormlite.db.DatabaseType)\l  (r4 I:java.lang.StringBuilder)\l  (r5 I:java.util.List)\l com.j256.ormlite.stmt.query.Comparison.appendValue(com.j256.ormlite.db.DatabaseType, java.lang.StringBuilder, java.util.List):void type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x0047|0x0047: CONST_STR  (r2 I:java.lang.String) =  \") \" \l0x0049: INVOKE  (r4 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x004c|0x004c: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.query.Not.appendSql((r1 'this' I:com.j256.ormlite.stmt.query.Not A[IMMUTABLE_TYPE, THIS]), (r2 I:com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.util.List\<com.j256.ormlite.stmt.ArgumentHolder\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Ljava\/lang\/String;, Ljava\/lang\/StringBuilder;, Ljava\/util\/List\<, Lcom\/j256\/ormlite\/stmt\/ArgumentHolder;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_7[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

