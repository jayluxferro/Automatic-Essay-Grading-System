digraph "CFG forcom.j256.ormlite.stmt.QueryBuilder.JoinType.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.j256.ormlite.stmt.QueryBuilder$JoinType) =  com.j256.ormlite.stmt.QueryBuilder$JoinType \l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"INNER\" \l0x0004: CONST_STR  (r2 I:java.lang.String) =  \"INNER\" \l0x0006: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.QueryBuilder$JoinType)\l  (r1 I:java.lang.String)\l  (r3 I:int)\l  (r2 I:java.lang.String)\l com.j256.ormlite.stmt.QueryBuilder.JoinType.\<init\>(java.lang.String, int, java.lang.String):void type: DIRECT \l0x000a: SPUT  (r0 I:com.j256.ormlite.stmt.QueryBuilder$JoinType) com.j256.ormlite.stmt.QueryBuilder.JoinType.INNER com.j256.ormlite.stmt.QueryBuilder$JoinType \l0x000c: NEW_INSTANCE  (r0 I:com.j256.ormlite.stmt.QueryBuilder$JoinType) =  com.j256.ormlite.stmt.QueryBuilder$JoinType \l0x000e: CONST_STR  (r1 I:java.lang.String) =  \"LEFT\" \l0x0010: CONST_STR  (r2 I:java.lang.String) =  \"LEFT\" \l0x0012: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0013: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.QueryBuilder$JoinType)\l  (r1 I:java.lang.String)\l  (r4 I:int)\l  (r2 I:java.lang.String)\l com.j256.ormlite.stmt.QueryBuilder.JoinType.\<init\>(java.lang.String, int, java.lang.String):void type: DIRECT \l0x0016: SPUT  (r0 I:com.j256.ormlite.stmt.QueryBuilder$JoinType) com.j256.ormlite.stmt.QueryBuilder.JoinType.LEFT com.j256.ormlite.stmt.QueryBuilder$JoinType \l0x0018: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0019: NEW_ARRAY  (r0 I:com.j256.ormlite.stmt.QueryBuilder$JoinType[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: com.j256.ormlite.stmt.QueryBuilder$JoinType[] \l0x001b: SGET  (r1 I:com.j256.ormlite.stmt.QueryBuilder$JoinType) =  com.j256.ormlite.stmt.QueryBuilder.JoinType.INNER com.j256.ormlite.stmt.QueryBuilder$JoinType \l0x001d: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x001f: SGET  (r1 I:com.j256.ormlite.stmt.QueryBuilder$JoinType) =  com.j256.ormlite.stmt.QueryBuilder.JoinType.LEFT com.j256.ormlite.stmt.QueryBuilder$JoinType \l0x0021: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0023: SPUT  (r0 I:com.j256.ormlite.stmt.QueryBuilder$JoinType[]) com.j256.ormlite.stmt.QueryBuilder.JoinType.$VALUES com.j256.ormlite.stmt.QueryBuilder$JoinType[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0025|0x0025: RETURN   \l}"];
MethodNode[shape=record,label="{static void com.j256.ormlite.stmt.QueryBuilder.JoinType.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

