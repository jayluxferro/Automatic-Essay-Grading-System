digraph "CFG forcom.j256.ormlite.stmt.RawResultsImpl.getResults()Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|SYNTHETIC\lSplitter:B:1:0x0005\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0005\l|0x0005: IGET  (r1 I:com.j256.ormlite.stmt.SelectIterator\<T, java.lang.Void\>) = (r2 I:com.j256.ormlite.stmt.RawResultsImpl) com.j256.ormlite.stmt.RawResultsImpl.iterator com.j256.ormlite.stmt.SelectIterator A[Catch:\{ all \-\> 0x001d \}, TRY_ENTER]\l0x0007: INVOKE  (r1 I:boolean) = (r1 I:com.j256.ormlite.stmt.SelectIterator) com.j256.ormlite.stmt.SelectIterator.hasNext():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x001d \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0017 A[Catch:\{ all \-\> 0x001d \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r1 I:com.j256.ormlite.stmt.SelectIterator\<T, java.lang.Void\>) = (r2 I:com.j256.ormlite.stmt.RawResultsImpl) com.j256.ormlite.stmt.RawResultsImpl.iterator com.j256.ormlite.stmt.SelectIterator A[Catch:\{ all \-\> 0x001d \}]\l0x000f: INVOKE  (r1 I:java.lang.Object) = (r1 I:com.j256.ormlite.stmt.SelectIterator) com.j256.ormlite.stmt.SelectIterator.next():java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x001d \}]\l0x0013: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE A[Catch:\{ all \-\> 0x001d \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: CONST_STR  (r1 I:java.lang.String) =  \"raw results iterator\" \l0x0019: INVOKE  (r2 I:java.io.Closeable), (r1 I:java.lang.String) com.j256.ormlite.misc.IOUtils.closeThrowSqlException(java.io.Closeable, java.lang.String):void type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: RETURN  (r0 I:java.util.List\<T\>) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|ExcHandler: all null\lSplitter:B:1:0x0005\l|0x001d: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: CONST_STR  (r1 I:java.lang.String) =  \"raw results iterator\" \l0x0020: INVOKE  (r2 I:java.io.Closeable), (r1 I:java.lang.String) com.j256.ormlite.misc.IOUtils.closeThrowSqlException(java.io.Closeable, java.lang.String):void type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.util.List\<T\> com.j256.ormlite.stmt.RawResultsImpl.getResults((r2 'this' I:com.j256.ormlite.stmt.RawResultsImpl A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

