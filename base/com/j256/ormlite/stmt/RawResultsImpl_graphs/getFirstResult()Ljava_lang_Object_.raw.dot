digraph "CFG forcom.j256.ormlite.stmt.RawResultsImpl.getFirstResult()Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:com.j256.ormlite.stmt.SelectIterator\<T, java.lang.Void\>) = (r2 I:com.j256.ormlite.stmt.RawResultsImpl) com.j256.ormlite.stmt.RawResultsImpl.iterator com.j256.ormlite.stmt.SelectIterator A[Catch:\{ all \-\> 0x0016 \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:com.j256.ormlite.stmt.SelectIterator) com.j256.ormlite.stmt.SelectIterator.hasNextThrow():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0016 \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0014 A[Catch:\{ all \-\> 0x0016 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:com.j256.ormlite.stmt.SelectIterator\<T, java.lang.Void\>) = (r2 I:com.j256.ormlite.stmt.RawResultsImpl) com.j256.ormlite.stmt.RawResultsImpl.iterator com.j256.ormlite.stmt.SelectIterator A[Catch:\{ all \-\> 0x0016 \}]\l0x000a: INVOKE  (r0 I:java.lang.Object) = (r0 I:com.j256.ormlite.stmt.SelectIterator) com.j256.ormlite.stmt.SelectIterator.nextThrow():java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0016 \}]\l0x000d: NOP   A[TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: CONST_STR  (r1 I:java.lang.String) =  \"raw results iterator\" \l0x0010: INVOKE  (r2 I:java.io.Closeable), (r1 I:java.lang.String) com.j256.ormlite.misc.IOUtils.closeThrowSqlException(java.io.Closeable, java.lang.String):void type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: RETURN  (r0 I:T) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|ExcHandler: all null\lSplitter:B:0:0x0000\l|0x0016: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: CONST_STR  (r1 I:java.lang.String) =  \"raw results iterator\" \l0x0019: INVOKE  (r2 I:java.io.Closeable), (r1 I:java.lang.String) com.j256.ormlite.misc.IOUtils.closeThrowSqlException(java.io.Closeable, java.lang.String):void type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public T com.j256.ormlite.stmt.RawResultsImpl.getFirstResult((r2 'this' I:com.j256.ormlite.stmt.RawResultsImpl A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[()TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_7;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

