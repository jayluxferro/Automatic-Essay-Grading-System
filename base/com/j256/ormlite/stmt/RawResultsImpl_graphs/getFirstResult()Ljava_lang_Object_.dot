digraph "CFG forcom.j256.ormlite.stmt.RawResultsImpl.getFirstResult()Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ all \-\> 0x0016 \}\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|Catch:\{ all \-\> 0x0016 \}\l|if (r2.iterator.hasNextThrow() == false) goto L_0x0014     \/\/ Catch:\{ all \-\> 0x0016 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|Catch:\{ all \-\> 0x0016 \}\l|java.lang.Object r0 = r2.iterator.nextThrow()     \/\/ Catch:\{ all \-\> 0x0016 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|DONT_GENERATE\lPHI: r0 \l  PHI: (r0v4 T) = (r0v3 T), (r0v6 T) binds: [B:6:0x0014, B:3:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.String r1 = \"raw results iterator\"\lcom.j256.ormlite.misc.IOUtils.closeThrowSqlException(r2, r1)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|RETURN\l|return r0\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|r0 = null\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|ExcHandler:  FINALLY\lSplitter:B:0:0x0000\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|FINALLY_INSNS\l|java.lang.String r1 = \"raw results iterator\"\lcom.j256.ormlite.misc.IOUtils.closeThrowSqlException(r2, r1)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|throw r0\l}"];
MethodNode[shape=record,label="{public T com.j256.ormlite.stmt.RawResultsImpl.getFirstResult((r2v0 'this' com.j256.ormlite.stmt.RawResultsImpl A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[()TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_7;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

