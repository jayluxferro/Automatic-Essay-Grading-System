digraph "CFG forcom.j256.ormlite.stmt.QueryBuilder.appendLimit(Ljava\/lang\/StringBuilder;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Long) = (r4 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.limit java.lang.Long \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0019 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:com.j256.ormlite.db.DatabaseType) = (r4 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.databaseType com.j256.ormlite.db.DatabaseType \l0x0006: INVOKE  (r0 I:boolean) = (r0 I:com.j256.ormlite.db.DatabaseType) com.j256.ormlite.db.DatabaseType.isLimitSqlSupported():boolean type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IGET  (r0 I:com.j256.ormlite.db.DatabaseType) = (r4 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.databaseType com.j256.ormlite.db.DatabaseType \l0x000e: IGET  (r1 I:java.lang.Long) = (r4 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.limit java.lang.Long \l0x0010: INVOKE  (r1 I:long) = (r1 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL \l0x0014: IGET  (r3 I:java.lang.Long) = (r4 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.offset java.lang.Long \l0x0016: INVOKE  \l  (r0 I:com.j256.ormlite.db.DatabaseType)\l  (r5 I:java.lang.StringBuilder)\l  (r1 I:long)\l  (r3 I:java.lang.Long)\l com.j256.ormlite.db.DatabaseType.appendLimitValue(java.lang.StringBuilder, long, java.lang.Long):void type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.j256.ormlite.stmt.QueryBuilder.appendLimit((r4 'this' I:com.j256.ormlite.stmt.QueryBuilder A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
}

