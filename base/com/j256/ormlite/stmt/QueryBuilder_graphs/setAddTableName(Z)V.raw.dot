digraph "CFG forcom.j256.ormlite.stmt.QueryBuilder.setAddTableName(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  (r3 I:boolean), (r2 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.addTableName boolean \l0x0002: IGET  (r0 I:java.util.List\<com.j256.ormlite.stmt.QueryBuilder\<T, ID\>$JoinInfo\>) = (r2 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.joinList java.util.List \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:java.util.List\<com.j256.ormlite.stmt.QueryBuilder\<T, ID\>$JoinInfo\>) = (r2 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.joinList java.util.List \l0x0008: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0016: CHECK_CAST  (r1 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) = (com.j256.ormlite.stmt.QueryBuilder$JoinInfo) (r1 I:?[OBJECT, ARRAY]) \l0x0018: IGET  (r1 I:com.j256.ormlite.stmt.QueryBuilder\<?, ?\>) = (r1 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) com.j256.ormlite.stmt.QueryBuilder.JoinInfo.queryBuilder com.j256.ormlite.stmt.QueryBuilder \l0x001a: INVOKE  (r1 I:com.j256.ormlite.stmt.QueryBuilder), (r3 I:boolean) com.j256.ormlite.stmt.QueryBuilder.setAddTableName(boolean):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.j256.ormlite.stmt.QueryBuilder.setAddTableName((r2 'this' I:com.j256.ormlite.stmt.QueryBuilder A[IMMUTABLE_TYPE, THIS]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_3;
}

