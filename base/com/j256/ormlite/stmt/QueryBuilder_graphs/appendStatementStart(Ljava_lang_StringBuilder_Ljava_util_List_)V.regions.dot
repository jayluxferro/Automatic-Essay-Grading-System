digraph "CFG forcom.j256.ormlite.stmt.QueryBuilder.appendStatementStart(Ljava\/lang\/StringBuilder;Ljava\/util\/List;)V" {
subgraph cluster_Region_493375939 {
label = "R(9:(1:2)(1:3)|4|(1:6)|(1:9)|(1:12)(1:13)|14|(1:16)|17|(1:(1:19)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1734516763 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1.joinList == null) goto L_0x0004\l}"];
subgraph cluster_Region_1270962158 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|setAddTableName(false)\l}"];
}
subgraph cluster_Region_1977581782 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|setAddTableName(true)\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x000d|r2.append(\"SELECT \")\l}"];
subgraph cluster_IfRegion_719725031 {
label = "IF [B:5:0x0018] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r1.databaseType.isLimitAfterSelect() == true) goto L_0x001a\l}"];
subgraph cluster_Region_1484140248 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001a|appendLimit(r2)\l}"];
}
}
subgraph cluster_IfRegion_424246303 {
label = "IF [B:8:0x001f] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001f|if (r1.distinct == true) goto L_0x0021\l}"];
subgraph cluster_Region_270112464 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0021|r2.append(\"DISTINCT \")\l}"];
}
}
subgraph cluster_IfRegion_191591469 {
label = "IF [B:11:0x0028] THEN: R(1:12) ELSE: R(1:13)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0028|if (r1.countOfQuery == null) goto L_0x002a\l}"];
subgraph cluster_Region_1652726646 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002a|appendSelects(r2)\l}"];
}
subgraph cluster_Region_813279933 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x002e|r1.type = com.j256.ormlite.stmt.StatementBuilder.StatementType.SELECT_LONG\lr2.append(\"COUNT(\")\lr2.append(r1.countOfQuery)\lr2.append(\") \")\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0041|r2.append(\"FROM \")\lr1.databaseType.appendEscapedEntityName(r2, r1.tableName)\l}"];
subgraph cluster_IfRegion_1820984692 {
label = "IF [B:15:0x004f] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x004f|if (r1.alias != null) goto L_0x0051\l}"];
subgraph cluster_Region_1007734484 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0051|appendAlias(r2)\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x0054|r2.append(' ')\l}"];
subgraph cluster_Region_1254075147 {
label = "R(1:(1:19))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_938396835 {
label = "IF [B:18:0x005b] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x005b|if (r1.joinList != null) goto L_0x005d\l}"];
subgraph cluster_Region_200527503 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x005d|appendJoinSql(r2)\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001d}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0026}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void com.j256.ormlite.stmt.QueryBuilder.appendStatementStart((r1v0 'this' com.j256.ormlite.stmt.QueryBuilder A[IMMUTABLE_TYPE, THIS]), (r2v0 java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.util.List\<com.j256.ormlite.stmt.ArgumentHolder\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/StringBuilder;, Ljava\/util\/List\<, Lcom\/j256\/ormlite\/stmt\/ArgumentHolder;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_21[style=dashed];
Node_19 -> Node_20;
Node_0 -> Node_1;
Node_7 -> Node_8;
Node_10 -> Node_11;
}

