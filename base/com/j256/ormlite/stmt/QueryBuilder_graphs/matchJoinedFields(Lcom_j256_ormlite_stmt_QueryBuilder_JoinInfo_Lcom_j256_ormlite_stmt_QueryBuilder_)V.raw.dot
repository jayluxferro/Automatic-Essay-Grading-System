digraph "CFG forcom.j256.ormlite.stmt.QueryBuilder.matchJoinedFields(Lcom\/j256\/ormlite\/stmt\/QueryBuilder$JoinInfo;Lcom\/j256\/ormlite\/stmt\/QueryBuilder;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.table.TableInfo) = (r7 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.tableInfo com.j256.ormlite.table.TableInfo \l0x0002: INVOKE  (r0 I:com.j256.ormlite.field.FieldType[]) = (r0 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getFieldTypes():com.j256.ormlite.field.FieldType[] type: VIRTUAL \l0x0006: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l0x0007: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r3 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:9:0x002b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: AGET  (r4 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x000d: INVOKE  (r5 I:com.j256.ormlite.field.FieldType) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getForeignRefField():com.j256.ormlite.field.FieldType type: VIRTUAL \l0x0011: INVOKE  (r6 I:boolean) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.isForeign():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0028 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: IGET  (r6 I:com.j256.ormlite.table.TableInfo) = (r9 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.tableInfo com.j256.ormlite.table.TableInfo \l0x0019: INVOKE  (r6 I:com.j256.ormlite.field.FieldType) = (r6 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getIdField():com.j256.ormlite.field.FieldType type: VIRTUAL \l0x001d: INVOKE  (r6 I:boolean) = \l  (r5 I:com.j256.ormlite.field.FieldType)\l  (r6 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0028 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: IPUT  \l  (r4 I:com.j256.ormlite.field.FieldType)\l  (r8 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo)\l com.j256.ormlite.stmt.QueryBuilder.JoinInfo.localField com.j256.ormlite.field.FieldType \l0x0025: IPUT  \l  (r5 I:com.j256.ormlite.field.FieldType)\l  (r8 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo)\l com.j256.ormlite.stmt.QueryBuilder.JoinInfo.remoteField com.j256.ormlite.field.FieldType \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: IGET  (r0 I:com.j256.ormlite.table.TableInfo) = (r9 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.tableInfo com.j256.ormlite.table.TableInfo \l0x002d: INVOKE  (r0 I:com.j256.ormlite.field.FieldType[]) = (r0 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getFieldTypes():com.j256.ormlite.field.FieldType[] type: VIRTUAL \l0x0031: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|0x0032: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:18:0x0052 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: AGET  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0036: INVOKE  (r4 I:boolean) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.isForeign():boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|0x003a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x004f \l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|0x003c: INVOKE  (r4 I:com.j256.ormlite.field.FieldType) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getForeignIdField():com.j256.ormlite.field.FieldType type: VIRTUAL \l0x0040: IGET  (r5 I:com.j256.ormlite.field.FieldType) = (r7 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.idField com.j256.ormlite.field.FieldType \l0x0042: INVOKE  (r4 I:boolean) = \l  (r4 I:com.j256.ormlite.field.FieldType)\l  (r5 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|0x0046: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x004f \l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|0x0048: IGET  (r9 I:com.j256.ormlite.field.FieldType) = (r7 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.idField com.j256.ormlite.field.FieldType \l0x004a: IPUT  \l  (r9 I:com.j256.ormlite.field.FieldType)\l  (r8 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo)\l com.j256.ormlite.stmt.QueryBuilder.JoinInfo.localField com.j256.ormlite.field.FieldType \l0x004c: IPUT  \l  (r3 I:com.j256.ormlite.field.FieldType)\l  (r8 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo)\l com.j256.ormlite.stmt.QueryBuilder.JoinInfo.remoteField com.j256.ormlite.field.FieldType \l}"];
Node_16 [shape=record,label="{16\:\ 0x004e|0x004e: RETURN   \l}"];
Node_17 [shape=record,label="{17\:\ 0x004f|0x004f: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0052|0x0052: NEW_INSTANCE  (r8 I:java.sql.SQLException) =  java.sql.SQLException \l0x0054: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0056: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0059: CONST_STR  (r1 I:java.lang.String) =  \"Could not find a foreign \" \l0x005b: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005e: IGET  (r1 I:com.j256.ormlite.table.TableInfo) = (r7 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.tableInfo com.j256.ormlite.table.TableInfo \l0x0060: INVOKE  (r1 I:java.lang.Class) = (r1 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getDataClass():java.lang.Class type: VIRTUAL \l0x0064: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0067: CONST_STR  (r1 I:java.lang.String) =  \" field in \" \l0x0069: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006c: IGET  (r9 I:com.j256.ormlite.table.TableInfo) = (r9 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.tableInfo com.j256.ormlite.table.TableInfo \l0x006e: INVOKE  (r9 I:java.lang.Class) = (r9 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getDataClass():java.lang.Class type: VIRTUAL \l0x0072: INVOKE  (r0 I:java.lang.StringBuilder), (r9 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0075: CONST_STR  (r9 I:java.lang.String) =  \" or vice versa\" \l0x0077: INVOKE  (r0 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007a: INVOKE  (r9 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x007e: INVOKE  (r8 I:java.sql.SQLException), (r9 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0081|0x0081: THROW  (r8 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void com.j256.ormlite.stmt.QueryBuilder.matchJoinedFields((r7 'this' I:com.j256.ormlite.stmt.QueryBuilder A[IMMUTABLE_TYPE, THIS]), (r8 I:com.j256.ormlite.stmt.QueryBuilder\<T, ID\>$JoinInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:com.j256.ormlite.stmt.QueryBuilder\<?, ?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/stmt\/QueryBuilder\<, TT;TID;\>.JoinInfo;, Lcom\/j256\/ormlite\/stmt\/QueryBuilder\<, **\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_18;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_10;
Node_18 -> Node_19;
}

