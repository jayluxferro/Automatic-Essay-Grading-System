digraph "CFG forcom.j256.ormlite.stmt.QueryBuilder.appendGroupBys(Ljava\/lang\/StringBuilder;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r5 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.hasGroupStuff():boolean type: DIRECT \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  \l  (r5 I:com.j256.ormlite.stmt.QueryBuilder)\l  (r6 I:java.lang.StringBuilder)\l  (r2 I:boolean)\l com.j256.ormlite.stmt.QueryBuilder.appendGroupBys(java.lang.StringBuilder, boolean):void type: DIRECT \l0x000b: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IGET  (r0 I:java.util.List\<com.j256.ormlite.stmt.QueryBuilder\<T, ID\>$JoinInfo\>) = (r5 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.joinList java.util.List \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0035 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IGET  (r0 I:java.util.List\<com.j256.ormlite.stmt.QueryBuilder\<T, ID\>$JoinInfo\>) = (r5 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.joinList java.util.List \l0x0012: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: INVOKE  (r3 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0035 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0020: CHECK_CAST  (r3 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) = (com.j256.ormlite.stmt.QueryBuilder$JoinInfo) (r3 I:?[OBJECT, ARRAY]) \l0x0022: IGET  (r4 I:com.j256.ormlite.stmt.QueryBuilder\<?, ?\>) = (r3 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) com.j256.ormlite.stmt.QueryBuilder.JoinInfo.queryBuilder com.j256.ormlite.stmt.QueryBuilder \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0016 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: IGET  (r4 I:com.j256.ormlite.stmt.QueryBuilder\<?, ?\>) = (r3 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) com.j256.ormlite.stmt.QueryBuilder.JoinInfo.queryBuilder com.j256.ormlite.stmt.QueryBuilder \l0x0028: INVOKE  (r4 I:boolean) = (r4 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.hasGroupStuff():boolean type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0016 \l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|0x002e: IGET  (r3 I:com.j256.ormlite.stmt.QueryBuilder\<?, ?\>) = (r3 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) com.j256.ormlite.stmt.QueryBuilder.JoinInfo.queryBuilder com.j256.ormlite.stmt.QueryBuilder \l0x0030: INVOKE  \l  (r3 I:com.j256.ormlite.stmt.QueryBuilder)\l  (r6 I:java.lang.StringBuilder)\l  (r2 I:boolean)\l com.j256.ormlite.stmt.QueryBuilder.appendGroupBys(java.lang.StringBuilder, boolean):void type: DIRECT \l0x0033: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|0x0035: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.j256.ormlite.stmt.QueryBuilder.appendGroupBys((r5 'this' I:com.j256.ormlite.stmt.QueryBuilder A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_6;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_6;
Node_11 -> Node_12[style=dashed];
Node_12 -> Node_6;
}

