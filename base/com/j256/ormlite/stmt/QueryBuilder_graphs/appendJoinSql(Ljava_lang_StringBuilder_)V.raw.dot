digraph "CFG forcom.j256.ormlite.stmt.QueryBuilder.appendJoinSql(Ljava\/lang\/StringBuilder;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<com.j256.ormlite.stmt.QueryBuilder\<T, ID\>$JoinInfo\>) = (r5 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.joinList java.util.List \l0x0002: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0075 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0010: CHECK_CAST  (r1 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) = (com.j256.ormlite.stmt.QueryBuilder$JoinInfo) (r1 I:?[OBJECT, ARRAY]) \l0x0012: IGET  (r2 I:com.j256.ormlite.stmt.QueryBuilder$JoinType) = (r1 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) com.j256.ormlite.stmt.QueryBuilder.JoinInfo.type com.j256.ormlite.stmt.QueryBuilder$JoinType \l0x0014: INVOKE  (r2 I:java.lang.String) = (r2 I:com.j256.ormlite.stmt.QueryBuilder$JoinType) com.j256.ormlite.stmt.QueryBuilder.JoinType.access$100(com.j256.ormlite.stmt.QueryBuilder$JoinType):java.lang.String type: STATIC \l0x0018: INVOKE  (r6 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001b: CONST_STR  (r2 I:java.lang.String) =  \" JOIN \" \l0x001d: INVOKE  (r6 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0020: IGET  (r2 I:com.j256.ormlite.db.DatabaseType) = (r5 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.databaseType com.j256.ormlite.db.DatabaseType \l0x0022: IGET  (r3 I:com.j256.ormlite.stmt.QueryBuilder\<?, ?\>) = (r1 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) com.j256.ormlite.stmt.QueryBuilder.JoinInfo.queryBuilder com.j256.ormlite.stmt.QueryBuilder \l0x0024: IGET  (r3 I:java.lang.String) = (r3 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.tableName java.lang.String \l0x0026: INVOKE  \l  (r2 I:com.j256.ormlite.db.DatabaseType)\l  (r6 I:java.lang.StringBuilder)\l  (r3 I:java.lang.String)\l com.j256.ormlite.db.DatabaseType.appendEscapedEntityName(java.lang.StringBuilder, java.lang.String):void type: INTERFACE \l0x0029: IGET  (r2 I:com.j256.ormlite.stmt.QueryBuilder\<?, ?\>) = (r1 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) com.j256.ormlite.stmt.QueryBuilder.JoinInfo.queryBuilder com.j256.ormlite.stmt.QueryBuilder \l0x002b: IGET  (r2 I:java.lang.String) = (r2 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.alias java.lang.String \l}"];
Node_4 [shape=record,label="{4\:\ 0x002d|0x002d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0034 \l}"];
Node_5 [shape=record,label="{5\:\ 0x002f|0x002f: IGET  (r2 I:com.j256.ormlite.stmt.QueryBuilder\<?, ?\>) = (r1 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) com.j256.ormlite.stmt.QueryBuilder.JoinInfo.queryBuilder com.j256.ormlite.stmt.QueryBuilder \l0x0031: INVOKE  \l  (r2 I:com.j256.ormlite.stmt.QueryBuilder)\l  (r6 I:java.lang.StringBuilder)\l com.j256.ormlite.stmt.QueryBuilder.appendAlias(java.lang.StringBuilder):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0034|0x0034: CONST_STR  (r2 I:java.lang.String) =  \" ON \" \l0x0036: INVOKE  (r6 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0039: INVOKE  \l  (r5 I:com.j256.ormlite.stmt.QueryBuilder)\l  (r6 I:java.lang.StringBuilder)\l com.j256.ormlite.stmt.QueryBuilder.appendTableQualifier(java.lang.StringBuilder):void type: VIRTUAL \l0x003c: CONST  (r2 I:?[int, float, short, byte, char]) = (46 ?[int, float, short, byte, char]) \l0x003e: INVOKE  (r6 I:java.lang.StringBuilder), (r2 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0041: IGET  (r3 I:com.j256.ormlite.db.DatabaseType) = (r5 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.databaseType com.j256.ormlite.db.DatabaseType \l0x0043: IGET  (r4 I:com.j256.ormlite.field.FieldType) = (r1 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) com.j256.ormlite.stmt.QueryBuilder.JoinInfo.localField com.j256.ormlite.field.FieldType \l0x0045: INVOKE  (r4 I:java.lang.String) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getColumnName():java.lang.String type: VIRTUAL \l0x0049: INVOKE  \l  (r3 I:com.j256.ormlite.db.DatabaseType)\l  (r6 I:java.lang.StringBuilder)\l  (r4 I:java.lang.String)\l com.j256.ormlite.db.DatabaseType.appendEscapedEntityName(java.lang.StringBuilder, java.lang.String):void type: INTERFACE \l0x004c: CONST_STR  (r3 I:java.lang.String) =  \" = \" \l0x004e: INVOKE  (r6 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0051: IGET  (r3 I:com.j256.ormlite.stmt.QueryBuilder\<?, ?\>) = (r1 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) com.j256.ormlite.stmt.QueryBuilder.JoinInfo.queryBuilder com.j256.ormlite.stmt.QueryBuilder \l0x0053: INVOKE  \l  (r3 I:com.j256.ormlite.stmt.QueryBuilder)\l  (r6 I:java.lang.StringBuilder)\l com.j256.ormlite.stmt.QueryBuilder.appendTableQualifier(java.lang.StringBuilder):void type: VIRTUAL \l0x0056: INVOKE  (r6 I:java.lang.StringBuilder), (r2 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0059: IGET  (r2 I:com.j256.ormlite.db.DatabaseType) = (r5 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.databaseType com.j256.ormlite.db.DatabaseType \l0x005b: IGET  (r3 I:com.j256.ormlite.field.FieldType) = (r1 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) com.j256.ormlite.stmt.QueryBuilder.JoinInfo.remoteField com.j256.ormlite.field.FieldType \l0x005d: INVOKE  (r3 I:java.lang.String) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getColumnName():java.lang.String type: VIRTUAL \l0x0061: INVOKE  \l  (r2 I:com.j256.ormlite.db.DatabaseType)\l  (r6 I:java.lang.StringBuilder)\l  (r3 I:java.lang.String)\l com.j256.ormlite.db.DatabaseType.appendEscapedEntityName(java.lang.StringBuilder, java.lang.String):void type: INTERFACE \l0x0064: CONST  (r2 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0066: INVOKE  (r6 I:java.lang.StringBuilder), (r2 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0069: IGET  (r2 I:com.j256.ormlite.stmt.QueryBuilder\<?, ?\>) = (r1 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) com.j256.ormlite.stmt.QueryBuilder.JoinInfo.queryBuilder com.j256.ormlite.stmt.QueryBuilder \l0x006b: IGET  (r2 I:java.util.List\<com.j256.ormlite.stmt.QueryBuilder\<T, ID\>$JoinInfo\>) = (r2 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.joinList java.util.List \l}"];
Node_7 [shape=record,label="{7\:\ 0x006d|0x006d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0006 \l}"];
Node_8 [shape=record,label="{8\:\ 0x006f|0x006f: IGET  (r1 I:com.j256.ormlite.stmt.QueryBuilder\<?, ?\>) = (r1 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) com.j256.ormlite.stmt.QueryBuilder.JoinInfo.queryBuilder com.j256.ormlite.stmt.QueryBuilder \l0x0071: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.QueryBuilder)\l  (r6 I:java.lang.StringBuilder)\l com.j256.ormlite.stmt.QueryBuilder.appendJoinSql(java.lang.StringBuilder):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0075|0x0075: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.j256.ormlite.stmt.QueryBuilder.appendJoinSql((r5 'this' I:com.j256.ormlite.stmt.QueryBuilder A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_7 -> Node_8[style=dashed];
Node_8 -> Node_1;
}

