digraph "CFG forcom.j256.ormlite.stmt.QueryBuilder.appendStatementEnd(Ljava\/lang\/StringBuilder;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|appendGroupBys(r1)\lappendHaving(r1)\lappendOrderBys(r1, r2)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|if (r0.databaseType.isLimitAfterSelect() != false) goto L_0x0014\l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|appendLimit(r1)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|appendOffset(r1)\lsetAddTableName(false)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|RETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void com.j256.ormlite.stmt.QueryBuilder.appendStatementEnd((r0v0 'this' com.j256.ormlite.stmt.QueryBuilder A[IMMUTABLE_TYPE, THIS]), (r1v0 java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 java.util.List\<com.j256.ormlite.stmt.ArgumentHolder\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/StringBuilder;, Ljava\/util\/List\<, Lcom\/j256\/ormlite\/stmt\/ArgumentHolder;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

