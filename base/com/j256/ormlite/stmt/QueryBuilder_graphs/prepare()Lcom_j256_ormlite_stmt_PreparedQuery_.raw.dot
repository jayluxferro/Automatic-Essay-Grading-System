digraph "CFG forcom.j256.ormlite.stmt.QueryBuilder.prepare()Lcom\/j256\/ormlite\/stmt\/PreparedQuery;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<com.j256.ormlite.stmt.query.ColumnNameOrRawSql\>) = (r2 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.selectList java.util.List \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IGET  (r1 I:java.lang.Long) = (r2 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.limit java.lang.Long \l0x0009: INVOKE  (r0 I:com.j256.ormlite.stmt.mapped.MappedPreparedStmt) = \l  (r2 I:com.j256.ormlite.stmt.StatementBuilder)\l  (r1 I:java.lang.Long)\l  (r0 I:boolean)\l com.j256.ormlite.stmt.StatementBuilder.prepareStatement(java.lang.Long, boolean):com.j256.ormlite.stmt.mapped.MappedPreparedStmt type: SUPER \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: RETURN  (r0 I:com.j256.ormlite.stmt.PreparedQuery\<T\>) \l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.stmt.PreparedQuery\<T\> com.j256.ormlite.stmt.QueryBuilder.prepare((r2 'this' I:com.j256.ormlite.stmt.QueryBuilder A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Lcom\/j256\/ormlite\/stmt\/PreparedQuery\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

