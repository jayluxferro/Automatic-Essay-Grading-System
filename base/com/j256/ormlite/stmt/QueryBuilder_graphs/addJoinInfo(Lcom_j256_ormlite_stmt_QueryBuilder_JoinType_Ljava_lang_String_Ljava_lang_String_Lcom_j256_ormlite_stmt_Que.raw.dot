digraph "CFG forcom.j256.ormlite.stmt.QueryBuilder.addJoinInfo(Lcom\/j256\/ormlite\/stmt\/QueryBuilder$JoinType;Ljava\/lang\/String;Ljava\/lang\/String;Lcom\/j256\/ormlite\/stmt\/QueryBuilder;Lcom\/j256\/ormlite\/stmt\/QueryBuilder$JoinWhereOperation;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo) =  com.j256.ormlite.stmt.QueryBuilder$JoinInfo \l0x0002: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo)\l  (r1 I:com.j256.ormlite.stmt.QueryBuilder)\l  (r2 I:com.j256.ormlite.stmt.QueryBuilder$JoinType)\l  (r5 I:com.j256.ormlite.stmt.QueryBuilder)\l  (r6 I:com.j256.ormlite.stmt.QueryBuilder$JoinWhereOperation)\l com.j256.ormlite.stmt.QueryBuilder.JoinInfo.\<init\>(com.j256.ormlite.stmt.QueryBuilder, com.j256.ormlite.stmt.QueryBuilder$JoinType, com.j256.ormlite.stmt.QueryBuilder, com.j256.ormlite.stmt.QueryBuilder$JoinWhereOperation):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.QueryBuilder)\l  (r0 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo)\l  (r5 I:com.j256.ormlite.stmt.QueryBuilder)\l com.j256.ormlite.stmt.QueryBuilder.matchJoinedFields(com.j256.ormlite.stmt.QueryBuilder$JoinInfo, com.j256.ormlite.stmt.QueryBuilder):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.QueryBuilder)\l  (r0 I:com.j256.ormlite.stmt.QueryBuilder$JoinInfo)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:com.j256.ormlite.stmt.QueryBuilder)\l com.j256.ormlite.stmt.QueryBuilder.matchJoinedFieldsByName(com.j256.ormlite.stmt.QueryBuilder$JoinInfo, java.lang.String, java.lang.String, com.j256.ormlite.stmt.QueryBuilder):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IGET  (r2 I:java.util.List\<com.j256.ormlite.stmt.QueryBuilder\<T, ID\>$JoinInfo\>) = (r1 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.joinList java.util.List \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0019 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x0014: INVOKE  (r2 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0017: IPUT  \l  (r2 I:java.util.List\<com.j256.ormlite.stmt.QueryBuilder\<T, ID\>$JoinInfo\>)\l  (r1 I:com.j256.ormlite.stmt.QueryBuilder)\l com.j256.ormlite.stmt.QueryBuilder.joinList java.util.List \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: IGET  (r2 I:java.util.List\<com.j256.ormlite.stmt.QueryBuilder\<T, ID\>$JoinInfo\>) = (r1 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.joinList java.util.List \l0x001b: INVOKE  (r2 I:java.util.List), (r0 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.j256.ormlite.stmt.QueryBuilder.addJoinInfo((r1 'this' I:com.j256.ormlite.stmt.QueryBuilder A[IMMUTABLE_TYPE, THIS]), (r2 I:com.j256.ormlite.stmt.QueryBuilder$JoinType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.j256.ormlite.stmt.QueryBuilder\<?, ?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.j256.ormlite.stmt.QueryBuilder$JoinWhereOperation A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/stmt\/QueryBuilder$JoinType;, Ljava\/lang\/String;, Ljava\/lang\/String;, Lcom\/j256\/ormlite\/stmt\/QueryBuilder\<, **\>;, Lcom\/j256\/ormlite\/stmt\/QueryBuilder$JoinWhereOperation;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

