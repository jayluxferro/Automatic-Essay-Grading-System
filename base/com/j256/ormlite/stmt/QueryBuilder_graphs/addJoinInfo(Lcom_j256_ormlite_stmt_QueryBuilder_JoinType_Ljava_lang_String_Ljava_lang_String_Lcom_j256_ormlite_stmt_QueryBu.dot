digraph "CFG forcom.j256.ormlite.stmt.QueryBuilder.addJoinInfo(Lcom\/j256\/ormlite\/stmt\/QueryBuilder$JoinType;Ljava\/lang\/String;Ljava\/lang\/String;Lcom\/j256\/ormlite\/stmt\/QueryBuilder;Lcom\/j256\/ormlite\/stmt\/QueryBuilder$JoinWhereOperation;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.j256.ormlite.stmt.QueryBuilder$JoinInfo r0 = new com.j256.ormlite.stmt.QueryBuilder.JoinInfo(r1, r2, r5, r6)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r3 != null) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|matchJoinedFields(r0, r5)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|matchJoinedFieldsByName(r0, r3, r4, r5)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r1.joinList != null) goto L_0x0019\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|r1.joinList = new java.util.ArrayList()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|r1.joinList.add(r0)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.j256.ormlite.stmt.QueryBuilder.addJoinInfo((r1v0 'this' com.j256.ormlite.stmt.QueryBuilder A[IMMUTABLE_TYPE, THIS]), (r2v0 com.j256.ormlite.stmt.QueryBuilder$JoinType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 com.j256.ormlite.stmt.QueryBuilder\<?, ?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 com.j256.ormlite.stmt.QueryBuilder$JoinWhereOperation A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/stmt\/QueryBuilder$JoinType;, Ljava\/lang\/String;, Ljava\/lang\/String;, Lcom\/j256\/ormlite\/stmt\/QueryBuilder\<, **\>;, Lcom\/j256\/ormlite\/stmt\/QueryBuilder$JoinWhereOperation;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

