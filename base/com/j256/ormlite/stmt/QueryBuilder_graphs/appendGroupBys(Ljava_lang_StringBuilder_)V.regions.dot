digraph "CFG forcom.j256.ormlite.stmt.QueryBuilder.appendGroupBys(Ljava\/lang\/StringBuilder;)V" {
subgraph cluster_Region_1221512537 {
label = "R(3:0|(1:2)|(1:(2:5|(2:8|(1:12)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|boolean r2 = true\l}"];
subgraph cluster_IfRegion_1407026009 {
label = "IF [B:1:0x0006] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (hasGroupStuff() == true) goto L_0x0008\l}"];
subgraph cluster_Region_1154974972 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|appendGroupBys(r6, true)\lr2 = false\l}"];
}
}
subgraph cluster_Region_794661102 {
label = "R(1:(2:5|(2:8|(1:12))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1573419557 {
label = "IF [B:4:0x000e] THEN: R(2:5|(2:8|(1:12))) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|if (r5.joinList != null) goto L_0x0010\l}"];
subgraph cluster_Region_1607361325 {
label = "R(2:5|(2:8|(1:12)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|java.util.Iterator r0 = r5.joinList.iterator()\l}"];
subgraph cluster_LoopRegion_1622602950 {
label = "LOOP:0: (2:8|(1:12))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001a|if (r0.hasNext() != false) goto L_0x001c\l}"];
subgraph cluster_Region_590332638 {
label = "R(2:8|(1:12))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001c|com.j256.ormlite.stmt.QueryBuilder$JoinInfo r3 = r0.next()\l}"];
subgraph cluster_IfRegion_1026067916 {
label = "IF [B:9:0x0024, B:11:0x002c] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0024|ADDED_TO_REGION\l|if (r3.queryBuilder != null) goto L_0x0026\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|ADDED_TO_REGION\l|if (r3.queryBuilder.hasGroupStuff() == true) goto L_0x002e\l}"];
subgraph cluster_Region_1771732542 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002e|r3.queryBuilder.appendGroupBys(r6, r2)\lr2 = false\l}"];
}
}
}
}
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x000c|PHI: r2 \l  PHI: (r2v1 boolean) = (r2v0 boolean), (r2v5 boolean) binds: [B:1:0x0006, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0016|LOOP_START\lPHI: r2 \l  PHI: (r2v2 boolean) = (r2v1 boolean), (r2v3 boolean) binds: [B:5:0x0010, B:13:0x0016] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0016\-\>B:13:0x0016\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0026}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0016|LOOP_END\lSYNTHETIC\lPHI: r2 \l  PHI: (r2v3 boolean) = (r2v2 boolean), (r2v2 boolean), (r2v4 boolean) binds: [B:15:0x0016, B:16:0x0016, B:17:0x0016] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0016\-\>B:13:0x0016\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0035|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0016|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0016|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0016|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.j256.ormlite.stmt.QueryBuilder.appendGroupBys((r5v0 'this' com.j256.ormlite.stmt.QueryBuilder A[IMMUTABLE_TYPE, THIS]), (r6v0 java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_18[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_14[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_15[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_16[style=dashed];
Node_12 -> Node_17;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_10 -> Node_11;
Node_13 -> Node_6;
Node_14 -> Node_19;
Node_15 -> Node_13;
Node_16 -> Node_13;
Node_17 -> Node_13;
}

