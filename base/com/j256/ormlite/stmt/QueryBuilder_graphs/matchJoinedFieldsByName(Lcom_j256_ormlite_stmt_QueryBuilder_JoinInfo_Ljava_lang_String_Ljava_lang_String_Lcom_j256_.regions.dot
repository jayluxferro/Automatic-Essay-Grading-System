digraph "CFG forcom.j256.ormlite.stmt.QueryBuilder.matchJoinedFieldsByName(Lcom\/j256\/ormlite\/stmt\/QueryBuilder$JoinInfo;Ljava\/lang\/String;Ljava\/lang\/String;Lcom\/j256\/ormlite\/stmt\/QueryBuilder;)V" {
subgraph cluster_Region_118090325 {
label = "R(2:0|(2:(2:2|(2:(2:5|6)|(1:4)))|(2:7|8)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.localField = r1.tableInfo.getFieldTypeByColumnName(r3)\l}"];
subgraph cluster_Region_666265290 {
label = "R(2:(2:2|(2:(2:5|6)|(1:4)))|(2:7|8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1800288348 {
label = "IF [B:1:0x000a] THEN: R(2:2|(2:(2:5|6)|(1:4))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r2.localField != null) goto L_0x000c\l}"];
subgraph cluster_Region_164574563 {
label = "R(2:2|(2:(2:5|6)|(1:4)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000c|r2.remoteField = r5.tableInfo.getFieldTypeByColumnName(r4)\l}"];
subgraph cluster_Region_1104952653 {
label = "R(2:(2:5|6)|(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1430819722 {
label = "IF [B:3:0x0016] THEN: R(2:5|6) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0016|if (r2.remoteField == null) goto L_0x0019\l}"];
subgraph cluster_Region_1340005799 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0019}"];
Node_6 [shape=record,label="{6\:\ 0x0042|throw new java.sql.SQLException(\"Could not find field in \" + r5.tableInfo.getDataClass() + \" that has column\-name '\" + r4 + \"'\")\l}"];
}
}
subgraph cluster_Region_1061850386 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0018|RETURN\l|return\l}"];
}
}
}
}
subgraph cluster_Region_526182883 {
label = "R(2:7|8)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0043}"];
Node_8 [shape=record,label="{8\:\ 0x006c|throw new java.sql.SQLException(\"Could not find field in \" + r1.tableInfo.getDataClass() + \" that has column\-name '\" + r3 + \"'\")\l}"];
}
}
}
MethodNode[shape=record,label="{private void com.j256.ormlite.stmt.QueryBuilder.matchJoinedFieldsByName((r1v0 'this' com.j256.ormlite.stmt.QueryBuilder A[IMMUTABLE_TYPE, THIS]), (r2v0 com.j256.ormlite.stmt.QueryBuilder\<T, ID\>$JoinInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 com.j256.ormlite.stmt.QueryBuilder\<?, ?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/stmt\/QueryBuilder\<, TT;TID;\>.JoinInfo;, Ljava\/lang\/String;, Ljava\/lang\/String;, Lcom\/j256\/ormlite\/stmt\/QueryBuilder\<, **\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

