digraph "CFG forcom.j256.ormlite.stmt.QueryBuilder.matchJoinedFields(Lcom\/j256\/ormlite\/stmt\/QueryBuilder$JoinInfo;Lcom\/j256\/ormlite\/stmt\/QueryBuilder;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.j256.ormlite.field.FieldType[] r0 = r7.tableInfo.getFieldTypes()\lint r1 = r0.length\lr2 = 0\lr3 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|LOOP_START\lPHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v3 int) binds: [B:0:0x0000, B:8:0x0028] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0009\-\>B:8:0x0028\l|if (r3 \>= r1) goto L_0x002b\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|r4 = r0[r3]\lcom.j256.ormlite.field.FieldType r5 = r4.getForeignRefField()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|if (r4.isForeign() == false) goto L_0x0028\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017}"];
Node_5 [shape=record,label="{5\:\ 0x0021|if (r5.equals(r9.tableInfo.getIdField()) == false) goto L_0x0028\l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|r8.localField = r4\lr8.remoteField = r5\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|LOOP_END\lLOOP:0: B:1:0x0009\-\>B:8:0x0028\l|int r3 = r3 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|com.j256.ormlite.field.FieldType[] r0 = r9.tableInfo.getFieldTypes()\lint r1 = r0.length\l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:9:0x002b, B:17:0x004f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:10:0x0032\-\>B:17:0x004f\l|if (r2 \>= r1) goto L_0x0052\l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|r3 = r0[r2]\l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|if (r3.isForeign() == false) goto L_0x004f\l}"];
Node_13 [shape=record,label="{13\:\ 0x003c}"];
Node_14 [shape=record,label="{14\:\ 0x0046|if (r3.getForeignIdField().equals(r7.idField) == false) goto L_0x004f\l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|r8.localField = r7.idField\lr8.remoteField = r3\l}"];
Node_16 [shape=record,label="{16\:\ 0x004e|RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ 0x004f|LOOP_END\lLOOP:1: B:10:0x0032\-\>B:17:0x004f\l|int r2 = r2 + 1\l}"];
Node_18 [shape=record,label="{18\:\ 0x0052|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Could not find a foreign \")\lr0.append(r7.tableInfo.getDataClass())\lr0.append(\" field in \")\lr0.append(r9.tableInfo.getDataClass())\lr0.append(\" or vice versa\")\l}"];
Node_19 [shape=record,label="{19\:\ 0x0081|throw new java.sql.SQLException(r0.toString())\l}"];
Node_20 [shape=record,label="{20\:\ 0x0023|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x002b|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0028|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0028|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0052|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0048|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x004f|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x004f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.j256.ormlite.stmt.QueryBuilder.matchJoinedFields((r7v0 'this' com.j256.ormlite.stmt.QueryBuilder A[IMMUTABLE_TYPE, THIS]), (r8v0 com.j256.ormlite.stmt.QueryBuilder\<T, ID\>$JoinInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 com.j256.ormlite.stmt.QueryBuilder\<?, ?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/stmt\/QueryBuilder\<, TT;TID;\>.JoinInfo;, Lcom\/j256\/ormlite\/stmt\/QueryBuilder\<, **\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_22;
Node_4 -> Node_5;
Node_5 -> Node_20[style=dashed];
Node_5 -> Node_23;
Node_6 -> Node_7;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_24;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_26;
Node_13 -> Node_14;
Node_14 -> Node_25[style=dashed];
Node_14 -> Node_27;
Node_15 -> Node_16;
Node_17 -> Node_10;
Node_18 -> Node_19;
Node_20 -> Node_6;
Node_21 -> Node_9;
Node_22 -> Node_8;
Node_23 -> Node_8;
Node_24 -> Node_18;
Node_25 -> Node_15;
Node_26 -> Node_17;
Node_27 -> Node_17;
}

