digraph "CFG forcom.j256.ormlite.stmt.SelectIterator.close()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r4 I:com.j256.ormlite.stmt.SelectIterator) com.j256.ormlite.stmt.SelectIterator.closed boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0039 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:com.j256.ormlite.support.CompiledStatement) = (r4 I:com.j256.ormlite.stmt.SelectIterator) com.j256.ormlite.stmt.SelectIterator.compiledStmt com.j256.ormlite.support.CompiledStatement \l0x0006: INVOKE  (r0 I:com.j256.ormlite.support.CompiledStatement) com.j256.ormlite.support.CompiledStatement.close():void type: INTERFACE \l0x0009: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000a: IPUT  (r0 I:boolean), (r4 I:com.j256.ormlite.stmt.SelectIterator) com.j256.ormlite.stmt.SelectIterator.closed boolean \l0x000c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: IPUT  (r0 I:T), (r4 I:com.j256.ormlite.stmt.SelectIterator) com.j256.ormlite.stmt.SelectIterator.last java.lang.Object \l0x000f: IGET  (r0 I:java.lang.String) = (r4 I:com.j256.ormlite.stmt.SelectIterator) com.j256.ormlite.stmt.SelectIterator.statement java.lang.String \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0028 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: SGET  (r0 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.SelectIterator.logger com.j256.ormlite.logger.Logger \l0x0015: CONST_STR  (r1 I:java.lang.String) =  \"closed iterator @\{\} after \{\} rows\" \l0x0017: INVOKE  (r2 I:int) = (r4 I:java.lang.Object) java.lang.Object.hashCode():int type: VIRTUAL \l0x001b: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x001f: IGET  (r3 I:int) = (r4 I:com.j256.ormlite.stmt.SelectIterator) com.j256.ormlite.stmt.SelectIterator.rowC int \l0x0021: INVOKE  (r3 I:java.lang.Integer) = (r3 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0025: INVOKE  \l  (r0 I:com.j256.ormlite.logger.Logger)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.debug(java.lang.String, java.lang.Object, java.lang.Object):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0028|SYNTHETIC\lSplitter:B:5:0x0028\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0028\l|0x0028: IGET  (r0 I:com.j256.ormlite.support.ConnectionSource) = (r4 I:com.j256.ormlite.stmt.SelectIterator) com.j256.ormlite.stmt.SelectIterator.connectionSource com.j256.ormlite.support.ConnectionSource A[Catch:\{ SQLException \-\> 0x0030 \}, TRY_ENTER]\l0x002a: IGET  (r1 I:com.j256.ormlite.support.DatabaseConnection) = (r4 I:com.j256.ormlite.stmt.SelectIterator) com.j256.ormlite.stmt.SelectIterator.connection com.j256.ormlite.support.DatabaseConnection A[Catch:\{ SQLException \-\> 0x0030 \}]\l0x002c: INVOKE  \l  (r0 I:com.j256.ormlite.support.ConnectionSource)\l  (r1 I:com.j256.ormlite.support.DatabaseConnection)\l com.j256.ormlite.support.ConnectionSource.releaseConnection(com.j256.ormlite.support.DatabaseConnection):void type: INTERFACE A[Catch:\{ SQLException \-\> 0x0030 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|ExcHandler: SQLException null\lSplitter:B:5:0x0028\l|0x0030: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: NEW_INSTANCE  (r1 I:java.io.IOException) =  java.io.IOException \l0x0033: CONST_STR  (r2 I:java.lang.String) =  \"could not release connection\" \l0x0035: INVOKE  \l  (r1 I:java.io.IOException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l java.io.IOException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0039|0x0039: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.SelectIterator.close((r4 'this' I:com.j256.ormlite.stmt.SelectIterator A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_8;
Node_6 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

