digraph "CFG forcom.j256.ormlite.stmt.SelectIterator.hasNext()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ SQLException \-\> 0x0005 \}\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return hasNextThrow()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.sql.SQLException r0 = move\-exception\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|r4.last = null\lcloseQuietly()\ljava.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Errors getting more results of \")\lr2.append(r4.dataClass)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|throw new java.lang.IllegalStateException(r2.toString(), r0)\l}"];
MethodNode[shape=record,label="{public boolean com.j256.ormlite.stmt.SelectIterator.hasNext((r4v0 'this' com.j256.ormlite.stmt.SelectIterator A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

