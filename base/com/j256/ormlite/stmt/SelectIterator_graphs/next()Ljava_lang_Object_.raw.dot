digraph "CFG forcom.j256.ormlite.stmt.SelectIterator.next()Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r1 I:java.lang.Object) = (r4 I:com.j256.ormlite.stmt.SelectIterator) com.j256.ormlite.stmt.SelectIterator.nextThrow():java.lang.Object type: VIRTUAL A[Catch:\{ SQLException \-\> 0x000a \}, TRY_ENTER]\l0x0004: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0008 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: RETURN  (r1 I:T) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|ExcHandler: SQLException null\lSplitter:B:1:0x0001\l|0x000a: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|0x000b: IPUT  (r0 I:T), (r4 I:com.j256.ormlite.stmt.SelectIterator) com.j256.ormlite.stmt.SelectIterator.last java.lang.Object \l0x000d: INVOKE  (r4 I:com.j256.ormlite.stmt.SelectIterator) com.j256.ormlite.stmt.SelectIterator.closeQuietly():void type: VIRTUAL \l0x0010: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0012: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0014: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0017: CONST_STR  (r3 I:java.lang.String) =  \"Could not get next result for \" \l0x0019: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001c: IGET  (r3 I:java.lang.Class\<?\>) = (r4 I:com.j256.ormlite.stmt.SelectIterator) com.j256.ormlite.stmt.SelectIterator.dataClass java.lang.Class \l0x001e: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0021: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0025: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r2 I:java.lang.String)\l  (r1 I:java.lang.Throwable)\l java.lang.IllegalStateException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public T com.j256.ormlite.stmt.SelectIterator.next((r4 'this' I:com.j256.ormlite.stmt.SelectIterator A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[()TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

