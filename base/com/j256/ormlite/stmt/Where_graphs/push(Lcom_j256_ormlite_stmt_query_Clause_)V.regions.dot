digraph "CFG forcom.j256.ormlite.stmt.Where.push(Lcom\/j256\/ormlite\/stmt\/query\/Clause;)V" {
subgraph cluster_Region_1970687556 {
label = "R(2:(3:2|(1:5)|6)|7)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_795188674 {
label = "IF [B:1:0x0005] THEN: R(3:2|(1:5)|6) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r4.clauseStackLevel == r4.clauseStack.length) goto L_0x0007\l}"];
subgraph cluster_Region_324927697 {
label = "R(3:2|(1:5)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|com.j256.ormlite.stmt.query.Clause[] com.j256.ormlite.stmt.query.Clause[] r0 = new com.j256.ormlite.stmt.query.Clause[(r4.clauseStackLevel * 2)]\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_1215298307 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|if (r1 \< r4.clauseStackLevel) goto L_0x0012\l}"];
subgraph cluster_Region_211774945 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|LOOP_END\lLOOP:0: B:3:0x000e\-\>B:5:0x0012\l|r0[r1] = r4.clauseStack[r1]\lr4.clauseStack[r1] = null\lr1++\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0020|r4.clauseStack = r0\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x0022|com.j256.ormlite.stmt.query.Clause[] com.j256.ormlite.stmt.query.Clause[] r0 = r4.clauseStack\lint int r1 = r4.clauseStackLevel\lr4.clauseStackLevel = r1 + 1\lr0[r1] = r5\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000e|LOOP_START\lPHI: r1 \l  PHI: (r1v4 int) = (r1v3 int), (r1v5 int) binds: [B:2:0x0007, B:5:0x0012] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x000e\-\>B:5:0x0012\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x002c}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0020|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.j256.ormlite.stmt.Where.push((r4v0 'this' com.j256.ormlite.stmt.Where A[IMMUTABLE_TYPE, THIS]), (r5v0 com.j256.ormlite.stmt.query.Clause A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_9 -> Node_6;
}

