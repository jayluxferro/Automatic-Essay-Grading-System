digraph "CFG forcom.j256.ormlite.stmt.Where.like(Ljava\/lang\/String;Ljava\/lang\/Object;)Lcom\/j256\/ormlite\/stmt\/Where;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.j256.ormlite.stmt.query.SimpleComparison) =  com.j256.ormlite.stmt.query.SimpleComparison \l0x0002: INVOKE  (r1 I:com.j256.ormlite.field.FieldType) = (r3 I:com.j256.ormlite.stmt.Where), (r4 I:java.lang.String) com.j256.ormlite.stmt.Where.findColumnFieldType(java.lang.String):com.j256.ormlite.field.FieldType type: DIRECT \l0x0006: CONST_STR  (r2 I:java.lang.String) =  \"LIKE\" \l0x0008: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.query.SimpleComparison)\l  (r4 I:java.lang.String)\l  (r1 I:com.j256.ormlite.field.FieldType)\l  (r5 I:java.lang.Object)\l  (r2 I:java.lang.String)\l com.j256.ormlite.stmt.query.SimpleComparison.\<init\>(java.lang.String, com.j256.ormlite.field.FieldType, java.lang.Object, java.lang.String):void type: DIRECT \l0x000b: INVOKE  \l  (r3 I:com.j256.ormlite.stmt.Where)\l  (r0 I:com.j256.ormlite.stmt.query.Clause)\l com.j256.ormlite.stmt.Where.addClause(com.j256.ormlite.stmt.query.Clause):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: RETURN  (r3 I:com.j256.ormlite.stmt.Where\<T, ID\>) \l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.stmt.Where\<T, ID\> com.j256.ormlite.stmt.Where.like((r3 'this' I:com.j256.ormlite.stmt.Where A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/lang\/Object;, ), Lcom\/j256\/ormlite\/stmt\/Where\<, TT;TID;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

