digraph "CFG forcom.j256.ormlite.stmt.Where.addClause(Lcom\/j256\/ormlite\/stmt\/query\/Clause;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.stmt.query.NeedsFutureClause) = (r1 I:com.j256.ormlite.stmt.Where) com.j256.ormlite.stmt.Where.needsFuture com.j256.ormlite.stmt.query.NeedsFutureClause \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.Where)\l  (r2 I:com.j256.ormlite.stmt.query.Clause)\l com.j256.ormlite.stmt.Where.push(com.j256.ormlite.stmt.query.Clause):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:com.j256.ormlite.stmt.query.NeedsFutureClause) = (r1 I:com.j256.ormlite.stmt.Where) com.j256.ormlite.stmt.Where.needsFuture com.j256.ormlite.stmt.query.NeedsFutureClause \l0x000a: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.query.NeedsFutureClause)\l  (r2 I:com.j256.ormlite.stmt.query.Clause)\l com.j256.ormlite.stmt.query.NeedsFutureClause.setMissingClause(com.j256.ormlite.stmt.query.Clause):void type: INTERFACE \l0x000d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: IPUT  \l  (r2 I:com.j256.ormlite.stmt.query.NeedsFutureClause)\l  (r1 I:com.j256.ormlite.stmt.Where)\l com.j256.ormlite.stmt.Where.needsFuture com.j256.ormlite.stmt.query.NeedsFutureClause \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.j256.ormlite.stmt.Where.addClause((r1 'this' I:com.j256.ormlite.stmt.Where A[IMMUTABLE_TYPE, THIS]), (r2 I:com.j256.ormlite.stmt.query.Clause A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

