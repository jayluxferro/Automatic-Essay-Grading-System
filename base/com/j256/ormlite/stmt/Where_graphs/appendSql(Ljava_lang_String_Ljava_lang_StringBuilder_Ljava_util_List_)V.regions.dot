digraph "CFG forcom.j256.ormlite.stmt.Where.appendSql(Ljava\/lang\/String;Ljava\/lang\/StringBuilder;Ljava\/util\/List;)V" {
subgraph cluster_Region_1681483974 {
label = "R(1:(1:13)(1:(1:11)(1:(1:6)(1:9))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_425439463 {
label = "IF [B:1:0x0002] THEN: R(1:13) ELSE: R(1:(1:11)(1:(1:6)(1:9)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.clauseStackLevel == 0) goto L_0x0027\l}"];
subgraph cluster_Region_602077549 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x002e|throw new java.lang.IllegalStateException(\"No where clauses defined.  Did you miss a where operation?\")\l}"];
}
subgraph cluster_Region_1524419231 {
label = "R(1:(1:11)(1:(1:6)(1:9))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1963779674 {
label = "IF [B:3:0x0007] THEN: R(1:11) ELSE: R(1:(1:6)(1:9)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r2.clauseStackLevel != 1) goto L_0x001f\l}"];
subgraph cluster_Region_823438484 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0026|throw new java.lang.IllegalStateException(\"Both the \"left\-hand\" and \"right\-hand\" clauses have been defined.  Did you miss an AND or OR?\")\l}"];
}
subgraph cluster_Region_84480586 {
label = "R(1:(1:6)(1:9)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_960342086 {
label = "IF [B:5:0x000b] THEN: R(1:6) ELSE: R(1:9) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000b|if (r2.needsFuture == null) goto L_0x000d\l}"];
subgraph cluster_Region_730969869 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000d|peek().appendSql(r2.databaseType, r3, r4, r5)\l}"];
}
subgraph cluster_Region_1064685287 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001e|throw new java.lang.IllegalStateException(\"The SQL statement has not been finished since there are previous operations still waiting for clauses.\")\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0009}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0016}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0017}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001f}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0027}"];
MethodNode[shape=record,label="{void com.j256.ormlite.stmt.Where.appendSql((r2v0 'this' com.j256.ormlite.stmt.Where A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.util.List\<com.j256.ormlite.stmt.ArgumentHolder\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/lang\/StringBuilder;, Ljava\/util\/List\<, Lcom\/j256\/ormlite\/stmt\/ArgumentHolder;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
}

