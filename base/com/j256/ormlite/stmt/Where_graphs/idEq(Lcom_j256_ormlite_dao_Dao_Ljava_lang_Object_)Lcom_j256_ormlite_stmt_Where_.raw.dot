digraph "CFG forcom.j256.ormlite.stmt.Where.idEq(Lcom\/j256\/ormlite\/dao\/Dao;Ljava\/lang\/Object;)Lcom\/j256\/ormlite\/stmt\/Where;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.String) = (r3 I:com.j256.ormlite.stmt.Where) com.j256.ormlite.stmt.Where.idColumnName java.lang.String \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0017 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:com.j256.ormlite.stmt.query.SimpleComparison) =  com.j256.ormlite.stmt.query.SimpleComparison \l0x0006: IGET  (r1 I:java.lang.String) = (r3 I:com.j256.ormlite.stmt.Where) com.j256.ormlite.stmt.Where.idColumnName java.lang.String \l0x0008: IGET  (r2 I:com.j256.ormlite.field.FieldType) = (r3 I:com.j256.ormlite.stmt.Where) com.j256.ormlite.stmt.Where.idFieldType com.j256.ormlite.field.FieldType \l0x000a: INVOKE  (r4 I:java.lang.Object) = (r4 I:com.j256.ormlite.dao.Dao), (r5 I:java.lang.Object) com.j256.ormlite.dao.Dao.extractId(java.lang.Object):java.lang.Object type: INTERFACE \l0x000e: CONST_STR  (r5 I:java.lang.String) =  \"=\" \l0x0010: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.query.SimpleComparison)\l  (r1 I:java.lang.String)\l  (r2 I:com.j256.ormlite.field.FieldType)\l  (r4 I:java.lang.Object)\l  (r5 I:java.lang.String)\l com.j256.ormlite.stmt.query.SimpleComparison.\<init\>(java.lang.String, com.j256.ormlite.field.FieldType, java.lang.Object, java.lang.String):void type: DIRECT \l0x0013: INVOKE  \l  (r3 I:com.j256.ormlite.stmt.Where)\l  (r0 I:com.j256.ormlite.stmt.query.Clause)\l com.j256.ormlite.stmt.Where.addClause(com.j256.ormlite.stmt.query.Clause):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: RETURN  (r3 I:com.j256.ormlite.stmt.Where\<T, ID\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: NEW_INSTANCE  (r4 I:java.sql.SQLException) =  java.sql.SQLException \l0x0019: CONST_STR  (r5 I:java.lang.String) =  \"Object has no id column specified\" \l0x001b: INVOKE  (r4 I:java.sql.SQLException), (r5 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.stmt.Where\<T, ID\> com.j256.ormlite.stmt.Where.idEq((r3 'this' I:com.j256.ormlite.stmt.Where A[IMMUTABLE_TYPE, THIS]), (r4 I:com.j256.ormlite.dao.Dao\<OD, ?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:OD A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<OD:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/dao\/Dao\<, TOD;*\>;TOD;), Lcom\/j256\/ormlite\/stmt\/Where\<, TT;TID;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

