digraph "CFG forcom.j256.ormlite.stmt.Where.exists(Lcom\/j256\/ormlite\/stmt\/QueryBuilder;)Lcom\/j256\/ormlite\/stmt\/Where;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.enableInnerQuery():void type: VIRTUAL \l0x0003: NEW_INSTANCE  (r0 I:com.j256.ormlite.stmt.query.Exists) =  com.j256.ormlite.stmt.query.Exists \l0x0005: NEW_INSTANCE  (r1 I:com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper) =  com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper \l0x0007: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper)\l  (r3 I:com.j256.ormlite.stmt.QueryBuilder)\l com.j256.ormlite.stmt.QueryBuilder.InternalQueryBuilderWrapper.\<init\>(com.j256.ormlite.stmt.QueryBuilder):void type: DIRECT \l0x000a: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.query.Exists)\l  (r1 I:com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper)\l com.j256.ormlite.stmt.query.Exists.\<init\>(com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper):void type: DIRECT \l0x000d: INVOKE  \l  (r2 I:com.j256.ormlite.stmt.Where)\l  (r0 I:com.j256.ormlite.stmt.query.Clause)\l com.j256.ormlite.stmt.Where.addClause(com.j256.ormlite.stmt.query.Clause):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: RETURN  (r2 I:com.j256.ormlite.stmt.Where\<T, ID\>) \l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.stmt.Where\<T, ID\> com.j256.ormlite.stmt.Where.exists((r2 'this' I:com.j256.ormlite.stmt.Where A[IMMUTABLE_TYPE, THIS]), (r3 I:com.j256.ormlite.stmt.QueryBuilder\<?, ?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/stmt\/QueryBuilder\<, **\>;), Lcom\/j256\/ormlite\/stmt\/Where\<, TT;TID;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

