digraph "CFG forcom.j256.ormlite.stmt.Where.getStatement()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0002: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0005: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0007: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x000a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: INVOKE  \l  (r3 I:com.j256.ormlite.stmt.Where)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.StringBuilder)\l  (r1 I:java.util.List)\l com.j256.ormlite.stmt.Where.appendSql(java.lang.String, java.lang.StringBuilder, java.util.List):void type: VIRTUAL \l0x000e: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String com.j256.ormlite.stmt.Where.getStatement((r3 'this' I:com.j256.ormlite.stmt.Where A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

