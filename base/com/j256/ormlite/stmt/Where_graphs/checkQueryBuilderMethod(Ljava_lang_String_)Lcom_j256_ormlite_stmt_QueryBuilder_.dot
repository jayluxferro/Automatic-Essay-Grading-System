digraph "CFG forcom.j256.ormlite.stmt.Where.checkQueryBuilderMethod(Ljava\/lang\/String;)Lcom\/j256\/ormlite\/stmt\/QueryBuilder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if ((r3.statementBuilder instanceof com.j256.ormlite.stmt.QueryBuilder) == false) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return (com.j256.ormlite.stmt.QueryBuilder) r3.statementBuilder\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Cannot call \")\lr1.append(r4)\lr1.append(\" on a statement of type \")\lr1.append(r3.statementBuilder.getType())\l}"];
Node_5 [shape=record,label="{5\:\ 0x002f|throw new java.sql.SQLException(r1.toString())\l}"];
MethodNode[shape=record,label="{private com.j256.ormlite.stmt.QueryBuilder\<T, ID\> com.j256.ormlite.stmt.Where.checkQueryBuilderMethod((r3v0 'this' com.j256.ormlite.stmt.Where A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, ), Lcom\/j256\/ormlite\/stmt\/QueryBuilder\<, TT;TID;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

