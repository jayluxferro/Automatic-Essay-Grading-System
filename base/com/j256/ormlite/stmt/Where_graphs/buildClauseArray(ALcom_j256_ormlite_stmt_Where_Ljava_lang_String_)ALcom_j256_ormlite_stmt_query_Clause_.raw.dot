digraph "CFG forcom.j256.ormlite.stmt.Where.buildClauseArray([Lcom\/j256\/ormlite\/stmt\/Where;Ljava\/lang\/String;)[Lcom\/j256\/ormlite\/stmt\/query\/Clause;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r3 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: ARRAY_LENGTH  (r0 I:int) = (r3 I:?[]) \l0x0006: NEW_ARRAY  (r0 I:com.j256.ormlite.stmt.query.Clause[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: com.j256.ormlite.stmt.query.Clause[] \l0x0008: ARRAY_LENGTH  (r3 I:int) = (r3 I:?[]) \l0x0009: ARITH  (r3 I:int) = (r3 I:int) + (\-1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r3 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:6:0x0016 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: INVOKE  (r1 I:com.j256.ormlite.stmt.query.Clause) = (r2 I:com.j256.ormlite.stmt.Where), (r4 I:java.lang.String) com.j256.ormlite.stmt.Where.pop(java.lang.String):com.j256.ormlite.stmt.query.Clause type: DIRECT \l0x0011: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0013: ARITH  (r3 I:int) = (r3 I:int) + (\-1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: RETURN  (r3 I:com.j256.ormlite.stmt.query.Clause[]) \l}"];
MethodNode[shape=record,label="{private com.j256.ormlite.stmt.query.Clause[] com.j256.ormlite.stmt.Where.buildClauseArray((r2 'this' I:com.j256.ormlite.stmt.Where A[IMMUTABLE_TYPE, THIS]), (r3 I:com.j256.ormlite.stmt.Where\<T, ID\>[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([, Lcom\/j256\/ormlite\/stmt\/Where\<, TT;TID;\>;, Ljava\/lang\/String;, )[, Lcom\/j256\/ormlite\/stmt\/query\/Clause;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_4;
Node_6 -> Node_7;
}

