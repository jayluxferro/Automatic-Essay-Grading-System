digraph "CFG forcom.j256.ormlite.stmt.Where.or(Lcom\/j256\/ormlite\/stmt\/Where;Lcom\/j256\/ormlite\/stmt\/Where;[Lcom\/j256\/ormlite\/stmt\/Where;)Lcom\/j256\/ormlite\/stmt\/Where;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r3 I:java.lang.String) =  \"OR\" \l0x0002: INVOKE  (r3 I:com.j256.ormlite.stmt.query.Clause[]) = \l  (r2 I:com.j256.ormlite.stmt.Where)\l  (r5 I:com.j256.ormlite.stmt.Where[])\l  (r3 I:java.lang.String)\l com.j256.ormlite.stmt.Where.buildClauseArray(com.j256.ormlite.stmt.Where[], java.lang.String):com.j256.ormlite.stmt.query.Clause[] type: DIRECT \l0x0006: CONST_STR  (r4 I:java.lang.String) =  \"OR\" \l0x0008: INVOKE  (r4 I:com.j256.ormlite.stmt.query.Clause) = (r2 I:com.j256.ormlite.stmt.Where), (r4 I:java.lang.String) com.j256.ormlite.stmt.Where.pop(java.lang.String):com.j256.ormlite.stmt.query.Clause type: DIRECT \l0x000c: CONST_STR  (r5 I:java.lang.String) =  \"OR\" \l0x000e: INVOKE  (r5 I:com.j256.ormlite.stmt.query.Clause) = (r2 I:com.j256.ormlite.stmt.Where), (r5 I:java.lang.String) com.j256.ormlite.stmt.Where.pop(java.lang.String):com.j256.ormlite.stmt.query.Clause type: DIRECT \l0x0012: NEW_INSTANCE  (r0 I:com.j256.ormlite.stmt.query.ManyClause) =  com.j256.ormlite.stmt.query.ManyClause \l0x0014: CONST_STR  (r1 I:java.lang.String) =  \"OR\" \l0x0016: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.query.ManyClause)\l  (r5 I:com.j256.ormlite.stmt.query.Clause)\l  (r4 I:com.j256.ormlite.stmt.query.Clause)\l  (r3 I:com.j256.ormlite.stmt.query.Clause[])\l  (r1 I:java.lang.String)\l com.j256.ormlite.stmt.query.ManyClause.\<init\>(com.j256.ormlite.stmt.query.Clause, com.j256.ormlite.stmt.query.Clause, com.j256.ormlite.stmt.query.Clause[], java.lang.String):void type: DIRECT \l0x0019: INVOKE  \l  (r2 I:com.j256.ormlite.stmt.Where)\l  (r0 I:com.j256.ormlite.stmt.query.Clause)\l com.j256.ormlite.stmt.Where.addClause(com.j256.ormlite.stmt.query.Clause):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x001c|0x001c: RETURN  (r2 I:com.j256.ormlite.stmt.Where\<T, ID\>) \l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.stmt.Where\<T, ID\> com.j256.ormlite.stmt.Where.or((r2 'this' I:com.j256.ormlite.stmt.Where A[IMMUTABLE_TYPE, THIS]), (r3 I:com.j256.ormlite.stmt.Where\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.j256.ormlite.stmt.Where\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.j256.ormlite.stmt.Where\<T, ID\>[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/stmt\/Where\<, TT;TID;\>;, Lcom\/j256\/ormlite\/stmt\/Where\<, TT;TID;\>;[, Lcom\/j256\/ormlite\/stmt\/Where\<, TT;TID;\>;), Lcom\/j256\/ormlite\/stmt\/Where\<, TT;TID;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

