digraph "CFG forcom.j256.ormlite.stmt.Where.not()Lcom\/j256\/ormlite\/stmt\/Where;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.j256.ormlite.stmt.query.Not) =  com.j256.ormlite.stmt.query.Not \l0x0002: INVOKE  (r0 I:com.j256.ormlite.stmt.query.Not) com.j256.ormlite.stmt.query.Not.\<init\>():void type: DIRECT \l0x0005: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.Where)\l  (r0 I:com.j256.ormlite.stmt.query.Clause)\l com.j256.ormlite.stmt.Where.addClause(com.j256.ormlite.stmt.query.Clause):void type: DIRECT \l0x0008: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.Where)\l  (r0 I:com.j256.ormlite.stmt.query.NeedsFutureClause)\l com.j256.ormlite.stmt.Where.addNeedsFuture(com.j256.ormlite.stmt.query.NeedsFutureClause):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: RETURN  (r1 I:com.j256.ormlite.stmt.Where\<T, ID\>) \l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.stmt.Where\<T, ID\> com.j256.ormlite.stmt.Where.not((r1 'this' I:com.j256.ormlite.stmt.Where A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Lcom\/j256\/ormlite\/stmt\/Where\<, TT;TID;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

