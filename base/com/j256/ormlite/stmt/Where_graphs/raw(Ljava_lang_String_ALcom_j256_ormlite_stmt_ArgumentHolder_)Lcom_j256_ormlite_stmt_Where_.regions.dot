digraph "CFG forcom.j256.ormlite.stmt.Where.raw(Ljava\/lang\/String;[Lcom\/j256\/ormlite\/stmt\/ArgumentHolder;)Lcom\/j256\/ormlite\/stmt\/Where;" {
subgraph cluster_Region_69141690 {
label = "R(4:0|(3:2|(1:8)(1:(1:7)(0))|9)|10|11)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r6.length\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_1464170114 {
label = "LOOP:0: (3:2|(1:8)(1:(1:7)(0))|9)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:9:0x0022] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0002\-\>B:9:0x0022\l|if (r1 \< r0) goto L_0x0004\l}"];
subgraph cluster_Region_2043573546 {
label = "R(3:2|(1:8)(1:(1:7)(0))|9)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|r2 = r6[r1]\ljava.lang.String java.lang.String r3 = r2.getColumnName()\l}"];
subgraph cluster_IfRegion_2112838637 {
label = "IF [B:3:0x000a] THEN: R(1:8) ELSE: R(1:(1:7)(0))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r3 != null) goto L_0x001b\l}"];
subgraph cluster_Region_950684483 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001b|r2.setMetaInfo(findColumnFieldType(r3))\l}"];
}
subgraph cluster_Region_540214060 {
label = "R(1:(1:7)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1676272210 {
label = "IF [B:5:0x0010] THEN: R(1:7) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r2.getSqlType() == null) goto L_0x0013\l}"];
subgraph cluster_Region_68994352 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001a|throw new java.lang.IllegalArgumentException(\"Either the column name or SqlType must be set on each argument\")\l}"];
}
subgraph cluster_Region_2014401111 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_9 [shape=record,label="{9\:\ 0x0022|LOOP_END\lLOOP:0: B:1:0x0002\-\>B:9:0x0022\l|r1++\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x0025|addClause(new com.j256.ormlite.stmt.query.Raw(r5, r6))\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|RETURN\l|return r4\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ 0x000c}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0013}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0013|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0025|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0022|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0022|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.stmt.Where\<T, ID\> com.j256.ormlite.stmt.Where.raw((r4v0 'this' com.j256.ormlite.stmt.Where A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 com.j256.ormlite.stmt.ArgumentHolder[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, [, Lcom\/j256\/ormlite\/stmt\/ArgumentHolder;, ), Lcom\/j256\/ormlite\/stmt\/Where\<, TT;TID;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_8 -> Node_14;
Node_5 -> Node_12;
Node_5 -> Node_15[style=dashed];
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_12 -> Node_6;
Node_13 -> Node_10;
Node_14 -> Node_9;
Node_15 -> Node_9;
}

