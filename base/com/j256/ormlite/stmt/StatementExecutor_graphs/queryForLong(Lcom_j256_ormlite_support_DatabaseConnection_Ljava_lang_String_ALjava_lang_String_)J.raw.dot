digraph "CFG forcom.j256.ormlite.stmt.StatementExecutor.queryForLong(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Ljava\/lang\/String;[Ljava\/lang\/String;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.StatementExecutor.logger com.j256.ormlite.logger.Logger \l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"executing raw query for long: \{\}\" \l0x0004: INVOKE  \l  (r0 I:com.j256.ormlite.logger.Logger)\l  (r1 I:java.lang.String)\l  (r9 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.debug(java.lang.String, java.lang.Object):void type: VIRTUAL \l0x0007: ARRAY_LENGTH  (r0 I:int) = (r10 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: SGET  (r0 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.StatementExecutor.logger com.j256.ormlite.logger.Logger \l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"query arguments: \{\}\" \l0x000e: INVOKE  \l  (r0 I:com.j256.ormlite.logger.Logger)\l  (r1 I:java.lang.String)\l  (r10 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.trace(java.lang.String, java.lang.Object):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|SYNTHETIC\lSplitter:B:4:0x0012\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x0012\l|0x0012: SGET  (r3 I:com.j256.ormlite.stmt.StatementBuilder$StatementType) =  com.j256.ormlite.stmt.StatementBuilder.StatementType.SELECT com.j256.ormlite.stmt.StatementBuilder$StatementType A[Catch:\{ all \-\> 0x0057 \}, TRY_ENTER]\l0x0014: SGET  (r4 I:com.j256.ormlite.field.FieldType[]) =  com.j256.ormlite.stmt.StatementExecutor.noFieldTypes com.j256.ormlite.field.FieldType[] A[Catch:\{ all \-\> 0x0057 \}]\l0x0016: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0057 \}]\l0x0017: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0057 \}]\l0x0018: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0057 \}]\l0x0019: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0057 \}]\l0x001a: INVOKE  (r8 I:com.j256.ormlite.support.CompiledStatement) = \l  (r1 I:com.j256.ormlite.support.DatabaseConnection)\l  (r2 I:java.lang.String)\l  (r3 I:com.j256.ormlite.stmt.StatementBuilder$StatementType)\l  (r4 I:com.j256.ormlite.field.FieldType[])\l  (r5 I:int)\l  (r6 I:boolean)\l com.j256.ormlite.support.DatabaseConnection.compileStatement(java.lang.String, com.j256.ormlite.stmt.StatementBuilder$StatementType, com.j256.ormlite.field.FieldType[], int, boolean):com.j256.ormlite.support.CompiledStatement type: INTERFACE A[Catch:\{ all \-\> 0x0057 \}]\l0x001d: NOP   A[TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|SYNTHETIC\lSplitter:B:6:0x001e\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x001e\l|0x001e: INVOKE  \l  (r7 I:com.j256.ormlite.stmt.StatementExecutor)\l  (r8 I:com.j256.ormlite.support.CompiledStatement)\l  (r10 I:java.lang.String[])\l com.j256.ormlite.stmt.StatementExecutor.assignStatementArguments(com.j256.ormlite.support.CompiledStatement, java.lang.String[]):void type: DIRECT A[Catch:\{ all \-\> 0x0054 \}, TRY_ENTER]\l0x0021: INVOKE  (r10 I:com.j256.ormlite.support.DatabaseResults) = \l  (r8 I:com.j256.ormlite.support.CompiledStatement)\l  (r0 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.support.CompiledStatement.runQuery(com.j256.ormlite.dao.ObjectCache):com.j256.ormlite.support.DatabaseResults type: INTERFACE A[Catch:\{ all \-\> 0x0054 \}]\l0x0024: NOP   A[TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|SYNTHETIC\lSplitter:B:8:0x0025\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0025\l|0x0025: INVOKE  (r0 I:boolean) = (r10 I:com.j256.ormlite.support.DatabaseResults) com.j256.ormlite.support.DatabaseResults.first():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0052 \}, TRY_ENTER]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003b A[Catch:\{ all \-\> 0x0052 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0052 \}]\l0x002c: INVOKE  (r0 I:long) = \l  (r10 I:com.j256.ormlite.support.DatabaseResults)\l  (r9 I:int)\l com.j256.ormlite.support.DatabaseResults.getLong(int):long type: INTERFACE A[Catch:\{ all \-\> 0x0052 \}]\l0x002f: NOP   A[TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: CONST_STR  (r9 I:java.lang.String) =  \"results\" \l0x0032: INVOKE  (r10 I:java.io.Closeable), (r9 I:java.lang.String) com.j256.ormlite.misc.IOUtils.closeThrowSqlException(java.io.Closeable, java.lang.String):void type: STATIC \l0x0035: CONST_STR  (r9 I:java.lang.String) =  \"compiled statement\" \l0x0037: INVOKE  (r8 I:java.io.Closeable), (r9 I:java.lang.String) com.j256.ormlite.misc.IOUtils.closeThrowSqlException(java.io.Closeable, java.lang.String):void type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|0x003a: RETURN  (r0 I:long) \l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|SYNTHETIC\lSplitter:B:14:0x003b\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x003b\l|0x003b: NEW_INSTANCE  (r0 I:java.sql.SQLException) =  java.sql.SQLException A[Catch:\{ all \-\> 0x0052 \}, TRY_ENTER]\l0x003d: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0052 \}]\l0x003f: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0052 \}]\l0x0042: CONST_STR  (r2 I:java.lang.String) =  \"No result found in queryForLong: \" A[Catch:\{ all \-\> 0x0052 \}]\l0x0044: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0052 \}]\l0x0047: INVOKE  (r1 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0052 \}]\l0x004a: INVOKE  (r9 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0052 \}]\l0x004e: INVOKE  (r0 I:java.sql.SQLException), (r9 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0052 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0051|0x0051: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0052 \}, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0052|ExcHandler: all null\lSplitter:B:8:0x0025\l|0x0052: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_19 [shape=record,label="{19\:\ 0x0054|ExcHandler: all null\lSplitter:B:6:0x001e\l|0x0054: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_20 [shape=record,label="{20\:\ 0x0055|0x0055: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0057|ExcHandler: all null\lSplitter:B:4:0x0012\l|0x0057: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_22 [shape=record,label="{22\:\ 0x0058|0x0058: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0059: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x005a|0x005a: CONST_STR  (r0 I:java.lang.String) =  \"results\" \l0x005c: INVOKE  (r10 I:java.io.Closeable), (r0 I:java.lang.String) com.j256.ormlite.misc.IOUtils.closeThrowSqlException(java.io.Closeable, java.lang.String):void type: STATIC \l0x005f: CONST_STR  (r10 I:java.lang.String) =  \"compiled statement\" \l0x0061: INVOKE  (r8 I:java.io.Closeable), (r10 I:java.lang.String) com.j256.ormlite.misc.IOUtils.closeThrowSqlException(java.io.Closeable, java.lang.String):void type: STATIC \l}"];
Node_24 [shape=record,label="{24\:\ 0x0064|0x0064: THROW  (r9 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public long com.j256.ormlite.stmt.StatementExecutor.queryForLong((r7 'this' I:com.j256.ormlite.stmt.StatementExecutor A[IMMUTABLE_TYPE, THIS]), (r8 I:com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_21;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_19;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
}

