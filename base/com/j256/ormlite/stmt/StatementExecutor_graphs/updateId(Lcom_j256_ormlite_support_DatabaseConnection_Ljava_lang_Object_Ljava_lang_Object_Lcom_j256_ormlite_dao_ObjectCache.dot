digraph "CFG forcom.j256.ormlite.stmt.StatementExecutor.updateId(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Ljava\/lang\/Object;Ljava\/lang\/Object;Lcom\/j256\/ormlite\/dao\/ObjectCache;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.mappedUpdateId != null) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r2.mappedUpdateId = com.j256.ormlite.stmt.mapped.MappedUpdateId.build(r2.databaseType, r2.tableInfo)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|int r3 = r2.mappedUpdateId.execute(r3, r4, r5, r6)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|if (r2.dao == null) goto L_0x002b\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018}"];
Node_6 [shape=record,label="{6\:\ 0x0024|if (r2.localIsInBatchMode.get().booleanValue() != false) goto L_0x002b\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|r2.dao.notifyChanges()\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|RETURN\l|return r3\l}"];
MethodNode[shape=record,label="{public int com.j256.ormlite.stmt.StatementExecutor.updateId((r2v0 'this' com.j256.ormlite.stmt.StatementExecutor A[IMMUTABLE_TYPE, THIS]), (r3v0 com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 ID A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, TT;TID;, Lcom\/j256\/ormlite\/dao\/ObjectCache;, )I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
}

