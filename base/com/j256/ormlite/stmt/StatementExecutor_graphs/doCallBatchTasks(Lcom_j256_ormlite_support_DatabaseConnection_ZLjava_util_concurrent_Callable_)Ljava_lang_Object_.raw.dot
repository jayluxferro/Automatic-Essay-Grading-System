digraph "CFG forcom.j256.ormlite.stmt.StatementExecutor.doCallBatchTasks(Lcom\/j256\/ormlite\/support\/DatabaseConnection;ZLjava\/util\/concurrent\/Callable;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.db.DatabaseType) = (r3 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.databaseType com.j256.ormlite.db.DatabaseType \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:com.j256.ormlite.db.DatabaseType) com.j256.ormlite.db.DatabaseType.isBatchUseTransaction():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:com.j256.ormlite.db.DatabaseType) = (r3 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.databaseType com.j256.ormlite.db.DatabaseType \l0x000a: INVOKE  (r4 I:java.lang.Object) = \l  (r4 I:com.j256.ormlite.support.DatabaseConnection)\l  (r5 I:boolean)\l  (r0 I:com.j256.ormlite.db.DatabaseType)\l  (r6 I:java.util.concurrent.Callable)\l com.j256.ormlite.misc.TransactionManager.callInTransaction(com.j256.ormlite.support.DatabaseConnection, boolean, com.j256.ormlite.db.DatabaseType, java.util.concurrent.Callable):java.lang.Object type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: RETURN  (r4 I:CT) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|SYNTHETIC\lSplitter:B:5:0x0011\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0011\l|0x0011: INVOKE  (r1 I:boolean) = (r4 I:com.j256.ormlite.support.DatabaseConnection) com.j256.ormlite.support.DatabaseConnection.isAutoCommitSupported():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0054 \}, TRY_ENTER]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0033 A[Catch:\{ all \-\> 0x0054 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: INVOKE  (r1 I:boolean) = (r4 I:com.j256.ormlite.support.DatabaseConnection) com.j256.ormlite.support.DatabaseConnection.isAutoCommit():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0054 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0033 A[Catch:\{ all \-\> 0x0054 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: INVOKE  \l  (r4 I:com.j256.ormlite.support.DatabaseConnection)\l  (r5 I:boolean)\l com.j256.ormlite.support.DatabaseConnection.setAutoCommit(boolean):void type: INTERFACE A[Catch:\{ all \-\> 0x0054 \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|SYNTHETIC\lSplitter:B:11:0x0020\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x0020\l|0x0020: SGET  (r5 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.StatementExecutor.logger com.j256.ormlite.logger.Logger A[Catch:\{ all \-\> 0x002f \}, TRY_ENTER]\l0x0022: CONST_STR  (r1 I:java.lang.String) =  \"disabled auto\-commit on table \{\} before batch tasks\" A[Catch:\{ all \-\> 0x002f \}]\l0x0024: IGET  (r2 I:com.j256.ormlite.table.TableInfo\<T, ID\>) = (r3 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.tableInfo com.j256.ormlite.table.TableInfo A[Catch:\{ all \-\> 0x002f \}]\l0x0026: INVOKE  (r2 I:java.lang.String) = (r2 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getTableName():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x002f \}]\l0x002a: INVOKE  \l  (r5 I:com.j256.ormlite.logger.Logger)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.debug(java.lang.String, java.lang.Object):void type: VIRTUAL A[Catch:\{ all \-\> 0x002f \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|ExcHandler: all null\lSplitter:B:11:0x0020\l|0x002f: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0030|0x0030: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x0031: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0033|SYNTHETIC\lSplitter:B:16:0x0033\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x0033\l|0x0033: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.concurrent.Callable) java.util.concurrent.Callable.call():java.lang.Object type: INTERFACE A[Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a \}, TRY_ENTER]\l0x0036: NOP   A[TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|0x0037: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0049 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0039|0x0039: INVOKE  \l  (r4 I:com.j256.ormlite.support.DatabaseConnection)\l  (r0 I:boolean)\l com.j256.ormlite.support.DatabaseConnection.setAutoCommit(boolean):void type: INTERFACE \l0x003c: SGET  (r4 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.StatementExecutor.logger com.j256.ormlite.logger.Logger \l0x003e: CONST_STR  (r5 I:java.lang.String) =  \"re\-enabled auto\-commit on table \{\} after batch tasks\" \l0x0040: IGET  (r0 I:com.j256.ormlite.table.TableInfo\<T, ID\>) = (r3 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.tableInfo com.j256.ormlite.table.TableInfo \l0x0042: INVOKE  (r0 I:java.lang.String) = (r0 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getTableName():java.lang.String type: VIRTUAL \l0x0046: INVOKE  \l  (r4 I:com.j256.ormlite.logger.Logger)\l  (r5 I:java.lang.String)\l  (r0 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.debug(java.lang.String, java.lang.Object):void type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0049|0x0049: RETURN  (r6 I:CT) \l}"];
Node_21 [shape=record,label="{21\:\ 0x004a|ExcHandler: Exception null\lSplitter:B:16:0x0033\l|0x004a: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_22 [shape=record,label="{22\:\ 0x004b|0x004b: CONST_STR  (r1 I:java.lang.String) =  \"Batch tasks callable threw non\-SQL exception\" \l}"];
Node_23 [shape=record,label="{23\:\ 0x004d|SYNTHETIC\lSplitter:B:23:0x004d\l}"];
Node_24 [shape=record,label="{24\:\ ?|Splitter:B:23:0x004d\l|0x004d: INVOKE  (r6 I:java.sql.SQLException) = (r1 I:java.lang.String), (r6 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC A[Catch:\{ all \-\> 0x0054 \}, TRY_ENTER]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0051|0x0051: THROW  (r6 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0054 \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0052|ExcHandler: SQLException null\lSplitter:B:16:0x0033\l|0x0052: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0054 \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0053|0x0053: THROW  (r6 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0054 \}, TRY_LEAVE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0054|ExcHandler: all null\lSplitter:B:5:0x0011\l|0x0054: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_29 [shape=record,label="{29\:\ 0x0055|0x0055: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0067 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0057|0x0057: INVOKE  \l  (r4 I:com.j256.ormlite.support.DatabaseConnection)\l  (r0 I:boolean)\l com.j256.ormlite.support.DatabaseConnection.setAutoCommit(boolean):void type: INTERFACE \l0x005a: SGET  (r4 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.StatementExecutor.logger com.j256.ormlite.logger.Logger \l0x005c: IGET  (r5 I:com.j256.ormlite.table.TableInfo\<T, ID\>) = (r3 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.tableInfo com.j256.ormlite.table.TableInfo \l0x005e: INVOKE  (r5 I:java.lang.String) = (r5 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getTableName():java.lang.String type: VIRTUAL \l0x0062: CONST_STR  (r0 I:java.lang.String) =  \"re\-enabled auto\-commit on table \{\} after batch tasks\" \l0x0064: INVOKE  \l  (r4 I:com.j256.ormlite.logger.Logger)\l  (r0 I:java.lang.String)\l  (r5 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.debug(java.lang.String, java.lang.Object):void type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x0067|0x0067: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private CT com.j256.ormlite.stmt.StatementExecutor.doCallBatchTasks((r3 'this' I:com.j256.ormlite.stmt.StatementExecutor A[IMMUTABLE_TYPE, THIS]), (r4 I:com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.concurrent.Callable\<CT\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<CT:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, Z, Ljava\/util\/concurrent\/Callable\<, TCT;\>;)TCT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_28;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_16;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_29;
Node_16 -> Node_17;
Node_16 -> Node_26;
Node_16 -> Node_21;
Node_16 -> Node_28;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
}

