digraph "CFG forcom.j256.ormlite.stmt.StatementExecutor.doCallBatchTasks(Lcom\/j256\/ormlite\/support\/DatabaseConnection;ZLjava\/util\/concurrent\/Callable;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r3.databaseType.isBatchUseTransaction() == false) goto L_0x000f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008}"];
Node_3 [shape=record,label="{3\:\ 0x000e|RETURN\l|return com.j256.ormlite.misc.TransactionManager.callInTransaction(r4, r5, r3.databaseType, r6)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|r5 = false\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|SYNTHETIC\lSplitter:B:5:0x0011\l}"];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\lSplitter:B:5:0x0011\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\l|if (r4.isAutoCommitSupported() == false) goto L_0x0033     \/\/ Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\l|if (r4.isAutoCommit() == false) goto L_0x0033     \/\/ Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\l|r4.setAutoCommit(false)     \/\/ Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|SYNTHETIC\lSplitter:B:11:0x0020\l}"];
Node_12 [shape=record,label="{12\:\ ?|Catch:\{ all \-\> 0x002f \}\lSplitter:B:11:0x0020\l|logger.debug(\"disabled auto\-commit on table \{\} before batch tasks\", (java.lang.Object) r3.tableInfo.getTableName())     \/\/ Catch:\{ all \-\> 0x002f \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|r5 = true\l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|ExcHandler: all (r5v8 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:11:0x0020\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_15 [shape=record,label="{15\:\ 0x0030|r6 = r5\lr5 = true\l}"];
Node_16 [shape=record,label="{16\:\ 0x0033|SYNTHETIC\lPHI: r5 \l  PHI: (r5v6 boolean) = (r5v1 boolean), (r5v1 boolean), (r5v11 boolean) binds: [B:7:0x0015, B:9:0x001b, B:13:0x002d] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:16:0x0033\l}"];
Node_17 [shape=record,label="{17\:\ ?|Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\lSplitter:B:16:0x0033\l|java.lang.Object r6 = r6.call()     \/\/ Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|if (r5 == false) goto L_0x0049\l}"];
Node_19 [shape=record,label="{19\:\ 0x0039|r4.setAutoCommit(true)\llogger.debug(\"re\-enabled auto\-commit on table \{\} after batch tasks\", (java.lang.Object) r3.tableInfo.getTableName())\l}"];
Node_20 [shape=record,label="{20\:\ 0x0049|RETURN\l|return r6\l}"];
Node_21 [shape=record,label="{21\:\ 0x004a|ExcHandler: Exception (r6v4 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:16:0x0033\l|java.lang.Exception r6 = move\-exception\l}"];
Node_22 [shape=record,label="{22\:\ 0x004b}"];
Node_23 [shape=record,label="{23\:\ 0x004d|SYNTHETIC\lSplitter:B:23:0x004d\l}"];
Node_24 [shape=record,label="{24\:\ ?|Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\lSplitter:B:23:0x004d\l}"];
Node_25 [shape=record,label="{25\:\ 0x0051|Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\l|throw com.j256.ormlite.misc.SqlExceptionUtil.create(\"Batch tasks callable threw non\-SQL exception\", r6)     \/\/ Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\l}"];
Node_26 [shape=record,label="{26\:\ 0x0052|Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\lExcHandler: SQLException (r6v3 'e' java.sql.SQLException A[CUSTOM_DECLARE, Catch:\{  \}])\lSplitter:B:16:0x0033\l|java.sql.SQLException r6 = move\-exception     \/\/ Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\l}"];
Node_27 [shape=record,label="{27\:\ 0x0053|Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\l|throw r6     \/\/ Catch:\{ SQLException \-\> 0x0052, Exception \-\> 0x004a, all \-\> 0x0054 \}\l}"];
Node_28 [shape=record,label="{28\:\ 0x0054|PHI: r5 \l  PHI: (r5v5 boolean) = (r5v1 boolean), (r5v6 boolean), (r5v6 boolean) binds: [B:5:0x0011, B:16:0x0033, B:23:0x004d] A[DONT_GENERATE, DONT_INLINE]\lExcHandler: all (th java.lang.Throwable)\lSplitter:B:5:0x0011\l|java.lang.Throwable r6 = th\l}"];
Node_29 [shape=record,label="{29\:\ 0x0055|PHI: r5 r6 \l  PHI: (r5v2 boolean) = (r5v5 boolean), (r5v9 boolean) binds: [B:28:0x0054, B:15:0x0030] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 'th' java.lang.Throwable) = (r6v2 'th' java.lang.Throwable), (r6v7 'th' java.lang.Throwable) binds: [B:28:0x0054, B:15:0x0030] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 == false) goto L_0x0067\l}"];
Node_30 [shape=record,label="{30\:\ 0x0057|r4.setAutoCommit(true)\llogger.debug(\"re\-enabled auto\-commit on table \{\} after batch tasks\", (java.lang.Object) r3.tableInfo.getTableName())\l}"];
Node_31 [shape=record,label="{31\:\ 0x0067|throw r6\l}"];
MethodNode[shape=record,label="{private CT com.j256.ormlite.stmt.StatementExecutor.doCallBatchTasks((r3v0 'this' com.j256.ormlite.stmt.StatementExecutor A[IMMUTABLE_TYPE, THIS]), (r4v0 com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.util.concurrent.Callable\<CT\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<CT:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, Z, Ljava\/util\/concurrent\/Callable\<, TCT;\>;)TCT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_28;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_16;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_29;
Node_16 -> Node_17;
Node_16 -> Node_26;
Node_16 -> Node_21;
Node_16 -> Node_28;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
}

