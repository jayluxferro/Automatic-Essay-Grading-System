digraph "CFG forcom.j256.ormlite.stmt.StatementExecutor.executeRawNoArgs(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Ljava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.StatementExecutor.logger com.j256.ormlite.logger.Logger \l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"running raw execute statement: \{\}\" \l0x0004: INVOKE  \l  (r0 I:com.j256.ormlite.logger.Logger)\l  (r1 I:java.lang.String)\l  (r4 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.debug(java.lang.String, java.lang.Object):void type: VIRTUAL \l0x0007: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0008: INVOKE  (r3 I:int) = \l  (r3 I:com.j256.ormlite.support.DatabaseConnection)\l  (r4 I:java.lang.String)\l  (r0 I:int)\l com.j256.ormlite.support.DatabaseConnection.executeStatement(java.lang.String, int):int type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{public int com.j256.ormlite.stmt.StatementExecutor.executeRawNoArgs((r2 'this' I:com.j256.ormlite.stmt.StatementExecutor A[IMMUTABLE_TYPE, THIS]), (r3 I:com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

