digraph "CFG forcom.j256.ormlite.stmt.StatementExecutor.create(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Ljava\/lang\/Object;Lcom\/j256\/ormlite\/dao\/ObjectCache;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.stmt.mapped.MappedCreate\<T, ID\>) = (r2 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.mappedInsert com.j256.ormlite.stmt.mapped.MappedCreate \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:com.j256.ormlite.db.DatabaseType) = (r2 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.databaseType com.j256.ormlite.db.DatabaseType \l0x0006: IGET  (r1 I:com.j256.ormlite.table.TableInfo\<T, ID\>) = (r2 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.tableInfo com.j256.ormlite.table.TableInfo \l0x0008: INVOKE  (r0 I:com.j256.ormlite.stmt.mapped.MappedCreate) = \l  (r0 I:com.j256.ormlite.db.DatabaseType)\l  (r1 I:com.j256.ormlite.table.TableInfo)\l com.j256.ormlite.stmt.mapped.MappedCreate.build(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.table.TableInfo):com.j256.ormlite.stmt.mapped.MappedCreate type: STATIC \l0x000c: IPUT  \l  (r0 I:com.j256.ormlite.stmt.mapped.MappedCreate\<T, ID\>)\l  (r2 I:com.j256.ormlite.stmt.StatementExecutor)\l com.j256.ormlite.stmt.StatementExecutor.mappedInsert com.j256.ormlite.stmt.mapped.MappedCreate \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IGET  (r0 I:com.j256.ormlite.stmt.mapped.MappedCreate\<T, ID\>) = (r2 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.mappedInsert com.j256.ormlite.stmt.mapped.MappedCreate \l0x0010: IGET  (r1 I:com.j256.ormlite.db.DatabaseType) = (r2 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.databaseType com.j256.ormlite.db.DatabaseType \l0x0012: INVOKE  (r3 I:int) = \l  (r0 I:com.j256.ormlite.stmt.mapped.MappedCreate)\l  (r1 I:com.j256.ormlite.db.DatabaseType)\l  (r3 I:com.j256.ormlite.support.DatabaseConnection)\l  (r4 I:java.lang.Object)\l  (r5 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.stmt.mapped.MappedCreate.insert(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.support.DatabaseConnection, java.lang.Object, com.j256.ormlite.dao.ObjectCache):int type: VIRTUAL \l0x0016: IGET  (r4 I:com.j256.ormlite.dao.Dao\<T, ID\>) = (r2 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.dao com.j256.ormlite.dao.Dao \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002d \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IGET  (r4 I:java.lang.ThreadLocal\<java.lang.Boolean\>) = (r2 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.localIsInBatchMode java.lang.ThreadLocal \l0x001c: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.lang.ThreadLocal) java.lang.ThreadLocal.get():java.lang.Object type: VIRTUAL \l0x0020: CHECK_CAST  (r4 I:java.lang.Boolean) = (java.lang.Boolean) (r4 I:?[OBJECT, ARRAY]) \l0x0022: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002d \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: IGET  (r4 I:com.j256.ormlite.dao.Dao\<T, ID\>) = (r2 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.dao com.j256.ormlite.dao.Dao \l0x002a: INVOKE  (r4 I:com.j256.ormlite.dao.Dao) com.j256.ormlite.dao.Dao.notifyChanges():void type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{public int com.j256.ormlite.stmt.StatementExecutor.create((r2 'this' I:com.j256.ormlite.stmt.StatementExecutor A[IMMUTABLE_TYPE, THIS]), (r3 I:com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, TT;, Lcom\/j256\/ormlite\/dao\/ObjectCache;, )I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
}

