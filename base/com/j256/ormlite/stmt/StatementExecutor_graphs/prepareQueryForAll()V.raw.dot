digraph "CFG forcom.j256.ormlite.stmt.StatementExecutor.prepareQueryForAll()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.stmt.PreparedQuery\<T\>) = (r4 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.preparedQueryForAll com.j256.ormlite.stmt.PreparedQuery \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:com.j256.ormlite.stmt.QueryBuilder) =  com.j256.ormlite.stmt.QueryBuilder \l0x0006: IGET  (r1 I:com.j256.ormlite.db.DatabaseType) = (r4 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.databaseType com.j256.ormlite.db.DatabaseType \l0x0008: IGET  (r2 I:com.j256.ormlite.table.TableInfo\<T, ID\>) = (r4 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.tableInfo com.j256.ormlite.table.TableInfo \l0x000a: IGET  (r3 I:com.j256.ormlite.dao.Dao\<T, ID\>) = (r4 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.dao com.j256.ormlite.dao.Dao \l0x000c: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.QueryBuilder)\l  (r1 I:com.j256.ormlite.db.DatabaseType)\l  (r2 I:com.j256.ormlite.table.TableInfo)\l  (r3 I:com.j256.ormlite.dao.Dao)\l com.j256.ormlite.stmt.QueryBuilder.\<init\>(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.table.TableInfo, com.j256.ormlite.dao.Dao):void type: DIRECT \l0x000f: INVOKE  (r0 I:com.j256.ormlite.stmt.PreparedQuery) = (r0 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.prepare():com.j256.ormlite.stmt.PreparedQuery type: VIRTUAL \l0x0013: IPUT  \l  (r0 I:com.j256.ormlite.stmt.PreparedQuery\<T\>)\l  (r4 I:com.j256.ormlite.stmt.StatementExecutor)\l com.j256.ormlite.stmt.StatementExecutor.preparedQueryForAll com.j256.ormlite.stmt.PreparedQuery \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.j256.ormlite.stmt.StatementExecutor.prepareQueryForAll((r4 'this' I:com.j256.ormlite.stmt.StatementExecutor A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

