digraph "CFG forcom.j256.ormlite.stmt.StatementExecutor.callBatchTasks(Lcom\/j256\/ormlite\/support\/ConnectionSource;Ljava\/util\/concurrent\/Callable;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.table.TableInfo\<T, ID\>) = (r1 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.tableInfo com.j256.ormlite.table.TableInfo \l0x0002: INVOKE  (r0 I:java.lang.String) = (r0 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getTableName():java.lang.String type: VIRTUAL \l0x0006: INVOKE  (r0 I:boolean) = \l  (r2 I:com.j256.ormlite.support.ConnectionSource)\l  (r0 I:java.lang.String)\l com.j256.ormlite.support.ConnectionSource.isSingleConnection(java.lang.String):boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|SYNTHETIC\lSplitter:B:3:0x000d\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x000d\l|0x000d: INVOKE  (r2 I:java.lang.Object) = \l  (r1 I:com.j256.ormlite.stmt.StatementExecutor)\l  (r2 I:com.j256.ormlite.support.ConnectionSource)\l  (r3 I:java.util.concurrent.Callable)\l com.j256.ormlite.stmt.StatementExecutor.doCallBatchTasks(com.j256.ormlite.support.ConnectionSource, java.util.concurrent.Callable):java.lang.Object type: DIRECT A[Catch:\{ all \-\> 0x0013 \}, TRY_ENTER]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0013 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: RETURN  (r2 I:CT) A[Catch:\{ all \-\> 0x0013 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|ExcHandler: all null\lSplitter:B:3:0x000d\l|0x0013: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0013 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0013 \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|0x0016: INVOKE  (r2 I:java.lang.Object) = \l  (r1 I:com.j256.ormlite.stmt.StatementExecutor)\l  (r2 I:com.j256.ormlite.support.ConnectionSource)\l  (r3 I:java.util.concurrent.Callable)\l com.j256.ormlite.stmt.StatementExecutor.doCallBatchTasks(com.j256.ormlite.support.ConnectionSource, java.util.concurrent.Callable):java.lang.Object type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|0x001a: RETURN  (r2 I:CT) \l}"];
MethodNode[shape=record,label="{public CT com.j256.ormlite.stmt.StatementExecutor.callBatchTasks((r1 'this' I:com.j256.ormlite.stmt.StatementExecutor A[IMMUTABLE_TYPE, THIS]), (r2 I:com.j256.ormlite.support.ConnectionSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.util.concurrent.Callable\<CT\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<CT:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/support\/ConnectionSource;, Ljava\/util\/concurrent\/Callable\<, TCT;\>;)TCT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

