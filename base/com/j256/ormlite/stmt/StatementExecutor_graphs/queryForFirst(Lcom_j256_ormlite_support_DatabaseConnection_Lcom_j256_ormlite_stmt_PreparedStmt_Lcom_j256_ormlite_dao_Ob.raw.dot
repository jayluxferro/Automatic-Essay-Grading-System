digraph "CFG forcom.j256.ormlite.stmt.StatementExecutor.queryForFirst(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Lcom\/j256\/ormlite\/stmt\/PreparedStmt;Lcom\/j256\/ormlite\/dao\/ObjectCache;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:com.j256.ormlite.stmt.StatementBuilder$StatementType) =  com.j256.ormlite.stmt.StatementBuilder.StatementType.SELECT com.j256.ormlite.stmt.StatementBuilder$StatementType \l0x0002: INVOKE  (r4 I:com.j256.ormlite.support.CompiledStatement) = \l  (r5 I:com.j256.ormlite.stmt.PreparedStmt)\l  (r4 I:com.j256.ormlite.support.DatabaseConnection)\l  (r0 I:com.j256.ormlite.stmt.StatementBuilder$StatementType)\l com.j256.ormlite.stmt.PreparedStmt.compile(com.j256.ormlite.support.DatabaseConnection, com.j256.ormlite.stmt.StatementBuilder$StatementType):com.j256.ormlite.support.CompiledStatement type: INTERFACE \l0x0006: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|SYNTHETIC\lSplitter:B:1:0x0008\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0008\l|0x0008: INVOKE  \l  (r4 I:com.j256.ormlite.support.CompiledStatement)\l  (r0 I:int)\l com.j256.ormlite.support.CompiledStatement.setMaxRows(int):void type: INTERFACE A[Catch:\{ all \-\> 0x0047 \}, TRY_ENTER]\l0x000b: INVOKE  (r6 I:com.j256.ormlite.support.DatabaseResults) = \l  (r4 I:com.j256.ormlite.support.CompiledStatement)\l  (r6 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.support.CompiledStatement.runQuery(com.j256.ormlite.dao.ObjectCache):com.j256.ormlite.support.DatabaseResults type: INTERFACE A[Catch:\{ all \-\> 0x0047 \}]\l0x000e: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|SYNTHETIC\lSplitter:B:3:0x000f\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x000f\l|0x000f: INVOKE  (r0 I:boolean) = (r6 I:com.j256.ormlite.support.DatabaseResults) com.j256.ormlite.support.DatabaseResults.first():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0045 \}, TRY_ENTER]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002f A[Catch:\{ all \-\> 0x0045 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: SGET  (r0 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.StatementExecutor.logger com.j256.ormlite.logger.Logger A[Catch:\{ all \-\> 0x0045 \}]\l0x0017: CONST_STR  (r1 I:java.lang.String) =  \"query\-for\-first of '\{\}' returned at least 1 result\" A[Catch:\{ all \-\> 0x0045 \}]\l0x0019: INVOKE  (r2 I:java.lang.String) = (r5 I:com.j256.ormlite.stmt.PreparedStmt) com.j256.ormlite.stmt.PreparedStmt.getStatement():java.lang.String type: INTERFACE A[Catch:\{ all \-\> 0x0045 \}]\l0x001d: INVOKE  \l  (r0 I:com.j256.ormlite.logger.Logger)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.debug(java.lang.String, java.lang.Object):void type: VIRTUAL A[Catch:\{ all \-\> 0x0045 \}]\l0x0020: INVOKE  (r5 I:java.lang.Object) = \l  (r5 I:com.j256.ormlite.stmt.PreparedStmt)\l  (r6 I:com.j256.ormlite.support.DatabaseResults)\l com.j256.ormlite.stmt.PreparedStmt.mapRow(com.j256.ormlite.support.DatabaseResults):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0045 \}]\l0x0023: NOP   A[TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: CONST_STR  (r0 I:java.lang.String) =  \"results\" \l0x0026: INVOKE  (r6 I:java.io.Closeable), (r0 I:java.lang.String) com.j256.ormlite.misc.IOUtils.closeThrowSqlException(java.io.Closeable, java.lang.String):void type: STATIC \l0x0029: CONST_STR  (r6 I:java.lang.String) =  \"compiled statement\" \l0x002b: INVOKE  (r4 I:java.io.Closeable), (r6 I:java.lang.String) com.j256.ormlite.misc.IOUtils.closeThrowSqlException(java.io.Closeable, java.lang.String):void type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: RETURN  (r5 I:T) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|SYNTHETIC\lSplitter:B:9:0x002f\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x002f\l|0x002f: SGET  (r0 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.StatementExecutor.logger com.j256.ormlite.logger.Logger A[Catch:\{ all \-\> 0x0045 \}, TRY_ENTER]\l0x0031: CONST_STR  (r2 I:java.lang.String) =  \"query\-for\-first of '\{\}' returned at 0 results\" A[Catch:\{ all \-\> 0x0045 \}]\l0x0033: INVOKE  (r5 I:java.lang.String) = (r5 I:com.j256.ormlite.stmt.PreparedStmt) com.j256.ormlite.stmt.PreparedStmt.getStatement():java.lang.String type: INTERFACE A[Catch:\{ all \-\> 0x0045 \}]\l0x0037: INVOKE  \l  (r0 I:com.j256.ormlite.logger.Logger)\l  (r2 I:java.lang.String)\l  (r5 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.debug(java.lang.String, java.lang.Object):void type: VIRTUAL A[Catch:\{ all \-\> 0x0045 \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|0x003a: CONST_STR  (r5 I:java.lang.String) =  \"results\" \l0x003c: INVOKE  (r6 I:java.io.Closeable), (r5 I:java.lang.String) com.j256.ormlite.misc.IOUtils.closeThrowSqlException(java.io.Closeable, java.lang.String):void type: STATIC \l0x003f: CONST_STR  (r5 I:java.lang.String) =  \"compiled statement\" \l0x0041: INVOKE  (r4 I:java.io.Closeable), (r5 I:java.lang.String) com.j256.ormlite.misc.IOUtils.closeThrowSqlException(java.io.Closeable, java.lang.String):void type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0044|0x0044: RETURN  (r1 I:T) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0045|ExcHandler: all null\lSplitter:B:3:0x000f\l|0x0045: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0047|ExcHandler: all null\lSplitter:B:1:0x0008\l|0x0047: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x0048|0x0048: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0049|0x0049: CONST_STR  (r0 I:java.lang.String) =  \"results\" \l0x004b: INVOKE  (r6 I:java.io.Closeable), (r0 I:java.lang.String) com.j256.ormlite.misc.IOUtils.closeThrowSqlException(java.io.Closeable, java.lang.String):void type: STATIC \l0x004e: CONST_STR  (r6 I:java.lang.String) =  \"compiled statement\" \l0x0050: INVOKE  (r4 I:java.io.Closeable), (r6 I:java.lang.String) com.j256.ormlite.misc.IOUtils.closeThrowSqlException(java.io.Closeable, java.lang.String):void type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|0x0053: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public T com.j256.ormlite.stmt.StatementExecutor.queryForFirst((r3 'this' I:com.j256.ormlite.stmt.StatementExecutor A[IMMUTABLE_TYPE, THIS]), (r4 I:com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.j256.ormlite.stmt.PreparedStmt\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, Lcom\/j256\/ormlite\/stmt\/PreparedStmt\<, TT;\>;, Lcom\/j256\/ormlite\/dao\/ObjectCache;, )TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_13 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

