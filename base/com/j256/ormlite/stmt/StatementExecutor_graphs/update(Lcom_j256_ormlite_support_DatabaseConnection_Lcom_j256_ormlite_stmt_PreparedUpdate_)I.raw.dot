digraph "CFG forcom.j256.ormlite.stmt.StatementExecutor.update(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Lcom\/j256\/ormlite\/stmt\/PreparedUpdate;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:com.j256.ormlite.stmt.StatementBuilder$StatementType) =  com.j256.ormlite.stmt.StatementBuilder.StatementType.UPDATE com.j256.ormlite.stmt.StatementBuilder$StatementType \l0x0002: INVOKE  (r2 I:com.j256.ormlite.support.CompiledStatement) = \l  (r3 I:com.j256.ormlite.stmt.PreparedUpdate)\l  (r2 I:com.j256.ormlite.support.DatabaseConnection)\l  (r0 I:com.j256.ormlite.stmt.StatementBuilder$StatementType)\l com.j256.ormlite.stmt.PreparedUpdate.compile(com.j256.ormlite.support.DatabaseConnection, com.j256.ormlite.stmt.StatementBuilder$StatementType):com.j256.ormlite.support.CompiledStatement type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|SYNTHETIC\lSplitter:B:1:0x0006\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0006\l|0x0006: INVOKE  (r3 I:int) = (r2 I:com.j256.ormlite.support.CompiledStatement) com.j256.ormlite.support.CompiledStatement.runUpdate():int type: INTERFACE A[Catch:\{ all \-\> 0x0027 \}, TRY_ENTER]\l0x000a: IGET  (r0 I:com.j256.ormlite.dao.Dao\<T, ID\>) = (r1 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.dao com.j256.ormlite.dao.Dao A[Catch:\{ all \-\> 0x0027 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0021 A[Catch:\{ all \-\> 0x0027 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IGET  (r0 I:java.lang.ThreadLocal\<java.lang.Boolean\>) = (r1 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.localIsInBatchMode java.lang.ThreadLocal A[Catch:\{ all \-\> 0x0027 \}]\l0x0010: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ThreadLocal) java.lang.ThreadLocal.get():java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0027 \}]\l0x0014: CHECK_CAST  (r0 I:java.lang.Boolean) = (java.lang.Boolean) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0027 \}]\l0x0016: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0027 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0021 A[Catch:\{ all \-\> 0x0027 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IGET  (r0 I:com.j256.ormlite.dao.Dao\<T, ID\>) = (r1 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.dao com.j256.ormlite.dao.Dao A[Catch:\{ all \-\> 0x0027 \}]\l0x001e: INVOKE  (r0 I:com.j256.ormlite.dao.Dao) com.j256.ormlite.dao.Dao.notifyChanges():void type: INTERFACE A[Catch:\{ all \-\> 0x0027 \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: CONST_STR  (r0 I:java.lang.String) =  \"compiled statement\" \l0x0023: INVOKE  (r2 I:java.io.Closeable), (r0 I:java.lang.String) com.j256.ormlite.misc.IOUtils.closeThrowSqlException(java.io.Closeable, java.lang.String):void type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: RETURN  (r3 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|ExcHandler: all null\lSplitter:B:1:0x0006\l|0x0027: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: CONST_STR  (r0 I:java.lang.String) =  \"compiled statement\" \l0x002a: INVOKE  (r2 I:java.io.Closeable), (r0 I:java.lang.String) com.j256.ormlite.misc.IOUtils.closeThrowSqlException(java.io.Closeable, java.lang.String):void type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int com.j256.ormlite.stmt.StatementExecutor.update((r1 'this' I:com.j256.ormlite.stmt.StatementExecutor A[IMMUTABLE_TYPE, THIS]), (r2 I:com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.j256.ormlite.stmt.PreparedUpdate\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, Lcom\/j256\/ormlite\/stmt\/PreparedUpdate\<, TT;\>;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

