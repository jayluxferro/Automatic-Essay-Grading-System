digraph "CFG forcom.j256.ormlite.stmt.StatementExecutor.buildIterator(Lcom\/j256\/ormlite\/dao\/BaseDaoImpl;Lcom\/j256\/ormlite\/support\/ConnectionSource;ILcom\/j256\/ormlite\/dao\/ObjectCache;)Lcom\/j256\/ormlite\/stmt\/SelectIterator;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.prepareQueryForAll():void type: DIRECT \l0x0003: IGET  (r3 I:com.j256.ormlite.stmt.PreparedQuery\<T\>) = (r6 I:com.j256.ormlite.stmt.StatementExecutor) com.j256.ormlite.stmt.StatementExecutor.preparedQueryForAll com.j256.ormlite.stmt.PreparedQuery \l0x0005: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0006: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0007: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0008: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0009: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: INVOKE  (r7 I:com.j256.ormlite.stmt.SelectIterator) = \l  (r0 I:com.j256.ormlite.stmt.StatementExecutor)\l  (r1 I:com.j256.ormlite.dao.BaseDaoImpl)\l  (r2 I:com.j256.ormlite.support.ConnectionSource)\l  (r3 I:com.j256.ormlite.stmt.PreparedStmt)\l  (r4 I:com.j256.ormlite.dao.ObjectCache)\l  (r5 I:int)\l com.j256.ormlite.stmt.StatementExecutor.buildIterator(com.j256.ormlite.dao.BaseDaoImpl, com.j256.ormlite.support.ConnectionSource, com.j256.ormlite.stmt.PreparedStmt, com.j256.ormlite.dao.ObjectCache, int):com.j256.ormlite.stmt.SelectIterator type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: RETURN  (r7 I:com.j256.ormlite.stmt.SelectIterator\<T, ID\>) \l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.stmt.SelectIterator\<T, ID\> com.j256.ormlite.stmt.StatementExecutor.buildIterator((r6 'this' I:com.j256.ormlite.stmt.StatementExecutor A[IMMUTABLE_TYPE, THIS]), (r7 I:com.j256.ormlite.dao.BaseDaoImpl\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.j256.ormlite.support.ConnectionSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/dao\/BaseDaoImpl\<, TT;TID;\>;, Lcom\/j256\/ormlite\/support\/ConnectionSource;, I, Lcom\/j256\/ormlite\/dao\/ObjectCache;, ), Lcom\/j256\/ormlite\/stmt\/SelectIterator\<, TT;TID;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

