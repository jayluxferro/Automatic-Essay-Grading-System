digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedUpdateId.execute(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Ljava\/lang\/Object;Ljava\/lang\/Object;Lcom\/j256\/ormlite\/dao\/ObjectCache;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ SQLException \-\> 0x0054 \}, TRY_ENTER]\l0x0003: INVOKE  (r1 I:java.lang.Object) = \l  (r4 I:com.j256.ormlite.stmt.mapped.MappedUpdateId)\l  (r7 I:java.lang.Object)\l com.j256.ormlite.stmt.mapped.MappedUpdateId.convertIdToFieldObject(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x0007: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x0008: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x000a: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x000b: INVOKE  (r3 I:java.lang.Object) = \l  (r4 I:com.j256.ormlite.stmt.mapped.MappedUpdateId)\l  (r6 I:java.lang.Object)\l com.j256.ormlite.stmt.mapped.MappedUpdateId.extractIdToFieldObject(java.lang.Object):java.lang.Object type: DIRECT A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x000f: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x0011: IGET  (r1 I:java.lang.String) = (r4 I:com.j256.ormlite.stmt.mapped.MappedUpdateId) com.j256.ormlite.stmt.mapped.MappedUpdateId.statement java.lang.String A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x0013: IGET  (r3 I:com.j256.ormlite.field.FieldType[]) = (r4 I:com.j256.ormlite.stmt.mapped.MappedUpdateId) com.j256.ormlite.stmt.mapped.MappedUpdateId.argFieldTypes com.j256.ormlite.field.FieldType[] A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x0015: INVOKE  (r5 I:int) = \l  (r5 I:com.j256.ormlite.support.DatabaseConnection)\l  (r1 I:java.lang.String)\l  (r0 I:java.lang.Object[])\l  (r3 I:com.j256.ormlite.field.FieldType[])\l com.j256.ormlite.support.DatabaseConnection.update(java.lang.String, java.lang.Object[], com.j256.ormlite.field.FieldType[]):int type: INTERFACE A[Catch:\{ SQLException \-\> 0x0054 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:10:0x0037 A[Catch:\{ SQLException \-\> 0x0054 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0032 A[Catch:\{ SQLException \-\> 0x0054 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: IGET  (r1 I:com.j256.ormlite.field.FieldType) = (r4 I:com.j256.ormlite.stmt.mapped.MappedUpdateId) com.j256.ormlite.stmt.mapped.MappedUpdateId.idField com.j256.ormlite.field.FieldType A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x001f: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:com.j256.ormlite.field.FieldType)\l  (r6 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.extractJavaFieldValue(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x0023: IGET  (r3 I:java.lang.Class) = (r4 I:com.j256.ormlite.stmt.mapped.MappedUpdateId) com.j256.ormlite.stmt.mapped.MappedUpdateId.clazz java.lang.Class A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x0025: INVOKE  (r1 I:java.lang.Object) = \l  (r8 I:com.j256.ormlite.dao.ObjectCache)\l  (r3 I:java.lang.Class)\l  (r1 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l com.j256.ormlite.dao.ObjectCache.updateId(java.lang.Class, java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ SQLException \-\> 0x0054 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|0x0029: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0032 A[Catch:\{ SQLException \-\> 0x0054 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0032 A[Catch:\{ SQLException \-\> 0x0054 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: IGET  (r3 I:com.j256.ormlite.field.FieldType) = (r4 I:com.j256.ormlite.stmt.mapped.MappedUpdateId) com.j256.ormlite.stmt.mapped.MappedUpdateId.idField com.j256.ormlite.field.FieldType A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x002f: INVOKE  \l  (r3 I:com.j256.ormlite.field.FieldType)\l  (r1 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l  (r2 I:boolean)\l  (r8 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.field.FieldType.assignField(java.lang.Object, java.lang.Object, boolean, com.j256.ormlite.dao.ObjectCache):void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0054 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|0x0032: IGET  (r1 I:com.j256.ormlite.field.FieldType) = (r4 I:com.j256.ormlite.stmt.mapped.MappedUpdateId) com.j256.ormlite.stmt.mapped.MappedUpdateId.idField com.j256.ormlite.field.FieldType A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x0034: INVOKE  \l  (r1 I:com.j256.ormlite.field.FieldType)\l  (r6 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l  (r2 I:boolean)\l  (r8 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.field.FieldType.assignField(java.lang.Object, java.lang.Object, boolean, com.j256.ormlite.dao.ObjectCache):void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0054 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|0x0037: SGET  (r7 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.mapped.MappedUpdateId.logger com.j256.ormlite.logger.Logger A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x0039: CONST_STR  (r8 I:java.lang.String) =  \"updating\-id with statement '\{\}' and \{\} args, changed \{\} rows\" A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x003b: IGET  (r1 I:java.lang.String) = (r4 I:com.j256.ormlite.stmt.mapped.MappedUpdateId) com.j256.ormlite.stmt.mapped.MappedUpdateId.statement java.lang.String A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x003d: ARRAY_LENGTH  (r2 I:int) = (r0 I:?[]) A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x003e: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x0042: INVOKE  (r3 I:java.lang.Integer) = (r5 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x0046: INVOKE  \l  (r7 I:com.j256.ormlite.logger.Logger)\l  (r8 I:java.lang.String)\l  (r1 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object):void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x0049: ARRAY_LENGTH  (r7 I:int) = (r0 I:?[]) A[Catch:\{ SQLException \-\> 0x0054 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x004a|0x004a: IF  (r7 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:13:0x0053 A[Catch:\{ SQLException \-\> 0x0054 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x004c|0x004c: SGET  (r7 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.mapped.MappedUpdateId.logger com.j256.ormlite.logger.Logger A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x004e: CONST_STR  (r8 I:java.lang.String) =  \"updating\-id arguments: \{\}\" A[Catch:\{ SQLException \-\> 0x0054 \}]\l0x0050: INVOKE  \l  (r7 I:com.j256.ormlite.logger.Logger)\l  (r8 I:java.lang.String)\l  (r0 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.trace(java.lang.String, java.lang.Object):void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0054 \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0053|0x0053: RETURN  (r5 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0054|ExcHandler: SQLException null\lSplitter:B:1:0x0001\l|0x0054: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0055|0x0055: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0057: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x005a: CONST_STR  (r8 I:java.lang.String) =  \"Unable to run update\-id stmt on object \" \l0x005c: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005f: INVOKE  (r7 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0062: CONST_STR  (r6 I:java.lang.String) =  \": \" \l0x0064: INVOKE  (r7 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0067: IGET  (r6 I:java.lang.String) = (r4 I:com.j256.ormlite.stmt.mapped.MappedUpdateId) com.j256.ormlite.stmt.mapped.MappedUpdateId.statement java.lang.String \l0x0069: INVOKE  (r7 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006c: INVOKE  (r6 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0070: INVOKE  (r5 I:java.sql.SQLException) = (r6 I:java.lang.String), (r5 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0074|0x0074: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int com.j256.ormlite.stmt.mapped.MappedUpdateId.execute((r4 'this' I:com.j256.ormlite.stmt.mapped.MappedUpdateId A[IMMUTABLE_TYPE, THIS]), (r5 I:com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:ID A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, TT;TID;, Lcom\/j256\/ormlite\/dao\/ObjectCache;, )I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

