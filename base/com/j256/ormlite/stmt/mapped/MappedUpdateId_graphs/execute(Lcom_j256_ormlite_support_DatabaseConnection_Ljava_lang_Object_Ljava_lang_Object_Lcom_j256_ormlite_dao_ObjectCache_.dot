digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedUpdateId.execute(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Ljava\/lang\/Object;Ljava\/lang\/Object;Lcom\/j256\/ormlite\/dao\/ObjectCache;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ SQLException \-\> 0x0054 \}\lSplitter:B:1:0x0001\l|java.lang.Object[] r0 = new java.lang.Object[]\{convertIdToFieldObject(r7), extractIdToFieldObject(r6)\}\lint r5 = r5.update(r4.statement, r0, r4.argFieldTypes)     \/\/ Catch:\{ SQLException \-\> 0x0054 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|Catch:\{ SQLException \-\> 0x0054 \}\l|if (r5 \<= 0) goto L_0x0037     \/\/ Catch:\{ SQLException \-\> 0x0054 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|Catch:\{ SQLException \-\> 0x0054 \}\l|if (r8 == null) goto L_0x0032     \/\/ Catch:\{ SQLException \-\> 0x0054 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|Catch:\{ SQLException \-\> 0x0054 \}\l|java.lang.Object r1 = r4.idField.extractJavaFieldValue(r6)     \/\/ Catch:\{ SQLException \-\> 0x0054 \}\ljava.lang.Object r1 = r8.updateId(r4.clazz, r1, r7)     \/\/ Catch:\{ SQLException \-\> 0x0054 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|Catch:\{ SQLException \-\> 0x0054 \}\l|if (r1 == null) goto L_0x0032     \/\/ Catch:\{ SQLException \-\> 0x0054 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|Catch:\{ SQLException \-\> 0x0054 \}\l|if (r1 == r6) goto L_0x0032     \/\/ Catch:\{ SQLException \-\> 0x0054 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|Catch:\{ SQLException \-\> 0x0054 \}\l|r4.idField.assignField(r1, r7, false, r8)     \/\/ Catch:\{ SQLException \-\> 0x0054 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|Catch:\{ SQLException \-\> 0x0054 \}\l|r4.idField.assignField(r6, r7, false, r8)     \/\/ Catch:\{ SQLException \-\> 0x0054 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|Catch:\{ SQLException \-\> 0x0054 \}\l|logger.debug(\"updating\-id with statement '\{\}' and \{\} args, changed \{\} rows\", (java.lang.Object) r4.statement, (java.lang.Object) java.lang.Integer.valueOf(r0.length), (java.lang.Object) java.lang.Integer.valueOf(r5))     \/\/ Catch:\{ SQLException \-\> 0x0054 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x004a|Catch:\{ SQLException \-\> 0x0054 \}\l|if (r0.length \<= 0) goto L_0x0053     \/\/ Catch:\{ SQLException \-\> 0x0054 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x004c|Catch:\{ SQLException \-\> 0x0054 \}\l|logger.trace(\"updating\-id arguments: \{\}\", (java.lang.Object) r0)     \/\/ Catch:\{ SQLException \-\> 0x0054 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0053|RETURN\l|return r5\l}"];
Node_14 [shape=record,label="{14\:\ 0x0054|ExcHandler: SQLException (r5v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0001\l|java.sql.SQLException r5 = move\-exception\l}"];
Node_15 [shape=record,label="{15\:\ 0x0055|java.lang.StringBuilder r7 = new java.lang.StringBuilder()\lr7.append(\"Unable to run update\-id stmt on object \")\lr7.append(r6)\lr7.append(\": \")\lr7.append(r4.statement)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0074|throw com.j256.ormlite.misc.SqlExceptionUtil.create(r7.toString(), r5)\l}"];
MethodNode[shape=record,label="{public int com.j256.ormlite.stmt.mapped.MappedUpdateId.execute((r4v0 'this' com.j256.ormlite.stmt.mapped.MappedUpdateId A[IMMUTABLE_TYPE, THIS]), (r5v0 com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 ID A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, TT;TID;, Lcom\/j256\/ormlite\/dao\/ObjectCache;, )I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

