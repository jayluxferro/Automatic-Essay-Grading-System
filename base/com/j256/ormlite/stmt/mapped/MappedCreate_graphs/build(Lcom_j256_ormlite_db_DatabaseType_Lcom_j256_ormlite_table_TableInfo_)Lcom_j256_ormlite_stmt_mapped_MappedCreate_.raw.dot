digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedCreate.build(Lcom\/j256\/ormlite\/db\/DatabaseType;Lcom\/j256\/ormlite\/table\/TableInfo;)Lcom\/j256\/ormlite\/stmt\/mapped\/MappedCreate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (128(0x80, float:1.794E\-43) ?[int, float, short, byte, char])\l \l0x0004: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.\<init\>(int):void type: DIRECT \l0x0007: CONST_STR  (r1 I:java.lang.String) =  \"INSERT INTO \" \l0x0009: INVOKE  (r2 I:java.lang.String) = (r14 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getTableName():java.lang.String type: VIRTUAL \l0x000d: INVOKE  \l  (r13 I:com.j256.ormlite.db.DatabaseType)\l  (r0 I:java.lang.StringBuilder)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l com.j256.ormlite.stmt.mapped.MappedCreate.appendTableName(com.j256.ormlite.db.DatabaseType, java.lang.StringBuilder, java.lang.String, java.lang.String):void type: STATIC \l0x0010: INVOKE  (r1 I:com.j256.ormlite.field.FieldType[]) = (r14 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getFieldTypes():com.j256.ormlite.field.FieldType[] type: VIRTUAL \l0x0014: ARRAY_LENGTH  (r2 I:int) = (r1 I:?[]) \l0x0015: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0016: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0017: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0018: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: CONST  (r11 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|0x001a: IF  (r4 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:9:0x0030 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001c|0x001c: AGET  (r6 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x001e: INVOKE  (r7 I:boolean) = \l  (r13 I:com.j256.ormlite.db.DatabaseType)\l  (r6 I:com.j256.ormlite.field.FieldType)\l com.j256.ormlite.stmt.mapped.MappedCreate.isFieldCreatable(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.field.FieldType):boolean type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|0x0022: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: INVOKE  (r6 I:boolean) = (r6 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.isVersion():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0028|0x0028: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002b \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: NEW_ARRAY  (r9 I:com.j256.ormlite.field.FieldType[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: com.j256.ormlite.field.FieldType[] \l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|0x0032: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0038 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: INVOKE  \l  (r13 I:com.j256.ormlite.db.DatabaseType)\l  (r0 I:java.lang.StringBuilder)\l com.j256.ormlite.db.DatabaseType.appendInsertNoColumns(java.lang.StringBuilder):void type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|0x0038: CONST  (r1 I:?[int, float, short, byte, char]) = (40 ?[int, float, short, byte, char]) \l0x003a: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x003d: INVOKE  (r1 I:com.j256.ormlite.field.FieldType[]) = (r14 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getFieldTypes():com.j256.ormlite.field.FieldType[] type: VIRTUAL \l0x0041: ARRAY_LENGTH  (r2 I:int) = (r1 I:?[]) \l0x0042: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0043: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0044: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0045: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|0x0046: CONST  (r8 I:?[int, float, short, byte, char]) = (44 ?[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|0x0048: IF  (r5 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:23:0x0066 \l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|0x004a: AGET  (r10 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r5 I:?[int, short, byte, char]) \l0x004c: INVOKE  (r12 I:boolean) = \l  (r13 I:com.j256.ormlite.db.DatabaseType)\l  (r10 I:com.j256.ormlite.field.FieldType)\l com.j256.ormlite.stmt.mapped.MappedCreate.isFieldCreatable(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.field.FieldType):boolean type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0050|0x0050: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0053 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|0x0053: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0057 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0055|0x0055: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x0057|0x0057: INVOKE  (r0 I:java.lang.StringBuilder), (r8 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x005a|0x005a: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005b: INVOKE  \l  (r13 I:com.j256.ormlite.db.DatabaseType)\l  (r0 I:java.lang.StringBuilder)\l  (r10 I:com.j256.ormlite.field.FieldType)\l  (r8 I:java.util.List)\l com.j256.ormlite.stmt.mapped.MappedCreate.appendFieldColumnName(com.j256.ormlite.db.DatabaseType, java.lang.StringBuilder, com.j256.ormlite.field.FieldType, java.util.List):void type: STATIC \l0x005e: ARITH  (r8 I:int) = (r7 I:int) + (1 int) \l0x0060: APUT  \l  (r9 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r10 I:?[OBJECT, ARRAY])\l \l0x0062: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x0063|0x0063: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0066|0x0066: CONST_STR  (r1 I:java.lang.String) =  \") VALUES (\" \l0x0068: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006b: INVOKE  (r1 I:com.j256.ormlite.field.FieldType[]) = (r14 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getFieldTypes():com.j256.ormlite.field.FieldType[] type: VIRTUAL \l0x006f: ARRAY_LENGTH  (r2 I:int) = (r1 I:?[]) \l0x0070: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0071: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0072|0x0072: IF  (r4 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:33:0x008c \l}"];
Node_25 [shape=record,label="{25\:\ 0x0074|0x0074: AGET  (r6 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x0076: INVOKE  (r6 I:boolean) = \l  (r13 I:com.j256.ormlite.db.DatabaseType)\l  (r6 I:com.j256.ormlite.field.FieldType)\l com.j256.ormlite.stmt.mapped.MappedCreate.isFieldCreatable(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.field.FieldType):boolean type: STATIC \l}"];
Node_26 [shape=record,label="{26\:\ 0x007a|0x007a: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x007d \l}"];
Node_28 [shape=record,label="{28\:\ 0x007d|0x007d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0081 \l}"];
Node_29 [shape=record,label="{29\:\ 0x007f|0x007f: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_30 [shape=record,label="{30\:\ 0x0081|0x0081: INVOKE  (r0 I:java.lang.StringBuilder), (r8 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x0084|0x0084: CONST  (r6 I:?[int, float, short, byte, char]) = (63 ?[int, float, short, byte, char]) \l0x0086: INVOKE  (r0 I:java.lang.StringBuilder), (r6 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_32 [shape=record,label="{32\:\ 0x0089|0x0089: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_33 [shape=record,label="{33\:\ 0x008c|0x008c: CONST  (r1 I:?[int, float, short, byte, char]) = (41 ?[int, float, short, byte, char]) \l0x008e: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_34 [shape=record,label="{34\:\ 0x0091|0x0091: INVOKE  (r1 I:com.j256.ormlite.field.FieldType) = (r14 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getIdField():com.j256.ormlite.field.FieldType type: VIRTUAL \l0x0095: INVOKE  (r10 I:java.lang.String) = \l  (r13 I:com.j256.ormlite.db.DatabaseType)\l  (r1 I:com.j256.ormlite.field.FieldType)\l com.j256.ormlite.stmt.mapped.MappedCreate.buildQueryNextSequence(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.field.FieldType):java.lang.String type: STATIC \l0x0099: NEW_INSTANCE  (r13 I:com.j256.ormlite.stmt.mapped.MappedCreate) =  com.j256.ormlite.stmt.mapped.MappedCreate \l0x009b: INVOKE  (r8 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x009f: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x00a0: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x00a1: INVOKE  \l  (r6 I:com.j256.ormlite.stmt.mapped.MappedCreate)\l  (r7 I:com.j256.ormlite.table.TableInfo)\l  (r8 I:java.lang.String)\l  (r9 I:com.j256.ormlite.field.FieldType[])\l  (r10 I:java.lang.String)\l  (r11 I:int)\l com.j256.ormlite.stmt.mapped.MappedCreate.\<init\>(com.j256.ormlite.table.TableInfo, java.lang.String, com.j256.ormlite.field.FieldType[], java.lang.String, int):void type: DIRECT \l}"];
Node_35 [shape=record,label="{35\:\ 0x00a4|0x00a4: RETURN  (r13 I:com.j256.ormlite.stmt.mapped.MappedCreate\<T, ID\>) \l}"];
MethodNode[shape=record,label="{public static com.j256.ormlite.stmt.mapped.MappedCreate\<T, ID\> com.j256.ormlite.stmt.mapped.MappedCreate.build((r13 I:com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:com.j256.ormlite.table.TableInfo\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, ID:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Lcom\/j256\/ormlite\/table\/TableInfo\<, TT;TID;\>;), Lcom\/j256\/ormlite\/stmt\/mapped\/MappedCreate\<, TT;TID;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_34;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_23;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_22[style=dashed];
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_13;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_33;
Node_25 -> Node_26;
Node_26 -> Node_28;
Node_26 -> Node_32[style=dashed];
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_24;
Node_33 -> Node_34;
Node_34 -> Node_35;
}

