digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedCreate.insert(Lcom\/j256\/ormlite\/db\/DatabaseType;Lcom\/j256\/ormlite\/support\/DatabaseConnection;Ljava\/lang\/Object;Lcom\/j256\/ormlite\/dao\/ObjectCache;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.field.FieldType) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.idField com.j256.ormlite.field.FieldType \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x005b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:com.j256.ormlite.field.FieldType) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.idField com.j256.ormlite.field.FieldType \l0x0008: INVOKE  (r0 I:boolean) = (r0 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.isAllowGeneratedIdInsert():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0018 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IGET  (r0 I:com.j256.ormlite.field.FieldType) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.idField com.j256.ormlite.field.FieldType \l0x0010: INVOKE  (r0 I:boolean) = \l  (r0 I:com.j256.ormlite.field.FieldType)\l  (r12 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.isObjectsFieldValueDefault(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0018 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: IGET  (r3 I:com.j256.ormlite.field.FieldType) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.idField com.j256.ormlite.field.FieldType \l0x001b: INVOKE  (r3 I:boolean) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.isSelfGeneratedId():boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0037 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: IGET  (r3 I:com.j256.ormlite.field.FieldType) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.idField com.j256.ormlite.field.FieldType \l0x0023: INVOKE  (r3 I:boolean) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.isGeneratedId():boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0037 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x005b \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: IGET  (r10 I:com.j256.ormlite.field.FieldType) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.idField com.j256.ormlite.field.FieldType \l0x002d: IGET  (r0 I:com.j256.ormlite.field.FieldType) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.idField com.j256.ormlite.field.FieldType \l0x002f: INVOKE  (r0 I:java.lang.Object) = (r0 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.generateId():java.lang.Object type: VIRTUAL \l0x0033: INVOKE  \l  (r10 I:com.j256.ormlite.field.FieldType)\l  (r12 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l  (r1 I:boolean)\l  (r13 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.field.FieldType.assignField(java.lang.Object, java.lang.Object, boolean, com.j256.ormlite.dao.ObjectCache):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: IGET  (r3 I:com.j256.ormlite.field.FieldType) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.idField com.j256.ormlite.field.FieldType \l0x0039: INVOKE  (r3 I:boolean) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.isGeneratedIdSequence():boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|0x003d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004b \l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: INVOKE  (r10 I:boolean) = (r10 I:com.j256.ormlite.db.DatabaseType) com.j256.ormlite.db.DatabaseType.isSelectSequenceBeforeInsert():boolean type: INTERFACE \l}"];
Node_17 [shape=record,label="{17\:\ 0x0043|0x0043: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004b \l}"];
Node_18 [shape=record,label="{18\:\ 0x0045|0x0045: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x005b \l}"];
Node_19 [shape=record,label="{19\:\ 0x0047|0x0047: INVOKE  \l  (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate)\l  (r11 I:com.j256.ormlite.support.DatabaseConnection)\l  (r12 I:java.lang.Object)\l  (r13 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.stmt.mapped.MappedCreate.assignSequenceId(com.j256.ormlite.support.DatabaseConnection, java.lang.Object, com.j256.ormlite.dao.ObjectCache):void type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x004b|0x004b: IGET  (r10 I:com.j256.ormlite.field.FieldType) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.idField com.j256.ormlite.field.FieldType \l0x004d: INVOKE  (r10 I:boolean) = (r10 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.isGeneratedId():boolean type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|0x0051: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x005b \l}"];
Node_22 [shape=record,label="{22\:\ 0x0053|0x0053: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x005b \l}"];
Node_23 [shape=record,label="{23\:\ 0x0055|0x0055: NEW_INSTANCE  (r10 I:com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder) =  com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder \l0x0057: INVOKE  \l  (r10 I:com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder)\l  (r2 I:com.j256.ormlite.stmt.mapped.MappedCreate$1)\l com.j256.ormlite.stmt.mapped.MappedCreate.KeyHolder.\<init\>(com.j256.ormlite.stmt.mapped.MappedCreate$1):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x005b|0x005b: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x005c|SYNTHETIC\lSplitter:B:25:0x005c\l}"];
Node_26 [shape=record,label="{26\:\ ?|Splitter:B:25:0x005c\l|0x005c: IGET  (r0 I:com.j256.ormlite.table.TableInfo) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.tableInfo com.j256.ormlite.table.TableInfo A[Catch:\{ SQLException \-\> 0x013c \}, TRY_ENTER]\l0x005e: INVOKE  (r0 I:boolean) = (r0 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.isForeignAutoCreate():boolean type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0062|0x0062: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x008d A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0064|0x0064: IGET  (r0 I:com.j256.ormlite.table.TableInfo) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.tableInfo com.j256.ormlite.table.TableInfo A[Catch:\{ SQLException \-\> 0x013c \}]\l0x0066: INVOKE  (r0 I:com.j256.ormlite.field.FieldType[]) = (r0 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getFieldTypes():com.j256.ormlite.field.FieldType[] type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l0x006a: ARRAY_LENGTH  (r3 I:int) = (r0 I:?[]) A[Catch:\{ SQLException \-\> 0x013c \}]\l0x006b: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_29 [shape=record,label="{29\:\ 0x006c|0x006c: IF  (r4 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:39:0x008d A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_30 [shape=record,label="{30\:\ 0x006e|0x006e: AGET  (r5 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) A[Catch:\{ SQLException \-\> 0x013c \}]\l0x0070: INVOKE  (r6 I:boolean) = (r5 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.isForeignAutoCreate():boolean type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0074|0x0074: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0077 A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0076|0x0076: GOTO  \-\> 0x008a A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0077|0x0077: INVOKE  (r6 I:java.lang.Object) = \l  (r5 I:com.j256.ormlite.field.FieldType)\l  (r12 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.extractRawJavaFieldValue(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_34 [shape=record,label="{34\:\ 0x007b|0x007b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x008a A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_35 [shape=record,label="{35\:\ 0x007d|0x007d: INVOKE  (r7 I:com.j256.ormlite.field.FieldType) = (r5 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getForeignIdField():com.j256.ormlite.field.FieldType type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l0x0081: INVOKE  (r7 I:boolean) = \l  (r7 I:com.j256.ormlite.field.FieldType)\l  (r6 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.isObjectsFieldValueDefault(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0085|0x0085: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x008a A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0087|0x0087: INVOKE  \l  (r5 I:com.j256.ormlite.field.FieldType)\l  (r6 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.createWithForeignDao(java.lang.Object):int type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_38 [shape=record,label="{38\:\ 0x008a|0x008a: ARITH  (r4 I:int) = (r4 I:int) + (1 int) A[Catch:\{ SQLException \-\> 0x013c \}]\l0x008c: GOTO  \-\> 0x006c A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_39 [shape=record,label="{39\:\ 0x008d|0x008d: INVOKE  (r0 I:java.lang.Object[]) = \l  (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate)\l  (r12 I:java.lang.Object)\l com.j256.ormlite.stmt.mapped.MappedCreate.getFieldObjects(java.lang.Object):java.lang.Object[] type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l0x0091: IGET  (r3 I:int) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.versionFieldTypeIndex int A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0093|0x0093: IF  (r3 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:45:0x00ae A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0095|0x0095: IGET  (r3 I:int) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.versionFieldTypeIndex int A[Catch:\{ SQLException \-\> 0x013c \}]\l0x0097: AGET  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0099|0x0099: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x00ae A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_43 [shape=record,label="{43\:\ 0x009b|0x009b: IGET  (r3 I:com.j256.ormlite.field.FieldType[]) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.argFieldTypes com.j256.ormlite.field.FieldType[] A[Catch:\{ SQLException \-\> 0x013c \}]\l0x009d: IGET  (r4 I:int) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.versionFieldTypeIndex int A[Catch:\{ SQLException \-\> 0x013c \}]\l0x009f: AGET  (r3 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00a1: INVOKE  (r4 I:java.lang.Object) = \l  (r3 I:com.j256.ormlite.field.FieldType)\l  (r2 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.moveToNextValue(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00a5: IGET  (r5 I:int) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.versionFieldTypeIndex int A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00a7: INVOKE  (r3 I:java.lang.Object) = \l  (r3 I:com.j256.ormlite.field.FieldType)\l  (r4 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.convertJavaFieldToSqlArgValue(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00ab: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l A[Catch:\{ SQLException \-\> 0x013c \}, TRY_LEAVE]\l}"];
Node_45 [shape=record,label="{45\:\ 0x00ae|0x00ae: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x00af|SYNTHETIC\lSplitter:B:46:0x00af\l}"];
Node_47 [shape=record,label="{47\:\ ?|Splitter:B:46:0x00af\l|0x00af: IGET  (r3 I:java.lang.String) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.statement java.lang.String A[Catch:\{ SQLException \-\> 0x0122 \}, TRY_ENTER]\l0x00b1: IGET  (r5 I:com.j256.ormlite.field.FieldType[]) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.argFieldTypes com.j256.ormlite.field.FieldType[] A[Catch:\{ SQLException \-\> 0x0122 \}]\l0x00b3: INVOKE  (r11 I:int) = \l  (r11 I:com.j256.ormlite.support.DatabaseConnection)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.Object[])\l  (r5 I:com.j256.ormlite.field.FieldType[])\l  (r10 I:com.j256.ormlite.support.GeneratedKeyHolder)\l com.j256.ormlite.support.DatabaseConnection.insert(java.lang.String, java.lang.Object[], com.j256.ormlite.field.FieldType[], com.j256.ormlite.support.GeneratedKeyHolder):int type: INTERFACE A[Catch:\{ SQLException \-\> 0x0122 \}]\l0x00b6: NOP   A[TRY_LEAVE]\l}"];
Node_48 [shape=record,label="{48\:\ 0x00b7|SYNTHETIC\lSplitter:B:48:0x00b7\l}"];
Node_49 [shape=record,label="{49\:\ ?|Splitter:B:48:0x00b7\l|0x00b7: SGET  (r3 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.mapped.MappedCreate.logger com.j256.ormlite.logger.Logger A[Catch:\{ SQLException \-\> 0x013c \}, TRY_ENTER]\l0x00b9: CONST_STR  (r5 I:java.lang.String) =  \"insert data with statement '\{\}' and \{\} args, changed \{\} rows\" A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00bb: IGET  (r6 I:java.lang.String) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.statement java.lang.String A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00bd: ARRAY_LENGTH  (r7 I:int) = (r0 I:?[]) A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00be: INVOKE  (r7 I:java.lang.Integer) = (r7 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00c2: INVOKE  (r8 I:java.lang.Integer) = (r11 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00c6: INVOKE  \l  (r3 I:com.j256.ormlite.logger.Logger)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l  (r8 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object):void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00c9: ARRAY_LENGTH  (r3 I:int) = (r0 I:?[]) A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_50 [shape=record,label="{50\:\ 0x00ca|0x00ca: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:52:0x00d3 A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_51 [shape=record,label="{51\:\ 0x00cc|0x00cc: SGET  (r3 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.mapped.MappedCreate.logger com.j256.ormlite.logger.Logger A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00ce: CONST_STR  (r5 I:java.lang.String) =  \"insert arguments: \{\}\" A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00d0: INVOKE  \l  (r3 I:com.j256.ormlite.logger.Logger)\l  (r5 I:java.lang.String)\l  (r0 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.trace(java.lang.String, java.lang.Object):void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_52 [shape=record,label="{52\:\ 0x00d3|0x00d3: IF  (r11 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:69:0x0121 A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_53 [shape=record,label="{53\:\ 0x00d5|0x00d5: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x00e0 A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_54 [shape=record,label="{54\:\ 0x00d7|0x00d7: IGET  (r0 I:com.j256.ormlite.field.FieldType[]) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.argFieldTypes com.j256.ormlite.field.FieldType[] A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00d9: IGET  (r3 I:int) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.versionFieldTypeIndex int A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00db: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00dd: INVOKE  \l  (r0 I:com.j256.ormlite.field.FieldType)\l  (r12 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l  (r1 I:boolean)\l  (r2 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.field.FieldType.assignField(java.lang.Object, java.lang.Object, boolean, com.j256.ormlite.dao.ObjectCache):void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_55 [shape=record,label="{55\:\ 0x00e0|0x00e0: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x0108 A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_56 [shape=record,label="{56\:\ 0x00e2|0x00e2: INVOKE  (r10 I:java.lang.Number) = (r10 I:com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder) com.j256.ormlite.stmt.mapped.MappedCreate.KeyHolder.getKey():java.lang.Number type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_57 [shape=record,label="{57\:\ 0x00e6|0x00e6: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x0100 A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_58 [shape=record,label="{58\:\ 0x00e8|0x00e8: INVOKE  (r0 I:long) = (r10 I:java.lang.Number) java.lang.Number.longValue():long type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00ec: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00ee: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_59 [shape=record,label="{59\:\ 0x00f0|0x00f0: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x00f8 A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_60 [shape=record,label="{60\:\ 0x00f2|0x00f2: CONST_STR  (r0 I:java.lang.String) =  \"keyholder\" A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00f4: INVOKE  \l  (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate)\l  (r12 I:java.lang.Object)\l  (r10 I:java.lang.Number)\l  (r0 I:java.lang.String)\l  (r13 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.stmt.mapped.MappedCreate.assignIdValue(java.lang.Object, java.lang.Number, java.lang.String, com.j256.ormlite.dao.ObjectCache):void type: DIRECT A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00f7: GOTO  \-\> 0x0108 A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_61 [shape=record,label="{61\:\ 0x00f8|0x00f8: NEW_INSTANCE  (r10 I:java.sql.SQLException) =  java.sql.SQLException A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00fa: CONST_STR  (r11 I:java.lang.String) =  \"generated\-id key must not be 0 value, maybe a schema mismatch between entity and database table?\" A[Catch:\{ SQLException \-\> 0x013c \}]\l0x00fc: INVOKE  (r10 I:java.sql.SQLException), (r11 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_62 [shape=record,label="{62\:\ 0x00ff|0x00ff: THROW  (r10 I:java.lang.Throwable) A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_63 [shape=record,label="{63\:\ 0x0100|0x0100: NEW_INSTANCE  (r10 I:java.sql.SQLException) =  java.sql.SQLException A[Catch:\{ SQLException \-\> 0x013c \}]\l0x0102: CONST_STR  (r11 I:java.lang.String) =  \"generated\-id key was not set by the update call, maybe a schema mismatch between entity and database table?\" A[Catch:\{ SQLException \-\> 0x013c \}]\l0x0104: INVOKE  (r10 I:java.sql.SQLException), (r11 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_64 [shape=record,label="{64\:\ 0x0107|0x0107: THROW  (r10 I:java.lang.Throwable) A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_65 [shape=record,label="{65\:\ 0x0108|0x0108: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x0121 A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_66 [shape=record,label="{66\:\ 0x010a|0x010a: IGET  (r10 I:com.j256.ormlite.table.TableInfo) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.tableInfo com.j256.ormlite.table.TableInfo A[Catch:\{ SQLException \-\> 0x013c \}]\l0x010c: INVOKE  (r10 I:com.j256.ormlite.field.FieldType[]) = (r10 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getForeignCollections():com.j256.ormlite.field.FieldType[] type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l0x0110: INVOKE  (r10 I:boolean) = \l  (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate)\l  (r10 I:com.j256.ormlite.field.FieldType[])\l  (r12 I:java.lang.Object)\l com.j256.ormlite.stmt.mapped.MappedCreate.foreignCollectionsAreAssigned(com.j256.ormlite.field.FieldType[], java.lang.Object):boolean type: DIRECT A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_67 [shape=record,label="{67\:\ 0x0114|0x0114: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x0121 A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_68 [shape=record,label="{68\:\ 0x0116|0x0116: IGET  (r10 I:com.j256.ormlite.field.FieldType) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.idField com.j256.ormlite.field.FieldType A[Catch:\{ SQLException \-\> 0x013c \}]\l0x0118: INVOKE  (r10 I:java.lang.Object) = \l  (r10 I:com.j256.ormlite.field.FieldType)\l  (r12 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.extractJavaFieldValue(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l0x011c: IGET  (r0 I:java.lang.Class) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.clazz java.lang.Class A[Catch:\{ SQLException \-\> 0x013c \}]\l0x011e: INVOKE  \l  (r13 I:com.j256.ormlite.dao.ObjectCache)\l  (r0 I:java.lang.Class)\l  (r10 I:java.lang.Object)\l  (r12 I:java.lang.Object)\l com.j256.ormlite.dao.ObjectCache.put(java.lang.Class, java.lang.Object, java.lang.Object):void type: INTERFACE A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_69 [shape=record,label="{69\:\ 0x0121|0x0121: RETURN  (r11 I:int) A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_70 [shape=record,label="{70\:\ 0x0122|ExcHandler: SQLException null\lSplitter:B:46:0x00af\l|0x0122: MOVE_EXCEPTION  (r10 I:?[OBJECT]) =  A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_71 [shape=record,label="{71\:\ 0x0123|0x0123: SGET  (r11 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.mapped.MappedCreate.logger com.j256.ormlite.logger.Logger A[Catch:\{ SQLException \-\> 0x013c \}]\l0x0125: CONST_STR  (r13 I:java.lang.String) =  \"insert data with statement '\{\}' and \{\} args, threw exception: \{\}\" A[Catch:\{ SQLException \-\> 0x013c \}]\l0x0127: IGET  (r1 I:java.lang.String) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.statement java.lang.String A[Catch:\{ SQLException \-\> 0x013c \}]\l0x0129: ARRAY_LENGTH  (r2 I:int) = (r0 I:?[]) A[Catch:\{ SQLException \-\> 0x013c \}]\l0x012a: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ SQLException \-\> 0x013c \}]\l0x012e: INVOKE  \l  (r11 I:com.j256.ormlite.logger.Logger)\l  (r13 I:java.lang.String)\l  (r1 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l  (r10 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object):void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l0x0131: ARRAY_LENGTH  (r11 I:int) = (r0 I:?[]) A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_72 [shape=record,label="{72\:\ 0x0132|0x0132: IF  (r11 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:74:0x013b A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_73 [shape=record,label="{73\:\ 0x0134|0x0134: SGET  (r11 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.mapped.MappedCreate.logger com.j256.ormlite.logger.Logger A[Catch:\{ SQLException \-\> 0x013c \}]\l0x0136: CONST_STR  (r13 I:java.lang.String) =  \"insert arguments: \{\}\" A[Catch:\{ SQLException \-\> 0x013c \}]\l0x0138: INVOKE  \l  (r11 I:com.j256.ormlite.logger.Logger)\l  (r13 I:java.lang.String)\l  (r0 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.trace(java.lang.String, java.lang.Object):void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x013c \}]\l}"];
Node_74 [shape=record,label="{74\:\ 0x013b|0x013b: THROW  (r10 I:java.lang.Throwable) A[Catch:\{ SQLException \-\> 0x013c \}, TRY_LEAVE]\l}"];
Node_75 [shape=record,label="{75\:\ 0x013c|ExcHandler: SQLException null\lSplitter:B:25:0x005c\l|0x013c: MOVE_EXCEPTION  (r10 I:?[OBJECT]) =  \l}"];
Node_76 [shape=record,label="{76\:\ 0x013d|0x013d: NEW_INSTANCE  (r11 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x013f: INVOKE  (r11 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0142: CONST_STR  (r13 I:java.lang.String) =  \"Unable to run insert stmt on object \" \l0x0144: INVOKE  (r11 I:java.lang.StringBuilder), (r13 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0147: INVOKE  (r11 I:java.lang.StringBuilder), (r12 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x014a: CONST_STR  (r12 I:java.lang.String) =  \": \" \l0x014c: INVOKE  (r11 I:java.lang.StringBuilder), (r12 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x014f: IGET  (r12 I:java.lang.String) = (r9 I:com.j256.ormlite.stmt.mapped.MappedCreate) com.j256.ormlite.stmt.mapped.MappedCreate.statement java.lang.String \l0x0151: INVOKE  (r11 I:java.lang.StringBuilder), (r12 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0154: INVOKE  (r11 I:java.lang.String) = (r11 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0158: INVOKE  (r10 I:java.sql.SQLException) = (r11 I:java.lang.String), (r10 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC \l}"];
Node_77 [shape=record,label="{77\:\ 0x015c|0x015c: THROW  (r10 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int com.j256.ormlite.stmt.mapped.MappedCreate.insert((r9 'this' I:com.j256.ormlite.stmt.mapped.MappedCreate A[IMMUTABLE_TYPE, THIS]), (r10 I:com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, TT;, Lcom\/j256\/ormlite\/dao\/ObjectCache;, )I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_24;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_24;
Node_13 -> Node_24;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_75;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_39;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_39;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_38;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_38;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_29;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_45;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_45;
Node_43 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_46 -> Node_70;
Node_46 -> Node_75;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_48 -> Node_75;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_69;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_65;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_63;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_60 -> Node_65;
Node_61 -> Node_62;
Node_63 -> Node_64;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_69;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_69;
Node_68 -> Node_69;
Node_70 -> Node_71;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_74;
Node_73 -> Node_74;
Node_75 -> Node_76;
Node_76 -> Node_77;
}

