digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedCreate.foreignCollectionsAreAssigned([Lcom\/j256\/ormlite\/field\/FieldType;Ljava\/lang\/Object;)Z" {
subgraph cluster_Region_502206332 {
label = "R(3:0|(1:(2:(1:4)|(1:5)))|6)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r5.length\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_512663951 {
label = "LOOP:0: (1:(2:(1:4)|(1:5)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:5:0x000e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:5:0x000e\l|if (r2 \< r0) goto L_0x0005\l}"];
subgraph cluster_Region_1697107823 {
label = "R(1:(2:(1:4)|(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_151720515 {
label = "R(2:(1:4)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_805071096 {
label = "IF [B:3:0x000b] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r3.extractJavaFieldValue(r6) == null) goto L_0x000d\l}"];
subgraph cluster_Region_1142236753 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1683050931 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|LOOP_END\lLOOP:0: B:1:0x0003\-\>B:5:0x000e\l|r2++\l}"];
}
}
}
}
Node_6 [shape=record,label="{6\:\ 0x0011|RETURN\l|return true\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0005}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0011|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private boolean com.j256.ormlite.stmt.mapped.MappedCreate.foreignCollectionsAreAssigned((r4v0 'this' com.j256.ormlite.stmt.mapped.MappedCreate A[IMMUTABLE_TYPE, THIS]), (r5v0 com.j256.ormlite.field.FieldType[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_3 -> Node_5[style=dashed];
Node_3 -> Node_8;
Node_5 -> Node_1;
Node_2 -> Node_3;
Node_7 -> Node_6;
Node_8 -> Node_4;
}

