digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedCreate.buildQueryNextSequence(Lcom\/j256\/ormlite\/db\/DatabaseType;Lcom\/j256\/ormlite\/field\/FieldType;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:java.lang.String) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INVOKE  (r3 I:java.lang.String) = (r3 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getGeneratedIdSequence():java.lang.String type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000b \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: RETURN  (r0 I:java.lang.String) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000d: CONST  (r1 I:?[int, float, short, byte, char]) = (64 ?[int, float, short, byte, char]) \l0x000f: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.\<init\>(int):void type: DIRECT \l0x0012: INVOKE  \l  (r2 I:com.j256.ormlite.db.DatabaseType)\l  (r0 I:java.lang.StringBuilder)\l  (r3 I:java.lang.String)\l com.j256.ormlite.db.DatabaseType.appendSelectNextValFromSequence(java.lang.StringBuilder, java.lang.String):void type: INTERFACE \l0x0015: INVOKE  (r2 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: RETURN  (r2 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{private static java.lang.String com.j256.ormlite.stmt.mapped.MappedCreate.buildQueryNextSequence((r2 I:com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.j256.ormlite.field.FieldType A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
}

