digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedUpdate.build(Lcom\/j256\/ormlite\/db\/DatabaseType;Lcom\/j256\/ormlite\/table\/TableInfo;)Lcom\/j256\/ormlite\/stmt\/mapped\/MappedUpdate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.j256.ormlite.field.FieldType) = (r15 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getIdField():com.j256.ormlite.field.FieldType type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x009d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0008: CONST  (r2 I:?[int, float, short, byte, char]) = (64 ?[int, float, short, byte, char]) \l0x000a: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.\<init\>(int):void type: DIRECT \l0x000d: CONST_STR  (r2 I:java.lang.String) =  \"UPDATE \" \l0x000f: INVOKE  (r3 I:java.lang.String) = (r15 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getTableName():java.lang.String type: VIRTUAL \l0x0013: INVOKE  \l  (r14 I:com.j256.ormlite.db.DatabaseType)\l  (r1 I:java.lang.StringBuilder)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l com.j256.ormlite.stmt.mapped.MappedUpdate.appendTableName(com.j256.ormlite.db.DatabaseType, java.lang.StringBuilder, java.lang.String, java.lang.String):void type: STATIC \l0x0016: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0017: INVOKE  (r3 I:com.j256.ormlite.field.FieldType[]) = (r15 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getFieldTypes():com.j256.ormlite.field.FieldType[] type: VIRTUAL \l0x001b: ARRAY_LENGTH  (r4 I:int) = (r3 I:?[]) \l0x001c: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001d: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001e: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x001f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0020: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0021: CONST  (r13 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|0x0022: IF  (r2 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:12:0x003b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: AGET  (r8 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0026: INVOKE  (r9 I:boolean) = \l  (r8 I:com.j256.ormlite.field.FieldType)\l  (r0 I:com.j256.ormlite.field.FieldType)\l com.j256.ormlite.stmt.mapped.MappedUpdate.isFieldUpdatable(com.j256.ormlite.field.FieldType, com.j256.ormlite.field.FieldType):boolean type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|0x002a: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0038 \l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|0x002c: INVOKE  (r9 I:boolean) = (r8 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.isVersion():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|0x0030: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0034 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|0x0032: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|0x0035: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l0x0037: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x003c: ARITH  (r7 I:int) = (r7 I:int) + (r2 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0041 \l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|0x003f: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0041|0x0041: NEW_ARRAY  (r11 I:com.j256.ormlite.field.FieldType[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: com.j256.ormlite.field.FieldType[] \l0x0043: INVOKE  (r3 I:com.j256.ormlite.field.FieldType[]) = (r15 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getFieldTypes():com.j256.ormlite.field.FieldType[] type: VIRTUAL \l0x0047: ARRAY_LENGTH  (r4 I:int) = (r3 I:?[]) \l0x0048: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0049: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004a: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x004b|0x004b: IF  (r2 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:25:0x0074 \l}"];
Node_17 [shape=record,label="{17\:\ 0x004d|0x004d: AGET  (r9 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x004f: INVOKE  (r10 I:boolean) = \l  (r9 I:com.j256.ormlite.field.FieldType)\l  (r0 I:com.j256.ormlite.field.FieldType)\l com.j256.ormlite.stmt.mapped.MappedUpdate.isFieldUpdatable(com.j256.ormlite.field.FieldType, com.j256.ormlite.field.FieldType):boolean type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|0x0053: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0056 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0056|0x0056: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x005f \l}"];
Node_21 [shape=record,label="{21\:\ 0x0058|0x0058: CONST_STR  (r8 I:java.lang.String) =  \"SET \" \l0x005a: INVOKE  (r1 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005d: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x005f|0x005f: CONST_STR  (r10 I:java.lang.String) =  \", \" \l0x0061: INVOKE  (r1 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x0064|0x0064: INVOKE  \l  (r14 I:com.j256.ormlite.db.DatabaseType)\l  (r1 I:java.lang.StringBuilder)\l  (r9 I:com.j256.ormlite.field.FieldType)\l  (r5 I:java.util.List)\l com.j256.ormlite.stmt.mapped.MappedUpdate.appendFieldColumnName(com.j256.ormlite.db.DatabaseType, java.lang.StringBuilder, com.j256.ormlite.field.FieldType, java.util.List):void type: STATIC \l0x0067: ARITH  (r10 I:int) = (r7 I:int) + (1 int) \l0x0069: APUT  \l  (r11 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r9 I:?[OBJECT, ARRAY])\l \l0x006b: CONST_STR  (r7 I:java.lang.String) =  \"= ?\" \l0x006d: INVOKE  (r1 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0070: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x0071|0x0071: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0074|0x0074: CONST  (r2 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0076: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0079: INVOKE  \l  (r14 I:com.j256.ormlite.db.DatabaseType)\l  (r0 I:com.j256.ormlite.field.FieldType)\l  (r1 I:java.lang.StringBuilder)\l  (r5 I:java.util.List)\l com.j256.ormlite.stmt.mapped.MappedUpdate.appendWhereFieldEq(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.field.FieldType, java.lang.StringBuilder, java.util.List):void type: STATIC \l0x007c: ARITH  (r2 I:int) = (r7 I:int) + (1 int) \l0x007e: APUT  \l  (r11 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x0080|0x0080: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0091 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0082|0x0082: CONST_STR  (r0 I:java.lang.String) =  \" AND \" \l0x0084: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0087: INVOKE  \l  (r14 I:com.j256.ormlite.db.DatabaseType)\l  (r1 I:java.lang.StringBuilder)\l  (r12 I:com.j256.ormlite.field.FieldType)\l  (r5 I:java.util.List)\l com.j256.ormlite.stmt.mapped.MappedUpdate.appendFieldColumnName(com.j256.ormlite.db.DatabaseType, java.lang.StringBuilder, com.j256.ormlite.field.FieldType, java.util.List):void type: STATIC \l0x008a: CONST_STR  (r14 I:java.lang.String) =  \"= ?\" \l0x008c: INVOKE  (r1 I:java.lang.StringBuilder), (r14 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008f: APUT  \l  (r11 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r12 I:?[OBJECT, ARRAY])\l \l}"];
Node_28 [shape=record,label="{28\:\ 0x0091|0x0091: NEW_INSTANCE  (r14 I:com.j256.ormlite.stmt.mapped.MappedUpdate) =  com.j256.ormlite.stmt.mapped.MappedUpdate \l0x0093: INVOKE  (r10 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0097: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0098: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0099: INVOKE  \l  (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate)\l  (r9 I:com.j256.ormlite.table.TableInfo)\l  (r10 I:java.lang.String)\l  (r11 I:com.j256.ormlite.field.FieldType[])\l  (r12 I:com.j256.ormlite.field.FieldType)\l  (r13 I:int)\l com.j256.ormlite.stmt.mapped.MappedUpdate.\<init\>(com.j256.ormlite.table.TableInfo, java.lang.String, com.j256.ormlite.field.FieldType[], com.j256.ormlite.field.FieldType, int):void type: DIRECT \l}"];
Node_29 [shape=record,label="{29\:\ 0x009c|0x009c: RETURN  (r14 I:com.j256.ormlite.stmt.mapped.MappedUpdate\<T, ID\>) \l}"];
Node_30 [shape=record,label="{30\:\ 0x009d|0x009d: NEW_INSTANCE  (r14 I:java.sql.SQLException) =  java.sql.SQLException \l0x009f: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00a1: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00a4: CONST_STR  (r1 I:java.lang.String) =  \"Cannot update \" \l0x00a6: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a9: INVOKE  (r15 I:java.lang.Class) = (r15 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getDataClass():java.lang.Class type: VIRTUAL \l0x00ad: INVOKE  (r0 I:java.lang.StringBuilder), (r15 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x00b0: CONST_STR  (r15 I:java.lang.String) =  \" because it doesn't have an id field\" \l0x00b2: INVOKE  (r0 I:java.lang.StringBuilder), (r15 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00b5: INVOKE  (r15 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00b9: INVOKE  (r14 I:java.sql.SQLException), (r15 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_31 [shape=record,label="{31\:\ 0x00bc|0x00bc: THROW  (r14 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static com.j256.ormlite.stmt.mapped.MappedUpdate\<T, ID\> com.j256.ormlite.stmt.mapped.MappedUpdate.build((r14 I:com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:com.j256.ormlite.table.TableInfo\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, ID:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Lcom\/j256\/ormlite\/table\/TableInfo\<, TT;TID;\>;), Lcom\/j256\/ormlite\/stmt\/mapped\/MappedUpdate\<, TT;TID;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_30;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_3;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_25;
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_18 -> Node_24[style=dashed];
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_16;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_30 -> Node_31;
}

