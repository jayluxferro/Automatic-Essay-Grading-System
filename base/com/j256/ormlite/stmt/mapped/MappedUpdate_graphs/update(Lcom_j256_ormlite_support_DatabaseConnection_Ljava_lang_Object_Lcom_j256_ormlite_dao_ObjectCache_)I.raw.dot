digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedUpdate.update(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Ljava\/lang\/Object;Lcom\/j256\/ormlite\/dao\/ObjectCache;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:com.j256.ormlite.field.FieldType[]) = (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate) com.j256.ormlite.stmt.mapped.MappedUpdate.argFieldTypes com.j256.ormlite.field.FieldType[] A[Catch:\{ SQLException \-\> 0x0083 \}, TRY_ENTER]\l0x0002: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0003: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0004: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IF  (r0 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:4:0x0008 A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: RETURN  (r2 I:int) A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: INVOKE  (r0 I:java.lang.Object[]) = \l  (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate)\l  (r10 I:java.lang.Object)\l com.j256.ormlite.stmt.mapped.MappedUpdate.getFieldObjects(java.lang.Object):java.lang.Object[] type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x000c: IGET  (r1 I:com.j256.ormlite.field.FieldType) = (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate) com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType com.j256.ormlite.field.FieldType A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x000e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0028 A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: IGET  (r1 I:com.j256.ormlite.field.FieldType) = (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate) com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType com.j256.ormlite.field.FieldType A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0013: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:com.j256.ormlite.field.FieldType)\l  (r10 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.extractJavaFieldValue(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0017: IGET  (r4 I:com.j256.ormlite.field.FieldType) = (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate) com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType com.j256.ormlite.field.FieldType A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0019: INVOKE  (r1 I:java.lang.Object) = \l  (r4 I:com.j256.ormlite.field.FieldType)\l  (r1 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.moveToNextValue(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x001d: IGET  (r4 I:int) = (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate) com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldTypeIndex int A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x001f: IGET  (r5 I:com.j256.ormlite.field.FieldType) = (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate) com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType com.j256.ormlite.field.FieldType A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0021: INVOKE  (r5 I:java.lang.Object) = \l  (r5 I:com.j256.ormlite.field.FieldType)\l  (r1 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.convertJavaFieldToSqlArgValue(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0025: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0027: GOTO  \-\> 0x0029 A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: IGET  (r4 I:java.lang.String) = (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate) com.j256.ormlite.stmt.mapped.MappedUpdate.statement java.lang.String A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x002b: IGET  (r5 I:com.j256.ormlite.field.FieldType[]) = (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate) com.j256.ormlite.stmt.mapped.MappedUpdate.argFieldTypes com.j256.ormlite.field.FieldType[] A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x002d: INVOKE  (r9 I:int) = \l  (r9 I:com.j256.ormlite.support.DatabaseConnection)\l  (r4 I:java.lang.String)\l  (r0 I:java.lang.Object[])\l  (r5 I:com.j256.ormlite.field.FieldType[])\l com.j256.ormlite.support.DatabaseConnection.update(java.lang.String, java.lang.Object[], com.j256.ormlite.field.FieldType[]):int type: INTERFACE A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: IF  (r9 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:22:0x0066 A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|0x0033: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003a A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: IGET  (r4 I:com.j256.ormlite.field.FieldType) = (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate) com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType com.j256.ormlite.field.FieldType A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0037: INVOKE  \l  (r4 I:com.j256.ormlite.field.FieldType)\l  (r10 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l  (r2 I:boolean)\l  (r3 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.field.FieldType.assignField(java.lang.Object, java.lang.Object, boolean, com.j256.ormlite.dao.ObjectCache):void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|0x003a: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0066 A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|0x003c: IGET  (r1 I:com.j256.ormlite.field.FieldType) = (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate) com.j256.ormlite.stmt.mapped.MappedUpdate.idField com.j256.ormlite.field.FieldType A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x003e: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:com.j256.ormlite.field.FieldType)\l  (r10 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.extractJavaFieldValue(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0042: IGET  (r3 I:java.lang.Class) = (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate) com.j256.ormlite.stmt.mapped.MappedUpdate.clazz java.lang.Class A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0044: INVOKE  (r1 I:java.lang.Object) = \l  (r11 I:com.j256.ormlite.dao.ObjectCache)\l  (r3 I:java.lang.Class)\l  (r1 I:java.lang.Object)\l com.j256.ormlite.dao.ObjectCache.get(java.lang.Class, java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|0x0048: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0066 A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|0x004a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0066 A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|0x004c: IGET  (r3 I:com.j256.ormlite.table.TableInfo) = (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate) com.j256.ormlite.stmt.mapped.MappedUpdate.tableInfo com.j256.ormlite.table.TableInfo A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x004e: INVOKE  (r3 I:com.j256.ormlite.field.FieldType[]) = (r3 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getFieldTypes():com.j256.ormlite.field.FieldType[] type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0052: ARRAY_LENGTH  (r4 I:int) = (r3 I:?[]) A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0053: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0054|0x0054: IF  (r5 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:22:0x0066 A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0056|0x0056: AGET  (r6 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r5 I:?[int, short, byte, char]) A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0058: IGET  (r7 I:com.j256.ormlite.field.FieldType) = (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate) com.j256.ormlite.stmt.mapped.MappedUpdate.idField com.j256.ormlite.field.FieldType A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x005a|0x005a: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0063 A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x005c|0x005c: INVOKE  (r7 I:java.lang.Object) = \l  (r6 I:com.j256.ormlite.field.FieldType)\l  (r10 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.extractJavaFieldValue(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0060: INVOKE  \l  (r6 I:com.j256.ormlite.field.FieldType)\l  (r1 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l  (r2 I:boolean)\l  (r11 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.field.FieldType.assignField(java.lang.Object, java.lang.Object, boolean, com.j256.ormlite.dao.ObjectCache):void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0063|0x0063: ARITH  (r5 I:int) = (r5 I:int) + (1 int) A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0065: GOTO  \-\> 0x0054 A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0066|0x0066: SGET  (r11 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.mapped.MappedUpdate.logger com.j256.ormlite.logger.Logger A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0068: CONST_STR  (r1 I:java.lang.String) =  \"update data with statement '\{\}' and \{\} args, changed \{\} rows\" A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x006a: IGET  (r2 I:java.lang.String) = (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate) com.j256.ormlite.stmt.mapped.MappedUpdate.statement java.lang.String A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x006c: ARRAY_LENGTH  (r3 I:int) = (r0 I:?[]) A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x006d: INVOKE  (r3 I:java.lang.Integer) = (r3 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0071: INVOKE  (r4 I:java.lang.Integer) = (r9 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0075: INVOKE  \l  (r11 I:com.j256.ormlite.logger.Logger)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object):void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x0078: ARRAY_LENGTH  (r11 I:int) = (r0 I:?[]) A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0079|0x0079: IF  (r11 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:25:0x0082 A[Catch:\{ SQLException \-\> 0x0083 \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x007b|0x007b: SGET  (r11 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.mapped.MappedUpdate.logger com.j256.ormlite.logger.Logger A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x007d: CONST_STR  (r1 I:java.lang.String) =  \"update arguments: \{\}\" A[Catch:\{ SQLException \-\> 0x0083 \}]\l0x007f: INVOKE  \l  (r11 I:com.j256.ormlite.logger.Logger)\l  (r1 I:java.lang.String)\l  (r0 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.trace(java.lang.String, java.lang.Object):void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0083 \}, TRY_LEAVE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0082|0x0082: RETURN  (r9 I:int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0083|ExcHandler: SQLException null\lSplitter:B:0:0x0000\l|0x0083: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_27 [shape=record,label="{27\:\ 0x0084|0x0084: NEW_INSTANCE  (r11 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0086: INVOKE  (r11 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0089: CONST_STR  (r0 I:java.lang.String) =  \"Unable to run update stmt on object \" \l0x008b: INVOKE  (r11 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008e: INVOKE  (r11 I:java.lang.StringBuilder), (r10 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0091: CONST_STR  (r10 I:java.lang.String) =  \": \" \l0x0093: INVOKE  (r11 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0096: IGET  (r10 I:java.lang.String) = (r8 I:com.j256.ormlite.stmt.mapped.MappedUpdate) com.j256.ormlite.stmt.mapped.MappedUpdate.statement java.lang.String \l0x0098: INVOKE  (r11 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009b: INVOKE  (r10 I:java.lang.String) = (r11 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x009f: INVOKE  (r9 I:java.sql.SQLException) = (r10 I:java.lang.String), (r9 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC \l}"];
Node_28 [shape=record,label="{28\:\ 0x00a3|0x00a3: THROW  (r9 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int com.j256.ormlite.stmt.mapped.MappedUpdate.update((r8 'this' I:com.j256.ormlite.stmt.mapped.MappedUpdate A[IMMUTABLE_TYPE, THIS]), (r9 I:com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, TT;, Lcom\/j256\/ormlite\/dao\/ObjectCache;, )I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_26;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_22;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_22;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_22;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_17;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_28;
}

