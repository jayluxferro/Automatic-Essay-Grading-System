digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedUpdate.update(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Ljava\/lang\/Object;Lcom\/j256\/ormlite\/dao\/ObjectCache;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ SQLException \-\> 0x0083 \}\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|Catch:\{ SQLException \-\> 0x0083 \}\l|if (r8.argFieldTypes.length \> 1) goto L_0x0008     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|RETURN\lCatch:\{ SQLException \-\> 0x0083 \}\l|return 0     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|Catch:\{ SQLException \-\> 0x0083 \}\l|java.lang.Object[] r0 = getFieldObjects(r10)     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|Catch:\{ SQLException \-\> 0x0083 \}\l|if (r8.versionFieldType == null) goto L_0x0028     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|Catch:\{ SQLException \-\> 0x0083 \}\l|java.lang.Object r1 = r8.versionFieldType.extractJavaFieldValue(r10)     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\ljava.lang.Object r1 = r8.versionFieldType.moveToNextValue(r1)     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\lr0[r8.versionFieldTypeIndex] = r8.versionFieldType.convertJavaFieldToSqlArgValue(r1)     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|Catch:\{ SQLException \-\> 0x0083 \}\l|r1 = null     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|Catch:\{ SQLException \-\> 0x0083 \}\lPHI: r1 \l  PHI: (r1v2 java.lang.Object) = (r1v8 java.lang.Object), (r1v11 java.lang.Object) binds: [B:7:0x0028, B:6:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|int r9 = r9.update(r8.statement, r0, r8.argFieldTypes)     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|Catch:\{ SQLException \-\> 0x0083 \}\l|if (r9 \<= 0) goto L_0x0066     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|Catch:\{ SQLException \-\> 0x0083 \}\l|if (r1 == null) goto L_0x003a     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|Catch:\{ SQLException \-\> 0x0083 \}\l|r8.versionFieldType.assignField(r10, r1, false, (com.j256.ormlite.dao.ObjectCache) null)     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|Catch:\{ SQLException \-\> 0x0083 \}\l|if (r11 == null) goto L_0x0066     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|Catch:\{ SQLException \-\> 0x0083 \}\l|java.lang.Object r1 = r8.idField.extractJavaFieldValue(r10)     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\ljava.lang.Object r1 = r11.get(r8.clazz, r1)     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|Catch:\{ SQLException \-\> 0x0083 \}\l|if (r1 == null) goto L_0x0066     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|Catch:\{ SQLException \-\> 0x0083 \}\l|if (r1 == r10) goto L_0x0066     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|Catch:\{ SQLException \-\> 0x0083 \}\l|com.j256.ormlite.field.FieldType[] r3 = r8.tableInfo.getFieldTypes()     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\lint r4 = r3.length     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\lr5 = 0     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0054|LOOP_START\lCatch:\{ SQLException \-\> 0x0083 \}\lPHI: r5 \l  PHI: (r5v2 int) = (r5v1 int), (r5v3 int) binds: [B:16:0x004c, B:21:0x0063] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:17:0x0054\-\>B:21:0x0063\l|if (r5 \>= r4) goto L_0x0066     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x0056|Catch:\{ SQLException \-\> 0x0083 \}\l|r6 = r3[r5]     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x005a|Catch:\{ SQLException \-\> 0x0083 \}\l|if (r6 == r8.idField) goto L_0x0063     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x005c|Catch:\{ SQLException \-\> 0x0083 \}\l|r6.assignField(r1, r6.extractJavaFieldValue(r10), false, r11)     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0063|LOOP_END\lCatch:\{ SQLException \-\> 0x0083 \}\lLOOP:0: B:17:0x0054\-\>B:21:0x0063\l|int r5 = r5 + 1     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x0066|Catch:\{ SQLException \-\> 0x0083 \}\l|logger.debug(\"update data with statement '\{\}' and \{\} args, changed \{\} rows\", (java.lang.Object) r8.statement, (java.lang.Object) java.lang.Integer.valueOf(r0.length), (java.lang.Object) java.lang.Integer.valueOf(r9))     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x0079|Catch:\{ SQLException \-\> 0x0083 \}\l|if (r0.length \<= 0) goto L_0x0082     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_24 [shape=record,label="{24\:\ 0x007b|Catch:\{ SQLException \-\> 0x0083 \}\l|logger.trace(\"update arguments: \{\}\", (java.lang.Object) r0)     \/\/ Catch:\{ SQLException \-\> 0x0083 \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x0082|RETURN\l|return r9\l}"];
Node_26 [shape=record,label="{26\:\ 0x0083|ExcHandler: SQLException (r9v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.sql.SQLException r9 = move\-exception\l}"];
Node_27 [shape=record,label="{27\:\ 0x0084|java.lang.StringBuilder r11 = new java.lang.StringBuilder()\lr11.append(\"Unable to run update stmt on object \")\lr11.append(r10)\lr11.append(\": \")\lr11.append(r8.statement)\l}"];
Node_28 [shape=record,label="{28\:\ 0x00a3|throw com.j256.ormlite.misc.SqlExceptionUtil.create(r11.toString(), r9)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0066|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0063|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0063|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int com.j256.ormlite.stmt.mapped.MappedUpdate.update((r8v0 'this' com.j256.ormlite.stmt.mapped.MappedUpdate A[IMMUTABLE_TYPE, THIS]), (r9v0 com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, TT;, Lcom\/j256\/ormlite\/dao\/ObjectCache;, )I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_26;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_22;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_22;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_22;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_29;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_31;
Node_20 -> Node_30;
Node_21 -> Node_17;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_29 -> Node_22;
Node_30 -> Node_21;
Node_31 -> Node_21;
}

