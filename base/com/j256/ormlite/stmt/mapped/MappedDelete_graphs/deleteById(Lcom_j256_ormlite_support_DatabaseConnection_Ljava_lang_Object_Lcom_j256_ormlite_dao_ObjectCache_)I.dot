digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedDelete.deleteById(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Ljava\/lang\/Object;Lcom\/j256\/ormlite\/dao\/ObjectCache;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ SQLException \-\> 0x0038 \}\lSplitter:B:1:0x0001\l|java.lang.Object[] r0 = new java.lang.Object[]\{convertIdToFieldObject(r8)\}\lint r7 = r7.delete(r6.statement, r0, r6.argFieldTypes)     \/\/ Catch:\{ SQLException \-\> 0x0038 \}\llogger.debug(\"delete data with statement '\{\}' and \{\} args, changed \{\} rows\", (java.lang.Object) r6.statement, (java.lang.Object) java.lang.Integer.valueOf(r0.length), (java.lang.Object) java.lang.Integer.valueOf(r7))     \/\/ Catch:\{ SQLException \-\> 0x0038 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0025|Catch:\{ SQLException \-\> 0x0038 \}\l|if (r0.length \<= 0) goto L_0x002e     \/\/ Catch:\{ SQLException \-\> 0x0038 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0027|Catch:\{ SQLException \-\> 0x0038 \}\l|logger.trace(\"delete arguments: \{\}\", (java.lang.Object) r0)     \/\/ Catch:\{ SQLException \-\> 0x0038 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|Catch:\{ SQLException \-\> 0x0038 \}\l|if (r7 \<= 0) goto L_0x0037     \/\/ Catch:\{ SQLException \-\> 0x0038 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|Catch:\{ SQLException \-\> 0x0038 \}\l|if (r9 == null) goto L_0x0037     \/\/ Catch:\{ SQLException \-\> 0x0038 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0032|Catch:\{ SQLException \-\> 0x0038 \}\l|r9.remove(r6.clazz, r8)     \/\/ Catch:\{ SQLException \-\> 0x0038 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|RETURN\l|return r7\l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|ExcHandler: SQLException (r7v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0001\l|java.sql.SQLException r7 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|java.lang.StringBuilder r9 = new java.lang.StringBuilder()\lr9.append(\"Unable to run deleteById stmt on id \")\lr9.append(r8)\lr9.append(\": \")\lr9.append(r6.statement)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0058|throw com.j256.ormlite.misc.SqlExceptionUtil.create(r9.toString(), r7)\l}"];
MethodNode[shape=record,label="{public int com.j256.ormlite.stmt.mapped.MappedDelete.deleteById((r6v0 'this' com.j256.ormlite.stmt.mapped.MappedDelete A[IMMUTABLE_TYPE, THIS]), (r7v0 com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 ID A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, TID;, Lcom\/j256\/ormlite\/dao\/ObjectCache;, )I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

