digraph "CFG forcom.j256.ormlite.stmt.mapped.BaseMappedStatement.getFieldObjects(Ljava\/lang\/Object;)[Ljava\/lang\/Object;" {
subgraph cluster_Region_1732237923 {
label = "R(3:0|(4:3|(1:5)(1:6)|(1:9)(0)|10)|11)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.Object[] java.lang.Object[] r0 = new java.lang.Object[r4.argFieldTypes.length]\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_222636724 {
label = "LOOP:0: (4:3|(1:5)(1:6)|(1:9)(0)|10)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|if (r1 \< r4.argFieldTypes.length) goto L_0x000b\l}"];
subgraph cluster_Region_1122807580 {
label = "R(4:3|(1:5)(1:6)|(1:9)(0)|10)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000b|com.j256.ormlite.field.FieldType r2 = r4.argFieldTypes[r1]\l}"];
subgraph cluster_IfRegion_1067564197 {
label = "IF [B:4:0x0013] THEN: R(1:5) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0013|if (r2.isAllowGeneratedIdInsert() == true) goto L_0x0015\l}"];
subgraph cluster_Region_2026662197 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0015|r0[r1] = r2.getFieldValueIfNotDefault(r5)\l}"];
}
subgraph cluster_Region_1148281586 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001c|r0[r1] = r2.extractJavaFieldToSqlArgValue(r5)\l}"];
}
}
subgraph cluster_IfRegion_263082959 {
label = "IF [B:8:0x0024] THEN: R(1:9) ELSE: R(0)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0024|if (r0[r1] == null) goto L_0x0026\l}"];
subgraph cluster_Region_383483035 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0026|r0[r1] = r2.getDefaultValue()\l}"];
}
subgraph cluster_Region_1520884633 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_10 [shape=record,label="{10\:\ 0x002c|LOOP_END\lLOOP:0: B:1:0x0006\-\>B:10:0x002c\l|r1++\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x002f|RETURN\l|return r0\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0006|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:10:0x002c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:10:0x002c\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0022}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x002f|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x002c|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x002c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected java.lang.Object[] com.j256.ormlite.stmt.mapped.BaseMappedStatement.getFieldObjects((r4v0 'this' com.j256.ormlite.stmt.mapped.BaseMappedStatement A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_12[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_14[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_1;
Node_1 -> Node_2;
Node_7 -> Node_8;
Node_12 -> Node_11;
Node_13 -> Node_10;
Node_14 -> Node_10;
}

