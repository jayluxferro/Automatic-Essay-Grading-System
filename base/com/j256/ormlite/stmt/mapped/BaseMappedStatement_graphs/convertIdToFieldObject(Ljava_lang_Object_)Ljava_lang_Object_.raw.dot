digraph "CFG forcom.j256.ormlite.stmt.mapped.BaseMappedStatement.convertIdToFieldObject(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.field.FieldType) = (r1 I:com.j256.ormlite.stmt.mapped.BaseMappedStatement) com.j256.ormlite.stmt.mapped.BaseMappedStatement.idField com.j256.ormlite.field.FieldType \l0x0002: INVOKE  (r2 I:java.lang.Object) = \l  (r0 I:com.j256.ormlite.field.FieldType)\l  (r2 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.convertJavaFieldToSqlArgValue(java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: RETURN  (r2 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{protected java.lang.Object com.j256.ormlite.stmt.mapped.BaseMappedStatement.convertIdToFieldObject((r1 'this' I:com.j256.ormlite.stmt.mapped.BaseMappedStatement A[IMMUTABLE_TYPE, THIS]), (r2 I:ID A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TID;), Ljava\/lang\/Object;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

