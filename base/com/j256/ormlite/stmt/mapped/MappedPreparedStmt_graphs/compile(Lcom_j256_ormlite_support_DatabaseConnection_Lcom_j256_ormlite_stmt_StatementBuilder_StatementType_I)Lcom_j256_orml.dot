digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedPreparedStmt.compile(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Lcom\/j256\/ormlite\/stmt\/StatementBuilder$StatementType;I)Lcom\/j256\/ormlite\/support\/CompiledStatement;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r7.type != r9) goto L_0x0016\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r1 = r8\lr3 = r9\lr5 = r10\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|RETURN\l|return assignStatementArguments(r1.compileStatement(r7.statement, r3, r7.argFieldTypes, r5, r7.cacheStore))\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|java.lang.StringBuilder r10 = new java.lang.StringBuilder()\lr10.append(\"Could not compile this \")\lr10.append(r7.type)\lr10.append(\" statement since the caller is expecting a \")\lr10.append(r9)\lr10.append(\" statement.  Check your QueryBuilder methods.\")\l}"];
Node_5 [shape=record,label="{5\:\ 0x003b|throw new java.sql.SQLException(r10.toString())\l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.support.CompiledStatement com.j256.ormlite.stmt.mapped.MappedPreparedStmt.compile((r7v0 'this' com.j256.ormlite.stmt.mapped.MappedPreparedStmt A[IMMUTABLE_TYPE, THIS]), (r8v0 com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 com.j256.ormlite.stmt.StatementBuilder$StatementType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

