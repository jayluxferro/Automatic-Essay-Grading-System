digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedPreparedStmt.setArgumentHolderValue(ILjava\/lang\/Object;)V" {
subgraph cluster_Region_615590058 {
label = "R(1:(2:7|8)(1:(1:3)(2:5|6)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_920757838 {
label = "IF [B:0:0x0000] THEN: R(2:7|8) ELSE: R(1:(1:3)(2:5|6))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r3 \< 0) goto L_0x0036\l}"];
subgraph cluster_Region_1926541460 {
label = "R(2:7|8)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0036}"];
Node_8 [shape=record,label="{8\:\ 0x0051|throw new java.sql.SQLException(\"argument holder index \" + r3 + \" must be \>= 0\")\l}"];
}
subgraph cluster_Region_1422814720 {
label = "R(1:(1:3)(2:5|6)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2031614027 {
label = "IF [B:2:0x0005] THEN: R(1:3) ELSE: R(2:5|6) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r2.argHolders.length \> r3) goto L_0x0007\l}"];
subgraph cluster_Region_1115677425 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|r2.argHolders[r3].setValue(r4)\l}"];
}
subgraph cluster_Region_360229434 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f}"];
Node_6 [shape=record,label="{6\:\ 0x0035|throw new java.sql.SQLException(\"argument holder index \" + r3 + \" is not valid, only \" + r2.argHolders.length + \" in statement (index starts at 0)\")\l}"];
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000e}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.mapped.MappedPreparedStmt.setArgumentHolderValue((r2v0 'this' com.j256.ormlite.stmt.mapped.MappedPreparedStmt A[IMMUTABLE_TYPE, THIS]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_7;
Node_7 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_1 -> Node_2;
}

