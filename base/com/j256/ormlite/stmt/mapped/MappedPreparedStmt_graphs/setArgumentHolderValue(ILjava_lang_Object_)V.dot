digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedPreparedStmt.setArgumentHolderValue(ILjava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r3 \< 0) goto L_0x0036\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r2.argHolders.length \<= r3) goto L_0x000f\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|r2.argHolders[r3].setValue(r4)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"argument holder index \")\lr0.append(r3)\lr0.append(\" is not valid, only \")\lr0.append(r2.argHolders.length)\lr0.append(\" in statement (index starts at 0)\")\l}"];
Node_6 [shape=record,label="{6\:\ 0x0035|throw new java.sql.SQLException(r0.toString())\l}"];
Node_7 [shape=record,label="{7\:\ 0x0036|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"argument holder index \")\lr0.append(r3)\lr0.append(\" must be \>= 0\")\l}"];
Node_8 [shape=record,label="{8\:\ 0x0051|throw new java.sql.SQLException(r0.toString())\l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.stmt.mapped.MappedPreparedStmt.setArgumentHolderValue((r2v0 'this' com.j256.ormlite.stmt.mapped.MappedPreparedStmt A[IMMUTABLE_TYPE, THIS]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_7;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

