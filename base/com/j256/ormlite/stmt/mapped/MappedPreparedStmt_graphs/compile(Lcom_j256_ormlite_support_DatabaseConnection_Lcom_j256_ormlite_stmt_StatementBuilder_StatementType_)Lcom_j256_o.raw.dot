digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedPreparedStmt.compile(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Lcom\/j256\/ormlite\/stmt\/StatementBuilder$StatementType;)Lcom\/j256\/ormlite\/support\/CompiledStatement;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0001: INVOKE  (r2 I:com.j256.ormlite.support.CompiledStatement) = \l  (r1 I:com.j256.ormlite.stmt.mapped.MappedPreparedStmt)\l  (r2 I:com.j256.ormlite.support.DatabaseConnection)\l  (r3 I:com.j256.ormlite.stmt.StatementBuilder$StatementType)\l  (r0 I:int)\l com.j256.ormlite.stmt.mapped.MappedPreparedStmt.compile(com.j256.ormlite.support.DatabaseConnection, com.j256.ormlite.stmt.StatementBuilder$StatementType, int):com.j256.ormlite.support.CompiledStatement type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: RETURN  (r2 I:com.j256.ormlite.support.CompiledStatement) \l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.support.CompiledStatement com.j256.ormlite.stmt.mapped.MappedPreparedStmt.compile((r1 'this' I:com.j256.ormlite.stmt.mapped.MappedPreparedStmt A[IMMUTABLE_TYPE, THIS]), (r2 I:com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.j256.ormlite.stmt.StatementBuilder$StatementType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

