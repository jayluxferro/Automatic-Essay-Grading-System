digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedDeleteCollection.updateRows(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Ljava\/lang\/Class;Lcom\/j256\/ormlite\/stmt\/mapped\/MappedDeleteCollection;[Ljava\/lang\/Object;Lcom\/j256\/ormlite\/dao\/ObjectCache;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:java.lang.String) = (r5 I:com.j256.ormlite.stmt.mapped.MappedDeleteCollection) com.j256.ormlite.stmt.mapped.MappedDeleteCollection.statement java.lang.String A[Catch:\{ SQLException \-\> 0x0035 \}, TRY_ENTER]\l0x0002: IGET  (r1 I:com.j256.ormlite.field.FieldType[]) = (r5 I:com.j256.ormlite.stmt.mapped.MappedDeleteCollection) com.j256.ormlite.stmt.mapped.MappedDeleteCollection.argFieldTypes com.j256.ormlite.field.FieldType[] A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x0004: INVOKE  (r3 I:int) = \l  (r3 I:com.j256.ormlite.support.DatabaseConnection)\l  (r0 I:java.lang.String)\l  (r6 I:java.lang.Object[])\l  (r1 I:com.j256.ormlite.field.FieldType[])\l com.j256.ormlite.support.DatabaseConnection.delete(java.lang.String, java.lang.Object[], com.j256.ormlite.field.FieldType[]):int type: INTERFACE A[Catch:\{ SQLException \-\> 0x0035 \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x0018 A[Catch:\{ SQLException \-\> 0x0035 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0018 A[Catch:\{ SQLException \-\> 0x0035 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: ARRAY_LENGTH  (r0 I:int) = (r6 I:?[]) A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x000d: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ SQLException \-\> 0x0035 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:7:0x0018 A[Catch:\{ SQLException \-\> 0x0035 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: AGET  (r2 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x0012: INVOKE  \l  (r7 I:com.j256.ormlite.dao.ObjectCache)\l  (r4 I:java.lang.Class)\l  (r2 I:java.lang.Object)\l com.j256.ormlite.dao.ObjectCache.remove(java.lang.Class, java.lang.Object):void type: INTERFACE A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x0015: ARITH  (r1 I:int) = (r1 I:int) + (1 int) A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x0017: GOTO  \-\> 0x000e A[Catch:\{ SQLException \-\> 0x0035 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: SGET  (r4 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.mapped.MappedDeleteCollection.logger com.j256.ormlite.logger.Logger A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x001a: CONST_STR  (r7 I:java.lang.String) =  \"delete\-collection with statement '\{\}' and \{\} args, changed \{\} rows\" A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x001c: IGET  (r0 I:java.lang.String) = (r5 I:com.j256.ormlite.stmt.mapped.MappedDeleteCollection) com.j256.ormlite.stmt.mapped.MappedDeleteCollection.statement java.lang.String A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x001e: ARRAY_LENGTH  (r1 I:int) = (r6 I:?[]) A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x001f: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x0023: INVOKE  (r2 I:java.lang.Integer) = (r3 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x0027: INVOKE  \l  (r4 I:com.j256.ormlite.logger.Logger)\l  (r7 I:java.lang.String)\l  (r0 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object):void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x002a: ARRAY_LENGTH  (r4 I:int) = (r6 I:?[]) A[Catch:\{ SQLException \-\> 0x0035 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|0x002b: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:10:0x0034 A[Catch:\{ SQLException \-\> 0x0035 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: SGET  (r4 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.stmt.mapped.MappedDeleteCollection.logger com.j256.ormlite.logger.Logger A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x002f: CONST_STR  (r7 I:java.lang.String) =  \"delete\-collection arguments: \{\}\" A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x0031: INVOKE  \l  (r4 I:com.j256.ormlite.logger.Logger)\l  (r7 I:java.lang.String)\l  (r6 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.trace(java.lang.String, java.lang.Object):void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0035 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: RETURN  (r3 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|ExcHandler: SQLException null\lSplitter:B:0:0x0000\l|0x0035: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|0x0036: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0038: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x003b: CONST_STR  (r6 I:java.lang.String) =  \"Unable to run delete collection stmt: \" \l0x003d: INVOKE  (r4 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0040: IGET  (r5 I:java.lang.String) = (r5 I:com.j256.ormlite.stmt.mapped.MappedDeleteCollection) com.j256.ormlite.stmt.mapped.MappedDeleteCollection.statement java.lang.String \l0x0042: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0045: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0049: INVOKE  (r3 I:java.sql.SQLException) = (r4 I:java.lang.String), (r3 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x004d|0x004d: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static int com.j256.ormlite.stmt.mapped.MappedDeleteCollection.updateRows((r3 I:com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Class\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.j256.ormlite.stmt.mapped.MappedDeleteCollection\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, ID:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, Ljava\/lang\/Class\<, TT;\>;, Lcom\/j256\/ormlite\/stmt\/mapped\/MappedDeleteCollection\<, TT;TID;\>;[, Ljava\/lang\/Object;, Lcom\/j256\/ormlite\/dao\/ObjectCache;, )I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_11;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_5;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

