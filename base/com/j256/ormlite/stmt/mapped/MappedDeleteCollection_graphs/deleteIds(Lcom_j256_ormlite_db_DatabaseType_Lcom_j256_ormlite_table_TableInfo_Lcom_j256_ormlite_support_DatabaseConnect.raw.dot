digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedDeleteCollection.deleteIds(Lcom\/j256\/ormlite\/db\/DatabaseType;Lcom\/j256\/ormlite\/table\/TableInfo;Lcom\/j256\/ormlite\/support\/DatabaseConnection;Ljava\/util\/Collection;Lcom\/j256\/ormlite\/dao\/ObjectCache;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r7 I:java.util.Collection) java.util.Collection.size():int type: INTERFACE \l0x0004: INVOKE  (r4 I:com.j256.ormlite.stmt.mapped.MappedDeleteCollection) = \l  (r4 I:com.j256.ormlite.db.DatabaseType)\l  (r5 I:com.j256.ormlite.table.TableInfo)\l  (r0 I:int)\l com.j256.ormlite.stmt.mapped.MappedDeleteCollection.build(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.table.TableInfo, int):com.j256.ormlite.stmt.mapped.MappedDeleteCollection type: STATIC \l0x0008: INVOKE  (r0 I:int) = (r7 I:java.util.Collection) java.util.Collection.size():int type: INTERFACE \l0x000c: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x000e: INVOKE  (r1 I:com.j256.ormlite.field.FieldType) = (r5 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getIdField():com.j256.ormlite.field.FieldType type: VIRTUAL \l0x0012: INVOKE  (r7 I:java.util.Iterator) = (r7 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE \l0x0016: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: INVOKE  (r3 I:boolean) = (r7 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x001b|0x001b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x002a \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: INVOKE  (r3 I:java.lang.Object) = (r7 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0021: INVOKE  (r3 I:java.lang.Object) = \l  (r1 I:com.j256.ormlite.field.FieldType)\l  (r3 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.convertJavaFieldToSqlArgValue(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0025: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0027: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|0x002a: INVOKE  (r5 I:java.lang.Class) = (r5 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getDataClass():java.lang.Class type: VIRTUAL \l0x002e: INVOKE  (r4 I:int) = \l  (r6 I:com.j256.ormlite.support.DatabaseConnection)\l  (r5 I:java.lang.Class)\l  (r4 I:com.j256.ormlite.stmt.mapped.MappedDeleteCollection)\l  (r0 I:java.lang.Object[])\l  (r8 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.stmt.mapped.MappedDeleteCollection.updateRows(com.j256.ormlite.support.DatabaseConnection, java.lang.Class, com.j256.ormlite.stmt.mapped.MappedDeleteCollection, java.lang.Object[], com.j256.ormlite.dao.ObjectCache):int type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0032|0x0032: RETURN  (r4 I:int) \l}"];
MethodNode[shape=record,label="{public static int com.j256.ormlite.stmt.mapped.MappedDeleteCollection.deleteIds((r4 I:com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.j256.ormlite.table.TableInfo\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.Collection\<ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, ID:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Lcom\/j256\/ormlite\/table\/TableInfo\<, TT;TID;\>;, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, Ljava\/util\/Collection\<, TID;\>;, Lcom\/j256\/ormlite\/dao\/ObjectCache;, )I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

