digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedDeleteCollection.build(Lcom\/j256\/ormlite\/db\/DatabaseType;Lcom\/j256\/ormlite\/table\/TableInfo;I)Lcom\/j256\/ormlite\/stmt\/mapped\/MappedDeleteCollection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.j256.ormlite.field.FieldType r0 = r5.getIdField()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 == null) goto L_0x0025\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|java.lang.StringBuilder r1 = new java.lang.StringBuilder(128)\lappendTableName(r4, r1, \"DELETE FROM \", r5.getTableName())\lcom.j256.ormlite.field.FieldType[] r2 = new com.j256.ormlite.field.FieldType[r6]\lappendWhereIds(r4, r0, r1, r6, r2)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|RETURN\l|return new com.j256.ormlite.stmt.mapped.MappedDeleteCollection\<\>(r5, r1.toString(), r2)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"Cannot delete \")\lr6.append(r5.getDataClass())\lr6.append(\" because it doesn't have an id field defined\")\l}"];
Node_5 [shape=record,label="{5\:\ 0x0044|throw new java.sql.SQLException(r6.toString())\l}"];
MethodNode[shape=record,label="{private static com.j256.ormlite.stmt.mapped.MappedDeleteCollection\<T, ID\> com.j256.ormlite.stmt.mapped.MappedDeleteCollection.build((r4v0 com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 com.j256.ormlite.table.TableInfo\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, ID:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Lcom\/j256\/ormlite\/table\/TableInfo\<, TT;TID;\>;I), Lcom\/j256\/ormlite\/stmt\/mapped\/MappedDeleteCollection\<, TT;TID;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

