digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedDeleteCollection.updateRows(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Ljava\/lang\/Class;Lcom\/j256\/ormlite\/stmt\/mapped\/MappedDeleteCollection;[Ljava\/lang\/Object;Lcom\/j256\/ormlite\/dao\/ObjectCache;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ SQLException \-\> 0x0035 \}\lSplitter:B:0:0x0000\l|int r3 = r3.delete(r5.statement, r6, r5.argFieldTypes)     \/\/ Catch:\{ SQLException \-\> 0x0035 \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|Catch:\{ SQLException \-\> 0x0035 \}\l|if (r3 \<= 0) goto L_0x0018     \/\/ Catch:\{ SQLException \-\> 0x0035 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|Catch:\{ SQLException \-\> 0x0035 \}\l|if (r7 == null) goto L_0x0018     \/\/ Catch:\{ SQLException \-\> 0x0035 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|Catch:\{ SQLException \-\> 0x0035 \}\l|int r0 = r6.length     \/\/ Catch:\{ SQLException \-\> 0x0035 \}\lr1 = 0     \/\/ Catch:\{ SQLException \-\> 0x0035 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|LOOP_START\lCatch:\{ SQLException \-\> 0x0035 \}\lPHI: r1 \l  PHI: (r1v4 int) = (r1v3 int), (r1v5 int) binds: [B:4:0x000c, B:6:0x0010] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x000e\-\>B:6:0x0010\l|if (r1 \>= r0) goto L_0x0018     \/\/ Catch:\{ SQLException \-\> 0x0035 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|LOOP_END\lCatch:\{ SQLException \-\> 0x0035 \}\lLOOP:0: B:5:0x000e\-\>B:6:0x0010\l|r7.remove(r4, r6[r1])     \/\/ Catch:\{ SQLException \-\> 0x0035 \}\lint r1 = r1 + 1     \/\/ Catch:\{ SQLException \-\> 0x0035 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|Catch:\{ SQLException \-\> 0x0035 \}\l|logger.debug(\"delete\-collection with statement '\{\}' and \{\} args, changed \{\} rows\", (java.lang.Object) r5.statement, (java.lang.Object) java.lang.Integer.valueOf(r6.length), (java.lang.Object) java.lang.Integer.valueOf(r3))     \/\/ Catch:\{ SQLException \-\> 0x0035 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|Catch:\{ SQLException \-\> 0x0035 \}\l|if (r6.length \<= 0) goto L_0x0034     \/\/ Catch:\{ SQLException \-\> 0x0035 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|Catch:\{ SQLException \-\> 0x0035 \}\l|logger.trace(\"delete\-collection arguments: \{\}\", (java.lang.Object) r6)     \/\/ Catch:\{ SQLException \-\> 0x0035 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|RETURN\l|return r3\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|ExcHandler: SQLException (r3v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.sql.SQLException r3 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"Unable to run delete collection stmt: \")\lr4.append(r5.statement)\l}"];
Node_13 [shape=record,label="{13\:\ 0x004d|throw com.j256.ormlite.misc.SqlExceptionUtil.create(r4.toString(), r3)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static int com.j256.ormlite.stmt.mapped.MappedDeleteCollection.updateRows((r3v0 com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Class\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 com.j256.ormlite.stmt.mapped.MappedDeleteCollection\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, ID:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, Ljava\/lang\/Class\<, TT;\>;, Lcom\/j256\/ormlite\/stmt\/mapped\/MappedDeleteCollection\<, TT;TID;\>;[, Ljava\/lang\/Object;, Lcom\/j256\/ormlite\/dao\/ObjectCache;, )I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_11;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_5;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_7;
}

