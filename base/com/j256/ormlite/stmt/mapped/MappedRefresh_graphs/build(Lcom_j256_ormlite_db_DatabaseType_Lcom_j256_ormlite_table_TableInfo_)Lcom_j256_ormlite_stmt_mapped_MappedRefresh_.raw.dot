digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedRefresh.build(Lcom\/j256\/ormlite\/db\/DatabaseType;Lcom\/j256\/ormlite\/table\/TableInfo;)Lcom\/j256\/ormlite\/stmt\/mapped\/MappedRefresh;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.j256.ormlite.field.FieldType) = (r5 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getIdField():com.j256.ormlite.field.FieldType type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r4 I:java.lang.String) = \l  (r4 I:com.j256.ormlite.db.DatabaseType)\l  (r5 I:com.j256.ormlite.table.TableInfo)\l  (r0 I:com.j256.ormlite.field.FieldType)\l com.j256.ormlite.stmt.mapped.MappedRefresh.buildStatement(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.table.TableInfo, com.j256.ormlite.field.FieldType):java.lang.String type: STATIC \l0x000a: NEW_INSTANCE  (r0 I:com.j256.ormlite.stmt.mapped.MappedRefresh) =  com.j256.ormlite.stmt.mapped.MappedRefresh \l0x000c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: NEW_ARRAY  (r1 I:com.j256.ormlite.field.FieldType[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: com.j256.ormlite.field.FieldType[] \l0x000f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: INVOKE  (r3 I:com.j256.ormlite.field.FieldType) = (r5 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getIdField():com.j256.ormlite.field.FieldType type: VIRTUAL \l0x0014: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0016: INVOKE  (r2 I:com.j256.ormlite.field.FieldType[]) = (r5 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getFieldTypes():com.j256.ormlite.field.FieldType[] type: VIRTUAL \l0x001a: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.mapped.MappedRefresh)\l  (r5 I:com.j256.ormlite.table.TableInfo)\l  (r4 I:java.lang.String)\l  (r1 I:com.j256.ormlite.field.FieldType[])\l  (r2 I:com.j256.ormlite.field.FieldType[])\l com.j256.ormlite.stmt.mapped.MappedRefresh.\<init\>(com.j256.ormlite.table.TableInfo, java.lang.String, com.j256.ormlite.field.FieldType[], com.j256.ormlite.field.FieldType[]):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: RETURN  (r0 I:com.j256.ormlite.stmt.mapped.MappedRefresh\<T, ID\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: NEW_INSTANCE  (r4 I:java.sql.SQLException) =  java.sql.SQLException \l0x0020: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0022: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0025: CONST_STR  (r1 I:java.lang.String) =  \"Cannot refresh \" \l0x0027: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002a: INVOKE  (r5 I:java.lang.Class) = (r5 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getDataClass():java.lang.Class type: VIRTUAL \l0x002e: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0031: CONST_STR  (r5 I:java.lang.String) =  \" because it doesn't have an id field\" \l0x0033: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0036: INVOKE  (r5 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003a: INVOKE  (r4 I:java.sql.SQLException), (r5 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x003d|0x003d: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static com.j256.ormlite.stmt.mapped.MappedRefresh\<T, ID\> com.j256.ormlite.stmt.mapped.MappedRefresh.build((r4 I:com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.j256.ormlite.table.TableInfo\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, ID:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Lcom\/j256\/ormlite\/table\/TableInfo\<, TT;TID;\>;), Lcom\/j256\/ormlite\/stmt\/mapped\/MappedRefresh\<, TT;TID;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

