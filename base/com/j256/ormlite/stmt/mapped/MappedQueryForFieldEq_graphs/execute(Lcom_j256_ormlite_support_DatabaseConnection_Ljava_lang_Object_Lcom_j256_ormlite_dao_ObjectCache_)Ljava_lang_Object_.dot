digraph "CFG forcom.j256.ormlite.stmt.mapped.MappedQueryForFieldEq.execute(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Ljava\/lang\/Object;Lcom\/j256\/ormlite\/dao\/ObjectCache;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r10 == null) goto L_0x000b\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|java.lang.Object r0 = r10.get(r7.clazz, r9)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|if (r0 == null) goto L_0x000b\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return r0\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|java.lang.Object[] r0 = new java.lang.Object[]\{convertIdToFieldObject(r9)\}\lr1 = r8\lr3 = r0\ljava.lang.Object r8 = r1.queryForOne(r7.statement, r3, r7.argFieldTypes, r7, r10)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|if (r8 != null) goto L_0x0034\l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|logger.debug(\"\{\} using '\{\}' and \{\} args, got no results\", (java.lang.Object) r7.label, (java.lang.Object) r7.statement, (java.lang.Object) java.lang.Integer.valueOf(r0.length))\l}"];
Node_7 [shape=record,label="{7\:\ 0x0034}"];
Node_8 [shape=record,label="{8\:\ 0x0036|if (r8 == com.j256.ormlite.support.DatabaseConnection.MORE_THAN_ONE) goto L_0x004c\l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|logger.debug(\"\{\} using '\{\}' and \{\} args, got 1 result\", (java.lang.Object) r7.label, (java.lang.Object) r7.statement, (java.lang.Object) java.lang.Integer.valueOf(r0.length))\l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|logArgs(r0)\l}"];
Node_11 [shape=record,label="{11\:\ 0x004b|RETURN\l|return r8\l}"];
Node_12 [shape=record,label="{12\:\ 0x004c|logger.error(\"\{\} using '\{\}' and \{\} args, got \>1 results\", (java.lang.Object) r7.label, (java.lang.Object) r7.statement, (java.lang.Object) java.lang.Integer.valueOf(r0.length))\llogArgs(r0)\ljava.lang.StringBuilder r9 = new java.lang.StringBuilder()\lr9.append(r7.label)\lr9.append(\" got more than 1 result: \")\lr9.append(r7.statement)\l}"];
Node_13 [shape=record,label="{13\:\ 0x007c|throw new java.sql.SQLException(r9.toString())\l}"];
MethodNode[shape=record,label="{public T com.j256.ormlite.stmt.mapped.MappedQueryForFieldEq.execute((r7v0 'this' com.j256.ormlite.stmt.mapped.MappedQueryForFieldEq A[IMMUTABLE_TYPE, THIS]), (r8v0 com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 ID A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, TID;, Lcom\/j256\/ormlite\/dao\/ObjectCache;, )TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
}

