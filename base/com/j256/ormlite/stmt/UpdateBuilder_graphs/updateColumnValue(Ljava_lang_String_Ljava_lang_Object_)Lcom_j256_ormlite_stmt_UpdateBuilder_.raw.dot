digraph "CFG forcom.j256.ormlite.stmt.UpdateBuilder.updateColumnValue(Ljava\/lang\/String;Ljava\/lang\/Object;)Lcom\/j256\/ormlite\/stmt\/UpdateBuilder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.j256.ormlite.field.FieldType) = \l  (r2 I:com.j256.ormlite.stmt.UpdateBuilder)\l  (r3 I:java.lang.String)\l com.j256.ormlite.stmt.UpdateBuilder.verifyColumnName(java.lang.String):com.j256.ormlite.field.FieldType type: VIRTUAL \l0x0004: INVOKE  (r1 I:boolean) = (r0 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.isForeignCollection():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: NEW_INSTANCE  (r1 I:com.j256.ormlite.stmt.query.SetValue) =  com.j256.ormlite.stmt.query.SetValue \l0x000c: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.query.SetValue)\l  (r3 I:java.lang.String)\l  (r0 I:com.j256.ormlite.field.FieldType)\l  (r4 I:java.lang.Object)\l com.j256.ormlite.stmt.query.SetValue.\<init\>(java.lang.String, com.j256.ormlite.field.FieldType, java.lang.Object):void type: DIRECT \l0x000f: INVOKE  \l  (r2 I:com.j256.ormlite.stmt.UpdateBuilder)\l  (r3 I:java.lang.String)\l  (r1 I:com.j256.ormlite.stmt.query.Clause)\l com.j256.ormlite.stmt.UpdateBuilder.addUpdateColumnToList(java.lang.String, com.j256.ormlite.stmt.query.Clause):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: RETURN  (r2 I:com.j256.ormlite.stmt.UpdateBuilder\<T, ID\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: NEW_INSTANCE  (r4 I:java.sql.SQLException) =  java.sql.SQLException \l0x0015: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0017: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001a: CONST_STR  (r1 I:java.lang.String) =  \"Can't update foreign colletion field: \" \l0x001c: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001f: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0022: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0026: INVOKE  (r4 I:java.sql.SQLException), (r3 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|0x0029: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.stmt.UpdateBuilder\<T, ID\> com.j256.ormlite.stmt.UpdateBuilder.updateColumnValue((r2 'this' I:com.j256.ormlite.stmt.UpdateBuilder A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/lang\/Object;, ), Lcom\/j256\/ormlite\/stmt\/UpdateBuilder\<, TT;TID;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

