digraph "CFG forcom.j256.ormlite.android.AndroidCompiledStatement.runExecute()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r4.type.isOkForExecute() == false) goto L_0x0017\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008}"];
Node_3 [shape=record,label="{3\:\ 0x0016|RETURN\l|return execSql(r4.f182db, \"runExecute\", r4.sql, getArgArray())\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Cannot call execute on a \")\lr1.append(r4.type)\lr1.append(\" statement\")\l}"];
Node_5 [shape=record,label="{5\:\ 0x0034|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
MethodNode[shape=record,label="{public int com.j256.ormlite.android.AndroidCompiledStatement.runExecute((r4v0 'this' com.j256.ormlite.android.AndroidCompiledStatement A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

