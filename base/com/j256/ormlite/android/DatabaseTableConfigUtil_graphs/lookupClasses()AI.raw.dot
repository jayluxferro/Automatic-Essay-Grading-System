digraph "CFG forcom.j256.ormlite.android.DatabaseTableConfigUtil.lookupClasses()[I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST_STR  (r1 I:java.lang.String) =  \"org.apache.harmony.lang.annotation.AnnotationFactory\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: INVOKE  (r1 I:java.lang.Class) = (r1 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ ClassNotFoundException \-\> 0x0094 \}, TRY_ENTER]\l0x0007: SPUT  (r1 I:java.lang.Class\<?\>) com.j256.ormlite.android.DatabaseTableConfigUtil.annotationFactoryClazz java.lang.Class A[Catch:\{ ClassNotFoundException \-\> 0x0094 \}]\l0x0009: CONST_STR  (r1 I:java.lang.String) =  \"org.apache.harmony.lang.annotation.AnnotationMember\" A[Catch:\{ ClassNotFoundException \-\> 0x0094 \}]\l0x000b: INVOKE  (r1 I:java.lang.Class) = (r1 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ ClassNotFoundException \-\> 0x0094 \}]\l0x000f: SPUT  (r1 I:java.lang.Class\<?\>) com.j256.ormlite.android.DatabaseTableConfigUtil.annotationMemberClazz java.lang.Class A[Catch:\{ ClassNotFoundException \-\> 0x0094 \}]\l0x0011: CONST_STR  (r1 I:java.lang.String) =  \"[Lorg.apache.harmony.lang.annotation.AnnotationMember;\" A[Catch:\{ ClassNotFoundException \-\> 0x0094 \}]\l0x0013: INVOKE  (r1 I:java.lang.Class) = (r1 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ ClassNotFoundException \-\> 0x0094 \}]\l0x0016: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|SYNTHETIC\lSplitter:B:3:0x0017\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0017\l|0x0017: SGET  (r2 I:java.lang.Class\<?\>) =  com.j256.ormlite.android.DatabaseTableConfigUtil.annotationFactoryClazz java.lang.Class A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}, TRY_ENTER]\l0x0019: CONST_STR  (r3 I:java.lang.String) =  \"elements\" A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x001b: INVOKE  (r2 I:java.lang.reflect.Field) = (r2 I:java.lang.Class), (r3 I:java.lang.String) java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field type: VIRTUAL A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x001f: SPUT  (r2 I:java.lang.reflect.Field) com.j256.ormlite.android.DatabaseTableConfigUtil.elementsField java.lang.reflect.Field A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x0021: SGET  (r2 I:java.lang.reflect.Field) =  com.j256.ormlite.android.DatabaseTableConfigUtil.elementsField java.lang.reflect.Field A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x0023: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x0024: INVOKE  (r2 I:java.lang.reflect.Field), (r3 I:boolean) java.lang.reflect.Field.setAccessible(boolean):void type: VIRTUAL A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x0027: SGET  (r2 I:java.lang.Class\<?\>) =  com.j256.ormlite.android.DatabaseTableConfigUtil.annotationMemberClazz java.lang.Class A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x0029: CONST_STR  (r4 I:java.lang.String) =  \"name\" A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x002b: INVOKE  (r2 I:java.lang.reflect.Field) = (r2 I:java.lang.Class), (r4 I:java.lang.String) java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field type: VIRTUAL A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x002f: SPUT  (r2 I:java.lang.reflect.Field) com.j256.ormlite.android.DatabaseTableConfigUtil.nameField java.lang.reflect.Field A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x0031: SGET  (r2 I:java.lang.reflect.Field) =  com.j256.ormlite.android.DatabaseTableConfigUtil.nameField java.lang.reflect.Field A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x0033: INVOKE  (r2 I:java.lang.reflect.Field), (r3 I:boolean) java.lang.reflect.Field.setAccessible(boolean):void type: VIRTUAL A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x0036: SGET  (r2 I:java.lang.Class\<?\>) =  com.j256.ormlite.android.DatabaseTableConfigUtil.annotationMemberClazz java.lang.Class A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x0038: CONST_STR  (r4 I:java.lang.String) =  \"value\" A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x003a: INVOKE  (r2 I:java.lang.reflect.Field) = (r2 I:java.lang.Class), (r4 I:java.lang.String) java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field type: VIRTUAL A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x003e: SPUT  (r2 I:java.lang.reflect.Field) com.j256.ormlite.android.DatabaseTableConfigUtil.valueField java.lang.reflect.Field A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x0040: SGET  (r2 I:java.lang.reflect.Field) =  com.j256.ormlite.android.DatabaseTableConfigUtil.valueField java.lang.reflect.Field A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x0042: INVOKE  (r2 I:java.lang.reflect.Field), (r3 I:boolean) java.lang.reflect.Field.setAccessible(boolean):void type: VIRTUAL A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x0045: CONST_CLASS  (r2 I:java.lang.Class\<com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample\>) =  com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample.class A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x0047: CONST_STR  (r3 I:java.lang.String) =  \"field\" A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x0049: INVOKE  (r2 I:java.lang.reflect.Field) = (r2 I:java.lang.Class), (r3 I:java.lang.String) java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field type: VIRTUAL A[Catch:\{ SecurityException \-\> 0x0093, NoSuchFieldException \-\> 0x0092 \}]\l0x004c: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x004d|0x004d: CONST_CLASS  (r3 I:java.lang.Class\<com.j256.ormlite.field.DatabaseField\>) =  com.j256.ormlite.field.DatabaseField.class \l0x004f: INVOKE  (r2 I:java.lang.annotation.Annotation) = (r2 I:java.lang.reflect.Field), (r3 I:java.lang.Class) java.lang.reflect.Field.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l0x0053: CHECK_CAST  (r2 I:com.j256.ormlite.field.DatabaseField) = (com.j256.ormlite.field.DatabaseField) (r2 I:?[OBJECT, ARRAY]) \l0x0055: INVOKE  (r2 I:java.lang.reflect.InvocationHandler) = (r2 I:java.lang.Object) java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object):java.lang.reflect.InvocationHandler type: STATIC \l0x0059: INVOKE  (r3 I:java.lang.Class) = (r2 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x005d: SGET  (r4 I:java.lang.Class\<?\>) =  com.j256.ormlite.android.DatabaseTableConfigUtil.annotationFactoryClazz java.lang.Class \l}"];
Node_6 [shape=record,label="{6\:\ 0x005f|0x005f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0062 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0061|0x0061: RETURN  (r0 I:int[]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0062|SYNTHETIC\lSplitter:B:8:0x0062\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0062\l|0x0062: SGET  (r3 I:java.lang.reflect.Field) =  com.j256.ormlite.android.DatabaseTableConfigUtil.elementsField java.lang.reflect.Field A[Catch:\{ IllegalAccessException \-\> 0x0091 \}, TRY_ENTER]\l0x0064: INVOKE  (r2 I:java.lang.Object) = (r3 I:java.lang.reflect.Field), (r2 I:java.lang.Object) java.lang.reflect.Field.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0068|0x0068: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0090 A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x006a|0x006a: INVOKE  (r3 I:java.lang.Class) = (r2 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x006e|0x006e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0071 A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0070|0x0070: GOTO  \-\> 0x0090 A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0071|0x0071: CHECK_CAST  (r2 I:java.lang.Object[]) = (java.lang.Object[]) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l0x0073: CHECK_CAST  (r2 I:java.lang.Object[]) = (java.lang.Object[]) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l0x0075: ARRAY_LENGTH  (r1 I:int) = (r2 I:?[]) A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l0x0076: NEW_ARRAY  (r1 I:int[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: int[] A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l0x0078: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0079|0x0079: ARRAY_LENGTH  (r4 I:int) = (r2 I:?[]) A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x007a|0x007a: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:19:0x008f A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x007c|0x007c: SGET  (r4 I:java.lang.reflect.Field) =  com.j256.ormlite.android.DatabaseTableConfigUtil.nameField java.lang.reflect.Field A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l0x007e: AGET  (r5 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l0x0080: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.lang.reflect.Field), (r5 I:java.lang.Object) java.lang.reflect.Field.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l0x0084: CHECK_CAST  (r4 I:java.lang.String) = (java.lang.String) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l0x0086: INVOKE  (r4 I:int) = (r4 I:java.lang.String) com.j256.ormlite.android.DatabaseTableConfigUtil.configFieldNameToNum(java.lang.String):int type: STATIC A[Catch:\{ IllegalAccessException \-\> 0x0091 \}]\l0x008a: APUT  \l  (r1 I:?[int, float][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l A[Catch:\{ IllegalAccessException \-\> 0x0091 \}, TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x008c|0x008c: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x008f|0x008f: RETURN  (r1 I:int[]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0090|0x0090: RETURN  (r0 I:int[]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0091|0x0091: RETURN  (r0 I:int[]) \l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lExcHandler: IllegalAccessException null\lSplitter:B:8:0x0062\l}"];
Node_23 [shape=record,label="{23\:\ 0x0092|0x0092: RETURN  (r0 I:int[]) \l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lExcHandler: NoSuchFieldException null\lSplitter:B:3:0x0017\l}"];
Node_25 [shape=record,label="{25\:\ 0x0093|0x0093: RETURN  (r0 I:int[]) \l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lExcHandler: SecurityException null\lSplitter:B:3:0x0017\l}"];
Node_27 [shape=record,label="{27\:\ 0x0094|0x0094: RETURN  (r0 I:int[]) \l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lExcHandler: ClassNotFoundException null\lSplitter:B:1:0x0003\l}"];
MethodNode[shape=record,label="{private static int[] com.j256.ormlite.android.DatabaseTableConfigUtil.lookupClasses() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_28;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_26;
Node_3 -> Node_24;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_22;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_20;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_15;
Node_22 -> Node_21;
Node_24 -> Node_23;
Node_26 -> Node_25;
Node_28 -> Node_27;
}

