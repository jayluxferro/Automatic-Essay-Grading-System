digraph "CFG forcom.j256.ormlite.android.DatabaseTableConfigUtil.configFromField(Lcom\/j256\/ormlite\/db\/DatabaseType;Ljava\/lang\/String;Ljava\/lang\/reflect\/Field;)Lcom\/j256\/ormlite\/field\/DatabaseFieldConfig;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int[]) =  com.j256.ormlite.android.DatabaseTableConfigUtil.configFieldNums int[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r2 I:com.j256.ormlite.field.DatabaseFieldConfig) = \l  (r2 I:com.j256.ormlite.db.DatabaseType)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.reflect.Field)\l com.j256.ormlite.field.DatabaseFieldConfig.fromField(com.j256.ormlite.db.DatabaseType, java.lang.String, java.lang.reflect.Field):com.j256.ormlite.field.DatabaseFieldConfig type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: RETURN  (r2 I:com.j256.ormlite.field.DatabaseFieldConfig) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: CONST_CLASS  (r0 I:java.lang.Class\<com.j256.ormlite.field.DatabaseField\>) =  com.j256.ormlite.field.DatabaseField.class \l0x000b: INVOKE  (r0 I:java.lang.annotation.Annotation) = (r4 I:java.lang.reflect.Field), (r0 I:java.lang.Class) java.lang.reflect.Field.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l0x000f: CHECK_CAST  (r0 I:com.j256.ormlite.field.DatabaseField) = (com.j256.ormlite.field.DatabaseField) (r0 I:?[OBJECT, ARRAY]) \l0x0011: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0019 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|SYNTHETIC\lSplitter:B:6:0x0014\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0014\l|0x0014: INVOKE  (r0 I:com.j256.ormlite.field.DatabaseFieldConfig) = \l  (r0 I:com.j256.ormlite.field.DatabaseField)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.reflect.Field)\l com.j256.ormlite.android.DatabaseTableConfigUtil.buildConfig(com.j256.ormlite.field.DatabaseField, java.lang.String, java.lang.reflect.Field):com.j256.ormlite.field.DatabaseFieldConfig type: STATIC A[Catch:\{ Exception \-\> 0x0019 \}, TRY_ENTER]\l0x0017: NOP   A[TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0020 \l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lExcHandler: Exception null\lSplitter:B:6:0x0014\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: INVOKE  (r2 I:com.j256.ormlite.field.DatabaseFieldConfig) = \l  (r2 I:com.j256.ormlite.db.DatabaseType)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.reflect.Field)\l com.j256.ormlite.field.DatabaseFieldConfig.fromField(com.j256.ormlite.db.DatabaseType, java.lang.String, java.lang.reflect.Field):com.j256.ormlite.field.DatabaseFieldConfig type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|0x001f: RETURN  (r2 I:com.j256.ormlite.field.DatabaseFieldConfig) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|0x0020: SGET  (r2 I:int) =  com.j256.ormlite.android.DatabaseTableConfigUtil.workedC int \l0x0022: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x0024: SPUT  (r2 I:int) com.j256.ormlite.android.DatabaseTableConfigUtil.workedC int \l}"];
Node_14 [shape=record,label="{14\:\ 0x0026|0x0026: RETURN  (r1 I:com.j256.ormlite.field.DatabaseFieldConfig) \l}"];
MethodNode[shape=record,label="{private static com.j256.ormlite.field.DatabaseFieldConfig com.j256.ormlite.android.DatabaseTableConfigUtil.configFromField((r2 I:com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.reflect.Field A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_11[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_9;
Node_11 -> Node_12;
Node_13 -> Node_14;
}

