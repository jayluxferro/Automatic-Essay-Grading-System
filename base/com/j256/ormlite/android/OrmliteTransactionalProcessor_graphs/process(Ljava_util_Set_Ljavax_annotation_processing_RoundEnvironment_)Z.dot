digraph "CFG forcom.j256.ormlite.android.OrmliteTransactionalProcessor.process(Ljava\/util\/Set;Ljavax\/annotation\/processing\/RoundEnvironment;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r7 = annotationSet.iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lLOOP:0: B:1:0x0006\-\>B:9:0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|if (r7.hasNext() == false) goto L_0x0061\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|java.lang.Class r0 = r7.next()\ljava.util.Iterator r1 = r8.getElementsAnnotatedWith(r0).iterator()\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|LOOP_START\lLOOP:1: B:4:0x001a\-\>B:6:0x0020\l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|if (r1.hasNext() == false) goto L_0x0006\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|LOOP_END\lLOOP:1: B:4:0x001a\-\>B:6:0x0020\l|javax.lang.model.element.Element r2 = (javax.lang.model.element.Element) r1.next()\ljava.io.PrintStream r3 = java.lang.System.out\ljava.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"\-\- Element \")\lr4.append(r2)\lr4.append(\" has annotation \")\lr4.append(r0)\lr3.println(r4.toString())\ljavax.annotation.processing.Messager r3 = r6.processingEnv.getMessager()\ljavax.tools.Diagnostic$Kind r4 = javax.tools.Diagnostic.Kind.ERROR\ljava.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(r2)\lr5.append(\" error\")\lr3.printMessage(r4, r5.toString())\l}"];
Node_7 [shape=record,label="{7\:\ 0x0061|RETURN\l|return true\l}"];
Node_8 [shape=record,label="{8\:\ 0x0061|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0006\-\>B:9:0x0006\l}"];
MethodNode[shape=record,label="{public boolean com.j256.ormlite.android.OrmliteTransactionalProcessor.process((r6v0 'this' com.j256.ormlite.android.OrmliteTransactionalProcessor A[IMMUTABLE_TYPE, THIS]), (r7v0 java.util.Set\<? extends javax.lang.model.element.TypeElement\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 javax.annotation.processing.RoundEnvironment A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Set\<, +, Ljavax\/lang\/model\/element\/TypeElement;, \>;, Ljavax\/annotation\/processing\/RoundEnvironment;, )Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_4;
Node_8 -> Node_7;
Node_9 -> Node_1;
}

