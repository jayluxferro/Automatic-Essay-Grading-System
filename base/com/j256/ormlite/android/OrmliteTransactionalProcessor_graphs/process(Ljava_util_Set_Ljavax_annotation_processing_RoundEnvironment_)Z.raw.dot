digraph "CFG forcom.j256.ormlite.android.OrmliteTransactionalProcessor.process(Ljava\/util\/Set;Ljavax\/annotation\/processing\/RoundEnvironment;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r7 I:java.util.Set\<java.lang.Class\<? extends java.lang.annotation.Annotation\>\>) =  com.j256.ormlite.android.OrmliteTransactionalProcessor.annotationSet java.util.Set \l0x0002: INVOKE  (r7 I:java.util.Iterator) = (r7 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: INVOKE  (r0 I:boolean) = (r7 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0061 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  (r0 I:java.lang.Object) = (r7 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0010: CHECK_CAST  (r0 I:java.lang.Class) = (java.lang.Class) (r0 I:?[OBJECT, ARRAY]) \l0x0012: INVOKE  (r1 I:java.util.Set) = \l  (r8 I:javax.annotation.processing.RoundEnvironment)\l  (r0 I:java.lang.Class)\l javax.annotation.processing.RoundEnvironment.getElementsAnnotatedWith(java.lang.Class):java.util.Set type: INTERFACE \l0x0016: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0006 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0024: CHECK_CAST  (r2 I:javax.lang.model.element.Element) = (javax.lang.model.element.Element) (r2 I:?[OBJECT, ARRAY]) \l0x0026: SGET  (r3 I:java.io.PrintStream) =  java.lang.System.out java.io.PrintStream \l0x0028: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002a: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002d: CONST_STR  (r5 I:java.lang.String) =  \"\-\- Element \" \l0x002f: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0032: INVOKE  (r4 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0035: CONST_STR  (r5 I:java.lang.String) =  \" has annotation \" \l0x0037: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003a: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x003d: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0041: INVOKE  (r3 I:java.io.PrintStream), (r4 I:java.lang.String) java.io.PrintStream.println(java.lang.String):void type: VIRTUAL \l0x0044: IGET  (r3 I:javax.annotation.processing.ProcessingEnvironment) = \l  (r6 I:com.j256.ormlite.android.OrmliteTransactionalProcessor)\l com.j256.ormlite.android.OrmliteTransactionalProcessor.processingEnv javax.annotation.processing.ProcessingEnvironment \l0x0046: INVOKE  (r3 I:javax.annotation.processing.Messager) = (r3 I:javax.annotation.processing.ProcessingEnvironment) javax.annotation.processing.ProcessingEnvironment.getMessager():javax.annotation.processing.Messager type: INTERFACE \l0x004a: SGET  (r4 I:javax.tools.Diagnostic$Kind) =  javax.tools.Diagnostic.Kind.ERROR javax.tools.Diagnostic$Kind \l0x004c: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004e: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0051: INVOKE  (r5 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0054: CONST_STR  (r2 I:java.lang.String) =  \" error\" \l0x0056: INVOKE  (r5 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0059: INVOKE  (r2 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x005d: INVOKE  \l  (r3 I:javax.annotation.processing.Messager)\l  (r4 I:javax.tools.Diagnostic$Kind)\l  (r2 I:java.lang.CharSequence)\l javax.annotation.processing.Messager.printMessage(javax.tools.Diagnostic$Kind, java.lang.CharSequence):void type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0061|0x0061: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0062|0x0062: RETURN  (r7 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.j256.ormlite.android.OrmliteTransactionalProcessor.process((r6 'this' I:com.j256.ormlite.android.OrmliteTransactionalProcessor A[IMMUTABLE_TYPE, THIS]), (r7 I:java.util.Set\<? extends javax.lang.model.element.TypeElement\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:javax.annotation.processing.RoundEnvironment A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Set\<, +, Ljavax\/lang\/model\/element\/TypeElement;, \>;, Ljavax\/annotation\/processing\/RoundEnvironment;, )Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_5 -> Node_6[style=dashed];
Node_6 -> Node_4;
Node_7 -> Node_8;
}

