digraph "CFG forcom.j256.ormlite.android.AndroidDatabaseConnection.isTableExists(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.database.sqlite.SQLiteDatabase r0 = r5.f183db\ljava.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"SELECT DISTINCT tbl_name FROM sqlite_master WHERE tbl_name = '\")\lr1.append(r6)\lr1.append(\"'\")\landroid.database.Cursor r0 = r0.rawQuery(r1.toString(), (java.lang.String[]) null)\l}"];
Node_1 [shape=record,label="{1\:\ 0x001d|SYNTHETIC\lSplitter:B:1:0x001d\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x0035 \}\lSplitter:B:1:0x001d\l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|Catch:\{ all \-\> 0x0035 \}\l|if (r0.getCount() \<= 0) goto L_0x0025     \/\/ Catch:\{ all \-\> 0x0035 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|Catch:\{ all \-\> 0x0035 \}\l|r1 = true     \/\/ Catch:\{ all \-\> 0x0035 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|Catch:\{ all \-\> 0x0035 \}\l|r1 = false     \/\/ Catch:\{ all \-\> 0x0035 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|Catch:\{ all \-\> 0x0035 \}\lPHI: r1 \l  PHI: (r1v3 boolean) = (r1v4 boolean), (r1v5 boolean) binds: [B:5:0x0025, B:4:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|logger.trace(\"\{\}: isTableExists '\{\}' returned \{\}\", (java.lang.Object) r5, (java.lang.Object) r6, (java.lang.Object) java.lang.Boolean.valueOf(r1))     \/\/ Catch:\{ all \-\> 0x0035 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|DONT_GENERATE\l|r0.close()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|RETURN\l|return r1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|ExcHandler:  FINALLY\lSplitter:B:1:0x001d\l|java.lang.Throwable r6 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|FINALLY_INSNS\l|r0.close()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0039|throw r6\l}"];
MethodNode[shape=record,label="{public boolean com.j256.ormlite.android.AndroidDatabaseConnection.isTableExists((r5v0 'this' com.j256.ormlite.android.AndroidDatabaseConnection A[IMMUTABLE_TYPE, THIS]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

