digraph "CFG forcom.j256.ormlite.android.AndroidDatabaseConnection.bindArgs(Landroid\/database\/sqlite\/SQLiteStatement;[Ljava\/lang\/Object;[Lcom\/j256\/ormlite\/field\/FieldType;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0003 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: RETURN   \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: ARRAY_LENGTH  (r1 I:int) = (r7 I:?[]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:19:0x007c \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: AGET  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0011 \l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|0x000b: ARITH  (r1 I:int) = (r0 I:int) + (1 int) \l0x000d: INVOKE  (r6 I:android.database.sqlite.SQLiteStatement), (r1 I:int) android.database.sqlite.SQLiteStatement.bindNull(int):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: AGET  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0013: INVOKE  (r2 I:com.j256.ormlite.field.SqlType) = (r2 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getSqlType():com.j256.ormlite.field.SqlType type: VIRTUAL \l0x0017: SGET  (r3 I:int[]) =  com.j256.ormlite.android.AndroidDatabaseConnection.1.$SwitchMap$com$j256$ormlite$field$SqlType int[] \l0x0019: INVOKE  (r4 I:int) = (r2 I:com.j256.ormlite.field.SqlType) com.j256.ormlite.field.SqlType.ordinal():int type: VIRTUAL \l0x001d: AGET  (r3 I:?[int, float]) = (r3 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15] t:[0x0070, 0x0070, 0x0070, 0x0064, 0x0064, 0x0064, 0x0064, 0x0064, 0x0058, 0x0058, 0x0050, 0x0050, 0x0039, 0x0039, 0x0039] \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: NEW_INSTANCE  (r6 I:java.sql.SQLException) =  java.sql.SQLException \l0x0024: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0026: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0029: CONST_STR  (r8 I:java.lang.String) =  \"Unknown sql argument type: \" \l0x002b: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002e: INVOKE  (r7 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0031: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0035: INVOKE  (r6 I:java.sql.SQLException), (r7 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|0x0039: NEW_INSTANCE  (r6 I:java.sql.SQLException) =  java.sql.SQLException \l0x003b: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003d: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0040: CONST_STR  (r8 I:java.lang.String) =  \"Invalid Android type: \" \l0x0042: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0045: INVOKE  (r7 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0048: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004c: INVOKE  (r6 I:java.sql.SQLException), (r7 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x004f|0x004f: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0050|0x0050: ARITH  (r2 I:int) = (r0 I:int) + (1 int) \l0x0052: CHECK_CAST  (r1 I:byte[]) = (byte[]) (r1 I:?[OBJECT, ARRAY]) \l0x0054: INVOKE  \l  (r6 I:android.database.sqlite.SQLiteStatement)\l  (r2 I:int)\l  (r1 I:byte[])\l android.database.sqlite.SQLiteStatement.bindBlob(int, byte[]):void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0058|0x0058: ARITH  (r2 I:int) = (r0 I:int) + (1 int) \l0x005a: CHECK_CAST  (r1 I:java.lang.Number) = (java.lang.Number) (r1 I:?[OBJECT, ARRAY]) \l0x005c: INVOKE  (r3 I:double) = (r1 I:java.lang.Number) java.lang.Number.doubleValue():double type: VIRTUAL \l0x0060: INVOKE  \l  (r6 I:android.database.sqlite.SQLiteStatement)\l  (r2 I:int)\l  (r3 I:double)\l android.database.sqlite.SQLiteStatement.bindDouble(int, double):void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0064|0x0064: ARITH  (r2 I:int) = (r0 I:int) + (1 int) \l0x0066: CHECK_CAST  (r1 I:java.lang.Number) = (java.lang.Number) (r1 I:?[OBJECT, ARRAY]) \l0x0068: INVOKE  (r3 I:long) = (r1 I:java.lang.Number) java.lang.Number.longValue():long type: VIRTUAL \l0x006c: INVOKE  \l  (r6 I:android.database.sqlite.SQLiteStatement)\l  (r2 I:int)\l  (r3 I:long)\l android.database.sqlite.SQLiteStatement.bindLong(int, long):void type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0070|0x0070: ARITH  (r2 I:int) = (r0 I:int) + (1 int) \l0x0072: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) java.lang.Object.toString():java.lang.String type: VIRTUAL \l0x0076: INVOKE  \l  (r6 I:android.database.sqlite.SQLiteStatement)\l  (r2 I:int)\l  (r1 I:java.lang.String)\l android.database.sqlite.SQLiteStatement.bindString(int, java.lang.String):void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0079|0x0079: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x007c|0x007c: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.j256.ormlite.android.AndroidDatabaseConnection.bindArgs((r5 'this' I:com.j256.ormlite.android.AndroidDatabaseConnection A[IMMUTABLE_TYPE, THIS]), (r6 I:android.database.sqlite.SQLiteStatement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.j256.ormlite.field.FieldType[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_19;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_18;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_12;
Node_9 -> Node_14;
Node_9 -> Node_15;
Node_9 -> Node_16;
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_18;
Node_15 -> Node_18;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_3;
}

