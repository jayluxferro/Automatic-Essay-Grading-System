digraph "CFG forcom.j256.ormlite.android.AndroidDatabaseConnection.update(Ljava\/lang\/String;[Ljava\/lang\/Object;[Lcom\/j256\/ormlite\/field\/FieldType;Ljava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r1 I:android.database.sqlite.SQLiteDatabase) = (r2 I:com.j256.ormlite.android.AndroidDatabaseConnection) com.j256.ormlite.android.AndroidDatabaseConnection.db android.database.sqlite.SQLiteDatabase A[Catch:\{ SQLException \-\> 0x0043 \}, TRY_ENTER]\l0x0003: INVOKE  (r1 I:android.database.sqlite.SQLiteStatement) = \l  (r1 I:android.database.sqlite.SQLiteDatabase)\l  (r3 I:java.lang.String)\l android.database.sqlite.SQLiteDatabase.compileStatement(java.lang.String):android.database.sqlite.SQLiteStatement type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0043 \}]\l0x0006: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|SYNTHETIC\lSplitter:B:3:0x0007\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0007\l|0x0007: INVOKE  \l  (r2 I:com.j256.ormlite.android.AndroidDatabaseConnection)\l  (r1 I:android.database.sqlite.SQLiteStatement)\l  (r4 I:java.lang.Object[])\l  (r5 I:com.j256.ormlite.field.FieldType[])\l com.j256.ormlite.android.AndroidDatabaseConnection.bindArgs(android.database.sqlite.SQLiteStatement, java.lang.Object[], com.j256.ormlite.field.FieldType[]):void type: DIRECT A[Catch:\{ SQLException \-\> 0x003e, all \-\> 0x003b \}, TRY_ENTER]\l0x000a: INVOKE  (r1 I:android.database.sqlite.SQLiteStatement) android.database.sqlite.SQLiteStatement.execute():void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x003e, all \-\> 0x003b \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: INVOKE  \l  (r2 I:com.j256.ormlite.android.AndroidDatabaseConnection)\l  (r1 I:android.database.sqlite.SQLiteStatement)\l com.j256.ormlite.android.AndroidDatabaseConnection.closeQuietly(android.database.sqlite.SQLiteStatement):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|SYNTHETIC\lSplitter:B:6:0x0010\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0010\l|0x0010: IGET  (r4 I:android.database.sqlite.SQLiteDatabase) = (r2 I:com.j256.ormlite.android.AndroidDatabaseConnection) com.j256.ormlite.android.AndroidDatabaseConnection.db android.database.sqlite.SQLiteDatabase A[Catch:\{ SQLException \-\> 0x002b, all \-\> 0x0026 \}, TRY_ENTER]\l0x0012: CONST_STR  (r5 I:java.lang.String) =  \"SELECT CHANGES()\" A[Catch:\{ SQLException \-\> 0x002b, all \-\> 0x0026 \}]\l0x0014: INVOKE  (r4 I:android.database.sqlite.SQLiteStatement) = \l  (r4 I:android.database.sqlite.SQLiteDatabase)\l  (r5 I:java.lang.String)\l android.database.sqlite.SQLiteDatabase.compileStatement(java.lang.String):android.database.sqlite.SQLiteStatement type: VIRTUAL A[Catch:\{ SQLException \-\> 0x002b, all \-\> 0x0026 \}]\l0x0017: NOP   A[TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|SYNTHETIC\lSplitter:B:8:0x0018\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0018\l|0x0018: INVOKE  (r0 I:long) = (r4 I:android.database.sqlite.SQLiteStatement) android.database.sqlite.SQLiteStatement.simpleQueryForLong():long type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0024, all \-\> 0x0021 \}, TRY_ENTER]\l0x001b: NOP   A[TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: CAST  (r5 I:int) = (int) (r0 I:long) \l0x001d: INVOKE  \l  (r2 I:com.j256.ormlite.android.AndroidDatabaseConnection)\l  (r4 I:android.database.sqlite.SQLiteStatement)\l com.j256.ormlite.android.AndroidDatabaseConnection.closeQuietly(android.database.sqlite.SQLiteStatement):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|ExcHandler: all null\lSplitter:B:8:0x0018\l|0x0021: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|0x0024: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lExcHandler: SQLException null\lSplitter:B:8:0x0018\l}"];
Node_15 [shape=record,label="{15\:\ 0x0026|ExcHandler: all null\lSplitter:B:6:0x0010\l|0x0026: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x0027|0x0027: INVOKE  \l  (r2 I:com.j256.ormlite.android.AndroidDatabaseConnection)\l  (r0 I:android.database.sqlite.SQLiteStatement)\l com.j256.ormlite.android.AndroidDatabaseConnection.closeQuietly(android.database.sqlite.SQLiteStatement):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x002a|0x002a: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_18 [shape=record,label="{18\:\ 0x002b|0x002b: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x002c: INVOKE  \l  (r2 I:com.j256.ormlite.android.AndroidDatabaseConnection)\l  (r0 I:android.database.sqlite.SQLiteStatement)\l com.j256.ormlite.android.AndroidDatabaseConnection.closeQuietly(android.database.sqlite.SQLiteStatement):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lExcHandler: SQLException null\lSplitter:B:6:0x0010\l}"];
Node_20 [shape=record,label="{20\:\ 0x002f|0x002f: SGET  (r4 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.android.AndroidDatabaseConnection.logger com.j256.ormlite.logger.Logger \l0x0031: CONST_STR  (r0 I:java.lang.String) =  \"\{\} statement is compiled and executed, changed \{\}: \{\}\" \l0x0033: INVOKE  (r1 I:java.lang.Integer) = (r5 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0037: INVOKE  \l  (r4 I:com.j256.ormlite.logger.Logger)\l  (r0 I:java.lang.String)\l  (r6 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object):void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x003a|0x003a: RETURN  (r5 I:int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x003b|ExcHandler: all null\lSplitter:B:3:0x0007\l|0x003b: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_23 [shape=record,label="{23\:\ 0x003c|0x003c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x003e|ExcHandler: SQLException null\lSplitter:B:3:0x0007\l|0x003e: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_25 [shape=record,label="{25\:\ 0x003f|0x003f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0041|ExcHandler: all null\lSplitter:B:29:0x0044\l|0x0041: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_28 [shape=record,label="{28\:\ 0x0043|ExcHandler: SQLException null\lSplitter:B:1:0x0001\l|0x0043: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_29 [shape=record,label="{29\:\ 0x0044|SYNTHETIC\lSplitter:B:29:0x0044\l}"];
Node_30 [shape=record,label="{30\:\ ?|Splitter:B:29:0x0044\l|0x0044: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0041 \}, TRY_ENTER]\l0x0046: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0041 \}]\l0x0049: CONST_STR  (r6 I:java.lang.String) =  \"updating database failed: \" A[Catch:\{ all \-\> 0x0041 \}]\l0x004b: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0041 \}]\l0x004e: INVOKE  (r5 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0041 \}]\l0x0051: INVOKE  (r3 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0041 \}]\l0x0055: INVOKE  (r3 I:java.sql.SQLException) = (r3 I:java.lang.String), (r4 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC A[Catch:\{ all \-\> 0x0041 \}]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0059|0x0059: THROW  (r3 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0041 \}, TRY_LEAVE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x005a|0x005a: INVOKE  \l  (r2 I:com.j256.ormlite.android.AndroidDatabaseConnection)\l  (r0 I:android.database.sqlite.SQLiteStatement)\l com.j256.ormlite.android.AndroidDatabaseConnection.closeQuietly(android.database.sqlite.SQLiteStatement):void type: DIRECT \l}"];
Node_33 [shape=record,label="{33\:\ 0x005d|0x005d: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private int com.j256.ormlite.android.AndroidDatabaseConnection.update((r2 'this' I:com.j256.ormlite.android.AndroidDatabaseConnection A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.j256.ormlite.field.FieldType[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_28;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_24;
Node_3 -> Node_22;
Node_4 -> Node_5;
Node_4 -> Node_24;
Node_4 -> Node_22;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_19;
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_14;
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_20;
Node_11 -> Node_12;
Node_12 -> Node_16;
Node_13 -> Node_18;
Node_14 -> Node_13;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_20;
Node_19 -> Node_18;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_32;
Node_24 -> Node_25;
Node_25 -> Node_29;
Node_26 -> Node_32;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_26;
Node_30 -> Node_31;
Node_32 -> Node_33;
}

