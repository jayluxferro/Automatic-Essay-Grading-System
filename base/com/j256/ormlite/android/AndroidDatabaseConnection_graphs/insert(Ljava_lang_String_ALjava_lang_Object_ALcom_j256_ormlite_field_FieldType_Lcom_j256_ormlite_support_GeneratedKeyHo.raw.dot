digraph "CFG forcom.j256.ormlite.android.AndroidDatabaseConnection.insert(Ljava\/lang\/String;[Ljava\/lang\/Object;[Lcom\/j256\/ormlite\/field\/FieldType;Lcom\/j256\/ormlite\/support\/GeneratedKeyHolder;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r1 I:android.database.sqlite.SQLiteDatabase) = (r2 I:com.j256.ormlite.android.AndroidDatabaseConnection) com.j256.ormlite.android.AndroidDatabaseConnection.db android.database.sqlite.SQLiteDatabase A[Catch:\{ SQLException \-\> 0x002f \}, TRY_ENTER]\l0x0003: INVOKE  (r1 I:android.database.sqlite.SQLiteStatement) = \l  (r1 I:android.database.sqlite.SQLiteDatabase)\l  (r3 I:java.lang.String)\l android.database.sqlite.SQLiteDatabase.compileStatement(java.lang.String):android.database.sqlite.SQLiteStatement type: VIRTUAL A[Catch:\{ SQLException \-\> 0x002f \}]\l0x0006: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|SYNTHETIC\lSplitter:B:3:0x0007\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0007\l|0x0007: INVOKE  \l  (r2 I:com.j256.ormlite.android.AndroidDatabaseConnection)\l  (r1 I:android.database.sqlite.SQLiteStatement)\l  (r4 I:java.lang.Object[])\l  (r5 I:com.j256.ormlite.field.FieldType[])\l com.j256.ormlite.android.AndroidDatabaseConnection.bindArgs(android.database.sqlite.SQLiteStatement, java.lang.Object[], com.j256.ormlite.field.FieldType[]):void type: DIRECT A[Catch:\{ SQLException \-\> 0x002a, all \-\> 0x0027 \}, TRY_ENTER]\l0x000a: INVOKE  (r4 I:long) = (r1 I:android.database.sqlite.SQLiteStatement) android.database.sqlite.SQLiteStatement.executeInsert():long type: VIRTUAL A[Catch:\{ SQLException \-\> 0x002a, all \-\> 0x0027 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0017 A[Catch:\{ SQLException \-\> 0x002a, all \-\> 0x0027 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: INVOKE  (r4 I:java.lang.Long) = (r4 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC A[Catch:\{ SQLException \-\> 0x002a, all \-\> 0x0027 \}]\l0x0014: INVOKE  \l  (r6 I:com.j256.ormlite.support.GeneratedKeyHolder)\l  (r4 I:java.lang.Number)\l com.j256.ormlite.support.GeneratedKeyHolder.addKey(java.lang.Number):void type: INTERFACE A[Catch:\{ SQLException \-\> 0x002a, all \-\> 0x0027 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ SQLException \-\> 0x002a, all \-\> 0x0027 \}]\l0x0018: SGET  (r5 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.android.AndroidDatabaseConnection.logger com.j256.ormlite.logger.Logger A[Catch:\{ SQLException \-\> 0x002a, all \-\> 0x0027 \}]\l0x001a: CONST_STR  (r6 I:java.lang.String) =  \"\{\}: insert statement is compiled and executed, changed \{\}: \{\}\" A[Catch:\{ SQLException \-\> 0x002a, all \-\> 0x0027 \}]\l0x001c: INVOKE  (r0 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ SQLException \-\> 0x002a, all \-\> 0x0027 \}]\l0x0020: INVOKE  \l  (r5 I:com.j256.ormlite.logger.Logger)\l  (r6 I:java.lang.String)\l  (r2 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object):void type: VIRTUAL A[Catch:\{ SQLException \-\> 0x002a, all \-\> 0x0027 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: INVOKE  \l  (r2 I:com.j256.ormlite.android.AndroidDatabaseConnection)\l  (r1 I:android.database.sqlite.SQLiteStatement)\l com.j256.ormlite.android.AndroidDatabaseConnection.closeQuietly(android.database.sqlite.SQLiteStatement):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: RETURN  (r4 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|ExcHandler: all null\lSplitter:B:3:0x0007\l|0x0027: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|ExcHandler: SQLException null\lSplitter:B:3:0x0007\l|0x002a: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|ExcHandler: all null\lSplitter:B:17:0x0030\l|0x002d: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x002f|ExcHandler: SQLException null\lSplitter:B:1:0x0001\l|0x002f: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x0030|SYNTHETIC\lSplitter:B:17:0x0030\l}"];
Node_18 [shape=record,label="{18\:\ ?|Splitter:B:17:0x0030\l|0x0030: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x002d \}, TRY_ENTER]\l0x0032: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x002d \}]\l0x0035: CONST_STR  (r6 I:java.lang.String) =  \"inserting to database failed: \" A[Catch:\{ all \-\> 0x002d \}]\l0x0037: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x002d \}]\l0x003a: INVOKE  (r5 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x002d \}]\l0x003d: INVOKE  (r3 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x002d \}]\l0x0041: INVOKE  (r3 I:java.sql.SQLException) = (r3 I:java.lang.String), (r4 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC A[Catch:\{ all \-\> 0x002d \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0045|0x0045: THROW  (r3 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x002d \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0046|0x0046: INVOKE  \l  (r2 I:com.j256.ormlite.android.AndroidDatabaseConnection)\l  (r0 I:android.database.sqlite.SQLiteStatement)\l com.j256.ormlite.android.AndroidDatabaseConnection.closeQuietly(android.database.sqlite.SQLiteStatement):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x0049|0x0049: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int com.j256.ormlite.android.AndroidDatabaseConnection.insert((r2 'this' I:com.j256.ormlite.android.AndroidDatabaseConnection A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.j256.ormlite.field.FieldType[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.j256.ormlite.support.GeneratedKeyHolder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_12;
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_20;
Node_12 -> Node_13;
Node_13 -> Node_17;
Node_14 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_14;
Node_18 -> Node_19;
Node_20 -> Node_21;
}

