digraph "CFG forcom.j256.ormlite.android.AndroidDatabaseResults.getChar(I)C" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.database.Cursor) = (r4 I:com.j256.ormlite.android.AndroidDatabaseResults) com.j256.ormlite.android.AndroidDatabaseResults.cursor android.database.Cursor \l0x0002: INVOKE  (r0 I:java.lang.String) = (r0 I:android.database.Cursor), (r5 I:int) android.database.Cursor.getString(int):java.lang.String type: INTERFACE \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0033 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: INVOKE  (r2 I:int) = (r0 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0010 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: INVOKE  (r2 I:int) = (r0 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0014: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001c \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: INVOKE  (r5 I:char) = (r0 I:java.lang.String), (r1 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: RETURN  (r5 I:char) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: NEW_INSTANCE  (r0 I:java.sql.SQLException) =  java.sql.SQLException \l0x001e: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0020: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0023: CONST_STR  (r2 I:java.lang.String) =  \"More than 1 character stored in database column: \" \l0x0025: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0028: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x002b: INVOKE  (r5 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002f: INVOKE  (r0 I:java.sql.SQLException), (r5 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|0x0032: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: RETURN  (r1 I:char) \l}"];
MethodNode[shape=record,label="{public char com.j256.ormlite.android.AndroidDatabaseResults.getChar((r4 'this' I:com.j256.ormlite.android.AndroidDatabaseResults A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_11[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
}

