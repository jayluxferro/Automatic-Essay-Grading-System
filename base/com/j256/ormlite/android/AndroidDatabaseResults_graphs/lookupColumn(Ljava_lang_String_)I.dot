digraph "CFG forcom.j256.ormlite.android.AndroidDatabaseResults.lookupColumn(Ljava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r3.columnNameMap != null) goto L_0x001a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|r0 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v4 int) binds: [B:2:0x0005, B:8:0x0016] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0006\-\>B:8:0x0016\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|if (r0 \>= r3.columnNames.length) goto L_0x0019\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b}"];
Node_6 [shape=record,label="{6\:\ 0x0013|if (r3.columnNames[r0].equals(r4) == false) goto L_0x0016\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|RETURN\l|return r0\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|LOOP_END\lLOOP:0: B:3:0x0006\-\>B:8:0x0016\l|int r0 = r0 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|RETURN\l|return \-1\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|java.lang.Integer r4 = r3.columnNameMap.get(r4)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|if (r4 != null) goto L_0x0025\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|RETURN\l|return \-1\l}"];
Node_13 [shape=record,label="{13\:\ 0x0025}"];
Node_14 [shape=record,label="{14\:\ 0x0029|RETURN\l|return r4.intValue()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0015|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0019|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int com.j256.ormlite.android.AndroidDatabaseResults.lookupColumn((r3v0 'this' com.j256.ormlite.android.AndroidDatabaseResults A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_16;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_15[style=dashed];
Node_8 -> Node_3;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_7;
Node_16 -> Node_9;
}

