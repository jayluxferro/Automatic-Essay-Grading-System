digraph "CFG forcom.j256.ormlite.android.apptools.OrmLiteCursorLoader.deliverResult(Landroid\/database\/Cursor;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (isReset() == false) goto L_0x000c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r3 == null) goto L_?\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|r3.close()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|android.database.Cursor r0 = r2.cursor\lr2.cursor = r3\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|if (isStarted() == false) goto L_0x0019\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|super.deliverResult(r3)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|if (r0 == null) goto L_?\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|if (r0 == r3) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d}"];
Node_10 [shape=record,label="{10\:\ 0x0021|if (r0.isClosed() != false) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|r0.close()\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.android.apptools.OrmLiteCursorLoader.deliverResult((r2v0 'this' com.j256.ormlite.android.apptools.OrmLiteCursorLoader A[IMMUTABLE_TYPE, THIS]), (r3v0 android.database.Cursor A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_13;
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_14;
}

