digraph "CFG forcom.j256.ormlite.android.apptools.OrmLiteConfigUtil.getPackageOfClass(Ljava\/io\/File;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.io.BufferedReader) =  java.io.BufferedReader \l0x0002: NEW_INSTANCE  (r1 I:java.io.FileReader) =  java.io.FileReader \l0x0004: INVOKE  (r1 I:java.io.FileReader), (r4 I:java.io.File) java.io.FileReader.\<init\>(java.io.File):void type: DIRECT \l0x0007: INVOKE  (r0 I:java.io.BufferedReader), (r1 I:java.io.Reader) java.io.BufferedReader.\<init\>(java.io.Reader):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|SYNTHETIC\lSplitter:B:1:0x000a\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x000a\l|0x000a: INVOKE  (r4 I:java.lang.String) = (r0 I:java.io.BufferedReader) java.io.BufferedReader.readLine():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0038 \}, TRY_ENTER]\l0x000d: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0011: INVOKE  (r0 I:java.io.BufferedReader) java.io.BufferedReader.close():void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: RETURN  (r4 I:java.lang.String) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: CONST_STR  (r1 I:java.lang.String) =  \"package\" \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|SYNTHETIC\lSplitter:B:7:0x0017\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0017\l|0x0017: INVOKE  (r1 I:boolean) = (r4 I:java.lang.String), (r1 I:java.lang.CharSequence) java.lang.String.contains(java.lang.CharSequence):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0038 \}, TRY_ENTER]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x000a A[Catch:\{ all \-\> 0x0038 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: CONST_STR  (r1 I:java.lang.String) =  \"[ 	;]\" A[Catch:\{ all \-\> 0x0038 \}]\l0x001f: INVOKE  (r4 I:java.lang.String[]) = (r4 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.split(java.lang.String):java.lang.String[] type: VIRTUAL A[Catch:\{ all \-\> 0x0038 \}]\l0x0023: ARRAY_LENGTH  (r1 I:int) = (r4 I:?[]) A[Catch:\{ all \-\> 0x0038 \}]\l0x0024: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0038 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: IF  (r1 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:1:0x000a A[Catch:\{ all \-\> 0x0038 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|0x0027: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0038 \}]\l0x0028: AGET  (r1 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x0038 \}]\l0x002a: CONST_STR  (r3 I:java.lang.String) =  \"package\" A[Catch:\{ all \-\> 0x0038 \}]\l0x002c: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0038 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|0x0030: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x000a A[Catch:\{ all \-\> 0x0038 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: AGET  (r4 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x0038 \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|0x0034: INVOKE  (r0 I:java.io.BufferedReader) java.io.BufferedReader.close():void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|0x0037: RETURN  (r4 I:java.lang.String) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0038|ExcHandler: all null\lSplitter:B:1:0x000a\l|0x0038: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x0039|0x0039: INVOKE  (r0 I:java.io.BufferedReader) java.io.BufferedReader.close():void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x003c|0x003c: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static java.lang.String com.j256.ormlite.android.apptools.OrmLiteConfigUtil.getPackageOfClass((r4 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_17;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_11 -> Node_12[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

