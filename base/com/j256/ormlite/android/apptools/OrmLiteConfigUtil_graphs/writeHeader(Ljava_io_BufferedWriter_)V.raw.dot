digraph "CFG forcom.j256.ormlite.android.apptools.OrmLiteConfigUtil.writeHeader(Ljava\/io\/BufferedWriter;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (35 ?[int, float, short, byte, char]) \l0x0002: INVOKE  (r4 I:java.io.BufferedWriter), (r0 I:char) java.io.BufferedWriter.append(char):java.io.Writer type: VIRTUAL \l0x0005: INVOKE  (r4 I:java.io.BufferedWriter) java.io.BufferedWriter.newLine():void type: VIRTUAL \l0x0008: CONST_STR  (r1 I:java.lang.String) =  \"# generated on \" \l0x000a: INVOKE  (r1 I:java.io.Writer) = \l  (r4 I:java.io.BufferedWriter)\l  (r1 I:java.lang.CharSequence)\l java.io.BufferedWriter.append(java.lang.CharSequence):java.io.Writer type: VIRTUAL \l0x000e: NEW_INSTANCE  (r2 I:java.text.SimpleDateFormat) =  java.text.SimpleDateFormat \l0x0010: CONST_STR  (r3 I:java.lang.String) =  \"yyyy\/MM\/dd hh:mm:ss\" \l0x0012: INVOKE  (r2 I:java.text.SimpleDateFormat), (r3 I:java.lang.String) java.text.SimpleDateFormat.\<init\>(java.lang.String):void type: DIRECT \l0x0015: NEW_INSTANCE  (r3 I:java.util.Date) =  java.util.Date \l0x0017: INVOKE  (r3 I:java.util.Date) java.util.Date.\<init\>():void type: DIRECT \l0x001a: INVOKE  (r2 I:java.lang.String) = (r2 I:java.text.SimpleDateFormat), (r3 I:java.util.Date) java.text.SimpleDateFormat.format(java.util.Date):java.lang.String type: VIRTUAL \l0x001e: INVOKE  (r1 I:java.io.Writer), (r2 I:java.lang.CharSequence) java.io.Writer.append(java.lang.CharSequence):java.io.Writer type: VIRTUAL \l0x0021: INVOKE  (r4 I:java.io.BufferedWriter) java.io.BufferedWriter.newLine():void type: VIRTUAL \l0x0024: INVOKE  (r4 I:java.io.BufferedWriter), (r0 I:char) java.io.BufferedWriter.append(char):java.io.Writer type: VIRTUAL \l0x0027: INVOKE  (r4 I:java.io.BufferedWriter) java.io.BufferedWriter.newLine():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x002a|0x002a: RETURN   \l}"];
MethodNode[shape=record,label="{private static void com.j256.ormlite.android.apptools.OrmLiteConfigUtil.writeHeader((r4 I:java.io.BufferedWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

