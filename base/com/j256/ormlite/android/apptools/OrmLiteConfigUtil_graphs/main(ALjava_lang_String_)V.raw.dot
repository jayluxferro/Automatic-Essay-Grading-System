digraph "CFG forcom.j256.ormlite.android.apptools.OrmLiteConfigUtil.main([Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r2 I:?[]) \l0x0001: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: AGET  (r2 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0007: INVOKE  (r2 I:java.lang.String) com.j256.ormlite.android.apptools.OrmLiteConfigUtil.writeConfigFile(java.lang.String):void type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x000d: CONST_STR  (r0 I:java.lang.String) =  \"Main can take a single file\-name argument.\" \l0x000f: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void com.j256.ormlite.android.apptools.OrmLiteConfigUtil.main((r2 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

