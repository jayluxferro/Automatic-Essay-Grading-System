digraph "CFG forcom.j256.ormlite.android.apptools.OrmLiteConfigUtil.classHasAnnotations(Ljava\/lang\/Class;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x008e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: CONST_CLASS  (r1 I:java.lang.Class\<com.j256.ormlite.table.DatabaseTable\>) =  com.j256.ormlite.table.DatabaseTable.class \l0x0005: INVOKE  (r1 I:java.lang.annotation.Annotation) = (r7 I:java.lang.Class), (r1 I:java.lang.Class) java.lang.Class.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l0x0009: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000d \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: RETURN  (r2 I:boolean) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|SYNTHETIC\lSplitter:B:5:0x000d\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x000d\l|0x000d: INVOKE  (r1 I:java.lang.reflect.Field[]) = (r7 I:java.lang.Class) java.lang.Class.getDeclaredFields():java.lang.reflect.Field[] type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0060 \}, TRY_ENTER]\l0x0010: NOP   A[TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: ARRAY_LENGTH  (r3 I:int) = (r1 I:?[]) \l0x0012: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: IF  (r4 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:16:0x002c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: AGET  (r5 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x0017: CONST_CLASS  (r6 I:java.lang.Class\<com.j256.ormlite.field.DatabaseField\>) =  com.j256.ormlite.field.DatabaseField.class \l0x0019: INVOKE  (r6 I:java.lang.annotation.Annotation) = (r5 I:java.lang.reflect.Field), (r6 I:java.lang.Class) java.lang.reflect.Field.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002b \l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: CONST_CLASS  (r6 I:java.lang.Class\<com.j256.ormlite.field.ForeignCollectionField\>) =  com.j256.ormlite.field.ForeignCollectionField.class \l0x0021: INVOKE  (r5 I:java.lang.annotation.Annotation) = (r5 I:java.lang.reflect.Field), (r6 I:java.lang.Class) java.lang.reflect.Field.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|0x0025: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0028 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|0x0028: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|0x002b: RETURN  (r2 I:boolean) \l}"];
Node_16 [shape=record,label="{16\:\ 0x002c|SYNTHETIC\lSplitter:B:16:0x002c\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x002c\l|0x002c: INVOKE  (r1 I:java.lang.Class) = (r7 I:java.lang.Class) java.lang.Class.getSuperclass():java.lang.Class type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0032 \}, TRY_ENTER]\l0x002f: NOP   A[TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0030|0x0030: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0032|ExcHandler: Throwable null\lSplitter:B:16:0x002c\l|0x0032: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_20 [shape=record,label="{20\:\ 0x0033|0x0033: SGET  (r2 I:java.io.PrintStream) =  java.lang.System.err java.io.PrintStream \l0x0035: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0037: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x003a: CONST_STR  (r4 I:java.lang.String) =  \"Could not get super class for: \" \l0x003c: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003f: INVOKE  (r3 I:java.lang.StringBuilder), (r7 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0042: INVOKE  (r7 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0046: INVOKE  (r2 I:java.io.PrintStream), (r7 I:java.lang.String) java.io.PrintStream.println(java.lang.String):void type: VIRTUAL \l0x0049: SGET  (r7 I:java.io.PrintStream) =  java.lang.System.err java.io.PrintStream \l0x004b: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004d: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0050: CONST_STR  (r3 I:java.lang.String) =  \"     \" \l0x0052: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0055: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0058: INVOKE  (r1 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x005c: INVOKE  (r7 I:java.io.PrintStream), (r1 I:java.lang.String) java.io.PrintStream.println(java.lang.String):void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x005f|0x005f: RETURN  (r0 I:boolean) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0060|ExcHandler: Throwable null\lSplitter:B:5:0x000d\l|0x0060: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_23 [shape=record,label="{23\:\ 0x0061|0x0061: SGET  (r2 I:java.io.PrintStream) =  java.lang.System.err java.io.PrintStream \l0x0063: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0065: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0068: CONST_STR  (r4 I:java.lang.String) =  \"Could not load get delcared fields from: \" \l0x006a: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006d: INVOKE  (r3 I:java.lang.StringBuilder), (r7 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0070: INVOKE  (r7 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0074: INVOKE  (r2 I:java.io.PrintStream), (r7 I:java.lang.String) java.io.PrintStream.println(java.lang.String):void type: VIRTUAL \l0x0077: SGET  (r7 I:java.io.PrintStream) =  java.lang.System.err java.io.PrintStream \l0x0079: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x007b: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x007e: CONST_STR  (r3 I:java.lang.String) =  \"     \" \l0x0080: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0083: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0086: INVOKE  (r1 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x008a: INVOKE  (r7 I:java.io.PrintStream), (r1 I:java.lang.String) java.io.PrintStream.println(java.lang.String):void type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x008d|0x008d: RETURN  (r0 I:boolean) \l}"];
Node_25 [shape=record,label="{25\:\ 0x008e|0x008e: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private static boolean com.j256.ormlite.android.apptools.OrmLiteConfigUtil.classHasAnnotations((r7 I:java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/Class\<, *\>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_25;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_22;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_14;
Node_12 -> Node_15[style=dashed];
Node_14 -> Node_8;
Node_16 -> Node_17;
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_0;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24;
}

