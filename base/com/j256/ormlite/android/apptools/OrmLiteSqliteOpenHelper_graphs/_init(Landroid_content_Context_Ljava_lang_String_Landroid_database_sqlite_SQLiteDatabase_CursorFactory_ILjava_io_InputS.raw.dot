digraph "CFG forcom.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.\<init\>(Landroid\/content\/Context;Ljava\/lang\/String;Landroid\/database\/sqlite\/SQLiteDatabase$CursorFactory;ILjava\/io\/InputStream;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r0 I:android.database.sqlite.SQLiteOpenHelper)\l  (r1 I:android.content.Context)\l  (r2 I:java.lang.String)\l  (r3 I:android.database.sqlite.SQLiteDatabase$CursorFactory)\l  (r4 I:int)\l android.database.sqlite.SQLiteOpenHelper.\<init\>(android.content.Context, java.lang.String, android.database.sqlite.SQLiteDatabase$CursorFactory, int):void type: DIRECT \l0x0003: NEW_INSTANCE  (r1 I:com.j256.ormlite.android.AndroidConnectionSource) =  com.j256.ormlite.android.AndroidConnectionSource \l0x0005: INVOKE  \l  (r1 I:com.j256.ormlite.android.AndroidConnectionSource)\l  (r0 I:android.database.sqlite.SQLiteOpenHelper)\l com.j256.ormlite.android.AndroidConnectionSource.\<init\>(android.database.sqlite.SQLiteOpenHelper):void type: DIRECT \l0x0008: IPUT  \l  (r1 I:com.j256.ormlite.android.AndroidConnectionSource)\l  (r0 I:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper)\l com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource com.j256.ormlite.android.AndroidConnectionSource \l0x000a: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000b: IPUT  \l  (r1 I:boolean)\l  (r0 I:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper)\l com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|SYNTHETIC\lSplitter:B:4:0x0011\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x0011\l|0x0011: NEW_INSTANCE  (r2 I:java.io.BufferedReader) =  java.io.BufferedReader A[Catch:\{ SQLException \-\> 0x0035 \}, TRY_ENTER]\l0x0013: NEW_INSTANCE  (r3 I:java.io.InputStreamReader) =  java.io.InputStreamReader A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x0015: INVOKE  \l  (r3 I:java.io.InputStreamReader)\l  (r5 I:java.io.InputStream)\l java.io.InputStreamReader.\<init\>(java.io.InputStream):void type: DIRECT A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x0018: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (4096(0x1000, float:5.74E\-42) ?[int, float, short, byte, char])\l A[Catch:\{ SQLException \-\> 0x0035 \}]\l0x001a: INVOKE  \l  (r2 I:java.io.BufferedReader)\l  (r3 I:java.io.Reader)\l  (r4 I:int)\l java.io.BufferedReader.\<init\>(java.io.Reader, int):void type: DIRECT A[Catch:\{ SQLException \-\> 0x0035 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|SYNTHETIC\lSplitter:B:6:0x001d\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x001d\l|0x001d: INVOKE  (r3 I:java.util.List) = (r2 I:java.io.BufferedReader) com.j256.ormlite.table.DatabaseTableConfigLoader.loadDatabaseConfigFromReader(java.io.BufferedReader):java.util.List type: STATIC A[Catch:\{ SQLException \-\> 0x002f, all \-\> 0x002b \}, TRY_ENTER]\l0x0021: INVOKE  (r3 I:java.util.Collection) com.j256.ormlite.dao.DaoManager.addCachedDatabaseConfigs(java.util.Collection):void type: STATIC A[Catch:\{ SQLException \-\> 0x002f, all \-\> 0x002b \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: INVOKE  (r2 I:java.io.Closeable) com.j256.ormlite.misc.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l0x0027: INVOKE  (r1 I:java.io.Closeable) com.j256.ormlite.misc.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|ExcHandler: all null\lSplitter:B:6:0x001d\l|0x002b: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x002d: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|ExcHandler: SQLException null\lSplitter:B:6:0x001d\l|0x002f: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|0x0030: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0031: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|ExcHandler: all null\lSplitter:B:17:0x0036\l|0x0033: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|ExcHandler: SQLException null\lSplitter:B:4:0x0011\l|0x0035: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|SYNTHETIC\lSplitter:B:17:0x0036\l}"];
Node_18 [shape=record,label="{18\:\ ?|Splitter:B:17:0x0036\l|0x0036: NEW_INSTANCE  (r2 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException A[Catch:\{ all \-\> 0x0033 \}, TRY_ENTER]\l0x0038: CONST_STR  (r4 I:java.lang.String) =  \"Could not load object config file\" A[Catch:\{ all \-\> 0x0033 \}]\l0x003a: INVOKE  \l  (r2 I:java.lang.IllegalStateException)\l  (r4 I:java.lang.String)\l  (r3 I:java.lang.Throwable)\l java.lang.IllegalStateException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x0033 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x003d|0x003d: THROW  (r2 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0033 \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x003e|0x003e: INVOKE  (r1 I:java.io.Closeable) com.j256.ormlite.misc.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l0x0041: INVOKE  (r5 I:java.io.Closeable) com.j256.ormlite.misc.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_21 [shape=record,label="{21\:\ 0x0044|0x0044: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.\<init\>((r0 'this' I:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper A[IMMUTABLE_TYPE, THIS]), (r1 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.database.sqlite.SQLiteDatabase$CursorFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_16;
Node_5 -> Node_6;
Node_5 -> Node_16;
Node_6 -> Node_7;
Node_6 -> Node_12;
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_7 -> Node_12;
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_20;
Node_12 -> Node_13;
Node_13 -> Node_17;
Node_14 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_14;
Node_18 -> Node_19;
Node_20 -> Node_21;
}

