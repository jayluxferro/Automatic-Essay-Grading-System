digraph "CFG forcom.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.getRuntimeExceptionDao(Ljava\/lang\/Class;)Lcom\/j256\/ormlite\/dao\/RuntimeExceptionDao;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r0 I:com.j256.ormlite.dao.Dao) = \l  (r4 I:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper)\l  (r5 I:java.lang.Class)\l com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.getDao(java.lang.Class):com.j256.ormlite.dao.Dao type: VIRTUAL A[Catch:\{ SQLException \-\> 0x000a \}, TRY_ENTER]\l0x0004: NEW_INSTANCE  (r1 I:com.j256.ormlite.dao.RuntimeExceptionDao) =  com.j256.ormlite.dao.RuntimeExceptionDao A[Catch:\{ SQLException \-\> 0x000a \}]\l0x0006: INVOKE  \l  (r1 I:com.j256.ormlite.dao.RuntimeExceptionDao)\l  (r0 I:com.j256.ormlite.dao.Dao)\l com.j256.ormlite.dao.RuntimeExceptionDao.\<init\>(com.j256.ormlite.dao.Dao):void type: DIRECT A[Catch:\{ SQLException \-\> 0x000a \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: RETURN  (r1 I:D) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|ExcHandler: SQLException null\lSplitter:B:0:0x0000\l|0x000a: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: NEW_INSTANCE  (r1 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x000d: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000f: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0012: CONST_STR  (r3 I:java.lang.String) =  \"Could not create RuntimeExcepitionDao for class \" \l0x0014: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0017: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x001a: INVOKE  (r5 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x001e: INVOKE  \l  (r1 I:java.lang.RuntimeException)\l  (r5 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public D com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.getRuntimeExceptionDao((r4 'this' I:com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.Class\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<D:, Lcom\/j256\/ormlite\/dao\/RuntimeExceptionDao\<, TT;*\>;T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Class\<, TT;\>;)TD;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

