digraph "CFG forcom.j256.ormlite.logger.LoggerFactory.LogType.isAvailable()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r3 I:com.j256.ormlite.logger.LoggerFactory$LogType) com.j256.ormlite.logger.LoggerFactory.LogType.isAvailableTestClass():boolean type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|SYNTHETIC\lSplitter:B:3:0x0008\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0008\l|0x0008: INVOKE  (r0 I:java.lang.Class) = (r3 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL A[Catch:\{ Exception \-\> 0x001b \}, TRY_ENTER]\l0x000c: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Class) java.lang.Class.getName():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x001b \}]\l0x0010: INVOKE  (r0 I:com.j256.ormlite.logger.Log) = \l  (r3 I:com.j256.ormlite.logger.LoggerFactory$LogType)\l  (r0 I:java.lang.String)\l com.j256.ormlite.logger.LoggerFactory.LogType.createLogFromClassName(java.lang.String):com.j256.ormlite.logger.Log type: DIRECT A[Catch:\{ Exception \-\> 0x001b \}]\l0x0014: SGET  (r2 I:com.j256.ormlite.logger.Log$Level) =  com.j256.ormlite.logger.Log.Level.INFO com.j256.ormlite.logger.Log$Level A[Catch:\{ Exception \-\> 0x001b \}]\l0x0016: INVOKE  \l  (r0 I:com.j256.ormlite.logger.Log)\l  (r2 I:com.j256.ormlite.logger.Log$Level)\l com.j256.ormlite.logger.Log.isLevelEnabled(com.j256.ormlite.logger.Log$Level):boolean type: INTERFACE A[Catch:\{ Exception \-\> 0x001b \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: RETURN  (r0 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: RETURN  (r1 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lExcHandler: Exception null\lSplitter:B:3:0x0008\l}"];
MethodNode[shape=record,label="{public boolean com.j256.ormlite.logger.LoggerFactory.LogType.isAvailable((r3 'this' I:com.j256.ormlite.logger.LoggerFactory$LogType A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_8 -> Node_7;
}

