digraph "CFG forcom.j256.ormlite.logger.LoggerFactory.LogType.isAvailableTestClass()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:java.lang.String) = (r1 I:com.j256.ormlite.logger.LoggerFactory$LogType) com.j256.ormlite.logger.LoggerFactory.LogType.detectClassName java.lang.String A[Catch:\{ Exception \-\> 0x0007 \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ Exception \-\> 0x0007 \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: RETURN  (r0 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lExcHandler: Exception null\lSplitter:B:0:0x0000\l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|0x0008: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean com.j256.ormlite.logger.LoggerFactory.LogType.isAvailableTestClass((r1 'this' I:com.j256.ormlite.logger.LoggerFactory$LogType A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_4 -> Node_6;
Node_5 -> Node_4;
}

