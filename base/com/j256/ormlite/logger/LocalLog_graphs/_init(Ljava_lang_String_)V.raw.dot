digraph "CFG forcom.j256.ormlite.logger.LocalLog.\<init\>(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r5 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: INVOKE  (r0 I:java.lang.String) = (r6 I:java.lang.String) com.j256.ormlite.logger.LoggerFactory.getSimpleClassName(java.lang.String):java.lang.String type: STATIC \l0x0007: IPUT  \l  (r0 I:java.lang.String)\l  (r5 I:com.j256.ormlite.logger.LocalLog)\l com.j256.ormlite.logger.LocalLog.className java.lang.String \l0x0009: SGET  (r0 I:java.util.List\<com.j256.ormlite.logger.LocalLog$PatternLevel\>) =  com.j256.ormlite.logger.LocalLog.classLevels java.util.List \l0x000b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x003d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: SGET  (r0 I:java.util.List\<com.j256.ormlite.logger.LocalLog$PatternLevel\>) =  com.j256.ormlite.logger.LocalLog.classLevels java.util.List \l0x0010: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: INVOKE  (r2 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x003d \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x001e: CHECK_CAST  (r2 I:com.j256.ormlite.logger.LocalLog$PatternLevel) = (com.j256.ormlite.logger.LocalLog$PatternLevel) (r2 I:?[OBJECT, ARRAY]) \l0x0020: IGET  (r3 I:java.util.regex.Pattern) = (r2 I:com.j256.ormlite.logger.LocalLog$PatternLevel) com.j256.ormlite.logger.LocalLog.PatternLevel.pattern java.util.regex.Pattern \l0x0022: INVOKE  (r3 I:java.util.regex.Matcher) = \l  (r3 I:java.util.regex.Pattern)\l  (r6 I:java.lang.CharSequence)\l java.util.regex.Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher type: VIRTUAL \l0x0026: INVOKE  (r3 I:boolean) = (r3 I:java.util.regex.Matcher) java.util.regex.Matcher.matches():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0014 \l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003a \l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: IGET  (r3 I:com.j256.ormlite.logger.Log$Level) = (r2 I:com.j256.ormlite.logger.LocalLog$PatternLevel) com.j256.ormlite.logger.LocalLog.PatternLevel.level com.j256.ormlite.logger.Log$Level \l0x0030: INVOKE  (r3 I:int) = (r3 I:com.j256.ormlite.logger.Log$Level) com.j256.ormlite.logger.Log.Level.ordinal():int type: VIRTUAL \l0x0034: INVOKE  (r4 I:int) = (r1 I:com.j256.ormlite.logger.Log$Level) com.j256.ormlite.logger.Log.Level.ordinal():int type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:3:0x0014 \l}"];
Node_10 [shape=record,label="{10\:\ 0x003a|0x003a: IGET  (r1 I:com.j256.ormlite.logger.Log$Level) = (r2 I:com.j256.ormlite.logger.LocalLog$PatternLevel) com.j256.ormlite.logger.LocalLog.PatternLevel.level com.j256.ormlite.logger.Log$Level \l}"];
Node_11 [shape=record,label="{11\:\ 0x003d|0x003d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x007c \l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|0x003f: CONST_STR  (r6 I:java.lang.String) =  \"com.j256.ormlite.logger.level\" \l0x0041: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.String) java.lang.System.getProperty(java.lang.String):java.lang.String type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0045|0x0045: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x004a \l}"];
Node_14 [shape=record,label="{14\:\ 0x0047|0x0047: SGET  (r1 I:com.j256.ormlite.logger.Log$Level) =  com.j256.ormlite.logger.LocalLog.DEFAULT_LEVEL com.j256.ormlite.logger.Log$Level \l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|SYNTHETIC\lSplitter:B:15:0x004a\l}"];
Node_16 [shape=record,label="{16\:\ ?|Splitter:B:15:0x004a\l|0x004a: INVOKE  (r0 I:java.lang.String) = (r6 I:java.lang.String) java.lang.String.toUpperCase():java.lang.String type: VIRTUAL A[Catch:\{ IllegalArgumentException \-\> 0x0054 \}, TRY_ENTER]\l0x004e: INVOKE  (r0 I:com.j256.ormlite.logger.Log$Level) = (r0 I:java.lang.String) com.j256.ormlite.logger.Log.Level.valueOf(java.lang.String):com.j256.ormlite.logger.Log$Level type: STATIC A[Catch:\{ IllegalArgumentException \-\> 0x0054 \}]\l0x0051: NOP   A[TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0052|0x0052: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0054|SYNTHETIC\lSplitter:B:18:0x0054\l}"];
Node_19 [shape=record,label="{19\:\ ?|Splitter:B:18:0x0054\l|0x0054: SGET  (r0 I:java.util.Locale) =  java.util.Locale.ENGLISH java.util.Locale A[Catch:\{ IllegalArgumentException \-\> 0x005f \}, ExcHandler: IllegalArgumentException null, TRY_ENTER]\l0x0056: INVOKE  (r0 I:java.lang.String) = (r6 I:java.lang.String), (r0 I:java.util.Locale) java.lang.String.toUpperCase(java.util.Locale):java.lang.String type: VIRTUAL A[Catch:\{ IllegalArgumentException \-\> 0x005f \}]\l0x005a: INVOKE  (r0 I:com.j256.ormlite.logger.Log$Level) = (r0 I:java.lang.String) com.j256.ormlite.logger.Log.Level.valueOf(java.lang.String):com.j256.ormlite.logger.Log$Level type: STATIC A[Catch:\{ IllegalArgumentException \-\> 0x005f \}]\l0x005d: NOP   A[TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x005f|ExcHandler: IllegalArgumentException null\lSplitter:B:18:0x0054\l|0x005f: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_22 [shape=record,label="{22\:\ 0x0060|0x0060: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0062: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0064: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0067: CONST_STR  (r3 I:java.lang.String) =  \"Level '\" \l0x0069: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006c: INVOKE  (r2 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006f: CONST_STR  (r6 I:java.lang.String) =  \"' was not found\" \l0x0071: INVOKE  (r2 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0074: INVOKE  (r6 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0078: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r6 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x007b|0x007b: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x007c|0x007c: IPUT  \l  (r1 I:com.j256.ormlite.logger.Log$Level)\l  (r5 I:com.j256.ormlite.logger.LocalLog)\l com.j256.ormlite.logger.LocalLog.level com.j256.ormlite.logger.Log$Level \l}"];
Node_25 [shape=record,label="{25\:\ 0x007e|0x007e: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.logger.LocalLog.\<init\>((r5 'this' I:com.j256.ormlite.logger.LocalLog A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_3;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_3;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_3;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_24;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_24;
Node_15 -> Node_16;
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_24;
Node_18 -> Node_19;
Node_18 -> Node_21;
Node_19 -> Node_17;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_24 -> Node_25;
}

