digraph "CFG forcom.j256.ormlite.logger.LocalLog.readLevelResourceFile(Ljava\/io\/InputStream;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002b \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0002\l|0x0002: INVOKE  (r0 I:java.util.List) = (r4 I:java.io.InputStream) com.j256.ormlite.logger.LocalLog.configureClassLevels(java.io.InputStream):java.util.List type: STATIC A[Catch:\{ IOException \-\> 0x000c \}, TRY_ENTER]\l0x0005: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r4 I:java.io.Closeable) com.j256.ormlite.misc.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|ExcHandler: all null\lSplitter:B:7:0x000d\l|0x000a: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|ExcHandler: IOException null\lSplitter:B:1:0x0002\l|0x000c: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|SYNTHETIC\lSplitter:B:7:0x000d\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x000d\l|0x000d: SGET  (r1 I:java.io.PrintStream) =  java.lang.System.err java.io.PrintStream A[Catch:\{ all \-\> 0x000a \}, TRY_ENTER]\l0x000f: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x000a \}]\l0x0011: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x000a \}]\l0x0014: CONST_STR  (r3 I:java.lang.String) =  \"IO exception reading the log properties file '\/ormliteLocalLog.properties': \" A[Catch:\{ all \-\> 0x000a \}]\l0x0016: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x000a \}]\l0x0019: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x000a \}]\l0x001c: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x000a \}]\l0x0020: INVOKE  (r1 I:java.io.PrintStream), (r0 I:java.lang.String) java.io.PrintStream.println(java.lang.String):void type: VIRTUAL A[Catch:\{ all \-\> 0x000a \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: INVOKE  (r4 I:java.io.Closeable) com.j256.ormlite.misc.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: INVOKE  (r4 I:java.io.Closeable) com.j256.ormlite.misc.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|0x002b: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|0x002c: RETURN  \l  (r0 I:java.util.List\<com.j256.ormlite.logger.LocalLog$PatternLevel\>)\l \l}"];
MethodNode[shape=record,label="{static java.util.List\<com.j256.ormlite.logger.LocalLog$PatternLevel\> com.j256.ormlite.logger.LocalLog.readLevelResourceFile((r4 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/io\/InputStream;, ), Ljava\/util\/List\<, Lcom\/j256\/ormlite\/logger\/LocalLog$PatternLevel;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_12;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_13;
Node_4 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_4;
Node_8 -> Node_9;
Node_8 -> Node_4;
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
}

