digraph "CFG forcom.j256.ormlite.logger.Logger.buildFullMessage(Ljava\/lang\/String;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;[Ljava\/lang\/Object;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = 0\lr1 = null\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|LOOP_START\lPHI: r0 r1 r2 \l  PHI: (r0v1 int) = (r0v0 int), (r0v4 int) binds: [B:0:0x0000, B:22:0x004c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 java.lang.StringBuilder) = (r1v0 java.lang.StringBuilder), (r1v2 java.lang.StringBuilder) binds: [B:0:0x0000, B:22:0x004c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:22:0x004c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:22:0x004c\l|int r3 = r6.indexOf(ARG_STRING, r0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|if (r3 != \-1) goto L_0x001b\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r1 != null) goto L_0x000f\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|RETURN\l|return r6\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|r1.append(r6, r0, r6.length())\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|RETURN\l|return r1.toString()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|if (r1 != null) goto L_0x0024\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|java.lang.StringBuilder r1 = new java.lang.StringBuilder(128)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|PHI: r1 \l  PHI: (r1v2 java.lang.StringBuilder) = (r1v1 java.lang.StringBuilder), (r1v3 java.lang.StringBuilder) binds: [B:7:0x001b, B:8:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|r1.append(r6, r0, r3)\lint r0 = ARG_STRING.length() + r3\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|if (r10 != null) goto L_0x0044\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|if (r2 != 0) goto L_0x0036\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|appendArg(r1, r7)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0036}"];
Node_14 [shape=record,label="{14\:\ 0x0037|if (r2 != 1) goto L_0x003d\l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|appendArg(r1, r8)\l}"];
Node_16 [shape=record,label="{16\:\ 0x003d}"];
Node_17 [shape=record,label="{17\:\ 0x003e|if (r2 != 2) goto L_0x004c\l}"];
Node_18 [shape=record,label="{18\:\ 0x0040|appendArg(r1, r9)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0044}"];
Node_20 [shape=record,label="{20\:\ 0x0045|if (r2 \>= r10.length) goto L_0x004c\l}"];
Node_21 [shape=record,label="{21\:\ 0x0047|appendArg(r1, r10[r2])\l}"];
Node_22 [shape=record,label="{22\:\ 0x004c|LOOP_END\lLOOP:0: B:1:0x0003\-\>B:22:0x004c\l|int r2 = r2 + 1\l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x004c|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x004c|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x004c|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x004c|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x004c|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x004c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private java.lang.String com.j256.ormlite.logger.Logger.buildFullMessage((r5v0 'this' com.j256.ormlite.logger.Logger A[IMMUTABLE_TYPE, THIS]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_7;
Node_2 -> Node_23[style=dashed];
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_19;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_25;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_26;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_27;
Node_18 -> Node_28;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_29;
Node_21 -> Node_24;
Node_22 -> Node_1;
Node_23 -> Node_3;
Node_24 -> Node_22;
Node_25 -> Node_22;
Node_26 -> Node_22;
Node_27 -> Node_22;
Node_28 -> Node_22;
Node_29 -> Node_22;
}

