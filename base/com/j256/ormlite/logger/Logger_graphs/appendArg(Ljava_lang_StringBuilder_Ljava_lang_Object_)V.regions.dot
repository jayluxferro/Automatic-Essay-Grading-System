digraph "CFG forcom.j256.ormlite.logger.Logger.appendArg(Ljava\/lang\/StringBuilder;Ljava\/lang\/Object;)V" {
subgraph cluster_Region_994674331 {
label = "R(1:(1:(1:3)(1:(3:6|(2:(1:9)(0)|10)|11)(1:12)))(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1285910505 {
label = "IF [B:1:0x0002] THEN: R(1:(1:3)(1:(3:6|(2:(1:9)(0)|10)|11)(1:12))) ELSE: R(0)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r5 != UNKNOWN_ARG) goto L_0x0005\l}"];
subgraph cluster_Region_985013437 {
label = "R(1:(1:3)(1:(3:6|(2:(1:9)(0)|10)|11)(1:12)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1640437761 {
label = "IF [B:2:0x0005] THEN: R(1:3) ELSE: R(1:(3:6|(2:(1:9)(0)|10)|11)(1:12))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r5 == null) goto L_0x0007\l}"];
subgraph cluster_Region_382543868 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|r4.append(\"null\")\l}"];
}
subgraph cluster_Region_1903216875 {
label = "R(1:(3:6|(2:(1:9)(0)|10)|11)(1:12)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2074702220 {
label = "IF [B:5:0x0015] THEN: R(3:6|(2:(1:9)(0)|10)|11) ELSE: R(1:12) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0015|if (r5.getClass().isArray() == true) goto L_0x0017\l}"];
subgraph cluster_Region_1082612984 {
label = "R(3:6|(2:(1:9)(0)|10)|11)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0017|r4.append('[')\lint int r0 = java.lang.reflect.Array.getLength(r5)\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_779413279 {
label = "LOOP:0: (2:(1:9)(0)|10)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0021|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:6:0x0017, B:10:0x002a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x0021\-\>B:10:0x002a\l|if (r1 \< r0) goto L_0x0023\l}"];
subgraph cluster_Region_1146251188 {
label = "R(2:(1:9)(0)|10)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2031737041 {
label = "IF [B:8:0x0023] THEN: R(1:9) ELSE: R(0)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0023|if (r1 \> 0) goto L_0x0025\l}"];
subgraph cluster_Region_578251240 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0025|r4.append(\", \")\l}"];
}
subgraph cluster_Region_1568295069 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_10 [shape=record,label="{10\:\ 0x002a|LOOP_END\lLOOP:0: B:7:0x0021\-\>B:10:0x002a\l|r4.append(java.lang.reflect.Array.get(r5, r1))\lr1++\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x0034|r4.append(']')\l}"];
}
subgraph cluster_Region_708502601 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x003a|r4.append(r5.toString())\l}"];
}
}
}
}
}
subgraph cluster_Region_439342483 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000d}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0034|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x002a|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x002a|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.j256.ormlite.logger.Logger.appendArg((r3v0 'this' com.j256.ormlite.logger.Logger A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_19[style=dashed];
Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_3 -> Node_17;
Node_5 -> Node_6;
Node_5 -> Node_12[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_13[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_15[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_7;
Node_11 -> Node_18;
Node_12 -> Node_16;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_13 -> Node_11;
Node_14 -> Node_10;
Node_15 -> Node_10;
}

