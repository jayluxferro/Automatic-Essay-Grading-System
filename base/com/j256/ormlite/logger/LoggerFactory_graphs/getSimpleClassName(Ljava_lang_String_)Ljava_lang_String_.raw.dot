digraph "CFG forcom.j256.ormlite.logger.LoggerFactory.getSimpleClassName(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \".\" \l0x0002: INVOKE  (r0 I:java.lang.String[]) = (r3 I:java.lang.String), (r0 I:java.lang.String) java.lang.String.split(java.lang.String):java.lang.String[] type: VIRTUAL \l0x0006: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l0x0007: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r1 I:?[int, byte, short, char]) \> (r2 I:?[int, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: RETURN  (r3 I:java.lang.String) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: ARRAY_LENGTH  (r3 I:int) = (r0 I:?[]) \l0x000c: ARITH  (r3 I:int) = (r3 I:int) \- (r2 I:int) \l0x000d: AGET  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: RETURN  (r3 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static java.lang.String com.j256.ormlite.logger.LoggerFactory.getSimpleClassName((r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

