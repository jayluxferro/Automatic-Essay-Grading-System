digraph "CFG forcom.j256.ormlite.misc.TransactionManager.callInTransaction(Lcom\/j256\/ormlite\/support\/DatabaseConnection;ZLcom\/j256\/ormlite\/db\/DatabaseType;Ljava\/util\/concurrent\/Callable;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = null\lr1 = false\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r5 != false) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|SYNTHETIC\lSplitter:B:2:0x0005\l}"];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ all \-\> 0x000e \}\lSplitter:B:2:0x0005\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|Catch:\{ all \-\> 0x000e \}\l|if (r6.isNestedSavePointsSupported() == false) goto L_0x000c     \/\/ Catch:\{ all \-\> 0x000e \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|Catch:\{ all \-\> 0x000e \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|Catch:\{ all \-\> 0x000e \}\l|r5 = false     \/\/ Catch:\{ all \-\> 0x000e \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|Catch:\{ all \-\> 0x000e \}\lPHI: r1 \l  PHI: (r1v8 boolean) = (r1v4 boolean), (r1v0 boolean) binds: [B:19:0x002d, B:2:0x0005] A[DONT_GENERATE, DONT_INLINE]\lExcHandler: all (th java.lang.Throwable)\lSplitter:B:2:0x0005\l|java.lang.Throwable r5 = th     \/\/ Catch:\{ all \-\> 0x000e \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|Catch:\{ all \-\> 0x000e \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|Catch:\{ all \-\> 0x000e \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|Catch:\{ all \-\> 0x000e \}\l|if (r4.isAutoCommitSupported() == false) goto L_0x002d     \/\/ Catch:\{ all \-\> 0x000e \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|Catch:\{ all \-\> 0x000e \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|Catch:\{ all \-\> 0x000e \}\l|if (r4.isAutoCommit() == false) goto L_0x002d     \/\/ Catch:\{ all \-\> 0x000e \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|Catch:\{ all \-\> 0x000e \}\l|r4.setAutoCommit(false)     \/\/ Catch:\{ all \-\> 0x000e \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|SYNTHETIC\lSplitter:B:14:0x0020\l}"];
Node_15 [shape=record,label="{15\:\ ?|Catch:\{ all \-\> 0x0029 \}\lSplitter:B:14:0x0020\l|logger.debug(\"had to set auto\-commit to false\")     \/\/ Catch:\{ all \-\> 0x0029 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0027|r1 = true\l}"];
Node_17 [shape=record,label="{17\:\ 0x0029|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:14:0x0020\l|java.lang.Throwable r5 = th\l}"];
Node_18 [shape=record,label="{18\:\ 0x002a|r1 = true\l}"];
Node_19 [shape=record,label="{19\:\ 0x002d|SYNTHETIC\lPHI: r1 \l  PHI: (r1v4 boolean) = (r1v0 boolean), (r1v0 boolean), (r1v7 boolean) binds: [B:10:0x0015, B:12:0x001b, B:16:0x0027] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:19:0x002d\l}"];
Node_20 [shape=record,label="{20\:\ ?|Catch:\{ all \-\> 0x000e \}\lSplitter:B:19:0x002d\l|java.lang.StringBuilder r5 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x000e \}\lr5.append(SAVE_POINT_PREFIX)     \/\/ Catch:\{ all \-\> 0x000e \}\lr5.append(savePointCounter.incrementAndGet())     \/\/ Catch:\{ all \-\> 0x000e \}\ljava.sql.Savepoint r0 = r4.setSavePoint(r5.toString())     \/\/ Catch:\{ all \-\> 0x000e \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0048|Catch:\{ all \-\> 0x000e \}\l|if (r0 != null) goto L_0x0052     \/\/ Catch:\{ all \-\> 0x000e \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x004a|Catch:\{ all \-\> 0x000e \}\l|logger.debug(\"started savePoint transaction\")     \/\/ Catch:\{ all \-\> 0x000e \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x0052|Catch:\{ all \-\> 0x000e \}\l|logger.debug(\"started savePoint transaction \{\}\", (java.lang.Object) r0.getSavepointName())     \/\/ Catch:\{ all \-\> 0x000e \}\l}"];
Node_24 [shape=record,label="{24\:\ 0x005d|r5 = r1\lr1 = true\l}"];
Node_25 [shape=record,label="{25\:\ 0x005f|SYNTHETIC\lPHI: r0 r1 r5 \l  PHI: (r0v1 java.sql.Savepoint) = (r0v4 java.sql.Savepoint), (r0v0 java.sql.Savepoint) binds: [B:24:0x005d, B:6:0x000c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 boolean) = (r1v5 boolean), (r1v0 boolean) binds: [B:24:0x005d, B:6:0x000c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 boolean) = (r5v8 boolean), (r5v16 boolean) binds: [B:24:0x005d, B:6:0x000c] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:25:0x005f\l}"];
Node_26 [shape=record,label="{26\:\ ?|Catch:\{ SQLException \-\> 0x008e, Exception \-\> 0x0079, all \-\> 0x0075 \}\lSplitter:B:25:0x005f\l|java.lang.Object r6 = r7.call()     \/\/ Catch:\{ SQLException \-\> 0x008e, Exception \-\> 0x0079, all \-\> 0x0075 \}\l}"];
Node_27 [shape=record,label="{27\:\ 0x0063|Catch:\{ SQLException \-\> 0x008e, Exception \-\> 0x0079, all \-\> 0x0075 \}\l|if (r1 == false) goto L_0x0068     \/\/ Catch:\{ SQLException \-\> 0x008e, Exception \-\> 0x0079, all \-\> 0x0075 \}\l}"];
Node_28 [shape=record,label="{28\:\ 0x0065|Catch:\{ SQLException \-\> 0x008e, Exception \-\> 0x0079, all \-\> 0x0075 \}\l|commit(r4, r0)     \/\/ Catch:\{ SQLException \-\> 0x008e, Exception \-\> 0x0079, all \-\> 0x0075 \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x0068|if (r5 == false) goto L_0x0074\l}"];
Node_30 [shape=record,label="{30\:\ 0x006a|r4.setAutoCommit(true)\llogger.debug(\"restored auto\-commit to true\")\l}"];
Node_31 [shape=record,label="{31\:\ 0x0074|RETURN\l|return r6\l}"];
Node_32 [shape=record,label="{32\:\ 0x0075|ExcHandler: all (r6v5 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:38:0x0080\l|java.lang.Throwable r6 = move\-exception\l}"];
Node_33 [shape=record,label="{33\:\ 0x0076|r1 = r5\lr5 = r6\l}"];
Node_34 [shape=record,label="{34\:\ 0x0079|ExcHandler: Exception (r6v3 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:25:0x005f\l|java.lang.Exception r6 = move\-exception\l}"];
Node_35 [shape=record,label="{35\:\ 0x007a|if (r1 == false) goto L_0x0087\l}"];
Node_36 [shape=record,label="{36\:\ 0x007c|SYNTHETIC\lSplitter:B:36:0x007c\l}"];
Node_37 [shape=record,label="{37\:\ ?|Catch:\{ SQLException \-\> 0x0080 \}\lSplitter:B:36:0x007c\l|rollBack(r4, r0)     \/\/ Catch:\{ SQLException \-\> 0x0080 \}\l}"];
Node_38 [shape=record,label="{38\:\ 0x0080|SYNTHETIC\lSplitter:B:38:0x0080\l}"];
Node_39 [shape=record,label="{39\:\ ?|Catch:\{ SQLException \-\> 0x008e, Exception \-\> 0x0079, all \-\> 0x0075 \}\lSplitter:B:38:0x0080\l|logger.error((java.lang.Throwable) r6, \"after commit exception, rolling back to save\-point also threw exception\")     \/\/ Catch:\{ SQLException \-\> 0x008e, Exception \-\> 0x0079, all \-\> 0x0075 \}\l}"];
Node_40 [shape=record,label="{40\:\ 0x0087|Catch:\{ SQLException \-\> 0x008e, Exception \-\> 0x0079, all \-\> 0x0075 \}\l}"];
Node_41 [shape=record,label="{41\:\ 0x008d|Catch:\{ SQLException \-\> 0x008e, Exception \-\> 0x0079, all \-\> 0x0075 \}\l|throw com.j256.ormlite.misc.SqlExceptionUtil.create(\"Transaction callable threw non\-SQL exception\", r6)     \/\/ Catch:\{ SQLException \-\> 0x008e, Exception \-\> 0x0079, all \-\> 0x0075 \}\l}"];
Node_42 [shape=record,label="{42\:\ 0x008e|ExcHandler: SQLException (r6v2 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:25:0x005f\l|java.sql.SQLException r6 = move\-exception\l}"];
Node_43 [shape=record,label="{43\:\ 0x008f|if (r1 == false) goto L_0x009c\l}"];
Node_44 [shape=record,label="{44\:\ 0x0091|SYNTHETIC\lSplitter:B:44:0x0091\l}"];
Node_45 [shape=record,label="{45\:\ ?|Catch:\{ SQLException \-\> 0x0095 \}\lSplitter:B:44:0x0091\l|rollBack(r4, r0)     \/\/ Catch:\{ SQLException \-\> 0x0095 \}\l}"];
Node_46 [shape=record,label="{46\:\ 0x0095|SYNTHETIC\lSplitter:B:46:0x0095\l}"];
Node_47 [shape=record,label="{47\:\ ?|Catch:\{ SQLException \-\> 0x008e, Exception \-\> 0x0079, all \-\> 0x0075 \}\lSplitter:B:46:0x0095\l|logger.error((java.lang.Throwable) r6, \"after commit exception, rolling back to save\-point also threw exception\")     \/\/ Catch:\{ SQLException \-\> 0x008e, Exception \-\> 0x0079, all \-\> 0x0075 \}\l}"];
Node_48 [shape=record,label="{48\:\ 0x009c|Catch:\{ SQLException \-\> 0x008e, Exception \-\> 0x0079, all \-\> 0x0075 \}\l|throw r6     \/\/ Catch:\{ SQLException \-\> 0x008e, Exception \-\> 0x0079, all \-\> 0x0075 \}\l}"];
Node_49 [shape=record,label="{49\:\ 0x009d|PHI: r1 r5 \l  PHI: (r1v1 boolean) = (r1v3 boolean), (r1v6 boolean), (r1v8 boolean) binds: [B:33:0x0076, B:18:0x002a, B:8:0x000f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'th' java.lang.Throwable) = (r5v3 'th' java.lang.Throwable), (r5v12 'th' java.lang.Throwable), (r5v14 'th' java.lang.Throwable) binds: [B:33:0x0076, B:18:0x002a, B:8:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L_0x00a9\l}"];
Node_50 [shape=record,label="{50\:\ 0x009f|r4.setAutoCommit(true)\llogger.debug(\"restored auto\-commit to true\")\l}"];
Node_51 [shape=record,label="{51\:\ 0x00a9|throw r5\l}"];
MethodNode[shape=record,label="{public static T com.j256.ormlite.misc.TransactionManager.callInTransaction((r4v0 com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.util.concurrent.Callable\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUnknown top exception splitter block from list: \{B:38:0x0080=Splitter:B:38:0x0080, B:46:0x0095=Splitter:B:46:0x0095\}\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, Z, Lcom\/j256\/ormlite\/db\/DatabaseType;, Ljava\/util\/concurrent\/Callable\<, TT;\>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_9;
Node_6 -> Node_25;
Node_7 -> Node_8;
Node_8 -> Node_49;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_19;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_19;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_49;
Node_19 -> Node_20;
Node_19 -> Node_7;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_42;
Node_25 -> Node_34;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_33 -> Node_49;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_40;
Node_36 -> Node_37;
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_37 -> Node_40;
Node_38 -> Node_39;
Node_38 -> Node_32;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_48;
Node_44 -> Node_45;
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_45 -> Node_48;
Node_46 -> Node_47;
Node_46 -> Node_32;
Node_47 -> Node_48;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_51;
}

