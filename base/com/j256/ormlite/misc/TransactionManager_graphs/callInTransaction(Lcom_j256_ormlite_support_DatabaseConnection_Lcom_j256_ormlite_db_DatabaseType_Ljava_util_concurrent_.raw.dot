digraph "CFG forcom.j256.ormlite.misc.TransactionManager.callInTransaction(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Lcom\/j256\/ormlite\/db\/DatabaseType;Ljava\/util\/concurrent\/Callable;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:com.j256.ormlite.support.DatabaseConnection)\l  (r0 I:boolean)\l  (r2 I:com.j256.ormlite.db.DatabaseType)\l  (r3 I:java.util.concurrent.Callable)\l com.j256.ormlite.misc.TransactionManager.callInTransaction(com.j256.ormlite.support.DatabaseConnection, boolean, com.j256.ormlite.db.DatabaseType, java.util.concurrent.Callable):java.lang.Object type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: RETURN  (r1 I:T) \l}"];
MethodNode[shape=record,label="{public static T com.j256.ormlite.misc.TransactionManager.callInTransaction((r1 I:com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.util.concurrent.Callable\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, Lcom\/j256\/ormlite\/db\/DatabaseType;, Ljava\/util\/concurrent\/Callable\<, TT;\>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

