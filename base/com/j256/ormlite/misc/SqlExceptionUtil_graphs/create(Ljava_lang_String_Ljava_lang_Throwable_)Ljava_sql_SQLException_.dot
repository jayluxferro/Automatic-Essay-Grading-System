digraph "CFG forcom.j256.ormlite.misc.SqlExceptionUtil.create(Ljava\/lang\/String;Ljava\/lang\/Throwable;)Ljava\/sql\/SQLException;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r3 instanceof java.sql.SQLException) == false) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|java.sql.SQLException r0 = new java.sql.SQLException(r2, ((java.sql.SQLException) r3).getSQLState())\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|java.sql.SQLException r0 = new java.sql.SQLException(r2)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|PHI: r0 \l  PHI: (r0v1 java.sql.SQLException) = (r0v2 java.sql.SQLException), (r0v3 java.sql.SQLException) binds: [B:3:0x0011, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|r0.initCause(r3)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public static java.sql.SQLException com.j256.ormlite.misc.SqlExceptionUtil.create((r2v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.Throwable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

