digraph "CFG forcom.j256.ormlite.misc.SqlExceptionUtil.create(Ljava\/lang\/String;Ljava\/lang\/Throwable;)Ljava\/sql\/SQLException;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r3 I:?[OBJECT, ARRAY]) java.sql.SQLException \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:java.sql.SQLException) =  java.sql.SQLException \l0x0006: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0007: CHECK_CAST  (r1 I:java.sql.SQLException) = (java.sql.SQLException) (r1 I:?[OBJECT, ARRAY]) \l0x0009: INVOKE  (r1 I:java.lang.String) = (r1 I:java.sql.SQLException) java.sql.SQLException.getSQLState():java.lang.String type: VIRTUAL \l0x000d: INVOKE  \l  (r0 I:java.sql.SQLException)\l  (r2 I:java.lang.String)\l  (r1 I:java.lang.String)\l java.sql.SQLException.\<init\>(java.lang.String, java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: NEW_INSTANCE  (r0 I:java.sql.SQLException) =  java.sql.SQLException \l0x0013: INVOKE  (r0 I:java.sql.SQLException), (r2 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: INVOKE  (r0 I:java.sql.SQLException), (r3 I:java.lang.Throwable) java.sql.SQLException.initCause(java.lang.Throwable):java.lang.Throwable type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: RETURN  (r0 I:java.sql.SQLException) \l}"];
MethodNode[shape=record,label="{public static java.sql.SQLException com.j256.ormlite.misc.SqlExceptionUtil.create((r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Throwable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

