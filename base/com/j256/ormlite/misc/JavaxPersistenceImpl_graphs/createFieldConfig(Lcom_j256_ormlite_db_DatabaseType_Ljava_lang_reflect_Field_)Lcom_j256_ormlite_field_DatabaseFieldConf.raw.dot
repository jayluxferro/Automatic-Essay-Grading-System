digraph "CFG forcom.j256.ormlite.misc.JavaxPersistenceImpl.createFieldConfig(Lcom\/j256\/ormlite\/db\/DatabaseType;Ljava\/lang\/reflect\/Field;)Lcom\/j256\/ormlite\/field\/DatabaseFieldConfig;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_CLASS  (r0 I:java.lang.Class\<javax.persistence.Column\>) =  javax.persistence.Column.class \l0x0002: INVOKE  (r0 I:java.lang.annotation.Annotation) = (r14 I:java.lang.reflect.Field), (r0 I:java.lang.Class) java.lang.reflect.Field.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:javax.persistence.Column) = (javax.persistence.Column) (r0 I:?[OBJECT, ARRAY]) \l0x0008: CONST_CLASS  (r1 I:java.lang.Class\<javax.persistence.Basic\>) =  javax.persistence.Basic.class \l0x000a: INVOKE  (r1 I:java.lang.annotation.Annotation) = (r14 I:java.lang.reflect.Field), (r1 I:java.lang.Class) java.lang.reflect.Field.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l0x000e: CHECK_CAST  (r1 I:javax.persistence.Basic) = (javax.persistence.Basic) (r1 I:?[OBJECT, ARRAY]) \l0x0010: CONST_CLASS  (r2 I:java.lang.Class\<javax.persistence.Id\>) =  javax.persistence.Id.class \l0x0012: INVOKE  (r2 I:java.lang.annotation.Annotation) = (r14 I:java.lang.reflect.Field), (r2 I:java.lang.Class) java.lang.reflect.Field.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l0x0016: CHECK_CAST  (r2 I:javax.persistence.Id) = (javax.persistence.Id) (r2 I:?[OBJECT, ARRAY]) \l0x0018: CONST_CLASS  (r3 I:java.lang.Class\<javax.persistence.GeneratedValue\>) =  javax.persistence.GeneratedValue.class \l0x001a: INVOKE  (r3 I:java.lang.annotation.Annotation) = (r14 I:java.lang.reflect.Field), (r3 I:java.lang.Class) java.lang.reflect.Field.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l0x001e: CHECK_CAST  (r3 I:javax.persistence.GeneratedValue) = (javax.persistence.GeneratedValue) (r3 I:?[OBJECT, ARRAY]) \l0x0020: CONST_CLASS  (r4 I:java.lang.Class\<javax.persistence.OneToOne\>) =  javax.persistence.OneToOne.class \l0x0022: INVOKE  (r4 I:java.lang.annotation.Annotation) = (r14 I:java.lang.reflect.Field), (r4 I:java.lang.Class) java.lang.reflect.Field.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l0x0026: CHECK_CAST  (r4 I:javax.persistence.OneToOne) = (javax.persistence.OneToOne) (r4 I:?[OBJECT, ARRAY]) \l0x0028: CONST_CLASS  (r5 I:java.lang.Class\<javax.persistence.ManyToOne\>) =  javax.persistence.ManyToOne.class \l0x002a: INVOKE  (r5 I:java.lang.annotation.Annotation) = (r14 I:java.lang.reflect.Field), (r5 I:java.lang.Class) java.lang.reflect.Field.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l0x002e: CHECK_CAST  (r5 I:javax.persistence.ManyToOne) = (javax.persistence.ManyToOne) (r5 I:?[OBJECT, ARRAY]) \l0x0030: CONST_CLASS  (r6 I:java.lang.Class\<javax.persistence.JoinColumn\>) =  javax.persistence.JoinColumn.class \l0x0032: INVOKE  (r6 I:java.lang.annotation.Annotation) = (r14 I:java.lang.reflect.Field), (r6 I:java.lang.Class) java.lang.reflect.Field.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l0x0036: CHECK_CAST  (r6 I:javax.persistence.JoinColumn) = (javax.persistence.JoinColumn) (r6 I:?[OBJECT, ARRAY]) \l0x0038: CONST_CLASS  (r7 I:java.lang.Class\<javax.persistence.Enumerated\>) =  javax.persistence.Enumerated.class \l0x003a: INVOKE  (r7 I:java.lang.annotation.Annotation) = (r14 I:java.lang.reflect.Field), (r7 I:java.lang.Class) java.lang.reflect.Field.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l0x003e: CHECK_CAST  (r7 I:javax.persistence.Enumerated) = (javax.persistence.Enumerated) (r7 I:?[OBJECT, ARRAY]) \l0x0040: CONST_CLASS  (r8 I:java.lang.Class\<javax.persistence.Version\>) =  javax.persistence.Version.class \l0x0042: INVOKE  (r8 I:java.lang.annotation.Annotation) = (r14 I:java.lang.reflect.Field), (r8 I:java.lang.Class) java.lang.reflect.Field.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l0x0046: CHECK_CAST  (r8 I:javax.persistence.Version) = (javax.persistence.Version) (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0048|0x0048: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0058 \l}"];
Node_2 [shape=record,label="{2\:\ 0x004a|0x004a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0058 \l}"];
Node_3 [shape=record,label="{3\:\ 0x004c|0x004c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0058 \l}"];
Node_4 [shape=record,label="{4\:\ 0x004e|0x004e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0058 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0050|0x0050: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0058 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0052|0x0052: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0058 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0054|0x0054: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0058 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0056|0x0056: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0057|0x0057: RETURN  (r13 I:com.j256.ormlite.field.DatabaseFieldConfig) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0058|0x0058: NEW_INSTANCE  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig) =  com.j256.ormlite.field.DatabaseFieldConfig \l0x005a: INVOKE  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig) com.j256.ormlite.field.DatabaseFieldConfig.\<init\>():void type: DIRECT \l0x005d: INVOKE  (r10 I:java.lang.String) = (r14 I:java.lang.reflect.Field) java.lang.reflect.Field.getName():java.lang.String type: VIRTUAL \l0x0061: INVOKE  (r11 I:boolean) = (r13 I:com.j256.ormlite.db.DatabaseType) com.j256.ormlite.db.DatabaseType.isEntityNamesMustBeUpCase():boolean type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x0065|0x0065: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x006b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0067|0x0067: INVOKE  (r10 I:java.lang.String) = \l  (r13 I:com.j256.ormlite.db.DatabaseType)\l  (r10 I:java.lang.String)\l com.j256.ormlite.db.DatabaseType.upCaseEntityName(java.lang.String):java.lang.String type: INTERFACE \l}"];
Node_13 [shape=record,label="{13\:\ 0x006b|0x006b: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r10 I:java.lang.String)\l com.j256.ormlite.field.DatabaseFieldConfig.setFieldName(java.lang.String):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x006e|0x006e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x00a7 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0070|0x0070: INVOKE  (r13 I:java.lang.String) = (r0 I:javax.persistence.Column) javax.persistence.Column.name():java.lang.String type: INTERFACE \l0x0074: INVOKE  (r13 I:boolean) = \l  (r12 I:com.j256.ormlite.misc.JavaxPersistenceImpl)\l  (r13 I:java.lang.String)\l com.j256.ormlite.misc.JavaxPersistenceImpl.stringNotEmpty(java.lang.String):boolean type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0078|0x0078: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0081 \l}"];
Node_17 [shape=record,label="{17\:\ 0x007a|0x007a: INVOKE  (r13 I:java.lang.String) = (r0 I:javax.persistence.Column) javax.persistence.Column.name():java.lang.String type: INTERFACE \l0x007e: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r13 I:java.lang.String)\l com.j256.ormlite.field.DatabaseFieldConfig.setColumnName(java.lang.String):void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0081|0x0081: INVOKE  (r13 I:java.lang.String) = (r0 I:javax.persistence.Column) javax.persistence.Column.columnDefinition():java.lang.String type: INTERFACE \l0x0085: INVOKE  (r13 I:boolean) = \l  (r12 I:com.j256.ormlite.misc.JavaxPersistenceImpl)\l  (r13 I:java.lang.String)\l com.j256.ormlite.misc.JavaxPersistenceImpl.stringNotEmpty(java.lang.String):boolean type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0089|0x0089: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0092 \l}"];
Node_20 [shape=record,label="{20\:\ 0x008b|0x008b: INVOKE  (r13 I:java.lang.String) = (r0 I:javax.persistence.Column) javax.persistence.Column.columnDefinition():java.lang.String type: INTERFACE \l0x008f: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r13 I:java.lang.String)\l com.j256.ormlite.field.DatabaseFieldConfig.setColumnDefinition(java.lang.String):void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0092|0x0092: INVOKE  (r13 I:int) = (r0 I:javax.persistence.Column) javax.persistence.Column.length():int type: INTERFACE \l0x0096: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r13 I:int)\l com.j256.ormlite.field.DatabaseFieldConfig.setWidth(int):void type: VIRTUAL \l0x0099: INVOKE  (r13 I:boolean) = (r0 I:javax.persistence.Column) javax.persistence.Column.nullable():boolean type: INTERFACE \l0x009d: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r13 I:boolean)\l com.j256.ormlite.field.DatabaseFieldConfig.setCanBeNull(boolean):void type: VIRTUAL \l0x00a0: INVOKE  (r13 I:boolean) = (r0 I:javax.persistence.Column) javax.persistence.Column.unique():boolean type: INTERFACE \l0x00a4: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r13 I:boolean)\l com.j256.ormlite.field.DatabaseFieldConfig.setUnique(boolean):void type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x00a7|0x00a7: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x00b0 \l}"];
Node_23 [shape=record,label="{23\:\ 0x00a9|0x00a9: INVOKE  (r13 I:boolean) = (r1 I:javax.persistence.Basic) javax.persistence.Basic.optional():boolean type: INTERFACE \l0x00ad: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r13 I:boolean)\l com.j256.ormlite.field.DatabaseFieldConfig.setCanBeNull(boolean):void type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x00b0|0x00b0: CONST  (r13 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x00b1|0x00b1: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00bc \l}"];
Node_26 [shape=record,label="{26\:\ 0x00b3|0x00b3: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x00b9 \l}"];
Node_27 [shape=record,label="{27\:\ 0x00b5|0x00b5: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r13 I:boolean)\l com.j256.ormlite.field.DatabaseFieldConfig.setId(boolean):void type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x00b9|0x00b9: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r13 I:boolean)\l com.j256.ormlite.field.DatabaseFieldConfig.setGeneratedId(boolean):void type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x00bc|0x00bc: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00c0 \l}"];
Node_30 [shape=record,label="{30\:\ 0x00be|0x00be: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0123 \l}"];
Node_31 [shape=record,label="{31\:\ 0x00c0|0x00c0: CONST_CLASS  (r0 I:java.lang.Class\<java.util.Collection\>) =  java.util.Collection.class \l0x00c2: INVOKE  (r1 I:java.lang.Class) = (r14 I:java.lang.reflect.Field) java.lang.reflect.Field.getType():java.lang.Class type: VIRTUAL \l0x00c6: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Class), (r1 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_32 [shape=record,label="{32\:\ 0x00ca|0x00ca: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x00fe \l}"];
Node_33 [shape=record,label="{33\:\ 0x00cc|0x00cc: CONST_CLASS  (r0 I:java.lang.Class\<com.j256.ormlite.dao.ForeignCollection\>) =  com.j256.ormlite.dao.ForeignCollection.class \l0x00ce: INVOKE  (r1 I:java.lang.Class) = (r14 I:java.lang.reflect.Field) java.lang.reflect.Field.getType():java.lang.Class type: VIRTUAL \l0x00d2: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Class), (r1 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_34 [shape=record,label="{34\:\ 0x00d6|0x00d6: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x00d9 \l}"];
Node_36 [shape=record,label="{36\:\ 0x00d9|0x00d9: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r13 I:boolean)\l com.j256.ormlite.field.DatabaseFieldConfig.setForeign(boolean):void type: VIRTUAL \l}"];
Node_37 [shape=record,label="{37\:\ 0x00dc|0x00dc: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0123 \l}"];
Node_38 [shape=record,label="{38\:\ 0x00de|0x00de: INVOKE  (r0 I:java.lang.String) = (r6 I:javax.persistence.JoinColumn) javax.persistence.JoinColumn.name():java.lang.String type: INTERFACE \l0x00e2: INVOKE  (r0 I:boolean) = \l  (r12 I:com.j256.ormlite.misc.JavaxPersistenceImpl)\l  (r0 I:java.lang.String)\l com.j256.ormlite.misc.JavaxPersistenceImpl.stringNotEmpty(java.lang.String):boolean type: DIRECT \l}"];
Node_39 [shape=record,label="{39\:\ 0x00e6|0x00e6: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x00ef \l}"];
Node_40 [shape=record,label="{40\:\ 0x00e8|0x00e8: INVOKE  (r0 I:java.lang.String) = (r6 I:javax.persistence.JoinColumn) javax.persistence.JoinColumn.name():java.lang.String type: INTERFACE \l0x00ec: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r0 I:java.lang.String)\l com.j256.ormlite.field.DatabaseFieldConfig.setColumnName(java.lang.String):void type: VIRTUAL \l}"];
Node_41 [shape=record,label="{41\:\ 0x00ef|0x00ef: INVOKE  (r0 I:boolean) = (r6 I:javax.persistence.JoinColumn) javax.persistence.JoinColumn.nullable():boolean type: INTERFACE \l0x00f3: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r0 I:boolean)\l com.j256.ormlite.field.DatabaseFieldConfig.setCanBeNull(boolean):void type: VIRTUAL \l0x00f6: INVOKE  (r0 I:boolean) = (r6 I:javax.persistence.JoinColumn) javax.persistence.JoinColumn.unique():boolean type: INTERFACE \l0x00fa: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r0 I:boolean)\l com.j256.ormlite.field.DatabaseFieldConfig.setUnique(boolean):void type: VIRTUAL \l}"];
Node_42 [shape=record,label="{42\:\ 0x00fe|0x00fe: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r13 I:boolean)\l com.j256.ormlite.field.DatabaseFieldConfig.setForeignCollection(boolean):void type: VIRTUAL \l}"];
Node_43 [shape=record,label="{43\:\ 0x0101|0x0101: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0114 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0103|0x0103: INVOKE  (r0 I:java.lang.String) = (r6 I:javax.persistence.JoinColumn) javax.persistence.JoinColumn.name():java.lang.String type: INTERFACE \l0x0107: INVOKE  (r0 I:boolean) = \l  (r12 I:com.j256.ormlite.misc.JavaxPersistenceImpl)\l  (r0 I:java.lang.String)\l com.j256.ormlite.misc.JavaxPersistenceImpl.stringNotEmpty(java.lang.String):boolean type: DIRECT \l}"];
Node_45 [shape=record,label="{45\:\ 0x010b|0x010b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0114 \l}"];
Node_46 [shape=record,label="{46\:\ 0x010d|0x010d: INVOKE  (r0 I:java.lang.String) = (r6 I:javax.persistence.JoinColumn) javax.persistence.JoinColumn.name():java.lang.String type: INTERFACE \l0x0111: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r0 I:java.lang.String)\l com.j256.ormlite.field.DatabaseFieldConfig.setForeignCollectionColumnName(java.lang.String):void type: VIRTUAL \l}"];
Node_47 [shape=record,label="{47\:\ 0x0114|0x0114: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0123 \l}"];
Node_48 [shape=record,label="{48\:\ 0x0116|0x0116: INVOKE  (r0 I:javax.persistence.FetchType) = (r5 I:javax.persistence.ManyToOne) javax.persistence.ManyToOne.fetch():javax.persistence.FetchType type: INTERFACE \l}"];
Node_49 [shape=record,label="{49\:\ 0x011a|0x011a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0123 \l}"];
Node_50 [shape=record,label="{50\:\ 0x011c|0x011c: SGET  (r1 I:javax.persistence.FetchType) =  javax.persistence.FetchType.EAGER javax.persistence.FetchType \l}"];
Node_51 [shape=record,label="{51\:\ 0x011e|0x011e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0123 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0120|0x0120: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r13 I:boolean)\l com.j256.ormlite.field.DatabaseFieldConfig.setForeignCollectionEager(boolean):void type: VIRTUAL \l}"];
Node_53 [shape=record,label="{53\:\ 0x0123|0x0123: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x013a \l}"];
Node_54 [shape=record,label="{54\:\ 0x0125|0x0125: INVOKE  (r0 I:javax.persistence.EnumType) = (r7 I:javax.persistence.Enumerated) javax.persistence.Enumerated.value():javax.persistence.EnumType type: INTERFACE \l}"];
Node_55 [shape=record,label="{55\:\ 0x0129|0x0129: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0135 \l}"];
Node_56 [shape=record,label="{56\:\ 0x012b|0x012b: SGET  (r1 I:javax.persistence.EnumType) =  javax.persistence.EnumType.STRING javax.persistence.EnumType \l}"];
Node_57 [shape=record,label="{57\:\ 0x012d|0x012d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0135 \l}"];
Node_58 [shape=record,label="{58\:\ 0x012f|0x012f: SGET  (r0 I:com.j256.ormlite.field.DataType) =  com.j256.ormlite.field.DataType.ENUM_STRING com.j256.ormlite.field.DataType \l0x0131: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r0 I:com.j256.ormlite.field.DataType)\l com.j256.ormlite.field.DatabaseFieldConfig.setDataType(com.j256.ormlite.field.DataType):void type: VIRTUAL \l}"];
Node_59 [shape=record,label="{59\:\ 0x0135|0x0135: SGET  (r0 I:com.j256.ormlite.field.DataType) =  com.j256.ormlite.field.DataType.ENUM_INTEGER com.j256.ormlite.field.DataType \l0x0137: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r0 I:com.j256.ormlite.field.DataType)\l com.j256.ormlite.field.DatabaseFieldConfig.setDataType(com.j256.ormlite.field.DataType):void type: VIRTUAL \l}"];
Node_60 [shape=record,label="{60\:\ 0x013a|0x013a: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x013f \l}"];
Node_61 [shape=record,label="{61\:\ 0x013c|0x013c: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r13 I:boolean)\l com.j256.ormlite.field.DatabaseFieldConfig.setVersion(boolean):void type: VIRTUAL \l}"];
Node_62 [shape=record,label="{62\:\ 0x013f|0x013f: INVOKE  (r0 I:com.j256.ormlite.field.DataPersister) = (r9 I:com.j256.ormlite.field.DatabaseFieldConfig) com.j256.ormlite.field.DatabaseFieldConfig.getDataPersister():com.j256.ormlite.field.DataPersister type: VIRTUAL \l}"];
Node_63 [shape=record,label="{63\:\ 0x0143|0x0143: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x014c \l}"];
Node_64 [shape=record,label="{64\:\ 0x0145|0x0145: INVOKE  (r0 I:com.j256.ormlite.field.DataPersister) = (r14 I:java.lang.reflect.Field) com.j256.ormlite.field.DataPersisterManager.lookupForField(java.lang.reflect.Field):com.j256.ormlite.field.DataPersister type: STATIC \l0x0149: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r0 I:com.j256.ormlite.field.DataPersister)\l com.j256.ormlite.field.DatabaseFieldConfig.setDataPersister(com.j256.ormlite.field.DataPersister):void type: VIRTUAL \l}"];
Node_65 [shape=record,label="{65\:\ 0x014c|0x014c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x014d: INVOKE  (r1 I:java.lang.reflect.Method) = (r14 I:java.lang.reflect.Field), (r0 I:boolean) com.j256.ormlite.field.DatabaseFieldConfig.findGetMethod(java.lang.reflect.Field, boolean):java.lang.reflect.Method type: STATIC \l}"];
Node_66 [shape=record,label="{66\:\ 0x0151|0x0151: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x015a \l}"];
Node_67 [shape=record,label="{67\:\ 0x0153|0x0153: INVOKE  (r14 I:java.lang.reflect.Method) = (r14 I:java.lang.reflect.Field), (r0 I:boolean) com.j256.ormlite.field.DatabaseFieldConfig.findSetMethod(java.lang.reflect.Field, boolean):java.lang.reflect.Method type: STATIC \l}"];
Node_68 [shape=record,label="{68\:\ 0x0157|0x0157: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x015a \l}"];
Node_70 [shape=record,label="{70\:\ 0x015a|0x015a: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_71 [shape=record,label="{71\:\ 0x015b|0x015b: INVOKE  \l  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r13 I:boolean)\l com.j256.ormlite.field.DatabaseFieldConfig.setUseGetSet(boolean):void type: VIRTUAL \l}"];
Node_72 [shape=record,label="{72\:\ 0x015e|0x015e: RETURN  (r9 I:com.j256.ormlite.field.DatabaseFieldConfig) \l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.field.DatabaseFieldConfig com.j256.ormlite.misc.JavaxPersistenceImpl.createFieldConfig((r12 'this' I:com.j256.ormlite.misc.JavaxPersistenceImpl A[IMMUTABLE_TYPE, THIS]), (r13 I:com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:java.lang.reflect.Field A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_22;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_53;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_42;
Node_33 -> Node_34;
Node_34 -> Node_36;
Node_34 -> Node_42[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_53;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_53;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_47;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_53;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_53;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_60;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_59;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_60;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_65;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_70;
Node_67 -> Node_68;
Node_68 -> Node_70;
Node_68 -> Node_71[style=dashed];
Node_70 -> Node_71;
Node_71 -> Node_72;
}

