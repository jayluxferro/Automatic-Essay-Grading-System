digraph "CFG forcom.j256.ormlite.misc.IOUtils.closeThrowSqlException(Ljava\/io\/Closeable;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001d \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0002\l|0x0002: INVOKE  (r2 I:java.io.Closeable) java.io.Closeable.close():void type: INTERFACE A[Catch:\{ IOException \-\> 0x0006 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|ExcHandler: IOException null\lSplitter:B:1:0x0002\l|0x0006: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0009: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"could not close \" \l0x000e: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0011: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0014: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0018: INVOKE  (r2 I:java.sql.SQLException) = (r3 I:java.lang.String), (r2 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: RETURN   \l}"];
MethodNode[shape=record,label="{public static void com.j256.ormlite.misc.IOUtils.closeThrowSqlException((r2 I:java.io.Closeable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_7;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_4;
Node_2 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

