digraph "CFG forcom.j256.ormlite.misc.BaseDaoEnabled.objectsEqual(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:com.j256.ormlite.misc.BaseDaoEnabled) com.j256.ormlite.misc.BaseDaoEnabled.checkForDao():void type: DIRECT \l0x0003: IGET  (r0 I:com.j256.ormlite.dao.Dao\<T, ID\>) = (r1 I:com.j256.ormlite.misc.BaseDaoEnabled) com.j256.ormlite.misc.BaseDaoEnabled.dao com.j256.ormlite.dao.Dao \l0x0005: INVOKE  (r2 I:boolean) = \l  (r0 I:com.j256.ormlite.dao.Dao)\l  (r1 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l com.j256.ormlite.dao.Dao.objectsEqual(java.lang.Object, java.lang.Object):boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.j256.ormlite.misc.BaseDaoEnabled.objectsEqual((r1 'this' I:com.j256.ormlite.misc.BaseDaoEnabled A[IMMUTABLE_TYPE, THIS]), (r2 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

