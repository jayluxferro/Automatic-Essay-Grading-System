digraph "CFG forcom.j256.ormlite.misc.BaseDaoEnabled.objectToString()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ SQLException \-\> 0x000a \}\lSplitter:B:0:0x0000\l|checkForDao()     \/\/ Catch:\{ SQLException \-\> 0x000a \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003}"];
Node_3 [shape=record,label="{3\:\ 0x0009|RETURN\l|return r2.dao.objectToString(r2)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.sql.SQLException r0 = move\-exception\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b}"];
Node_6 [shape=record,label="{6\:\ 0x0010|throw new java.lang.IllegalArgumentException(r0)\l}"];
MethodNode[shape=record,label="{public java.lang.String com.j256.ormlite.misc.BaseDaoEnabled.objectToString((r2v0 'this' com.j256.ormlite.misc.BaseDaoEnabled A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

