digraph "CFG forcom.j256.ormlite.table.DatabaseTableConfig.extractFieldTypes(Lcom\/j256\/ormlite\/support\/ConnectionSource;)V" {
subgraph cluster_Region_2112833189 {
label = "R(1:(2:(1:7)|(1:(1:4)(1:5))))";
node [shape=record,color=blue];
subgraph cluster_Region_1627047957 {
label = "R(2:(1:7)|(1:(1:4)(1:5)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_192179042 {
label = "IF [B:1:0x0002] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.fieldTypes != null) goto L_?\l}"];
subgraph cluster_Region_1837573708 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_1784323895 {
label = "R(1:(1:4)(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1557547017 {
label = "IF [B:3:0x0006] THEN: R(1:4) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r2.fieldConfigs == null) goto L_0x0008\l}"];
subgraph cluster_Region_1959860106 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0008|r2.fieldTypes = extractFieldTypes(r3, r2.dataClass, r2.tableName)\l}"];
}
subgraph cluster_Region_540076570 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|r2.fieldTypes = convertFieldConfigs(r3, r2.tableName, r2.fieldConfigs)\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.table.DatabaseTableConfig.extractFieldTypes((r2v0 'this' com.j256.ormlite.table.DatabaseTableConfig A[IMMUTABLE_TYPE, THIS]), (r3v0 com.j256.ormlite.support.ConnectionSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_0 -> Node_1;
Node_2 -> Node_3;
}

