digraph "CFG forcom.j256.ormlite.table.DatabaseTableConfig.fromClass(Lcom\/j256\/ormlite\/support\/ConnectionSource;Ljava\/lang\/Class;)Lcom\/j256\/ormlite\/table\/DatabaseTableConfig;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.Class) com.j256.ormlite.table.DatabaseTableConfig.extractTableName(java.lang.Class):java.lang.String type: STATIC \l0x0004: INVOKE  (r1 I:com.j256.ormlite.db.DatabaseType) = (r3 I:com.j256.ormlite.support.ConnectionSource) com.j256.ormlite.support.ConnectionSource.getDatabaseType():com.j256.ormlite.db.DatabaseType type: INTERFACE \l0x0008: INVOKE  (r2 I:boolean) = (r1 I:com.j256.ormlite.db.DatabaseType) com.j256.ormlite.db.DatabaseType.isEntityNamesMustBeUpCase():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: INVOKE  (r0 I:java.lang.String) = \l  (r1 I:com.j256.ormlite.db.DatabaseType)\l  (r0 I:java.lang.String)\l com.j256.ormlite.db.DatabaseType.upCaseEntityName(java.lang.String):java.lang.String type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: NEW_INSTANCE  (r1 I:com.j256.ormlite.table.DatabaseTableConfig) =  com.j256.ormlite.table.DatabaseTableConfig \l0x0014: INVOKE  (r3 I:com.j256.ormlite.field.FieldType[]) = \l  (r3 I:com.j256.ormlite.support.ConnectionSource)\l  (r4 I:java.lang.Class)\l  (r0 I:java.lang.String)\l com.j256.ormlite.table.DatabaseTableConfig.extractFieldTypes(com.j256.ormlite.support.ConnectionSource, java.lang.Class, java.lang.String):com.j256.ormlite.field.FieldType[] type: STATIC \l0x0018: INVOKE  \l  (r1 I:com.j256.ormlite.table.DatabaseTableConfig)\l  (r4 I:java.lang.Class)\l  (r0 I:java.lang.String)\l  (r3 I:com.j256.ormlite.field.FieldType[])\l com.j256.ormlite.table.DatabaseTableConfig.\<init\>(java.lang.Class, java.lang.String, com.j256.ormlite.field.FieldType[]):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: RETURN  (r1 I:com.j256.ormlite.table.DatabaseTableConfig\<T\>) \l}"];
MethodNode[shape=record,label="{public static com.j256.ormlite.table.DatabaseTableConfig\<T\> com.j256.ormlite.table.DatabaseTableConfig.fromClass((r3 I:com.j256.ormlite.support.ConnectionSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Class\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/support\/ConnectionSource;, Ljava\/lang\/Class\<, TT;\>;), Lcom\/j256\/ormlite\/table\/DatabaseTableConfig\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

