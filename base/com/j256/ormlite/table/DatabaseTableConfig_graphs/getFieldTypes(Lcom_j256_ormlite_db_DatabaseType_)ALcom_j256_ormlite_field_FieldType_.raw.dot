digraph "CFG forcom.j256.ormlite.table.DatabaseTableConfig.getFieldTypes(Lcom\/j256\/ormlite\/db\/DatabaseType;)[Lcom\/j256\/ormlite\/field\/FieldType;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r2 I:com.j256.ormlite.field.FieldType[]) = (r1 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.fieldTypes com.j256.ormlite.field.FieldType[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r2 I:com.j256.ormlite.field.FieldType[]) = (r1 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.fieldTypes com.j256.ormlite.field.FieldType[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: RETURN  (r2 I:com.j256.ormlite.field.FieldType[]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: NEW_INSTANCE  (r2 I:java.sql.SQLException) =  java.sql.SQLException \l0x0009: CONST_STR  (r0 I:java.lang.String) =  \"Field types have not been extracted in table config\" \l0x000b: INVOKE  (r2 I:java.sql.SQLException), (r0 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.field.FieldType[] com.j256.ormlite.table.DatabaseTableConfig.getFieldTypes((r1 'this' I:com.j256.ormlite.table.DatabaseTableConfig A[IMMUTABLE_TYPE, THIS]), (r2 I:com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

