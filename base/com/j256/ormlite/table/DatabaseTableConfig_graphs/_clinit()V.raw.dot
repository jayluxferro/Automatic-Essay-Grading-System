digraph "CFG forcom.j256.ormlite.table.DatabaseTableConfig.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"javax.persistence.Entity\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0002\l|0x0002: INVOKE  (r0 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ Exception \-\> 0x001d \}, TRY_ENTER]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"com.j256.ormlite.misc.JavaxPersistenceImpl\" A[Catch:\{ Exception \-\> 0x001d \}]\l0x0007: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ Exception \-\> 0x001d \}]\l0x000b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x001d \}]\l0x000c: NEW_ARRAY  (r2 I:java.lang.Class[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ Exception \-\> 0x001d \}]\l0x000e: INVOKE  (r0 I:java.lang.reflect.Constructor) = (r0 I:java.lang.Class), (r2 I:java.lang.Class[]) java.lang.Class.getConstructor(java.lang.Class[]):java.lang.reflect.Constructor type: VIRTUAL A[Catch:\{ Exception \-\> 0x001d \}]\l0x0012: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ Exception \-\> 0x001d \}]\l0x0014: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Constructor)\l  (r1 I:java.lang.Object[])\l java.lang.reflect.Constructor.newInstance(java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ Exception \-\> 0x001d \}]\l0x0018: CHECK_CAST  (r0 I:com.j256.ormlite.misc.JavaxPersistenceConfigurer) = (com.j256.ormlite.misc.JavaxPersistenceConfigurer) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x001d \}]\l0x001a: SPUT  (r0 I:com.j256.ormlite.misc.JavaxPersistenceConfigurer) com.j256.ormlite.table.DatabaseTableConfig.javaxPersistenceConfigurer com.j256.ormlite.misc.JavaxPersistenceConfigurer A[Catch:\{ Exception \-\> 0x001d \}, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001e: SPUT  (r0 I:com.j256.ormlite.misc.JavaxPersistenceConfigurer) com.j256.ormlite.table.DatabaseTableConfig.javaxPersistenceConfigurer com.j256.ormlite.misc.JavaxPersistenceConfigurer \l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lExcHandler: Exception null\lSplitter:B:1:0x0002\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: RETURN   \l}"];
MethodNode[shape=record,label="{static void com.j256.ormlite.table.DatabaseTableConfig.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_5;
Node_2 -> Node_6;
Node_4 -> Node_6;
Node_5 -> Node_4;
}

