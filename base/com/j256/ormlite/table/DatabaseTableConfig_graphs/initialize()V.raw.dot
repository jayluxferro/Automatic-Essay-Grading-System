digraph "CFG forcom.j256.ormlite.table.DatabaseTableConfig.initialize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Class\<T\>) = (r3 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.dataClass java.lang.Class \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:java.lang.String) = (r3 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.tableName java.lang.String \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r0 I:java.lang.Class\<T\>) = (r3 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.dataClass java.lang.Class \l0x000a: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Class) com.j256.ormlite.table.DatabaseTableConfig.extractTableName(java.lang.Class):java.lang.String type: STATIC \l0x000e: IPUT  \l  (r0 I:java.lang.String)\l  (r3 I:com.j256.ormlite.table.DatabaseTableConfig)\l com.j256.ormlite.table.DatabaseTableConfig.tableName java.lang.String \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0013: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0015: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0018: CONST_STR  (r2 I:java.lang.String) =  \"dataClass was never set on \" \l0x001a: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001d: INVOKE  (r2 I:java.lang.Class) = (r3 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x0021: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x0025: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0028: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002c: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.table.DatabaseTableConfig.initialize((r3 'this' I:com.j256.ormlite.table.DatabaseTableConfig A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

