digraph "CFG forcom.j256.ormlite.table.DatabaseTableConfig.convertFieldConfigs(Lcom\/j256\/ormlite\/support\/ConnectionSource;Ljava\/lang\/String;Ljava\/util\/List;)[Lcom\/j256\/ormlite\/field\/FieldType;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r12 I:java.util.Iterator) = (r12 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: INVOKE  (r1 I:boolean) = (r12 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0060 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: INVOKE  (r1 I:java.lang.Object) = (r12 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0013: CHECK_CAST  (r1 I:com.j256.ormlite.field.DatabaseFieldConfig) = (com.j256.ormlite.field.DatabaseFieldConfig) (r1 I:?[OBJECT, ARRAY]) \l0x0015: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0016: IGET  (r3 I:java.lang.Class\<T\>) = (r9 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.dataClass java.lang.Class \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0035 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|SYNTHETIC\lSplitter:B:5:0x001a\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x001a\l|0x001a: INVOKE  (r4 I:java.lang.String) = (r1 I:com.j256.ormlite.field.DatabaseFieldConfig) com.j256.ormlite.field.DatabaseFieldConfig.getFieldName():java.lang.String type: VIRTUAL A[Catch:\{ NoSuchFieldException \-\> 0x0030 \}, TRY_ENTER]\l0x001e: INVOKE  (r5 I:java.lang.reflect.Field) = (r3 I:java.lang.Class), (r4 I:java.lang.String) java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field type: VIRTUAL A[Catch:\{ NoSuchFieldException \-\> 0x0030 \}]\l0x0021: NOP   A[TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0030 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: NEW_INSTANCE  (r8 I:com.j256.ormlite.field.FieldType) =  com.j256.ormlite.field.FieldType \l0x0026: IGET  (r7 I:java.lang.Class\<T\>) = (r9 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.dataClass java.lang.Class \l0x0028: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0029: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x002a: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x002b: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x002c: INVOKE  \l  (r2 I:com.j256.ormlite.field.FieldType)\l  (r3 I:com.j256.ormlite.support.ConnectionSource)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.reflect.Field)\l  (r6 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r7 I:java.lang.Class)\l com.j256.ormlite.field.FieldType.\<init\>(com.j256.ormlite.support.ConnectionSource, java.lang.String, java.lang.reflect.Field, com.j256.ormlite.field.DatabaseFieldConfig, java.lang.Class):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: INVOKE  (r3 I:java.lang.Class) = (r3 I:java.lang.Class) java.lang.Class.getSuperclass():java.lang.Class type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lExcHandler: NoSuchFieldException null\lSplitter:B:5:0x001a\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x003b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|0x0037: INVOKE  (r0 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|0x003b: NEW_INSTANCE  (r10 I:java.sql.SQLException) =  java.sql.SQLException \l0x003d: NEW_INSTANCE  (r11 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003f: INVOKE  (r11 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0042: CONST_STR  (r12 I:java.lang.String) =  \"Could not find declared field with name '\" \l0x0044: INVOKE  (r11 I:java.lang.StringBuilder), (r12 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0047: INVOKE  (r12 I:java.lang.String) = (r1 I:com.j256.ormlite.field.DatabaseFieldConfig) com.j256.ormlite.field.DatabaseFieldConfig.getFieldName():java.lang.String type: VIRTUAL \l0x004b: INVOKE  (r11 I:java.lang.StringBuilder), (r12 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004e: CONST_STR  (r12 I:java.lang.String) =  \"' for \" \l0x0050: INVOKE  (r11 I:java.lang.StringBuilder), (r12 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0053: IGET  (r12 I:java.lang.Class\<T\>) = (r9 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.dataClass java.lang.Class \l0x0055: INVOKE  (r11 I:java.lang.StringBuilder), (r12 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0058: INVOKE  (r11 I:java.lang.String) = (r11 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x005c: INVOKE  (r10 I:java.sql.SQLException), (r11 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x005f|0x005f: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0060|0x0060: INVOKE  (r10 I:boolean) = (r0 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_16 [shape=record,label="{16\:\ 0x0064|0x0064: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0073 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0066|0x0066: INVOKE  (r10 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x006a: NEW_ARRAY  (r10 I:com.j256.ormlite.field.FieldType[]) = (r10 I:int A[IMMUTABLE_TYPE]) type: com.j256.ormlite.field.FieldType[] \l0x006c: INVOKE  (r10 I:java.lang.Object[]) = (r0 I:java.util.List), (r10 I:java.lang.Object[]) java.util.List.toArray(java.lang.Object[]):java.lang.Object[] type: INTERFACE \l0x0070: CHECK_CAST  (r10 I:com.j256.ormlite.field.FieldType[]) = (com.j256.ormlite.field.FieldType[]) (r10 I:?[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0072|0x0072: RETURN  (r10 I:com.j256.ormlite.field.FieldType[]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0073|0x0073: NEW_INSTANCE  (r10 I:java.sql.SQLException) =  java.sql.SQLException \l0x0075: NEW_INSTANCE  (r11 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0077: INVOKE  (r11 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x007a: CONST_STR  (r12 I:java.lang.String) =  \"No fields were configured for class \" \l0x007c: INVOKE  (r11 I:java.lang.StringBuilder), (r12 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007f: IGET  (r12 I:java.lang.Class\<T\>) = (r9 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.dataClass java.lang.Class \l0x0081: INVOKE  (r11 I:java.lang.StringBuilder), (r12 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0084: INVOKE  (r11 I:java.lang.String) = (r11 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0088: INVOKE  (r10 I:java.sql.SQLException), (r11 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x008b|0x008b: THROW  (r10 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private com.j256.ormlite.field.FieldType[] com.j256.ormlite.table.DatabaseTableConfig.convertFieldConfigs((r9 'this' I:com.j256.ormlite.table.DatabaseTableConfig A[IMMUTABLE_TYPE, THIS]), (r10 I:com.j256.ormlite.support.ConnectionSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.util.List\<com.j256.ormlite.field.DatabaseFieldConfig\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/support\/ConnectionSource;, Ljava\/lang\/String;, Ljava\/util\/List\<, Lcom\/j256\/ormlite\/field\/DatabaseFieldConfig;, \>;)[, Lcom\/j256\/ormlite\/field\/FieldType;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_11;
Node_9 -> Node_4;
Node_10 -> Node_9;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_1;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_19 -> Node_20;
}

