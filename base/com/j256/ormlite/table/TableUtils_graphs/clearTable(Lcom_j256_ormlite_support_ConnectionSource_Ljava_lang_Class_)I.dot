digraph "CFG forcom.j256.ormlite.table.TableUtils.clearTable(Lcom\/j256\/ormlite\/support\/ConnectionSource;Ljava\/lang\/Class;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r3 = com.j256.ormlite.table.DatabaseTableConfig.extractTableName(r3)\lcom.j256.ormlite.db.DatabaseType r0 = r2.getDatabaseType()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if (r0.isEntityNamesMustBeUpCase() == false) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|java.lang.String r3 = r0.upCaseEntityName(r3)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|PHI: r3 \l  PHI: (r3v2 java.lang.String) = (r3v1 java.lang.String), (r3v3 java.lang.String) binds: [B:1:0x000c, B:2:0x000e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|RETURN\l|return clearTable(r2, r3)\l}"];
MethodNode[shape=record,label="{public static int com.j256.ormlite.table.TableUtils.clearTable((r2v0 com.j256.ormlite.support.ConnectionSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.Class\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/support\/ConnectionSource;, Ljava\/lang\/Class\<, TT;\>;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

