digraph "CFG forcom.j256.ormlite.table.TableUtils.addCreateIndexStatements(Lcom\/j256\/ormlite\/db\/DatabaseType;Lcom\/j256\/ormlite\/table\/TableInfo;Ljava\/util\/List;ZZ)V" {
subgraph cluster_Region_1484177438 {
label = "R(4:0|(4:2|(1:4)(1:5)|(3:7|(1:9)|10)(0)|11)|12|(7:15|(1:17)|18|(1:22)|23|(3:26|(1:28)(1:29)|30)|31)) | DECL_VAR: java.lang.String null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.HashMap java.util.HashMap r0 = new java.util.HashMap()\lint int r2 = r9.getFieldTypes().length\lint r4 = 0\l}"];
subgraph cluster_LoopRegion_343909890 {
label = "LOOP:0: (4:2|(1:4)(1:5)|(3:7|(1:9)|10)(0)|11)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000c|LOOP_START\lPHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v17 int) binds: [B:0:0x0000, B:11:0x0035] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000c\-\>B:11:0x0035\l|if (r4 \< r2) goto L_0x000e\l}"];
subgraph cluster_Region_1424595193 {
label = "R(4:2|(1:4)(1:5)|(3:7|(1:9)|10)(0)|11)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000e|r5 = r1[r4]\l}"];
subgraph cluster_IfRegion_1370148839 {
label = "IF [B:3:0x0010] THEN: R(1:4) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0010|if (r12 == true) goto L_0x0012\l}"];
subgraph cluster_Region_1386518428 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012|java.lang.String r6 = r5.getUniqueIndexName()\l}"];
}
subgraph cluster_Region_1882649653 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0017|java.lang.String r6 = r5.getIndexName()\l}"];
}
}
subgraph cluster_IfRegion_206746453 {
label = "IF [B:6:0x001b] THEN: R(3:7|(1:9)|10) ELSE: R(0)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001b|PHI: r6 \l  PHI: (r6v2 java.lang.String) = (r6v3 java.lang.String), (r6v4 java.lang.String) binds: [B:5:0x0017, B:4:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 != null) goto L_0x001e\l}"];
subgraph cluster_Region_458866295 {
label = "R(3:7|(1:9)|10)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001e|java.util.List java.util.List r7 = (java.util.List) r0.get(r6)\l}"];
subgraph cluster_IfRegion_2123936428 {
label = "IF [B:8:0x0024] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0024|if (r7 == null) goto L_0x0026\l}"];
subgraph cluster_Region_2072830589 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0026|java.util.ArrayList r7 = new java.util.ArrayList()\lr0.put(r6, r7)\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x002e|PHI: r7 \l  PHI: (r7v3 java.util.List) = (r7v2 java.util.List), (r7v4 java.util.List) binds: [B:8:0x0024, B:9:0x0026] A[DONT_GENERATE, DONT_INLINE]\l|r7.add(r5.getColumnName())\l}"];
}
subgraph cluster_Region_1584288641 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_11 [shape=record,label="{11\:\ 0x0035|LOOP_END\lLOOP:0: B:1:0x000c\-\>B:11:0x0035\l|r4++\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0038|java.lang.StringBuilder java.lang.StringBuilder r1 = new java.lang.StringBuilder(128)\ljava.util.Iterator r0 = r0.entrySet().iterator()\l}"];
subgraph cluster_LoopRegion_927511032 {
label = "LOOP:1: (7:15|(1:17)|18|(1:22)|23|(3:26|(1:28)(1:29)|30)|31)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x004b|if (r0.hasNext() != false) goto L_0x004d\l}"];
subgraph cluster_Region_980538442 {
label = "R(7:15|(1:17)|18|(1:22)|23|(3:26|(1:28)(1:29)|30)|31)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x004d|java.util.Map$Entry r2 = (java.util.Map.Entry) r0.next()\llogger.info(\"creating index '\{\}' for table '\{\}\", r2.getKey(), (java.lang.Object) r9.getTableName())\lr1.append(\"CREATE \")\l}"];
subgraph cluster_IfRegion_815432961 {
label = "IF [B:16:0x0067] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0067|if (r12 == true) goto L_0x0069\l}"];
subgraph cluster_Region_1821208437 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0069|r1.append(\"UNIQUE \")\l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x006e|r1.append(\"INDEX \")\l}"];
subgraph cluster_IfRegion_692797532 {
label = "IF [B:19:0x0073, B:21:0x0079] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0073|ADDED_TO_REGION\l|if (r11 == true) goto L_0x0075\l}"];
Node_21 [shape=record,label="{21\:\ 0x0079|ADDED_TO_REGION\l|if (r8.isCreateIndexIfNotExistsSupported() == true) goto L_0x007b\l}"];
subgraph cluster_Region_1888413587 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x007b|r1.append(\"IF NOT EXISTS \")\l}"];
}
}
Node_23 [shape=record,label="{23\:\ 0x0080|r8.appendEscapedEntityName(r1, (java.lang.String) r2.getKey())\lr1.append(\" ON \")\lr8.appendEscapedEntityName(r1, r9.getTableName())\lr1.append(\" ( \")\ljava.util.Iterator r2 = ((java.util.List) r2.getValue()).iterator()\lboolean r4 = true\l}"];
subgraph cluster_LoopRegion_85327023 {
label = "LOOP:2: (3:26|(1:28)(1:29)|30)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x00a9|if (r2.hasNext() != false) goto L_0x00ab\l}"];
subgraph cluster_Region_1549782514 {
label = "R(3:26|(1:28)(1:29)|30)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x00ab|java.lang.String r5 = (java.lang.String) r2.next()\l}"];
subgraph cluster_IfRegion_1553670466 {
label = "IF [B:27:0x00b1] THEN: R(1:28) ELSE: R(1:29)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x00b1|if (r4 == true) goto L_0x00b3\l}"];
subgraph cluster_Region_1529804747 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x00b3|r4 = false\l}"];
}
subgraph cluster_Region_1756927787 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x00b5|r1.append(\", \")\l}"];
}
}
Node_30 [shape=record,label="{30\:\ 0x00ba|LOOP_END\lPHI: r4 \l  PHI: (r4v12 boolean) = (r4v11 boolean), (r4v13 boolean) binds: [B:38:0x00ba, B:39:0x00ba] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:24:0x00a5\-\>B:30:0x00ba\l|r8.appendEscapedEntityName(r1, r5)\l}"];
}
}
Node_31 [shape=record,label="{31\:\ 0x00be|LOOP_END\lLOOP:1: B:13:0x0047\-\>B:31:0x00be\l|r1.append(\" )\")\lr10.add(r1.toString())\lr1.setLength(0)\l}"];
}
}
}
Node_13 [shape=record,color=red,label="{13\:\ 0x0047|LOOP_START\lLOOP:1: B:13:0x0047\-\>B:31:0x00be\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0075}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x00a5|LOOP_START\lPHI: r4 \l  PHI: (r4v11 boolean) = (r4v10 boolean), (r4v12 boolean) binds: [B:23:0x0080, B:30:0x00ba] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:24:0x00a5\-\>B:30:0x00ba\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x00cf}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0038|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0035|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0035|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x00cf|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x00be|SYNTHETIC\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x00ba|SYNTHETIC\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x00ba|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void com.j256.ormlite.table.TableUtils.addCreateIndexStatements((r8v0 com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 com.j256.ormlite.table.TableInfo\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 java.util.List\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, ID:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Lcom\/j256\/ormlite\/table\/TableInfo\<, TT;TID;\>;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;ZZ)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_33[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_35[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_34;
Node_11 -> Node_1;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_14 -> Node_36[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_23[style=dashed];
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_25 -> Node_37[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_39;
Node_29 -> Node_38;
Node_30 -> Node_24;
Node_31 -> Node_13;
Node_13 -> Node_14;
Node_20 -> Node_21;
Node_24 -> Node_25;
Node_33 -> Node_12;
Node_34 -> Node_11;
Node_35 -> Node_11;
Node_36 -> Node_32;
Node_37 -> Node_31;
Node_38 -> Node_30;
Node_39 -> Node_30;
}

