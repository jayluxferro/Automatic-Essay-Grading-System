digraph "CFG forcom.j256.ormlite.table.TableUtils.createTable(Lcom\/j256\/ormlite\/dao\/Dao;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r1 I:int) = (r1 I:com.j256.ormlite.dao.Dao), (r0 I:boolean) com.j256.ormlite.table.TableUtils.doCreateTable(com.j256.ormlite.dao.Dao, boolean):int type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{public static int com.j256.ormlite.table.TableUtils.createTable((r1 I:com.j256.ormlite.dao.Dao\<?, ?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/dao\/Dao\<, **\>;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

