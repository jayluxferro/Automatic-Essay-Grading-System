digraph "CFG forcom.j256.ormlite.table.TableUtils.addCreateIndexStatements(Lcom\/j256\/ormlite\/db\/DatabaseType;Lcom\/j256\/ormlite\/table\/TableInfo;Ljava\/util\/List;ZZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x0002: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r1 I:com.j256.ormlite.field.FieldType[]) = (r9 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getFieldTypes():com.j256.ormlite.field.FieldType[] type: VIRTUAL \l0x0009: ARRAY_LENGTH  (r2 I:int) = (r1 I:?[]) \l0x000a: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r4 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:13:0x0038 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: AGET  (r5 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: INVOKE  (r6 I:java.lang.String) = (r5 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getUniqueIndexName():java.lang.String type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: INVOKE  (r6 I:java.lang.String) = (r5 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getIndexName():java.lang.String type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001e \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: INVOKE  (r7 I:java.lang.Object) = (r0 I:java.util.Map), (r6 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0022: CHECK_CAST  (r7 I:java.util.List) = (java.util.List) (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002e \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: NEW_INSTANCE  (r7 I:java.util.ArrayList) =  java.util.ArrayList \l0x0028: INVOKE  (r7 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x002b: INVOKE  \l  (r0 I:java.util.Map)\l  (r6 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: INVOKE  (r5 I:java.lang.String) = (r5 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getColumnName():java.lang.String type: VIRTUAL \l0x0032: INVOKE  (r7 I:java.util.List), (r5 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|0x0035: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|0x0038: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003a: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (128(0x80, float:1.794E\-43) ?[int, float, short, byte, char])\l \l0x003c: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.\<init\>(int):void type: DIRECT \l0x003f: INVOKE  (r0 I:java.util.Set) = (r0 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x0043: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x0047|0x0047: INVOKE  (r2 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x004b|0x004b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x00cf \l}"];
Node_16 [shape=record,label="{16\:\ 0x004d|0x004d: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0051: CHECK_CAST  (r2 I:java.util.Map$Entry) = (java.util.Map$Entry) (r2 I:?[OBJECT, ARRAY]) \l0x0053: SGET  (r4 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.table.TableUtils.logger com.j256.ormlite.logger.Logger \l0x0055: CONST_STR  (r5 I:java.lang.String) =  \"creating index '\{\}' for table '\{\}\" \l0x0057: INVOKE  (r6 I:java.lang.Object) = (r2 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x005b: INVOKE  (r7 I:java.lang.String) = (r9 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getTableName():java.lang.String type: VIRTUAL \l0x005f: INVOKE  \l  (r4 I:com.j256.ormlite.logger.Logger)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.info(java.lang.String, java.lang.Object, java.lang.Object):void type: VIRTUAL \l0x0062: CONST_STR  (r4 I:java.lang.String) =  \"CREATE \" \l0x0064: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0067|0x0067: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x006e \l}"];
Node_18 [shape=record,label="{18\:\ 0x0069|0x0069: CONST_STR  (r4 I:java.lang.String) =  \"UNIQUE \" \l0x006b: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x006e|0x006e: CONST_STR  (r4 I:java.lang.String) =  \"INDEX \" \l0x0070: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0073|0x0073: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0080 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0075|0x0075: INVOKE  (r4 I:boolean) = (r8 I:com.j256.ormlite.db.DatabaseType) com.j256.ormlite.db.DatabaseType.isCreateIndexIfNotExistsSupported():boolean type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x0079|0x0079: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0080 \l}"];
Node_23 [shape=record,label="{23\:\ 0x007b|0x007b: CONST_STR  (r4 I:java.lang.String) =  \"IF NOT EXISTS \" \l0x007d: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0080|0x0080: INVOKE  (r4 I:java.lang.Object) = (r2 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x0084: CHECK_CAST  (r4 I:java.lang.String) = (java.lang.String) (r4 I:?[OBJECT, ARRAY]) \l0x0086: INVOKE  \l  (r8 I:com.j256.ormlite.db.DatabaseType)\l  (r1 I:java.lang.StringBuilder)\l  (r4 I:java.lang.String)\l com.j256.ormlite.db.DatabaseType.appendEscapedEntityName(java.lang.StringBuilder, java.lang.String):void type: INTERFACE \l0x0089: CONST_STR  (r4 I:java.lang.String) =  \" ON \" \l0x008b: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008e: INVOKE  (r4 I:java.lang.String) = (r9 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getTableName():java.lang.String type: VIRTUAL \l0x0092: INVOKE  \l  (r8 I:com.j256.ormlite.db.DatabaseType)\l  (r1 I:java.lang.StringBuilder)\l  (r4 I:java.lang.String)\l com.j256.ormlite.db.DatabaseType.appendEscapedEntityName(java.lang.StringBuilder, java.lang.String):void type: INTERFACE \l0x0095: CONST_STR  (r4 I:java.lang.String) =  \" ( \" \l0x0097: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009a: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x009e: CHECK_CAST  (r2 I:java.util.List) = (java.util.List) (r2 I:?[OBJECT, ARRAY]) \l0x00a0: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l0x00a4: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x00a5|0x00a5: INVOKE  (r5 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_26 [shape=record,label="{26\:\ 0x00a9|0x00a9: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x00be \l}"];
Node_27 [shape=record,label="{27\:\ 0x00ab|0x00ab: INVOKE  (r5 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x00af: CHECK_CAST  (r5 I:java.lang.String) = (java.lang.String) (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x00b1|0x00b1: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x00b5 \l}"];
Node_29 [shape=record,label="{29\:\ 0x00b3|0x00b3: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_30 [shape=record,label="{30\:\ 0x00b5|0x00b5: CONST_STR  (r6 I:java.lang.String) =  \", \" \l0x00b7: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x00ba|0x00ba: INVOKE  \l  (r8 I:com.j256.ormlite.db.DatabaseType)\l  (r1 I:java.lang.StringBuilder)\l  (r5 I:java.lang.String)\l com.j256.ormlite.db.DatabaseType.appendEscapedEntityName(java.lang.StringBuilder, java.lang.String):void type: INTERFACE \l}"];
Node_32 [shape=record,label="{32\:\ 0x00be|0x00be: CONST_STR  (r2 I:java.lang.String) =  \" )\" \l0x00c0: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c3: INVOKE  (r2 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00c7: INVOKE  (r10 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x00ca: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.setLength(int):void type: VIRTUAL \l}"];
Node_33 [shape=record,label="{33\:\ 0x00cf|0x00cf: RETURN   \l}"];
MethodNode[shape=record,label="{private static void com.j256.ormlite.table.TableUtils.addCreateIndexStatements((r8 I:com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:com.j256.ormlite.table.TableInfo\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.util.List\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, ID:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Lcom\/j256\/ormlite\/table\/TableInfo\<, TT;TID;\>;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;ZZ)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_12[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_33;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_32;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_25;
Node_32 -> Node_14;
}

