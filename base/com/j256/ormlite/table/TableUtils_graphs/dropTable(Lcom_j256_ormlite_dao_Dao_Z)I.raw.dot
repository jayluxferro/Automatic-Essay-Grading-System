digraph "CFG forcom.j256.ormlite.table.TableUtils.dropTable(Lcom\/j256\/ormlite\/dao\/Dao;Z)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.j256.ormlite.support.ConnectionSource) = (r4 I:com.j256.ormlite.dao.Dao) com.j256.ormlite.dao.Dao.getConnectionSource():com.j256.ormlite.support.ConnectionSource type: INTERFACE \l0x0004: INVOKE  (r1 I:java.lang.Class) = (r4 I:com.j256.ormlite.dao.Dao) com.j256.ormlite.dao.Dao.getDataClass():java.lang.Class type: INTERFACE \l0x0008: INVOKE  (r2 I:com.j256.ormlite.db.DatabaseType) = (r0 I:com.j256.ormlite.support.ConnectionSource) com.j256.ormlite.support.ConnectionSource.getDatabaseType():com.j256.ormlite.db.DatabaseType type: INTERFACE \l0x000c: INSTANCE_OF  (r3 I:boolean) = (r4 I:?[OBJECT, ARRAY]) com.j256.ormlite.dao.BaseDaoImpl \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: CHECK_CAST  (r4 I:com.j256.ormlite.dao.BaseDaoImpl) = (com.j256.ormlite.dao.BaseDaoImpl) (r4 I:?[OBJECT, ARRAY]) \l0x0012: INVOKE  (r4 I:com.j256.ormlite.table.TableInfo) = (r4 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.getTableInfo():com.j256.ormlite.table.TableInfo type: VIRTUAL \l0x0016: INVOKE  (r4 I:int) = \l  (r2 I:com.j256.ormlite.db.DatabaseType)\l  (r0 I:com.j256.ormlite.support.ConnectionSource)\l  (r4 I:com.j256.ormlite.table.TableInfo)\l  (r5 I:boolean)\l com.j256.ormlite.table.TableUtils.doDropTable(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.support.ConnectionSource, com.j256.ormlite.table.TableInfo, boolean):int type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: RETURN  (r4 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: NEW_INSTANCE  (r4 I:com.j256.ormlite.table.TableInfo) =  com.j256.ormlite.table.TableInfo \l0x001d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001e: INVOKE  \l  (r4 I:com.j256.ormlite.table.TableInfo)\l  (r0 I:com.j256.ormlite.support.ConnectionSource)\l  (r3 I:com.j256.ormlite.dao.BaseDaoImpl)\l  (r1 I:java.lang.Class)\l com.j256.ormlite.table.TableInfo.\<init\>(com.j256.ormlite.support.ConnectionSource, com.j256.ormlite.dao.BaseDaoImpl, java.lang.Class):void type: DIRECT \l0x0021: INVOKE  (r4 I:int) = \l  (r2 I:com.j256.ormlite.db.DatabaseType)\l  (r0 I:com.j256.ormlite.support.ConnectionSource)\l  (r4 I:com.j256.ormlite.table.TableInfo)\l  (r5 I:boolean)\l com.j256.ormlite.table.TableUtils.doDropTable(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.support.ConnectionSource, com.j256.ormlite.table.TableInfo, boolean):int type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: RETURN  (r4 I:int) \l}"];
MethodNode[shape=record,label="{public static int com.j256.ormlite.table.TableUtils.dropTable((r4 I:com.j256.ormlite.dao.Dao\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, ID:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/dao\/Dao\<, TT;TID;\>;Z)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

