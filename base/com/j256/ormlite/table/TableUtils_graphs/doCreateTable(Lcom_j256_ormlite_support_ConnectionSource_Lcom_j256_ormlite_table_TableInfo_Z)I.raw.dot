digraph "CFG forcom.j256.ormlite.table.TableUtils.doCreateTable(Lcom\/j256\/ormlite\/support\/ConnectionSource;Lcom\/j256\/ormlite\/table\/TableInfo;Z)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.j256.ormlite.db.DatabaseType) = (r10 I:com.j256.ormlite.support.ConnectionSource) com.j256.ormlite.support.ConnectionSource.getDatabaseType():com.j256.ormlite.db.DatabaseType type: INTERFACE \l0x0004: SGET  (r1 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.table.TableUtils.logger com.j256.ormlite.logger.Logger \l0x0006: CONST_STR  (r2 I:java.lang.String) =  \"creating table '\{\}'\" \l0x0008: INVOKE  (r3 I:java.lang.String) = (r11 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getTableName():java.lang.String type: VIRTUAL \l0x000c: INVOKE  \l  (r1 I:com.j256.ormlite.logger.Logger)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.info(java.lang.String, java.lang.Object):void type: VIRTUAL \l0x000f: NEW_INSTANCE  (r6 I:java.util.ArrayList) =  java.util.ArrayList \l0x0011: INVOKE  (r6 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0014: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0016: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0019: INVOKE  \l  (r0 I:com.j256.ormlite.db.DatabaseType)\l  (r11 I:com.j256.ormlite.table.TableInfo)\l  (r6 I:java.util.List)\l  (r1 I:java.util.List)\l  (r12 I:boolean)\l com.j256.ormlite.table.TableUtils.addCreateTableStatements(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.table.TableInfo, java.util.List, java.util.List, boolean):void type: STATIC \l0x001c: INVOKE  (r11 I:java.lang.String) = (r11 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getTableName():java.lang.String type: VIRTUAL \l0x0020: INVOKE  (r11 I:com.j256.ormlite.support.DatabaseConnection) = \l  (r10 I:com.j256.ormlite.support.ConnectionSource)\l  (r11 I:java.lang.String)\l com.j256.ormlite.support.ConnectionSource.getReadWriteConnection(java.lang.String):com.j256.ormlite.support.DatabaseConnection type: INTERFACE \l0x0024: CONST_STR  (r5 I:java.lang.String) =  \"create\" \l0x0026: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0027|SYNTHETIC\lSplitter:B:1:0x0027\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0027\l|0x0027: INVOKE  (r8 I:boolean) = (r0 I:com.j256.ormlite.db.DatabaseType) com.j256.ormlite.db.DatabaseType.isCreateTableReturnsNegative():boolean type: INTERFACE A[Catch:\{ all \-\> 0x003d \}, TRY_ENTER]\l0x002b: INVOKE  (r9 I:boolean) = (r0 I:com.j256.ormlite.db.DatabaseType) com.j256.ormlite.db.DatabaseType.isCreateTableReturnsZero():boolean type: INTERFACE A[Catch:\{ all \-\> 0x003d \}]\l0x002f: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003d \}]\l0x0030: INVOKE  (r12 I:int) = \l  (r4 I:com.j256.ormlite.support.DatabaseConnection)\l  (r5 I:java.lang.String)\l  (r6 I:java.util.Collection)\l  (r7 I:boolean)\l  (r8 I:boolean)\l  (r9 I:boolean)\l com.j256.ormlite.table.TableUtils.doStatements(com.j256.ormlite.support.DatabaseConnection, java.lang.String, java.util.Collection, boolean, boolean, boolean):int type: STATIC A[Catch:\{ all \-\> 0x003d \}]\l0x0034: INVOKE  (r0 I:int) = \l  (r11 I:com.j256.ormlite.support.DatabaseConnection)\l  (r0 I:com.j256.ormlite.db.DatabaseType)\l  (r1 I:java.util.List)\l com.j256.ormlite.table.TableUtils.doCreateTestQueries(com.j256.ormlite.support.DatabaseConnection, com.j256.ormlite.db.DatabaseType, java.util.List):int type: STATIC A[Catch:\{ all \-\> 0x003d \}]\l0x0037: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0038|0x0038: ARITH  (r12 I:int) = (r12 I:int) + (r0 I:int) \l0x0039: INVOKE  \l  (r10 I:com.j256.ormlite.support.ConnectionSource)\l  (r11 I:com.j256.ormlite.support.DatabaseConnection)\l com.j256.ormlite.support.ConnectionSource.releaseConnection(com.j256.ormlite.support.DatabaseConnection):void type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x003c|0x003c: RETURN  (r12 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x003d|ExcHandler: all null\lSplitter:B:1:0x0027\l|0x003d: MOVE_EXCEPTION  (r12 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|0x003e: INVOKE  \l  (r10 I:com.j256.ormlite.support.ConnectionSource)\l  (r11 I:com.j256.ormlite.support.DatabaseConnection)\l com.j256.ormlite.support.ConnectionSource.releaseConnection(com.j256.ormlite.support.DatabaseConnection):void type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0041|0x0041: THROW  (r12 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static int com.j256.ormlite.table.TableUtils.doCreateTable((r10 I:com.j256.ormlite.support.ConnectionSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:com.j256.ormlite.table.TableInfo\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, ID:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/support\/ConnectionSource;, Lcom\/j256\/ormlite\/table\/TableInfo\<, TT;TID;\>;Z)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

