digraph "CFG forcom.j256.ormlite.table.TableUtils.addCreateTableStatements(Lcom\/j256\/ormlite\/support\/ConnectionSource;Lcom\/j256\/ormlite\/table\/TableInfo;Z)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.ArrayList r0 = new java.util.ArrayList()\ljava.util.ArrayList r1 = new java.util.ArrayList()\laddCreateTableStatements(r2.getDatabaseType(), r3, r0, r1, r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{private static java.util.List\<java.lang.String\> com.j256.ormlite.table.TableUtils.addCreateTableStatements((r2v0 com.j256.ormlite.support.ConnectionSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 com.j256.ormlite.table.TableInfo\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, ID:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/support\/ConnectionSource;, Lcom\/j256\/ormlite\/table\/TableInfo\<, TT;TID;\>;Z), Ljava\/util\/List\<, Ljava\/lang\/String;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

