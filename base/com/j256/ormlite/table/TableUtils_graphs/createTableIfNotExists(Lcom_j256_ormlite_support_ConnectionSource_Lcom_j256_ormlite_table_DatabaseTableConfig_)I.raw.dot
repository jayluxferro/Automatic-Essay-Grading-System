digraph "CFG forcom.j256.ormlite.table.TableUtils.createTableIfNotExists(Lcom\/j256\/ormlite\/support\/ConnectionSource;Lcom\/j256\/ormlite\/table\/DatabaseTableConfig;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.j256.ormlite.dao.Dao) = \l  (r0 I:com.j256.ormlite.support.ConnectionSource)\l  (r1 I:com.j256.ormlite.table.DatabaseTableConfig)\l com.j256.ormlite.dao.DaoManager.createDao(com.j256.ormlite.support.ConnectionSource, com.j256.ormlite.table.DatabaseTableConfig):com.j256.ormlite.dao.Dao type: STATIC \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: INVOKE  (r0 I:int) = (r0 I:com.j256.ormlite.dao.Dao), (r1 I:boolean) com.j256.ormlite.table.TableUtils.doCreateTable(com.j256.ormlite.dao.Dao, boolean):int type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public static int com.j256.ormlite.table.TableUtils.createTableIfNotExists((r0 I:com.j256.ormlite.support.ConnectionSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:com.j256.ormlite.table.DatabaseTableConfig\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/support\/ConnectionSource;, Lcom\/j256\/ormlite\/table\/DatabaseTableConfig\<, TT;\>;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

