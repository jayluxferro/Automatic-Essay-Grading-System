digraph "CFG forcom.j256.ormlite.table.TableUtils.dropTable(Lcom\/j256\/ormlite\/dao\/Dao;Z)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.j256.ormlite.support.ConnectionSource r0 = r4.getConnectionSource()\ljava.lang.Class r1 = r4.getDataClass()\lcom.j256.ormlite.db.DatabaseType r2 = r0.getDatabaseType()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if ((r4 instanceof com.j256.ormlite.dao.BaseDaoImpl) == false) goto L_0x001b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010}"];
Node_3 [shape=record,label="{3\:\ 0x001a|RETURN\l|return doDropTable(r2, r0, ((com.j256.ormlite.dao.BaseDaoImpl) r4).getTableInfo(), r5)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b}"];
Node_5 [shape=record,label="{5\:\ 0x0025|RETURN\l|return doDropTable(r2, r0, new com.j256.ormlite.table.TableInfo(r0, (com.j256.ormlite.dao.BaseDaoImpl) null, r1), r5)\l}"];
MethodNode[shape=record,label="{public static int com.j256.ormlite.table.TableUtils.dropTable((r4v0 com.j256.ormlite.dao.Dao\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, ID:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/dao\/Dao\<, TT;TID;\>;Z)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

