digraph "CFG forcom.j256.ormlite.table.TableUtils.addCreateTableStatements(Lcom\/j256\/ormlite\/db\/DatabaseType;Lcom\/j256\/ormlite\/table\/TableInfo;Ljava\/util\/List;Ljava\/util\/List;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0004: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0006: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: NEW_INSTANCE  (r12 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000a: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (256(0x100, float:3.59E\-43) ?[int, float, short, byte, char])\l \l0x000c: INVOKE  (r12 I:java.lang.StringBuilder), (r0 I:int) java.lang.StringBuilder.\<init\>(int):void type: DIRECT \l0x000f: CONST_STR  (r0 I:java.lang.String) =  \"CREATE TABLE \" \l0x0011: INVOKE  (r12 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0021 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: INVOKE  (r0 I:boolean) = (r21 I:com.j256.ormlite.db.DatabaseType) com.j256.ormlite.db.DatabaseType.isCreateIfNotExistsSupported():boolean type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0021 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: CONST_STR  (r0 I:java.lang.String) =  \"IF NOT EXISTS \" \l0x001e: INVOKE  (r12 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: INVOKE  (r0 I:java.lang.String) = (r22 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getTableName():java.lang.String type: VIRTUAL \l0x0025: INVOKE  \l  (r8 I:com.j256.ormlite.db.DatabaseType)\l  (r12 I:java.lang.StringBuilder)\l  (r0 I:java.lang.String)\l com.j256.ormlite.db.DatabaseType.appendEscapedEntityName(java.lang.StringBuilder, java.lang.String):void type: INTERFACE \l0x0028: CONST_STR  (r0 I:java.lang.String) =  \" (\" \l0x002a: INVOKE  (r12 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002d: NEW_INSTANCE  (r13 I:java.util.ArrayList) =  java.util.ArrayList \l0x002f: INVOKE  (r13 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0032: NEW_INSTANCE  (r14 I:java.util.ArrayList) =  java.util.ArrayList \l0x0034: INVOKE  (r14 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0037: NEW_INSTANCE  (r15 I:java.util.ArrayList) =  java.util.ArrayList \l0x0039: INVOKE  (r15 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x003c: INVOKE  (r7 I:com.j256.ormlite.field.FieldType[]) = (r22 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getFieldTypes():com.j256.ormlite.field.FieldType[] type: VIRTUAL \l0x0040: ARRAY_LENGTH  (r6 I:int) = (r7 I:?[]) \l0x0041: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0042: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0043: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0044: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0045|0x0045: IF  (r3 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:19:0x00a8 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0047|0x0047: AGET  (r16 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0049: INVOKE  (r1 I:boolean) = (r16 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.isForeignCollection():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x004d|0x004d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0057 \l}"];
Node_9 [shape=record,label="{9\:\ 0x004f|0x004f: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0051: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0053: MOVE  (r20 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0055: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0057|0x0057: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x005c \l}"];
Node_11 [shape=record,label="{11\:\ 0x0059|0x0059: CONST  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x005c|0x005c: CONST_STR  (r1 I:java.lang.String) =  \", \" \l0x005e: INVOKE  (r12 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0061: MOVE  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0063|0x0063: INVOKE  (r0 I:java.lang.String) = (r16 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getColumnDefinition():java.lang.String type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0067|0x0067: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0082 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0069|0x0069: INVOKE  (r1 I:java.lang.String) = (r22 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getTableName():java.lang.String type: VIRTUAL \l0x006d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x006f: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0070: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0072: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0074: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0075: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0076: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0077: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0079: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x007a: MOVE  (r20 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x007c: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x007e: INVOKE  \l  (r0 I:com.j256.ormlite.db.DatabaseType)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.StringBuilder)\l  (r3 I:com.j256.ormlite.field.FieldType)\l  (r4 I:java.util.List)\l  (r5 I:java.util.List)\l  (r6 I:java.util.List)\l  (r7 I:java.util.List)\l com.j256.ormlite.db.DatabaseType.appendColumnArg(java.lang.String, java.lang.StringBuilder, com.j256.ormlite.field.FieldType, java.util.List, java.util.List, java.util.List, java.util.List):void type: INTERFACE \l}"];
Node_16 [shape=record,label="{16\:\ 0x0082|0x0082: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0084: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0086: MOVE  (r20 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0088: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0089: INVOKE  (r1 I:java.lang.String) = (r16 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getColumnName():java.lang.String type: VIRTUAL \l0x008d: INVOKE  \l  (r8 I:com.j256.ormlite.db.DatabaseType)\l  (r12 I:java.lang.StringBuilder)\l  (r1 I:java.lang.String)\l com.j256.ormlite.db.DatabaseType.appendEscapedEntityName(java.lang.StringBuilder, java.lang.String):void type: INTERFACE \l0x0090: CONST  (r1 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0092: INVOKE  (r12 I:java.lang.StringBuilder), (r1 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0095: INVOKE  (r12 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0098: INVOKE  (r12 I:java.lang.StringBuilder), (r1 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x009b|0x009b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x009d|0x009d: ARITH  (r3 I:int) = (r18 I:int) + (1 int) \l0x009f: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a1: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00a3: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00a4: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a5: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x00a8|0x00a8: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a9: INVOKE  (r1 I:com.j256.ormlite.field.FieldType[]) = (r22 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getFieldTypes():com.j256.ormlite.field.FieldType[] type: VIRTUAL \l0x00ad: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x00af: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x00b0: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x00b1: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x00b2: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x00b4: INVOKE  \l  (r0 I:com.j256.ormlite.db.DatabaseType)\l  (r1 I:com.j256.ormlite.field.FieldType[])\l  (r2 I:java.util.List)\l  (r3 I:java.util.List)\l  (r4 I:java.util.List)\l  (r5 I:java.util.List)\l com.j256.ormlite.db.DatabaseType.addPrimaryKeySql(com.j256.ormlite.field.FieldType[], java.util.List, java.util.List, java.util.List, java.util.List):void type: INTERFACE \l0x00b7: INVOKE  (r1 I:com.j256.ormlite.field.FieldType[]) = (r22 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getFieldTypes():com.j256.ormlite.field.FieldType[] type: VIRTUAL \l0x00bb: INVOKE  \l  (r0 I:com.j256.ormlite.db.DatabaseType)\l  (r1 I:com.j256.ormlite.field.FieldType[])\l  (r2 I:java.util.List)\l  (r3 I:java.util.List)\l  (r4 I:java.util.List)\l  (r5 I:java.util.List)\l com.j256.ormlite.db.DatabaseType.addUniqueComboSql(com.j256.ormlite.field.FieldType[], java.util.List, java.util.List, java.util.List, java.util.List):void type: INTERFACE \l0x00be: INVOKE  (r0 I:java.util.Iterator) = (r13 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_20 [shape=record,label="{20\:\ 0x00c2|0x00c2: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x00c6|0x00c6: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x00d7 \l}"];
Node_22 [shape=record,label="{22\:\ 0x00c8|0x00c8: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x00cc: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) \l0x00ce: CONST_STR  (r2 I:java.lang.String) =  \", \" \l0x00d0: INVOKE  (r12 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00d3: INVOKE  (r12 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x00d7|0x00d7: CONST_STR  (r0 I:java.lang.String) =  \") \" \l0x00d9: INVOKE  (r12 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00dc: INVOKE  \l  (r8 I:com.j256.ormlite.db.DatabaseType)\l  (r12 I:java.lang.StringBuilder)\l com.j256.ormlite.db.DatabaseType.appendCreateTableSuffix(java.lang.StringBuilder):void type: INTERFACE \l0x00df: INVOKE  (r10 I:java.util.List), (r14 I:java.util.Collection) java.util.List.addAll(java.util.Collection):boolean type: INTERFACE \l0x00e2: INVOKE  (r0 I:java.lang.String) = (r12 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00e6: INVOKE  (r10 I:java.util.List), (r0 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x00e9: INVOKE  (r10 I:java.util.List), (r15 I:java.util.Collection) java.util.List.addAll(java.util.Collection):boolean type: INTERFACE \l0x00ec: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x00ee: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ef: INVOKE  \l  (r8 I:com.j256.ormlite.db.DatabaseType)\l  (r0 I:com.j256.ormlite.table.TableInfo)\l  (r10 I:java.util.List)\l  (r11 I:boolean)\l  (r1 I:boolean)\l com.j256.ormlite.table.TableUtils.addCreateIndexStatements(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.table.TableInfo, java.util.List, boolean, boolean):void type: STATIC \l0x00f2: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00f3: INVOKE  \l  (r8 I:com.j256.ormlite.db.DatabaseType)\l  (r0 I:com.j256.ormlite.table.TableInfo)\l  (r10 I:java.util.List)\l  (r11 I:boolean)\l  (r1 I:boolean)\l com.j256.ormlite.table.TableUtils.addCreateIndexStatements(com.j256.ormlite.db.DatabaseType, com.j256.ormlite.table.TableInfo, java.util.List, boolean, boolean):void type: STATIC \l}"];
Node_24 [shape=record,label="{24\:\ 0x00f6|0x00f6: RETURN   \l}"];
MethodNode[shape=record,label="{private static void com.j256.ormlite.table.TableUtils.addCreateTableStatements((r21 I:com.j256.ormlite.db.DatabaseType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:com.j256.ormlite.table.TableInfo\<T, ID\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:java.util.List\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:java.util.List\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, ID:, Ljava\/lang\/Object;, \>(, Lcom\/j256\/ormlite\/db\/DatabaseType;, Lcom\/j256\/ormlite\/table\/TableInfo\<, TT;TID;\>;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;Z)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_19;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_18;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_6;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_20;
Node_23 -> Node_24;
}

