digraph "CFG forcom.j256.ormlite.table.TableInfo.objectToString(Ljava\/lang\/Object;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (64 ?[int, float, short, byte, char]) \l0x0004: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.\<init\>(int):void type: DIRECT \l0x0007: INVOKE  (r1 I:java.lang.Class) = (r7 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x000b: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x000f: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0012: IGET  (r1 I:com.j256.ormlite.field.FieldType[]) = (r6 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.fieldTypes com.j256.ormlite.field.FieldType[] \l0x0014: ARRAY_LENGTH  (r2 I:int) = (r1 I:?[]) \l0x0015: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|0x0016: IF  (r3 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:9:0x004d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|0x0018: AGET  (r4 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x001a: CONST  (r5 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x001c: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x001f: INVOKE  (r5 I:java.lang.String) = (r4 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getColumnName():java.lang.String type: VIRTUAL \l0x0023: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0026: CONST  (r5 I:?[int, float, short, byte, char]) = (61 ?[int, float, short, byte, char]) \l0x0028: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x002b|SYNTHETIC\lSplitter:B:3:0x002b\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x002b\l|0x002b: INVOKE  (r5 I:java.lang.Object) = \l  (r4 I:com.j256.ormlite.field.FieldType)\l  (r7 I:java.lang.Object)\l com.j256.ormlite.field.FieldType.extractJavaFieldValue(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ Exception \-\> 0x0035 \}, TRY_ENTER]\l0x002f: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x0035 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0032|0x0032: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0035|ExcHandler: Exception null\lSplitter:B:3:0x002b\l|0x0035: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0036|0x0036: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0038: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003a: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x003d: CONST_STR  (r2 I:java.lang.String) =  \"Could not generate toString of field \" \l0x003f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0042: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0045: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0049: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l  (r7 I:java.lang.Throwable)\l java.lang.IllegalStateException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x004c|0x004c: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_9 [shape=record,label="{9\:\ 0x004d|0x004d: INVOKE  (r7 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0051|0x0051: RETURN  (r7 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String com.j256.ormlite.table.TableInfo.objectToString((r6 'this' I:com.j256.ormlite.table.TableInfo A[IMMUTABLE_TYPE, THIS]), (r7 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;), Ljava\/lang\/String;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
}

