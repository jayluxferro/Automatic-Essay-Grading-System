digraph "CFG forcom.j256.ormlite.table.DatabaseTableConfigLoader.write(Ljava\/io\/BufferedWriter;Lcom\/j256\/ormlite\/table\/DatabaseTableConfig;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  \l  (r0 I:java.io.BufferedWriter)\l  (r1 I:com.j256.ormlite.table.DatabaseTableConfig)\l com.j256.ormlite.table.DatabaseTableConfigLoader.writeConfig(java.io.BufferedWriter, com.j256.ormlite.table.DatabaseTableConfig):void type: STATIC A[Catch:\{ IOException \-\> 0x0004 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|ExcHandler: IOException null\lSplitter:B:0:0x0000\l|0x0004: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: CONST_STR  (r1 I:java.lang.String) =  \"Could not write config to writer\" \l0x0007: INVOKE  (r0 I:java.sql.SQLException) = (r1 I:java.lang.String), (r0 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void com.j256.ormlite.table.DatabaseTableConfigLoader.write((r0 I:java.io.BufferedWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:com.j256.ormlite.table.DatabaseTableConfig\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/io\/BufferedWriter;, Lcom\/j256\/ormlite\/table\/DatabaseTableConfig\<, TT;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

