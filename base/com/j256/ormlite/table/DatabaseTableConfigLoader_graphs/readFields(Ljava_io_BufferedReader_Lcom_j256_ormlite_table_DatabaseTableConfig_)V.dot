digraph "CFG forcom.j256.ormlite.table.DatabaseTableConfigLoader.readFields(Ljava\/io\/BufferedReader;Lcom\/j256\/ormlite\/table\/DatabaseTableConfig;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.ArrayList r0 = new java.util.ArrayList()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|LOOP_START\lSYNTHETIC\lSplitter:B:1:0x0005\lLOOP:0: B:1:0x0005\-\>B:8:0x001b\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IOException \-\> 0x0023 \}\lSplitter:B:1:0x0005\l|java.lang.String r1 = r3.readLine()     \/\/ Catch:\{ IOException \-\> 0x0023 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r1 == null) goto L_0x001f\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b}"];
Node_5 [shape=record,label="{5\:\ 0x0011|if (r1.equals(CONFIG_FILE_FIELDS_END) == false) goto L_0x0014\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|com.j256.ormlite.field.DatabaseFieldConfig r1 = com.j256.ormlite.field.DatabaseFieldConfigLoader.fromReader(r3)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|if (r1 != null) goto L_0x001b\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|LOOP_END\lLOOP:0: B:1:0x0005\-\>B:8:0x001b\l|r0.add(r1)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|r4.setFieldConfigs(r0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|ExcHandler: IOException (r3v1 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0005\l|java.io.IOException r3 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024}"];
Node_13 [shape=record,label="{13\:\ 0x002a|throw com.j256.ormlite.misc.SqlExceptionUtil.create(\"Could not read next field from config file\", r3)\l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x001f|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x001f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void com.j256.ormlite.table.DatabaseTableConfigLoader.readFields((r3v0 java.io.BufferedReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 com.j256.ormlite.table.DatabaseTableConfig\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/io\/BufferedReader;, Lcom\/j256\/ormlite\/table\/DatabaseTableConfig\<, TT;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_16;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_14[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_15[style=dashed];
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_9;
Node_15 -> Node_9;
Node_16 -> Node_9;
}

