digraph "CFG forcom.j256.ormlite.table.DatabaseTableConfigLoader.fromReader(Ljava\/io\/BufferedReader;)Lcom\/j256\/ormlite\/table\/DatabaseTableConfig;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.j256.ormlite.table.DatabaseTableConfig r0 = new com.j256.ormlite.table.DatabaseTableConfig\<\>()\lr3 = false\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|LOOP_START\lSYNTHETIC\lPHI: r3 \l  PHI: (r3v1 boolean) = (r3v0 boolean), (r3v2 boolean) binds: [B:0:0x0000, B:26:0x0008] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:1:0x0008\lLOOP:0: B:1:0x0008\-\>B:26:0x0008\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IOException \-\> 0x006a \}\lSplitter:B:1:0x0008\l|java.lang.String r4 = r7.readLine()     \/\/ Catch:\{ IOException \-\> 0x006a \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r4 != null) goto L_0x000f\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f}"];
Node_5 [shape=record,label="{5\:\ 0x0015|if (r4.equals(CONFIG_FILE_END_MARKER) == false) goto L_0x001c\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|if (r3 == false) goto L_0x001a\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|RETURN\l|return r0\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|RETURN\l|return null\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c}"];
Node_10 [shape=record,label="{10\:\ 0x0022|if (r4.equals(CONFIG_FILE_FIELDS_START) == false) goto L_0x0028\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|readFields(r7, r0)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028}"];
Node_13 [shape=record,label="{13\:\ 0x002c|if (r4.length() == 0) goto L_0x0008\l}"];
Node_14 [shape=record,label="{14\:\ 0x002e}"];
Node_15 [shape=record,label="{15\:\ 0x0034|if (r4.startsWith(\"#\") != false) goto L_0x0008\l}"];
Node_16 [shape=record,label="{16\:\ 0x0036}"];
Node_17 [shape=record,label="{17\:\ 0x003c|if (r4.equals(CONFIG_FILE_START_MARKER) == false) goto L_0x003f\l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|java.lang.String[] r3 = r4.split(com.j256.ormlite.stmt.query.SimpleComparison.EQUAL_TO_OPERATION, \-2)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0048|if (r3.length != 2) goto L_0x0053\l}"];
Node_20 [shape=record,label="{20\:\ 0x004a|readTableField(r0, r3[0], r3[1])\lr3 = true\l}"];
Node_21 [shape=record,label="{21\:\ 0x0053|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"DatabaseTableConfig reading from stream cannot parse line: \")\lr0.append(r4)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0069|throw new java.sql.SQLException(r0.toString())\l}"];
Node_23 [shape=record,label="{23\:\ 0x006a|ExcHandler: IOException (r7v1 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0008\l|java.io.IOException r7 = move\-exception\l}"];
Node_24 [shape=record,label="{24\:\ 0x006b}"];
Node_25 [shape=record,label="{25\:\ 0x0071|throw com.j256.ormlite.misc.SqlExceptionUtil.create(\"Could not read DatabaseTableConfig from stream\", r7)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0008|LOOP_END\lSYNTHETIC\lPHI: r3 \l  PHI: (r3v2 boolean) = (r3v1 boolean), (r3v1 boolean), (r3v1 boolean), (r3v6 boolean), (r3v1 boolean) binds: [B:31:0x0008, B:32:0x0008, B:33:0x0008, B:34:0x0008, B:30:0x0008] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0008\-\>B:26:0x0008\l}"];
Node_27 [shape=record,label="{27\:\ 0x0053|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0017|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0017|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0008|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0008|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0008|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0008|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0008|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static com.j256.ormlite.table.DatabaseTableConfig\<T\> com.j256.ormlite.table.DatabaseTableConfigLoader.fromReader((r7v0 java.io.BufferedReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/io\/BufferedReader;, ), Lcom\/j256\/ormlite\/table\/DatabaseTableConfig\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_23;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_28[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_9;
Node_5 -> Node_29[style=dashed];
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_30;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_31;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_32;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_33[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_34;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_26 -> Node_1;
Node_27 -> Node_21;
Node_28 -> Node_6;
Node_29 -> Node_6;
Node_30 -> Node_26;
Node_31 -> Node_26;
Node_32 -> Node_26;
Node_33 -> Node_26;
Node_34 -> Node_26;
}

