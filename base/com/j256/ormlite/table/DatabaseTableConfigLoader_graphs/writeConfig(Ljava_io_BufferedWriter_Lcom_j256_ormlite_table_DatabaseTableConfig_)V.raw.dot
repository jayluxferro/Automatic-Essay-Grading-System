digraph "CFG forcom.j256.ormlite.table.DatabaseTableConfigLoader.writeConfig(Ljava\/io\/BufferedWriter;Lcom\/j256\/ormlite\/table\/DatabaseTableConfig;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"# \-\-table\-start\-\-\" \l0x0002: INVOKE  \l  (r3 I:java.io.BufferedWriter)\l  (r0 I:java.lang.CharSequence)\l java.io.BufferedWriter.append(java.lang.CharSequence):java.io.Writer type: VIRTUAL \l0x0005: INVOKE  (r3 I:java.io.BufferedWriter) java.io.BufferedWriter.newLine():void type: VIRTUAL \l0x0008: INVOKE  (r0 I:java.lang.Class) = (r4 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.getDataClass():java.lang.Class type: VIRTUAL \l0x000c: CONST  (r1 I:?[int, float, short, byte, char]) = (61 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: CONST_STR  (r0 I:java.lang.String) =  \"dataClass\" \l0x0012: INVOKE  (r0 I:java.io.Writer) = \l  (r3 I:java.io.BufferedWriter)\l  (r0 I:java.lang.CharSequence)\l java.io.BufferedWriter.append(java.lang.CharSequence):java.io.Writer type: VIRTUAL \l0x0016: INVOKE  (r0 I:java.io.Writer) = (r0 I:java.io.Writer), (r1 I:char) java.io.Writer.append(char):java.io.Writer type: VIRTUAL \l0x001a: INVOKE  (r2 I:java.lang.Class) = (r4 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.getDataClass():java.lang.Class type: VIRTUAL \l0x001e: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Class) java.lang.Class.getName():java.lang.String type: VIRTUAL \l0x0022: INVOKE  (r0 I:java.io.Writer), (r2 I:java.lang.CharSequence) java.io.Writer.append(java.lang.CharSequence):java.io.Writer type: VIRTUAL \l0x0025: INVOKE  (r3 I:java.io.BufferedWriter) java.io.BufferedWriter.newLine():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0028|0x0028: INVOKE  (r0 I:java.lang.String) = (r4 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.getTableName():java.lang.String type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|0x002c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0042 \l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|0x002e: CONST_STR  (r0 I:java.lang.String) =  \"tableName\" \l0x0030: INVOKE  (r0 I:java.io.Writer) = \l  (r3 I:java.io.BufferedWriter)\l  (r0 I:java.lang.CharSequence)\l java.io.BufferedWriter.append(java.lang.CharSequence):java.io.Writer type: VIRTUAL \l0x0034: INVOKE  (r0 I:java.io.Writer) = (r0 I:java.io.Writer), (r1 I:char) java.io.Writer.append(char):java.io.Writer type: VIRTUAL \l0x0038: INVOKE  (r1 I:java.lang.String) = (r4 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.getTableName():java.lang.String type: VIRTUAL \l0x003c: INVOKE  (r0 I:java.io.Writer), (r1 I:java.lang.CharSequence) java.io.Writer.append(java.lang.CharSequence):java.io.Writer type: VIRTUAL \l0x003f: INVOKE  (r3 I:java.io.BufferedWriter) java.io.BufferedWriter.newLine():void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0042|0x0042: CONST_STR  (r0 I:java.lang.String) =  \"# \-\-table\-fields\-start\-\-\" \l0x0044: INVOKE  \l  (r3 I:java.io.BufferedWriter)\l  (r0 I:java.lang.CharSequence)\l java.io.BufferedWriter.append(java.lang.CharSequence):java.io.Writer type: VIRTUAL \l0x0047: INVOKE  (r3 I:java.io.BufferedWriter) java.io.BufferedWriter.newLine():void type: VIRTUAL \l0x004a: INVOKE  (r0 I:java.util.List) = (r4 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.getFieldConfigs():java.util.List type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x004e|0x004e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x006c \l}"];
Node_8 [shape=record,label="{8\:\ 0x0050|0x0050: INVOKE  (r0 I:java.util.List) = (r4 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.getFieldConfigs():java.util.List type: VIRTUAL \l0x0054: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x0058|0x0058: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x005c|0x005c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x006c \l}"];
Node_11 [shape=record,label="{11\:\ 0x005e|0x005e: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0062: CHECK_CAST  (r1 I:com.j256.ormlite.field.DatabaseFieldConfig) = (com.j256.ormlite.field.DatabaseFieldConfig) (r1 I:?[OBJECT, ARRAY]) \l0x0064: INVOKE  (r2 I:java.lang.String) = (r4 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.getTableName():java.lang.String type: VIRTUAL \l0x0068: INVOKE  \l  (r3 I:java.io.BufferedWriter)\l  (r1 I:com.j256.ormlite.field.DatabaseFieldConfig)\l  (r2 I:java.lang.String)\l com.j256.ormlite.field.DatabaseFieldConfigLoader.write(java.io.BufferedWriter, com.j256.ormlite.field.DatabaseFieldConfig, java.lang.String):void type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x006c|0x006c: CONST_STR  (r4 I:java.lang.String) =  \"# \-\-table\-fields\-end\-\-\" \l0x006e: INVOKE  \l  (r3 I:java.io.BufferedWriter)\l  (r4 I:java.lang.CharSequence)\l java.io.BufferedWriter.append(java.lang.CharSequence):java.io.Writer type: VIRTUAL \l0x0071: INVOKE  (r3 I:java.io.BufferedWriter) java.io.BufferedWriter.newLine():void type: VIRTUAL \l0x0074: CONST_STR  (r4 I:java.lang.String) =  \"# \-\-table\-end\-\-\" \l0x0076: INVOKE  \l  (r3 I:java.io.BufferedWriter)\l  (r4 I:java.lang.CharSequence)\l java.io.BufferedWriter.append(java.lang.CharSequence):java.io.Writer type: VIRTUAL \l0x0079: INVOKE  (r3 I:java.io.BufferedWriter) java.io.BufferedWriter.newLine():void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x007c|0x007c: RETURN   \l}"];
MethodNode[shape=record,label="{private static void com.j256.ormlite.table.DatabaseTableConfigLoader.writeConfig((r3 I:java.io.BufferedWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.j256.ormlite.table.DatabaseTableConfig\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/io\/BufferedWriter;, Lcom\/j256\/ormlite\/table\/DatabaseTableConfig\<, TT;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_9;
Node_12 -> Node_13;
}

