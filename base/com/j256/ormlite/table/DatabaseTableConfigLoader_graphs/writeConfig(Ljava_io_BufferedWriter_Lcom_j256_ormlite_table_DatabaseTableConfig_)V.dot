digraph "CFG forcom.j256.ormlite.table.DatabaseTableConfigLoader.writeConfig(Ljava\/io\/BufferedWriter;Lcom\/j256\/ormlite\/table\/DatabaseTableConfig;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3.append(CONFIG_FILE_START_MARKER)\lr3.newLine()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r4.getDataClass() == null) goto L_0x0028\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|r3.append(FIELD_NAME_DATA_CLASS).append(org.mapsforge.core.model.Tag.KEY_VALUE_SEPARATOR).append(r4.getDataClass().getName())\lr3.newLine()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0028}"];
Node_4 [shape=record,label="{4\:\ 0x002c|if (r4.getTableName() == null) goto L_0x0042\l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|r3.append(FIELD_NAME_TABLE_NAME).append(org.mapsforge.core.model.Tag.KEY_VALUE_SEPARATOR).append(r4.getTableName())\lr3.newLine()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0042|r3.append(CONFIG_FILE_FIELDS_START)\lr3.newLine()\l}"];
Node_7 [shape=record,label="{7\:\ 0x004e|if (r4.getFieldConfigs() == null) goto L_0x006c\l}"];
Node_8 [shape=record,label="{8\:\ 0x0050|java.util.Iterator r0 = r4.getFieldConfigs().iterator()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0058|LOOP_START\lLOOP:0: B:9:0x0058\-\>B:11:0x005e\l}"];
Node_10 [shape=record,label="{10\:\ 0x005c|if (r0.hasNext() == false) goto L_0x006c\l}"];
Node_11 [shape=record,label="{11\:\ 0x005e|LOOP_END\lLOOP:0: B:9:0x0058\-\>B:11:0x005e\l|com.j256.ormlite.field.DatabaseFieldConfigLoader.write(r3, r0.next(), r4.getTableName())\l}"];
Node_12 [shape=record,label="{12\:\ 0x006c|r3.append(CONFIG_FILE_FIELDS_END)\lr3.newLine()\lr3.append(CONFIG_FILE_END_MARKER)\lr3.newLine()\l}"];
Node_13 [shape=record,label="{13\:\ 0x007c|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ 0x006c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void com.j256.ormlite.table.DatabaseTableConfigLoader.writeConfig((r3v0 java.io.BufferedWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 com.j256.ormlite.table.DatabaseTableConfig\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/io\/BufferedWriter;, Lcom\/j256\/ormlite\/table\/DatabaseTableConfig\<, TT;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_9;
Node_12 -> Node_13;
Node_14 -> Node_12;
}

