digraph "CFG forcom.j256.ormlite.support.BaseConnectionSource.isSingleConnection(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Lcom\/j256\/ormlite\/support\/DatabaseConnection;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: INVOKE  \l  (r3 I:com.j256.ormlite.support.DatabaseConnection)\l  (r0 I:boolean)\l com.j256.ormlite.support.DatabaseConnection.setAutoCommit(boolean):void type: INTERFACE \l0x0004: INVOKE  \l  (r4 I:com.j256.ormlite.support.DatabaseConnection)\l  (r0 I:boolean)\l com.j256.ormlite.support.DatabaseConnection.setAutoCommit(boolean):void type: INTERFACE \l0x0007: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|SYNTHETIC\lSplitter:B:1:0x0008\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0008\l|0x0008: INVOKE  \l  (r3 I:com.j256.ormlite.support.DatabaseConnection)\l  (r1 I:boolean)\l com.j256.ormlite.support.DatabaseConnection.setAutoCommit(boolean):void type: INTERFACE A[Catch:\{ all \-\> 0x0019 \}, TRY_ENTER]\l0x000b: INVOKE  (r4 I:boolean) = (r4 I:com.j256.ormlite.support.DatabaseConnection) com.j256.ormlite.support.DatabaseConnection.isAutoCommit():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0019 \}]\l0x000e: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: INVOKE  \l  (r3 I:com.j256.ormlite.support.DatabaseConnection)\l  (r0 I:boolean)\l com.j256.ormlite.support.DatabaseConnection.setAutoCommit(boolean):void type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: RETURN  (r1 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INVOKE  \l  (r3 I:com.j256.ormlite.support.DatabaseConnection)\l  (r0 I:boolean)\l com.j256.ormlite.support.DatabaseConnection.setAutoCommit(boolean):void type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: RETURN  (r0 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|ExcHandler: all null\lSplitter:B:1:0x0008\l|0x0019: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: INVOKE  \l  (r3 I:com.j256.ormlite.support.DatabaseConnection)\l  (r0 I:boolean)\l com.j256.ormlite.support.DatabaseConnection.setAutoCommit(boolean):void type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected boolean com.j256.ormlite.support.BaseConnectionSource.isSingleConnection((r2 'this' I:com.j256.ormlite.support.BaseConnectionSource A[IMMUTABLE_TYPE, THIS]), (r3 I:com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

