digraph "CFG forcom.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory.createProxy(Lcom\/j256\/ormlite\/support\/DatabaseConnection;)Lcom\/j256\/ormlite\/support\/DatabaseConnection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:java.lang.reflect.Constructor\<? extends com.j256.ormlite.support.DatabaseConnection\>) = \l  (r3 I:com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory)\l com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory.constructor java.lang.reflect.Constructor A[Catch:\{ Exception \-\> 0x000f \}, TRY_ENTER]\l0x0002: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x000f \}]\l0x0003: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ Exception \-\> 0x000f \}]\l0x0005: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x000f \}]\l0x0006: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x000f \}]\l0x0008: INVOKE  (r4 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Constructor)\l  (r1 I:java.lang.Object[])\l java.lang.reflect.Constructor.newInstance(java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ Exception \-\> 0x000f \}]\l0x000c: CHECK_CAST  (r4 I:com.j256.ormlite.support.DatabaseConnection) = (com.j256.ormlite.support.DatabaseConnection) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x000f \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: RETURN  (r4 I:com.j256.ormlite.support.DatabaseConnection) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|ExcHandler: Exception null\lSplitter:B:0:0x0000\l|0x000f: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0012: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0015: CONST_STR  (r1 I:java.lang.String) =  \"Could not create a new instance of \" \l0x0017: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001a: IGET  (r1 I:java.lang.Class\<? extends com.j256.ormlite.support.DatabaseConnection\>) = \l  (r3 I:com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory)\l com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory.proxyClass java.lang.Class \l0x001c: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x001f: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0023: INVOKE  (r4 I:java.sql.SQLException) = (r0 I:java.lang.String), (r4 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|0x0027: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.support.DatabaseConnection com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory.createProxy((r3 'this' I:com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory A[IMMUTABLE_TYPE, THIS]), (r4 I:com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

