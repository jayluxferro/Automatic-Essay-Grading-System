digraph "CFG forcom.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory.\<init\>(Ljava\/lang\/Class;)V" {
subgraph cluster_Region_82083341 {
label = "R(2:0|(1:2))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3.proxyClass = r4\l}"];
subgraph cluster_TryCatchRegion_1323522164 {
label = "Try: R(1:2) catches: R(2:4|6)";
node [shape=record,color=blue];
subgraph cluster_Region_933886113 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Exception \-\> 0x0014 \}\lSplitter:B:1:0x0006\l|r3.constructor = r4.getConstructor(new java.lang.Class[]\{com.j256.ormlite.support.DatabaseConnection.class\})     \/\/ Catch:\{ Exception \-\> 0x0014 \}\l}"];
}
subgraph cluster_Region_195741132 {
label = "R(2:4|6) | ExcHandler: Exception (unused java.lang.Exception)\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0014}"];
Node_6 [shape=record,label="{6\:\ 0x002a|throw new java.lang.IllegalArgumentException(\"Could not find constructor with DatabaseConnection argument in \" + r4)\l}"];
}
}
}
subgraph cluster_Region_195741132 {
label = "R(2:4|6) | ExcHandler: Exception (unused java.lang.Exception)\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0014}"];
Node_6 [shape=record,label="{6\:\ 0x002a|throw new java.lang.IllegalArgumentException(\"Could not find constructor with DatabaseConnection argument in \" + r4)\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0006|SYNTHETIC\lSplitter:B:1:0x0006\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0013}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|SYNTHETIC\lExcHandler: Exception (unused java.lang.Exception)\lSplitter:B:1:0x0006\l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory.\<init\>((r3v0 'this' com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.Class\<? extends com.j256.ormlite.support.DatabaseConnection\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.IllegalArgumentException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/Class\<, +, Lcom\/j256\/ormlite\/support\/DatabaseConnection;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_4 -> Node_6;
Node_4 -> Node_6;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_5 -> Node_4;
}

