digraph "CFG forcom.j256.ormlite.support.DatabaseConnectionProxy.queryForOne(Ljava\/lang\/String;[Ljava\/lang\/Object;[Lcom\/j256\/ormlite\/field\/FieldType;Lcom\/j256\/ormlite\/stmt\/GenericRowMapper;Lcom\/j256\/ormlite\/dao\/ObjectCache;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.support.DatabaseConnection) = (r6 I:com.j256.ormlite.support.DatabaseConnectionProxy) com.j256.ormlite.support.DatabaseConnectionProxy.proxy com.j256.ormlite.support.DatabaseConnection \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: RETURN  (r7 I:java.lang.Object) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IGET  (r0 I:com.j256.ormlite.support.DatabaseConnection) = (r6 I:com.j256.ormlite.support.DatabaseConnectionProxy) com.j256.ormlite.support.DatabaseConnectionProxy.proxy com.j256.ormlite.support.DatabaseConnection \l0x0008: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0009: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x000a: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x000b: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x000c: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x000d: INVOKE  (r7 I:java.lang.Object) = \l  (r0 I:com.j256.ormlite.support.DatabaseConnection)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object[])\l  (r3 I:com.j256.ormlite.field.FieldType[])\l  (r4 I:com.j256.ormlite.stmt.GenericRowMapper)\l  (r5 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.support.DatabaseConnection.queryForOne(java.lang.String, java.lang.Object[], com.j256.ormlite.field.FieldType[], com.j256.ormlite.stmt.GenericRowMapper, com.j256.ormlite.dao.ObjectCache):java.lang.Object type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: RETURN  (r7 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public java.lang.Object com.j256.ormlite.support.DatabaseConnectionProxy.queryForOne((r6 'this' I:com.j256.ormlite.support.DatabaseConnectionProxy A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:com.j256.ormlite.field.FieldType[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:com.j256.ormlite.stmt.GenericRowMapper\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/String;, [, Ljava\/lang\/Object;, [, Lcom\/j256\/ormlite\/field\/FieldType;, Lcom\/j256\/ormlite\/stmt\/GenericRowMapper\<, TT;\>;, Lcom\/j256\/ormlite\/dao\/ObjectCache;, ), Ljava\/lang\/Object;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

