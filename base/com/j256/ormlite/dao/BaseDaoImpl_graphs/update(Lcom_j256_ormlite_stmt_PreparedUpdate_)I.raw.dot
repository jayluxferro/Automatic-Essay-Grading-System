digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.update(Lcom\/j256\/ormlite\/stmt\/PreparedUpdate;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.checkForInitialized():void type: VIRTUAL \l0x0003: IGET  (r0 I:com.j256.ormlite.support.ConnectionSource) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.connectionSource com.j256.ormlite.support.ConnectionSource \l0x0005: IGET  (r1 I:com.j256.ormlite.table.TableInfo\<T, ID\>) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.tableInfo com.j256.ormlite.table.TableInfo \l0x0007: INVOKE  (r1 I:java.lang.String) = (r1 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getTableName():java.lang.String type: VIRTUAL \l0x000b: INVOKE  (r0 I:com.j256.ormlite.support.DatabaseConnection) = \l  (r0 I:com.j256.ormlite.support.ConnectionSource)\l  (r1 I:java.lang.String)\l com.j256.ormlite.support.ConnectionSource.getReadWriteConnection(java.lang.String):com.j256.ormlite.support.DatabaseConnection type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|SYNTHETIC\lSplitter:B:1:0x000f\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x000f\l|0x000f: IGET  (r1 I:com.j256.ormlite.stmt.StatementExecutor\<T, ID\>) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.statementExecutor com.j256.ormlite.stmt.StatementExecutor A[Catch:\{ all \-\> 0x001b \}, TRY_ENTER]\l0x0011: INVOKE  (r3 I:int) = \l  (r1 I:com.j256.ormlite.stmt.StatementExecutor)\l  (r0 I:com.j256.ormlite.support.DatabaseConnection)\l  (r3 I:com.j256.ormlite.stmt.PreparedUpdate)\l com.j256.ormlite.stmt.StatementExecutor.update(com.j256.ormlite.support.DatabaseConnection, com.j256.ormlite.stmt.PreparedUpdate):int type: VIRTUAL A[Catch:\{ all \-\> 0x001b \}]\l0x0014: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IGET  (r1 I:com.j256.ormlite.support.ConnectionSource) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.connectionSource com.j256.ormlite.support.ConnectionSource \l0x0017: INVOKE  \l  (r1 I:com.j256.ormlite.support.ConnectionSource)\l  (r0 I:com.j256.ormlite.support.DatabaseConnection)\l com.j256.ormlite.support.ConnectionSource.releaseConnection(com.j256.ormlite.support.DatabaseConnection):void type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: RETURN  (r3 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|ExcHandler: all null\lSplitter:B:1:0x000f\l|0x001b: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IGET  (r1 I:com.j256.ormlite.support.ConnectionSource) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.connectionSource com.j256.ormlite.support.ConnectionSource \l0x001e: INVOKE  \l  (r1 I:com.j256.ormlite.support.ConnectionSource)\l  (r0 I:com.j256.ormlite.support.DatabaseConnection)\l com.j256.ormlite.support.ConnectionSource.releaseConnection(com.j256.ormlite.support.DatabaseConnection):void type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int com.j256.ormlite.dao.BaseDaoImpl.update((r2 'this' I:com.j256.ormlite.dao.BaseDaoImpl A[IMMUTABLE_TYPE, THIS]), (r3 I:com.j256.ormlite.stmt.PreparedUpdate\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/stmt\/PreparedUpdate\<, TT;\>;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

