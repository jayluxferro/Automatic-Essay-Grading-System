digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.queryRaw(Ljava\/lang\/String;[Lcom\/j256\/ormlite\/field\/DataType;[Ljava\/lang\/String;)Lcom\/j256\/ormlite\/dao\/GenericRawResults;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.checkForInitialized():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: IGET  (r0 I:com.j256.ormlite.stmt.StatementExecutor\<T, ID\>) = (r6 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.statementExecutor com.j256.ormlite.stmt.StatementExecutor A[Catch:\{ SQLException \-\> 0x0011 \}, TRY_ENTER]\l0x0005: IGET  (r1 I:com.j256.ormlite.support.ConnectionSource) = (r6 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.connectionSource com.j256.ormlite.support.ConnectionSource A[Catch:\{ SQLException \-\> 0x0011 \}]\l0x0007: IGET  (r5 I:com.j256.ormlite.dao.ObjectCache) = (r6 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache A[Catch:\{ SQLException \-\> 0x0011 \}]\l0x0009: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) A[Catch:\{ SQLException \-\> 0x0011 \}]\l0x000a: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) A[Catch:\{ SQLException \-\> 0x0011 \}]\l0x000b: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) A[Catch:\{ SQLException \-\> 0x0011 \}]\l0x000c: INVOKE  (r8 I:com.j256.ormlite.dao.GenericRawResults) = \l  (r0 I:com.j256.ormlite.stmt.StatementExecutor)\l  (r1 I:com.j256.ormlite.support.ConnectionSource)\l  (r2 I:java.lang.String)\l  (r3 I:com.j256.ormlite.field.DataType[])\l  (r4 I:java.lang.String[])\l  (r5 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.stmt.StatementExecutor.queryRaw(com.j256.ormlite.support.ConnectionSource, java.lang.String, com.j256.ormlite.field.DataType[], java.lang.String[], com.j256.ormlite.dao.ObjectCache):com.j256.ormlite.dao.GenericRawResults type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0011 \}]\l0x000f: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: RETURN  \l  (r8 I:com.j256.ormlite.dao.GenericRawResults\<java.lang.Object[]\>)\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|ExcHandler: SQLException null\lSplitter:B:1:0x0003\l|0x0011: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: NEW_INSTANCE  (r9 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0014: INVOKE  (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0017: CONST_STR  (r0 I:java.lang.String) =  \"Could not perform raw query for \" \l0x0019: INVOKE  (r9 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001c: INVOKE  (r9 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001f: INVOKE  (r7 I:java.lang.String) = (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0023: INVOKE  (r7 I:java.sql.SQLException) = (r7 I:java.lang.String), (r8 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: THROW  (r7 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.dao.GenericRawResults\<java.lang.Object[]\> com.j256.ormlite.dao.BaseDaoImpl.queryRaw((r6 'this' I:com.j256.ormlite.dao.BaseDaoImpl A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.j256.ormlite.field.DataType[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, [, Lcom\/j256\/ormlite\/field\/DataType;, [, Ljava\/lang\/String;, ), Lcom\/j256\/ormlite\/dao\/GenericRawResults\<, [, Ljava\/lang\/Object;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

