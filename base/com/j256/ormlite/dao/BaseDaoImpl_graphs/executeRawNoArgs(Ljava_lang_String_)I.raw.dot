digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.executeRawNoArgs(Ljava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.checkForInitialized():void type: VIRTUAL \l0x0003: IGET  (r0 I:com.j256.ormlite.support.ConnectionSource) = (r4 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.connectionSource com.j256.ormlite.support.ConnectionSource \l0x0005: IGET  (r1 I:com.j256.ormlite.table.TableInfo\<T, ID\>) = (r4 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.tableInfo com.j256.ormlite.table.TableInfo \l0x0007: INVOKE  (r1 I:java.lang.String) = (r1 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getTableName():java.lang.String type: VIRTUAL \l0x000b: INVOKE  (r0 I:com.j256.ormlite.support.DatabaseConnection) = \l  (r0 I:com.j256.ormlite.support.ConnectionSource)\l  (r1 I:java.lang.String)\l com.j256.ormlite.support.ConnectionSource.getReadWriteConnection(java.lang.String):com.j256.ormlite.support.DatabaseConnection type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|SYNTHETIC\lSplitter:B:1:0x000f\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x000f\l|0x000f: IGET  (r1 I:com.j256.ormlite.stmt.StatementExecutor\<T, ID\>) = (r4 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.statementExecutor com.j256.ormlite.stmt.StatementExecutor A[Catch:\{ SQLException \-\> 0x001d \}, TRY_ENTER]\l0x0011: INVOKE  (r1 I:int) = \l  (r1 I:com.j256.ormlite.stmt.StatementExecutor)\l  (r0 I:com.j256.ormlite.support.DatabaseConnection)\l  (r5 I:java.lang.String)\l com.j256.ormlite.stmt.StatementExecutor.executeRawNoArgs(com.j256.ormlite.support.DatabaseConnection, java.lang.String):int type: VIRTUAL A[Catch:\{ SQLException \-\> 0x001d \}]\l0x0014: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IGET  (r5 I:com.j256.ormlite.support.ConnectionSource) = (r4 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.connectionSource com.j256.ormlite.support.ConnectionSource \l0x0017: INVOKE  \l  (r5 I:com.j256.ormlite.support.ConnectionSource)\l  (r0 I:com.j256.ormlite.support.DatabaseConnection)\l com.j256.ormlite.support.ConnectionSource.releaseConnection(com.j256.ormlite.support.DatabaseConnection):void type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: RETURN  (r1 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|ExcHandler: all null\lSplitter:B:8:0x001e\l|0x001b: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|ExcHandler: SQLException null\lSplitter:B:1:0x000f\l|0x001d: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|SYNTHETIC\lSplitter:B:8:0x001e\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x001e\l|0x001e: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x001b \}, TRY_ENTER]\l0x0020: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x001b \}]\l0x0023: CONST_STR  (r3 I:java.lang.String) =  \"Could not run raw execute statement \" A[Catch:\{ all \-\> 0x001b \}]\l0x0025: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x001b \}]\l0x0028: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x001b \}]\l0x002b: INVOKE  (r5 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x001b \}]\l0x002f: INVOKE  (r5 I:java.sql.SQLException) = (r5 I:java.lang.String), (r1 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|0x0033: THROW  (r5 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x001b \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: IGET  (r1 I:com.j256.ormlite.support.ConnectionSource) = (r4 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.connectionSource com.j256.ormlite.support.ConnectionSource \l0x0036: INVOKE  \l  (r1 I:com.j256.ormlite.support.ConnectionSource)\l  (r0 I:com.j256.ormlite.support.DatabaseConnection)\l com.j256.ormlite.support.ConnectionSource.releaseConnection(com.j256.ormlite.support.DatabaseConnection):void type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|0x0039: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int com.j256.ormlite.dao.BaseDaoImpl.executeRawNoArgs((r4 'this' I:com.j256.ormlite.dao.BaseDaoImpl A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_5;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

