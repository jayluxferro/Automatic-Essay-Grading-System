digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.queryRaw(Ljava\/lang\/String;Lcom\/j256\/ormlite\/dao\/DatabaseResultsMapper;[Ljava\/lang\/String;)Lcom\/j256\/ormlite\/dao\/GenericRawResults;" {
subgraph cluster_Region_545208513 {
label = "R(2:0|(2:2|3))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|checkForInitialized()\l}"];
subgraph cluster_TryCatchRegion_1383379395 {
label = "Try: R(2:2|3) catches: R(3:4|5|6)";
node [shape=record,color=blue];
subgraph cluster_Region_1299252124 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ SQLException \-\> 0x0011 \}\lSplitter:B:1:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|RETURN\l|return r6.statementExecutor.queryRaw(r6.connectionSource, r7, r8, r9, r6.objectCache)\l}"];
}
subgraph cluster_Region_1981129651 {
label = "R(3:4|5|6) | ExcHandler: SQLException (r8v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|ExcHandler: SQLException (r8v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0003\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012}"];
Node_6 [shape=record,label="{6\:\ 0x0027|throw com.j256.ormlite.misc.SqlExceptionUtil.create(\"Could not perform raw query for \" + r7, r8)\l}"];
}
}
}
subgraph cluster_Region_1981129651 {
label = "R(3:4|5|6) | ExcHandler: SQLException (r8v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|ExcHandler: SQLException (r8v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0003\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012}"];
Node_6 [shape=record,label="{6\:\ 0x0027|throw com.j256.ormlite.misc.SqlExceptionUtil.create(\"Could not perform raw query for \" + r7, r8)\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.dao.GenericRawResults\<UO\> com.j256.ormlite.dao.BaseDaoImpl.queryRaw((r6v0 'this' com.j256.ormlite.dao.BaseDaoImpl A[IMMUTABLE_TYPE, THIS]), (r7v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 com.j256.ormlite.dao.DatabaseResultsMapper\<UO\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<UO:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/String;, Lcom\/j256\/ormlite\/dao\/DatabaseResultsMapper\<, TUO;\>;[, Ljava\/lang\/String;, ), Lcom\/j256\/ormlite\/dao\/GenericRawResults\<, TUO;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_1 -> Node_2;
Node_1 -> Node_4;
}

