digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.\<init\>(Ljava\/lang\/Class;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  \l  (r1 I:com.j256.ormlite.dao.BaseDaoImpl)\l  (r0 I:com.j256.ormlite.support.ConnectionSource)\l  (r2 I:java.lang.Class)\l  (r0 I:com.j256.ormlite.table.DatabaseTableConfig)\l com.j256.ormlite.dao.BaseDaoImpl.\<init\>(com.j256.ormlite.support.ConnectionSource, java.lang.Class, com.j256.ormlite.table.DatabaseTableConfig):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: RETURN   \l}"];
MethodNode[shape=record,label="{protected void com.j256.ormlite.dao.BaseDaoImpl.\<init\>((r1 'this' I:com.j256.ormlite.dao.BaseDaoImpl A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Class\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/Class\<, TT;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

