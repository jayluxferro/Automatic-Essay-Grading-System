digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.createIterator(Lcom\/j256\/ormlite\/stmt\/PreparedQuery;I)Lcom\/j256\/ormlite\/dao\/CloseableIterator;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ SQLException \-\> 0x000e \}\lSplitter:B:0:0x0000\l|r1 = r6     \/\/ Catch:\{ SQLException \-\> 0x000e \}\lr3 = r7     \/\/ Catch:\{ SQLException \-\> 0x000e \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|RETURN\l|return r6.statementExecutor.buildIterator(r1, r6.connectionSource, r3, r6.objectCache, r8)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|ExcHandler: SQLException (r7v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.sql.SQLException r7 = move\-exception\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|java.lang.StringBuilder r8 = new java.lang.StringBuilder()\lr8.append(\"Could not build prepared\-query iterator for \")\lr8.append(r6.dataClass)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|throw com.j256.ormlite.misc.SqlExceptionUtil.create(r8.toString(), r7)\l}"];
MethodNode[shape=record,label="{private com.j256.ormlite.dao.CloseableIterator\<T\> com.j256.ormlite.dao.BaseDaoImpl.createIterator((r6v0 'this' com.j256.ormlite.dao.BaseDaoImpl A[IMMUTABLE_TYPE, THIS]), (r7v0 com.j256.ormlite.stmt.PreparedQuery\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/stmt\/PreparedQuery\<, TT;\>;I), Lcom\/j256\/ormlite\/dao\/CloseableIterator\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

