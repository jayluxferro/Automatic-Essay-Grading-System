digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.setObjectCache(Lcom\/j256\/ormlite\/dao\/ObjectCache;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r3 != null) goto L_0x0011\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r2.objectCache == null) goto L_?\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|r2.objectCache.clear(r2.dataClass)\lr2.objectCache = null\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011}"];
Node_5 [shape=record,label="{5\:\ 0x0013|if (r2.objectCache == null) goto L_0x0020\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015}"];
Node_7 [shape=record,label="{7\:\ 0x0017|if (r2.objectCache == r3) goto L_0x0020\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|r2.objectCache.clear(r2.dataClass)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020}"];
Node_10 [shape=record,label="{10\:\ 0x0026|if (r2.tableInfo.getIdField() == null) goto L_0x0032\l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|r2.objectCache = r3\lr2.objectCache.registerClass(r2.dataClass)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Class \")\lr0.append(r2.dataClass)\lr0.append(\" must have an id field to enable the object cache\")\l}"];
Node_13 [shape=record,label="{13\:\ 0x004f|throw new java.sql.SQLException(r0.toString())\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.dao.BaseDaoImpl.setObjectCache((r2v0 'this' com.j256.ormlite.dao.BaseDaoImpl A[IMMUTABLE_TYPE, THIS]), (r3v0 com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_15;
Node_3 -> Node_16;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_14;
Node_12 -> Node_13;
}

