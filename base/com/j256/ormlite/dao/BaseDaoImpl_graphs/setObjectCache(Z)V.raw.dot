digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.setObjectCache(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0049 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r3 I:com.j256.ormlite.dao.ObjectCache) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0057 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r3 I:com.j256.ormlite.table.TableInfo\<T, ID\>) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.tableInfo com.j256.ormlite.table.TableInfo \l0x0008: INVOKE  (r3 I:com.j256.ormlite.field.FieldType) = (r3 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getIdField():com.j256.ormlite.field.FieldType type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x002b \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: CONST_CLASS  (r3 I:java.lang.Class\<com.j256.ormlite.dao.BaseDaoImpl\>) =  com.j256.ormlite.dao.BaseDaoImpl.class \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: MONITOR_ENTER  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|SYNTHETIC\lSplitter:B:7:0x0011\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0011\l|0x0011: SGET  (r0 I:com.j256.ormlite.dao.ReferenceObjectCache) =  com.j256.ormlite.dao.BaseDaoImpl.defaultObjectCache com.j256.ormlite.dao.ReferenceObjectCache A[Catch:\{ all \-\> 0x0028 \}, TRY_ENTER]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001b A[Catch:\{ all \-\> 0x0028 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|0x0015: INVOKE  (r0 I:com.j256.ormlite.dao.ReferenceObjectCache) =  com.j256.ormlite.dao.ReferenceObjectCache.makeWeakCache():com.j256.ormlite.dao.ReferenceObjectCache type: STATIC A[Catch:\{ all \-\> 0x0028 \}]\l0x0019: SPUT  (r0 I:com.j256.ormlite.dao.ReferenceObjectCache) com.j256.ormlite.dao.BaseDaoImpl.defaultObjectCache com.j256.ormlite.dao.ReferenceObjectCache A[Catch:\{ all \-\> 0x0028 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: SGET  (r0 I:com.j256.ormlite.dao.ReferenceObjectCache) =  com.j256.ormlite.dao.BaseDaoImpl.defaultObjectCache com.j256.ormlite.dao.ReferenceObjectCache A[Catch:\{ all \-\> 0x0028 \}]\l0x001d: IPUT  \l  (r0 I:com.j256.ormlite.dao.ObjectCache)\l  (r2 I:com.j256.ormlite.dao.BaseDaoImpl)\l com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache A[Catch:\{ all \-\> 0x0028 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|0x001f: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0028 \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|0x0020: IGET  (r3 I:com.j256.ormlite.dao.ObjectCache) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache \l0x0022: IGET  (r0 I:java.lang.Class\<T\>) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.dataClass java.lang.Class \l0x0024: INVOKE  \l  (r3 I:com.j256.ormlite.dao.ObjectCache)\l  (r0 I:java.lang.Class)\l com.j256.ormlite.dao.ObjectCache.registerClass(java.lang.Class):void type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|ExcHandler: all null\lSplitter:B:7:0x0011\l|0x0028: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|SYNTHETIC\lSplitter:B:15:0x0029\l}"];
Node_16 [shape=record,label="{16\:\ ?|Splitter:B:15:0x0029\l|0x0029: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0028 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x002a|0x002a: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_18 [shape=record,label="{18\:\ 0x002b|0x002b: NEW_INSTANCE  (r3 I:java.sql.SQLException) =  java.sql.SQLException \l0x002d: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002f: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0032: CONST_STR  (r1 I:java.lang.String) =  \"Class \" \l0x0034: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0037: IGET  (r1 I:java.lang.Class\<T\>) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.dataClass java.lang.Class \l0x0039: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x003c: CONST_STR  (r1 I:java.lang.String) =  \" must have an id field to enable the object cache\" \l0x003e: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0041: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0045: INVOKE  (r3 I:java.sql.SQLException), (r0 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0048|0x0048: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0049|0x0049: IGET  (r3 I:com.j256.ormlite.dao.ObjectCache) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache \l}"];
Node_21 [shape=record,label="{21\:\ 0x004b|0x004b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0057 \l}"];
Node_22 [shape=record,label="{22\:\ 0x004d|0x004d: IGET  (r3 I:com.j256.ormlite.dao.ObjectCache) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache \l0x004f: IGET  (r0 I:java.lang.Class\<T\>) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.dataClass java.lang.Class \l0x0051: INVOKE  \l  (r3 I:com.j256.ormlite.dao.ObjectCache)\l  (r0 I:java.lang.Class)\l com.j256.ormlite.dao.ObjectCache.clear(java.lang.Class):void type: INTERFACE \l0x0054: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0055: IPUT  \l  (r3 I:com.j256.ormlite.dao.ObjectCache)\l  (r2 I:com.j256.ormlite.dao.BaseDaoImpl)\l com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache \l}"];
Node_23 [shape=record,label="{23\:\ 0x0057|0x0057: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.dao.BaseDaoImpl.setObjectCache((r2 'this' I:com.j256.ormlite.dao.BaseDaoImpl A[IMMUTABLE_TYPE, THIS]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_20;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_23;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_18;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_23;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_14;
Node_16 -> Node_17;
Node_16 -> Node_14;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
}

