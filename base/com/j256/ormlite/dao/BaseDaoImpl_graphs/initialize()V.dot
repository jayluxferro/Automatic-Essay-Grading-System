digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.initialize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r11.initialized == false) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005}"];
Node_4 [shape=record,label="{4\:\ 0x0007|if (r11.connectionSource == null) goto L_0x00c0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|r11.databaseType = r11.connectionSource.getDatabaseType()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|if (r11.databaseType == null) goto L_0x00a1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015}"];
Node_8 [shape=record,label="{8\:\ 0x0017|if (r11.tableConfig != null) goto L_0x0025\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|r11.tableInfo = new com.j256.ormlite.table.TableInfo\<\>(r11.connectionSource, r11, r11.dataClass)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|r11.tableConfig.extractFieldTypes(r11.connectionSource)\lr11.tableInfo = new com.j256.ormlite.table.TableInfo\<\>(r11.databaseType, r11, r11.tableConfig)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|r11.statementExecutor = new com.j256.ormlite.stmt.StatementExecutor\<\>(r11.databaseType, r11.tableInfo, r11)\ljava.util.List r0 = daoConfigLevelLocal.get()\lr0.add(r11)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0052|if (r0.size() \<= 1) goto L_0x0055\l}"];
Node_13 [shape=record,label="{13\:\ 0x0054|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ 0x0055|r3 = 0\l}"];
Node_15 [shape=record,label="{15\:\ 0x0057|LOOP_START\lSYNTHETIC\lPHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:14:0x0055, B:25:?] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:15:0x0057\lLOOP:0: B:15:0x0057\-\>B:25:?\l}"];
Node_16 [shape=record,label="{16\:\ ?|Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\lSplitter:B:15:0x0057\l}"];
Node_17 [shape=record,label="{17\:\ 0x005b|Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\l|if (r3 \>= r0.size()) goto L_0x008e     \/\/ Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x005d|Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\l|com.j256.ormlite.dao.BaseDaoImpl r4 = (com.j256.ormlite.dao.BaseDaoImpl) r0.get(r3)     \/\/ Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\lcom.j256.ormlite.dao.DaoManager.registerDao(r11.connectionSource, r4)     \/\/ Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x0068|SYNTHETIC\lSplitter:B:19:0x0068\l}"];
Node_20 [shape=record,label="{20\:\ ?|Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\lSplitter:B:19:0x0068\l|com.j256.ormlite.field.FieldType[] r5 = r4.getTableInfo().getFieldTypes()     \/\/ Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\lint r6 = r5.length     \/\/ Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\lr7 = 0     \/\/ Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0072|LOOP_START\lCatch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\lPHI: r7 \l  PHI: (r7v1 int) = (r7v0 int), (r7v2 int) binds: [B:20:?, B:23:0x007f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:21:0x0072\-\>B:23:0x007f\l|if (r7 \>= r6) goto L_0x0082     \/\/ Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x0074|Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\l|r5[r7].configDaoInformation(r11.connectionSource, r4.getDataClass())     \/\/ Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x007f|LOOP_END\lLOOP:1: B:21:0x0072\-\>B:23:0x007f\l|int r7 = r7 + 1\l}"];
Node_24 [shape=record,label="{24\:\ 0x0082|SYNTHETIC\lSplitter:B:24:0x0082\l}"];
Node_25 [shape=record,label="{25\:\ ?|LOOP_END\lCatch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\lSplitter:B:24:0x0082\lLOOP:0: B:15:0x0057\-\>B:25:?\l|r4.initialized = true     \/\/ Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\lint r3 = r3 + 1     \/\/ Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\l}"];
Node_26 [shape=record,label="{26\:\ 0x0087|Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\lExcHandler: SQLException (r1v8 'e' java.sql.SQLException A[CUSTOM_DECLARE, Catch:\{  \}])\lSplitter:B:19:0x0068\l|java.sql.SQLException r1 = move\-exception     \/\/ Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\l}"];
Node_27 [shape=record,label="{27\:\ 0x0088|Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\l|com.j256.ormlite.dao.DaoManager.unregisterDao(r11.connectionSource, r4)     \/\/ Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\l}"];
Node_28 [shape=record,label="{28\:\ 0x008d|Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\l|throw r1     \/\/ Catch:\{ SQLException \-\> 0x0087, all \-\> 0x0097 \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x008e|r0.clear()\ldaoConfigLevelLocal.remove()\l}"];
Node_30 [shape=record,label="{30\:\ 0x0096|RETURN\l|return\l}"];
Node_31 [shape=record,label="{31\:\ 0x0097|ExcHandler: all (r1v7 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:15:0x0057\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_32 [shape=record,label="{32\:\ 0x0098|r0.clear()\ldaoConfigLevelLocal.remove()\l}"];
Node_33 [shape=record,label="{33\:\ 0x00a0|throw r1\l}"];
Node_34 [shape=record,label="{34\:\ 0x00a1|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"connectionSource is getting a null DatabaseType in \")\lr1.append(getClass().getSimpleName())\l}"];
Node_35 [shape=record,label="{35\:\ 0x00bf|throw new java.lang.IllegalStateException(r1.toString())\l}"];
Node_36 [shape=record,label="{36\:\ 0x00c0|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"connectionSource was never set on \")\lr1.append(getClass().getSimpleName())\l}"];
Node_37 [shape=record,label="{37\:\ 0x00de|throw new java.lang.IllegalStateException(r1.toString())\l}"];
Node_38 [shape=record,label="{38\:\ 0x008e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.dao.BaseDaoImpl.initialize((r11v0 'this' com.j256.ormlite.dao.BaseDaoImpl A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_36;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_34;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_31;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_38;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_26;
Node_19 -> Node_31;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_21;
Node_24 -> Node_25;
Node_24 -> Node_31;
Node_25 -> Node_15;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_36 -> Node_37;
Node_38 -> Node_29;
}

