digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.createIterator(Lcom\/j256\/ormlite\/stmt\/PreparedQuery;I)Lcom\/j256\/ormlite\/dao\/CloseableIterator;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:com.j256.ormlite.stmt.StatementExecutor\<T, ID\>) = (r6 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.statementExecutor com.j256.ormlite.stmt.StatementExecutor A[Catch:\{ SQLException \-\> 0x000e \}, TRY_ENTER]\l0x0002: IGET  (r2 I:com.j256.ormlite.support.ConnectionSource) = (r6 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.connectionSource com.j256.ormlite.support.ConnectionSource A[Catch:\{ SQLException \-\> 0x000e \}]\l0x0004: IGET  (r4 I:com.j256.ormlite.dao.ObjectCache) = (r6 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache A[Catch:\{ SQLException \-\> 0x000e \}]\l0x0006: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) A[Catch:\{ SQLException \-\> 0x000e \}]\l0x0007: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) A[Catch:\{ SQLException \-\> 0x000e \}]\l0x0008: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ SQLException \-\> 0x000e \}]\l0x0009: INVOKE  (r7 I:com.j256.ormlite.stmt.SelectIterator) = \l  (r0 I:com.j256.ormlite.stmt.StatementExecutor)\l  (r1 I:com.j256.ormlite.dao.BaseDaoImpl)\l  (r2 I:com.j256.ormlite.support.ConnectionSource)\l  (r3 I:com.j256.ormlite.stmt.PreparedStmt)\l  (r4 I:com.j256.ormlite.dao.ObjectCache)\l  (r5 I:int)\l com.j256.ormlite.stmt.StatementExecutor.buildIterator(com.j256.ormlite.dao.BaseDaoImpl, com.j256.ormlite.support.ConnectionSource, com.j256.ormlite.stmt.PreparedStmt, com.j256.ormlite.dao.ObjectCache, int):com.j256.ormlite.stmt.SelectIterator type: VIRTUAL A[Catch:\{ SQLException \-\> 0x000e \}]\l0x000c: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: RETURN  (r7 I:com.j256.ormlite.dao.CloseableIterator\<T\>) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|ExcHandler: SQLException null\lSplitter:B:0:0x0000\l|0x000e: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: NEW_INSTANCE  (r8 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0011: INVOKE  (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0014: CONST_STR  (r0 I:java.lang.String) =  \"Could not build prepared\-query iterator for \" \l0x0016: INVOKE  (r8 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0019: IGET  (r0 I:java.lang.Class\<T\>) = (r6 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.dataClass java.lang.Class \l0x001b: INVOKE  (r8 I:java.lang.StringBuilder), (r0 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x001e: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0022: INVOKE  (r7 I:java.sql.SQLException) = (r8 I:java.lang.String), (r7 I:java.lang.Throwable) com.j256.ormlite.misc.SqlExceptionUtil.create(java.lang.String, java.lang.Throwable):java.sql.SQLException type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: THROW  (r7 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private com.j256.ormlite.dao.CloseableIterator\<T\> com.j256.ormlite.dao.BaseDaoImpl.createIterator((r6 'this' I:com.j256.ormlite.dao.BaseDaoImpl A[IMMUTABLE_TYPE, THIS]), (r7 I:com.j256.ormlite.stmt.PreparedQuery\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/stmt\/PreparedQuery\<, TT;\>;I), Lcom\/j256\/ormlite\/dao\/CloseableIterator\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

