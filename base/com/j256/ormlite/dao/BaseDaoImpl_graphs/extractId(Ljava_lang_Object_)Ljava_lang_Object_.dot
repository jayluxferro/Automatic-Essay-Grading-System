digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.extractId(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|checkForInitialized()\lcom.j256.ormlite.field.FieldType r0 = r2.tableInfo.getIdField()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r0 == null) goto L_0x0010\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b}"];
Node_3 [shape=record,label="{3\:\ 0x000f|RETURN\l|return r0.extractJavaFieldValue(r3)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Class \")\lr0.append(r2.dataClass)\lr0.append(\" does not have an id field\")\l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|throw new java.sql.SQLException(r0.toString())\l}"];
MethodNode[shape=record,label="{public ID com.j256.ormlite.dao.BaseDaoImpl.extractId((r2v0 'this' com.j256.ormlite.dao.BaseDaoImpl A[IMMUTABLE_TYPE, THIS]), (r3v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;)TID;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

