digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.createIterator(I)Lcom\/j256\/ormlite\/dao\/CloseableIterator;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:com.j256.ormlite.stmt.StatementExecutor\<T, ID\>) = (r3 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.statementExecutor com.j256.ormlite.stmt.StatementExecutor A[Catch:\{ Exception \-\> 0x000b \}, TRY_ENTER]\l0x0002: IGET  (r1 I:com.j256.ormlite.support.ConnectionSource) = (r3 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.connectionSource com.j256.ormlite.support.ConnectionSource A[Catch:\{ Exception \-\> 0x000b \}]\l0x0004: IGET  (r2 I:com.j256.ormlite.dao.ObjectCache) = (r3 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache A[Catch:\{ Exception \-\> 0x000b \}]\l0x0006: INVOKE  (r4 I:com.j256.ormlite.stmt.SelectIterator) = \l  (r0 I:com.j256.ormlite.stmt.StatementExecutor)\l  (r3 I:com.j256.ormlite.dao.BaseDaoImpl)\l  (r1 I:com.j256.ormlite.support.ConnectionSource)\l  (r4 I:int)\l  (r2 I:com.j256.ormlite.dao.ObjectCache)\l com.j256.ormlite.stmt.StatementExecutor.buildIterator(com.j256.ormlite.dao.BaseDaoImpl, com.j256.ormlite.support.ConnectionSource, int, com.j256.ormlite.dao.ObjectCache):com.j256.ormlite.stmt.SelectIterator type: VIRTUAL A[Catch:\{ Exception \-\> 0x000b \}]\l0x0009: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: RETURN  (r4 I:com.j256.ormlite.dao.CloseableIterator\<T\>) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|ExcHandler: Exception null\lSplitter:B:0:0x0000\l|0x000b: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x000e: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0010: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0013: CONST_STR  (r2 I:java.lang.String) =  \"Could not build iterator for \" \l0x0015: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0018: IGET  (r2 I:java.lang.Class\<T\>) = (r3 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.dataClass java.lang.Class \l0x001a: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x001d: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0021: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l  (r4 I:java.lang.Throwable)\l java.lang.IllegalStateException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private com.j256.ormlite.dao.CloseableIterator\<T\> com.j256.ormlite.dao.BaseDaoImpl.createIterator((r3 'this' I:com.j256.ormlite.dao.BaseDaoImpl A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(I), Lcom\/j256\/ormlite\/dao\/CloseableIterator\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

