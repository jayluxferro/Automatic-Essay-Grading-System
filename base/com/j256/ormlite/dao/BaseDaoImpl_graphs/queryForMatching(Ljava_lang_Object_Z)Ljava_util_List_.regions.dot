digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.queryForMatching(Ljava\/lang\/Object;Z)Ljava\/util\/List;" {
subgraph cluster_Region_1309176859 {
label = "R(3:0|(3:2|(2:(1:5)|6)(0)|7)|(2:(1:10)|(2:11|12)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|checkForInitialized()\lcom.j256.ormlite.stmt.QueryBuilder com.j256.ormlite.stmt.QueryBuilder r0 = queryBuilder()\lcom.j256.ormlite.stmt.Where com.j256.ormlite.stmt.Where r1 = r0.where()\lint int r3 = r9.tableInfo.getFieldTypes().length\lint r4 = 0\lint r5 = 0\l}"];
subgraph cluster_LoopRegion_16727924 {
label = "LOOP:0: (3:2|(2:(1:5)|6)(0)|7)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0014|LOOP_START\lPHI: r4 r5 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:0:0x0000, B:7:0x002f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:0:0x0000, B:7:0x002f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0014\-\>B:7:0x002f\l|if (r4 \< r3) goto L_0x0016\l}"];
subgraph cluster_Region_203325783 {
label = "R(3:2|(2:(1:5)|6)(0)|7)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0016|r6 = r2[r4]\ljava.lang.Object java.lang.Object r7 = r6.getFieldValueIfNotDefault(r10)\l}"];
subgraph cluster_IfRegion_736984563 {
label = "IF [B:3:0x001c] THEN: R(2:(1:5)|6) ELSE: R(0)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001c|if (r7 != null) goto L_0x001e\l}"];
subgraph cluster_Region_1385943573 {
label = "R(2:(1:5)|6)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1006039542 {
label = "IF [B:4:0x001e] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001e|if (r11 == true) goto L_0x0020\l}"];
subgraph cluster_Region_661264497 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0020|r7 = new com.j256.ormlite.stmt.SelectArg(r7)\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0026|PHI: r7 \l  PHI: (r7v1 java.lang.Object) = (r7v0 java.lang.Object), (r7v2 java.lang.Object) binds: [B:4:0x001e, B:5:0x0020] A[DONT_GENERATE, DONT_INLINE]\l|r1.mo17213eq(r6.getColumnName(), r7)\lr5++\l}"];
}
subgraph cluster_Region_1759636302 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_7 [shape=record,label="{7\:\ 0x002f|LOOP_END\lPHI: r5 \l  PHI: (r5v2 int) = (r5v1 int), (r5v3 int) binds: [B:15:0x002f, B:14:0x002f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0014\-\>B:7:0x002f\l|r4++\l}"];
}
}
subgraph cluster_Region_37486387 {
label = "R(2:(1:10)|(2:11|12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_20681827 {
label = "IF [B:8:0x0032] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0032|if (r5 == 0) goto L_0x0034\l}"];
subgraph cluster_Region_2076603551 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0038|RETURN\l|return java.util.Collections.emptyList()\l}"];
}
}
subgraph cluster_Region_1319963470 {
label = "R(2:11|12)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0039|r1.and(r5)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|RETURN\l|return r0.query()\l}"];
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ 0x0034}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0032|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x002f|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x002f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private java.util.List\<T\> com.j256.ormlite.dao.BaseDaoImpl.queryForMatching((r9v0 'this' com.j256.ormlite.dao.BaseDaoImpl A[IMMUTABLE_TYPE, THIS]), (r10v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;Z), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_15[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_14;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_8 -> Node_11[style=dashed];
Node_11 -> Node_12;
Node_9 -> Node_10;
Node_13 -> Node_8;
Node_14 -> Node_7;
Node_15 -> Node_7;
}

