digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.setObjectCache(Lcom\/j256\/ormlite\/dao\/ObjectCache;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0011 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r3 I:com.j256.ormlite.dao.ObjectCache) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0031 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r3 I:com.j256.ormlite.dao.ObjectCache) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache \l0x0008: IGET  (r0 I:java.lang.Class\<T\>) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.dataClass java.lang.Class \l0x000a: INVOKE  \l  (r3 I:com.j256.ormlite.dao.ObjectCache)\l  (r0 I:java.lang.Class)\l com.j256.ormlite.dao.ObjectCache.clear(java.lang.Class):void type: INTERFACE \l0x000d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: IPUT  \l  (r3 I:com.j256.ormlite.dao.ObjectCache)\l  (r2 I:com.j256.ormlite.dao.BaseDaoImpl)\l com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IGET  (r0 I:com.j256.ormlite.dao.ObjectCache) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0020 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IGET  (r0 I:com.j256.ormlite.dao.ObjectCache) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0020 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: IGET  (r0 I:com.j256.ormlite.dao.ObjectCache) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache \l0x001b: IGET  (r1 I:java.lang.Class\<T\>) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.dataClass java.lang.Class \l0x001d: INVOKE  \l  (r0 I:com.j256.ormlite.dao.ObjectCache)\l  (r1 I:java.lang.Class)\l com.j256.ormlite.dao.ObjectCache.clear(java.lang.Class):void type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: IGET  (r0 I:com.j256.ormlite.table.TableInfo\<T, ID\>) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.tableInfo com.j256.ormlite.table.TableInfo \l0x0022: INVOKE  (r0 I:com.j256.ormlite.field.FieldType) = (r0 I:com.j256.ormlite.table.TableInfo) com.j256.ormlite.table.TableInfo.getIdField():com.j256.ormlite.field.FieldType type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0032 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: IPUT  \l  (r3 I:com.j256.ormlite.dao.ObjectCache)\l  (r2 I:com.j256.ormlite.dao.BaseDaoImpl)\l com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache \l0x002a: IGET  (r3 I:com.j256.ormlite.dao.ObjectCache) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.objectCache com.j256.ormlite.dao.ObjectCache \l0x002c: IGET  (r0 I:java.lang.Class\<T\>) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.dataClass java.lang.Class \l0x002e: INVOKE  \l  (r3 I:com.j256.ormlite.dao.ObjectCache)\l  (r0 I:java.lang.Class)\l com.j256.ormlite.dao.ObjectCache.registerClass(java.lang.Class):void type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: RETURN   \l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|0x0032: NEW_INSTANCE  (r3 I:java.sql.SQLException) =  java.sql.SQLException \l0x0034: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0036: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0039: CONST_STR  (r1 I:java.lang.String) =  \"Class \" \l0x003b: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003e: IGET  (r1 I:java.lang.Class\<T\>) = (r2 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.dataClass java.lang.Class \l0x0040: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0043: CONST_STR  (r1 I:java.lang.String) =  \" must have an id field to enable the object cache\" \l0x0045: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0048: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004c: INVOKE  (r3 I:java.sql.SQLException), (r0 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x004f|0x004f: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.dao.BaseDaoImpl.setObjectCache((r2 'this' I:com.j256.ormlite.dao.BaseDaoImpl A[IMMUTABLE_TYPE, THIS]), (r3 I:com.j256.ormlite.dao.ObjectCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_12;
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_13 -> Node_14;
}

