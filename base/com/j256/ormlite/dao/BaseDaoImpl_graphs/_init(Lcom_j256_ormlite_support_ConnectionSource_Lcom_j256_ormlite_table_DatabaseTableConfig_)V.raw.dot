digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.\<init\>(Lcom\/j256\/ormlite\/support\/ConnectionSource;Lcom\/j256\/ormlite\/table\/DatabaseTableConfig;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Class) = (r3 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.getDataClass():java.lang.Class type: VIRTUAL \l0x0004: INVOKE  \l  (r1 I:com.j256.ormlite.dao.BaseDaoImpl)\l  (r2 I:com.j256.ormlite.support.ConnectionSource)\l  (r0 I:java.lang.Class)\l  (r3 I:com.j256.ormlite.table.DatabaseTableConfig)\l com.j256.ormlite.dao.BaseDaoImpl.\<init\>(com.j256.ormlite.support.ConnectionSource, java.lang.Class, com.j256.ormlite.table.DatabaseTableConfig):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: RETURN   \l}"];
MethodNode[shape=record,label="{protected void com.j256.ormlite.dao.BaseDaoImpl.\<init\>((r1 'this' I:com.j256.ormlite.dao.BaseDaoImpl A[IMMUTABLE_TYPE, THIS]), (r2 I:com.j256.ormlite.support.ConnectionSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.j256.ormlite.table.DatabaseTableConfig\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/support\/ConnectionSource;, Lcom\/j256\/ormlite\/table\/DatabaseTableConfig\<, TT;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

