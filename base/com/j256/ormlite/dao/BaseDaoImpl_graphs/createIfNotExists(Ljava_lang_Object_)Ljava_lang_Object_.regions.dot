digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.createIfNotExists(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
subgraph cluster_Region_967805914 {
label = "R(1:(2:(1:1)|(2:2|(2:(1:6)|(2:4|5)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1668585388 {
label = "R(2:(1:1)|(2:2|(2:(1:6)|(2:4|5))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1232505900 {
label = "IF [B:0:0x0000] THEN: R(1:1) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r2 == null) goto L_0x0002\l}"];
subgraph cluster_Region_816319706 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1486846893 {
label = "R(2:2|(2:(1:6)|(2:4|5)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|java.lang.Object T r0 = queryForSameId(r2)\l}"];
subgraph cluster_Region_1973198926 {
label = "R(2:(1:6)|(2:4|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2111464813 {
label = "IF [B:3:0x0008] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r0 != null) goto L_0x000e\l}"];
subgraph cluster_Region_1709016182 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000e|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_848461990 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|create(r2)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|RETURN\l|return r2\l}"];
}
}
}
}
}
MethodNode[shape=record,label="{public T com.j256.ormlite.dao.BaseDaoImpl.createIfNotExists((r1v0 'this' com.j256.ormlite.dao.BaseDaoImpl A[IMMUTABLE_TYPE, THIS]), (r2v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
}

