digraph "CFG forcom.j256.ormlite.dao.LruObjectCache.sizeAll()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.concurrent.ConcurrentHashMap\<java.lang.Class\<?\>, java.util.Map\<java.lang.Object, java.lang.Object\>\>) = (r3 I:com.j256.ormlite.dao.LruObjectCache) com.j256.ormlite.dao.LruObjectCache.classMaps java.util.concurrent.ConcurrentHashMap \l0x0002: INVOKE  (r0 I:java.util.Collection) = (r0 I:java.util.concurrent.ConcurrentHashMap) java.util.concurrent.ConcurrentHashMap.values():java.util.Collection type: VIRTUAL \l0x0006: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE \l0x000a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: INVOKE  (r2 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001d \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0015: CHECK_CAST  (r2 I:java.util.Map) = (java.util.Map) (r2 I:?[OBJECT, ARRAY]) \l0x0017: INVOKE  (r2 I:int) = (r2 I:java.util.Map) java.util.Map.size():int type: INTERFACE \l0x001b: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{public int com.j256.ormlite.dao.LruObjectCache.sizeAll((r3 'this' I:com.j256.ormlite.dao.LruObjectCache A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

