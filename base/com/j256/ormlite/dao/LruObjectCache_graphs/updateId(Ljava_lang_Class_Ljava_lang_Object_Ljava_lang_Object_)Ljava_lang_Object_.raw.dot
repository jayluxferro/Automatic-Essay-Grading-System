digraph "CFG forcom.j256.ormlite.dao.LruObjectCache.updateId(Ljava\/lang\/Class;Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.util.Map) = \l  (r1 I:com.j256.ormlite.dao.LruObjectCache)\l  (r2 I:java.lang.Class)\l com.j256.ormlite.dao.LruObjectCache.getMapForClass(java.lang.Class):java.util.Map type: DIRECT \l0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r0 I:T) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Map), (r3 I:java.lang.Object) java.util.Map.remove(java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: RETURN  (r0 I:T) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: INVOKE  \l  (r2 I:java.util.Map)\l  (r4 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: RETURN  (r3 I:T) \l}"];
MethodNode[shape=record,label="{public T com.j256.ormlite.dao.LruObjectCache.updateId((r1 'this' I:com.j256.ormlite.dao.LruObjectCache A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Class\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:ID A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:ID A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, ID:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Class\<, TT;\>;TID;TID;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
}

