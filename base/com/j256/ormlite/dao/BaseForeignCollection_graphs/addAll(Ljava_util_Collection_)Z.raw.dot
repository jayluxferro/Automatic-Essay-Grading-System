digraph "CFG forcom.j256.ormlite.dao.BaseForeignCollection.addAll(Ljava\/util\/Collection;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE \l0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: INVOKE  (r1 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0020 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: INVOKE  (r1 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|SYNTHETIC\lSplitter:B:4:0x000f\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x000f\l|0x000f: INVOKE  (r1 I:boolean) = \l  (r2 I:com.j256.ormlite.dao.BaseForeignCollection)\l  (r1 I:java.lang.Object)\l com.j256.ormlite.dao.BaseForeignCollection.addElement(java.lang.Object):boolean type: DIRECT A[Catch:\{ SQLException \-\> 0x0017 \}, TRY_ENTER]\l0x0012: NOP   A[TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0005 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|ExcHandler: SQLException null\lSplitter:B:4:0x000f\l|0x0017: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x001a: CONST_STR  (r1 I:java.lang.String) =  \"Could not create data elements in dao\" \l0x001c: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l  (r3 I:java.lang.Throwable)\l java.lang.IllegalStateException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.j256.ormlite.dao.BaseForeignCollection.addAll((r2 'this' I:com.j256.ormlite.dao.BaseForeignCollection A[IMMUTABLE_TYPE, THIS]), (r3 I:java.util.Collection\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Collection\<, +TT;\>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

