digraph "CFG forcom.j256.ormlite.dao.BaseForeignCollection.getPreparedQuery()Lcom\/j256\/ormlite\/stmt\/PreparedQuery;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.dao.Dao\<T, ID\>) = (r4 I:com.j256.ormlite.dao.BaseForeignCollection) com.j256.ormlite.dao.BaseForeignCollection.dao com.j256.ormlite.dao.Dao \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: RETURN  (r0 I:com.j256.ormlite.stmt.PreparedQuery\<T\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IGET  (r0 I:com.j256.ormlite.stmt.PreparedQuery\<T\>) = (r4 I:com.j256.ormlite.dao.BaseForeignCollection) com.j256.ormlite.dao.BaseForeignCollection.preparedQuery com.j256.ormlite.stmt.PreparedQuery \l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x004a \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: NEW_INSTANCE  (r0 I:com.j256.ormlite.stmt.SelectArg) =  com.j256.ormlite.stmt.SelectArg \l0x000c: INVOKE  (r0 I:com.j256.ormlite.stmt.SelectArg) com.j256.ormlite.stmt.SelectArg.\<init\>():void type: DIRECT \l0x000f: IGET  (r1 I:java.lang.Object) = (r4 I:com.j256.ormlite.dao.BaseForeignCollection) com.j256.ormlite.dao.BaseForeignCollection.parentId java.lang.Object \l0x0011: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.SelectArg)\l  (r1 I:java.lang.Object)\l com.j256.ormlite.stmt.SelectArg.setValue(java.lang.Object):void type: VIRTUAL \l0x0014: IGET  (r1 I:com.j256.ormlite.dao.Dao\<T, ID\>) = (r4 I:com.j256.ormlite.dao.BaseForeignCollection) com.j256.ormlite.dao.BaseForeignCollection.dao com.j256.ormlite.dao.Dao \l0x0016: INVOKE  (r1 I:com.j256.ormlite.stmt.QueryBuilder) = (r1 I:com.j256.ormlite.dao.Dao) com.j256.ormlite.dao.Dao.queryBuilder():com.j256.ormlite.stmt.QueryBuilder type: INTERFACE \l0x001a: IGET  (r2 I:java.lang.String) = (r4 I:com.j256.ormlite.dao.BaseForeignCollection) com.j256.ormlite.dao.BaseForeignCollection.orderColumn java.lang.String \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0025 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: IGET  (r2 I:java.lang.String) = (r4 I:com.j256.ormlite.dao.BaseForeignCollection) com.j256.ormlite.dao.BaseForeignCollection.orderColumn java.lang.String \l0x0020: IGET  (r3 I:boolean) = (r4 I:com.j256.ormlite.dao.BaseForeignCollection) com.j256.ormlite.dao.BaseForeignCollection.orderAscending boolean \l0x0022: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.QueryBuilder)\l  (r2 I:java.lang.String)\l  (r3 I:boolean)\l com.j256.ormlite.stmt.QueryBuilder.orderBy(java.lang.String, boolean):com.j256.ormlite.stmt.QueryBuilder type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: INVOKE  (r1 I:com.j256.ormlite.stmt.Where) = (r1 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.where():com.j256.ormlite.stmt.Where type: VIRTUAL \l0x0029: IGET  (r2 I:com.j256.ormlite.field.FieldType) = (r4 I:com.j256.ormlite.dao.BaseForeignCollection) com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType com.j256.ormlite.field.FieldType \l0x002b: INVOKE  (r2 I:java.lang.String) = (r2 I:com.j256.ormlite.field.FieldType) com.j256.ormlite.field.FieldType.getColumnName():java.lang.String type: VIRTUAL \l0x002f: INVOKE  (r0 I:com.j256.ormlite.stmt.Where) = \l  (r1 I:com.j256.ormlite.stmt.Where)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Object)\l com.j256.ormlite.stmt.Where.eq(java.lang.String, java.lang.Object):com.j256.ormlite.stmt.Where type: VIRTUAL \l0x0033: INVOKE  (r0 I:com.j256.ormlite.stmt.PreparedQuery) = (r0 I:com.j256.ormlite.stmt.Where) com.j256.ormlite.stmt.Where.prepare():com.j256.ormlite.stmt.PreparedQuery type: VIRTUAL \l0x0037: IPUT  \l  (r0 I:com.j256.ormlite.stmt.PreparedQuery\<T\>)\l  (r4 I:com.j256.ormlite.dao.BaseForeignCollection)\l com.j256.ormlite.dao.BaseForeignCollection.preparedQuery com.j256.ormlite.stmt.PreparedQuery \l0x0039: IGET  (r0 I:com.j256.ormlite.stmt.PreparedQuery\<T\>) = (r4 I:com.j256.ormlite.dao.BaseForeignCollection) com.j256.ormlite.dao.BaseForeignCollection.preparedQuery com.j256.ormlite.stmt.PreparedQuery \l0x003b: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) com.j256.ormlite.stmt.mapped.MappedPreparedStmt \l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|0x003d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x004a \l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|0x003f: IGET  (r0 I:com.j256.ormlite.stmt.PreparedQuery\<T\>) = (r4 I:com.j256.ormlite.dao.BaseForeignCollection) com.j256.ormlite.dao.BaseForeignCollection.preparedQuery com.j256.ormlite.stmt.PreparedQuery \l0x0041: CHECK_CAST  (r0 I:com.j256.ormlite.stmt.mapped.MappedPreparedStmt) = (com.j256.ormlite.stmt.mapped.MappedPreparedStmt) (r0 I:?[OBJECT, ARRAY]) \l0x0043: IGET  (r1 I:java.lang.Object) = (r4 I:com.j256.ormlite.dao.BaseForeignCollection) com.j256.ormlite.dao.BaseForeignCollection.parent java.lang.Object \l0x0045: IGET  (r2 I:java.lang.Object) = (r4 I:com.j256.ormlite.dao.BaseForeignCollection) com.j256.ormlite.dao.BaseForeignCollection.parentId java.lang.Object \l0x0047: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.mapped.MappedPreparedStmt)\l  (r1 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l com.j256.ormlite.stmt.mapped.MappedPreparedStmt.setParentInformation(java.lang.Object, java.lang.Object):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x004a|0x004a: IGET  (r0 I:com.j256.ormlite.stmt.PreparedQuery\<T\>) = (r4 I:com.j256.ormlite.dao.BaseForeignCollection) com.j256.ormlite.dao.BaseForeignCollection.preparedQuery com.j256.ormlite.stmt.PreparedQuery \l}"];
Node_13 [shape=record,label="{13\:\ 0x004c|0x004c: RETURN  (r0 I:com.j256.ormlite.stmt.PreparedQuery\<T\>) \l}"];
MethodNode[shape=record,label="{protected com.j256.ormlite.stmt.PreparedQuery\<T\> com.j256.ormlite.dao.BaseForeignCollection.getPreparedQuery((r4 'this' I:com.j256.ormlite.dao.BaseForeignCollection A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Lcom\/j256\/ormlite\/stmt\/PreparedQuery\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

