digraph "CFG forcom.j256.ormlite.dao.BaseForeignCollection.retainAll(Ljava\/util\/Collection;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.dao.Dao\<T, ID\>) = (r3 I:com.j256.ormlite.dao.BaseForeignCollection) com.j256.ormlite.dao.BaseForeignCollection.dao com.j256.ormlite.dao.Dao \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r0 I:com.j256.ormlite.dao.CloseableIterator) = (r3 I:com.j256.ormlite.dao.BaseForeignCollection) com.j256.ormlite.dao.BaseForeignCollection.closeableIterator():com.j256.ormlite.dao.CloseableIterator type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|SYNTHETIC\lSplitter:B:4:0x000a\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x000a\l|0x000a: INVOKE  (r2 I:boolean) = (r0 I:com.j256.ormlite.dao.CloseableIterator) com.j256.ormlite.dao.CloseableIterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0023 \}, TRY_ENTER]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001f A[Catch:\{ all \-\> 0x0023 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: INVOKE  (r2 I:java.lang.Object) = (r0 I:com.j256.ormlite.dao.CloseableIterator) com.j256.ormlite.dao.CloseableIterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0023 \}]\l0x0014: INVOKE  (r2 I:boolean) = (r4 I:java.util.Collection), (r2 I:java.lang.Object) java.util.Collection.contains(java.lang.Object):boolean type: INTERFACE A[Catch:\{ all \-\> 0x0023 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a A[Catch:\{ all \-\> 0x0023 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: INVOKE  (r0 I:com.j256.ormlite.dao.CloseableIterator) com.j256.ormlite.dao.CloseableIterator.remove():void type: INTERFACE A[Catch:\{ all \-\> 0x0023 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: INVOKE  (r0 I:java.io.Closeable) com.j256.ormlite.misc.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: RETURN  (r1 I:boolean) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|ExcHandler: all null\lSplitter:B:4:0x000a\l|0x0023: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|0x0024: INVOKE  (r0 I:java.io.Closeable) com.j256.ormlite.misc.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x0027|0x0027: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public boolean com.j256.ormlite.dao.BaseForeignCollection.retainAll((r3 'this' I:com.j256.ormlite.dao.BaseForeignCollection A[IMMUTABLE_TYPE, THIS]), (r4 I:java.util.Collection\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Collection\<, *\>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_4;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_4;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

