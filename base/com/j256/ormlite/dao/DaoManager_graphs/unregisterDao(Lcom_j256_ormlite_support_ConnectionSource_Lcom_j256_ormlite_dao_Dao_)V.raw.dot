digraph "CFG forcom.j256.ormlite.dao.DaoManager.unregisterDao(Lcom\/j256\/ormlite\/support\/ConnectionSource;Lcom\/j256\/ormlite\/dao\/Dao;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_CLASS  (r0 I:java.lang.Class\<com.j256.ormlite.dao.DaoManager\>) =  com.j256.ormlite.dao.DaoManager.class \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0013 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|SYNTHETIC\lSplitter:B:3:0x0005\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0005\l|0x0005: NEW_INSTANCE  (r1 I:com.j256.ormlite.dao.DaoManager$ClassConnectionSource) =  com.j256.ormlite.dao.DaoManager$ClassConnectionSource A[Catch:\{ all \-\> 0x001b \}, TRY_ENTER]\l0x0007: INVOKE  (r2 I:java.lang.Class) = (r4 I:com.j256.ormlite.dao.Dao) com.j256.ormlite.dao.Dao.getDataClass():java.lang.Class type: INTERFACE A[Catch:\{ all \-\> 0x001b \}]\l0x000b: INVOKE  \l  (r1 I:com.j256.ormlite.dao.DaoManager$ClassConnectionSource)\l  (r3 I:com.j256.ormlite.support.ConnectionSource)\l  (r2 I:java.lang.Class)\l com.j256.ormlite.dao.DaoManager.ClassConnectionSource.\<init\>(com.j256.ormlite.support.ConnectionSource, java.lang.Class):void type: DIRECT A[Catch:\{ all \-\> 0x001b \}]\l0x000e: INVOKE  \l  (r1 I:com.j256.ormlite.dao.DaoManager$ClassConnectionSource)\l  (r4 I:com.j256.ormlite.dao.Dao)\l com.j256.ormlite.dao.DaoManager.removeDaoToClassMap(com.j256.ormlite.dao.DaoManager$ClassConnectionSource, com.j256.ormlite.dao.Dao):void type: STATIC A[Catch:\{ all \-\> 0x001b \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|SYNTHETIC\lSplitter:B:7:0x0013\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0013\l|0x0013: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException A[Catch:\{ all \-\> 0x001b \}, TRY_ENTER]\l0x0015: CONST_STR  (r4 I:java.lang.String) =  \"connectionSource argument cannot be null\" A[Catch:\{ all \-\> 0x001b \}]\l0x0017: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: THROW  (r3 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x001b \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|ExcHandler: all null\lSplitter:B:3:0x0005\l|0x001b: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static synchronized void com.j256.ormlite.dao.DaoManager.unregisterDao((r3 I:com.j256.ormlite.support.ConnectionSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.j256.ormlite.dao.Dao\<?, ?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/support\/ConnectionSource;, Lcom\/j256\/ormlite\/dao\/Dao\<, **\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

