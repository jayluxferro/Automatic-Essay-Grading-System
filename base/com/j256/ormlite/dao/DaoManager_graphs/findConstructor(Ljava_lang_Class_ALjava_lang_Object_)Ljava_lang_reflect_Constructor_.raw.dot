digraph "CFG forcom.j256.ormlite.dao.DaoManager.findConstructor(Ljava\/lang\/Class;[Ljava\/lang\/Object;)Ljava\/lang\/reflect\/Constructor;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r8 I:java.lang.reflect.Constructor[]) = (r8 I:java.lang.Class) java.lang.Class.getConstructors():java.lang.reflect.Constructor[] type: VIRTUAL \l0x0004: ARRAY_LENGTH  (r0 I:int) = (r8 I:?[]) \l0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:15:0x0031 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: AGET  (r3 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x000b: INVOKE  (r4 I:java.lang.Class[]) = (r3 I:java.lang.reflect.Constructor) java.lang.reflect.Constructor.getParameterTypes():java.lang.Class[] type: VIRTUAL \l0x000f: ARRAY_LENGTH  (r5 I:int) = (r4 I:?[]) \l0x0010: ARRAY_LENGTH  (r6 I:int) = (r9 I:?[]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002e \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: ARRAY_LENGTH  (r6 I:int) = (r4 I:?[]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r5 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:11:0x002a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: AGET  (r6 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r5 I:?[int, short, byte, char]) \l0x0019: AGET  (r7 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY][]), (r5 I:?[int, short, byte, char]) \l0x001b: INVOKE  (r7 I:java.lang.Class) = (r7 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x001f: INVOKE  (r6 I:boolean) = (r6 I:java.lang.Class), (r7 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0027 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|0x002b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002e \l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: RETURN  (r3 I:java.lang.reflect.Constructor\<?\>) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002e|0x002e: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0031: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|0x0032: RETURN  (r8 I:java.lang.reflect.Constructor\<?\>) \l}"];
MethodNode[shape=record,label="{private static java.lang.reflect.Constructor\<?\> com.j256.ormlite.dao.DaoManager.findConstructor((r8 I:java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/Class\<, *\>;[, Ljava\/lang\/Object;, ), Ljava\/lang\/reflect\/Constructor\<, *\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_12;
Node_10 -> Node_5;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_1;
Node_15 -> Node_16;
}

