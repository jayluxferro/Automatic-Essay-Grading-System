digraph "CFG forcom.j256.ormlite.dao.DaoManager.addCachedDatabaseConfigs(Ljava\/util\/Collection;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_CLASS  (r0 I:java.lang.Class\<com.j256.ormlite.dao.DaoManager\>) =  com.j256.ormlite.dao.DaoManager.class \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: SGET  (r1 I:java.util.Map\<java.lang.Class\<?\>, com.j256.ormlite.table.DatabaseTableConfig\<?\>\>) =  com.j256.ormlite.dao.DaoManager.configMap java.util.Map A[Catch:\{ all \-\> 0x003b \}, TRY_ENTER]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000d A[Catch:\{ all \-\> 0x003b \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: NEW_INSTANCE  (r1 I:java.util.HashMap) =  java.util.HashMap A[Catch:\{ all \-\> 0x003b \}]\l0x0009: INVOKE  (r1 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x003b \}]\l0x000c: GOTO  \-\> 0x0014 A[Catch:\{ all \-\> 0x003b \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: NEW_INSTANCE  (r1 I:java.util.HashMap) =  java.util.HashMap A[Catch:\{ all \-\> 0x003b \}]\l0x000f: SGET  (r2 I:java.util.Map\<java.lang.Class\<?\>, com.j256.ormlite.table.DatabaseTableConfig\<?\>\>) =  com.j256.ormlite.dao.DaoManager.configMap java.util.Map A[Catch:\{ all \-\> 0x003b \}]\l0x0011: INVOKE  (r1 I:java.util.HashMap), (r2 I:java.util.Map) java.util.HashMap.\<init\>(java.util.Map):void type: DIRECT A[Catch:\{ all \-\> 0x003b \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: INVOKE  (r5 I:java.util.Iterator) = (r5 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ all \-\> 0x003b \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: INVOKE  (r2 I:boolean) = (r5 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x003b \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0037 A[Catch:\{ all \-\> 0x003b \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: INVOKE  (r2 I:java.lang.Object) = (r5 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x003b \}]\l0x0022: CHECK_CAST  (r2 I:com.j256.ormlite.table.DatabaseTableConfig) = (com.j256.ormlite.table.DatabaseTableConfig) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003b \}]\l0x0024: INVOKE  (r3 I:java.lang.Class) = (r2 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.getDataClass():java.lang.Class type: VIRTUAL A[Catch:\{ all \-\> 0x003b \}]\l0x0028: INVOKE  \l  (r1 I:java.util.Map)\l  (r3 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x003b \}]\l0x002b: SGET  (r3 I:com.j256.ormlite.logger.Logger) =  com.j256.ormlite.dao.DaoManager.logger com.j256.ormlite.logger.Logger A[Catch:\{ all \-\> 0x003b \}]\l0x002d: CONST_STR  (r4 I:java.lang.String) =  \"Loaded configuration for \{\}\" A[Catch:\{ all \-\> 0x003b \}]\l0x002f: INVOKE  (r2 I:java.lang.Class) = (r2 I:com.j256.ormlite.table.DatabaseTableConfig) com.j256.ormlite.table.DatabaseTableConfig.getDataClass():java.lang.Class type: VIRTUAL A[Catch:\{ all \-\> 0x003b \}]\l0x0033: INVOKE  \l  (r3 I:com.j256.ormlite.logger.Logger)\l  (r4 I:java.lang.String)\l  (r2 I:java.lang.Object)\l com.j256.ormlite.logger.Logger.info(java.lang.String, java.lang.Object):void type: VIRTUAL A[Catch:\{ all \-\> 0x003b \}]\l0x0036: GOTO  \-\> 0x0018 A[Catch:\{ all \-\> 0x003b \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|0x0037: SPUT  \l  (r1 I:java.util.Map\<java.lang.Class\<?\>, com.j256.ormlite.table.DatabaseTableConfig\<?\>\>)\l com.j256.ormlite.dao.DaoManager.configMap java.util.Map A[Catch:\{ all \-\> 0x003b \}, TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|0x0039: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|0x003a: RETURN   \l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x003b: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|0x003c: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|0x003d: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static synchronized void com.j256.ormlite.dao.DaoManager.addCachedDatabaseConfigs((r5 I:java.util.Collection\<com.j256.ormlite.table.DatabaseTableConfig\<?\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Collection\<, Lcom\/j256\/ormlite\/table\/DatabaseTableConfig\<, *\>;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_8;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

