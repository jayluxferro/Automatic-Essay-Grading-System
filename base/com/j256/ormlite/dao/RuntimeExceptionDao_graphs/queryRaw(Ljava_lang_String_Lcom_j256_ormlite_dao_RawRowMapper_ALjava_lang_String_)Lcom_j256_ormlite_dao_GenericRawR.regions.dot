digraph "CFG forcom.j256.ormlite.dao.RuntimeExceptionDao.queryRaw(Ljava\/lang\/String;Lcom\/j256\/ormlite\/dao\/RawRowMapper;[Ljava\/lang\/String;)Lcom\/j256\/ormlite\/dao\/GenericRawResults;" {
subgraph cluster_Region_87117746 {
label = "R(1:(1:2))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1535311164 {
label = "Try: R(1:2) catches: R(3:3|4|5)";
node [shape=record,color=blue];
subgraph cluster_Region_1829680506 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return r1.dao.queryRaw(r2, r3, r4)\l}"];
}
subgraph cluster_Region_316989082 {
label = "R(3:3|4|5) | ExcHandler: SQLException (r3v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|ExcHandler: SQLException (r3v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|logMessage(r3, \"queryRaw threw exception on: \" + r2)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|throw new java.lang.RuntimeException(r3)\l}"];
}
}
}
subgraph cluster_Region_316989082 {
label = "R(3:3|4|5) | ExcHandler: SQLException (r3v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|ExcHandler: SQLException (r3v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|logMessage(r3, \"queryRaw threw exception on: \" + r2)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|throw new java.lang.RuntimeException(r3)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|Catch:\{ SQLException \-\> 0x0007 \}\lSplitter:B:0:0x0000\l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.dao.GenericRawResults\<UO\> com.j256.ormlite.dao.RuntimeExceptionDao.queryRaw((r1v0 'this' com.j256.ormlite.dao.RuntimeExceptionDao A[IMMUTABLE_TYPE, THIS]), (r2v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 com.j256.ormlite.dao.RawRowMapper\<UO\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<UO:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/String;, Lcom\/j256\/ormlite\/dao\/RawRowMapper\<, TUO;\>;[, Ljava\/lang\/String;, ), Lcom\/j256\/ormlite\/dao\/GenericRawResults\<, TUO;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
}

