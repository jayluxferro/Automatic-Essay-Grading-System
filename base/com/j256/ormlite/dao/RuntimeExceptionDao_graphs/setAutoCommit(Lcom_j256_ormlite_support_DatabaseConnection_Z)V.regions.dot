digraph "CFG forcom.j256.ormlite.dao.RuntimeExceptionDao.setAutoCommit(Lcom\/j256\/ormlite\/support\/DatabaseConnection;Z)V" {
subgraph cluster_Region_400562456 {
label = "R(1:(1:1))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1888649407 {
label = "Try: R(1:1) catches: R(3:3|4|5)";
node [shape=record,color=blue];
subgraph cluster_Region_147930944 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ SQLException \-\> 0x0006 \}\lSplitter:B:0:0x0000\l|r3.dao.setAutoCommit(r4, r5)     \/\/ Catch:\{ SQLException \-\> 0x0006 \}\l}"];
}
subgraph cluster_Region_178202463 {
label = "R(3:3|4|5) | ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|logMessage(r0, \"setAutoCommit(\" + r4 + \",\" + r5 + \") threw exception\")\l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|throw new java.lang.RuntimeException(r0)\l}"];
}
}
}
subgraph cluster_Region_178202463 {
label = "R(3:3|4|5) | ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|logMessage(r0, \"setAutoCommit(\" + r4 + \",\" + r5 + \") threw exception\")\l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|throw new java.lang.RuntimeException(r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0005}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.dao.RuntimeExceptionDao.setAutoCommit((r3v0 'this' com.j256.ormlite.dao.RuntimeExceptionDao A[IMMUTABLE_TYPE, THIS]), (r4v0 com.j256.ormlite.support.DatabaseConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_0 -> Node_1;
Node_0 -> Node_3;
}

