digraph "CFG forcom.j256.ormlite.dao.RuntimeExceptionDao.assignEmptyForeignCollection(Ljava\/lang\/Object;Ljava\/lang\/String;)V" {
subgraph cluster_Region_2069339515 {
label = "R(1:(1:1))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1069181684 {
label = "Try: R(1:1) catches: R(3:3|4|5)";
node [shape=record,color=blue];
subgraph cluster_Region_1904670846 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ SQLException \-\> 0x0006 \}\lSplitter:B:0:0x0000\l|r2.dao.assignEmptyForeignCollection(r3, r4)     \/\/ Catch:\{ SQLException \-\> 0x0006 \}\l}"];
}
subgraph cluster_Region_728952619 {
label = "R(3:3|4|5) | ExcHandler: SQLException (r3v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|ExcHandler: SQLException (r3v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|logMessage(r3, \"assignEmptyForeignCollection threw exception on \" + r4)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|throw new java.lang.RuntimeException(r3)\l}"];
}
}
}
subgraph cluster_Region_728952619 {
label = "R(3:3|4|5) | ExcHandler: SQLException (r3v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|ExcHandler: SQLException (r3v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|logMessage(r3, \"assignEmptyForeignCollection threw exception on \" + r4)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|throw new java.lang.RuntimeException(r3)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0005}"];
MethodNode[shape=record,label="{public void com.j256.ormlite.dao.RuntimeExceptionDao.assignEmptyForeignCollection((r2v0 'this' com.j256.ormlite.dao.RuntimeExceptionDao A[IMMUTABLE_TYPE, THIS]), (r3v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;, Ljava\/lang\/String;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_0 -> Node_1;
Node_0 -> Node_3;
}

