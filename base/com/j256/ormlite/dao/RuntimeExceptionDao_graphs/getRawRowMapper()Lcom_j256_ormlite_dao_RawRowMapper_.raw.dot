digraph "CFG forcom.j256.ormlite.dao.RuntimeExceptionDao.getRawRowMapper()Lcom\/j256\/ormlite\/dao\/RawRowMapper;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.dao.Dao\<T, ID\>) = (r1 I:com.j256.ormlite.dao.RuntimeExceptionDao) com.j256.ormlite.dao.RuntimeExceptionDao.dao com.j256.ormlite.dao.Dao \l0x0002: INVOKE  (r0 I:com.j256.ormlite.dao.RawRowMapper) = (r0 I:com.j256.ormlite.dao.Dao) com.j256.ormlite.dao.Dao.getRawRowMapper():com.j256.ormlite.dao.RawRowMapper type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: RETURN  (r0 I:com.j256.ormlite.dao.RawRowMapper\<T\>) \l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.dao.RawRowMapper\<T\> com.j256.ormlite.dao.RuntimeExceptionDao.getRawRowMapper((r1 'this' I:com.j256.ormlite.dao.RuntimeExceptionDao A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Lcom\/j256\/ormlite\/dao\/RawRowMapper\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

