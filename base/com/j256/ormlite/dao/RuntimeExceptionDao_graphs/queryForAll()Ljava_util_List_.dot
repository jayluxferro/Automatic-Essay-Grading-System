digraph "CFG forcom.j256.ormlite.dao.RuntimeExceptionDao.queryForAll()Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ SQLException \-\> 0x0007 \}\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return r2.dao.queryForAll()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.sql.SQLException r0 = move\-exception\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|logMessage(r0, \"queryForAll threw exception\")\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|throw new java.lang.RuntimeException(r0)\l}"];
MethodNode[shape=record,label="{public java.util.List\<T\> com.j256.ormlite.dao.RuntimeExceptionDao.queryForAll((r2v0 'this' com.j256.ormlite.dao.RuntimeExceptionDao A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

