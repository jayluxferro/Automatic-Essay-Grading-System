digraph "CFG forcom.j256.ormlite.dao.BaseDaoImpl.3.closeableIterator()Lcom\/j256\/ormlite\/dao\/CloseableIterator;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:com.j256.ormlite.dao.BaseDaoImpl) = (r4 I:com.j256.ormlite.dao.BaseDaoImpl$3) com.j256.ormlite.dao.BaseDaoImpl.3.this$0 com.j256.ormlite.dao.BaseDaoImpl A[Catch:\{ Exception \-\> 0x0008 \}, TRY_ENTER]\l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0008 \}]\l0x0003: INVOKE  (r0 I:com.j256.ormlite.dao.CloseableIterator) = (r0 I:com.j256.ormlite.dao.BaseDaoImpl), (r1 I:int) com.j256.ormlite.dao.BaseDaoImpl.access$100(com.j256.ormlite.dao.BaseDaoImpl, int):com.j256.ormlite.dao.CloseableIterator type: STATIC A[Catch:\{ Exception \-\> 0x0008 \}]\l0x0006: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r0 I:com.j256.ormlite.dao.CloseableIterator\<T\>) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|ExcHandler: Exception null\lSplitter:B:0:0x0000\l|0x0008: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x000b: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000d: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0010: CONST_STR  (r3 I:java.lang.String) =  \"Could not build iterator for \" \l0x0012: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0015: IGET  (r3 I:com.j256.ormlite.dao.BaseDaoImpl) = (r4 I:com.j256.ormlite.dao.BaseDaoImpl$3) com.j256.ormlite.dao.BaseDaoImpl.3.this$0 com.j256.ormlite.dao.BaseDaoImpl \l0x0017: IGET  (r3 I:java.lang.Class\<T\>) = (r3 I:com.j256.ormlite.dao.BaseDaoImpl) com.j256.ormlite.dao.BaseDaoImpl.dataClass java.lang.Class \l0x0019: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x001c: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0020: INVOKE  \l  (r1 I:java.lang.IllegalStateException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l java.lang.IllegalStateException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.j256.ormlite.dao.CloseableIterator\<T\> com.j256.ormlite.dao.BaseDaoImpl.3.closeableIterator((r4 'this' I:com.j256.ormlite.dao.BaseDaoImpl$3 A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Lcom\/j256\/ormlite\/dao\/CloseableIterator\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

