digraph "CFG forcom.lottery.ghanalotto.Utils.InternetCheking.hasActiveInternetConnection(Landroid\/content\/Context;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r3 I:boolean) = \l  (r6 I:com.lottery.ghanalotto.Utils.InternetCheking)\l  (r7 I:android.content.Context A[D('context' android.content.Context)])\l com.lottery.ghanalotto.Utils.InternetCheking.isNetworkAvailable(android.content.Context):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0042 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|SYNTHETIC\lSplitter:B:2:0x0007\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0007\l|0x0007: NEW_INSTANCE  (r3 I:java.net.URL) =  java.net.URL A[Catch:\{ IOException \-\> 0x003a \}, TRY_ENTER]\l0x0009: CONST_STR  (r5 I:java.lang.String) =  \"http:\/\/www.google.com\" A[Catch:\{ IOException \-\> 0x003a \}]\l0x000b: INVOKE  (r3 I:java.net.URL), (r5 I:java.lang.String) java.net.URL.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ IOException \-\> 0x003a \}]\l0x000e: INVOKE  (r3 I:java.net.URLConnection) = (r3 I:java.net.URL) java.net.URL.openConnection():java.net.URLConnection type: VIRTUAL A[Catch:\{ IOException \-\> 0x003a \}]\l0x0012: CHECK_CAST  (r3 I:java.net.HttpURLConnection) = (java.net.HttpURLConnection) (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x003a \}]\l0x0014: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x003a \}]\l0x0015: CHECK_CAST  (r0 I:java.net.HttpURLConnection) = (java.net.HttpURLConnection) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x003a \}]\l0x0017: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x003a \}]\l0x0018: CONST_STR  (r3 I:java.lang.String) =  \"User\-Agent\" A[Catch:\{ IOException \-\> 0x003a \}]\l0x001a: CONST_STR  (r5 I:java.lang.String) =  \"Test\" A[Catch:\{ IOException \-\> 0x003a \}]\l0x001c: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('urlc' java.net.HttpURLConnection)])\l  (r3 I:java.lang.String)\l  (r5 I:java.lang.String)\l java.net.HttpURLConnection.setRequestProperty(java.lang.String, java.lang.String):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x003a \}]\l0x001f: CONST_STR  (r3 I:java.lang.String) =  \"Connection\" A[Catch:\{ IOException \-\> 0x003a \}]\l0x0021: CONST_STR  (r5 I:java.lang.String) =  \"close\" A[Catch:\{ IOException \-\> 0x003a \}]\l0x0023: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('urlc' java.net.HttpURLConnection)])\l  (r3 I:java.lang.String)\l  (r5 I:java.lang.String)\l java.net.HttpURLConnection.setRequestProperty(java.lang.String, java.lang.String):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x003a \}]\l0x0026: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1500(0x5dc, float:2.102E\-42) ?[int, float, short, byte, char])\l A[Catch:\{ IOException \-\> 0x003a \}]\l0x0028: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('urlc' java.net.HttpURLConnection)])\l  (r3 I:int)\l java.net.HttpURLConnection.setConnectTimeout(int):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x003a \}]\l0x002b: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('urlc' java.net.HttpURLConnection)])\l java.net.HttpURLConnection.connect():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x003a \}]\l0x002e: INVOKE  (r3 I:int) = \l  (r2 I:java.net.HttpURLConnection A[D('urlc' java.net.HttpURLConnection)])\l java.net.HttpURLConnection.getResponseCode():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x003a \}, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|0x0032: CONST  (r5 I:?[int, float, short, byte, char]) = (200(0xc8, float:2.8E\-43) ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0034|0x0034: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0038 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|0x0036: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|0x0037: RETURN  (r3 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0038|0x0038: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|ExcHandler: IOException null\lSplitter:B:2:0x0007\l|0x003a: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|0x003b: INVOKE  (r3 I:java.lang.String) = (r1 I:java.io.IOException A[D('e' java.io.IOException)]) java.io.IOException.getMessage():java.lang.String type: VIRTUAL \l0x003f: INVOKE  \l  (r3 I:java.lang.String)\l  (r7 I:android.content.Context A[D('context' android.content.Context)])\l com.lottery.ghanalotto.Utils.Message.showErrorDialog(java.lang.String, android.content.Context):void type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|0x0042: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public boolean com.lottery.ghanalotto.Utils.InternetCheking.hasActiveInternetConnection((r6 'this' I:com.lottery.ghanalotto.Utils.InternetCheking A[IMMUTABLE_TYPE, THIS]), (r7 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0018\-0x0037: r2 'urlc' java.net.HttpURLConnection\l  0x0038\-0x003a: r2 'urlc' java.net.HttpURLConnection\l  0x003b\-0x0042: r1 'e' java.io.IOException\l  ?\-0x0043: r7 'context' android.content.Context\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_7;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_7;
}

