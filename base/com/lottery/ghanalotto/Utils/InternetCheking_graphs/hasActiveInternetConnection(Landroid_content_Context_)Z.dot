digraph "CFG forcom.lottery.ghanalotto.Utils.InternetCheking.hasActiveInternetConnection(Landroid\/content\/Context;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (isNetworkAvailable(r7) == false) goto L_0x0042\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|SYNTHETIC\lSplitter:B:2:0x0007\l}"];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ IOException \-\> 0x003a \}\lSplitter:B:2:0x0007\l|r2 = (java.net.HttpURLConnection) new java.net.URL(\"http:\/\/www.google.com\").openConnection()     \/\/ Catch:\{ IOException \-\> 0x003a \}\lr2.setRequestProperty(\"User\-Agent\", \"Test\")     \/\/ Catch:\{ IOException \-\> 0x003a \}\lr2.setRequestProperty(\"Connection\", \"close\")     \/\/ Catch:\{ IOException \-\> 0x003a \}\lr2.setConnectTimeout(com.google.android.gms.common.ConnectionResult.DRIVE_EXTERNAL_STORAGE_REQUIRED)     \/\/ Catch:\{ IOException \-\> 0x003a \}\lr2.connect()     \/\/ Catch:\{ IOException \-\> 0x003a \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0031}"];
Node_5 [shape=record,label="{5\:\ 0x0034|if (r2.getResponseCode() != 200) goto L_0x0038\l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0038}"];
Node_8 [shape=record,label="{8\:\ 0x003a|ExcHandler: IOException (r1v0 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:2:0x0007\l|java.io.IOException r1 = move\-exception\l}"];
Node_9 [shape=record,label="{9\:\ 0x003b|com.lottery.ghanalotto.Utils.Message.showErrorDialog(r1.getMessage(), r7)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0042}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean com.lottery.ghanalotto.Utils.InternetCheking.hasActiveInternetConnection((r6v0 'this' com.lottery.ghanalotto.Utils.InternetCheking A[IMMUTABLE_TYPE, THIS]), (r7v0 'context' android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_12;
}

