digraph "CFG forcom.lottery.ghanalotto.Utils.ErrorApiMessage.a([B)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0002: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0005: ARRAY_LENGTH  (r7 I:int) = (r8 I:?[] A[D('data' byte[])]) \l0x0006: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r6 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:11:0x002f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: AGET  (r0 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE])\l  (r6 I:?[int, short, byte, char])\l \l0x000c: ARITH  (r5 I:int) = (r0 I:int A[D('b' byte)]) \>\>\> (4 int) \l0x000e: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (15 ?[int, float, short, byte, char]) \l0x0010: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0011: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('two_halfs' int)])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r2 I:?[int, byte, short, char] A[D('halfbyte' int)]) \< (0 ?[int, byte, short, char])  \-\> B:10:0x0029 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: CONST  (r5 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r2 I:?[int, byte, short, char] A[D('halfbyte' int)]) \> (r5 I:?[int, byte, short, char])  \-\> B:10:0x0029 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: ARITH  (r5 I:int) = (r2 I:int A[D('halfbyte' int)]) + (48 int) \l0x001a: CAST  (r5 I:char) = (char) (r5 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: INVOKE  \l  (r1 I:java.lang.StringBuilder A[D('buf' java.lang.StringBuilder)])\l  (r5 I:char)\l java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x001e: ARITH  (r2 I:?[int, boolean, short, byte, char] A[D('halfbyte' int)]) = (r0 I:?[int, boolean, short, byte, char] A[D('b' byte)]) & (15 ?[int, float, short, byte, char]) \l0x0020: ARITH  (r3 I:int) = (r4 I:int A[D('two_halfs' int)]) + (1 int) \l0x0022: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: IF  (r4 I:?[int, byte, short, char]) \< (r5 I:?[int, byte, short, char])  \-\> B:13:0x0034 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: ARITH  (r5 I:int) = (r6 I:int) + (1 int) \l0x0027: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: ARITH  (r5 I:int) = (r2 I:int A[D('halfbyte' int)]) + (\-10 int) \l0x002b: ARITH  (r5 I:int) = (r5 I:int) + (97 int) \l0x002d: CAST  (r5 I:char) = (char) (r5 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|0x002f: INVOKE  (r5 I:java.lang.String) = \l  (r1 I:java.lang.StringBuilder A[D('buf' java.lang.StringBuilder)])\l java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|0x0033: RETURN  (r5 I:java.lang.String) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|0x0034: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('two_halfs' int)])\l \l}"];
MethodNode[shape=record,label="{private static java.lang.String com.lottery.ghanalotto.Utils.ErrorApiMessage.a((r8 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0011\-0x0012: r3 'two_halfs' int\l  0x0012\-0x0022: r4 'two_halfs' int\l  0x0022\-0x0029: r3 'two_halfs' int\l  0x000c\-0x002f: r0 'b' byte\l  0x0010\-0x002f: r2 'halfbyte' int\l  0x0029\-0x002f: r4 'two_halfs' int\l  0x0034\-0x0035: r3 'two_halfs' int\l  0x0034\-0x0035: r0 'b' byte\l  0x0005\-0x0035: r1 'buf' java.lang.StringBuilder\l  0x0034\-0x0035: r2 'halfbyte' int\l  0x0035\-0x0035: r4 'two_halfs' int\l  ?\-0x0035: r8 'data' byte[]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_1;
Node_10 -> Node_7;
Node_11 -> Node_12;
Node_13 -> Node_3;
}

