digraph "CFG forcom.lottery.ghanalotto.SplashActivity.showInterstitialFacebook()V" {
subgraph cluster_Region_1744619396 {
label = "R(2:0|(1:(1:6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.interstitialAdFacebook = new com.facebook.ads.InterstitialAd(r2, getString(com.lottery.ghanalotto.C1402R.string.fb_ad_interstitial_id))\lr2.interstitialAdFacebook.setAdListener(new com.lottery.ghanalotto.SplashActivity.C14093())\lr2.interstitialAdFacebook.loadAd()\l}"];
subgraph cluster_Region_2005799503 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_522240921 {
label = "IF [B:1:0x001f, B:3:0x0027, B:5:0x0030] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x001f|if (r2.interstitialAdFacebook != null) goto L_0x0021\l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|ADDED_TO_REGION\l|if (r2.interstitialAdFacebook.isAdLoaded() != false) goto L_0x002a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0030|ADDED_TO_REGION\l|if (r2.interstitialAdFacebook.isAdInvalidated() != true) goto L_0x0032\l}"];
subgraph cluster_Region_1327312571 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0032|r2.interstitialAdFacebook.show()\l}"];
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0021}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x002a}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.lottery.ghanalotto.SplashActivity.showInterstitialFacebook((r2v0 'this' com.lottery.ghanalotto.SplashActivity A[IMMUTABLE_TYPE, THIS]))  | access modifiers changed from: private\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_8[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_9[style=dashed];
Node_6 -> Node_10;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

