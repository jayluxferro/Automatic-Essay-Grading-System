digraph "CFG forcom.caverock.androidsvg.CSSParser.ruleMatch(Lcom\/caverock\/androidsvg\/CSSParser$RuleMatchContext;Lcom\/caverock\/androidsvg\/CSSParser$Selector;Lcom\/caverock\/androidsvg\/SVG$SvgElementBase;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: INVOKE  (r3 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0005: IGET  (r0 I:com.caverock.androidsvg.SVG$SvgContainer) = (r8 I:com.caverock.androidsvg.SVG$SvgElementBase) com.caverock.androidsvg.SVG.SvgElementBase.parent com.caverock.androidsvg.SVG$SvgContainer \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0012 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: INVOKE  (r3 I:java.util.List), (r1 I:int), (r0 I:java.lang.Object) java.util.List.add(int, java.lang.Object):void type: INTERFACE \l0x000d: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$SvgObject) = (com.caverock.androidsvg.SVG$SvgObject) (r0 I:?[OBJECT, ARRAY]) \l0x000f: IGET  (r0 I:com.caverock.androidsvg.SVG$SvgContainer) = (r0 I:com.caverock.androidsvg.SVG$SvgObject) com.caverock.androidsvg.SVG.SvgObject.parent com.caverock.androidsvg.SVG$SvgContainer \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: INVOKE  (r0 I:int) = (r3 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0016: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0017: ARITH  (r4 I:int) = (r0 I:int) + (\-1 int) \l0x0019: INVOKE  (r0 I:int) = (r7 I:com.caverock.androidsvg.CSSParser$Selector) com.caverock.androidsvg.CSSParser.Selector.size():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0028 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: INVOKE  (r7 I:com.caverock.androidsvg.CSSParser$SimpleSelector) = \l  (r7 I:com.caverock.androidsvg.CSSParser$Selector)\l  (r1 I:int)\l com.caverock.androidsvg.CSSParser.Selector.get(int):com.caverock.androidsvg.CSSParser$SimpleSelector type: VIRTUAL \l0x0023: INVOKE  (r6 I:boolean) = \l  (r6 I:com.caverock.androidsvg.CSSParser$RuleMatchContext)\l  (r7 I:com.caverock.androidsvg.CSSParser$SimpleSelector)\l  (r3 I:java.util.List)\l  (r4 I:int)\l  (r8 I:com.caverock.androidsvg.SVG$SvgElementBase)\l com.caverock.androidsvg.CSSParser.selectorMatch(com.caverock.androidsvg.CSSParser$RuleMatchContext, com.caverock.androidsvg.CSSParser$SimpleSelector, java.util.List, int, com.caverock.androidsvg.SVG$SvgElementBase):boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: RETURN  (r6 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: INVOKE  (r0 I:int) = (r7 I:com.caverock.androidsvg.CSSParser$Selector) com.caverock.androidsvg.CSSParser.Selector.size():int type: VIRTUAL \l0x002c: ARITH  (r2 I:int) = (r0 I:int) + (\-1 int) \l0x002e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x002f: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0030: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0031: INVOKE  (r6 I:boolean) = \l  (r0 I:com.caverock.androidsvg.CSSParser$RuleMatchContext)\l  (r1 I:com.caverock.androidsvg.CSSParser$Selector)\l  (r2 I:int)\l  (r3 I:java.util.List)\l  (r4 I:int)\l  (r5 I:com.caverock.androidsvg.SVG$SvgElementBase)\l com.caverock.androidsvg.CSSParser.ruleMatch(com.caverock.androidsvg.CSSParser$RuleMatchContext, com.caverock.androidsvg.CSSParser$Selector, int, java.util.List, int, com.caverock.androidsvg.SVG$SvgElementBase):boolean type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|0x0035: RETURN  (r6 I:boolean) \l}"];
MethodNode[shape=record,label="{static boolean com.caverock.androidsvg.CSSParser.ruleMatch((r6 I:com.caverock.androidsvg.CSSParser$RuleMatchContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.caverock.androidsvg.CSSParser$Selector A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.caverock.androidsvg.SVG$SvgElementBase A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

