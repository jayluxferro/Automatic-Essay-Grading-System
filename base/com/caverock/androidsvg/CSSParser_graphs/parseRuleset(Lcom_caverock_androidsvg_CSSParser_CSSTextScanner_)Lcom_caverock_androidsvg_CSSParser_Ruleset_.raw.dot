digraph "CFG forcom.caverock.androidsvg.CSSParser.parseRuleset(Lcom\/caverock\/androidsvg\/CSSParser$CSSTextScanner;)Lcom\/caverock\/androidsvg\/CSSParser$Ruleset;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.caverock.androidsvg.CSSParser$Ruleset) =  com.caverock.androidsvg.CSSParser$Ruleset \l0x0002: INVOKE  (r0 I:com.caverock.androidsvg.CSSParser$Ruleset) com.caverock.androidsvg.CSSParser.Ruleset.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|SYNTHETIC\lSplitter:B:1:0x0005\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0005\l|0x0005: INVOKE  (r1 I:boolean) = (r5 I:com.caverock.androidsvg.CSSParser$CSSTextScanner) com.caverock.androidsvg.CSSParser.CSSTextScanner.empty():boolean type: VIRTUAL A[Catch:\{ CSSParseException \-\> 0x0030 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x004b A[Catch:\{ CSSParseException \-\> 0x0030 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: CONST_STR  (r1 I:java.lang.String) =  \"\<!\-\-\" A[Catch:\{ CSSParseException \-\> 0x0030 \}]\l0x000d: INVOKE  (r1 I:boolean) = \l  (r5 I:com.caverock.androidsvg.CSSParser$CSSTextScanner)\l  (r1 I:java.lang.String)\l com.caverock.androidsvg.CSSParser.CSSTextScanner.consume(java.lang.String):boolean type: VIRTUAL A[Catch:\{ CSSParseException \-\> 0x0030 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 A[Catch:\{ CSSParseException \-\> 0x0030 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: GOTO  \-\> 0x0005 A[Catch:\{ CSSParseException \-\> 0x0030 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: CONST_STR  (r1 I:java.lang.String) =  \"\-\-\>\" A[Catch:\{ CSSParseException \-\> 0x0030 \}]\l0x0016: INVOKE  (r1 I:boolean) = \l  (r5 I:com.caverock.androidsvg.CSSParser$CSSTextScanner)\l  (r1 I:java.lang.String)\l com.caverock.androidsvg.CSSParser.CSSTextScanner.consume(java.lang.String):boolean type: VIRTUAL A[Catch:\{ CSSParseException \-\> 0x0030 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001d A[Catch:\{ CSSParseException \-\> 0x0030 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: GOTO  \-\> 0x0005 A[Catch:\{ CSSParseException \-\> 0x0030 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: CONST  (r1 I:?[int, float, short, byte, char]) = (64 ?[int, float, short, byte, char]) A[Catch:\{ CSSParseException \-\> 0x0030 \}]\l0x001f: INVOKE  (r1 I:boolean) = \l  (r5 I:com.caverock.androidsvg.CSSParser$CSSTextScanner)\l  (r1 I:char)\l com.caverock.androidsvg.CSSParser.CSSTextScanner.consume(char):boolean type: VIRTUAL A[Catch:\{ CSSParseException \-\> 0x0030 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0029 A[Catch:\{ CSSParseException \-\> 0x0030 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|0x0025: INVOKE  \l  (r4 I:com.caverock.androidsvg.CSSParser)\l  (r0 I:com.caverock.androidsvg.CSSParser$Ruleset)\l  (r5 I:com.caverock.androidsvg.CSSParser$CSSTextScanner)\l com.caverock.androidsvg.CSSParser.parseAtRule(com.caverock.androidsvg.CSSParser$Ruleset, com.caverock.androidsvg.CSSParser$CSSTextScanner):void type: DIRECT A[Catch:\{ CSSParseException \-\> 0x0030 \}]\l0x0028: GOTO  \-\> 0x0005 A[Catch:\{ CSSParseException \-\> 0x0030 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|0x0029: INVOKE  (r1 I:boolean) = \l  (r4 I:com.caverock.androidsvg.CSSParser)\l  (r0 I:com.caverock.androidsvg.CSSParser$Ruleset)\l  (r5 I:com.caverock.androidsvg.CSSParser$CSSTextScanner)\l com.caverock.androidsvg.CSSParser.parseRule(com.caverock.androidsvg.CSSParser$Ruleset, com.caverock.androidsvg.CSSParser$CSSTextScanner):boolean type: DIRECT A[Catch:\{ CSSParseException \-\> 0x0030 \}]\l0x002c: NOP   A[TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|0x002d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x004b \l}"];
Node_16 [shape=record,label="{16\:\ 0x0030|ExcHandler: CSSParseException null\lSplitter:B:1:0x0005\l|0x0030: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x0031|0x0031: CONST_STR  (r1 I:java.lang.String) =  \"AndroidSVG CSSParser\" \l0x0033: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0035: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0038: CONST_STR  (r3 I:java.lang.String) =  \"CSS parser terminated early due to error: \" \l0x003a: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003d: INVOKE  (r5 I:java.lang.String) = (r5 I:com.caverock.androidsvg.CSSParseException) com.caverock.androidsvg.CSSParseException.getMessage():java.lang.String type: VIRTUAL \l0x0041: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0044: INVOKE  (r5 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0048: INVOKE  (r1 I:java.lang.String), (r5 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x004b|0x004b: RETURN  (r0 I:com.caverock.androidsvg.CSSParser$Ruleset) \l}"];
MethodNode[shape=record,label="{private com.caverock.androidsvg.CSSParser$Ruleset com.caverock.androidsvg.CSSParser.parseRuleset((r4 'this' I:com.caverock.androidsvg.CSSParser A[IMMUTABLE_TYPE, THIS]), (r5 I:com.caverock.androidsvg.CSSParser$CSSTextScanner A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_18;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_1;
Node_13 -> Node_14;
Node_14 -> Node_18;
Node_14 -> Node_1[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
}

