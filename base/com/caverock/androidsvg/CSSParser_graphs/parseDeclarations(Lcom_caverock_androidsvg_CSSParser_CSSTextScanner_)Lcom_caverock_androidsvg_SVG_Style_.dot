digraph "CFG forcom.caverock.androidsvg.CSSParser.parseDeclarations(Lcom\/caverock\/androidsvg\/CSSParser$CSSTextScanner;)Lcom\/caverock\/androidsvg\/SVG$Style;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.caverock.androidsvg.SVG$Style r0 = new com.caverock.androidsvg.SVG.Style()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|LOOP_START\lLOOP:0: B:1:0x0005\-\>B:15:0x0056\l|java.lang.String r1 = r5.nextIdentifier()\lr5.skipWhitespace()\l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|if (r5.consume(':') == false) goto L_0x0061\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|r5.skipWhitespace()\ljava.lang.String r2 = r5.nextPropertyValue()\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|if (r2 == null) goto L_0x0059\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|r5.skipWhitespace()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|if (r5.consume('!') == false) goto L_0x003f\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|r5.skipWhitespace()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|if (r5.consume(\"important\") == false) goto L_0x0037\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|r5.skipWhitespace()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0037}"];
Node_11 [shape=record,label="{11\:\ 0x003e|throw new com.caverock.androidsvg.CSSParseException(\"Malformed rule set: found unexpected '!'\")\l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|r5.consume(';')\lcom.caverock.androidsvg.SVGParser.processStyleProperty(r0, r1, r2)\lr5.skipWhitespace()\l}"];
Node_13 [shape=record,label="{13\:\ 0x004e|if (r5.empty() != false) goto L_0x0058\l}"];
Node_14 [shape=record,label="{14\:\ 0x0050}"];
Node_15 [shape=record,label="{15\:\ 0x0056|LOOP_END\lLOOP:0: B:1:0x0005\-\>B:15:0x0056\l|if (r5.consume('\}') == false) goto L_0x0005\l}"];
Node_16 [shape=record,label="{16\:\ 0x0058|RETURN\l|return r0\l}"];
Node_17 [shape=record,label="{17\:\ 0x0059}"];
Node_18 [shape=record,label="{18\:\ 0x0060|throw new com.caverock.androidsvg.CSSParseException(\"Expected property value\")\l}"];
Node_19 [shape=record,label="{19\:\ 0x0061}"];
Node_20 [shape=record,label="{20\:\ 0x0068|throw new com.caverock.androidsvg.CSSParseException(\"Expected ':'\")\l}"];
Node_21 [shape=record,label="{21\:\ 0x0058|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0037|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0061|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0058|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0059|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private com.caverock.androidsvg.SVG$Style com.caverock.androidsvg.CSSParser.parseDeclarations((r4v0 'this' com.caverock.androidsvg.CSSParser A[IMMUTABLE_TYPE, THIS]), (r5v0 com.caverock.androidsvg.CSSParser$CSSTextScanner A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.CSSParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_23;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_25;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_22;
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_21;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_15 -> Node_24[style=dashed];
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_21 -> Node_16;
Node_22 -> Node_10;
Node_23 -> Node_19;
Node_24 -> Node_16;
Node_25 -> Node_17;
}

