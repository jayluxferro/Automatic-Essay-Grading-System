digraph "CFG forcom.caverock.androidsvg.CSSParser.parseDeclarations(Lcom\/caverock\/androidsvg\/CSSParser$CSSTextScanner;)Lcom\/caverock\/androidsvg\/SVG$Style;" {
subgraph cluster_Region_423332950 {
label = "R(3:0|(2:1|(2:3|(6:5|(2:7|(1:9)(1:11))|12|(1:16)|1|(1:(1:20)))(1:18))(0))|16)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.caverock.androidsvg.SVG$Style com.caverock.androidsvg.SVG.Style r0 = new com.caverock.androidsvg.SVG.Style()\l}"];
subgraph cluster_LoopRegion_339502611 {
label = "LOOP:0: (2:1|(2:3|(6:5|(2:7|(1:9)(1:11))|12|(1:16)|1|(1:(1:20)))(1:18))(0))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0056|LOOP_END\lLOOP:0: B:1:0x0005\-\>B:15:0x0056\l|if (r5.consume('\}') == true) goto L_0x0058\l}"];
subgraph cluster_Region_100186203 {
label = "R(2:1|(2:3|(6:5|(2:7|(1:9)(1:11))|12|(1:16)|1|(1:(1:20)))(1:18))(0))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|LOOP_START\lLOOP:0: B:1:0x0005\-\>B:15:0x0056\l|java.lang.String java.lang.String r1 = r5.nextIdentifier()\lr5.skipWhitespace()\l}"];
subgraph cluster_IfRegion_178132217 {
label = "IF [B:2:0x0012] THEN: R(2:3|(6:5|(2:7|(1:9)(1:11))|12|(1:16)|1|(1:(1:20)))(1:18)) ELSE: R(0)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0012|if (r5.consume(':') == false) goto L_0x0061\l}"];
subgraph cluster_Region_1080352142 {
label = "R(2:3|(6:5|(2:7|(1:9)(1:11))|12|(1:16)|1|(1:(1:20)))(1:18))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0014|r5.skipWhitespace()\ljava.lang.String java.lang.String r2 = r5.nextPropertyValue()\l}"];
subgraph cluster_IfRegion_903029245 {
label = "IF [B:4:0x001b] THEN: R(6:5|(2:7|(1:9)(1:11))|12|(1:16)|1|(1:(1:20))) ELSE: R(1:18)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001b|if (r2 != null) goto L_0x001d\l}"];
subgraph cluster_Region_1446276825 {
label = "R(6:5|(2:7|(1:9)(1:11))|12|(1:16)|1|(1:(1:20)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001d|r5.skipWhitespace()\l}"];
subgraph cluster_IfRegion_1821854254 {
label = "IF [B:6:0x0026] THEN: R(2:7|(1:9)(1:11)) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0026|if (r5.consume('!') == true) goto L_0x0028\l}"];
subgraph cluster_Region_630865784 {
label = "R(2:7|(1:9)(1:11))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0028|r5.skipWhitespace()\l}"];
subgraph cluster_IfRegion_1390528806 {
label = "IF [B:8:0x0031] THEN: R(1:9) ELSE: R(1:11)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0031|if (r5.consume(\"important\") == true) goto L_0x0033\l}"];
subgraph cluster_Region_673326687 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0033|r5.skipWhitespace()\l}"];
}
subgraph cluster_Region_2117259087 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x003e|throw new com.caverock.androidsvg.CSSParseException(\"Malformed rule set: found unexpected '!'\")\l}"];
}
}
}
}
Node_12 [shape=record,label="{12\:\ 0x003f|r5.consume(';')\lcom.caverock.androidsvg.SVGParser.processStyleProperty(r0, r1, r2)\lr5.skipWhitespace()\l}"];
subgraph cluster_IfRegion_178740750 {
label = "IF [B:13:0x004e, B:15:0x0056] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x004e|ADDED_TO_REGION\l|if (r5.empty() == true) goto L_0x0058\l}"];
Node_15 [shape=record,label="{15\:\ 0x0056|LOOP_END\lLOOP:0: B:1:0x0005\-\>B:15:0x0056\l|if (r5.consume('\}') == true) goto L_0x0058\l}"];
subgraph cluster_Region_1228437846 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0058|RETURN\lEDGE_INSN: B:21:0x0058\-\>B:16:0x0058 ?: BREAK  \l|return r0\l}"];
}
}
Node_1 [shape=record,label="{1\:\ 0x0005|LOOP_START\lLOOP:0: B:1:0x0005\-\>B:15:0x0056\l|java.lang.String java.lang.String r1 = r5.nextIdentifier()\lr5.skipWhitespace()\l}"];
subgraph cluster_Region_1448287877 {
label = "R(1:(1:20))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1878706894 {
label = "IF [B:2:0x0012] THEN: R(1:20) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0012|if (r5.consume(':') == false) goto L_0x0061\l}"];
subgraph cluster_Region_123353289 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0068|throw new com.caverock.androidsvg.CSSParseException(\"Expected ':'\")\l}"];
}
}
}
}
subgraph cluster_Region_935153922 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0060|throw new com.caverock.androidsvg.CSSParseException(\"Expected property value\")\l}"];
}
}
}
subgraph cluster_Region_2035598918 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_16 [shape=record,label="{16\:\ 0x0058|RETURN\lEDGE_INSN: B:21:0x0058\-\>B:16:0x0058 ?: BREAK  \l|return r0\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ 0x0037}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0050}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0059}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0061}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0058|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:21:0x0058\-\>B:16:0x0058 ?: BREAK  \l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0037|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0061|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0058|SYNTHETIC\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0059|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private com.caverock.androidsvg.SVG$Style com.caverock.androidsvg.CSSParser.parseDeclarations((r4v0 'this' com.caverock.androidsvg.CSSParser A[IMMUTABLE_TYPE, THIS]), (r5v0 com.caverock.androidsvg.CSSParser$CSSTextScanner A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lRemoved duplicated region for block: B:3:0x0014 \lRemoved duplicated region for block: B:23:0x0061 A[SYNTHETIC]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.CSSParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_15 -> Node_1[style=dashed];
Node_15 -> Node_24;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_23;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_25[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_12[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_22[style=dashed];
Node_9 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_21;
Node_15 -> Node_1[style=dashed];
Node_15 -> Node_24;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_23;
Node_10 -> Node_11;
Node_14 -> Node_15;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_21 -> Node_16;
Node_22 -> Node_10;
Node_23 -> Node_19;
Node_24 -> Node_16;
Node_25 -> Node_17;
}

