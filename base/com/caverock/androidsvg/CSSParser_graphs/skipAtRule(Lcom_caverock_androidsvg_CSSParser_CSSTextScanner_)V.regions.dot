digraph "CFG forcom.caverock.androidsvg.CSSParser.skipAtRule(Lcom\/caverock\/androidsvg\/CSSParser$CSSTextScanner;)V" {
subgraph cluster_Region_204038950 {
label = "R(2:0|(2:3|(1:(1:9)(1:(1:15)))(1:6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = 0\l}"];
subgraph cluster_LoopRegion_2111960852 {
label = "LOOP:0: (2:3|(1:(1:9)(1:(1:15)))(1:6))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r4.empty() == false) goto L_0x0007\l}"];
subgraph cluster_Region_220138431 {
label = "R(2:3|(1:(1:9)(1:(1:15)))(1:6))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|int int r1 = r4.nextChar().intValue()\l}"];
subgraph cluster_IfRegion_1920892291 {
label = "IF [B:4:0x0011, B:5:0x0013] THEN: R(1:(1:9)(1:(1:15))) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|if (r1 != 59) goto L_0x0016\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|ADDED_TO_REGION\l|if (r0 != 0) goto L_0x0016\l}"];
subgraph cluster_Region_691472746 {
label = "R(1:(1:9)(1:(1:15)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_650829175 {
label = "IF [B:8:0x0018] THEN: R(1:9) ELSE: R(1:(1:15))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0018|if (r1 == 123) goto L_0x001a\l}"];
subgraph cluster_Region_246720850 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001a|r0++\l}"];
}
subgraph cluster_Region_1580192220 {
label = "R(1:(1:15)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1248358791 {
label = "IF [B:11:0x001f, B:12:0x0021, B:14:0x0025] THEN: R(1:15) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001f|ADDED_TO_REGION\l|if (r1 == 125) goto L_0x0021\l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|ADDED_TO_REGION\l|if (r0 \> 0) goto L_0x0023\l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|ADDED_TO_REGION\l|if ((r0 \- 1) == 0) goto L_0x0027\l}"];
subgraph cluster_Region_226878010 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0027|RETURN\l|return\l}"];
}
}
}
}
}
subgraph cluster_Region_2133781961 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|RETURN\l|return\l}"];
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:17:0x0001] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:17:0x0001\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0016}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001d}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0023}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0028}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0001|LOOP_END\lSYNTHETIC\lPHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v1 int), (r0v4 int) binds: [B:22:0x0001, B:23:0x0001, B:21:0x0001] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:17:0x0001\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0028|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0027|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0015|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0001|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0001|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0001|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0001|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.CSSParser.skipAtRule((r3v0 'this' com.caverock.androidsvg.CSSParser A[IMMUTABLE_TYPE, THIS]), (r4v0 com.caverock.androidsvg.CSSParser$CSSTextScanner A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_18[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_7;
Node_5 -> Node_20[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_21;
Node_11 -> Node_12;
Node_11 -> Node_22[style=dashed];
Node_12 -> Node_13;
Node_12 -> Node_23[style=dashed];
Node_14 -> Node_19;
Node_14 -> Node_24[style=dashed];
Node_1 -> Node_2;
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_17 -> Node_1;
Node_18 -> Node_16;
Node_19 -> Node_15;
Node_20 -> Node_6;
Node_21 -> Node_17;
Node_22 -> Node_17;
Node_23 -> Node_17;
Node_24 -> Node_17;
}

