digraph "CFG forcom.caverock.androidsvg.CSSParser.getChildPosition(Ljava\/util\/List;ILcom\/caverock\/androidsvg\/SVG$SvgElementBase;)I" {
subgraph cluster_Region_855989038 {
label = "R(2:0|(2:(1:2)|(1:(2:(1:5)|(3:6|(1:(2:(1:11)|(1:12)))|13)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = 0\l}"];
subgraph cluster_Region_271682445 {
label = "R(2:(1:2)|(1:(2:(1:5)|(3:6|(1:(2:(1:11)|(1:12)))|13))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1406536531 {
label = "IF [B:1:0x0001] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r3 \< 0) goto L_0x0003\l}"];
subgraph cluster_Region_988033982 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_613083621 {
label = "R(1:(2:(1:5)|(3:6|(1:(2:(1:11)|(1:12)))|13)))";
node [shape=record,color=blue];
subgraph cluster_Region_947614490 {
label = "R(2:(1:5)|(3:6|(1:(2:(1:11)|(1:12)))|13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1536453589 {
label = "IF [B:4:0x000b] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r2.get(r3) != r4.parent) goto L_0x000d\l}"];
subgraph cluster_Region_1081531098 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000d|RETURN\l|return \-1\l}"];
}
}
subgraph cluster_Region_859883248 {
label = "R(3:6|(1:(2:(1:11)|(1:12)))|13)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000e|java.util.Iterator r2 = r4.parent.getChildren().iterator()\l}"];
subgraph cluster_LoopRegion_1346404385 {
label = "LOOP:0: (1:(2:(1:11)|(1:12)))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001c|if (r2.hasNext() != false) goto L_0x001e\l}"];
subgraph cluster_Region_678597439 {
label = "R(1:(2:(1:11)|(1:12)))";
node [shape=record,color=blue];
subgraph cluster_Region_1587821793 {
label = "R(2:(1:11)|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1810237059 {
label = "IF [B:10:0x0024] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0024|if (r3 == r4) goto L_0x0026\l}"];
subgraph cluster_Region_1748273178 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0026|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_1377161185 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0027|LOOP_END\lLOOP:0: B:7:0x0018\-\>B:12:0x0027\l|r0++\l}"];
}
}
}
}
Node_13 [shape=record,label="{13\:\ 0x002a|RETURN\l|return \-1\l}"];
}
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0004}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0018|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:6:0x000e, B:12:0x0027] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x0018\-\>B:12:0x0027\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001e}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0026|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x002a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static int com.caverock.androidsvg.CSSParser.getChildPosition((r2v0 java.util.List\<com.caverock.androidsvg.SVG$SvgContainer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 com.caverock.androidsvg.SVG$SvgElementBase A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lcom\/caverock\/androidsvg\/SVG$SvgContainer;, \>;I, Lcom\/caverock\/androidsvg\/SVG$SvgElementBase;, )I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_15[style=dashed];
Node_10 -> Node_12[style=dashed];
Node_10 -> Node_14;
Node_12 -> Node_7;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_14 -> Node_11;
Node_15 -> Node_13;
}

