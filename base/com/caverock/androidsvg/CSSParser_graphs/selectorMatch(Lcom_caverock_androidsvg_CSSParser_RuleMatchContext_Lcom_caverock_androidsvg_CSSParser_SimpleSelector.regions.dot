digraph "CFG forcom.caverock.androidsvg.CSSParser.selectorMatch(Lcom\/caverock\/androidsvg\/CSSParser$RuleMatchContext;Lcom\/caverock\/androidsvg\/CSSParser$SimpleSelector;Ljava\/util\/List;ILcom\/caverock\/androidsvg\/SVG$SvgElementBase;)Z" {
subgraph cluster_Region_1335632126 {
label = "R(1:(2:(1:4)|(3:(2:7|(3:10|(1:(1:16))(1:(1:19))|20))|(2:33|(1:(1:38)))|39)))";
node [shape=record,color=blue];
subgraph cluster_Region_1035371666 {
label = "R(2:(1:4)|(3:(2:7|(3:10|(1:(1:16))(1:(1:19))|20))|(2:33|(1:(1:38)))|39))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1644568172 {
label = "IF [B:1:0x0003, B:3:0x0015] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r7.tag != null) goto L_0x0005\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|ADDED_TO_REGION\l|if (r7.tag.equals(r10.getNodeName().toLowerCase(java.util.Locale.US)) != true) goto L_0x0017\l}"];
subgraph cluster_Region_455028607 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0017|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_891971378 {
label = "R(3:(2:7|(3:10|(1:(1:16))(1:(1:19))|20))|(2:33|(1:(1:38)))|39)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1018296081 {
label = "IF [B:6:0x001b] THEN: R(2:7|(3:10|(1:(1:16))(1:(1:19))|20)) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001b|if (r7.attribs != null) goto L_0x001d\l}"];
subgraph cluster_Region_1855351701 {
label = "R(2:7|(3:10|(1:(1:16))(1:(1:19))|20))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001d|java.util.Iterator r8 = r7.attribs.iterator()\l}"];
subgraph cluster_LoopRegion_202429935 {
label = "LOOP:0: (3:10|(1:(1:16))(1:(1:19))|20)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0027|if (r8.hasNext() != false) goto L_0x0029\l}"];
subgraph cluster_Region_1159941892 {
label = "R(3:10|(1:(1:16))(1:(1:19))|20)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0029|com.caverock.androidsvg.CSSParser$Attrib r1 = r8.next()\ljava.lang.String java.lang.String r2 = r1.name\lchar r3 = 65535\lint int r4 = r2.hashCode()\l}"];
subgraph cluster_IfRegion_1823906113 {
label = "IF [B:11:0x0038] THEN: R(1:(1:16)) ELSE: R(1:(1:19))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0038|if (r4 != 3355) goto L_0x003a\l}"];
subgraph cluster_Region_1793401000 {
label = "R(1:(1:16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_311736357 {
label = "IF [B:13:0x003d, B:15:0x0046] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x003d|ADDED_TO_REGION\l|if (r4 == 94742904) goto L_0x0040\l}"];
Node_15 [shape=record,label="{15\:\ 0x0046|ADDED_TO_REGION\l|if (r2.equals(CLASS) == true) goto L_0x0048\l}"];
subgraph cluster_Region_501173627 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0048|r3 = 1\l}"];
}
}
}
subgraph cluster_Region_1507810202 {
label = "R(1:(1:19)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_584880697 {
label = "IF [B:18:0x0050] THEN: R(1:19) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0050|if (r2.equals(\"id\") == true) goto L_0x0052\l}"];
subgraph cluster_Region_1113289051 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0052|r3 = 0\l}"];
}
}
}
}
subgraph cluster_SwitchRegion_717069173 {
label = "Switch: 2, default: R(1:21)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0053|PHI: r3 \l  PHI: (r3v1 char) = (r3v0 char), (r3v2 char), (r3v0 char), (r3v0 char), (r3v3 char) binds: [B:18:0x0050, B:19:0x0052, B:13:0x003d, B:15:0x0046, B:16:0x0048] A[DONT_GENERATE, DONT_INLINE]\l|switch(r3) \{\l    case 0: goto L_0x0067;\l    case 1: goto L_0x0057;\l    default: goto L_0x0056;\l\}\l}"];
subgraph cluster_Region_80239095 {
label = "R(1:(1:1)(1:30))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_243096364 {
label = "IF [B:29:0x006f] THEN: R(1:1) ELSE: R(1:30)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x006f|if (r1.value.equals(r10.f112id) != false) goto L_0x0023\l}"];
subgraph cluster_Region_1306446379 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_1853774721 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_683651160 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0071|RETURN\l|return false\l}"];
}
}
}
subgraph cluster_Region_1283406424 {
label = "R(1:(1:1)(1:27))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2009808494 {
label = "IF [B:23:0x0059, B:26:0x0064] THEN: R(1:1) ELSE: R(1:27)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0059|if (r10.classNames != null) goto L_0x005c\l}"];
Node_26 [shape=record,label="{26\:\ 0x0064|ADDED_TO_REGION\l|if (r10.classNames.contains(r1.value) == true) goto L_0x0023\l}"];
subgraph cluster_Region_1811272005 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_1050513683 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_184926562 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0066|RETURN\l|return false\l}"];
}
}
}
subgraph cluster_Region_630437410 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0056|RETURN\l|return false\l}"];
}
}
}
}
}
}
subgraph cluster_IfRegion_1613308972 {
label = "IF [B:32:0x0074] THEN: R(2:33|(1:(1:38))) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0074|if (r7.pseudos != null) goto L_0x0076\l}"];
subgraph cluster_Region_854471731 {
label = "R(2:33|(1:(1:38)))";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0076|java.util.Iterator r7 = r7.pseudos.iterator()\l}"];
subgraph cluster_LoopRegion_398851549 {
label = "LOOP:1: (1:(1:38))";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0080|if (r7.hasNext() != false) goto L_0x0082\l}"];
subgraph cluster_Region_803171233 {
label = "R(1:(1:38))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_117322290 {
label = "IF [B:37:0x008c] THEN: R(1:38) ELSE: null";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x008c|LOOP_END\lLOOP:1: B:34:0x007c\-\>B:37:0x008c\l|if (r8.matches(r6, r10) == false) goto L_0x008e\l}"];
subgraph cluster_Region_1165148530 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x008e|RETURN\l|return false\l}"];
}
}
}
}
}
}
Node_39 [shape=record,label="{39\:\ 0x008f|RETURN\l|return true\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0005}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0018}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0023|LOOP_START\lLOOP:0: B:8:0x0023\-\>B:40:0x0023\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x003a}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0040}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x004a}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0057}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x005b|RETURN\lADDED_TO_REGION\l|return false\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x005c}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0067}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0072}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x007c|LOOP_START\lLOOP:1: B:34:0x007c\-\>B:37:0x008c\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0082}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0023|LOOP_END\lSYNTHETIC\lLOOP:0: B:8:0x0023\-\>B:40:0x0023\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0066|SYNTHETIC\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0072|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0071|SYNTHETIC\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0056|SYNTHETIC\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x005b|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x0023|SYNTHETIC\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0023|SYNTHETIC\l}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x008f|SYNTHETIC\l}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x008e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static boolean com.caverock.androidsvg.CSSParser.selectorMatch((r6v0 com.caverock.androidsvg.CSSParser$RuleMatchContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 com.caverock.androidsvg.CSSParser$SimpleSelector A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.util.List\<com.caverock.androidsvg.SVG$SvgContainer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 com.caverock.androidsvg.SVG$SvgElementBase A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/caverock\/androidsvg\/CSSParser$RuleMatchContext;, Lcom\/caverock\/androidsvg\/CSSParser$SimpleSelector;, Ljava\/util\/List\<, Lcom\/caverock\/androidsvg\/SVG$SvgContainer;, \>;I, Lcom\/caverock\/androidsvg\/SVG$SvgElementBase;, )Z]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_31[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_42[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_17[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_20[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_20[style=dashed];
Node_16 -> Node_20;
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_28;
Node_20 -> Node_44;
Node_29 -> Node_43[style=dashed];
Node_29 -> Node_47;
Node_23 -> Node_25;
Node_23 -> Node_45[style=dashed];
Node_26 -> Node_41[style=dashed];
Node_26 -> Node_46;
Node_32 -> Node_33;
Node_32 -> Node_39[style=dashed];
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_35 -> Node_48[style=dashed];
Node_37 -> Node_34[style=dashed];
Node_37 -> Node_49;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_17 -> Node_18;
Node_22 -> Node_23;
Node_25 -> Node_26;
Node_28 -> Node_29;
Node_31 -> Node_32;
Node_34 -> Node_35;
Node_36 -> Node_37;
Node_40 -> Node_8;
Node_41 -> Node_27;
Node_42 -> Node_31;
Node_43 -> Node_30;
Node_44 -> Node_21;
Node_45 -> Node_24;
Node_46 -> Node_40;
Node_47 -> Node_40;
Node_48 -> Node_39;
Node_49 -> Node_38;
}

