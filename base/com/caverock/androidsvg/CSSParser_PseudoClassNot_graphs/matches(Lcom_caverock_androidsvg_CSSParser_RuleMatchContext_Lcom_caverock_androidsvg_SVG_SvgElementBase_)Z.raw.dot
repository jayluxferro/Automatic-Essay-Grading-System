digraph "CFG forcom.caverock.androidsvg.CSSParser.PseudoClassNot.matches(Lcom\/caverock\/androidsvg\/CSSParser$RuleMatchContext;Lcom\/caverock\/androidsvg\/SVG$SvgElementBase;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<com.caverock.androidsvg.CSSParser$Selector\>) = (r2 I:com.caverock.androidsvg.CSSParser$PseudoClassNot) com.caverock.androidsvg.CSSParser.PseudoClassNot.selectorGroup java.util.List \l0x0002: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001a \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0010: CHECK_CAST  (r1 I:com.caverock.androidsvg.CSSParser$Selector) = (com.caverock.androidsvg.CSSParser$Selector) (r1 I:?[OBJECT, ARRAY]) \l0x0012: INVOKE  (r1 I:boolean) = \l  (r3 I:com.caverock.androidsvg.CSSParser$RuleMatchContext)\l  (r1 I:com.caverock.androidsvg.CSSParser$Selector)\l  (r4 I:com.caverock.androidsvg.SVG$SvgElementBase)\l com.caverock.androidsvg.CSSParser.ruleMatch(com.caverock.androidsvg.CSSParser$RuleMatchContext, com.caverock.androidsvg.CSSParser$Selector, com.caverock.androidsvg.SVG$SvgElementBase):boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0006 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: RETURN  (r3 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: RETURN  (r3 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.caverock.androidsvg.CSSParser.PseudoClassNot.matches((r2 'this' I:com.caverock.androidsvg.CSSParser$PseudoClassNot A[IMMUTABLE_TYPE, THIS]), (r3 I:com.caverock.androidsvg.CSSParser$RuleMatchContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.caverock.androidsvg.SVG$SvgElementBase A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
}

