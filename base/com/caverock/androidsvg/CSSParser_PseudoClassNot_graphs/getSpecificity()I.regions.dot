digraph "CFG forcom.caverock.androidsvg.CSSParser.PseudoClassNot.getSpecificity()I" {
subgraph cluster_Region_88188159 {
label = "R(3:0|(2:3|(1:5)(0))|6)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r0 = r4.selectorGroup.iterator()\lint r1 = Integer.MIN_VALUE\l}"];
subgraph cluster_LoopRegion_1911374122 {
label = "LOOP:0: (2:3|(1:5)(0))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000c|if (r0.hasNext() != false) goto L_0x000e\l}"];
subgraph cluster_Region_1812422154 {
label = "R(2:3|(1:5)(0))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000e|com.caverock.androidsvg.CSSParser$Selector r2 = r0.next()\l}"];
subgraph cluster_IfRegion_2078067726 {
label = "IF [B:4:0x0016] THEN: R(1:5) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0016|if (r2.specificity \> r1) goto L_0x0018\l}"];
subgraph cluster_Region_1478217855 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0018|int r1 = r2.specificity\l}"];
}
subgraph cluster_Region_1580495762 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_6 [shape=record,label="{6\:\ 0x001b|RETURN\l|return r1\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0008|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:7:0x0008] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0008\-\>B:7:0x0008\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0008|LOOP_END\lSYNTHETIC\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v3 int) binds: [B:9:0x0008, B:10:0x0008] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0008\-\>B:7:0x0008\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001b|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0008|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0008|SYNTHETIC\l}"];
MethodNode[shape=record,label="{int com.caverock.androidsvg.CSSParser.PseudoClassNot.getSpecificity((r4v0 'this' com.caverock.androidsvg.CSSParser$PseudoClassNot A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_8[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_10;
Node_1 -> Node_2;
Node_7 -> Node_1;
Node_8 -> Node_6;
Node_9 -> Node_7;
Node_10 -> Node_7;
}

