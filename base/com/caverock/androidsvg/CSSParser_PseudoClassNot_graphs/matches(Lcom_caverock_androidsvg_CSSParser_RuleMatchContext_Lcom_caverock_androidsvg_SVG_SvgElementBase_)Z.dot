digraph "CFG forcom.caverock.androidsvg.CSSParser.PseudoClassNot.matches(Lcom\/caverock\/androidsvg\/CSSParser$RuleMatchContext;Lcom\/caverock\/androidsvg\/SVG$SvgElementBase;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r0 = r2.selectorGroup.iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lLOOP:0: B:1:0x0006\-\>B:4:0x0016\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|if (r0.hasNext() == false) goto L_0x001a\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c}"];
Node_4 [shape=record,label="{4\:\ 0x0016|LOOP_END\lLOOP:0: B:1:0x0006\-\>B:4:0x0016\l|if (com.caverock.androidsvg.CSSParser.ruleMatch(r3, r0.next(), r4) == false) goto L_0x0006\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|RETURN\l|return false\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|RETURN\l|return true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean com.caverock.androidsvg.CSSParser.PseudoClassNot.matches((r2v0 'this' com.caverock.androidsvg.CSSParser$PseudoClassNot A[IMMUTABLE_TYPE, THIS]), (r3v0 com.caverock.androidsvg.CSSParser$RuleMatchContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 com.caverock.androidsvg.SVG$SvgElementBase A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_7[style=dashed];
Node_7 -> Node_5;
Node_8 -> Node_6;
}

