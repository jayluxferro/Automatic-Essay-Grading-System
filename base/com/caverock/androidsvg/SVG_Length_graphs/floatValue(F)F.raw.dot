digraph "CFG forcom.caverock.androidsvg.SVG.Length.floatValue(F)F" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int[]) =  com.caverock.androidsvg.SVG.1.$SwitchMap$com$caverock$androidsvg$SVG$Unit int[] \l0x0002: IGET  (r1 I:com.caverock.androidsvg.SVG$Unit) = (r2 I:com.caverock.androidsvg.SVG$Length) com.caverock.androidsvg.SVG.Length.unit com.caverock.androidsvg.SVG$Unit \l0x0004: INVOKE  (r1 I:int) = (r1 I:com.caverock.androidsvg.SVG$Unit) com.caverock.androidsvg.SVG.Unit.ordinal():int type: VIRTUAL \l0x0008: AGET  (r0 I:?[int, float]) = (r0 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x000a: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x003a \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[4, 5, 6, 7, 8] t:[0x0035, 0x002c, 0x0023, 0x001b, 0x0013] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IGET  (r3 I:float) = (r2 I:com.caverock.androidsvg.SVG$Length) com.caverock.androidsvg.SVG.Length.value float \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: RETURN  (r3 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IGET  (r0 I:float) = (r2 I:com.caverock.androidsvg.SVG$Length) com.caverock.androidsvg.SVG.Length.value float \l0x0015: ARITH  (r0 I:float) = (r0 I:float) * (r3 I:float) \l0x0017: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1086324736(0x40c00000, float:6.0) ?[int, float, short, byte, char])\l \l0x0019: ARITH  (r0 I:float) = (r0 I:float) \/ (r3 I:float) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: RETURN  (r0 I:float) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: IGET  (r0 I:float) = (r2 I:com.caverock.androidsvg.SVG$Length) com.caverock.androidsvg.SVG.Length.value float \l0x001d: ARITH  (r0 I:float) = (r0 I:float) * (r3 I:float) \l0x001f: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1116733440(0x42900000, float:72.0) ?[int, float, short, byte, char])\l \l0x0021: ARITH  (r0 I:float) = (r0 I:float) \/ (r3 I:float) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: RETURN  (r0 I:float) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: IGET  (r0 I:float) = (r2 I:com.caverock.androidsvg.SVG$Length) com.caverock.androidsvg.SVG.Length.value float \l0x0025: ARITH  (r0 I:float) = (r0 I:float) * (r3 I:float) \l0x0027: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1103835955(0x41cb3333, float:25.4) ?[int, float, short, byte, char])\l \l0x002a: ARITH  (r0 I:float) = (r0 I:float) \/ (r3 I:float) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: RETURN  (r0 I:float) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: IGET  (r0 I:float) = (r2 I:com.caverock.androidsvg.SVG$Length) com.caverock.androidsvg.SVG.Length.value float \l0x002e: ARITH  (r0 I:float) = (r0 I:float) * (r3 I:float) \l0x0030: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1076006748(0x40228f5c, float:2.54) ?[int, float, short, byte, char])\l \l0x0033: ARITH  (r0 I:float) = (r0 I:float) \/ (r3 I:float) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: RETURN  (r0 I:float) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|0x0035: IGET  (r0 I:float) = (r2 I:com.caverock.androidsvg.SVG$Length) com.caverock.androidsvg.SVG.Length.value float \l0x0037: ARITH  (r0 I:float) = (r0 I:float) * (r3 I:float) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|0x0039: RETURN  (r0 I:float) \l}"];
Node_15 [shape=record,label="{15\:\ 0x003a|0x003a: IGET  (r3 I:float) = (r2 I:com.caverock.androidsvg.SVG$Length) com.caverock.androidsvg.SVG.Length.value float \l}"];
Node_16 [shape=record,label="{16\:\ 0x003c|0x003c: RETURN  (r3 I:float) \l}"];
MethodNode[shape=record,label="{float com.caverock.androidsvg.SVG.Length.floatValue((r2 'this' I:com.caverock.androidsvg.SVG$Length A[IMMUTABLE_TYPE, THIS]), (r3 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_2 -> Node_7;
Node_2 -> Node_9;
Node_2 -> Node_11;
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
}

