digraph "CFG forcom.caverock.androidsvg.SVG.setDocumentHeight(F)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.caverock.androidsvg.SVG$Svg) = (r2 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.rootElement com.caverock.androidsvg.SVG$Svg \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:com.caverock.androidsvg.SVG$Svg) = (r2 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.rootElement com.caverock.androidsvg.SVG$Svg \l0x0006: NEW_INSTANCE  (r1 I:com.caverock.androidsvg.SVG$Length) =  com.caverock.androidsvg.SVG$Length \l0x0008: INVOKE  (r1 I:com.caverock.androidsvg.SVG$Length), (r3 I:float) com.caverock.androidsvg.SVG.Length.\<init\>(float):void type: DIRECT \l0x000b: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVG$Svg)\l com.caverock.androidsvg.SVG.Svg.height com.caverock.androidsvg.SVG$Length \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0010: CONST_STR  (r0 I:java.lang.String) =  \"SVG document is empty\" \l0x0012: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.caverock.androidsvg.SVG.setDocumentHeight((r2 'this' I:com.caverock.androidsvg.SVG A[IMMUTABLE_TYPE, THIS]), (r3 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

