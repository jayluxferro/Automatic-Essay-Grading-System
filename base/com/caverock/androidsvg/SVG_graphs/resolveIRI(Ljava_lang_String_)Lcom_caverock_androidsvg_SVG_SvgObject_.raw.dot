digraph "CFG forcom.caverock.androidsvg.SVG.resolveIRI(Ljava\/lang\/String;)Lcom\/caverock\/androidsvg\/SVG$SvgObject;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:com.caverock.androidsvg.SVG$SvgObject) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INVOKE  (r4 I:java.lang.String) = (r3 I:com.caverock.androidsvg.SVG), (r4 I:java.lang.String) com.caverock.androidsvg.SVG.cssQuotedString(java.lang.String):java.lang.String type: DIRECT \l0x0008: INVOKE  (r1 I:int) = (r4 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x000c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r1 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:9:0x0020 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: CONST_STR  (r1 I:java.lang.String) =  \"#\" \l0x0011: INVOKE  (r1 I:boolean) = (r4 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0020 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String), (r2 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL \l0x001b: INVOKE  (r4 I:com.caverock.androidsvg.SVG$SvgElementBase) = (r3 I:com.caverock.androidsvg.SVG), (r4 I:java.lang.String) com.caverock.androidsvg.SVG.getElementById(java.lang.String):com.caverock.androidsvg.SVG$SvgElementBase type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: RETURN  (r4 I:com.caverock.androidsvg.SVG$SvgObject) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: RETURN  (r0 I:com.caverock.androidsvg.SVG$SvgObject) \l}"];
MethodNode[shape=record,label="{com.caverock.androidsvg.SVG$SvgObject com.caverock.androidsvg.SVG.resolveIRI((r3 'this' I:com.caverock.androidsvg.SVG A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
}

