digraph "CFG forcom.caverock.androidsvg.SVG.getFromResource(Landroid\/content\/res\/Resources;I)Lcom\/caverock\/androidsvg\/SVG;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.caverock.androidsvg.SVGParser) =  com.caverock.androidsvg.SVGParser \l0x0002: INVOKE  (r0 I:com.caverock.androidsvg.SVGParser) com.caverock.androidsvg.SVGParser.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r1 I:java.io.InputStream) = (r1 I:android.content.res.Resources), (r2 I:int) android.content.res.Resources.openRawResource(int):java.io.InputStream type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|SYNTHETIC\lSplitter:B:1:0x0009\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0009\l|0x0009: SGET  (r2 I:boolean) =  com.caverock.androidsvg.SVG.enableInternalEntities boolean A[Catch:\{ all \-\> 0x0013 \}, TRY_ENTER]\l0x000b: INVOKE  (r2 I:com.caverock.androidsvg.SVG) = \l  (r0 I:com.caverock.androidsvg.SVGParser)\l  (r1 I:java.io.InputStream)\l  (r2 I:boolean)\l com.caverock.androidsvg.SVGParser.parse(java.io.InputStream, boolean):com.caverock.androidsvg.SVG type: VIRTUAL A[Catch:\{ all \-\> 0x0013 \}]\l0x000e: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|SYNTHETIC\lSplitter:B:3:0x000f\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x000f\l|0x000f: INVOKE  (r1 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0012 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: RETURN  (r2 I:com.caverock.androidsvg.SVG) \l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:3:0x000f\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|ExcHandler: all null\lSplitter:B:1:0x0009\l|0x0013: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|SYNTHETIC\lSplitter:B:8:0x0014\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0014\l|0x0014: INVOKE  (r1 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0017 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|0x0017: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:8:0x0014\l}"];
MethodNode[shape=record,label="{public static com.caverock.androidsvg.SVG com.caverock.androidsvg.SVG.getFromResource((r1 I:android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_5;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_11 -> Node_10;
}

