digraph "CFG forcom.caverock.androidsvg.SVG.renderToPicture(Lcom\/caverock\/androidsvg\/RenderOptions;)Landroid\/graphics\/Picture;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:boolean) = (r5 I:com.caverock.androidsvg.RenderOptions) com.caverock.androidsvg.RenderOptions.hasViewBox():boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:com.caverock.androidsvg.SVG$Box) = (r5 I:com.caverock.androidsvg.RenderOptions) com.caverock.androidsvg.RenderOptions.viewBox com.caverock.androidsvg.SVG$Box \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IGET  (r0 I:com.caverock.androidsvg.SVG$Svg) = (r4 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.rootElement com.caverock.androidsvg.SVG$Svg \l0x000d: IGET  (r0 I:com.caverock.androidsvg.SVG$Box) = (r0 I:com.caverock.androidsvg.SVG$Svg) com.caverock.androidsvg.SVG.Svg.viewBox com.caverock.androidsvg.SVG$Box \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0034 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: INVOKE  (r1 I:boolean) = (r5 I:com.caverock.androidsvg.RenderOptions) com.caverock.androidsvg.RenderOptions.hasViewPort():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0034 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: IGET  (r0 I:com.caverock.androidsvg.SVG$Box) = (r5 I:com.caverock.androidsvg.RenderOptions) com.caverock.androidsvg.RenderOptions.viewPort com.caverock.androidsvg.SVG$Box \l0x0019: INVOKE  (r0 I:float) = (r0 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.maxX():float type: VIRTUAL \l0x001d: IGET  (r1 I:com.caverock.androidsvg.SVG$Box) = (r5 I:com.caverock.androidsvg.RenderOptions) com.caverock.androidsvg.RenderOptions.viewPort com.caverock.androidsvg.SVG$Box \l0x001f: INVOKE  (r1 I:float) = (r1 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.maxY():float type: VIRTUAL \l0x0023: CAST  (r2 I:double) = (double) (r0 I:float) \l0x0024: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x0028: CAST  (r0 I:int) = (int) (r2 I:double) \l0x0029: CAST  (r1 I:double) = (double) (r1 I:float) \l0x002a: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x002e: CAST  (r1 I:int) = (int) (r1 I:double) \l0x002f: INVOKE  (r5 I:android.graphics.Picture) = \l  (r4 I:com.caverock.androidsvg.SVG)\l  (r0 I:int)\l  (r1 I:int)\l  (r5 I:com.caverock.androidsvg.RenderOptions)\l com.caverock.androidsvg.SVG.renderToPicture(int, int, com.caverock.androidsvg.RenderOptions):android.graphics.Picture type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|0x0033: RETURN  (r5 I:android.graphics.Picture) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: IGET  (r1 I:com.caverock.androidsvg.SVG$Svg) = (r4 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.rootElement com.caverock.androidsvg.SVG$Svg \l0x0036: IGET  (r1 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Svg) com.caverock.androidsvg.SVG.Svg.width com.caverock.androidsvg.SVG$Length \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0079 \l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|0x003a: IGET  (r1 I:com.caverock.androidsvg.SVG$Svg) = (r4 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.rootElement com.caverock.androidsvg.SVG$Svg \l0x003c: IGET  (r1 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Svg) com.caverock.androidsvg.SVG.Svg.width com.caverock.androidsvg.SVG$Length \l0x003e: IGET  (r1 I:com.caverock.androidsvg.SVG$Unit) = (r1 I:com.caverock.androidsvg.SVG$Length) com.caverock.androidsvg.SVG.Length.unit com.caverock.androidsvg.SVG$Unit \l0x0040: SGET  (r2 I:com.caverock.androidsvg.SVG$Unit) =  com.caverock.androidsvg.SVG.Unit.percent com.caverock.androidsvg.SVG$Unit \l}"];
Node_13 [shape=record,label="{13\:\ 0x0042|0x0042: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0079 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0044|0x0044: IGET  (r1 I:com.caverock.androidsvg.SVG$Svg) = (r4 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.rootElement com.caverock.androidsvg.SVG$Svg \l0x0046: IGET  (r1 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Svg) com.caverock.androidsvg.SVG.Svg.height com.caverock.androidsvg.SVG$Length \l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|0x0048: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0079 \l}"];
Node_16 [shape=record,label="{16\:\ 0x004a|0x004a: IGET  (r1 I:com.caverock.androidsvg.SVG$Svg) = (r4 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.rootElement com.caverock.androidsvg.SVG$Svg \l0x004c: IGET  (r1 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Svg) com.caverock.androidsvg.SVG.Svg.height com.caverock.androidsvg.SVG$Length \l0x004e: IGET  (r1 I:com.caverock.androidsvg.SVG$Unit) = (r1 I:com.caverock.androidsvg.SVG$Length) com.caverock.androidsvg.SVG.Length.unit com.caverock.androidsvg.SVG$Unit \l0x0050: SGET  (r2 I:com.caverock.androidsvg.SVG$Unit) =  com.caverock.androidsvg.SVG.Unit.percent com.caverock.androidsvg.SVG$Unit \l}"];
Node_17 [shape=record,label="{17\:\ 0x0052|0x0052: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0079 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0054|0x0054: IGET  (r0 I:com.caverock.androidsvg.SVG$Svg) = (r4 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.rootElement com.caverock.androidsvg.SVG$Svg \l0x0056: IGET  (r0 I:com.caverock.androidsvg.SVG$Length) = (r0 I:com.caverock.androidsvg.SVG$Svg) com.caverock.androidsvg.SVG.Svg.width com.caverock.androidsvg.SVG$Length \l0x0058: IGET  (r1 I:float) = (r4 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.renderDPI float \l0x005a: INVOKE  (r0 I:float) = (r0 I:com.caverock.androidsvg.SVG$Length), (r1 I:float) com.caverock.androidsvg.SVG.Length.floatValue(float):float type: VIRTUAL \l0x005e: IGET  (r1 I:com.caverock.androidsvg.SVG$Svg) = (r4 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.rootElement com.caverock.androidsvg.SVG$Svg \l0x0060: IGET  (r1 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Svg) com.caverock.androidsvg.SVG.Svg.height com.caverock.androidsvg.SVG$Length \l0x0062: IGET  (r2 I:float) = (r4 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.renderDPI float \l0x0064: INVOKE  (r1 I:float) = (r1 I:com.caverock.androidsvg.SVG$Length), (r2 I:float) com.caverock.androidsvg.SVG.Length.floatValue(float):float type: VIRTUAL \l0x0068: CAST  (r2 I:double) = (double) (r0 I:float) \l0x0069: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x006d: CAST  (r0 I:int) = (int) (r2 I:double) \l0x006e: CAST  (r1 I:double) = (double) (r1 I:float) \l0x006f: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x0073: CAST  (r1 I:int) = (int) (r1 I:double) \l0x0074: INVOKE  (r5 I:android.graphics.Picture) = \l  (r4 I:com.caverock.androidsvg.SVG)\l  (r0 I:int)\l  (r1 I:int)\l  (r5 I:com.caverock.androidsvg.RenderOptions)\l com.caverock.androidsvg.SVG.renderToPicture(int, int, com.caverock.androidsvg.RenderOptions):android.graphics.Picture type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0078|0x0078: RETURN  (r5 I:android.graphics.Picture) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0079|0x0079: IGET  (r1 I:com.caverock.androidsvg.SVG$Svg) = (r4 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.rootElement com.caverock.androidsvg.SVG$Svg \l0x007b: IGET  (r1 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Svg) com.caverock.androidsvg.SVG.Svg.width com.caverock.androidsvg.SVG$Length \l}"];
Node_21 [shape=record,label="{21\:\ 0x007d|0x007d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x00a3 \l}"];
Node_22 [shape=record,label="{22\:\ 0x007f|0x007f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x00a3 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0081|0x0081: IGET  (r1 I:com.caverock.androidsvg.SVG$Svg) = (r4 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.rootElement com.caverock.androidsvg.SVG$Svg \l0x0083: IGET  (r1 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Svg) com.caverock.androidsvg.SVG.Svg.width com.caverock.androidsvg.SVG$Length \l0x0085: IGET  (r2 I:float) = (r4 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.renderDPI float \l0x0087: INVOKE  (r1 I:float) = (r1 I:com.caverock.androidsvg.SVG$Length), (r2 I:float) com.caverock.androidsvg.SVG.Length.floatValue(float):float type: VIRTUAL \l0x008b: IGET  (r2 I:float) = (r0 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.height float \l0x008d: ARITH  (r2 I:float) = (r2 I:float) * (r1 I:float) \l0x008f: IGET  (r0 I:float) = (r0 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.width float \l0x0091: ARITH  (r2 I:float) = (r2 I:float) \/ (r0 I:float) \l0x0092: CAST  (r0 I:double) = (double) (r1 I:float) \l0x0093: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x0097: CAST  (r0 I:int) = (int) (r0 I:double) \l0x0098: CAST  (r1 I:double) = (double) (r2 I:float) \l0x0099: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x009d: CAST  (r1 I:int) = (int) (r1 I:double) \l0x009e: INVOKE  (r5 I:android.graphics.Picture) = \l  (r4 I:com.caverock.androidsvg.SVG)\l  (r0 I:int)\l  (r1 I:int)\l  (r5 I:com.caverock.androidsvg.RenderOptions)\l com.caverock.androidsvg.SVG.renderToPicture(int, int, com.caverock.androidsvg.RenderOptions):android.graphics.Picture type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x00a2|0x00a2: RETURN  (r5 I:android.graphics.Picture) \l}"];
Node_25 [shape=record,label="{25\:\ 0x00a3|0x00a3: IGET  (r1 I:com.caverock.androidsvg.SVG$Svg) = (r4 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.rootElement com.caverock.androidsvg.SVG$Svg \l0x00a5: IGET  (r1 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Svg) com.caverock.androidsvg.SVG.Svg.height com.caverock.androidsvg.SVG$Length \l}"];
Node_26 [shape=record,label="{26\:\ 0x00a7|0x00a7: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x00cd \l}"];
Node_27 [shape=record,label="{27\:\ 0x00a9|0x00a9: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x00cd \l}"];
Node_28 [shape=record,label="{28\:\ 0x00ab|0x00ab: IGET  (r1 I:com.caverock.androidsvg.SVG$Svg) = (r4 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.rootElement com.caverock.androidsvg.SVG$Svg \l0x00ad: IGET  (r1 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Svg) com.caverock.androidsvg.SVG.Svg.height com.caverock.androidsvg.SVG$Length \l0x00af: IGET  (r2 I:float) = (r4 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.renderDPI float \l0x00b1: INVOKE  (r1 I:float) = (r1 I:com.caverock.androidsvg.SVG$Length), (r2 I:float) com.caverock.androidsvg.SVG.Length.floatValue(float):float type: VIRTUAL \l0x00b5: IGET  (r2 I:float) = (r0 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.width float \l0x00b7: ARITH  (r2 I:float) = (r2 I:float) * (r1 I:float) \l0x00b9: IGET  (r0 I:float) = (r0 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.height float \l0x00bb: ARITH  (r2 I:float) = (r2 I:float) \/ (r0 I:float) \l0x00bc: CAST  (r2 I:double) = (double) (r2 I:float) \l0x00bd: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x00c1: CAST  (r0 I:int) = (int) (r2 I:double) \l0x00c2: CAST  (r1 I:double) = (double) (r1 I:float) \l0x00c3: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x00c7: CAST  (r1 I:int) = (int) (r1 I:double) \l0x00c8: INVOKE  (r5 I:android.graphics.Picture) = \l  (r4 I:com.caverock.androidsvg.SVG)\l  (r0 I:int)\l  (r1 I:int)\l  (r5 I:com.caverock.androidsvg.RenderOptions)\l com.caverock.androidsvg.SVG.renderToPicture(int, int, com.caverock.androidsvg.RenderOptions):android.graphics.Picture type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x00cc|0x00cc: RETURN  (r5 I:android.graphics.Picture) \l}"];
Node_30 [shape=record,label="{30\:\ 0x00cd|0x00cd: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (512(0x200, float:7.175E\-43) ?[int, float, short, byte, char])\l \l0x00cf: INVOKE  (r5 I:android.graphics.Picture) = \l  (r4 I:com.caverock.androidsvg.SVG)\l  (r0 I:int)\l  (r0 I:int)\l  (r5 I:com.caverock.androidsvg.RenderOptions)\l com.caverock.androidsvg.SVG.renderToPicture(int, int, com.caverock.androidsvg.RenderOptions):android.graphics.Picture type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x00d3|0x00d3: RETURN  (r5 I:android.graphics.Picture) \l}"];
MethodNode[shape=record,label="{public android.graphics.Picture com.caverock.androidsvg.SVG.renderToPicture((r4 'this' I:com.caverock.androidsvg.SVG A[IMMUTABLE_TYPE, THIS]), (r5 I:com.caverock.androidsvg.RenderOptions A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_20;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_30;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_30 -> Node_31;
}

