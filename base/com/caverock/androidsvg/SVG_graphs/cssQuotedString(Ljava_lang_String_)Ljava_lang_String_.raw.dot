digraph "CFG forcom.caverock.androidsvg.SVG.cssQuotedString(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\"\" \l0x0002: INVOKE  (r0 I:boolean) = (r3 I:java.lang.String), (r0 I:java.lang.String) java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l0x0006: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0023 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CONST_STR  (r0 I:java.lang.String) =  \"\"\" \l0x000b: INVOKE  (r0 I:boolean) = (r3 I:java.lang.String), (r0 I:java.lang.String) java.lang.String.endsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0023 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: INVOKE  (r0 I:int) = (r3 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0015: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0016: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String), (r1 I:int), (r0 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x001a: CONST_STR  (r0 I:java.lang.String) =  \"\"\" \l0x001c: CONST_STR  (r1 I:java.lang.String) =  \"\"\" \l0x001e: INVOKE  (r3 I:java.lang.String) = \l  (r3 I:java.lang.String)\l  (r0 I:java.lang.CharSequence)\l  (r1 I:java.lang.CharSequence)\l java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence):java.lang.String type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: CONST_STR  (r0 I:java.lang.String) =  \"'\" \l0x0025: INVOKE  (r0 I:boolean) = (r3 I:java.lang.String), (r0 I:java.lang.String) java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|0x0029: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0044 \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: CONST_STR  (r0 I:java.lang.String) =  \"'\" \l0x002d: INVOKE  (r0 I:boolean) = (r3 I:java.lang.String), (r0 I:java.lang.String) java.lang.String.endsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0044 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|0x0033: INVOKE  (r0 I:int) = (r3 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0037: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0038: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String), (r1 I:int), (r0 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x003c: CONST_STR  (r0 I:java.lang.String) =  \"'\" \l0x003e: CONST_STR  (r1 I:java.lang.String) =  \"'\" \l0x0040: INVOKE  (r3 I:java.lang.String) = \l  (r3 I:java.lang.String)\l  (r0 I:java.lang.CharSequence)\l  (r1 I:java.lang.CharSequence)\l java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence):java.lang.String type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0044|0x0044: CONST_STR  (r0 I:java.lang.String) =  \"\l\" \l0x0046: CONST_STR  (r1 I:java.lang.String) =  \"\" \l0x0048: INVOKE  (r3 I:java.lang.String) = \l  (r3 I:java.lang.String)\l  (r0 I:java.lang.CharSequence)\l  (r1 I:java.lang.CharSequence)\l java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence):java.lang.String type: VIRTUAL \l0x004c: CONST_STR  (r0 I:java.lang.String) =  \"A\" \l0x004e: CONST_STR  (r1 I:java.lang.String) =  \"\l\" \l0x0050: INVOKE  (r3 I:java.lang.String) = \l  (r3 I:java.lang.String)\l  (r0 I:java.lang.CharSequence)\l  (r1 I:java.lang.CharSequence)\l java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence):java.lang.String type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0054|0x0054: RETURN  (r3 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{private java.lang.String com.caverock.androidsvg.SVG.cssQuotedString((r2 'this' I:com.caverock.androidsvg.SVG A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

