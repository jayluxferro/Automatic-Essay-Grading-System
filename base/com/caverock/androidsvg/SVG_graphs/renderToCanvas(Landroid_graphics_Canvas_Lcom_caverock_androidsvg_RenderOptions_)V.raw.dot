digraph "CFG forcom.caverock.androidsvg.SVG.renderToCanvas(Landroid\/graphics\/Canvas;Lcom\/caverock\/androidsvg\/RenderOptions;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0007 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: NEW_INSTANCE  (r5 I:com.caverock.androidsvg.RenderOptions) =  com.caverock.androidsvg.RenderOptions \l0x0004: INVOKE  (r5 I:com.caverock.androidsvg.RenderOptions) com.caverock.androidsvg.RenderOptions.\<init\>():void type: DIRECT \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r0 I:boolean) = (r5 I:com.caverock.androidsvg.RenderOptions) com.caverock.androidsvg.RenderOptions.hasViewPort():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001b \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r0 I:int) = (r4 I:android.graphics.Canvas) android.graphics.Canvas.getWidth():int type: VIRTUAL \l0x0011: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0012: INVOKE  (r1 I:int) = (r4 I:android.graphics.Canvas) android.graphics.Canvas.getHeight():int type: VIRTUAL \l0x0016: CAST  (r1 I:float) = (float) (r1 I:int) \l0x0017: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0018: INVOKE  \l  (r5 I:com.caverock.androidsvg.RenderOptions)\l  (r2 I:float)\l  (r2 I:float)\l  (r0 I:float)\l  (r1 I:float)\l com.caverock.androidsvg.RenderOptions.viewPort(float, float, float, float):com.caverock.androidsvg.RenderOptions type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: NEW_INSTANCE  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer) =  com.caverock.androidsvg.SVGAndroidRenderer \l0x001d: IGET  (r1 I:float) = (r3 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.renderDPI float \l0x001f: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r4 I:android.graphics.Canvas)\l  (r1 I:float)\l com.caverock.androidsvg.SVGAndroidRenderer.\<init\>(android.graphics.Canvas, float):void type: DIRECT \l0x0022: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r3 I:com.caverock.androidsvg.SVG)\l  (r5 I:com.caverock.androidsvg.RenderOptions)\l com.caverock.androidsvg.SVGAndroidRenderer.renderDocument(com.caverock.androidsvg.SVG, com.caverock.androidsvg.RenderOptions):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.caverock.androidsvg.SVG.renderToCanvas((r3 'this' I:com.caverock.androidsvg.SVG A[IMMUTABLE_TYPE, THIS]), (r4 I:android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.caverock.androidsvg.RenderOptions A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

