digraph "CFG forcom.caverock.androidsvg.SVG.renderToPicture(Lcom\/caverock\/androidsvg\/RenderOptions;)Landroid\/graphics\/Picture;" {
subgraph cluster_Region_1810440457 {
label = "R(2:0|(1:9)(1:(1:19)(1:(2:23|24)(1:(1:31)(2:28|29)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.caverock.androidsvg.SVG.Box r0 = (r5 == null \|\| !r5.hasViewBox()) ? r4.rootElement.viewBox : r5.viewBox\l}"];
subgraph cluster_IfRegion_2008704403 {
label = "IF [B:5:0x000f, B:7:0x0015] THEN: R(1:9) ELSE: R(1:(1:19)(1:(2:23|24)(1:(1:31)(2:28|29))))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|PHI: r0 \l  PHI: (r0v0 com.caverock.androidsvg.SVG$Box) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 != null) goto L_0x0011\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|ADDED_TO_REGION\l|if (r5.hasViewPort() != false) goto L_0x0017\l}"];
subgraph cluster_Region_1299825732 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0033|RETURN\l|return renderToPicture((int) java.lang.Math.ceil((double) r5.viewPort.maxX()), (int) java.lang.Math.ceil((double) r5.viewPort.maxY()), r5)\l}"];
}
subgraph cluster_Region_124504260 {
label = "R(1:(1:19)(1:(2:23|24)(1:(1:31)(2:28|29)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_558559954 {
label = "IF [B:11:0x0038, B:13:0x0042, B:15:0x0048, B:17:0x0052] THEN: R(1:19) ELSE: R(1:(2:23|24)(1:(1:31)(2:28|29))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0038|if (r4.rootElement.width != null) goto L_0x003a\l}"];
Node_13 [shape=record,label="{13\:\ 0x0042|ADDED_TO_REGION\l|if (r4.rootElement.width.unit != com.caverock.androidsvg.SVG.Unit.percent) goto L_0x0044\l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|ADDED_TO_REGION\l|if (r4.rootElement.height != null) goto L_0x004a\l}"];
Node_17 [shape=record,label="{17\:\ 0x0052|ADDED_TO_REGION\l|if (r4.rootElement.height.unit != com.caverock.androidsvg.SVG.Unit.percent) goto L_0x0054\l}"];
subgraph cluster_Region_91790741 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0078|RETURN\l|return renderToPicture((int) java.lang.Math.ceil((double) r4.rootElement.width.floatValue(r4.renderDPI)), (int) java.lang.Math.ceil((double) r4.rootElement.height.floatValue(r4.renderDPI)), r5)\l}"];
}
subgraph cluster_Region_111162010 {
label = "R(1:(2:23|24)(1:(1:31)(2:28|29))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_603537211 {
label = "IF [B:21:0x007d, B:22:0x007f] THEN: R(2:23|24) ELSE: R(1:(1:31)(2:28|29)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x007d|if (r4.rootElement.width != null) goto L_0x007f\l}"];
Node_22 [shape=record,label="{22\:\ 0x007f|ADDED_TO_REGION\l|if (r0 != null) goto L_0x0081\l}"];
subgraph cluster_Region_1129932639 {
label = "R(2:23|24)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0081|float float r1 = r4.rootElement.width.floatValue(r4.renderDPI)\l}"];
Node_24 [shape=record,label="{24\:\ 0x00a2|RETURN\l|return renderToPicture((int) java.lang.Math.ceil((double) r1), (int) java.lang.Math.ceil((double) ((r0.height * r1) \/ r0.width)), r5)\l}"];
}
subgraph cluster_Region_1607792482 {
label = "R(1:(1:31)(2:28|29)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_972394296 {
label = "IF [B:26:0x00a7, B:27:0x00a9] THEN: R(1:31) ELSE: R(2:28|29) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x00a7|if (r4.rootElement.height == null) goto L_0x00cd\l}"];
Node_27 [shape=record,label="{27\:\ 0x00a9|ADDED_TO_REGION\l|if (r0 == null) goto L_0x00cd\l}"];
subgraph cluster_Region_696140328 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x00d3|RETURN\l|return renderToPicture(512, 512, r5)\l}"];
}
subgraph cluster_Region_456527974 {
label = "R(2:28|29)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x00ab|float float r1 = r4.rootElement.height.floatValue(r4.renderDPI)\l}"];
Node_29 [shape=record,label="{29\:\ 0x00cc|RETURN\l|return renderToPicture((int) java.lang.Math.ceil((double) ((r0.width * r1) \/ r0.height)), (int) java.lang.Math.ceil((double) r1), r5)\l}"];
}
}
}
}
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006|REMOVE\lADDED_TO_REGION\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0008}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000b}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0011}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0017}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0034}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x003a}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0044}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x004a}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0054}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0079}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x00a3}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x00cd}"];
MethodNode[shape=record,label="{public android.graphics.Picture com.caverock.androidsvg.SVG.renderToPicture((r4v0 'this' com.caverock.androidsvg.SVG A[IMMUTABLE_TYPE, THIS]), (r5v0 com.caverock.androidsvg.RenderOptions A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_10[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_10[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_20[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_20[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_20[style=dashed];
Node_17 -> Node_18;
Node_17 -> Node_20[style=dashed];
Node_21 -> Node_22;
Node_21 -> Node_25[style=dashed];
Node_22 -> Node_23;
Node_22 -> Node_25[style=dashed];
Node_23 -> Node_24;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_30;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_25 -> Node_26;
Node_30 -> Node_31;
}

