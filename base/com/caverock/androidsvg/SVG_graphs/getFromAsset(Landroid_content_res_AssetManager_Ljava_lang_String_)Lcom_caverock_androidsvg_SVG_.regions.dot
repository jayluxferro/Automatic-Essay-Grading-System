digraph "CFG forcom.caverock.androidsvg.SVG.getFromAsset(Landroid\/content\/res\/AssetManager;Ljava\/lang\/String;)Lcom\/caverock\/androidsvg\/SVG;" {
subgraph cluster_Region_215249343 {
label = "R(2:0|(1:5))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.caverock.androidsvg.SVGParser com.caverock.androidsvg.SVGParser r0 = new com.caverock.androidsvg.SVGParser()\ljava.io.InputStream java.io.InputStream r1 = r1.open(r2)\l}"];
subgraph cluster_TryCatchRegion_1100029988 {
label = "Try: R(1:5) finally: R(3:7|(1:9)|10)";
node [shape=record,color=blue];
subgraph cluster_Region_272349307 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|RETURN\l|return r0.parse(r1, enableInternalEntities)\l}"];
}
subgraph cluster_Region_1476672627 {
label = "R(3:7|(1:9)|10) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0013|ExcHandler:  FINALLY\lSplitter:B:1:0x0009\l}"];
subgraph cluster_TryCatchRegion_1254788214 {
label = "Try: R(1:9) catches: R(0)";
node [shape=record,color=blue];
subgraph cluster_Region_1792900630 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ ?|FINALLY_INSNS\lCatch:\{ IOException \-\> 0x0017 \}\lSplitter:B:8:0x0014\l|r1.close()     \/\/ Catch:\{ IOException \-\> 0x0017 \}\l}"];
}
subgraph cluster_Region_259107175 {
label = "R(0) | ExcHandler: IOException (unused java.io.IOException)\l";
node [shape=record,color=blue];
}
}
Node_10 [shape=record,label="{10\:\ 0x0017|throw r2\l}"];
}
}
}
subgraph cluster_Region_1476672627 {
label = "R(3:7|(1:9)|10) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0013|ExcHandler:  FINALLY\lSplitter:B:1:0x0009\l}"];
subgraph cluster_TryCatchRegion_1254788214 {
label = "Try: R(1:9) catches: R(0)";
node [shape=record,color=blue];
subgraph cluster_Region_1792900630 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ ?|FINALLY_INSNS\lCatch:\{ IOException \-\> 0x0017 \}\lSplitter:B:8:0x0014\l|r1.close()     \/\/ Catch:\{ IOException \-\> 0x0017 \}\l}"];
}
subgraph cluster_Region_259107175 {
label = "R(0) | ExcHandler: IOException (unused java.io.IOException)\l";
node [shape=record,color=blue];
}
}
Node_10 [shape=record,label="{10\:\ 0x0017|throw r2\l}"];
}
subgraph cluster_Region_1193879725 {
label = "R(1:6) | ExcHandler: IOException (unused java.io.IOException)\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:3:0x000f\l}"];
}
subgraph cluster_Region_259107175 {
label = "R(0) | ExcHandler: IOException (unused java.io.IOException)\l";
node [shape=record,color=blue];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0009|SYNTHETIC\lSplitter:B:1:0x0009\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?|Catch:\{ all \-\> 0x0013 \}\lSplitter:B:1:0x0009\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000f|SYNTHETIC\lSplitter:B:3:0x000f\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|DONT_GENERATE\lCatch:\{ IOException \-\> 0x0012 \}\lSplitter:B:3:0x000f\l|r1.close()     \/\/ Catch:\{ IOException \-\> 0x0012 \}\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0014|SYNTHETIC\lSplitter:B:8:0x0014\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:8:0x0014\l}"];
MethodNode[shape=record,label="{public static com.caverock.androidsvg.SVG com.caverock.androidsvg.SVG.getFromAsset((r1v0 android.content.res.AssetManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_6 -> Node_5;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_8 -> Node_9;
Node_8 -> Node_11;
Node_11 -> Node_10;
}

