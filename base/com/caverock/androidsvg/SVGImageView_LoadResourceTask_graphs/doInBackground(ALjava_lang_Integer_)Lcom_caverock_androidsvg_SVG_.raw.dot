digraph "CFG forcom.caverock.androidsvg.SVGImageView.LoadResourceTask.doInBackground([Ljava\/lang\/Integer;)Lcom\/caverock\/androidsvg\/SVG;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r6 I:android.content.Context) = \l  (r5 I:com.caverock.androidsvg.SVGImageView$LoadResourceTask)\l com.caverock.androidsvg.SVGImageView.LoadResourceTask.context android.content.Context A[Catch:\{ SVGParseException \-\> 0x0009 \}, TRY_ENTER]\l0x0002: IGET  (r0 I:int) = \l  (r5 I:com.caverock.androidsvg.SVGImageView$LoadResourceTask)\l com.caverock.androidsvg.SVGImageView.LoadResourceTask.resourceId int A[Catch:\{ SVGParseException \-\> 0x0009 \}]\l0x0004: INVOKE  (r6 I:com.caverock.androidsvg.SVG) = (r6 I:android.content.Context), (r0 I:int) com.caverock.androidsvg.SVG.getFromResource(android.content.Context, int):com.caverock.androidsvg.SVG type: STATIC A[Catch:\{ SVGParseException \-\> 0x0009 \}]\l0x0007: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: RETURN  (r6 I:com.caverock.androidsvg.SVG) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|ExcHandler: SVGParseException null\lSplitter:B:0:0x0000\l|0x0009: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: CONST_STR  (r0 I:java.lang.String) =  \"SVGImageView\" \l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"Error loading resource 0x%x: %s\" \l0x000e: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000f: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0011: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: IGET  (r4 I:int) = \l  (r5 I:com.caverock.androidsvg.SVGImageView$LoadResourceTask)\l com.caverock.androidsvg.SVGImageView.LoadResourceTask.resourceId int \l0x0014: INVOKE  (r4 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0018: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x001a: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001b: INVOKE  (r6 I:java.lang.String) = (r6 I:com.caverock.androidsvg.SVGParseException) com.caverock.androidsvg.SVGParseException.getMessage():java.lang.String type: VIRTUAL \l0x001f: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x0021: INVOKE  (r6 I:java.lang.String) = (r1 I:java.lang.String), (r2 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x0025: INVOKE  (r0 I:java.lang.String), (r6 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC \l0x0028: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|0x0029: RETURN  (r6 I:com.caverock.androidsvg.SVG) \l}"];
MethodNode[shape=record,label="{protected com.caverock.androidsvg.SVG com.caverock.androidsvg.SVGImageView.LoadResourceTask.doInBackground((r5 'this' I:com.caverock.androidsvg.SVGImageView$LoadResourceTask A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.Integer[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

