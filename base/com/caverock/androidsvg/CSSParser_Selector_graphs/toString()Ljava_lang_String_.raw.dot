digraph "CFG forcom.caverock.androidsvg.CSSParser.Selector.toString()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0002: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0005: IGET  (r1 I:java.util.List\<com.caverock.androidsvg.CSSParser$SimpleSelector\>) = (r3 I:com.caverock.androidsvg.CSSParser$Selector) com.caverock.androidsvg.CSSParser.Selector.simpleSelectors java.util.List \l0x0007: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0020 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0015: CHECK_CAST  (r2 I:com.caverock.androidsvg.CSSParser$SimpleSelector) = (com.caverock.androidsvg.CSSParser$SimpleSelector) (r2 I:?[OBJECT, ARRAY]) \l0x0017: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x001a: CONST  (r2 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x001c: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: CONST  (r1 I:?[int, float, short, byte, char]) = (91 ?[int, float, short, byte, char]) \l0x0022: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0025: IGET  (r1 I:int) = (r3 I:com.caverock.androidsvg.CSSParser$Selector) com.caverock.androidsvg.CSSParser.Selector.specificity int \l0x0027: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x002a: CONST  (r1 I:?[int, float, short, byte, char]) = (93 ?[int, float, short, byte, char]) \l0x002c: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x002f: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0033|0x0033: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String com.caverock.androidsvg.CSSParser.Selector.toString((r3 'this' I:com.caverock.androidsvg.CSSParser$Selector A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

