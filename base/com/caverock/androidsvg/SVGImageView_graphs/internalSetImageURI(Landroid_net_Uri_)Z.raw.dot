digraph "CFG forcom.caverock.androidsvg.SVGImageView.internalSetImageURI(Landroid\/net\/Uri;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r1 I:android.content.Context) = (r4 I:com.caverock.androidsvg.SVGImageView) com.caverock.androidsvg.SVGImageView.getContext():android.content.Context type: VIRTUAL A[Catch:\{ FileNotFoundException \-\> 0x001c \}, TRY_ENTER]\l0x0005: INVOKE  (r1 I:android.content.ContentResolver) = (r1 I:android.content.Context) android.content.Context.getContentResolver():android.content.ContentResolver type: VIRTUAL A[Catch:\{ FileNotFoundException \-\> 0x001c \}]\l0x0009: INVOKE  (r5 I:java.io.InputStream) = \l  (r1 I:android.content.ContentResolver)\l  (r5 I:android.net.Uri)\l android.content.ContentResolver.openInputStream(android.net.Uri):java.io.InputStream type: VIRTUAL A[Catch:\{ FileNotFoundException \-\> 0x001c \}]\l0x000d: NEW_INSTANCE  (r1 I:com.caverock.androidsvg.SVGImageView$LoadURITask) =  com.caverock.androidsvg.SVGImageView$LoadURITask A[Catch:\{ FileNotFoundException \-\> 0x001c \}]\l0x000f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ FileNotFoundException \-\> 0x001c \}]\l0x0010: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGImageView$LoadURITask)\l  (r4 I:com.caverock.androidsvg.SVGImageView)\l  (r2 I:com.caverock.androidsvg.SVGImageView$1)\l com.caverock.androidsvg.SVGImageView.LoadURITask.\<init\>(com.caverock.androidsvg.SVGImageView, com.caverock.androidsvg.SVGImageView$1):void type: DIRECT A[Catch:\{ FileNotFoundException \-\> 0x001c \}]\l0x0013: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ FileNotFoundException \-\> 0x001c \}]\l0x0014: NEW_ARRAY  (r3 I:java.io.InputStream[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.io.InputStream[] A[Catch:\{ FileNotFoundException \-\> 0x001c \}]\l0x0016: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l A[Catch:\{ FileNotFoundException \-\> 0x001c \}]\l0x0018: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGImageView$LoadURITask)\l  (r3 I:java.lang.Object[])\l com.caverock.androidsvg.SVGImageView.LoadURITask.execute(java.lang.Object[]):android.os.AsyncTask type: VIRTUAL A[Catch:\{ FileNotFoundException \-\> 0x001c \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: RETURN  (r2 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: RETURN  (r0 I:boolean) \l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lExcHandler: FileNotFoundException null\lSplitter:B:1:0x0001\l}"];
MethodNode[shape=record,label="{private boolean com.caverock.androidsvg.SVGImageView.internalSetImageURI((r4 'this' I:com.caverock.androidsvg.SVGImageView A[IMMUTABLE_TYPE, THIS]), (r5 I:android.net.Uri A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_5 -> Node_4;
}

