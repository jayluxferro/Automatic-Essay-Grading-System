digraph "CFG forcom.caverock.androidsvg.CSSParser.Ruleset.add(Lcom\/caverock\/androidsvg\/CSSParser$Rule;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<com.caverock.androidsvg.CSSParser$Rule\>) = (r3 I:com.caverock.androidsvg.CSSParser$Ruleset) com.caverock.androidsvg.CSSParser.Ruleset.rules java.util.List \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0006: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0009: IPUT  \l  (r0 I:java.util.List\<com.caverock.androidsvg.CSSParser$Rule\>)\l  (r3 I:com.caverock.androidsvg.CSSParser$Ruleset)\l com.caverock.androidsvg.CSSParser.Ruleset.rules java.util.List \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IGET  (r1 I:java.util.List\<com.caverock.androidsvg.CSSParser$Rule\>) = (r3 I:com.caverock.androidsvg.CSSParser$Ruleset) com.caverock.androidsvg.CSSParser.Ruleset.rules java.util.List \l0x000e: INVOKE  (r1 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:11:0x002f \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IGET  (r1 I:java.util.List\<com.caverock.androidsvg.CSSParser$Rule\>) = (r3 I:com.caverock.androidsvg.CSSParser$Ruleset) com.caverock.androidsvg.CSSParser.Ruleset.rules java.util.List \l0x0016: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x001a: CHECK_CAST  (r1 I:com.caverock.androidsvg.CSSParser$Rule) = (com.caverock.androidsvg.CSSParser$Rule) (r1 I:?[OBJECT, ARRAY]) \l0x001c: IGET  (r1 I:com.caverock.androidsvg.CSSParser$Selector) = (r1 I:com.caverock.androidsvg.CSSParser$Rule) com.caverock.androidsvg.CSSParser.Rule.selector com.caverock.androidsvg.CSSParser$Selector \l0x001e: IGET  (r1 I:int) = (r1 I:com.caverock.androidsvg.CSSParser$Selector) com.caverock.androidsvg.CSSParser.Selector.specificity int \l0x0020: IGET  (r2 I:com.caverock.androidsvg.CSSParser$Selector) = (r4 I:com.caverock.androidsvg.CSSParser$Rule) com.caverock.androidsvg.CSSParser.Rule.selector com.caverock.androidsvg.CSSParser$Selector \l0x0022: IGET  (r2 I:int) = (r2 I:com.caverock.androidsvg.CSSParser$Selector) com.caverock.androidsvg.CSSParser.Selector.specificity int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IF  (r1 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:10:0x002c \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: IGET  (r1 I:java.util.List\<com.caverock.androidsvg.CSSParser$Rule\>) = (r3 I:com.caverock.androidsvg.CSSParser$Ruleset) com.caverock.androidsvg.CSSParser.Ruleset.rules java.util.List \l0x0028: INVOKE  (r1 I:java.util.List), (r0 I:int), (r4 I:java.lang.Object) java.util.List.add(int, java.lang.Object):void type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|0x002f: IGET  (r0 I:java.util.List\<com.caverock.androidsvg.CSSParser$Rule\>) = (r3 I:com.caverock.androidsvg.CSSParser$Ruleset) com.caverock.androidsvg.CSSParser.Ruleset.rules java.util.List \l0x0031: INVOKE  (r0 I:java.util.List), (r4 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: RETURN   \l}"];
MethodNode[shape=record,label="{void com.caverock.androidsvg.CSSParser.Ruleset.add((r3 'this' I:com.caverock.androidsvg.CSSParser$Ruleset A[IMMUTABLE_TYPE, THIS]), (r4 I:com.caverock.androidsvg.CSSParser$Rule A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_4;
Node_11 -> Node_12;
}

