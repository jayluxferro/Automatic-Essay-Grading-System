digraph "CFG forcom.caverock.androidsvg.CSSParser.Ruleset.add(Lcom\/caverock\/androidsvg\/CSSParser$Rule;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3.rules != null) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r3.rules = new java.util.ArrayList()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|r0 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|LOOP_START\lPHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v4 int) binds: [B:3:0x000b, B:10:0x002c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000c\-\>B:10:0x002c\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|if (r0 \>= r3.rules.size()) goto L_0x002f\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014}"];
Node_7 [shape=record,label="{7\:\ 0x0024|if (r3.rules.get(r0).selector.specificity \<= r4.selector.specificity) goto L_0x002c\l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|r3.rules.add(r0, r4)\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|LOOP_END\lLOOP:0: B:4:0x000c\-\>B:10:0x002c\l|int r0 = r0 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|r3.rules.add(r4)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0026|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void com.caverock.androidsvg.CSSParser.Ruleset.add((r3v0 'this' com.caverock.androidsvg.CSSParser$Ruleset A[IMMUTABLE_TYPE, THIS]), (r4v0 com.caverock.androidsvg.CSSParser$Rule A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_10;
Node_7 -> Node_14[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_4;
Node_11 -> Node_12;
Node_13 -> Node_11;
Node_14 -> Node_8;
}

