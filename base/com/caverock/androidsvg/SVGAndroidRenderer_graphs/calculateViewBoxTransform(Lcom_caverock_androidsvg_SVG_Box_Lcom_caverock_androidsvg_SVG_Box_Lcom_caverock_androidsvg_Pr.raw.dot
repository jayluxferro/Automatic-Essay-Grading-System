digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.calculateViewBoxTransform(Lcom\/caverock\/androidsvg\/SVG$Box;Lcom\/caverock\/androidsvg\/SVG$Box;Lcom\/caverock\/androidsvg\/PreserveAspectRatio;)Landroid\/graphics\/Matrix;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:android.graphics.Matrix) =  android.graphics.Matrix \l0x0002: INVOKE  (r0 I:android.graphics.Matrix) android.graphics.Matrix.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0090 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r1 I:com.caverock.androidsvg.PreserveAspectRatio$Alignment) = (r11 I:com.caverock.androidsvg.PreserveAspectRatio) com.caverock.androidsvg.PreserveAspectRatio.getAlignment():com.caverock.androidsvg.PreserveAspectRatio$Alignment type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IGET  (r1 I:float) = (r9 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.width float \l0x0011: IGET  (r2 I:float) = (r10 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.width float \l0x0013: ARITH  (r1 I:float) = (r1 I:float) \/ (r2 I:float) \l0x0014: IGET  (r2 I:float) = (r9 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.height float \l0x0016: IGET  (r3 I:float) = (r10 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.height float \l0x0018: ARITH  (r2 I:float) = (r2 I:float) \/ (r3 I:float) \l0x0019: IGET  (r3 I:float) = (r10 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minX float \l0x001b: NEG  (r3 I:float) = (r3 I:float) \l0x001c: IGET  (r4 I:float) = (r10 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minY float \l0x001e: NEG  (r4 I:float) = (r4 I:float) \l0x001f: SGET  (r5 I:com.caverock.androidsvg.PreserveAspectRatio) =  com.caverock.androidsvg.PreserveAspectRatio.STRETCH com.caverock.androidsvg.PreserveAspectRatio \l0x0021: INVOKE  (r5 I:boolean) = \l  (r11 I:com.caverock.androidsvg.PreserveAspectRatio)\l  (r5 I:java.lang.Object)\l com.caverock.androidsvg.PreserveAspectRatio.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0035 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: IGET  (r10 I:float) = (r9 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minX float \l0x0029: IGET  (r9 I:float) = (r9 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minY float \l0x002b: INVOKE  (r0 I:android.graphics.Matrix), (r10 I:float), (r9 I:float) android.graphics.Matrix.preTranslate(float, float):boolean type: VIRTUAL \l0x002e: INVOKE  (r0 I:android.graphics.Matrix), (r1 I:float), (r2 I:float) android.graphics.Matrix.preScale(float, float):boolean type: VIRTUAL \l0x0031: INVOKE  (r0 I:android.graphics.Matrix), (r3 I:float), (r4 I:float) android.graphics.Matrix.preTranslate(float, float):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|0x0034: RETURN  (r0 I:android.graphics.Matrix) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|0x0035: INVOKE  (r5 I:com.caverock.androidsvg.PreserveAspectRatio$Scale) = (r11 I:com.caverock.androidsvg.PreserveAspectRatio) com.caverock.androidsvg.PreserveAspectRatio.getScale():com.caverock.androidsvg.PreserveAspectRatio$Scale type: VIRTUAL \l0x0039: SGET  (r6 I:com.caverock.androidsvg.PreserveAspectRatio$Scale) =  com.caverock.androidsvg.PreserveAspectRatio.Scale.slice com.caverock.androidsvg.PreserveAspectRatio$Scale \l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|0x003b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0042 \l}"];
Node_11 [shape=record,label="{11\:\ 0x003d|0x003d: INVOKE  (r1 I:float) = (r1 I:float), (r2 I:float) java.lang.Math.max(float, float):float type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0042|0x0042: INVOKE  (r1 I:float) = (r1 I:float), (r2 I:float) java.lang.Math.min(float, float):float type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|0x0046: IGET  (r2 I:float) = (r9 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.width float \l0x0048: ARITH  (r2 I:float) = (r2 I:float) \/ (r1 I:float) \l0x0049: IGET  (r5 I:float) = (r9 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.height float \l0x004b: ARITH  (r5 I:float) = (r5 I:float) \/ (r1 I:float) \l0x004c: SGET  (r6 I:int[]) =  com.caverock.androidsvg.SVGAndroidRenderer.1.$SwitchMap$com$caverock$androidsvg$PreserveAspectRatio$Alignment int[] \l0x004e: INVOKE  (r7 I:com.caverock.androidsvg.PreserveAspectRatio$Alignment) = (r11 I:com.caverock.androidsvg.PreserveAspectRatio) com.caverock.androidsvg.PreserveAspectRatio.getAlignment():com.caverock.androidsvg.PreserveAspectRatio$Alignment type: VIRTUAL \l0x0052: INVOKE  (r7 I:int) = \l  (r7 I:com.caverock.androidsvg.PreserveAspectRatio$Alignment)\l com.caverock.androidsvg.PreserveAspectRatio.Alignment.ordinal():int type: VIRTUAL \l0x0056: AGET  (r6 I:?[int, float]) = (r6 I:?[int, float][]), (r7 I:?[int, short, byte, char]) \l0x0058: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x005a|0x005a: SWITCH  \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6] t:[0x0063, 0x0063, 0x0063, 0x005e, 0x005e, 0x005e] \l}"];
Node_16 [shape=record,label="{16\:\ 0x005e|0x005e: IGET  (r6 I:float) = (r10 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.width float \l0x0060: ARITH  (r6 I:float) = (r6 I:float) \- (r2 I:float) \l0x0061: ARITH  (r3 I:float) = (r3 I:float) \- (r6 I:float) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0063|0x0063: IGET  (r6 I:float) = (r10 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.width float \l0x0065: ARITH  (r6 I:float) = (r6 I:float) \- (r2 I:float) \l0x0066: ARITH  (r6 I:float) = (r6 I:float) \/ (r7 I:float) \l0x0067: ARITH  (r3 I:float) = (r3 I:float) \- (r6 I:float) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0068|0x0068: SGET  (r2 I:int[]) =  com.caverock.androidsvg.SVGAndroidRenderer.1.$SwitchMap$com$caverock$androidsvg$PreserveAspectRatio$Alignment int[] \l0x006a: INVOKE  (r11 I:com.caverock.androidsvg.PreserveAspectRatio$Alignment) = (r11 I:com.caverock.androidsvg.PreserveAspectRatio) com.caverock.androidsvg.PreserveAspectRatio.getAlignment():com.caverock.androidsvg.PreserveAspectRatio$Alignment type: VIRTUAL \l0x006e: INVOKE  (r11 I:int) = \l  (r11 I:com.caverock.androidsvg.PreserveAspectRatio$Alignment)\l com.caverock.androidsvg.PreserveAspectRatio.Alignment.ordinal():int type: VIRTUAL \l0x0072: AGET  (r11 I:?[int, float]) = (r2 I:?[int, float][]), (r11 I:?[int, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0074|0x0074: SWITCH  \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[2, 3, 4, 5, 6, 7, 8] t:[0x007d, 0x0078, 0x0077, 0x007d, 0x0078, 0x007d, 0x0078] \l}"];
Node_21 [shape=record,label="{21\:\ 0x0078|0x0078: IGET  (r10 I:float) = (r10 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.height float \l0x007a: ARITH  (r10 I:float) = (r10 I:float) \- (r5 I:float) \l0x007b: ARITH  (r4 I:float) = (r4 I:float) \- (r10 I:float) \l}"];
Node_22 [shape=record,label="{22\:\ 0x007d|0x007d: IGET  (r10 I:float) = (r10 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.height float \l0x007f: ARITH  (r10 I:float) = (r10 I:float) \- (r5 I:float) \l0x0080: ARITH  (r10 I:float) = (r10 I:float) \/ (r7 I:float) \l0x0081: ARITH  (r4 I:float) = (r4 I:float) \- (r10 I:float) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0082|0x0082: IGET  (r10 I:float) = (r9 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minX float \l0x0084: IGET  (r9 I:float) = (r9 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minY float \l0x0086: INVOKE  (r0 I:android.graphics.Matrix), (r10 I:float), (r9 I:float) android.graphics.Matrix.preTranslate(float, float):boolean type: VIRTUAL \l0x0089: INVOKE  (r0 I:android.graphics.Matrix), (r1 I:float), (r1 I:float) android.graphics.Matrix.preScale(float, float):boolean type: VIRTUAL \l0x008c: INVOKE  (r0 I:android.graphics.Matrix), (r3 I:float), (r4 I:float) android.graphics.Matrix.preTranslate(float, float):boolean type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x008f|0x008f: RETURN  (r0 I:android.graphics.Matrix) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0090|0x0090: RETURN  (r0 I:android.graphics.Matrix) \l}"];
MethodNode[shape=record,label="{private android.graphics.Matrix com.caverock.androidsvg.SVGAndroidRenderer.calculateViewBoxTransform((r8 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r9 I:com.caverock.androidsvg.SVG$Box A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:com.caverock.androidsvg.SVG$Box A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:com.caverock.androidsvg.PreserveAspectRatio A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_25;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_25[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_16;
Node_14 -> Node_17;
Node_14 -> Node_18;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_22;
Node_19 -> Node_23;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
}

