digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.render(Lcom\/caverock\/androidsvg\/SVG$Svg;Lcom\/caverock\/androidsvg\/SVG$Box;Lcom\/caverock\/androidsvg\/SVG$Box;Lcom\/caverock\/androidsvg\/PreserveAspectRatio;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|debug(\"Svg render\", new java.lang.Object[0])\l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|if ((r5.width \> 0.0f ? 1 : (r5.width == 0.0f ? 0 : \-1)) == 0) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f}"];
Node_3 [shape=record,label="{3\:\ 0x0013|if ((r5.height \> 0.0f ? 1 : (r5.height == 0.0f ? 0 : \-1)) != 0) goto L_0x0017\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|if (r7 != null) goto L_0x0022\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019}"];
Node_6 [shape=record,label="{6\:\ 0x001b|if (r4.preserveAspectRatio == null) goto L_0x0020\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|com.caverock.androidsvg.PreserveAspectRatio r7 = r4.preserveAspectRatio\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|com.caverock.androidsvg.PreserveAspectRatio r7 = com.caverock.androidsvg.PreserveAspectRatio.LETTERBOX\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|PHI: r7 \l  PHI: (r7v1 com.caverock.androidsvg.PreserveAspectRatio) = (r7v0 com.caverock.androidsvg.PreserveAspectRatio), (r7v6 com.caverock.androidsvg.PreserveAspectRatio), (r7v7 com.caverock.androidsvg.PreserveAspectRatio) binds: [B:4:0x0017, B:8:0x0020, B:7:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|updateStyleForElement(r3.state, r4)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|if (display() != false) goto L_0x002e\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|r3.state.viewPort = r5\l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|if (r3.state.style.overflow.booleanValue() != false) goto L_0x0059\l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|setClipRect(r3.state.viewPort.minX, r3.state.viewPort.minY, r3.state.viewPort.width, r3.state.viewPort.height)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0059|checkForClipPath(r4, r3.state.viewPort)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0060|if (r6 == null) goto L_0x0076\l}"];
Node_17 [shape=record,label="{17\:\ 0x0062|r3.canvas.concat(calculateViewBoxTransform(r3.state.viewPort, r6, r7))\lcom.caverock.androidsvg.SVGAndroidRenderer$RendererState r5 = r3.state\lr5.viewBox = r4.viewBox\l}"];
Node_18 [shape=record,label="{18\:\ 0x0076|r3.canvas.translate(r3.state.viewPort.minX, r3.state.viewPort.minY)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0087|boolean r5 = pushLayer()\lviewportFill()\lrenderChildren(r4, true)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0092|if (r5 == false) goto L_0x0097\l}"];
Node_21 [shape=record,label="{21\:\ 0x0094|popLayer(r4)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0097|updateParentBoundingBox(r4)\l}"];
Node_23 [shape=record,label="{23\:\ 0x009a|RETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.render((r3v0 'this' com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r4v0 com.caverock.androidsvg.SVG$Svg A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 com.caverock.androidsvg.SVG$Box A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 com.caverock.androidsvg.SVG$Box A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 com.caverock.androidsvg.PreserveAspectRatio A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_24;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_25[style=dashed];
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
}

