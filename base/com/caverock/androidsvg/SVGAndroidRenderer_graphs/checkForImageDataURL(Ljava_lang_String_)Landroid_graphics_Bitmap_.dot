digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.checkForImageDataURL(Ljava\/lang\/String;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r5.startsWith(\"data:\") != false) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|RETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a}"];
Node_4 [shape=record,label="{4\:\ 0x0010|if (r5.length() \>= 14) goto L_0x0013\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|RETURN\l|return null\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|int r0 = r5.indexOf(44)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|if (r0 == \-1) goto L_0x0041\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c}"];
Node_9 [shape=record,label="{9\:\ 0x001e|if (r0 \>= 12) goto L_0x0021\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021}"];
Node_11 [shape=record,label="{11\:\ 0x002d|if (\";base64\".equals(r5.substring(r0 + \-7, r0)) != false) goto L_0x0030\l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|RETURN\l|return null\l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|byte[] r5 = android.util.Base64.decode(r5.substring(r0 + 1), 0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|RETURN\l|return android.graphics.BitmapFactory.decodeByteArray(r5, 0, r5.length)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0041|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{private android.graphics.Bitmap com.caverock.androidsvg.SVGAndroidRenderer.checkForImageDataURL((r4v0 'this' com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_15[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_14;
}

