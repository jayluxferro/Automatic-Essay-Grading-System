digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.addObjectToClip(Lcom\/caverock\/androidsvg\/SVG$SvgObject;ZLandroid\/graphics\/Path;Landroid\/graphics\/Matrix;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r2 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.display():boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: INVOKE  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.clipStatePush():void type: DIRECT \l0x000a: INSTANCE_OF  (r0 I:boolean) = (r3 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Use \l0x000c: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0017 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: CHECK_CAST  (r3 I:com.caverock.androidsvg.SVG$Use) = (com.caverock.androidsvg.SVG$Use) (r3 I:?[OBJECT, ARRAY]) \l0x0013: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r3 I:com.caverock.androidsvg.SVG$Use)\l  (r5 I:android.graphics.Path)\l  (r6 I:android.graphics.Matrix)\l com.caverock.androidsvg.SVGAndroidRenderer.addObjectToClip(com.caverock.androidsvg.SVG$Use, android.graphics.Path, android.graphics.Matrix):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: CONST_STR  (r3 I:java.lang.String) =  \"\<use\> elements inside a \<clipPath\> cannot reference another \<use\>\" \l0x0019: NEW_ARRAY  (r4 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x001b: INVOKE  (r3 I:java.lang.String), (r4 I:java.lang.Object[]) com.caverock.androidsvg.SVGAndroidRenderer.error(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: INSTANCE_OF  (r4 I:boolean) = (r3 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Path \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0029 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: CHECK_CAST  (r3 I:com.caverock.androidsvg.SVG$Path) = (com.caverock.androidsvg.SVG$Path) (r3 I:?[OBJECT, ARRAY]) \l0x0025: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r3 I:com.caverock.androidsvg.SVG$Path)\l  (r5 I:android.graphics.Path)\l  (r6 I:android.graphics.Matrix)\l com.caverock.androidsvg.SVGAndroidRenderer.addObjectToClip(com.caverock.androidsvg.SVG$Path, android.graphics.Path, android.graphics.Matrix):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: INSTANCE_OF  (r4 I:boolean) = (r3 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Text \l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|0x002b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0033 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: CHECK_CAST  (r3 I:com.caverock.androidsvg.SVG$Text) = (com.caverock.androidsvg.SVG$Text) (r3 I:?[OBJECT, ARRAY]) \l0x002f: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r3 I:com.caverock.androidsvg.SVG$Text)\l  (r5 I:android.graphics.Path)\l  (r6 I:android.graphics.Matrix)\l com.caverock.androidsvg.SVGAndroidRenderer.addObjectToClip(com.caverock.androidsvg.SVG$Text, android.graphics.Path, android.graphics.Matrix):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: INSTANCE_OF  (r4 I:boolean) = (r3 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$GraphicsElement \l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|0x0035: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x003d \l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|0x0037: CHECK_CAST  (r3 I:com.caverock.androidsvg.SVG$GraphicsElement) = (com.caverock.androidsvg.SVG$GraphicsElement) (r3 I:?[OBJECT, ARRAY]) \l0x0039: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r3 I:com.caverock.androidsvg.SVG$GraphicsElement)\l  (r5 I:android.graphics.Path)\l  (r6 I:android.graphics.Matrix)\l com.caverock.androidsvg.SVGAndroidRenderer.addObjectToClip(com.caverock.androidsvg.SVG$GraphicsElement, android.graphics.Path, android.graphics.Matrix):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x003d|0x003d: CONST_STR  (r4 I:java.lang.String) =  \"Invalid %s element found in clipPath definition\" \l0x003f: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0040: NEW_ARRAY  (r5 I:java.lang.Object[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0042: INVOKE  (r3 I:java.lang.Class) = (r3 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x0046: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x004a: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x004c: INVOKE  (r4 I:java.lang.String), (r5 I:java.lang.Object[]) com.caverock.androidsvg.SVGAndroidRenderer.error(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x004f|0x004f: INVOKE  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.clipStatePop():void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0052|0x0052: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.addObjectToClip((r2 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r3 I:com.caverock.androidsvg.SVG$SvgObject A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.graphics.Path A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.graphics.Matrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_18;
Node_7 -> Node_18;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_18;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

