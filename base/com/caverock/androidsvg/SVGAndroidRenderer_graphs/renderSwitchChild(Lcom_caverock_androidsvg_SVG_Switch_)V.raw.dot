digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.renderSwitchChild(Lcom\/caverock\/androidsvg\/SVG$Switch;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.util.Locale) =  java.util.Locale.getDefault():java.util.Locale type: STATIC \l0x0004: INVOKE  (r0 I:java.lang.String) = (r0 I:java.util.Locale) java.util.Locale.getLanguage():java.lang.String type: VIRTUAL \l0x0008: INVOKE  (r1 I:com.caverock.androidsvg.SVGExternalFileResolver) =  com.caverock.androidsvg.SVG.getFileResolver():com.caverock.androidsvg.SVGExternalFileResolver type: STATIC \l0x000c: INVOKE  (r8 I:java.util.List) = (r8 I:com.caverock.androidsvg.SVG$Switch) com.caverock.androidsvg.SVG.Switch.getChildren():java.util.List type: VIRTUAL \l0x0010: INVOKE  (r8 I:java.util.Iterator) = (r8 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: INVOKE  (r2 I:boolean) = (r8 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|0x0018: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x00c2 \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: INVOKE  (r2 I:java.lang.Object) = (r8 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x001e: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$SvgObject) = (com.caverock.androidsvg.SVG$SvgObject) (r2 I:?[OBJECT, ARRAY]) \l0x0020: INSTANCE_OF  (r3 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$SvgConditional \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0025 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0026: CHECK_CAST  (r3 I:com.caverock.androidsvg.SVG$SvgConditional) = (com.caverock.androidsvg.SVG$SvgConditional) (r3 I:?[OBJECT, ARRAY]) \l0x0028: INVOKE  (r4 I:java.lang.String) = (r3 I:com.caverock.androidsvg.SVG$SvgConditional) com.caverock.androidsvg.SVG.SvgConditional.getRequiredExtensions():java.lang.String type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002f \l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: INVOKE  (r4 I:java.util.Set) = (r3 I:com.caverock.androidsvg.SVG$SvgConditional) com.caverock.androidsvg.SVG.SvgConditional.getSystemLanguage():java.util.Set type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|0x0033: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0042 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: INVOKE  (r5 I:boolean) = (r4 I:java.util.Set) java.util.Set.isEmpty():boolean type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|0x0039: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0014 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|0x003b: INVOKE  (r4 I:boolean) = (r4 I:java.util.Set), (r0 I:java.lang.Object) java.util.Set.contains(java.lang.Object):boolean type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|0x003f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0042 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0042|0x0042: INVOKE  (r4 I:java.util.Set) = (r3 I:com.caverock.androidsvg.SVG$SvgConditional) com.caverock.androidsvg.SVG.SvgConditional.getRequiredFeatures():java.util.Set type: INTERFACE \l}"];
Node_17 [shape=record,label="{17\:\ 0x0046|0x0046: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x005e \l}"];
Node_18 [shape=record,label="{18\:\ 0x0048|0x0048: SGET  (r5 I:java.util.HashSet\<java.lang.String\>) =  com.caverock.androidsvg.SVGAndroidRenderer.supportedFeatures java.util.HashSet \l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|0x004a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x004f \l}"];
Node_20 [shape=record,label="{20\:\ 0x004c|0x004c: INVOKE   com.caverock.androidsvg.SVGAndroidRenderer.initialiseSupportedFeaturesMap():void type: STATIC \l}"];
Node_21 [shape=record,label="{21\:\ 0x004f|0x004f: INVOKE  (r5 I:boolean) = (r4 I:java.util.Set) java.util.Set.isEmpty():boolean type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x0053|0x0053: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0014 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0055|0x0055: SGET  (r5 I:java.util.HashSet\<java.lang.String\>) =  com.caverock.androidsvg.SVGAndroidRenderer.supportedFeatures java.util.HashSet \l0x0057: INVOKE  (r4 I:boolean) = (r5 I:java.util.HashSet), (r4 I:java.util.Collection) java.util.HashSet.containsAll(java.util.Collection):boolean type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x005b|0x005b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x005e \l}"];
Node_26 [shape=record,label="{26\:\ 0x005e|0x005e: INVOKE  (r4 I:java.util.Set) = (r3 I:com.caverock.androidsvg.SVG$SvgConditional) com.caverock.androidsvg.SVG.SvgConditional.getRequiredFormats():java.util.Set type: INTERFACE \l}"];
Node_27 [shape=record,label="{27\:\ 0x0062|0x0062: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0084 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0064|0x0064: INVOKE  (r5 I:boolean) = (r4 I:java.util.Set) java.util.Set.isEmpty():boolean type: INTERFACE \l}"];
Node_29 [shape=record,label="{29\:\ 0x0068|0x0068: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0014 \l}"];
Node_30 [shape=record,label="{30\:\ 0x006a|0x006a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x006d \l}"];
Node_32 [shape=record,label="{32\:\ 0x006d|0x006d: INVOKE  (r4 I:java.util.Iterator) = (r4 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_33 [shape=record,label="{33\:\ 0x0071|0x0071: INVOKE  (r5 I:boolean) = (r4 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_34 [shape=record,label="{34\:\ 0x0075|0x0075: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0084 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0077|0x0077: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x007b: CHECK_CAST  (r5 I:java.lang.String) = (java.lang.String) (r5 I:?[OBJECT, ARRAY]) \l0x007d: INVOKE  (r5 I:boolean) = \l  (r1 I:com.caverock.androidsvg.SVGExternalFileResolver)\l  (r5 I:java.lang.String)\l com.caverock.androidsvg.SVGExternalFileResolver.isFormatSupported(java.lang.String):boolean type: VIRTUAL \l}"];
Node_36 [shape=record,label="{36\:\ 0x0081|0x0081: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0071 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0084|0x0084: INVOKE  (r3 I:java.util.Set) = (r3 I:com.caverock.androidsvg.SVG$SvgConditional) com.caverock.androidsvg.SVG.SvgConditional.getRequiredFonts():java.util.Set type: INTERFACE \l}"];
Node_39 [shape=record,label="{39\:\ 0x0088|0x0088: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x00bf \l}"];
Node_40 [shape=record,label="{40\:\ 0x008a|0x008a: INVOKE  (r4 I:boolean) = (r3 I:java.util.Set) java.util.Set.isEmpty():boolean type: INTERFACE \l}"];
Node_41 [shape=record,label="{41\:\ 0x008e|0x008e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0014 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0090|0x0090: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0093 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0093|0x0093: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_45 [shape=record,label="{45\:\ 0x0097|0x0097: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_46 [shape=record,label="{46\:\ 0x009b|0x009b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x00bf \l}"];
Node_47 [shape=record,label="{47\:\ 0x009d|0x009d: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x00a1: CHECK_CAST  (r4 I:java.lang.String) = (java.lang.String) (r4 I:?[OBJECT, ARRAY]) \l0x00a3: IGET  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r7 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x00a5: IGET  (r5 I:com.caverock.androidsvg.SVG$Style) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x00a7: IGET  (r5 I:java.lang.Integer) = (r5 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.fontWeight java.lang.Integer \l0x00a9: INVOKE  (r5 I:int) = (r5 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x00ad: IGET  (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r7 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x00af: IGET  (r6 I:com.caverock.androidsvg.SVG$Style) = \l  (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x00b1: IGET  (r6 I:com.caverock.androidsvg.SVG$Style$FontStyle) = (r6 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.fontStyle com.caverock.androidsvg.SVG$Style$FontStyle \l0x00b3: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l0x00b7: INVOKE  (r4 I:android.graphics.Typeface) = \l  (r1 I:com.caverock.androidsvg.SVGExternalFileResolver)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:java.lang.String)\l com.caverock.androidsvg.SVGExternalFileResolver.resolveFont(java.lang.String, int, java.lang.String):android.graphics.Typeface type: VIRTUAL \l}"];
Node_48 [shape=record,label="{48\:\ 0x00bb|0x00bb: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0097 \l}"];
Node_50 [shape=record,label="{50\:\ 0x00bf|0x00bf: INVOKE  \l  (r7 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$SvgObject)\l com.caverock.androidsvg.SVGAndroidRenderer.render(com.caverock.androidsvg.SVG$SvgObject):void type: DIRECT \l}"];
Node_51 [shape=record,label="{51\:\ 0x00c2|0x00c2: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.renderSwitchChild((r7 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r8 I:com.caverock.androidsvg.SVG$Switch A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_51;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_1[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_1[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_16;
Node_14 -> Node_1[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_1;
Node_22 -> Node_23[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_1[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_38;
Node_28 -> Node_29;
Node_29 -> Node_1;
Node_29 -> Node_30[style=dashed];
Node_30 -> Node_32;
Node_30 -> Node_1[style=dashed];
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_38;
Node_35 -> Node_36;
Node_36 -> Node_33;
Node_36 -> Node_1[style=dashed];
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_50;
Node_40 -> Node_41;
Node_41 -> Node_1;
Node_41 -> Node_42[style=dashed];
Node_42 -> Node_44;
Node_42 -> Node_1[style=dashed];
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_50;
Node_47 -> Node_48;
Node_48 -> Node_45;
Node_48 -> Node_1[style=dashed];
Node_50 -> Node_51;
}

