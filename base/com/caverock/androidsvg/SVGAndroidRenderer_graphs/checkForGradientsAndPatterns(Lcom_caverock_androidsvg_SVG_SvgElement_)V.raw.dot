digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.checkForGradientsAndPatterns(Lcom\/caverock\/androidsvg\/SVG$SvgElement;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0002: IGET  (r0 I:com.caverock.androidsvg.SVG$Style) = \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x0004: IGET  (r0 I:com.caverock.androidsvg.SVG$SvgPaint) = (r0 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.fill com.caverock.androidsvg.SVG$SvgPaint \l0x0006: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$PaintReference \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000b: IGET  (r1 I:com.caverock.androidsvg.SVG$Box) = (r4 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x000d: IGET  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x000f: IGET  (r2 I:com.caverock.androidsvg.SVG$Style) = \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x0011: IGET  (r2 I:com.caverock.androidsvg.SVG$SvgPaint) = (r2 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.fill com.caverock.androidsvg.SVG$SvgPaint \l0x0013: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$PaintReference) = (com.caverock.androidsvg.SVG$PaintReference) (r2 I:?[OBJECT, ARRAY]) \l0x0015: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:boolean)\l  (r1 I:com.caverock.androidsvg.SVG$Box)\l  (r2 I:com.caverock.androidsvg.SVG$PaintReference)\l com.caverock.androidsvg.SVGAndroidRenderer.decodePaintReference(boolean, com.caverock.androidsvg.SVG$Box, com.caverock.androidsvg.SVG$PaintReference):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: IGET  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x001a: IGET  (r0 I:com.caverock.androidsvg.SVG$Style) = \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x001c: IGET  (r0 I:com.caverock.androidsvg.SVG$SvgPaint) = (r0 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.stroke com.caverock.androidsvg.SVG$SvgPaint \l0x001e: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$PaintReference \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0030 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: IGET  (r4 I:com.caverock.androidsvg.SVG$Box) = (r4 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x0025: IGET  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0027: IGET  (r1 I:com.caverock.androidsvg.SVG$Style) = \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x0029: IGET  (r1 I:com.caverock.androidsvg.SVG$SvgPaint) = (r1 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.stroke com.caverock.androidsvg.SVG$SvgPaint \l0x002b: CHECK_CAST  (r1 I:com.caverock.androidsvg.SVG$PaintReference) = (com.caverock.androidsvg.SVG$PaintReference) (r1 I:?[OBJECT, ARRAY]) \l0x002d: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:boolean)\l  (r4 I:com.caverock.androidsvg.SVG$Box)\l  (r1 I:com.caverock.androidsvg.SVG$PaintReference)\l com.caverock.androidsvg.SVGAndroidRenderer.decodePaintReference(boolean, com.caverock.androidsvg.SVG$Box, com.caverock.androidsvg.SVG$PaintReference):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|0x0030: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.checkForGradientsAndPatterns((r3 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r4 I:com.caverock.androidsvg.SVG$SvgElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
}

