digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.objectToPath(Lcom\/caverock\/androidsvg\/SVG$SvgElement;Z)Landroid\/graphics\/Path;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Stack\<com.caverock.androidsvg.SVGAndroidRenderer$RendererState\>) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.stateStack java.util.Stack \l0x0002: IGET  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0004: INVOKE  (r0 I:java.util.Stack), (r1 I:java.lang.Object) java.util.Stack.push(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0007: NEW_INSTANCE  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) =  com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0009: IGET  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x000b: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.\<init\>(com.caverock.androidsvg.SVGAndroidRenderer, com.caverock.androidsvg.SVGAndroidRenderer$RendererState):void type: DIRECT \l0x000e: IPUT  \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0010: IGET  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0012: INVOKE  \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r6 I:com.caverock.androidsvg.SVG$SvgElementBase)\l com.caverock.androidsvg.SVGAndroidRenderer.updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState, com.caverock.androidsvg.SVG$SvgElementBase):void type: DIRECT \l0x0015: INVOKE  (r0 I:boolean) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.display():boolean type: DIRECT \l0x0019: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:73:0x0146 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001c|0x001c: INVOKE  (r0 I:boolean) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.visible():boolean type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0024 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: INSTANCE_OF  (r0 I:boolean) = (r6 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Use \l0x0026: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0027: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0083 \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0033 \l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|0x002c: CONST_STR  (r7 I:java.lang.String) =  \"\<use\> elements inside a \<clipPath\> cannot reference another \<use\>\" \l0x002e: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0030: INVOKE  (r7 I:java.lang.String), (r0 I:java.lang.Object[]) com.caverock.androidsvg.SVGAndroidRenderer.error(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|0x0033: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0034: CHECK_CAST  (r7 I:com.caverock.androidsvg.SVG$Use) = (com.caverock.androidsvg.SVG$Use) (r7 I:?[OBJECT, ARRAY]) \l0x0036: IGET  (r0 I:com.caverock.androidsvg.SVG) = (r6 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.document com.caverock.androidsvg.SVG \l0x0038: IGET  (r4 I:java.lang.String) = (r7 I:com.caverock.androidsvg.SVG$Use) com.caverock.androidsvg.SVG.Use.href java.lang.String \l0x003a: INVOKE  (r0 I:com.caverock.androidsvg.SVG$SvgObject) = (r0 I:com.caverock.androidsvg.SVG), (r4 I:java.lang.String) com.caverock.androidsvg.SVG.resolveIRI(java.lang.String):com.caverock.androidsvg.SVG$SvgObject type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x003e|0x003e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0056 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: CONST_STR  (r6 I:java.lang.String) =  \"Use reference '%s' not found\" \l0x0042: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0044: IGET  (r7 I:java.lang.String) = (r7 I:com.caverock.androidsvg.SVG$Use) com.caverock.androidsvg.SVG.Use.href java.lang.String \l0x0046: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r7 I:?[OBJECT, ARRAY])\l \l0x0048: INVOKE  (r6 I:java.lang.String), (r0 I:java.lang.Object[]) com.caverock.androidsvg.SVGAndroidRenderer.error(java.lang.String, java.lang.Object[]):void type: STATIC \l0x004b: IGET  (r6 I:java.util.Stack\<com.caverock.androidsvg.SVGAndroidRenderer$RendererState\>) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.stateStack java.util.Stack \l0x004d: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.Stack) java.util.Stack.pop():java.lang.Object type: VIRTUAL \l0x0051: CHECK_CAST  (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (com.caverock.androidsvg.SVGAndroidRenderer$RendererState) (r6 I:?[OBJECT, ARRAY]) \l0x0053: IPUT  \l  (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l}"];
Node_12 [shape=record,label="{12\:\ 0x0055|0x0055: RETURN  (r1 I:android.graphics.Path) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0056|0x0056: INSTANCE_OF  (r2 I:boolean) = (r0 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$SvgElement \l}"];
Node_14 [shape=record,label="{14\:\ 0x0058|0x0058: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0065 \l}"];
Node_15 [shape=record,label="{15\:\ 0x005a|0x005a: IGET  (r6 I:java.util.Stack\<com.caverock.androidsvg.SVGAndroidRenderer$RendererState\>) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.stateStack java.util.Stack \l0x005c: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.Stack) java.util.Stack.pop():java.lang.Object type: VIRTUAL \l0x0060: CHECK_CAST  (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (com.caverock.androidsvg.SVGAndroidRenderer$RendererState) (r6 I:?[OBJECT, ARRAY]) \l0x0062: IPUT  \l  (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l}"];
Node_16 [shape=record,label="{16\:\ 0x0064|0x0064: RETURN  (r1 I:android.graphics.Path) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0065|0x0065: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$SvgElement) = (com.caverock.androidsvg.SVG$SvgElement) (r0 I:?[OBJECT, ARRAY]) \l0x0067: INVOKE  (r0 I:android.graphics.Path) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:com.caverock.androidsvg.SVG$SvgElement)\l  (r3 I:boolean)\l com.caverock.androidsvg.SVGAndroidRenderer.objectToPath(com.caverock.androidsvg.SVG$SvgElement, boolean):android.graphics.Path type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x006b|0x006b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x006e \l}"];
Node_19 [shape=record,label="{19\:\ 0x006d|0x006d: RETURN  (r1 I:android.graphics.Path) \l}"];
Node_20 [shape=record,label="{20\:\ 0x006e|0x006e: IGET  (r1 I:com.caverock.androidsvg.SVG$Box) = (r7 I:com.caverock.androidsvg.SVG$Use) com.caverock.androidsvg.SVG.Use.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_21 [shape=record,label="{21\:\ 0x0070|0x0070: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0078 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0072|0x0072: INVOKE  (r1 I:com.caverock.androidsvg.SVG$Box) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:android.graphics.Path)\l com.caverock.androidsvg.SVGAndroidRenderer.calculatePathBounds(android.graphics.Path):com.caverock.androidsvg.SVG$Box type: DIRECT \l0x0076: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG$Box)\l  (r7 I:com.caverock.androidsvg.SVG$Use)\l com.caverock.androidsvg.SVG.Use.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_23 [shape=record,label="{23\:\ 0x0078|0x0078: IGET  (r1 I:android.graphics.Matrix) = (r7 I:com.caverock.androidsvg.SVG$Use) com.caverock.androidsvg.SVG.Use.transform android.graphics.Matrix \l}"];
Node_24 [shape=record,label="{24\:\ 0x007a|0x007a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0114 \l}"];
Node_25 [shape=record,label="{25\:\ 0x007c|0x007c: IGET  (r7 I:android.graphics.Matrix) = (r7 I:com.caverock.androidsvg.SVG$Use) com.caverock.androidsvg.SVG.Use.transform android.graphics.Matrix \l0x007e: INVOKE  \l  (r0 I:android.graphics.Path)\l  (r7 I:android.graphics.Matrix)\l android.graphics.Path.transform(android.graphics.Matrix):void type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0083|0x0083: INSTANCE_OF  (r7 I:boolean) = (r6 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$GraphicsElement \l}"];
Node_27 [shape=record,label="{27\:\ 0x0085|0x0085: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x00f6 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0087|0x0087: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0088: CHECK_CAST  (r7 I:com.caverock.androidsvg.SVG$GraphicsElement) = (com.caverock.androidsvg.SVG$GraphicsElement) (r7 I:?[OBJECT, ARRAY]) \l0x008a: INSTANCE_OF  (r0 I:boolean) = (r6 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Path \l}"];
Node_29 [shape=record,label="{29\:\ 0x008c|0x008c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x00a7 \l}"];
Node_30 [shape=record,label="{30\:\ 0x008e|0x008e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x008f: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$Path) = (com.caverock.androidsvg.SVG$Path) (r0 I:?[OBJECT, ARRAY]) \l0x0091: NEW_INSTANCE  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$PathConverter) =  com.caverock.androidsvg.SVGAndroidRenderer$PathConverter \l0x0093: IGET  (r0 I:com.caverock.androidsvg.SVG$PathDefinition) = (r0 I:com.caverock.androidsvg.SVG$Path) com.caverock.androidsvg.SVG.Path.d com.caverock.androidsvg.SVG$PathDefinition \l0x0095: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$PathConverter)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:com.caverock.androidsvg.SVG$PathDefinition)\l com.caverock.androidsvg.SVGAndroidRenderer.PathConverter.\<init\>(com.caverock.androidsvg.SVGAndroidRenderer, com.caverock.androidsvg.SVG$PathDefinition):void type: DIRECT \l0x0098: INVOKE  (r0 I:android.graphics.Path) = \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$PathConverter)\l com.caverock.androidsvg.SVGAndroidRenderer.PathConverter.getPath():android.graphics.Path type: VIRTUAL \l0x009c: IGET  (r2 I:com.caverock.androidsvg.SVG$Box) = (r6 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_31 [shape=record,label="{31\:\ 0x009e|0x009e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x00d8 \l}"];
Node_32 [shape=record,label="{32\:\ 0x00a0|0x00a0: INVOKE  (r2 I:com.caverock.androidsvg.SVG$Box) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:android.graphics.Path)\l com.caverock.androidsvg.SVGAndroidRenderer.calculatePathBounds(android.graphics.Path):com.caverock.androidsvg.SVG$Box type: DIRECT \l0x00a4: IPUT  \l  (r2 I:com.caverock.androidsvg.SVG$Box)\l  (r6 I:com.caverock.androidsvg.SVG$SvgElement)\l com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_33 [shape=record,label="{33\:\ 0x00a7|0x00a7: INSTANCE_OF  (r0 I:boolean) = (r6 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Rect \l}"];
Node_34 [shape=record,label="{34\:\ 0x00a9|0x00a9: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x00b3 \l}"];
Node_35 [shape=record,label="{35\:\ 0x00ab|0x00ab: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x00ac: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$Rect) = (com.caverock.androidsvg.SVG$Rect) (r0 I:?[OBJECT, ARRAY]) \l0x00ae: INVOKE  (r0 I:android.graphics.Path) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:com.caverock.androidsvg.SVG$Rect)\l com.caverock.androidsvg.SVGAndroidRenderer.makePathAndBoundingBox(com.caverock.androidsvg.SVG$Rect):android.graphics.Path type: DIRECT \l}"];
Node_36 [shape=record,label="{36\:\ 0x00b3|0x00b3: INSTANCE_OF  (r0 I:boolean) = (r6 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Circle \l}"];
Node_37 [shape=record,label="{37\:\ 0x00b5|0x00b5: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x00bf \l}"];
Node_38 [shape=record,label="{38\:\ 0x00b7|0x00b7: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x00b8: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$Circle) = (com.caverock.androidsvg.SVG$Circle) (r0 I:?[OBJECT, ARRAY]) \l0x00ba: INVOKE  (r0 I:android.graphics.Path) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:com.caverock.androidsvg.SVG$Circle)\l com.caverock.androidsvg.SVGAndroidRenderer.makePathAndBoundingBox(com.caverock.androidsvg.SVG$Circle):android.graphics.Path type: DIRECT \l}"];
Node_39 [shape=record,label="{39\:\ 0x00bf|0x00bf: INSTANCE_OF  (r0 I:boolean) = (r6 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Ellipse \l}"];
Node_40 [shape=record,label="{40\:\ 0x00c1|0x00c1: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x00cb \l}"];
Node_41 [shape=record,label="{41\:\ 0x00c3|0x00c3: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x00c4: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$Ellipse) = (com.caverock.androidsvg.SVG$Ellipse) (r0 I:?[OBJECT, ARRAY]) \l0x00c6: INVOKE  (r0 I:android.graphics.Path) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:com.caverock.androidsvg.SVG$Ellipse)\l com.caverock.androidsvg.SVGAndroidRenderer.makePathAndBoundingBox(com.caverock.androidsvg.SVG$Ellipse):android.graphics.Path type: DIRECT \l}"];
Node_42 [shape=record,label="{42\:\ 0x00cb|0x00cb: INSTANCE_OF  (r0 I:boolean) = (r6 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$PolyLine \l}"];
Node_43 [shape=record,label="{43\:\ 0x00cd|0x00cd: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x00d7 \l}"];
Node_44 [shape=record,label="{44\:\ 0x00cf|0x00cf: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x00d0: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$PolyLine) = (com.caverock.androidsvg.SVG$PolyLine) (r0 I:?[OBJECT, ARRAY]) \l0x00d2: INVOKE  (r0 I:android.graphics.Path) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:com.caverock.androidsvg.SVG$PolyLine)\l com.caverock.androidsvg.SVGAndroidRenderer.makePathAndBoundingBox(com.caverock.androidsvg.SVG$PolyLine):android.graphics.Path type: DIRECT \l}"];
Node_45 [shape=record,label="{45\:\ 0x00d7|0x00d7: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x00d8|0x00d8: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x00db \l}"];
Node_47 [shape=record,label="{47\:\ 0x00da|0x00da: RETURN  (r1 I:android.graphics.Path) \l}"];
Node_48 [shape=record,label="{48\:\ 0x00db|0x00db: IGET  (r1 I:com.caverock.androidsvg.SVG$Box) = (r7 I:com.caverock.androidsvg.SVG$GraphicsElement) com.caverock.androidsvg.SVG.GraphicsElement.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_49 [shape=record,label="{49\:\ 0x00dd|0x00dd: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x00e5 \l}"];
Node_50 [shape=record,label="{50\:\ 0x00df|0x00df: INVOKE  (r1 I:com.caverock.androidsvg.SVG$Box) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:android.graphics.Path)\l com.caverock.androidsvg.SVGAndroidRenderer.calculatePathBounds(android.graphics.Path):com.caverock.androidsvg.SVG$Box type: DIRECT \l0x00e3: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG$Box)\l  (r7 I:com.caverock.androidsvg.SVG$GraphicsElement)\l com.caverock.androidsvg.SVG.GraphicsElement.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_51 [shape=record,label="{51\:\ 0x00e5|0x00e5: IGET  (r1 I:android.graphics.Matrix) = (r7 I:com.caverock.androidsvg.SVG$GraphicsElement) com.caverock.androidsvg.SVG.GraphicsElement.transform android.graphics.Matrix \l}"];
Node_52 [shape=record,label="{52\:\ 0x00e7|0x00e7: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00ee \l}"];
Node_53 [shape=record,label="{53\:\ 0x00e9|0x00e9: IGET  (r7 I:android.graphics.Matrix) = (r7 I:com.caverock.androidsvg.SVG$GraphicsElement) com.caverock.androidsvg.SVG.GraphicsElement.transform android.graphics.Matrix \l0x00eb: INVOKE  \l  (r0 I:android.graphics.Path)\l  (r7 I:android.graphics.Matrix)\l android.graphics.Path.transform(android.graphics.Matrix):void type: VIRTUAL \l}"];
Node_54 [shape=record,label="{54\:\ 0x00ee|0x00ee: INVOKE  (r7 I:android.graphics.Path$FillType) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.getClipRuleFromState():android.graphics.Path$FillType type: DIRECT \l0x00f2: INVOKE  \l  (r0 I:android.graphics.Path)\l  (r7 I:android.graphics.Path$FillType)\l android.graphics.Path.setFillType(android.graphics.Path$FillType):void type: VIRTUAL \l}"];
Node_55 [shape=record,label="{55\:\ 0x00f6|0x00f6: INSTANCE_OF  (r7 I:boolean) = (r6 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Text \l}"];
Node_56 [shape=record,label="{56\:\ 0x00f8|0x00f8: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x0134 \l}"];
Node_57 [shape=record,label="{57\:\ 0x00fa|0x00fa: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x00fb: CHECK_CAST  (r7 I:com.caverock.androidsvg.SVG$Text) = (com.caverock.androidsvg.SVG$Text) (r7 I:?[OBJECT, ARRAY]) \l0x00fd: INVOKE  (r0 I:android.graphics.Path) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r7 I:com.caverock.androidsvg.SVG$Text)\l com.caverock.androidsvg.SVGAndroidRenderer.makePathAndBoundingBox(com.caverock.androidsvg.SVG$Text):android.graphics.Path type: DIRECT \l}"];
Node_58 [shape=record,label="{58\:\ 0x0101|0x0101: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x0104 \l}"];
Node_59 [shape=record,label="{59\:\ 0x0103|0x0103: RETURN  (r1 I:android.graphics.Path) \l}"];
Node_60 [shape=record,label="{60\:\ 0x0104|0x0104: IGET  (r1 I:android.graphics.Matrix) = (r7 I:com.caverock.androidsvg.SVG$Text) com.caverock.androidsvg.SVG.Text.transform android.graphics.Matrix \l}"];
Node_61 [shape=record,label="{61\:\ 0x0106|0x0106: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x010d \l}"];
Node_62 [shape=record,label="{62\:\ 0x0108|0x0108: IGET  (r7 I:android.graphics.Matrix) = (r7 I:com.caverock.androidsvg.SVG$Text) com.caverock.androidsvg.SVG.Text.transform android.graphics.Matrix \l0x010a: INVOKE  \l  (r0 I:android.graphics.Path)\l  (r7 I:android.graphics.Matrix)\l android.graphics.Path.transform(android.graphics.Matrix):void type: VIRTUAL \l}"];
Node_63 [shape=record,label="{63\:\ 0x010d|0x010d: INVOKE  (r7 I:android.graphics.Path$FillType) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.getClipRuleFromState():android.graphics.Path$FillType type: DIRECT \l0x0111: INVOKE  \l  (r0 I:android.graphics.Path)\l  (r7 I:android.graphics.Path$FillType)\l android.graphics.Path.setFillType(android.graphics.Path$FillType):void type: VIRTUAL \l}"];
Node_64 [shape=record,label="{64\:\ 0x0114|0x0114: IGET  (r7 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0116: IGET  (r7 I:com.caverock.androidsvg.SVG$Style) = \l  (r7 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x0118: IGET  (r7 I:java.lang.String) = (r7 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.clipPath java.lang.String \l}"];
Node_65 [shape=record,label="{65\:\ 0x011a|0x011a: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x0129 \l}"];
Node_66 [shape=record,label="{66\:\ 0x011c|0x011c: IGET  (r7 I:com.caverock.androidsvg.SVG$Box) = (r6 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x011e: INVOKE  (r6 I:android.graphics.Path) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r6 I:com.caverock.androidsvg.SVG$SvgElement)\l  (r7 I:com.caverock.androidsvg.SVG$Box)\l com.caverock.androidsvg.SVGAndroidRenderer.calculateClipPath(com.caverock.androidsvg.SVG$SvgElement, com.caverock.androidsvg.SVG$Box):android.graphics.Path type: DIRECT \l}"];
Node_67 [shape=record,label="{67\:\ 0x0122|0x0122: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x0129 \l}"];
Node_68 [shape=record,label="{68\:\ 0x0124|0x0124: SGET  (r7 I:android.graphics.Path$Op) =  android.graphics.Path.Op.INTERSECT android.graphics.Path$Op \l0x0126: INVOKE  \l  (r0 I:android.graphics.Path)\l  (r6 I:android.graphics.Path)\l  (r7 I:android.graphics.Path$Op)\l android.graphics.Path.op(android.graphics.Path, android.graphics.Path$Op):boolean type: VIRTUAL \l}"];
Node_69 [shape=record,label="{69\:\ 0x0129|0x0129: IGET  (r6 I:java.util.Stack\<com.caverock.androidsvg.SVGAndroidRenderer$RendererState\>) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.stateStack java.util.Stack \l0x012b: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.Stack) java.util.Stack.pop():java.lang.Object type: VIRTUAL \l0x012f: CHECK_CAST  (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (com.caverock.androidsvg.SVGAndroidRenderer$RendererState) (r6 I:?[OBJECT, ARRAY]) \l0x0131: IPUT  \l  (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l}"];
Node_70 [shape=record,label="{70\:\ 0x0133|0x0133: RETURN  (r0 I:android.graphics.Path) \l}"];
Node_71 [shape=record,label="{71\:\ 0x0134|0x0134: CONST_STR  (r7 I:java.lang.String) =  \"Invalid %s element found in clipPath definition\" \l0x0136: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0138: INVOKE  (r6 I:java.lang.Class) = (r6 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x013c: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x0140: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x0142: INVOKE  (r7 I:java.lang.String), (r0 I:java.lang.Object[]) com.caverock.androidsvg.SVGAndroidRenderer.error(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
Node_72 [shape=record,label="{72\:\ 0x0145|0x0145: RETURN  (r1 I:android.graphics.Path) \l}"];
Node_73 [shape=record,label="{73\:\ 0x0146|0x0146: IGET  (r6 I:java.util.Stack\<com.caverock.androidsvg.SVGAndroidRenderer$RendererState\>) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.stateStack java.util.Stack \l0x0148: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.Stack) java.util.Stack.pop():java.lang.Object type: VIRTUAL \l0x014c: CHECK_CAST  (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (com.caverock.androidsvg.SVGAndroidRenderer$RendererState) (r6 I:?[OBJECT, ARRAY]) \l0x014e: IPUT  \l  (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l}"];
Node_74 [shape=record,label="{74\:\ 0x0150|0x0150: RETURN  (r1 I:android.graphics.Path) \l}"];
MethodNode[shape=record,label="{private android.graphics.Path com.caverock.androidsvg.SVGAndroidRenderer.objectToPath((r5 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r6 I:com.caverock.androidsvg.SVG$SvgElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=19\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_73;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_73[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_26;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_64;
Node_25 -> Node_64;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_55;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_46;
Node_32 -> Node_46;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_46;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_46;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_46;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_64;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_71;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_63;
Node_62 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_69;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_69;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_71 -> Node_72;
Node_73 -> Node_74;
}

