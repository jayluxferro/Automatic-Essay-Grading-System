digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.findInheritFromAncestorState(Lcom\/caverock\/androidsvg\/SVG$SvgObject;Lcom\/caverock\/androidsvg\/SVGAndroidRenderer$RendererState;)Lcom\/caverock\/androidsvg\/SVGAndroidRenderer$RendererState;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: INSTANCE_OF  (r1 I:boolean) = (r4 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$SvgElementBase \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0010 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x000b: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$SvgElementBase) = (com.caverock.androidsvg.SVG$SvgElementBase) (r2 I:?[OBJECT, ARRAY]) \l0x000d: INVOKE  (r0 I:java.util.List), (r1 I:int), (r2 I:java.lang.Object) java.util.List.add(int, java.lang.Object):void type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IGET  (r1 I:com.caverock.androidsvg.SVG$SvgContainer) = (r4 I:com.caverock.androidsvg.SVG$SvgObject) com.caverock.androidsvg.SVG.SvgObject.parent com.caverock.androidsvg.SVG$SvgContainer \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0035 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: INVOKE  (r4 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: INVOKE  (r0 I:boolean) = (r4 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: INVOKE  (r0 I:java.lang.Object) = (r4 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0022: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$SvgElementBase) = (com.caverock.androidsvg.SVG$SvgElementBase) (r0 I:?[OBJECT, ARRAY]) \l0x0024: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r0 I:com.caverock.androidsvg.SVG$SvgElementBase)\l com.caverock.androidsvg.SVGAndroidRenderer.updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState, com.caverock.androidsvg.SVG$SvgElementBase):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: IGET  (r4 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x002a: IGET  (r4 I:com.caverock.androidsvg.SVG$Box) = \l  (r4 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.viewBox com.caverock.androidsvg.SVG$Box \l0x002c: IPUT  \l  (r4 I:com.caverock.androidsvg.SVG$Box)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.viewBox com.caverock.androidsvg.SVG$Box \l0x002e: IGET  (r4 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0030: IGET  (r4 I:com.caverock.androidsvg.SVG$Box) = \l  (r4 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.viewPort com.caverock.androidsvg.SVG$Box \l0x0032: IPUT  \l  (r4 I:com.caverock.androidsvg.SVG$Box)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.viewPort com.caverock.androidsvg.SVG$Box \l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: RETURN  \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|0x0035: IGET  (r4 I:com.caverock.androidsvg.SVG$SvgContainer) = (r4 I:com.caverock.androidsvg.SVG$SvgObject) com.caverock.androidsvg.SVG.SvgObject.parent com.caverock.androidsvg.SVG$SvgContainer \l0x0037: CHECK_CAST  (r4 I:com.caverock.androidsvg.SVG$SvgObject) = (com.caverock.androidsvg.SVG$SvgObject) (r4 I:?[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private com.caverock.androidsvg.SVGAndroidRenderer$RendererState com.caverock.androidsvg.SVGAndroidRenderer.findInheritFromAncestorState((r3 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r4 I:com.caverock.androidsvg.SVG$SvgObject A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_7;
Node_10 -> Node_11;
Node_12 -> Node_1;
}

