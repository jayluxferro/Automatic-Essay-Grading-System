digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.makePathAndBoundingBox(Lcom\/caverock\/androidsvg\/SVG$Ellipse;)Landroid\/graphics\/Path;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0004: IGET  (r2 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Ellipse) com.caverock.androidsvg.SVG.Ellipse.cx com.caverock.androidsvg.SVG$Length \l0x0006: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r2 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Ellipse) com.caverock.androidsvg.SVG.Ellipse.cx com.caverock.androidsvg.SVG$Length \l0x000b: INVOKE  (r2 I:float) = \l  (r2 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IGET  (r4 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Ellipse) com.caverock.androidsvg.SVG.Ellipse.cy com.caverock.androidsvg.SVG$Length \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001b \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IGET  (r3 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Ellipse) com.caverock.androidsvg.SVG.Ellipse.cy com.caverock.androidsvg.SVG$Length \l0x0017: INVOKE  (r3 I:float) = \l  (r3 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: IGET  (r4 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Ellipse) com.caverock.androidsvg.SVG.Ellipse.rx com.caverock.androidsvg.SVG$Length \l0x001d: INVOKE  (r4 I:float) = \l  (r4 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l0x0021: IGET  (r5 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Ellipse) com.caverock.androidsvg.SVG.Ellipse.ry com.caverock.androidsvg.SVG$Length \l0x0023: INVOKE  (r5 I:float) = \l  (r5 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l0x0027: ARITH  (r11 I:float) = (r2 I:float) \- (r4 I:float) \l0x0029: ARITH  (r12 I:float) = (r3 I:float) \- (r5 I:float) \l0x002b: ARITH  (r13 I:float) = (r2 I:float) + (r4 I:float) \l0x002d: ARITH  (r14 I:float) = (r3 I:float) + (r5 I:float) \l0x002f: IGET  (r6 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$Ellipse) com.caverock.androidsvg.SVG.Ellipse.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0040 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|0x0033: NEW_INSTANCE  (r6 I:com.caverock.androidsvg.SVG$Box) =  com.caverock.androidsvg.SVG$Box \l0x0035: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x0037: ARITH  (r8 I:float) = (r4 I:float) * (r7 I:float) \l0x0039: ARITH  (r7 I:float) = (r7 I:float) * (r5 I:float) \l0x003b: INVOKE  \l  (r6 I:com.caverock.androidsvg.SVG$Box)\l  (r11 I:float)\l  (r12 I:float)\l  (r8 I:float)\l  (r7 I:float)\l com.caverock.androidsvg.SVG.Box.\<init\>(float, float, float, float):void type: DIRECT \l0x003e: IPUT  \l  (r6 I:com.caverock.androidsvg.SVG$Box)\l  (r1 I:com.caverock.androidsvg.SVG$Ellipse)\l com.caverock.androidsvg.SVG.Ellipse.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|0x0040: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1057841801(0x3f0d6289, float:0.5522848) ?[int, float, short, byte, char])\l \l0x0043: ARITH  (r15 I:float) = (r4 I:float) * (r1 I:float) \l0x0045: ARITH  (r1 I:float) = (r1 I:float) * (r5 I:float) \l0x0047: NEW_INSTANCE  (r10 I:android.graphics.Path) =  android.graphics.Path \l0x0049: INVOKE  (r10 I:android.graphics.Path) android.graphics.Path.\<init\>():void type: DIRECT \l0x004c: INVOKE  (r10 I:android.graphics.Path), (r2 I:float), (r12 I:float) android.graphics.Path.moveTo(float, float):void type: VIRTUAL \l0x004f: ARITH  (r16 I:float) = (r2 I:float) + (r15 I:float) \l0x0051: ARITH  (r17 I:float) = (r3 I:float) \- (r1 I:float) \l0x0053: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0054: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0056: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0057: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0058: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005a: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005b: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x005d: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005e: INVOKE  \l  (r4 I:android.graphics.Path)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:float)\l  (r9 I:float)\l  (r10 I:float)\l android.graphics.Path.cubicTo(float, float, float, float, float, float):void type: VIRTUAL \l0x0061: ARITH  (r1 I:float) = (r1 I:float) + (r3 I:float) \l0x0062: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0064: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0065: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0066: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0068: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0069: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006a: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006b: INVOKE  \l  (r4 I:android.graphics.Path)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:float)\l  (r9 I:float)\l  (r10 I:float)\l android.graphics.Path.cubicTo(float, float, float, float, float, float):void type: VIRTUAL \l0x006e: ARITH  (r13 I:float) = (r2 I:float) \- (r15 I:float) \l0x0070: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0071: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0072: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0073: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0074: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0075: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0076: INVOKE  \l  (r4 I:android.graphics.Path)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:float)\l  (r9 I:float)\l  (r10 I:float)\l android.graphics.Path.cubicTo(float, float, float, float, float, float):void type: VIRTUAL \l0x0079: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007a: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007c: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007d: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007e: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007f: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0080: INVOKE  \l  (r4 I:android.graphics.Path)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:float)\l  (r9 I:float)\l  (r10 I:float)\l android.graphics.Path.cubicTo(float, float, float, float, float, float):void type: VIRTUAL \l0x0083: INVOKE  (r18 I:android.graphics.Path) android.graphics.Path.close():void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0086|0x0086: RETURN  (r18 I:android.graphics.Path) \l}"];
MethodNode[shape=record,label="{private android.graphics.Path com.caverock.androidsvg.SVGAndroidRenderer.makePathAndBoundingBox((r19 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r20 I:com.caverock.androidsvg.SVG$Ellipse A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

