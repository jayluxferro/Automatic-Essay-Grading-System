digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.makeRadialGradient(ZLcom\/caverock\/androidsvg\/SVG$Box;Lcom\/caverock\/androidsvg\/SVG$SvgRadialGradient;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0004: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0006: IGET  (r4 I:java.lang.String) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.href java.lang.String \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r4 I:java.lang.String) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.href java.lang.String \l0x000c: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r3 I:com.caverock.androidsvg.SVG$GradientElement)\l  (r4 I:java.lang.String)\l com.caverock.androidsvg.SVGAndroidRenderer.fillInChainedGradientFields(com.caverock.androidsvg.SVG$GradientElement, java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IGET  (r4 I:java.lang.Boolean) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.gradientUnitsAreUser java.lang.Boolean \l0x0011: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IGET  (r4 I:java.lang.Boolean) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.gradientUnitsAreUser java.lang.Boolean \l0x0016: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001e \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0026 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: IGET  (r7 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r0 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0023: IGET  (r7 I:android.graphics.Paint) = \l  (r7 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.fillPaint android.graphics.Paint \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: IGET  (r7 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r0 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0028: IGET  (r7 I:android.graphics.Paint) = \l  (r7 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.strokePaint android.graphics.Paint \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0061 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|0x002c: NEW_INSTANCE  (r8 I:com.caverock.androidsvg.SVG$Length) =  com.caverock.androidsvg.SVG$Length \l0x002e: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (1112014848(0x42480000, float:50.0) ?[int, float, short, byte, char])\l \l0x0030: SGET  (r10 I:com.caverock.androidsvg.SVG$Unit) =  com.caverock.androidsvg.SVG.Unit.percent com.caverock.androidsvg.SVG$Unit \l0x0032: INVOKE  \l  (r8 I:com.caverock.androidsvg.SVG$Length)\l  (r9 I:float)\l  (r10 I:com.caverock.androidsvg.SVG$Unit)\l com.caverock.androidsvg.SVG.Length.\<init\>(float, com.caverock.androidsvg.SVG$Unit):void type: DIRECT \l0x0035: IGET  (r9 I:com.caverock.androidsvg.SVG$Length) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.cx com.caverock.androidsvg.SVG$Length \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0040 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|0x0039: IGET  (r9 I:com.caverock.androidsvg.SVG$Length) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.cx com.caverock.androidsvg.SVG$Length \l0x003b: INVOKE  (r9 I:float) = \l  (r9 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0040|0x0040: INVOKE  (r9 I:float) = \l  (r8 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0044|0x0044: IGET  (r10 I:com.caverock.androidsvg.SVG$Length) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.cy com.caverock.androidsvg.SVG$Length \l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|0x0046: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004f \l}"];
Node_19 [shape=record,label="{19\:\ 0x0048|0x0048: IGET  (r10 I:com.caverock.androidsvg.SVG$Length) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.cy com.caverock.androidsvg.SVG$Length \l0x004a: INVOKE  (r10 I:float) = \l  (r10 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x004f|0x004f: INVOKE  (r10 I:float) = \l  (r8 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0053|0x0053: IGET  (r11 I:com.caverock.androidsvg.SVG$Length) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.r com.caverock.androidsvg.SVG$Length \l}"];
Node_22 [shape=record,label="{22\:\ 0x0055|0x0055: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0059 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0057|0x0057: IGET  (r8 I:com.caverock.androidsvg.SVG$Length) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.r com.caverock.androidsvg.SVG$Length \l}"];
Node_24 [shape=record,label="{24\:\ 0x0059|0x0059: INVOKE  (r8 I:float) = \l  (r8 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValue(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l0x005d: MOVE  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005e: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005f: MOVE  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x0061|0x0061: IGET  (r8 I:com.caverock.androidsvg.SVG$Length) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.cx com.caverock.androidsvg.SVG$Length \l0x0063: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (1056964608(0x3f000000, float:0.5) ?[int, float, short, byte, char])\l \l0x0065: CONST  (r10 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x0067|0x0067: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0070 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0069|0x0069: IGET  (r8 I:com.caverock.androidsvg.SVG$Length) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.cx com.caverock.androidsvg.SVG$Length \l0x006b: INVOKE  (r8 I:float) = \l  (r8 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r10 I:float)\l com.caverock.androidsvg.SVG.Length.floatValue(com.caverock.androidsvg.SVGAndroidRenderer, float):float type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x0070|0x0070: CONST  (r8 I:?[int, float, short, byte, char]) = \l  (1056964608(0x3f000000, float:0.5) ?[int, float, short, byte, char])\l \l}"];
Node_29 [shape=record,label="{29\:\ 0x0072|0x0072: IGET  (r11 I:com.caverock.androidsvg.SVG$Length) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.cy com.caverock.androidsvg.SVG$Length \l}"];
Node_30 [shape=record,label="{30\:\ 0x0074|0x0074: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x007d \l}"];
Node_31 [shape=record,label="{31\:\ 0x0076|0x0076: IGET  (r11 I:com.caverock.androidsvg.SVG$Length) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.cy com.caverock.androidsvg.SVG$Length \l0x0078: INVOKE  (r11 I:float) = \l  (r11 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r10 I:float)\l com.caverock.androidsvg.SVG.Length.floatValue(com.caverock.androidsvg.SVGAndroidRenderer, float):float type: VIRTUAL \l}"];
Node_32 [shape=record,label="{32\:\ 0x007d|0x007d: CONST  (r11 I:?[int, float, short, byte, char]) = \l  (1056964608(0x3f000000, float:0.5) ?[int, float, short, byte, char])\l \l}"];
Node_33 [shape=record,label="{33\:\ 0x007f|0x007f: IGET  (r12 I:com.caverock.androidsvg.SVG$Length) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.r com.caverock.androidsvg.SVG$Length \l}"];
Node_34 [shape=record,label="{34\:\ 0x0081|0x0081: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0089 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0083|0x0083: IGET  (r9 I:com.caverock.androidsvg.SVG$Length) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.r com.caverock.androidsvg.SVG$Length \l0x0085: INVOKE  (r9 I:float) = \l  (r9 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r10 I:float)\l com.caverock.androidsvg.SVG.Length.floatValue(com.caverock.androidsvg.SVGAndroidRenderer, float):float type: VIRTUAL \l}"];
Node_36 [shape=record,label="{36\:\ 0x0089|0x0089: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x008a: MOVE  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x008b: MOVE  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_37 [shape=record,label="{37\:\ 0x008c|0x008c: INVOKE  (r19 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePush():void type: DIRECT \l0x008f: INVOKE  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r3 I:com.caverock.androidsvg.SVG$SvgObject)\l com.caverock.androidsvg.SVGAndroidRenderer.findInheritFromAncestorState(com.caverock.androidsvg.SVG$SvgObject):com.caverock.androidsvg.SVGAndroidRenderer$RendererState type: DIRECT \l0x0093: IPUT  \l  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0095: NEW_INSTANCE  (r8 I:android.graphics.Matrix) =  android.graphics.Matrix \l0x0097: INVOKE  (r8 I:android.graphics.Matrix) android.graphics.Matrix.\<init\>():void type: DIRECT \l}"];
Node_38 [shape=record,label="{38\:\ 0x009a|0x009a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x00aa \l}"];
Node_39 [shape=record,label="{39\:\ 0x009c|0x009c: IGET  (r4 I:float) = (r2 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minX float \l0x009e: IGET  (r9 I:float) = (r2 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minY float \l0x00a0: INVOKE  (r8 I:android.graphics.Matrix), (r4 I:float), (r9 I:float) android.graphics.Matrix.preTranslate(float, float):boolean type: VIRTUAL \l0x00a3: IGET  (r4 I:float) = (r2 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.width float \l0x00a5: IGET  (r2 I:float) = (r2 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.height float \l0x00a7: INVOKE  (r8 I:android.graphics.Matrix), (r4 I:float), (r2 I:float) android.graphics.Matrix.preScale(float, float):boolean type: VIRTUAL \l}"];
Node_40 [shape=record,label="{40\:\ 0x00aa|0x00aa: IGET  (r2 I:android.graphics.Matrix) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.gradientTransform android.graphics.Matrix \l}"];
Node_41 [shape=record,label="{41\:\ 0x00ac|0x00ac: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x00b3 \l}"];
Node_42 [shape=record,label="{42\:\ 0x00ae|0x00ae: IGET  (r2 I:android.graphics.Matrix) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.gradientTransform android.graphics.Matrix \l0x00b0: INVOKE  \l  (r8 I:android.graphics.Matrix)\l  (r2 I:android.graphics.Matrix)\l android.graphics.Matrix.preConcat(android.graphics.Matrix):boolean type: VIRTUAL \l}"];
Node_43 [shape=record,label="{43\:\ 0x00b3|0x00b3: IGET  (r2 I:java.util.List) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.children java.util.List \l0x00b5: INVOKE  (r2 I:int) = (r2 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_44 [shape=record,label="{44\:\ 0x00b9|0x00b9: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x00ca \l}"];
Node_45 [shape=record,label="{45\:\ 0x00bb|0x00bb: INVOKE  (r19 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePop():void type: DIRECT \l}"];
Node_46 [shape=record,label="{46\:\ 0x00be|0x00be: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x00c5 \l}"];
Node_47 [shape=record,label="{47\:\ 0x00c0|0x00c0: IGET  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r0 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x00c2: IPUT  \l  (r6 I:boolean)\l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.hasFill boolean \l}"];
Node_48 [shape=record,label="{48\:\ 0x00c5|0x00c5: IGET  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r0 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x00c7: IPUT  \l  (r6 I:boolean)\l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.hasStroke boolean \l}"];
Node_49 [shape=record,label="{49\:\ 0x00c9|0x00c9: RETURN   \l}"];
Node_50 [shape=record,label="{50\:\ 0x00ca|0x00ca: NEW_ARRAY  (r1 I:int[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x00cc: NEW_ARRAY  (r4 I:float[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x00ce: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (\-1082130432(0xffffffffbf800000, float:\-1.0) ?[int, float, short, byte, char])\l \l0x00d0: IGET  (r10 I:java.util.List) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.children java.util.List \l0x00d2: INVOKE  (r10 I:java.util.Iterator) = (r10 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_51 [shape=record,label="{51\:\ 0x00d6|0x00d6: INVOKE  (r11 I:boolean) = (r10 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l0x00da: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_52 [shape=record,label="{52\:\ 0x00db|0x00db: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x0128 \l}"];
Node_53 [shape=record,label="{53\:\ 0x00dd|0x00dd: INVOKE  (r11 I:java.lang.Object) = (r10 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x00e1: CHECK_CAST  (r11 I:com.caverock.androidsvg.SVG$SvgObject) = (com.caverock.androidsvg.SVG$SvgObject) (r11 I:?[OBJECT, ARRAY]) \l0x00e3: CHECK_CAST  (r11 I:com.caverock.androidsvg.SVG$Stop) = (com.caverock.androidsvg.SVG$Stop) (r11 I:?[OBJECT, ARRAY]) \l0x00e5: IGET  (r5 I:java.lang.Float) = (r11 I:com.caverock.androidsvg.SVG$Stop) com.caverock.androidsvg.SVG.Stop.offset java.lang.Float \l}"];
Node_54 [shape=record,label="{54\:\ 0x00e7|0x00e7: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x00ef \l}"];
Node_55 [shape=record,label="{55\:\ 0x00e9|0x00e9: IGET  (r5 I:java.lang.Float) = (r11 I:com.caverock.androidsvg.SVG$Stop) com.caverock.androidsvg.SVG.Stop.offset java.lang.Float \l0x00eb: INVOKE  (r12 I:float) = (r5 I:java.lang.Float) java.lang.Float.floatValue():float type: VIRTUAL \l}"];
Node_56 [shape=record,label="{56\:\ 0x00ef|0x00ef: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x00f9 \l}"];
Node_57 [shape=record,label="{57\:\ 0x00f1|0x00f1: CMP_L  (r5 I:int) = (r12 I:float), (r9 I:float) \l}"];
Node_58 [shape=record,label="{58\:\ 0x00f3|0x00f3: IF  (r5 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:60:0x00f6 \l}"];
Node_60 [shape=record,label="{60\:\ 0x00f6|0x00f6: APUT  \l  (r4 I:?[int, float][])\l  (r6 I:?[int, short, byte, char])\l  (r9 I:?[int, float])\l \l}"];
Node_61 [shape=record,label="{61\:\ 0x00f9|0x00f9: APUT  \l  (r4 I:?[int, float][])\l  (r6 I:?[int, short, byte, char])\l  (r12 I:?[int, float])\l \l0x00fb: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_62 [shape=record,label="{62\:\ 0x00fc|0x00fc: INVOKE  (r19 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePush():void type: DIRECT \l0x00ff: IGET  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r0 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0101: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r11 I:com.caverock.androidsvg.SVG$SvgElementBase)\l com.caverock.androidsvg.SVGAndroidRenderer.updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState, com.caverock.androidsvg.SVG$SvgElementBase):void type: DIRECT \l0x0104: IGET  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r0 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0106: IGET  (r5 I:com.caverock.androidsvg.SVG$Style) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x0108: IGET  (r5 I:com.caverock.androidsvg.SVG$SvgPaint) = (r5 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.stopColor com.caverock.androidsvg.SVG$SvgPaint \l0x010a: CHECK_CAST  (r5 I:com.caverock.androidsvg.SVG$Colour) = (com.caverock.androidsvg.SVG$Colour) (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_63 [shape=record,label="{63\:\ 0x010c|0x010c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x0110 \l}"];
Node_64 [shape=record,label="{64\:\ 0x010e|0x010e: SGET  (r5 I:com.caverock.androidsvg.SVG$Colour) =  com.caverock.androidsvg.SVG.Colour.BLACK com.caverock.androidsvg.SVG$Colour \l}"];
Node_65 [shape=record,label="{65\:\ 0x0110|0x0110: IGET  (r5 I:int) = (r5 I:com.caverock.androidsvg.SVG$Colour) com.caverock.androidsvg.SVG.Colour.colour int \l0x0112: IGET  (r11 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r0 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0114: IGET  (r11 I:com.caverock.androidsvg.SVG$Style) = \l  (r11 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x0116: IGET  (r11 I:java.lang.Float) = (r11 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.stopOpacity java.lang.Float \l0x0118: INVOKE  (r11 I:float) = (r11 I:java.lang.Float) java.lang.Float.floatValue():float type: VIRTUAL \l0x011c: INVOKE  (r5 I:int) = (r5 I:int), (r11 I:float) com.caverock.androidsvg.SVGAndroidRenderer.colourWithOpacity(int, float):int type: STATIC \l0x0120: APUT  \l  (r1 I:?[int, float][])\l  (r6 I:?[int, short, byte, char])\l  (r5 I:?[int, float])\l \l0x0122: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l0x0124: INVOKE  (r19 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePop():void type: DIRECT \l}"];
Node_66 [shape=record,label="{66\:\ 0x0128|0x0128: CMP_L  (r5 I:int) = (r15 I:float), (r12 I:float) \l}"];
Node_67 [shape=record,label="{67\:\ 0x012a|0x012a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:81:0x016e \l}"];
Node_68 [shape=record,label="{68\:\ 0x012c|0x012c: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_69 [shape=record,label="{69\:\ 0x012d|0x012d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x0130 \l}"];
Node_71 [shape=record,label="{71\:\ 0x0130|0x0130: SGET  (r2 I:android.graphics.Shader$TileMode) =  android.graphics.Shader.TileMode.CLAMP android.graphics.Shader$TileMode \l0x0132: IGET  (r5 I:com.caverock.androidsvg.SVG$GradientSpread) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.spreadMethod com.caverock.androidsvg.SVG$GradientSpread \l}"];
Node_72 [shape=record,label="{72\:\ 0x0134|0x0134: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:79:0x0147 \l}"];
Node_73 [shape=record,label="{73\:\ 0x0136|0x0136: IGET  (r5 I:com.caverock.androidsvg.SVG$GradientSpread) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.spreadMethod com.caverock.androidsvg.SVG$GradientSpread \l0x0138: SGET  (r6 I:com.caverock.androidsvg.SVG$GradientSpread) =  com.caverock.androidsvg.SVG.GradientSpread.reflect com.caverock.androidsvg.SVG$GradientSpread \l}"];
Node_74 [shape=record,label="{74\:\ 0x013a|0x013a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:76:0x013f \l}"];
Node_75 [shape=record,label="{75\:\ 0x013c|0x013c: SGET  (r2 I:android.graphics.Shader$TileMode) =  android.graphics.Shader.TileMode.MIRROR android.graphics.Shader$TileMode \l}"];
Node_76 [shape=record,label="{76\:\ 0x013f|0x013f: IGET  (r3 I:com.caverock.androidsvg.SVG$GradientSpread) = (r3 I:com.caverock.androidsvg.SVG$SvgRadialGradient) com.caverock.androidsvg.SVG.SvgRadialGradient.spreadMethod com.caverock.androidsvg.SVG$GradientSpread \l0x0141: SGET  (r5 I:com.caverock.androidsvg.SVG$GradientSpread) =  com.caverock.androidsvg.SVG.GradientSpread.repeat com.caverock.androidsvg.SVG$GradientSpread \l}"];
Node_77 [shape=record,label="{77\:\ 0x0143|0x0143: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:79:0x0147 \l}"];
Node_78 [shape=record,label="{78\:\ 0x0145|0x0145: SGET  (r2 I:android.graphics.Shader$TileMode) =  android.graphics.Shader.TileMode.REPEAT android.graphics.Shader$TileMode \l}"];
Node_79 [shape=record,label="{79\:\ 0x0147|0x0147: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0149: INVOKE  (r19 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePop():void type: DIRECT \l0x014c: NEW_INSTANCE  (r2 I:android.graphics.RadialGradient) =  android.graphics.RadialGradient \l0x014e: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x014f: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0151: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0153: INVOKE  \l  (r12 I:android.graphics.RadialGradient)\l  (r13 I:float)\l  (r14 I:float)\l  (r15 I:float)\l  (r16 I:int[])\l  (r17 I:float[])\l  (r18 I:android.graphics.Shader$TileMode)\l android.graphics.RadialGradient.\<init\>(float, float, float, int[], float[], android.graphics.Shader$TileMode):void type: DIRECT \l0x0156: INVOKE  \l  (r2 I:android.graphics.RadialGradient)\l  (r8 I:android.graphics.Matrix)\l android.graphics.RadialGradient.setLocalMatrix(android.graphics.Matrix):void type: VIRTUAL \l0x0159: INVOKE  \l  (r7 I:android.graphics.Paint)\l  (r2 I:android.graphics.Shader)\l android.graphics.Paint.setShader(android.graphics.Shader):android.graphics.Shader type: VIRTUAL \l0x015c: IGET  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r0 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x015e: IGET  (r1 I:com.caverock.androidsvg.SVG$Style) = \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x0160: IGET  (r1 I:java.lang.Float) = (r1 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.fillOpacity java.lang.Float \l0x0162: INVOKE  (r1 I:float) = (r1 I:java.lang.Float) java.lang.Float.floatValue():float type: VIRTUAL \l0x0166: INVOKE  (r1 I:int) = (r1 I:float) com.caverock.androidsvg.SVGAndroidRenderer.clamp255(float):int type: STATIC \l0x016a: INVOKE  (r7 I:android.graphics.Paint), (r1 I:int) android.graphics.Paint.setAlpha(int):void type: VIRTUAL \l}"];
Node_80 [shape=record,label="{80\:\ 0x016d|0x016d: RETURN   \l}"];
Node_81 [shape=record,label="{81\:\ 0x016e|0x016e: INVOKE  (r19 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePop():void type: DIRECT \l0x0171: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0172: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x0173: AGET  (r1 I:?[int, float]) = (r1 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0175: INVOKE  (r7 I:android.graphics.Paint), (r1 I:int) android.graphics.Paint.setColor(int):void type: VIRTUAL \l}"];
Node_82 [shape=record,label="{82\:\ 0x0178|0x0178: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.makeRadialGradient((r19 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r20 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:com.caverock.androidsvg.SVG$Box A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:com.caverock.androidsvg.SVG$SvgRadialGradient A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_25;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_37;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_50;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_66;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_61;
Node_57 -> Node_58;
Node_58 -> Node_60;
Node_58 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_65;
Node_64 -> Node_65;
Node_65 -> Node_51;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_81;
Node_68 -> Node_69;
Node_69 -> Node_71;
Node_69 -> Node_81[style=dashed];
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_79;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_76;
Node_75 -> Node_79;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_79;
Node_78 -> Node_79;
Node_79 -> Node_80;
Node_81 -> Node_82;
}

