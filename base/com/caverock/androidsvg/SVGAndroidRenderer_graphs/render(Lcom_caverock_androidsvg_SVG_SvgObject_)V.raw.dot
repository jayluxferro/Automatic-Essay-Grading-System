digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.render(Lcom\/caverock\/androidsvg\/SVG$SvgObject;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$NotDirectlyRendered \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: INVOKE  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePush():void type: DIRECT \l0x0008: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$SvgObject)\l com.caverock.androidsvg.SVGAndroidRenderer.checkXMLSpaceAttribute(com.caverock.androidsvg.SVG$SvgObject):void type: DIRECT \l0x000b: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Svg \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0016 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$Svg) = (com.caverock.androidsvg.SVG$Svg) (r2 I:?[OBJECT, ARRAY]) \l0x0011: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$Svg)\l com.caverock.androidsvg.SVGAndroidRenderer.render(com.caverock.androidsvg.SVG$Svg):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Use \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0021 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$Use) = (com.caverock.androidsvg.SVG$Use) (r2 I:?[OBJECT, ARRAY]) \l0x001c: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$Use)\l com.caverock.androidsvg.SVGAndroidRenderer.render(com.caverock.androidsvg.SVG$Use):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Switch \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002c \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$Switch) = (com.caverock.androidsvg.SVG$Switch) (r2 I:?[OBJECT, ARRAY]) \l0x0027: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$Switch)\l com.caverock.androidsvg.SVGAndroidRenderer.render(com.caverock.androidsvg.SVG$Switch):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|0x002c: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Group \l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|0x002e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0036 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|0x0030: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$Group) = (com.caverock.androidsvg.SVG$Group) (r2 I:?[OBJECT, ARRAY]) \l0x0032: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$Group)\l com.caverock.androidsvg.SVGAndroidRenderer.render(com.caverock.androidsvg.SVG$Group):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0036|0x0036: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Image \l}"];
Node_16 [shape=record,label="{16\:\ 0x0038|0x0038: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0040 \l}"];
Node_17 [shape=record,label="{17\:\ 0x003a|0x003a: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$Image) = (com.caverock.androidsvg.SVG$Image) (r2 I:?[OBJECT, ARRAY]) \l0x003c: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$Image)\l com.caverock.androidsvg.SVGAndroidRenderer.render(com.caverock.androidsvg.SVG$Image):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x0040|0x0040: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Path \l}"];
Node_19 [shape=record,label="{19\:\ 0x0042|0x0042: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x004a \l}"];
Node_20 [shape=record,label="{20\:\ 0x0044|0x0044: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$Path) = (com.caverock.androidsvg.SVG$Path) (r2 I:?[OBJECT, ARRAY]) \l0x0046: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$Path)\l com.caverock.androidsvg.SVGAndroidRenderer.render(com.caverock.androidsvg.SVG$Path):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x004a|0x004a: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Rect \l}"];
Node_22 [shape=record,label="{22\:\ 0x004c|0x004c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0054 \l}"];
Node_23 [shape=record,label="{23\:\ 0x004e|0x004e: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$Rect) = (com.caverock.androidsvg.SVG$Rect) (r2 I:?[OBJECT, ARRAY]) \l0x0050: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$Rect)\l com.caverock.androidsvg.SVGAndroidRenderer.render(com.caverock.androidsvg.SVG$Rect):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x0054|0x0054: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Circle \l}"];
Node_25 [shape=record,label="{25\:\ 0x0056|0x0056: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x005e \l}"];
Node_26 [shape=record,label="{26\:\ 0x0058|0x0058: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$Circle) = (com.caverock.androidsvg.SVG$Circle) (r2 I:?[OBJECT, ARRAY]) \l0x005a: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$Circle)\l com.caverock.androidsvg.SVGAndroidRenderer.render(com.caverock.androidsvg.SVG$Circle):void type: DIRECT \l}"];
Node_27 [shape=record,label="{27\:\ 0x005e|0x005e: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Ellipse \l}"];
Node_28 [shape=record,label="{28\:\ 0x0060|0x0060: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0068 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0062|0x0062: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$Ellipse) = (com.caverock.androidsvg.SVG$Ellipse) (r2 I:?[OBJECT, ARRAY]) \l0x0064: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$Ellipse)\l com.caverock.androidsvg.SVGAndroidRenderer.render(com.caverock.androidsvg.SVG$Ellipse):void type: DIRECT \l}"];
Node_30 [shape=record,label="{30\:\ 0x0068|0x0068: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Line \l}"];
Node_31 [shape=record,label="{31\:\ 0x006a|0x006a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0072 \l}"];
Node_32 [shape=record,label="{32\:\ 0x006c|0x006c: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$Line) = (com.caverock.androidsvg.SVG$Line) (r2 I:?[OBJECT, ARRAY]) \l0x006e: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$Line)\l com.caverock.androidsvg.SVGAndroidRenderer.render(com.caverock.androidsvg.SVG$Line):void type: DIRECT \l}"];
Node_33 [shape=record,label="{33\:\ 0x0072|0x0072: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Polygon \l}"];
Node_34 [shape=record,label="{34\:\ 0x0074|0x0074: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x007c \l}"];
Node_35 [shape=record,label="{35\:\ 0x0076|0x0076: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$Polygon) = (com.caverock.androidsvg.SVG$Polygon) (r2 I:?[OBJECT, ARRAY]) \l0x0078: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$Polygon)\l com.caverock.androidsvg.SVGAndroidRenderer.render(com.caverock.androidsvg.SVG$Polygon):void type: DIRECT \l}"];
Node_36 [shape=record,label="{36\:\ 0x007c|0x007c: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$PolyLine \l}"];
Node_37 [shape=record,label="{37\:\ 0x007e|0x007e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0086 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0080|0x0080: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$PolyLine) = (com.caverock.androidsvg.SVG$PolyLine) (r2 I:?[OBJECT, ARRAY]) \l0x0082: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$PolyLine)\l com.caverock.androidsvg.SVGAndroidRenderer.render(com.caverock.androidsvg.SVG$PolyLine):void type: DIRECT \l}"];
Node_39 [shape=record,label="{39\:\ 0x0086|0x0086: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Text \l}"];
Node_40 [shape=record,label="{40\:\ 0x0088|0x0088: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x008f \l}"];
Node_41 [shape=record,label="{41\:\ 0x008a|0x008a: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$Text) = (com.caverock.androidsvg.SVG$Text) (r2 I:?[OBJECT, ARRAY]) \l0x008c: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$Text)\l com.caverock.androidsvg.SVGAndroidRenderer.render(com.caverock.androidsvg.SVG$Text):void type: DIRECT \l}"];
Node_42 [shape=record,label="{42\:\ 0x008f|0x008f: INVOKE  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePop():void type: DIRECT \l}"];
Node_43 [shape=record,label="{43\:\ 0x0092|0x0092: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.render((r1 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r2 I:com.caverock.androidsvg.SVG$SvgObject A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_42;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_42;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_42;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_42;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_42;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_42;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_42;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_42;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_42;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_42;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_42;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_42;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
}

