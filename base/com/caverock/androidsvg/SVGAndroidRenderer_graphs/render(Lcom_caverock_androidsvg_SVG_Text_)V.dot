digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.render(Lcom\/caverock\/androidsvg\/SVG$Text;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|debug(\"Text render\", new java.lang.Object[0])\lupdateStyleForElement(r9.state, r10)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|if (display() != false) goto L_0x0014\l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014}"];
Node_4 [shape=record,label="{4\:\ 0x0016|if (r10.transform == null) goto L_0x001f\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|r9.canvas.concat(r10.transform)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|r2 = 0.0f\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|if (r10.f124x == null) goto L_0x003a\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024}"];
Node_9 [shape=record,label="{9\:\ 0x002a|if (r10.f124x.size() != 0) goto L_0x002d\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|float r0 = ((com.caverock.androidsvg.SVG.Length) r10.f124x.get(0)).floatValueX(r9)\l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|r0 = 0.0f\l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|PHI: r0 \l  PHI: (r0v5 float) = (r0v10 float), (r0v16 float) binds: [B:11:0x003a, B:10:0x002d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|if (r10.f125y == null) goto L_0x0055\l}"];
Node_14 [shape=record,label="{14\:\ 0x003f}"];
Node_15 [shape=record,label="{15\:\ 0x0045|if (r10.f125y.size() != 0) goto L_0x0048\l}"];
Node_16 [shape=record,label="{16\:\ 0x0048|float r3 = ((com.caverock.androidsvg.SVG.Length) r10.f125y.get(0)).floatValueY(r9)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0055|r3 = 0.0f\l}"];
Node_18 [shape=record,label="{18\:\ 0x0056|PHI: r3 \l  PHI: (r3v1 float) = (r3v3 float), (r3v9 float) binds: [B:17:0x0055, B:16:0x0048] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0058|if (r10.f122dx == null) goto L_0x0070\l}"];
Node_20 [shape=record,label="{20\:\ 0x005a}"];
Node_21 [shape=record,label="{21\:\ 0x0060|if (r10.f122dx.size() != 0) goto L_0x0063\l}"];
Node_22 [shape=record,label="{22\:\ 0x0063|float r4 = ((com.caverock.androidsvg.SVG.Length) r10.f122dx.get(0)).floatValueX(r9)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0070|r4 = 0.0f\l}"];
Node_24 [shape=record,label="{24\:\ 0x0071|PHI: r4 \l  PHI: (r4v1 float) = (r4v2 float), (r4v8 float) binds: [B:23:0x0070, B:22:0x0063] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0073|if (r10.f123dy == null) goto L_0x008a\l}"];
Node_26 [shape=record,label="{26\:\ 0x0075}"];
Node_27 [shape=record,label="{27\:\ 0x007b|if (r10.f123dy.size() != 0) goto L_0x007e\l}"];
Node_28 [shape=record,label="{28\:\ 0x007e|float r2 = ((com.caverock.androidsvg.SVG.Length) r10.f123dy.get(0)).floatValueY(r9)\l}"];
Node_29 [shape=record,label="{29\:\ 0x008a|PHI: r2 \l  PHI: (r2v2 float) = (r2v1 float), (r2v1 float), (r2v4 float) binds: [B:25:0x0073, B:27:0x007b, B:28:0x007e] A[DONT_GENERATE, DONT_INLINE]\l|com.caverock.androidsvg.SVG$Style$TextAnchor r1 = getAnchorPosition()\l}"];
Node_30 [shape=record,label="{30\:\ 0x0090|if (r1 == com.caverock.androidsvg.SVG.Style.TextAnchor.Start) goto L_0x00a0\l}"];
Node_31 [shape=record,label="{31\:\ 0x0092|float r5 = calculateTextWidth(r10)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0098|if (r1 != com.caverock.androidsvg.SVG.Style.TextAnchor.Middle) goto L_0x009f\l}"];
Node_33 [shape=record,label="{33\:\ 0x009a|float r0 = r0 \- (r5 \/ 2.0f)\l}"];
Node_34 [shape=record,label="{34\:\ 0x009f|float r0 = r0 \- r5\l}"];
Node_35 [shape=record,label="{35\:\ 0x00a0|PHI: r0 \l  PHI: (r0v6 float) = (r0v5 float), (r0v8 float), (r0v9 float) binds: [B:30:0x0090, B:34:0x009f, B:33:0x009a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_36 [shape=record,label="{36\:\ 0x00a2|if (r10.boundingBox != null) goto L_0x00c7\l}"];
Node_37 [shape=record,label="{37\:\ 0x00a4|com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator r1 = new com.caverock.androidsvg.SVGAndroidRenderer.TextBoundsCalculator(r9, r0, r3)\lenumerateTextSpans(r10, r1)\lr10.boundingBox = new com.caverock.androidsvg.SVG.Box(r1.bbox.left, r1.bbox.top, r1.bbox.width(), r1.bbox.height())\l}"];
Node_38 [shape=record,label="{38\:\ 0x00c7|updateParentBoundingBox(r10)\lcheckForGradientsAndPatterns(r10)\lcheckForClipPath(r10)\lboolean r1 = pushLayer()\lenumerateTextSpans(r10, new com.caverock.androidsvg.SVGAndroidRenderer.PlainTextDrawer(r9, r0 + r4, r3 + r2))\l}"];
Node_39 [shape=record,label="{39\:\ 0x00de|if (r1 == false) goto L_?\l}"];
Node_40 [shape=record,label="{40\:\ 0x00e0|popLayer(r10)\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.render((r9v0 'this' com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r10v0 com.caverock.androidsvg.SVG$Text A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_35;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_41;
}

