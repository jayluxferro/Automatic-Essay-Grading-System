digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.fillWithPattern(Lcom\/caverock\/androidsvg\/SVG$SvgElement;Landroid\/graphics\/Path;Lcom\/caverock\/androidsvg\/SVG$Pattern;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0004: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0006: IGET  (r3 I:java.lang.Boolean) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.patternUnitsAreUser java.lang.Boolean \l0x0008: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0009: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IGET  (r3 I:java.lang.Boolean) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.patternUnitsAreUser java.lang.Boolean \l0x000e: INVOKE  (r3 I:boolean) = (r3 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IGET  (r6 I:java.lang.String) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.href java.lang.String \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0020 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: IGET  (r6 I:java.lang.String) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.href java.lang.String \l0x001d: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$Pattern)\l  (r6 I:java.lang.String)\l com.caverock.androidsvg.SVGAndroidRenderer.fillInChainedPatternFields(com.caverock.androidsvg.SVG$Pattern, java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0059 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: IGET  (r3 I:com.caverock.androidsvg.SVG$Length) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.x com.caverock.androidsvg.SVG$Length \l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|0x0025: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002e \l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|0x0027: IGET  (r3 I:com.caverock.androidsvg.SVG$Length) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.x com.caverock.androidsvg.SVG$Length \l0x0029: INVOKE  (r3 I:float) = \l  (r3 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x002e|0x002e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|0x002f: IGET  (r7 I:com.caverock.androidsvg.SVG$Length) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.y com.caverock.androidsvg.SVG$Length \l}"];
Node_16 [shape=record,label="{16\:\ 0x0031|0x0031: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x003a \l}"];
Node_17 [shape=record,label="{17\:\ 0x0033|0x0033: IGET  (r7 I:com.caverock.androidsvg.SVG$Length) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.y com.caverock.androidsvg.SVG$Length \l0x0035: INVOKE  (r7 I:float) = \l  (r7 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x003a|0x003a: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x003b|0x003b: IGET  (r8 I:com.caverock.androidsvg.SVG$Length) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.width com.caverock.androidsvg.SVG$Length \l}"];
Node_20 [shape=record,label="{20\:\ 0x003d|0x003d: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0046 \l}"];
Node_21 [shape=record,label="{21\:\ 0x003f|0x003f: IGET  (r8 I:com.caverock.androidsvg.SVG$Length) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.width com.caverock.androidsvg.SVG$Length \l0x0041: INVOKE  (r8 I:float) = \l  (r8 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x0046|0x0046: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x0047|0x0047: IGET  (r9 I:com.caverock.androidsvg.SVG$Length) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.height com.caverock.androidsvg.SVG$Length \l}"];
Node_24 [shape=record,label="{24\:\ 0x0049|0x0049: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0052 \l}"];
Node_25 [shape=record,label="{25\:\ 0x004b|0x004b: IGET  (r9 I:com.caverock.androidsvg.SVG$Length) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.height com.caverock.androidsvg.SVG$Length \l0x004d: INVOKE  (r9 I:float) = \l  (r9 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0052|0x0052: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_27 [shape=record,label="{27\:\ 0x0053|0x0053: MOVE  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0055: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0056: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_28 [shape=record,label="{28\:\ 0x0059|0x0059: IGET  (r3 I:com.caverock.androidsvg.SVG$Length) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.x com.caverock.androidsvg.SVG$Length \l0x005b: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l}"];
Node_29 [shape=record,label="{29\:\ 0x005d|0x005d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0066 \l}"];
Node_30 [shape=record,label="{30\:\ 0x005f|0x005f: IGET  (r3 I:com.caverock.androidsvg.SVG$Length) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.x com.caverock.androidsvg.SVG$Length \l0x0061: INVOKE  (r3 I:float) = \l  (r3 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r7 I:float)\l com.caverock.androidsvg.SVG.Length.floatValue(com.caverock.androidsvg.SVGAndroidRenderer, float):float type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x0066|0x0066: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_32 [shape=record,label="{32\:\ 0x0067|0x0067: IGET  (r8 I:com.caverock.androidsvg.SVG$Length) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.y com.caverock.androidsvg.SVG$Length \l}"];
Node_33 [shape=record,label="{33\:\ 0x0069|0x0069: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0072 \l}"];
Node_34 [shape=record,label="{34\:\ 0x006b|0x006b: IGET  (r8 I:com.caverock.androidsvg.SVG$Length) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.y com.caverock.androidsvg.SVG$Length \l0x006d: INVOKE  (r8 I:float) = \l  (r8 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r7 I:float)\l com.caverock.androidsvg.SVG.Length.floatValue(com.caverock.androidsvg.SVGAndroidRenderer, float):float type: VIRTUAL \l}"];
Node_35 [shape=record,label="{35\:\ 0x0072|0x0072: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_36 [shape=record,label="{36\:\ 0x0073|0x0073: IGET  (r9 I:com.caverock.androidsvg.SVG$Length) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.width com.caverock.androidsvg.SVG$Length \l}"];
Node_37 [shape=record,label="{37\:\ 0x0075|0x0075: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x007e \l}"];
Node_38 [shape=record,label="{38\:\ 0x0077|0x0077: IGET  (r9 I:com.caverock.androidsvg.SVG$Length) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.width com.caverock.androidsvg.SVG$Length \l0x0079: INVOKE  (r9 I:float) = \l  (r9 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r7 I:float)\l com.caverock.androidsvg.SVG.Length.floatValue(com.caverock.androidsvg.SVGAndroidRenderer, float):float type: VIRTUAL \l}"];
Node_39 [shape=record,label="{39\:\ 0x007e|0x007e: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_40 [shape=record,label="{40\:\ 0x007f|0x007f: IGET  (r10 I:com.caverock.androidsvg.SVG$Length) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.height com.caverock.androidsvg.SVG$Length \l}"];
Node_41 [shape=record,label="{41\:\ 0x0081|0x0081: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x008a \l}"];
Node_42 [shape=record,label="{42\:\ 0x0083|0x0083: IGET  (r10 I:com.caverock.androidsvg.SVG$Length) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.height com.caverock.androidsvg.SVG$Length \l0x0085: INVOKE  (r7 I:float) = \l  (r10 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r7 I:float)\l com.caverock.androidsvg.SVG.Length.floatValue(com.caverock.androidsvg.SVGAndroidRenderer, float):float type: VIRTUAL \l}"];
Node_43 [shape=record,label="{43\:\ 0x008a|0x008a: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_44 [shape=record,label="{44\:\ 0x008b|0x008b: IGET  (r10 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x008d: IGET  (r10 I:float) = (r10 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minX float \l0x008f: IGET  (r11 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x0091: IGET  (r11 I:float) = (r11 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.width float \l0x0093: ARITH  (r3 I:float) = (r3 I:float) * (r11 I:float) \l0x0095: ARITH  (r3 I:float) = (r3 I:float) + (r10 I:float) \l0x0096: IGET  (r10 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x0098: IGET  (r10 I:float) = (r10 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minY float \l0x009a: IGET  (r11 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x009c: IGET  (r11 I:float) = (r11 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.height float \l0x009e: ARITH  (r8 I:float) = (r8 I:float) * (r11 I:float) \l0x00a0: ARITH  (r8 I:float) = (r8 I:float) + (r10 I:float) \l0x00a1: IGET  (r10 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x00a3: IGET  (r10 I:float) = (r10 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.width float \l0x00a5: ARITH  (r9 I:float) = (r9 I:float) * (r10 I:float) \l0x00a7: IGET  (r10 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x00a9: IGET  (r10 I:float) = (r10 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.height float \l0x00ab: ARITH  (r7 I:float) = (r7 I:float) * (r10 I:float) \l0x00ad: MOVE  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00af: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b0: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_45 [shape=record,label="{45\:\ 0x00b2|0x00b2: CMP_L  (r10 I:int) = (r8 I:float), (r6 I:float) \l}"];
Node_46 [shape=record,label="{46\:\ 0x00b4|0x00b4: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:107:0x0259 \l}"];
Node_47 [shape=record,label="{47\:\ 0x00b6|0x00b6: CMP_L  (r10 I:int) = (r7 I:float), (r6 I:float) \l}"];
Node_48 [shape=record,label="{48\:\ 0x00b8|0x00b8: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x00bc \l}"];
Node_50 [shape=record,label="{50\:\ 0x00bc|0x00bc: IGET  (r10 I:com.caverock.androidsvg.PreserveAspectRatio) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.preserveAspectRatio com.caverock.androidsvg.PreserveAspectRatio \l}"];
Node_51 [shape=record,label="{51\:\ 0x00be|0x00be: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x00c3 \l}"];
Node_52 [shape=record,label="{52\:\ 0x00c0|0x00c0: IGET  (r10 I:com.caverock.androidsvg.PreserveAspectRatio) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.preserveAspectRatio com.caverock.androidsvg.PreserveAspectRatio \l}"];
Node_53 [shape=record,label="{53\:\ 0x00c3|0x00c3: SGET  (r10 I:com.caverock.androidsvg.PreserveAspectRatio) =  com.caverock.androidsvg.PreserveAspectRatio.LETTERBOX com.caverock.androidsvg.PreserveAspectRatio \l}"];
Node_54 [shape=record,label="{54\:\ 0x00c5|0x00c5: INVOKE  (r18 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePush():void type: DIRECT \l0x00c8: IGET  (r11 I:android.graphics.Canvas) = (r0 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.canvas android.graphics.Canvas \l0x00ca: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00cc: INVOKE  \l  (r11 I:android.graphics.Canvas)\l  (r12 I:android.graphics.Path)\l android.graphics.Canvas.clipPath(android.graphics.Path):boolean type: VIRTUAL \l0x00cf: NEW_INSTANCE  (r11 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) =  com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x00d1: INVOKE  \l  (r11 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.\<init\>(com.caverock.androidsvg.SVGAndroidRenderer):void type: DIRECT \l0x00d4: INVOKE  (r12 I:com.caverock.androidsvg.SVG$Style) =  com.caverock.androidsvg.SVG.Style.getDefaultStyle():com.caverock.androidsvg.SVG$Style type: STATIC \l0x00d8: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r11 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r12 I:com.caverock.androidsvg.SVG$Style)\l com.caverock.androidsvg.SVGAndroidRenderer.updateStyle(com.caverock.androidsvg.SVGAndroidRenderer$RendererState, com.caverock.androidsvg.SVG$Style):void type: DIRECT \l0x00db: IGET  (r12 I:com.caverock.androidsvg.SVG$Style) = \l  (r11 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x00dd: INVOKE  (r13 I:java.lang.Boolean) = (r5 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l0x00e1: IPUT  \l  (r13 I:java.lang.Boolean)\l  (r12 I:com.caverock.androidsvg.SVG$Style)\l com.caverock.androidsvg.SVG.Style.overflow java.lang.Boolean \l0x00e3: INVOKE  (r11 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$SvgObject)\l  (r11 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.findInheritFromAncestorState(com.caverock.androidsvg.SVG$SvgObject, com.caverock.androidsvg.SVGAndroidRenderer$RendererState):com.caverock.androidsvg.SVGAndroidRenderer$RendererState type: DIRECT \l0x00e7: IPUT  \l  (r11 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x00e9: IGET  (r11 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x00eb: IGET  (r12 I:android.graphics.Matrix) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.patternTransform android.graphics.Matrix \l}"];
Node_55 [shape=record,label="{55\:\ 0x00ed|0x00ed: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:74:0x01a0 \l}"];
Node_56 [shape=record,label="{56\:\ 0x00ef|0x00ef: IGET  (r12 I:android.graphics.Canvas) = (r0 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.canvas android.graphics.Canvas \l0x00f1: IGET  (r13 I:android.graphics.Matrix) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.patternTransform android.graphics.Matrix \l0x00f3: INVOKE  \l  (r12 I:android.graphics.Canvas)\l  (r13 I:android.graphics.Matrix)\l android.graphics.Canvas.concat(android.graphics.Matrix):void type: VIRTUAL \l0x00f6: NEW_INSTANCE  (r12 I:android.graphics.Matrix) =  android.graphics.Matrix \l0x00f8: INVOKE  (r12 I:android.graphics.Matrix) android.graphics.Matrix.\<init\>():void type: DIRECT \l0x00fb: IGET  (r13 I:android.graphics.Matrix) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.patternTransform android.graphics.Matrix \l0x00fd: INVOKE  (r13 I:boolean) = \l  (r13 I:android.graphics.Matrix)\l  (r12 I:android.graphics.Matrix)\l android.graphics.Matrix.invert(android.graphics.Matrix):boolean type: VIRTUAL \l}"];
Node_57 [shape=record,label="{57\:\ 0x0101|0x0101: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:74:0x01a0 \l}"];
Node_58 [shape=record,label="{58\:\ 0x0103|0x0103: CONST  (r11 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0105: NEW_ARRAY  (r11 I:float[]) = (r11 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0107: IGET  (r13 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x0109: IGET  (r13 I:float) = (r13 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minX float \l0x010b: APUT  \l  (r11 I:?[int, float][])\l  (r5 I:?[int, short, byte, char])\l  (r13 I:?[int, float])\l \l0x010d: IGET  (r13 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x010f: IGET  (r13 I:float) = (r13 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minY float \l0x0111: APUT  \l  (r11 I:?[int, float][])\l  (r4 I:?[int, short, byte, char])\l  (r13 I:?[int, float])\l \l0x0113: IGET  (r13 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x0115: INVOKE  (r13 I:float) = (r13 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.maxX():float type: VIRTUAL \l0x0119: CONST  (r14 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x011a: APUT  \l  (r11 I:?[int, float][])\l  (r14 I:?[int, short, byte, char])\l  (r13 I:?[int, float])\l \l0x011c: CONST  (r13 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x011d: IGET  (r15 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x011f: IGET  (r15 I:float) = (r15 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minY float \l0x0121: APUT  \l  (r11 I:?[int, float][])\l  (r13 I:?[int, short, byte, char])\l  (r15 I:?[int, float])\l \l0x0123: CONST  (r13 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0124: IGET  (r15 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x0126: INVOKE  (r15 I:float) = (r15 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.maxX():float type: VIRTUAL \l0x012a: APUT  \l  (r11 I:?[int, float][])\l  (r13 I:?[int, short, byte, char])\l  (r15 I:?[int, float])\l \l0x012c: CONST  (r13 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x012d: IGET  (r15 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x012f: INVOKE  (r15 I:float) = (r15 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.maxY():float type: VIRTUAL \l0x0133: APUT  \l  (r11 I:?[int, float][])\l  (r13 I:?[int, short, byte, char])\l  (r15 I:?[int, float])\l \l0x0135: IGET  (r13 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x0137: IGET  (r13 I:float) = (r13 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minX float \l0x0139: CONST  (r15 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x013a: APUT  \l  (r11 I:?[int, float][])\l  (r15 I:?[int, short, byte, char])\l  (r13 I:?[int, float])\l \l0x013c: CONST  (r13 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l0x013d: IGET  (r14 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x013f: INVOKE  (r14 I:float) = (r14 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.maxY():float type: VIRTUAL \l0x0143: APUT  \l  (r11 I:?[int, float][])\l  (r13 I:?[int, short, byte, char])\l  (r14 I:?[int, float])\l \l0x0145: INVOKE  (r12 I:android.graphics.Matrix), (r11 I:float[]) android.graphics.Matrix.mapPoints(float[]):void type: VIRTUAL \l0x0148: NEW_INSTANCE  (r12 I:android.graphics.RectF) =  android.graphics.RectF \l0x014a: AGET  (r13 I:?[int, float]) = (r11 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l0x014c: AGET  (r14 I:?[int, float]) = (r11 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x014e: AGET  (r6 I:?[int, float]) = (r11 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l0x0150: AGET  (r5 I:?[int, float]) = (r11 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x0152: INVOKE  \l  (r12 I:android.graphics.RectF)\l  (r13 I:float)\l  (r14 I:float)\l  (r6 I:float)\l  (r5 I:float)\l android.graphics.RectF.\<init\>(float, float, float, float):void type: DIRECT \l0x0155: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x0156|0x0156: IF  (r5 I:?[int, byte, short, char]) \> (r15 I:?[int, byte, short, char])  \-\> B:73:0x018d \l}"];
Node_60 [shape=record,label="{60\:\ 0x0158|0x0158: AGET  (r6 I:?[int, float]) = (r11 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l0x015a: IGET  (r13 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.left float \l0x015c: CMP_G  (r6 I:int) = (r6 I:float), (r13 I:float) \l}"];
Node_61 [shape=record,label="{61\:\ 0x015e|0x015e: IF  (r6 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:63:0x0164 \l}"];
Node_62 [shape=record,label="{62\:\ 0x0160|0x0160: AGET  (r6 I:?[int, float]) = (r11 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l0x0162: IPUT  (r6 I:float), (r12 I:android.graphics.RectF) android.graphics.RectF.left float \l}"];
Node_63 [shape=record,label="{63\:\ 0x0164|0x0164: AGET  (r6 I:?[int, float]) = (r11 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l0x0166: IGET  (r13 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.right float \l0x0168: CMP_L  (r6 I:int) = (r6 I:float), (r13 I:float) \l}"];
Node_64 [shape=record,label="{64\:\ 0x016a|0x016a: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:66:0x0170 \l}"];
Node_65 [shape=record,label="{65\:\ 0x016c|0x016c: AGET  (r6 I:?[int, float]) = (r11 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l0x016e: IPUT  (r6 I:float), (r12 I:android.graphics.RectF) android.graphics.RectF.right float \l}"];
Node_66 [shape=record,label="{66\:\ 0x0170|0x0170: ARITH  (r6 I:int) = (r5 I:int) + (1 int) \l0x0172: AGET  (r13 I:?[int, float]) = (r11 I:?[int, float][]), (r6 I:?[int, short, byte, char]) \l0x0174: IGET  (r14 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.top float \l0x0176: CMP_G  (r13 I:int) = (r13 I:float), (r14 I:float) \l}"];
Node_67 [shape=record,label="{67\:\ 0x0178|0x0178: IF  (r13 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:69:0x017e \l}"];
Node_68 [shape=record,label="{68\:\ 0x017a|0x017a: AGET  (r13 I:?[int, float]) = (r11 I:?[int, float][]), (r6 I:?[int, short, byte, char]) \l0x017c: IPUT  (r13 I:float), (r12 I:android.graphics.RectF) android.graphics.RectF.top float \l}"];
Node_69 [shape=record,label="{69\:\ 0x017e|0x017e: AGET  (r13 I:?[int, float]) = (r11 I:?[int, float][]), (r6 I:?[int, short, byte, char]) \l0x0180: IGET  (r14 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.bottom float \l0x0182: CMP_L  (r13 I:int) = (r13 I:float), (r14 I:float) \l}"];
Node_70 [shape=record,label="{70\:\ 0x0184|0x0184: IF  (r13 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:72:0x018a \l}"];
Node_71 [shape=record,label="{71\:\ 0x0186|0x0186: AGET  (r6 I:?[int, float]) = (r11 I:?[int, float][]), (r6 I:?[int, short, byte, char]) \l0x0188: IPUT  (r6 I:float), (r12 I:android.graphics.RectF) android.graphics.RectF.bottom float \l}"];
Node_72 [shape=record,label="{72\:\ 0x018a|0x018a: ARITH  (r5 I:int) = (r5 I:int) + (2 int) \l}"];
Node_73 [shape=record,label="{73\:\ 0x018d|0x018d: NEW_INSTANCE  (r11 I:com.caverock.androidsvg.SVG$Box) =  com.caverock.androidsvg.SVG$Box \l0x018f: IGET  (r5 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.left float \l0x0191: IGET  (r6 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.top float \l0x0193: IGET  (r13 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.right float \l0x0195: IGET  (r14 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.left float \l0x0197: ARITH  (r13 I:float) = (r13 I:float) \- (r14 I:float) \l0x0198: IGET  (r14 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.bottom float \l0x019a: IGET  (r12 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.top float \l0x019c: ARITH  (r14 I:float) = (r14 I:float) \- (r12 I:float) \l0x019d: INVOKE  \l  (r11 I:com.caverock.androidsvg.SVG$Box)\l  (r5 I:float)\l  (r6 I:float)\l  (r13 I:float)\l  (r14 I:float)\l com.caverock.androidsvg.SVG.Box.\<init\>(float, float, float, float):void type: DIRECT \l}"];
Node_74 [shape=record,label="{74\:\ 0x01a0|0x01a0: IGET  (r5 I:float) = (r11 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minX float \l0x01a2: ARITH  (r5 I:float) = (r5 I:float) \- (r3 I:float) \l0x01a3: ARITH  (r5 I:float) = (r5 I:float) \/ (r8 I:float) \l0x01a4: CAST  (r5 I:double) = (double) (r5 I:float) \l0x01a5: INVOKE  (r5 I:double) = (r5 I:double) java.lang.Math.floor(double):double type: STATIC \l0x01a9: CAST  (r5 I:float) = (float) (r5 I:double) \l0x01aa: ARITH  (r5 I:float) = (r5 I:float) * (r8 I:float) \l0x01ac: ARITH  (r3 I:float) = (r3 I:float) + (r5 I:float) \l0x01ad: IGET  (r5 I:float) = (r11 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minY float \l0x01af: ARITH  (r5 I:float) = (r5 I:float) \- (r9 I:float) \l0x01b0: ARITH  (r5 I:float) = (r5 I:float) \/ (r7 I:float) \l0x01b1: CAST  (r5 I:double) = (double) (r5 I:float) \l0x01b2: INVOKE  (r5 I:double) = (r5 I:double) java.lang.Math.floor(double):double type: STATIC \l0x01b6: CAST  (r5 I:float) = (float) (r5 I:double) \l0x01b7: ARITH  (r5 I:float) = (r5 I:float) * (r7 I:float) \l0x01b9: ARITH  (r9 I:float) = (r9 I:float) + (r5 I:float) \l0x01ba: INVOKE  (r5 I:float) = (r11 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.maxX():float type: VIRTUAL \l0x01be: INVOKE  (r6 I:float) = (r11 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.maxY():float type: VIRTUAL \l0x01c2: NEW_INSTANCE  (r11 I:com.caverock.androidsvg.SVG$Box) =  com.caverock.androidsvg.SVG$Box \l0x01c4: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01c5: INVOKE  \l  (r11 I:com.caverock.androidsvg.SVG$Box)\l  (r12 I:float)\l  (r12 I:float)\l  (r8 I:float)\l  (r7 I:float)\l com.caverock.androidsvg.SVG.Box.\<init\>(float, float, float, float):void type: DIRECT \l0x01c8: INVOKE  (r12 I:boolean) = (r18 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.pushLayer():boolean type: DIRECT \l}"];
Node_75 [shape=record,label="{75\:\ 0x01cc|0x01cc: CMP_G  (r13 I:int) = (r9 I:float), (r6 I:float) \l}"];
Node_76 [shape=record,label="{76\:\ 0x01ce|0x01ce: IF  (r13 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:103:0x0250 \l}"];
Node_77 [shape=record,label="{77\:\ 0x01d0|0x01d0: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_78 [shape=record,label="{78\:\ 0x01d1|0x01d1: CMP_G  (r14 I:int) = (r13 I:float), (r5 I:float) \l}"];
Node_79 [shape=record,label="{79\:\ 0x01d3|0x01d3: IF  (r14 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:102:0x024a \l}"];
Node_80 [shape=record,label="{80\:\ 0x01d5|0x01d5: IPUT  (r13 I:float), (r11 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minX float \l0x01d7: IPUT  (r9 I:float), (r11 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minY float \l0x01d9: INVOKE  (r18 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePush():void type: DIRECT \l0x01dc: IGET  (r14 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r0 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x01de: IGET  (r14 I:com.caverock.androidsvg.SVG$Style) = \l  (r14 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x01e0: IGET  (r14 I:java.lang.Boolean) = (r14 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.overflow java.lang.Boolean \l0x01e2: INVOKE  (r14 I:boolean) = (r14 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL \l}"];
Node_81 [shape=record,label="{81\:\ 0x01e6|0x01e6: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:83:0x01f6 \l}"];
Node_82 [shape=record,label="{82\:\ 0x01e8|0x01e8: IGET  (r14 I:float) = (r11 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minX float \l0x01ea: IGET  (r15 I:float) = (r11 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minY float \l0x01ec: IGET  (r4 I:float) = (r11 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.width float \l0x01ee: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01f0: IGET  (r3 I:float) = (r11 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.height float \l0x01f2: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r14 I:float)\l  (r15 I:float)\l  (r4 I:float)\l  (r3 I:float)\l com.caverock.androidsvg.SVGAndroidRenderer.setClipRect(float, float, float, float):void type: DIRECT \l}"];
Node_83 [shape=record,label="{83\:\ 0x01f6|0x01f6: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_84 [shape=record,label="{84\:\ 0x01f8|0x01f8: IGET  (r3 I:com.caverock.androidsvg.SVG$Box) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.viewBox com.caverock.androidsvg.SVG$Box \l}"];
Node_85 [shape=record,label="{85\:\ 0x01fa|0x01fa: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:87:0x0208 \l}"];
Node_86 [shape=record,label="{86\:\ 0x01fc|0x01fc: IGET  (r3 I:android.graphics.Canvas) = (r0 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.canvas android.graphics.Canvas \l0x01fe: IGET  (r4 I:com.caverock.androidsvg.SVG$Box) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.viewBox com.caverock.androidsvg.SVG$Box \l0x0200: INVOKE  (r4 I:android.graphics.Matrix) = \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r11 I:com.caverock.androidsvg.SVG$Box)\l  (r4 I:com.caverock.androidsvg.SVG$Box)\l  (r10 I:com.caverock.androidsvg.PreserveAspectRatio)\l com.caverock.androidsvg.SVGAndroidRenderer.calculateViewBoxTransform(com.caverock.androidsvg.SVG$Box, com.caverock.androidsvg.SVG$Box, com.caverock.androidsvg.PreserveAspectRatio):android.graphics.Matrix type: DIRECT \l0x0204: INVOKE  \l  (r3 I:android.graphics.Canvas)\l  (r4 I:android.graphics.Matrix)\l android.graphics.Canvas.concat(android.graphics.Matrix):void type: VIRTUAL \l}"];
Node_87 [shape=record,label="{87\:\ 0x0208|0x0208: IGET  (r3 I:java.lang.Boolean) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.patternContentUnitsAreUser java.lang.Boolean \l}"];
Node_88 [shape=record,label="{88\:\ 0x020a|0x020a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:93:0x0217 \l}"];
Node_89 [shape=record,label="{89\:\ 0x020c|0x020c: IGET  (r3 I:java.lang.Boolean) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.patternContentUnitsAreUser java.lang.Boolean \l0x020e: INVOKE  (r3 I:boolean) = (r3 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL \l}"];
Node_90 [shape=record,label="{90\:\ 0x0212|0x0212: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:92:0x0215 \l}"];
Node_92 [shape=record,label="{92\:\ 0x0215|0x0215: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_93 [shape=record,label="{93\:\ 0x0217|0x0217: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_94 [shape=record,label="{94\:\ 0x0218|0x0218: IGET  (r4 I:android.graphics.Canvas) = (r0 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.canvas android.graphics.Canvas \l0x021a: INVOKE  (r4 I:android.graphics.Canvas), (r13 I:float), (r9 I:float) android.graphics.Canvas.translate(float, float):void type: VIRTUAL \l}"];
Node_95 [shape=record,label="{95\:\ 0x021d|0x021d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:97:0x022c \l}"];
Node_96 [shape=record,label="{96\:\ 0x021f|0x021f: IGET  (r3 I:android.graphics.Canvas) = (r0 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.canvas android.graphics.Canvas \l0x0221: IGET  (r4 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x0223: IGET  (r4 I:float) = (r4 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.width float \l0x0225: IGET  (r14 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x0227: IGET  (r14 I:float) = (r14 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.height float \l0x0229: INVOKE  (r3 I:android.graphics.Canvas), (r4 I:float), (r14 I:float) android.graphics.Canvas.scale(float, float):void type: VIRTUAL \l}"];
Node_97 [shape=record,label="{97\:\ 0x022c|0x022c: IGET  (r3 I:java.util.List) = (r2 I:com.caverock.androidsvg.SVG$Pattern) com.caverock.androidsvg.SVG.Pattern.children java.util.List \l0x022e: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_98 [shape=record,label="{98\:\ 0x0232|0x0232: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_99 [shape=record,label="{99\:\ 0x0236|0x0236: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:101:0x0242 \l}"];
Node_100 [shape=record,label="{100\:\ 0x0238|0x0238: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x023c: CHECK_CAST  (r4 I:com.caverock.androidsvg.SVG$SvgObject) = (com.caverock.androidsvg.SVG$SvgObject) (r4 I:?[OBJECT, ARRAY]) \l0x023e: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r4 I:com.caverock.androidsvg.SVG$SvgObject)\l com.caverock.androidsvg.SVGAndroidRenderer.render(com.caverock.androidsvg.SVG$SvgObject):void type: DIRECT \l}"];
Node_101 [shape=record,label="{101\:\ 0x0242|0x0242: INVOKE  (r18 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePop():void type: DIRECT \l0x0245: ARITH  (r13 I:float) = (r13 I:float) + (r8 I:float) \l0x0246: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0248: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_102 [shape=record,label="{102\:\ 0x024a|0x024a: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x024c: ARITH  (r9 I:float) = (r9 I:float) + (r7 I:float) \l0x024d: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_103 [shape=record,label="{103\:\ 0x0250|0x0250: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:105:0x0255 \l}"];
Node_104 [shape=record,label="{104\:\ 0x0252|0x0252: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$SvgElement)\l com.caverock.androidsvg.SVGAndroidRenderer.popLayer(com.caverock.androidsvg.SVG$SvgElement):void type: DIRECT \l}"];
Node_105 [shape=record,label="{105\:\ 0x0255|0x0255: INVOKE  (r18 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePop():void type: DIRECT \l}"];
Node_106 [shape=record,label="{106\:\ 0x0258|0x0258: RETURN   \l}"];
Node_107 [shape=record,label="{107\:\ 0x0259|0x0259: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.fillWithPattern((r18 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r19 I:com.caverock.androidsvg.SVG$SvgElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:android.graphics.Path A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:com.caverock.androidsvg.SVG$Pattern A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_28;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_45;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_107;
Node_47 -> Node_48;
Node_48 -> Node_50;
Node_48 -> Node_107[style=dashed];
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_74;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_74;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_73;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_63;
Node_62 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_69;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_72;
Node_71 -> Node_72;
Node_72 -> Node_59;
Node_73 -> Node_74;
Node_74 -> Node_75;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_103;
Node_77 -> Node_78;
Node_78 -> Node_79;
Node_79 -> Node_80[style=dashed];
Node_79 -> Node_102;
Node_80 -> Node_81;
Node_81 -> Node_82[style=dashed];
Node_81 -> Node_83;
Node_82 -> Node_84;
Node_83 -> Node_84;
Node_84 -> Node_85;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_87;
Node_86 -> Node_97;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_93;
Node_89 -> Node_90;
Node_90 -> Node_92;
Node_90 -> Node_93[style=dashed];
Node_92 -> Node_94;
Node_93 -> Node_94;
Node_94 -> Node_95;
Node_95 -> Node_96[style=dashed];
Node_95 -> Node_97;
Node_96 -> Node_97;
Node_97 -> Node_98;
Node_98 -> Node_99;
Node_99 -> Node_100[style=dashed];
Node_99 -> Node_101;
Node_100 -> Node_98;
Node_101 -> Node_78;
Node_102 -> Node_75;
Node_103 -> Node_104[style=dashed];
Node_103 -> Node_105;
Node_104 -> Node_105;
Node_105 -> Node_106;
}

