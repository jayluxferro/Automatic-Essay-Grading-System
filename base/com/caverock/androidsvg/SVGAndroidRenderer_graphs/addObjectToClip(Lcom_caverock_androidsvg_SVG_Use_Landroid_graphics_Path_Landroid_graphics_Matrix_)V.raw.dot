digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.addObjectToClip(Lcom\/caverock\/androidsvg\/SVG$Use;Landroid\/graphics\/Path;Landroid\/graphics\/Matrix;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r2 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0002: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r3 I:com.caverock.androidsvg.SVG$SvgElementBase)\l com.caverock.androidsvg.SVGAndroidRenderer.updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState, com.caverock.androidsvg.SVG$SvgElementBase):void type: DIRECT \l0x0005: INVOKE  (r0 I:boolean) = (r2 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.display():boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  (r0 I:boolean) = (r2 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.visible():boolean type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IGET  (r0 I:android.graphics.Matrix) = (r3 I:com.caverock.androidsvg.SVG$Use) com.caverock.androidsvg.SVG.Use.transform android.graphics.Matrix \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001c \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: IGET  (r0 I:android.graphics.Matrix) = (r3 I:com.caverock.androidsvg.SVG$Use) com.caverock.androidsvg.SVG.Use.transform android.graphics.Matrix \l0x0019: INVOKE  \l  (r5 I:android.graphics.Matrix)\l  (r0 I:android.graphics.Matrix)\l android.graphics.Matrix.preConcat(android.graphics.Matrix):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IGET  (r0 I:com.caverock.androidsvg.SVG) = (r3 I:com.caverock.androidsvg.SVG$Use) com.caverock.androidsvg.SVG.Use.document com.caverock.androidsvg.SVG \l0x001e: IGET  (r1 I:java.lang.String) = (r3 I:com.caverock.androidsvg.SVG$Use) com.caverock.androidsvg.SVG.Use.href java.lang.String \l0x0020: INVOKE  (r0 I:com.caverock.androidsvg.SVG$SvgObject) = (r0 I:com.caverock.androidsvg.SVG), (r1 I:java.lang.String) com.caverock.androidsvg.SVG.resolveIRI(java.lang.String):com.caverock.androidsvg.SVG$SvgObject type: VIRTUAL \l0x0024: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0034 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: CONST_STR  (r4 I:java.lang.String) =  \"Use reference '%s' not found\" \l0x0029: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x002a: NEW_ARRAY  (r5 I:java.lang.Object[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x002c: IGET  (r3 I:java.lang.String) = (r3 I:com.caverock.androidsvg.SVG$Use) com.caverock.androidsvg.SVG.Use.href java.lang.String \l0x002e: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0030: INVOKE  (r4 I:java.lang.String), (r5 I:java.lang.Object[]) com.caverock.androidsvg.SVGAndroidRenderer.error(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|0x0033: RETURN   \l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|0x0034: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r3 I:com.caverock.androidsvg.SVG$SvgElement)\l com.caverock.androidsvg.SVGAndroidRenderer.checkForClipPath(com.caverock.androidsvg.SVG$SvgElement):void type: DIRECT \l0x0037: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:com.caverock.androidsvg.SVG$SvgObject)\l  (r1 I:boolean)\l  (r4 I:android.graphics.Path)\l  (r5 I:android.graphics.Matrix)\l com.caverock.androidsvg.SVGAndroidRenderer.addObjectToClip(com.caverock.androidsvg.SVG$SvgObject, boolean, android.graphics.Path, android.graphics.Matrix):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|0x003a: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.addObjectToClip((r2 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r3 I:com.caverock.androidsvg.SVG$Use A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.graphics.Path A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.graphics.Matrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_13 -> Node_14;
}

