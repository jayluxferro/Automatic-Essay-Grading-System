digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.processTextChild(Lcom\/caverock\/androidsvg\/SVG$SvgObject;Lcom\/caverock\/androidsvg\/SVGAndroidRenderer$TextProcessor;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0001: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$TextContainer) = (com.caverock.androidsvg.SVG$TextContainer) (r0 I:?[OBJECT, ARRAY]) \l0x0003: INVOKE  (r0 I:boolean) = \l  (r10 I:com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)\l  (r0 I:com.caverock.androidsvg.SVG$TextContainer)\l com.caverock.androidsvg.SVGAndroidRenderer.TextProcessor.doTextContainer(com.caverock.androidsvg.SVG$TextContainer):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: INSTANCE_OF  (r0 I:boolean) = (r9 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$TextPath \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001b \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: INVOKE  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePush():void type: DIRECT \l0x0011: CHECK_CAST  (r9 I:com.caverock.androidsvg.SVG$TextPath) = (com.caverock.androidsvg.SVG$TextPath) (r9 I:?[OBJECT, ARRAY]) \l0x0013: INVOKE  \l  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r9 I:com.caverock.androidsvg.SVG$TextPath)\l com.caverock.androidsvg.SVGAndroidRenderer.renderTextPath(com.caverock.androidsvg.SVG$TextPath):void type: DIRECT \l0x0016: INVOKE  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePop():void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: INSTANCE_OF  (r0 I:boolean) = (r9 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$TSpan \l0x001d: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x00f5 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: CONST_STR  (r0 I:java.lang.String) =  \"TSpan render\" \l0x0023: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0025: INVOKE  (r0 I:java.lang.String), (r3 I:java.lang.Object[]) com.caverock.androidsvg.SVGAndroidRenderer.debug(java.lang.String, java.lang.Object[]):void type: STATIC \l0x0028: INVOKE  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePush():void type: DIRECT \l0x002b: CHECK_CAST  (r9 I:com.caverock.androidsvg.SVG$TSpan) = (com.caverock.androidsvg.SVG$TSpan) (r9 I:?[OBJECT, ARRAY]) \l0x002d: IGET  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r8 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x002f: INVOKE  \l  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r9 I:com.caverock.androidsvg.SVG$SvgElementBase)\l com.caverock.androidsvg.SVGAndroidRenderer.updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState, com.caverock.androidsvg.SVG$SvgElementBase):void type: DIRECT \l0x0032: INVOKE  (r0 I:boolean) = (r8 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.display():boolean type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|0x0036: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x00f1 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: IGET  (r0 I:java.util.List) = (r9 I:com.caverock.androidsvg.SVG$TSpan) com.caverock.androidsvg.SVG.TSpan.x java.util.List \l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|0x003a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0045 \l}"];
Node_12 [shape=record,label="{12\:\ 0x003c|0x003c: IGET  (r0 I:java.util.List) = (r9 I:com.caverock.androidsvg.SVG$TSpan) com.caverock.androidsvg.SVG.TSpan.x java.util.List \l0x003e: INVOKE  (r0 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_13 [shape=record,label="{13\:\ 0x0042|0x0042: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:15:0x0045 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0045|0x0045: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0046|0x0046: INSTANCE_OF  (r0 I:boolean) = (r10 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer \l0x0048: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0049|0x0049: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x00b6 \l}"];
Node_18 [shape=record,label="{18\:\ 0x004b|0x004b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0053 \l}"];
Node_19 [shape=record,label="{19\:\ 0x004d|0x004d: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x004e: CHECK_CAST  (r4 I:com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer) = (com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer) (r4 I:?[OBJECT, ARRAY]) \l0x0050: IGET  (r4 I:float) = \l  (r4 I:com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer)\l com.caverock.androidsvg.SVGAndroidRenderer.PlainTextDrawer.x float \l}"];
Node_20 [shape=record,label="{20\:\ 0x0053|0x0053: IGET  (r4 I:java.util.List) = (r9 I:com.caverock.androidsvg.SVG$TSpan) com.caverock.androidsvg.SVG.TSpan.x java.util.List \l0x0055: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0059: CHECK_CAST  (r4 I:com.caverock.androidsvg.SVG$Length) = (com.caverock.androidsvg.SVG$Length) (r4 I:?[OBJECT, ARRAY]) \l0x005b: INVOKE  (r4 I:float) = \l  (r4 I:com.caverock.androidsvg.SVG$Length)\l  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x005f|0x005f: IGET  (r5 I:java.util.List) = (r9 I:com.caverock.androidsvg.SVG$TSpan) com.caverock.androidsvg.SVG.TSpan.y java.util.List \l}"];
Node_22 [shape=record,label="{22\:\ 0x0061|0x0061: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0079 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0063|0x0063: IGET  (r5 I:java.util.List) = (r9 I:com.caverock.androidsvg.SVG$TSpan) com.caverock.androidsvg.SVG.TSpan.y java.util.List \l0x0065: INVOKE  (r5 I:int) = (r5 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_24 [shape=record,label="{24\:\ 0x0069|0x0069: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x006c \l}"];
Node_26 [shape=record,label="{26\:\ 0x006c|0x006c: IGET  (r5 I:java.util.List) = (r9 I:com.caverock.androidsvg.SVG$TSpan) com.caverock.androidsvg.SVG.TSpan.y java.util.List \l0x006e: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0072: CHECK_CAST  (r5 I:com.caverock.androidsvg.SVG$Length) = (com.caverock.androidsvg.SVG$Length) (r5 I:?[OBJECT, ARRAY]) \l0x0074: INVOKE  (r5 I:float) = \l  (r5 I:com.caverock.androidsvg.SVG$Length)\l  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x0079|0x0079: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x007a: CHECK_CAST  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer) = (com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer) (r5 I:?[OBJECT, ARRAY]) \l0x007c: IGET  (r5 I:float) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer)\l com.caverock.androidsvg.SVGAndroidRenderer.PlainTextDrawer.y float \l}"];
Node_28 [shape=record,label="{28\:\ 0x007e|0x007e: IGET  (r6 I:java.util.List) = (r9 I:com.caverock.androidsvg.SVG$TSpan) com.caverock.androidsvg.SVG.TSpan.dx java.util.List \l}"];
Node_29 [shape=record,label="{29\:\ 0x0080|0x0080: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0098 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0082|0x0082: IGET  (r6 I:java.util.List) = (r9 I:com.caverock.androidsvg.SVG$TSpan) com.caverock.androidsvg.SVG.TSpan.dx java.util.List \l0x0084: INVOKE  (r6 I:int) = (r6 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_31 [shape=record,label="{31\:\ 0x0088|0x0088: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x008b \l}"];
Node_33 [shape=record,label="{33\:\ 0x008b|0x008b: IGET  (r6 I:java.util.List) = (r9 I:com.caverock.androidsvg.SVG$TSpan) com.caverock.androidsvg.SVG.TSpan.dx java.util.List \l0x008d: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0091: CHECK_CAST  (r6 I:com.caverock.androidsvg.SVG$Length) = (com.caverock.androidsvg.SVG$Length) (r6 I:?[OBJECT, ARRAY]) \l0x0093: INVOKE  (r6 I:float) = \l  (r6 I:com.caverock.androidsvg.SVG$Length)\l  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_34 [shape=record,label="{34\:\ 0x0098|0x0098: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_35 [shape=record,label="{35\:\ 0x0099|0x0099: IGET  (r7 I:java.util.List) = (r9 I:com.caverock.androidsvg.SVG$TSpan) com.caverock.androidsvg.SVG.TSpan.dy java.util.List \l}"];
Node_36 [shape=record,label="{36\:\ 0x009b|0x009b: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x00b3 \l}"];
Node_37 [shape=record,label="{37\:\ 0x009d|0x009d: IGET  (r7 I:java.util.List) = (r9 I:com.caverock.androidsvg.SVG$TSpan) com.caverock.androidsvg.SVG.TSpan.dy java.util.List \l0x009f: INVOKE  (r7 I:int) = (r7 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_38 [shape=record,label="{38\:\ 0x00a3|0x00a3: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x00a6 \l}"];
Node_40 [shape=record,label="{40\:\ 0x00a6|0x00a6: IGET  (r3 I:java.util.List) = (r9 I:com.caverock.androidsvg.SVG$TSpan) com.caverock.androidsvg.SVG.TSpan.dy java.util.List \l0x00a8: INVOKE  (r2 I:java.lang.Object) = (r3 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x00ac: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$Length) = (com.caverock.androidsvg.SVG$Length) (r2 I:?[OBJECT, ARRAY]) \l0x00ae: INVOKE  (r2 I:float) = \l  (r2 I:com.caverock.androidsvg.SVG$Length)\l  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l0x00b2: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_41 [shape=record,label="{41\:\ 0x00b3|0x00b3: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b4: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_42 [shape=record,label="{42\:\ 0x00b6|0x00b6: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b7: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b8: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_43 [shape=record,label="{43\:\ 0x00b9|0x00b9: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x00d1 \l}"];
Node_44 [shape=record,label="{44\:\ 0x00bb|0x00bb: INVOKE  (r1 I:com.caverock.androidsvg.SVG$Style$TextAnchor) = (r8 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.getAnchorPosition():com.caverock.androidsvg.SVG$Style$TextAnchor type: DIRECT \l0x00bf: SGET  (r4 I:com.caverock.androidsvg.SVG$Style$TextAnchor) =  com.caverock.androidsvg.SVG.Style.TextAnchor.Start com.caverock.androidsvg.SVG$Style$TextAnchor \l}"];
Node_45 [shape=record,label="{45\:\ 0x00c1|0x00c1: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x00d1 \l}"];
Node_46 [shape=record,label="{46\:\ 0x00c3|0x00c3: INVOKE  (r4 I:float) = \l  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r9 I:com.caverock.androidsvg.SVG$TextContainer)\l com.caverock.androidsvg.SVGAndroidRenderer.calculateTextWidth(com.caverock.androidsvg.SVG$TextContainer):float type: DIRECT \l0x00c7: SGET  (r7 I:com.caverock.androidsvg.SVG$Style$TextAnchor) =  com.caverock.androidsvg.SVG.Style.TextAnchor.Middle com.caverock.androidsvg.SVG$Style$TextAnchor \l}"];
Node_47 [shape=record,label="{47\:\ 0x00c9|0x00c9: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x00d0 \l}"];
Node_48 [shape=record,label="{48\:\ 0x00cb|0x00cb: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x00cd: ARITH  (r4 I:float) = (r4 I:float) \/ (r1 I:float) \l0x00ce: ARITH  (r3 I:float) = (r3 I:float) \- (r4 I:float) \l}"];
Node_49 [shape=record,label="{49\:\ 0x00d0|0x00d0: ARITH  (r3 I:float) = (r3 I:float) \- (r4 I:float) \l}"];
Node_50 [shape=record,label="{50\:\ 0x00d1|0x00d1: INVOKE  (r1 I:com.caverock.androidsvg.SVG$TextRoot) = (r9 I:com.caverock.androidsvg.SVG$TSpan) com.caverock.androidsvg.SVG.TSpan.getTextRoot():com.caverock.androidsvg.SVG$TextRoot type: VIRTUAL \l0x00d5: CHECK_CAST  (r1 I:com.caverock.androidsvg.SVG$SvgElement) = (com.caverock.androidsvg.SVG$SvgElement) (r1 I:?[OBJECT, ARRAY]) \l0x00d7: INVOKE  \l  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r1 I:com.caverock.androidsvg.SVG$SvgElement)\l com.caverock.androidsvg.SVGAndroidRenderer.checkForGradientsAndPatterns(com.caverock.androidsvg.SVG$SvgElement):void type: DIRECT \l}"];
Node_51 [shape=record,label="{51\:\ 0x00da|0x00da: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x00e5 \l}"];
Node_52 [shape=record,label="{52\:\ 0x00dc|0x00dc: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x00dd: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer) = (com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer) (r0 I:?[OBJECT, ARRAY]) \l0x00df: ARITH  (r3 I:float) = (r3 I:float) + (r6 I:float) \l0x00e0: IPUT  \l  (r3 I:float)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer)\l com.caverock.androidsvg.SVGAndroidRenderer.PlainTextDrawer.x float \l0x00e2: ARITH  (r5 I:float) = (r5 I:float) + (r2 I:float) \l0x00e3: IPUT  \l  (r5 I:float)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer)\l com.caverock.androidsvg.SVGAndroidRenderer.PlainTextDrawer.y float \l}"];
Node_53 [shape=record,label="{53\:\ 0x00e5|0x00e5: INVOKE  (r0 I:boolean) = (r8 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.pushLayer():boolean type: DIRECT \l0x00e9: INVOKE  \l  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r9 I:com.caverock.androidsvg.SVG$TextContainer)\l  (r10 I:com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)\l com.caverock.androidsvg.SVGAndroidRenderer.enumerateTextSpans(com.caverock.androidsvg.SVG$TextContainer, com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor):void type: DIRECT \l}"];
Node_54 [shape=record,label="{54\:\ 0x00ec|0x00ec: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x00f1 \l}"];
Node_55 [shape=record,label="{55\:\ 0x00ee|0x00ee: INVOKE  \l  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r9 I:com.caverock.androidsvg.SVG$SvgElement)\l com.caverock.androidsvg.SVGAndroidRenderer.popLayer(com.caverock.androidsvg.SVG$SvgElement):void type: DIRECT \l}"];
Node_56 [shape=record,label="{56\:\ 0x00f1|0x00f1: INVOKE  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePop():void type: DIRECT \l}"];
Node_57 [shape=record,label="{57\:\ 0x00f5|0x00f5: INSTANCE_OF  (r0 I:boolean) = (r9 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$TRef \l}"];
Node_58 [shape=record,label="{58\:\ 0x00f7|0x00f7: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x0147 \l}"];
Node_59 [shape=record,label="{59\:\ 0x00f9|0x00f9: INVOKE  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePush():void type: DIRECT \l0x00fc: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x00fd: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$TRef) = (com.caverock.androidsvg.SVG$TRef) (r0 I:?[OBJECT, ARRAY]) \l0x00ff: IGET  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r8 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0101: INVOKE  \l  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r0 I:com.caverock.androidsvg.SVG$SvgElementBase)\l com.caverock.androidsvg.SVGAndroidRenderer.updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState, com.caverock.androidsvg.SVG$SvgElementBase):void type: DIRECT \l0x0104: INVOKE  (r3 I:boolean) = (r8 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.display():boolean type: DIRECT \l}"];
Node_60 [shape=record,label="{60\:\ 0x0108|0x0108: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x0144 \l}"];
Node_61 [shape=record,label="{61\:\ 0x010a|0x010a: INVOKE  (r3 I:com.caverock.androidsvg.SVG$TextRoot) = (r0 I:com.caverock.androidsvg.SVG$TRef) com.caverock.androidsvg.SVG.TRef.getTextRoot():com.caverock.androidsvg.SVG$TextRoot type: VIRTUAL \l0x010e: CHECK_CAST  (r3 I:com.caverock.androidsvg.SVG$SvgElement) = (com.caverock.androidsvg.SVG$SvgElement) (r3 I:?[OBJECT, ARRAY]) \l0x0110: INVOKE  \l  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r3 I:com.caverock.androidsvg.SVG$SvgElement)\l com.caverock.androidsvg.SVGAndroidRenderer.checkForGradientsAndPatterns(com.caverock.androidsvg.SVG$SvgElement):void type: DIRECT \l0x0113: IGET  (r9 I:com.caverock.androidsvg.SVG) = (r9 I:com.caverock.androidsvg.SVG$SvgObject) com.caverock.androidsvg.SVG.SvgObject.document com.caverock.androidsvg.SVG \l0x0115: IGET  (r3 I:java.lang.String) = (r0 I:com.caverock.androidsvg.SVG$TRef) com.caverock.androidsvg.SVG.TRef.href java.lang.String \l0x0117: INVOKE  (r9 I:com.caverock.androidsvg.SVG$SvgObject) = (r9 I:com.caverock.androidsvg.SVG), (r3 I:java.lang.String) com.caverock.androidsvg.SVG.resolveIRI(java.lang.String):com.caverock.androidsvg.SVG$SvgObject type: VIRTUAL \l}"];
Node_62 [shape=record,label="{62\:\ 0x011b|0x011b: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x0139 \l}"];
Node_63 [shape=record,label="{63\:\ 0x011d|0x011d: INSTANCE_OF  (r3 I:boolean) = (r9 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$TextContainer \l}"];
Node_64 [shape=record,label="{64\:\ 0x011f|0x011f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x0139 \l}"];
Node_65 [shape=record,label="{65\:\ 0x0121|0x0121: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0123: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0126: CHECK_CAST  (r9 I:com.caverock.androidsvg.SVG$TextContainer) = (com.caverock.androidsvg.SVG$TextContainer) (r9 I:?[OBJECT, ARRAY]) \l0x0128: INVOKE  \l  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r9 I:com.caverock.androidsvg.SVG$TextContainer)\l  (r0 I:java.lang.StringBuilder)\l com.caverock.androidsvg.SVGAndroidRenderer.extractRawText(com.caverock.androidsvg.SVG$TextContainer, java.lang.StringBuilder):void type: DIRECT \l0x012b: INVOKE  (r9 I:int) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.length():int type: VIRTUAL \l}"];
Node_66 [shape=record,label="{66\:\ 0x012f|0x012f: IF  (r9 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:69:0x0144 \l}"];
Node_67 [shape=record,label="{67\:\ 0x0131|0x0131: INVOKE  (r9 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0135: INVOKE  \l  (r10 I:com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)\l  (r9 I:java.lang.String)\l com.caverock.androidsvg.SVGAndroidRenderer.TextProcessor.processText(java.lang.String):void type: VIRTUAL \l}"];
Node_68 [shape=record,label="{68\:\ 0x0139|0x0139: CONST_STR  (r9 I:java.lang.String) =  \"Tref reference '%s' not found\" \l0x013b: NEW_ARRAY  (r10 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x013d: IGET  (r0 I:java.lang.String) = (r0 I:com.caverock.androidsvg.SVG$TRef) com.caverock.androidsvg.SVG.TRef.href java.lang.String \l0x013f: APUT  \l  (r10 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l \l0x0141: INVOKE  (r9 I:java.lang.String), (r10 I:java.lang.Object[]) com.caverock.androidsvg.SVGAndroidRenderer.error(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
Node_69 [shape=record,label="{69\:\ 0x0144|0x0144: INVOKE  (r8 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.statePop():void type: DIRECT \l}"];
Node_70 [shape=record,label="{70\:\ 0x0147|0x0147: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.processTextChild((r8 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r9 I:com.caverock.androidsvg.SVG$SvgObject A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_70;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_57;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_56;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_42;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_34;
Node_30 -> Node_31;
Node_31 -> Node_33;
Node_31 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_41;
Node_37 -> Node_38;
Node_38 -> Node_40;
Node_38 -> Node_41[style=dashed];
Node_40 -> Node_41;
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_50;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_50;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_50;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_56;
Node_56 -> Node_70;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_70;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_69;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_68;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_68;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_69;
Node_67 -> Node_69;
Node_68 -> Node_69;
Node_69 -> Node_70;
}

