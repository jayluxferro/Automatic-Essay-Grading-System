digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.calculateClipPath(Lcom\/caverock\/androidsvg\/SVG$SvgElement;Lcom\/caverock\/androidsvg\/SVG$Box;)Landroid\/graphics\/Path;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r6 I:com.caverock.androidsvg.SVG) = (r6 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.document com.caverock.androidsvg.SVG \l0x0002: IGET  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0004: IGET  (r0 I:com.caverock.androidsvg.SVG$Style) = \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x0006: IGET  (r0 I:java.lang.String) = (r0 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.clipPath java.lang.String \l0x0008: INVOKE  (r6 I:com.caverock.androidsvg.SVG$SvgObject) = (r6 I:com.caverock.androidsvg.SVG), (r0 I:java.lang.String) com.caverock.androidsvg.SVG.resolveIRI(java.lang.String):com.caverock.androidsvg.SVG$SvgObject type: VIRTUAL \l0x000c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0021 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: CONST_STR  (r6 I:java.lang.String) =  \"ClipPath reference '%s' not found\" \l0x0012: NEW_ARRAY  (r7 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0014: IGET  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0016: IGET  (r1 I:com.caverock.androidsvg.SVG$Style) = \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x0018: IGET  (r1 I:java.lang.String) = (r1 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.clipPath java.lang.String \l0x001a: APUT  \l  (r7 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x001c: INVOKE  (r6 I:java.lang.String), (r7 I:java.lang.Object[]) com.caverock.androidsvg.SVGAndroidRenderer.error(java.lang.String, java.lang.Object[]):void type: STATIC \l0x001f: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|0x0020: RETURN  (r6 I:android.graphics.Path) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: CHECK_CAST  (r6 I:com.caverock.androidsvg.SVG$ClipPath) = (com.caverock.androidsvg.SVG$ClipPath) (r6 I:?[OBJECT, ARRAY]) \l0x0023: IGET  (r2 I:java.util.Stack\<com.caverock.androidsvg.SVGAndroidRenderer$RendererState\>) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.stateStack java.util.Stack \l0x0025: IGET  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0027: INVOKE  (r2 I:java.util.Stack), (r3 I:java.lang.Object) java.util.Stack.push(java.lang.Object):java.lang.Object type: VIRTUAL \l0x002a: INVOKE  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r6 I:com.caverock.androidsvg.SVG$SvgObject)\l com.caverock.androidsvg.SVGAndroidRenderer.findInheritFromAncestorState(com.caverock.androidsvg.SVG$SvgObject):com.caverock.androidsvg.SVGAndroidRenderer$RendererState type: DIRECT \l0x002e: IPUT  \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0030: IGET  (r2 I:java.lang.Boolean) = (r6 I:com.caverock.androidsvg.SVG$ClipPath) com.caverock.androidsvg.SVG.ClipPath.clipPathUnitsAreUser java.lang.Boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x0032|0x0032: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x003c \l}"];
Node_6 [shape=record,label="{6\:\ 0x0034|0x0034: IGET  (r2 I:java.lang.Boolean) = (r6 I:com.caverock.androidsvg.SVG$ClipPath) com.caverock.androidsvg.SVG.ClipPath.clipPathUnitsAreUser java.lang.Boolean \l0x0036: INVOKE  (r2 I:boolean) = (r2 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x003a|0x003a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003d \l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|0x003c: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|0x003d: NEW_INSTANCE  (r2 I:android.graphics.Matrix) =  android.graphics.Matrix \l0x003f: INVOKE  (r2 I:android.graphics.Matrix) android.graphics.Matrix.\<init\>():void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0042|0x0042: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0052 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0044|0x0044: IGET  (r0 I:float) = (r7 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minX float \l0x0046: IGET  (r3 I:float) = (r7 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minY float \l0x0048: INVOKE  (r2 I:android.graphics.Matrix), (r0 I:float), (r3 I:float) android.graphics.Matrix.preTranslate(float, float):boolean type: VIRTUAL \l0x004b: IGET  (r0 I:float) = (r7 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.width float \l0x004d: IGET  (r7 I:float) = (r7 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.height float \l0x004f: INVOKE  (r2 I:android.graphics.Matrix), (r0 I:float), (r7 I:float) android.graphics.Matrix.preScale(float, float):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0052|0x0052: IGET  (r7 I:android.graphics.Matrix) = (r6 I:com.caverock.androidsvg.SVG$ClipPath) com.caverock.androidsvg.SVG.ClipPath.transform android.graphics.Matrix \l}"];
Node_13 [shape=record,label="{13\:\ 0x0054|0x0054: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x005b \l}"];
Node_14 [shape=record,label="{14\:\ 0x0056|0x0056: IGET  (r7 I:android.graphics.Matrix) = (r6 I:com.caverock.androidsvg.SVG$ClipPath) com.caverock.androidsvg.SVG.ClipPath.transform android.graphics.Matrix \l0x0058: INVOKE  \l  (r2 I:android.graphics.Matrix)\l  (r7 I:android.graphics.Matrix)\l android.graphics.Matrix.preConcat(android.graphics.Matrix):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x005b|0x005b: NEW_INSTANCE  (r7 I:android.graphics.Path) =  android.graphics.Path \l0x005d: INVOKE  (r7 I:android.graphics.Path) android.graphics.Path.\<init\>():void type: DIRECT \l0x0060: IGET  (r0 I:java.util.List) = (r6 I:com.caverock.androidsvg.SVG$ClipPath) com.caverock.androidsvg.SVG.ClipPath.children java.util.List \l0x0062: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_16 [shape=record,label="{16\:\ 0x0066|0x0066: INVOKE  (r3 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_17 [shape=record,label="{17\:\ 0x006a|0x006a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0085 \l}"];
Node_18 [shape=record,label="{18\:\ 0x006c|0x006c: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0070: CHECK_CAST  (r3 I:com.caverock.androidsvg.SVG$SvgObject) = (com.caverock.androidsvg.SVG$SvgObject) (r3 I:?[OBJECT, ARRAY]) \l0x0072: INSTANCE_OF  (r4 I:boolean) = (r3 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$SvgElement \l}"];
Node_19 [shape=record,label="{19\:\ 0x0074|0x0074: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0077 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0077|0x0077: CHECK_CAST  (r3 I:com.caverock.androidsvg.SVG$SvgElement) = (com.caverock.androidsvg.SVG$SvgElement) (r3 I:?[OBJECT, ARRAY]) \l0x0079: INVOKE  (r3 I:android.graphics.Path) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r3 I:com.caverock.androidsvg.SVG$SvgElement)\l  (r1 I:boolean)\l com.caverock.androidsvg.SVGAndroidRenderer.objectToPath(com.caverock.androidsvg.SVG$SvgElement, boolean):android.graphics.Path type: DIRECT \l}"];
Node_22 [shape=record,label="{22\:\ 0x007d|0x007d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0066 \l}"];
Node_23 [shape=record,label="{23\:\ 0x007f|0x007f: SGET  (r4 I:android.graphics.Path$Op) =  android.graphics.Path.Op.UNION android.graphics.Path$Op \l0x0081: INVOKE  \l  (r7 I:android.graphics.Path)\l  (r3 I:android.graphics.Path)\l  (r4 I:android.graphics.Path$Op)\l android.graphics.Path.op(android.graphics.Path, android.graphics.Path$Op):boolean type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0085|0x0085: IGET  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0087: IGET  (r0 I:com.caverock.androidsvg.SVG$Style) = \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x0089: IGET  (r0 I:java.lang.String) = (r0 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.clipPath java.lang.String \l}"];
Node_25 [shape=record,label="{25\:\ 0x008b|0x008b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x00a4 \l}"];
Node_26 [shape=record,label="{26\:\ 0x008d|0x008d: IGET  (r0 I:com.caverock.androidsvg.SVG$Box) = (r6 I:com.caverock.androidsvg.SVG$ClipPath) com.caverock.androidsvg.SVG.ClipPath.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_27 [shape=record,label="{27\:\ 0x008f|0x008f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0097 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0091|0x0091: INVOKE  (r0 I:com.caverock.androidsvg.SVG$Box) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r7 I:android.graphics.Path)\l com.caverock.androidsvg.SVGAndroidRenderer.calculatePathBounds(android.graphics.Path):com.caverock.androidsvg.SVG$Box type: DIRECT \l0x0095: IPUT  \l  (r0 I:com.caverock.androidsvg.SVG$Box)\l  (r6 I:com.caverock.androidsvg.SVG$ClipPath)\l com.caverock.androidsvg.SVG.ClipPath.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_29 [shape=record,label="{29\:\ 0x0097|0x0097: IGET  (r0 I:com.caverock.androidsvg.SVG$Box) = (r6 I:com.caverock.androidsvg.SVG$ClipPath) com.caverock.androidsvg.SVG.ClipPath.boundingBox com.caverock.androidsvg.SVG$Box \l0x0099: INVOKE  (r6 I:android.graphics.Path) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r6 I:com.caverock.androidsvg.SVG$SvgElement)\l  (r0 I:com.caverock.androidsvg.SVG$Box)\l com.caverock.androidsvg.SVGAndroidRenderer.calculateClipPath(com.caverock.androidsvg.SVG$SvgElement, com.caverock.androidsvg.SVG$Box):android.graphics.Path type: DIRECT \l}"];
Node_30 [shape=record,label="{30\:\ 0x009d|0x009d: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x00a4 \l}"];
Node_31 [shape=record,label="{31\:\ 0x009f|0x009f: SGET  (r0 I:android.graphics.Path$Op) =  android.graphics.Path.Op.INTERSECT android.graphics.Path$Op \l0x00a1: INVOKE  \l  (r7 I:android.graphics.Path)\l  (r6 I:android.graphics.Path)\l  (r0 I:android.graphics.Path$Op)\l android.graphics.Path.op(android.graphics.Path, android.graphics.Path$Op):boolean type: VIRTUAL \l}"];
Node_32 [shape=record,label="{32\:\ 0x00a4|0x00a4: INVOKE  \l  (r7 I:android.graphics.Path)\l  (r2 I:android.graphics.Matrix)\l android.graphics.Path.transform(android.graphics.Matrix):void type: VIRTUAL \l0x00a7: IGET  (r6 I:java.util.Stack\<com.caverock.androidsvg.SVGAndroidRenderer$RendererState\>) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.stateStack java.util.Stack \l0x00a9: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.Stack) java.util.Stack.pop():java.lang.Object type: VIRTUAL \l0x00ad: CHECK_CAST  (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (com.caverock.androidsvg.SVGAndroidRenderer$RendererState) (r6 I:?[OBJECT, ARRAY]) \l0x00af: IPUT  \l  (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l}"];
Node_33 [shape=record,label="{33\:\ 0x00b1|0x00b1: RETURN  (r7 I:android.graphics.Path) \l}"];
MethodNode[shape=record,label="{private android.graphics.Path com.caverock.androidsvg.SVGAndroidRenderer.calculateClipPath((r5 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r6 I:com.caverock.androidsvg.SVG$SvgElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.caverock.androidsvg.SVG$Box A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=19\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_24;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_16[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_16;
Node_22 -> Node_23[style=dashed];
Node_23 -> Node_16;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
}

