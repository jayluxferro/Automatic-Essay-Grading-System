digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.updateStyleForElement(Lcom\/caverock\/androidsvg\/SVGAndroidRenderer$RendererState;Lcom\/caverock\/androidsvg\/SVG$SvgElementBase;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.caverock.androidsvg.SVG$SvgContainer) = (r6 I:com.caverock.androidsvg.SVG$SvgElementBase) com.caverock.androidsvg.SVG.SvgElementBase.parent com.caverock.androidsvg.SVG$SvgContainer \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IGET  (r1 I:com.caverock.androidsvg.SVG$Style) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x0009: INVOKE  (r1 I:com.caverock.androidsvg.SVG$Style), (r0 I:boolean) com.caverock.androidsvg.SVG.Style.resetNonInheritingProperties(boolean):void type: VIRTUAL \l0x000c: IGET  (r0 I:com.caverock.androidsvg.SVG$Style) = (r6 I:com.caverock.androidsvg.SVG$SvgElementBase) com.caverock.androidsvg.SVG.SvgElementBase.baseStyle com.caverock.androidsvg.SVG$Style \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0015 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IGET  (r0 I:com.caverock.androidsvg.SVG$Style) = (r6 I:com.caverock.androidsvg.SVG$SvgElementBase) com.caverock.androidsvg.SVG.SvgElementBase.baseStyle com.caverock.androidsvg.SVG$Style \l0x0012: INVOKE  \l  (r4 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r0 I:com.caverock.androidsvg.SVG$Style)\l com.caverock.androidsvg.SVGAndroidRenderer.updateStyle(com.caverock.androidsvg.SVGAndroidRenderer$RendererState, com.caverock.androidsvg.SVG$Style):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IGET  (r0 I:com.caverock.androidsvg.SVG) = (r4 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.document com.caverock.androidsvg.SVG \l0x0017: INVOKE  (r0 I:boolean) = (r0 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.hasCSSRules():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0043 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: IGET  (r0 I:com.caverock.androidsvg.SVG) = (r4 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.document com.caverock.androidsvg.SVG \l0x001f: INVOKE  (r0 I:java.util.List) = (r0 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.getCSSRules():java.util.List type: VIRTUAL \l0x0023: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0043 \l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|0x002d: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0031: CHECK_CAST  (r1 I:com.caverock.androidsvg.CSSParser$Rule) = (com.caverock.androidsvg.CSSParser$Rule) (r1 I:?[OBJECT, ARRAY]) \l0x0033: IGET  (r2 I:com.caverock.androidsvg.CSSParser$RuleMatchContext) = (r4 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.ruleMatchContext com.caverock.androidsvg.CSSParser$RuleMatchContext \l0x0035: IGET  (r3 I:com.caverock.androidsvg.CSSParser$Selector) = (r1 I:com.caverock.androidsvg.CSSParser$Rule) com.caverock.androidsvg.CSSParser.Rule.selector com.caverock.androidsvg.CSSParser$Selector \l0x0037: INVOKE  (r2 I:boolean) = \l  (r2 I:com.caverock.androidsvg.CSSParser$RuleMatchContext)\l  (r3 I:com.caverock.androidsvg.CSSParser$Selector)\l  (r6 I:com.caverock.androidsvg.SVG$SvgElementBase)\l com.caverock.androidsvg.CSSParser.ruleMatch(com.caverock.androidsvg.CSSParser$RuleMatchContext, com.caverock.androidsvg.CSSParser$Selector, com.caverock.androidsvg.SVG$SvgElementBase):boolean type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|0x003b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0027 \l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|0x003d: IGET  (r1 I:com.caverock.androidsvg.SVG$Style) = (r1 I:com.caverock.androidsvg.CSSParser$Rule) com.caverock.androidsvg.CSSParser.Rule.style com.caverock.androidsvg.SVG$Style \l0x003f: INVOKE  \l  (r4 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r1 I:com.caverock.androidsvg.SVG$Style)\l com.caverock.androidsvg.SVGAndroidRenderer.updateStyle(com.caverock.androidsvg.SVGAndroidRenderer$RendererState, com.caverock.androidsvg.SVG$Style):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0043|0x0043: IGET  (r0 I:com.caverock.androidsvg.SVG$Style) = (r6 I:com.caverock.androidsvg.SVG$SvgElementBase) com.caverock.androidsvg.SVG.SvgElementBase.style com.caverock.androidsvg.SVG$Style \l}"];
Node_16 [shape=record,label="{16\:\ 0x0045|0x0045: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x004c \l}"];
Node_17 [shape=record,label="{17\:\ 0x0047|0x0047: IGET  (r6 I:com.caverock.androidsvg.SVG$Style) = (r6 I:com.caverock.androidsvg.SVG$SvgElementBase) com.caverock.androidsvg.SVG.SvgElementBase.style com.caverock.androidsvg.SVG$Style \l0x0049: INVOKE  \l  (r4 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r6 I:com.caverock.androidsvg.SVG$Style)\l com.caverock.androidsvg.SVGAndroidRenderer.updateStyle(com.caverock.androidsvg.SVGAndroidRenderer$RendererState, com.caverock.androidsvg.SVG$Style):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x004c|0x004c: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.updateStyleForElement((r4 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.caverock.androidsvg.SVG$SvgElementBase A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_10;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_10;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
}

