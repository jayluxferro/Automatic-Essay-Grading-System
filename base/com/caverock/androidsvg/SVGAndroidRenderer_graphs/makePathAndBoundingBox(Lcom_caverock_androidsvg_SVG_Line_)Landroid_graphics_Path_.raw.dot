digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.makePathAndBoundingBox(Lcom\/caverock\/androidsvg\/SVG$Line;)Landroid\/graphics\/Path;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.caverock.androidsvg.SVG$Length) = (r10 I:com.caverock.androidsvg.SVG$Line) com.caverock.androidsvg.SVG.Line.x1 com.caverock.androidsvg.SVG$Length \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IGET  (r0 I:com.caverock.androidsvg.SVG$Length) = (r10 I:com.caverock.androidsvg.SVG$Line) com.caverock.androidsvg.SVG.Line.x1 com.caverock.androidsvg.SVG$Length \l0x0009: INVOKE  (r0 I:float) = \l  (r0 I:com.caverock.androidsvg.SVG$Length)\l  (r9 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r2 I:com.caverock.androidsvg.SVG$Length) = (r10 I:com.caverock.androidsvg.SVG$Line) com.caverock.androidsvg.SVG.Line.y1 com.caverock.androidsvg.SVG$Length \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0013 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: IGET  (r2 I:com.caverock.androidsvg.SVG$Length) = (r10 I:com.caverock.androidsvg.SVG$Line) com.caverock.androidsvg.SVG.Line.y1 com.caverock.androidsvg.SVG$Length \l0x0015: INVOKE  (r2 I:float) = \l  (r2 I:com.caverock.androidsvg.SVG$Length)\l  (r9 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: IGET  (r3 I:com.caverock.androidsvg.SVG$Length) = (r10 I:com.caverock.androidsvg.SVG$Line) com.caverock.androidsvg.SVG.Line.x2 com.caverock.androidsvg.SVG$Length \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001f \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: IGET  (r3 I:com.caverock.androidsvg.SVG$Length) = (r10 I:com.caverock.androidsvg.SVG$Line) com.caverock.androidsvg.SVG.Line.x2 com.caverock.androidsvg.SVG$Length \l0x0021: INVOKE  (r3 I:float) = \l  (r3 I:com.caverock.androidsvg.SVG$Length)\l  (r9 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|0x0025: IGET  (r4 I:com.caverock.androidsvg.SVG$Length) = (r10 I:com.caverock.androidsvg.SVG$Line) com.caverock.androidsvg.SVG.Line.y2 com.caverock.androidsvg.SVG$Length \l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|0x0027: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002a \l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|0x002a: IGET  (r1 I:com.caverock.androidsvg.SVG$Length) = (r10 I:com.caverock.androidsvg.SVG$Line) com.caverock.androidsvg.SVG.Line.y2 com.caverock.androidsvg.SVG$Length \l0x002c: INVOKE  (r1 I:float) = \l  (r1 I:com.caverock.androidsvg.SVG$Length)\l  (r9 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0030|0x0030: IGET  (r4 I:com.caverock.androidsvg.SVG$Box) = (r10 I:com.caverock.androidsvg.SVG$Line) com.caverock.androidsvg.SVG.Line.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_17 [shape=record,label="{17\:\ 0x0032|0x0032: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x004f \l}"];
Node_18 [shape=record,label="{18\:\ 0x0034|0x0034: NEW_INSTANCE  (r4 I:com.caverock.androidsvg.SVG$Box) =  com.caverock.androidsvg.SVG$Box \l0x0036: INVOKE  (r5 I:float) = (r0 I:float), (r3 I:float) java.lang.Math.min(float, float):float type: STATIC \l0x003a: INVOKE  (r6 I:float) = (r2 I:float), (r1 I:float) java.lang.Math.min(float, float):float type: STATIC \l0x003e: ARITH  (r7 I:float) = (r3 I:float) \- (r0 I:float) \l0x0040: INVOKE  (r7 I:float) = (r7 I:float) java.lang.Math.abs(float):float type: STATIC \l0x0044: ARITH  (r8 I:float) = (r1 I:float) \- (r2 I:float) \l0x0046: INVOKE  (r8 I:float) = (r8 I:float) java.lang.Math.abs(float):float type: STATIC \l0x004a: INVOKE  \l  (r4 I:com.caverock.androidsvg.SVG$Box)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:float)\l com.caverock.androidsvg.SVG.Box.\<init\>(float, float, float, float):void type: DIRECT \l0x004d: IPUT  \l  (r4 I:com.caverock.androidsvg.SVG$Box)\l  (r10 I:com.caverock.androidsvg.SVG$Line)\l com.caverock.androidsvg.SVG.Line.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_19 [shape=record,label="{19\:\ 0x004f|0x004f: NEW_INSTANCE  (r10 I:android.graphics.Path) =  android.graphics.Path \l0x0051: INVOKE  (r10 I:android.graphics.Path) android.graphics.Path.\<init\>():void type: DIRECT \l0x0054: INVOKE  (r10 I:android.graphics.Path), (r0 I:float), (r2 I:float) android.graphics.Path.moveTo(float, float):void type: VIRTUAL \l0x0057: INVOKE  (r10 I:android.graphics.Path), (r3 I:float), (r1 I:float) android.graphics.Path.lineTo(float, float):void type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x005a|0x005a: RETURN  (r10 I:android.graphics.Path) \l}"];
MethodNode[shape=record,label="{private android.graphics.Path com.caverock.androidsvg.SVGAndroidRenderer.makePathAndBoundingBox((r9 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r10 I:com.caverock.androidsvg.SVG$Line A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
}

