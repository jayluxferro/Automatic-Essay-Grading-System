digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.makePathAndBoundingBox(Lcom\/caverock\/androidsvg\/SVG$Text;)Landroid\/graphics\/Path;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List) = (r10 I:com.caverock.androidsvg.SVG$Text) com.caverock.androidsvg.SVG.Text.x java.util.List \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:java.util.List) = (r10 I:com.caverock.androidsvg.SVG$Text) com.caverock.androidsvg.SVG.Text.x java.util.List \l0x0008: INVOKE  (r0 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IGET  (r0 I:java.util.List) = (r10 I:com.caverock.androidsvg.SVG$Text) com.caverock.androidsvg.SVG.Text.x java.util.List \l0x0011: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0015: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$Length) = (com.caverock.androidsvg.SVG$Length) (r0 I:?[OBJECT, ARRAY]) \l0x0017: INVOKE  (r0 I:float) = \l  (r0 I:com.caverock.androidsvg.SVG$Length)\l  (r9 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IGET  (r3 I:java.util.List) = (r10 I:com.caverock.androidsvg.SVG$Text) com.caverock.androidsvg.SVG.Text.y java.util.List \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0037 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: IGET  (r3 I:java.util.List) = (r10 I:com.caverock.androidsvg.SVG$Text) com.caverock.androidsvg.SVG.Text.y java.util.List \l0x0023: INVOKE  (r3 I:int) = (r3 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002a \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: IGET  (r3 I:java.util.List) = (r10 I:com.caverock.androidsvg.SVG$Text) com.caverock.androidsvg.SVG.Text.y java.util.List \l0x002c: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0030: CHECK_CAST  (r3 I:com.caverock.androidsvg.SVG$Length) = (com.caverock.androidsvg.SVG$Length) (r3 I:?[OBJECT, ARRAY]) \l0x0032: INVOKE  (r3 I:float) = \l  (r3 I:com.caverock.androidsvg.SVG$Length)\l  (r9 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|0x0037: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0038|0x0038: IGET  (r4 I:java.util.List) = (r10 I:com.caverock.androidsvg.SVG$Text) com.caverock.androidsvg.SVG.Text.dx java.util.List \l}"];
Node_15 [shape=record,label="{15\:\ 0x003a|0x003a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0052 \l}"];
Node_16 [shape=record,label="{16\:\ 0x003c|0x003c: IGET  (r4 I:java.util.List) = (r10 I:com.caverock.androidsvg.SVG$Text) com.caverock.androidsvg.SVG.Text.dx java.util.List \l0x003e: INVOKE  (r4 I:int) = (r4 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|0x0042: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0045 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0045|0x0045: IGET  (r4 I:java.util.List) = (r10 I:com.caverock.androidsvg.SVG$Text) com.caverock.androidsvg.SVG.Text.dx java.util.List \l0x0047: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x004b: CHECK_CAST  (r4 I:com.caverock.androidsvg.SVG$Length) = (com.caverock.androidsvg.SVG$Length) (r4 I:?[OBJECT, ARRAY]) \l0x004d: INVOKE  (r4 I:float) = \l  (r4 I:com.caverock.androidsvg.SVG$Length)\l  (r9 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0052|0x0052: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x0053|0x0053: IGET  (r5 I:java.util.List) = (r10 I:com.caverock.androidsvg.SVG$Text) com.caverock.androidsvg.SVG.Text.dy java.util.List \l}"];
Node_22 [shape=record,label="{22\:\ 0x0055|0x0055: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x006c \l}"];
Node_23 [shape=record,label="{23\:\ 0x0057|0x0057: IGET  (r5 I:java.util.List) = (r10 I:com.caverock.androidsvg.SVG$Text) com.caverock.androidsvg.SVG.Text.dy java.util.List \l0x0059: INVOKE  (r5 I:int) = (r5 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_24 [shape=record,label="{24\:\ 0x005d|0x005d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0060 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0060|0x0060: IGET  (r2 I:java.util.List) = (r10 I:com.caverock.androidsvg.SVG$Text) com.caverock.androidsvg.SVG.Text.dy java.util.List \l0x0062: INVOKE  (r1 I:java.lang.Object) = (r2 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0066: CHECK_CAST  (r1 I:com.caverock.androidsvg.SVG$Length) = (com.caverock.androidsvg.SVG$Length) (r1 I:?[OBJECT, ARRAY]) \l0x0068: INVOKE  (r2 I:float) = \l  (r1 I:com.caverock.androidsvg.SVG$Length)\l  (r9 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x006c|0x006c: IGET  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r9 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x006e: IGET  (r1 I:com.caverock.androidsvg.SVG$Style) = \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x0070: IGET  (r1 I:com.caverock.androidsvg.SVG$Style$TextAnchor) = (r1 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.textAnchor com.caverock.androidsvg.SVG$Style$TextAnchor \l0x0072: SGET  (r5 I:com.caverock.androidsvg.SVG$Style$TextAnchor) =  com.caverock.androidsvg.SVG.Style.TextAnchor.Start com.caverock.androidsvg.SVG$Style$TextAnchor \l}"];
Node_28 [shape=record,label="{28\:\ 0x0074|0x0074: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x008a \l}"];
Node_29 [shape=record,label="{29\:\ 0x0076|0x0076: INVOKE  (r1 I:float) = \l  (r9 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r10 I:com.caverock.androidsvg.SVG$TextContainer)\l com.caverock.androidsvg.SVGAndroidRenderer.calculateTextWidth(com.caverock.androidsvg.SVG$TextContainer):float type: DIRECT \l0x007a: IGET  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r9 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x007c: IGET  (r5 I:com.caverock.androidsvg.SVG$Style) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x007e: IGET  (r5 I:com.caverock.androidsvg.SVG$Style$TextAnchor) = (r5 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.textAnchor com.caverock.androidsvg.SVG$Style$TextAnchor \l0x0080: SGET  (r6 I:com.caverock.androidsvg.SVG$Style$TextAnchor) =  com.caverock.androidsvg.SVG.Style.TextAnchor.Middle com.caverock.androidsvg.SVG$Style$TextAnchor \l}"];
Node_30 [shape=record,label="{30\:\ 0x0082|0x0082: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0089 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0084|0x0084: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x0086: ARITH  (r1 I:float) = (r1 I:float) \/ (r5 I:float) \l0x0087: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0089|0x0089: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l}"];
Node_33 [shape=record,label="{33\:\ 0x008a|0x008a: IGET  (r1 I:com.caverock.androidsvg.SVG$Box) = (r10 I:com.caverock.androidsvg.SVG$Text) com.caverock.androidsvg.SVG.Text.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_34 [shape=record,label="{34\:\ 0x008c|0x008c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x00b1 \l}"];
Node_35 [shape=record,label="{35\:\ 0x008e|0x008e: NEW_INSTANCE  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator) =  com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator \l0x0090: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator)\l  (r9 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:float)\l  (r3 I:float)\l com.caverock.androidsvg.SVGAndroidRenderer.TextBoundsCalculator.\<init\>(com.caverock.androidsvg.SVGAndroidRenderer, float, float):void type: DIRECT \l0x0093: INVOKE  \l  (r9 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r10 I:com.caverock.androidsvg.SVG$TextContainer)\l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)\l com.caverock.androidsvg.SVGAndroidRenderer.enumerateTextSpans(com.caverock.androidsvg.SVG$TextContainer, com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor):void type: DIRECT \l0x0096: NEW_INSTANCE  (r5 I:com.caverock.androidsvg.SVG$Box) =  com.caverock.androidsvg.SVG$Box \l0x0098: IGET  (r6 I:android.graphics.RectF) = \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator)\l com.caverock.androidsvg.SVGAndroidRenderer.TextBoundsCalculator.bbox android.graphics.RectF \l0x009a: IGET  (r6 I:float) = (r6 I:android.graphics.RectF) android.graphics.RectF.left float \l0x009c: IGET  (r7 I:android.graphics.RectF) = \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator)\l com.caverock.androidsvg.SVGAndroidRenderer.TextBoundsCalculator.bbox android.graphics.RectF \l0x009e: IGET  (r7 I:float) = (r7 I:android.graphics.RectF) android.graphics.RectF.top float \l0x00a0: IGET  (r8 I:android.graphics.RectF) = \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator)\l com.caverock.androidsvg.SVGAndroidRenderer.TextBoundsCalculator.bbox android.graphics.RectF \l0x00a2: INVOKE  (r8 I:float) = (r8 I:android.graphics.RectF) android.graphics.RectF.width():float type: VIRTUAL \l0x00a6: IGET  (r1 I:android.graphics.RectF) = \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator)\l com.caverock.androidsvg.SVGAndroidRenderer.TextBoundsCalculator.bbox android.graphics.RectF \l0x00a8: INVOKE  (r1 I:float) = (r1 I:android.graphics.RectF) android.graphics.RectF.height():float type: VIRTUAL \l0x00ac: INVOKE  \l  (r5 I:com.caverock.androidsvg.SVG$Box)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:float)\l  (r1 I:float)\l com.caverock.androidsvg.SVG.Box.\<init\>(float, float, float, float):void type: DIRECT \l0x00af: IPUT  \l  (r5 I:com.caverock.androidsvg.SVG$Box)\l  (r10 I:com.caverock.androidsvg.SVG$Text)\l com.caverock.androidsvg.SVG.Text.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_36 [shape=record,label="{36\:\ 0x00b1|0x00b1: NEW_INSTANCE  (r1 I:android.graphics.Path) =  android.graphics.Path \l0x00b3: INVOKE  (r1 I:android.graphics.Path) android.graphics.Path.\<init\>():void type: DIRECT \l0x00b6: NEW_INSTANCE  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$PlainTextToPath) =  com.caverock.androidsvg.SVGAndroidRenderer$PlainTextToPath \l0x00b8: ARITH  (r0 I:float) = (r0 I:float) + (r4 I:float) \l0x00b9: ARITH  (r3 I:float) = (r3 I:float) + (r2 I:float) \l0x00ba: INVOKE  \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$PlainTextToPath)\l  (r9 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:float)\l  (r3 I:float)\l  (r1 I:android.graphics.Path)\l com.caverock.androidsvg.SVGAndroidRenderer.PlainTextToPath.\<init\>(com.caverock.androidsvg.SVGAndroidRenderer, float, float, android.graphics.Path):void type: DIRECT \l0x00bd: INVOKE  \l  (r9 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r10 I:com.caverock.androidsvg.SVG$TextContainer)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)\l com.caverock.androidsvg.SVGAndroidRenderer.enumerateTextSpans(com.caverock.androidsvg.SVG$TextContainer, com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor):void type: DIRECT \l}"];
Node_37 [shape=record,label="{37\:\ 0x00c0|0x00c0: RETURN  (r1 I:android.graphics.Path) \l}"];
MethodNode[shape=record,label="{private android.graphics.Path com.caverock.androidsvg.SVGAndroidRenderer.makePathAndBoundingBox((r9 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r10 I:com.caverock.androidsvg.SVG$Text A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_27[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_33;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
}

