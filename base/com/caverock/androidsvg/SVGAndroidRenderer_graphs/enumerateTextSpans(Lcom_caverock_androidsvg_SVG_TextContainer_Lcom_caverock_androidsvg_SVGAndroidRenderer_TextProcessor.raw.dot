digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.enumerateTextSpans(Lcom\/caverock\/androidsvg\/SVG$TextContainer;Lcom\/caverock\/androidsvg\/SVGAndroidRenderer$TextProcessor;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r4 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.display():boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IGET  (r5 I:java.util.List) = (r5 I:com.caverock.androidsvg.SVG$TextContainer) com.caverock.androidsvg.SVG.TextContainer.children java.util.List \l0x0009: INVOKE  (r5 I:java.util.Iterator) = (r5 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l0x000d: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000e: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: INVOKE  (r2 I:boolean) = (r5 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0035 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INVOKE  (r2 I:java.lang.Object) = (r5 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0019: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$SvgObject) = (com.caverock.androidsvg.SVG$SvgObject) (r2 I:?[OBJECT, ARRAY]) \l0x001b: INSTANCE_OF  (r3 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$TextSequence \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0030 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$TextSequence) = (com.caverock.androidsvg.SVG$TextSequence) (r2 I:?[OBJECT, ARRAY]) \l0x0021: IGET  (r2 I:java.lang.String) = (r2 I:com.caverock.androidsvg.SVG$TextSequence) com.caverock.androidsvg.SVG.TextSequence.text java.lang.String \l0x0023: INVOKE  (r3 I:boolean) = (r5 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l0x0027: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) ^ (r0 I:?[int, boolean, short, byte, char]) \l0x0028: INVOKE  (r1 I:java.lang.String) = \l  (r4 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:java.lang.String)\l  (r1 I:boolean)\l  (r3 I:boolean)\l com.caverock.androidsvg.SVGAndroidRenderer.textXMLSpaceTransform(java.lang.String, boolean, boolean):java.lang.String type: DIRECT \l0x002c: INVOKE  \l  (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)\l  (r1 I:java.lang.String)\l com.caverock.androidsvg.SVGAndroidRenderer.TextProcessor.processText(java.lang.String):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: INVOKE  \l  (r4 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$SvgObject)\l  (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)\l com.caverock.androidsvg.SVGAndroidRenderer.processTextChild(com.caverock.androidsvg.SVG$SvgObject, com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|0x0033: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.enumerateTextSpans((r4 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r5 I:com.caverock.androidsvg.SVG$TextContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_4;
}

