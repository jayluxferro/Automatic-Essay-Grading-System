digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.checkForClipPath(Lcom\/caverock\/androidsvg\/SVG$SvgElement;Lcom\/caverock\/androidsvg\/SVG$Box;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r2 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0002: IGET  (r0 I:com.caverock.androidsvg.SVG$Style) = \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x0004: IGET  (r0 I:java.lang.String) = (r0 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.clipPath java.lang.String \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x000b: CONST  (r1 I:?[int, float, short, byte, char]) = (19 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:8:0x001b \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: INVOKE  (r3 I:android.graphics.Path) = \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r3 I:com.caverock.androidsvg.SVG$SvgElement)\l  (r4 I:com.caverock.androidsvg.SVG$Box)\l com.caverock.androidsvg.SVGAndroidRenderer.calculateClipPath(com.caverock.androidsvg.SVG$SvgElement, com.caverock.androidsvg.SVG$Box):android.graphics.Path type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001e \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IGET  (r4 I:android.graphics.Canvas) = (r2 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.canvas android.graphics.Canvas \l0x0017: INVOKE  \l  (r4 I:android.graphics.Canvas)\l  (r3 I:android.graphics.Path)\l android.graphics.Canvas.clipPath(android.graphics.Path):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r3 I:com.caverock.androidsvg.SVG$SvgElement)\l  (r4 I:com.caverock.androidsvg.SVG$Box)\l com.caverock.androidsvg.SVGAndroidRenderer.checkForClipPath_OldStyle(com.caverock.androidsvg.SVG$SvgElement, com.caverock.androidsvg.SVG$Box):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.checkForClipPath((r2 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r3 I:com.caverock.androidsvg.SVG$SvgElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.caverock.androidsvg.SVG$Box A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_9;
Node_8 -> Node_9;
}

