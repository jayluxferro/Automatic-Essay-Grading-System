digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.render(Lcom\/caverock\/androidsvg\/SVG$Circle;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"Circle render\" \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0005: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.Object[]) com.caverock.androidsvg.SVGAndroidRenderer.debug(java.lang.String, java.lang.Object[]):void type: STATIC \l0x0008: IGET  (r0 I:com.caverock.androidsvg.SVG$Length) = (r4 I:com.caverock.androidsvg.SVG$Circle) com.caverock.androidsvg.SVG.Circle.r com.caverock.androidsvg.SVG$Length \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x005c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IGET  (r0 I:com.caverock.androidsvg.SVG$Length) = (r4 I:com.caverock.androidsvg.SVG$Circle) com.caverock.androidsvg.SVG.Circle.r com.caverock.androidsvg.SVG$Length \l0x000e: INVOKE  (r0 I:boolean) = (r0 I:com.caverock.androidsvg.SVG$Length) com.caverock.androidsvg.SVG.Length.isZero():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0015 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IGET  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0017: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r4 I:com.caverock.androidsvg.SVG$SvgElementBase)\l com.caverock.androidsvg.SVGAndroidRenderer.updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState, com.caverock.androidsvg.SVG$SvgElementBase):void type: DIRECT \l0x001a: INVOKE  (r0 I:boolean) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.display():boolean type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0021 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: INVOKE  (r0 I:boolean) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.visible():boolean type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0028 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: RETURN   \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: IGET  (r0 I:android.graphics.Matrix) = (r4 I:com.caverock.androidsvg.SVG$Circle) com.caverock.androidsvg.SVG.Circle.transform android.graphics.Matrix \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0033 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|0x002c: IGET  (r0 I:android.graphics.Canvas) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.canvas android.graphics.Canvas \l0x002e: IGET  (r1 I:android.graphics.Matrix) = (r4 I:com.caverock.androidsvg.SVG$Circle) com.caverock.androidsvg.SVG.Circle.transform android.graphics.Matrix \l0x0030: INVOKE  \l  (r0 I:android.graphics.Canvas)\l  (r1 I:android.graphics.Matrix)\l android.graphics.Canvas.concat(android.graphics.Matrix):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: INVOKE  (r0 I:android.graphics.Path) = \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r4 I:com.caverock.androidsvg.SVG$Circle)\l com.caverock.androidsvg.SVGAndroidRenderer.makePathAndBoundingBox(com.caverock.androidsvg.SVG$Circle):android.graphics.Path type: DIRECT \l0x0037: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r4 I:com.caverock.androidsvg.SVG$SvgElement)\l com.caverock.androidsvg.SVGAndroidRenderer.updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement):void type: DIRECT \l0x003a: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r4 I:com.caverock.androidsvg.SVG$SvgElement)\l com.caverock.androidsvg.SVGAndroidRenderer.checkForGradientsAndPatterns(com.caverock.androidsvg.SVG$SvgElement):void type: DIRECT \l0x003d: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r4 I:com.caverock.androidsvg.SVG$SvgElement)\l com.caverock.androidsvg.SVGAndroidRenderer.checkForClipPath(com.caverock.androidsvg.SVG$SvgElement):void type: DIRECT \l0x0040: INVOKE  (r1 I:boolean) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.pushLayer():boolean type: DIRECT \l0x0044: IGET  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0046: IGET  (r2 I:boolean) = \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.hasFill boolean \l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|0x0048: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x004d \l}"];
Node_16 [shape=record,label="{16\:\ 0x004a|0x004a: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r4 I:com.caverock.androidsvg.SVG$SvgElement)\l  (r0 I:android.graphics.Path)\l com.caverock.androidsvg.SVGAndroidRenderer.doFilledPath(com.caverock.androidsvg.SVG$SvgElement, android.graphics.Path):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x004d|0x004d: IGET  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x004f: IGET  (r2 I:boolean) = \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.hasStroke boolean \l}"];
Node_18 [shape=record,label="{18\:\ 0x0051|0x0051: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0056 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0053|0x0053: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:android.graphics.Path)\l com.caverock.androidsvg.SVGAndroidRenderer.doStroke(android.graphics.Path):void type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x0056|0x0056: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x005b \l}"];
Node_21 [shape=record,label="{21\:\ 0x0058|0x0058: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r4 I:com.caverock.androidsvg.SVG$SvgElement)\l com.caverock.androidsvg.SVGAndroidRenderer.popLayer(com.caverock.androidsvg.SVG$SvgElement):void type: DIRECT \l}"];
Node_22 [shape=record,label="{22\:\ 0x005b|0x005b: RETURN   \l}"];
Node_23 [shape=record,label="{23\:\ 0x005c|0x005c: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.render((r3 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r4 I:com.caverock.androidsvg.SVG$Circle A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_23;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_23[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
}

