digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.render(Lcom\/caverock\/androidsvg\/SVG$Path;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"Path render\" \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0005: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.Object[]) com.caverock.androidsvg.SVGAndroidRenderer.debug(java.lang.String, java.lang.Object[]):void type: STATIC \l0x0008: IGET  (r0 I:com.caverock.androidsvg.SVG$PathDefinition) = (r4 I:com.caverock.androidsvg.SVG$Path) com.caverock.androidsvg.SVG.Path.d com.caverock.androidsvg.SVG$PathDefinition \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IGET  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x000f: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r4 I:com.caverock.androidsvg.SVG$SvgElementBase)\l com.caverock.androidsvg.SVGAndroidRenderer.updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState, com.caverock.androidsvg.SVG$SvgElementBase):void type: DIRECT \l0x0012: INVOKE  (r0 I:boolean) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.display():boolean type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0019 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: INVOKE  (r0 I:boolean) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.visible():boolean type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0020 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: IGET  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0022: IGET  (r0 I:boolean) = \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.hasStroke boolean \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002d \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: IGET  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0028: IGET  (r0 I:boolean) = \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.hasFill boolean \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002d \l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|0x002c: RETURN   \l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|0x002d: IGET  (r0 I:android.graphics.Matrix) = (r4 I:com.caverock.androidsvg.SVG$Path) com.caverock.androidsvg.SVG.Path.transform android.graphics.Matrix \l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|0x002f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0038 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0031|0x0031: IGET  (r0 I:android.graphics.Canvas) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.canvas android.graphics.Canvas \l0x0033: IGET  (r1 I:android.graphics.Matrix) = (r4 I:com.caverock.androidsvg.SVG$Path) com.caverock.androidsvg.SVG.Path.transform android.graphics.Matrix \l0x0035: INVOKE  \l  (r0 I:android.graphics.Canvas)\l  (r1 I:android.graphics.Matrix)\l android.graphics.Canvas.concat(android.graphics.Matrix):void type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0038|0x0038: NEW_INSTANCE  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$PathConverter) =  com.caverock.androidsvg.SVGAndroidRenderer$PathConverter \l0x003a: IGET  (r1 I:com.caverock.androidsvg.SVG$PathDefinition) = (r4 I:com.caverock.androidsvg.SVG$Path) com.caverock.androidsvg.SVG.Path.d com.caverock.androidsvg.SVG$PathDefinition \l0x003c: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$PathConverter)\l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r1 I:com.caverock.androidsvg.SVG$PathDefinition)\l com.caverock.androidsvg.SVGAndroidRenderer.PathConverter.\<init\>(com.caverock.androidsvg.SVGAndroidRenderer, com.caverock.androidsvg.SVG$PathDefinition):void type: DIRECT \l0x003f: INVOKE  (r0 I:android.graphics.Path) = \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$PathConverter)\l com.caverock.androidsvg.SVGAndroidRenderer.PathConverter.getPath():android.graphics.Path type: VIRTUAL \l0x0043: IGET  (r1 I:com.caverock.androidsvg.SVG$Box) = (r4 I:com.caverock.androidsvg.SVG$Path) com.caverock.androidsvg.SVG.Path.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_18 [shape=record,label="{18\:\ 0x0045|0x0045: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004d \l}"];
Node_19 [shape=record,label="{19\:\ 0x0047|0x0047: INVOKE  (r1 I:com.caverock.androidsvg.SVG$Box) = \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:android.graphics.Path)\l com.caverock.androidsvg.SVGAndroidRenderer.calculatePathBounds(android.graphics.Path):com.caverock.androidsvg.SVG$Box type: DIRECT \l0x004b: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG$Box)\l  (r4 I:com.caverock.androidsvg.SVG$Path)\l com.caverock.androidsvg.SVG.Path.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_20 [shape=record,label="{20\:\ 0x004d|0x004d: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r4 I:com.caverock.androidsvg.SVG$SvgElement)\l com.caverock.androidsvg.SVGAndroidRenderer.updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement):void type: DIRECT \l0x0050: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r4 I:com.caverock.androidsvg.SVG$SvgElement)\l com.caverock.androidsvg.SVGAndroidRenderer.checkForGradientsAndPatterns(com.caverock.androidsvg.SVG$SvgElement):void type: DIRECT \l0x0053: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r4 I:com.caverock.androidsvg.SVG$SvgElement)\l com.caverock.androidsvg.SVGAndroidRenderer.checkForClipPath(com.caverock.androidsvg.SVG$SvgElement):void type: DIRECT \l0x0056: INVOKE  (r1 I:boolean) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.pushLayer():boolean type: DIRECT \l0x005a: IGET  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x005c: IGET  (r2 I:boolean) = \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.hasFill boolean \l}"];
Node_21 [shape=record,label="{21\:\ 0x005e|0x005e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x006a \l}"];
Node_22 [shape=record,label="{22\:\ 0x0060|0x0060: INVOKE  (r2 I:android.graphics.Path$FillType) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.getFillTypeFromState():android.graphics.Path$FillType type: DIRECT \l0x0064: INVOKE  \l  (r0 I:android.graphics.Path)\l  (r2 I:android.graphics.Path$FillType)\l android.graphics.Path.setFillType(android.graphics.Path$FillType):void type: VIRTUAL \l0x0067: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r4 I:com.caverock.androidsvg.SVG$SvgElement)\l  (r0 I:android.graphics.Path)\l com.caverock.androidsvg.SVGAndroidRenderer.doFilledPath(com.caverock.androidsvg.SVG$SvgElement, android.graphics.Path):void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x006a|0x006a: IGET  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r3 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x006c: IGET  (r2 I:boolean) = \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.hasStroke boolean \l}"];
Node_24 [shape=record,label="{24\:\ 0x006e|0x006e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0073 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0070|0x0070: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:android.graphics.Path)\l com.caverock.androidsvg.SVGAndroidRenderer.doStroke(android.graphics.Path):void type: DIRECT \l}"];
Node_26 [shape=record,label="{26\:\ 0x0073|0x0073: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r4 I:com.caverock.androidsvg.SVG$GraphicsElement)\l com.caverock.androidsvg.SVGAndroidRenderer.renderMarkers(com.caverock.androidsvg.SVG$GraphicsElement):void type: DIRECT \l}"];
Node_27 [shape=record,label="{27\:\ 0x0076|0x0076: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x007b \l}"];
Node_28 [shape=record,label="{28\:\ 0x0078|0x0078: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r4 I:com.caverock.androidsvg.SVG$SvgElement)\l com.caverock.androidsvg.SVGAndroidRenderer.popLayer(com.caverock.androidsvg.SVG$SvgElement):void type: DIRECT \l}"];
Node_29 [shape=record,label="{29\:\ 0x007b|0x007b: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.render((r3 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r4 I:com.caverock.androidsvg.SVG$Path A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
}

