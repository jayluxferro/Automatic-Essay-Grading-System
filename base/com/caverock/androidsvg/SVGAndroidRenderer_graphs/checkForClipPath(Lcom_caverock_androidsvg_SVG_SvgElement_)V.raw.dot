digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.checkForClipPath(Lcom\/caverock\/androidsvg\/SVG$SvgElement;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.caverock.androidsvg.SVG$Box) = (r2 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.boundingBox com.caverock.androidsvg.SVG$Box \l0x0002: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r2 I:com.caverock.androidsvg.SVG$SvgElement)\l  (r0 I:com.caverock.androidsvg.SVG$Box)\l com.caverock.androidsvg.SVGAndroidRenderer.checkForClipPath(com.caverock.androidsvg.SVG$SvgElement, com.caverock.androidsvg.SVG$Box):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.checkForClipPath((r1 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r2 I:com.caverock.androidsvg.SVG$SvgElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

