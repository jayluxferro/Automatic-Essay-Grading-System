digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.doFilledPath(Lcom\/caverock\/androidsvg\/SVG$SvgElement;Landroid\/graphics\/Path;)V" {
subgraph cluster_Region_1930751128 {
label = "R(2:(2:2|(2:4|5))|6)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1981664450 {
label = "IF [B:1:0x0008] THEN: R(2:2|(2:4|5)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if ((r2.state.style.fill instanceof com.caverock.androidsvg.SVG.PaintReference) == true) goto L_0x000a\l}"];
subgraph cluster_Region_1076939962 {
label = "R(2:2|(2:4|5))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|com.caverock.androidsvg.SVG$SvgObject com.caverock.androidsvg.SVG.SvgObject r0 = r2.document.resolveIRI(((com.caverock.androidsvg.SVG.PaintReference) r2.state.style.fill).href)\l}"];
subgraph cluster_IfRegion_72792588 {
label = "IF [B:3:0x001c] THEN: R(2:4|5) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001c|if ((r0 instanceof com.caverock.androidsvg.SVG.Pattern) == true) goto L_0x001e\l}"];
subgraph cluster_Region_253876100 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001e|fillWithPattern(r3, r4, (com.caverock.androidsvg.SVG.Pattern) r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|RETURN\l|return\l}"];
}
}
}
}
Node_6 [shape=record,label="{6\:\ 0x0024|r2.canvas.drawPath(r4, r2.state.fillPaint)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x002d}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.doFilledPath((r2v0 'this' com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r3v0 com.caverock.androidsvg.SVG$SvgElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.graphics.Path A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_0 -> Node_1;
}

