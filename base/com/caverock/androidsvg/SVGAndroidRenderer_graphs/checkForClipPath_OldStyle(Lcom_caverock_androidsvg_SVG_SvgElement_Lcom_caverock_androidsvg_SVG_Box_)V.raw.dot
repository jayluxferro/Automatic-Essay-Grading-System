digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.checkForClipPath_OldStyle(Lcom\/caverock\/androidsvg\/SVG$SvgElement;Lcom\/caverock\/androidsvg\/SVG$Box;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.caverock.androidsvg.SVG) = (r6 I:com.caverock.androidsvg.SVG$SvgElement) com.caverock.androidsvg.SVG.SvgElement.document com.caverock.androidsvg.SVG \l0x0002: IGET  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0004: IGET  (r1 I:com.caverock.androidsvg.SVG$Style) = \l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x0006: IGET  (r1 I:java.lang.String) = (r1 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.clipPath java.lang.String \l0x0008: INVOKE  (r0 I:com.caverock.androidsvg.SVG$SvgObject) = (r0 I:com.caverock.androidsvg.SVG), (r1 I:java.lang.String) com.caverock.androidsvg.SVG.resolveIRI(java.lang.String):com.caverock.androidsvg.SVG$SvgObject type: VIRTUAL \l0x000c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0020 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: CONST_STR  (r6 I:java.lang.String) =  \"ClipPath reference '%s' not found\" \l0x0012: NEW_ARRAY  (r7 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0014: IGET  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0016: IGET  (r0 I:com.caverock.androidsvg.SVG$Style) = \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l0x0018: IGET  (r0 I:java.lang.String) = (r0 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.clipPath java.lang.String \l0x001a: APUT  \l  (r7 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l \l0x001c: INVOKE  (r6 I:java.lang.String), (r7 I:java.lang.Object[]) com.caverock.androidsvg.SVGAndroidRenderer.error(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$ClipPath) = (com.caverock.androidsvg.SVG$ClipPath) (r0 I:?[OBJECT, ARRAY]) \l0x0022: IGET  (r3 I:java.util.List) = (r0 I:com.caverock.androidsvg.SVG$ClipPath) com.caverock.androidsvg.SVG.ClipPath.children java.util.List \l0x0024: INVOKE  (r3 I:boolean) = (r3 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0028|0x0028: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0030 \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: IGET  (r6 I:android.graphics.Canvas) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.canvas android.graphics.Canvas \l0x002c: INVOKE  \l  (r6 I:android.graphics.Canvas)\l  (r2 I:int)\l  (r2 I:int)\l  (r2 I:int)\l  (r2 I:int)\l android.graphics.Canvas.clipRect(int, int, int, int):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: IGET  (r3 I:java.lang.Boolean) = (r0 I:com.caverock.androidsvg.SVG$ClipPath) com.caverock.androidsvg.SVG.ClipPath.clipPathUnitsAreUser java.lang.Boolean \l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|0x0032: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003f \l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: IGET  (r3 I:java.lang.Boolean) = (r0 I:com.caverock.androidsvg.SVG$ClipPath) com.caverock.androidsvg.SVG.ClipPath.clipPathUnitsAreUser java.lang.Boolean \l0x0036: INVOKE  (r3 I:boolean) = (r3 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|0x003a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x003d \l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|0x003f: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0040|0x0040: INSTANCE_OF  (r4 I:boolean) = (r6 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$Group \l}"];
Node_16 [shape=record,label="{16\:\ 0x0042|0x0042: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0058 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0044|0x0044: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0058 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|0x0046: CONST_STR  (r7 I:java.lang.String) =  \"\<clipPath clipPathUnits=\"objectBoundingBox\"\> is not supported when referenced from container elements (like %s)\" \l0x0048: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x004a: INVOKE  (r6 I:java.lang.Class) = (r6 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x004e: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x0052: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x0054: INVOKE  (r7 I:java.lang.String), (r0 I:java.lang.Object[]) com.caverock.androidsvg.SVGAndroidRenderer.warn(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x0057|0x0057: RETURN   \l}"];
Node_20 [shape=record,label="{20\:\ 0x0058|0x0058: INVOKE  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.clipStatePush():void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x005b|0x005b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0075 \l}"];
Node_22 [shape=record,label="{22\:\ 0x005d|0x005d: NEW_INSTANCE  (r6 I:android.graphics.Matrix) =  android.graphics.Matrix \l0x005f: INVOKE  (r6 I:android.graphics.Matrix) android.graphics.Matrix.\<init\>():void type: DIRECT \l0x0062: IGET  (r2 I:float) = (r7 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minX float \l0x0064: IGET  (r3 I:float) = (r7 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.minY float \l0x0066: INVOKE  (r6 I:android.graphics.Matrix), (r2 I:float), (r3 I:float) android.graphics.Matrix.preTranslate(float, float):boolean type: VIRTUAL \l0x0069: IGET  (r2 I:float) = (r7 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.width float \l0x006b: IGET  (r7 I:float) = (r7 I:com.caverock.androidsvg.SVG$Box) com.caverock.androidsvg.SVG.Box.height float \l0x006d: INVOKE  (r6 I:android.graphics.Matrix), (r2 I:float), (r7 I:float) android.graphics.Matrix.preScale(float, float):boolean type: VIRTUAL \l0x0070: IGET  (r7 I:android.graphics.Canvas) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.canvas android.graphics.Canvas \l0x0072: INVOKE  \l  (r7 I:android.graphics.Canvas)\l  (r6 I:android.graphics.Matrix)\l android.graphics.Canvas.concat(android.graphics.Matrix):void type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x0075|0x0075: IGET  (r6 I:android.graphics.Matrix) = (r0 I:com.caverock.androidsvg.SVG$ClipPath) com.caverock.androidsvg.SVG.ClipPath.transform android.graphics.Matrix \l}"];
Node_24 [shape=record,label="{24\:\ 0x0077|0x0077: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0080 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0079|0x0079: IGET  (r6 I:android.graphics.Canvas) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.canvas android.graphics.Canvas \l0x007b: IGET  (r7 I:android.graphics.Matrix) = (r0 I:com.caverock.androidsvg.SVG$ClipPath) com.caverock.androidsvg.SVG.ClipPath.transform android.graphics.Matrix \l0x007d: INVOKE  \l  (r6 I:android.graphics.Canvas)\l  (r7 I:android.graphics.Matrix)\l android.graphics.Canvas.concat(android.graphics.Matrix):void type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0080|0x0080: INVOKE  (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:com.caverock.androidsvg.SVG$SvgObject)\l com.caverock.androidsvg.SVGAndroidRenderer.findInheritFromAncestorState(com.caverock.androidsvg.SVG$SvgObject):com.caverock.androidsvg.SVGAndroidRenderer$RendererState type: DIRECT \l0x0084: IPUT  \l  (r6 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0086: INVOKE  \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:com.caverock.androidsvg.SVG$SvgElement)\l com.caverock.androidsvg.SVGAndroidRenderer.checkForClipPath(com.caverock.androidsvg.SVG$SvgElement):void type: DIRECT \l0x0089: NEW_INSTANCE  (r6 I:android.graphics.Path) =  android.graphics.Path \l0x008b: INVOKE  (r6 I:android.graphics.Path) android.graphics.Path.\<init\>():void type: DIRECT \l0x008e: IGET  (r7 I:java.util.List) = (r0 I:com.caverock.androidsvg.SVG$ClipPath) com.caverock.androidsvg.SVG.ClipPath.children java.util.List \l0x0090: INVOKE  (r7 I:java.util.Iterator) = (r7 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_27 [shape=record,label="{27\:\ 0x0094|0x0094: INVOKE  (r0 I:boolean) = (r7 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_28 [shape=record,label="{28\:\ 0x0098|0x0098: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x00a9 \l}"];
Node_29 [shape=record,label="{29\:\ 0x009a|0x009a: INVOKE  (r0 I:java.lang.Object) = (r7 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x009e: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$SvgObject) = (com.caverock.androidsvg.SVG$SvgObject) (r0 I:?[OBJECT, ARRAY]) \l0x00a0: NEW_INSTANCE  (r2 I:android.graphics.Matrix) =  android.graphics.Matrix \l0x00a2: INVOKE  (r2 I:android.graphics.Matrix) android.graphics.Matrix.\<init\>():void type: DIRECT \l0x00a5: INVOKE  \l  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:com.caverock.androidsvg.SVG$SvgObject)\l  (r1 I:boolean)\l  (r6 I:android.graphics.Path)\l  (r2 I:android.graphics.Matrix)\l com.caverock.androidsvg.SVGAndroidRenderer.addObjectToClip(com.caverock.androidsvg.SVG$SvgObject, boolean, android.graphics.Path, android.graphics.Matrix):void type: DIRECT \l}"];
Node_30 [shape=record,label="{30\:\ 0x00a9|0x00a9: IGET  (r7 I:android.graphics.Canvas) = (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.canvas android.graphics.Canvas \l0x00ab: INVOKE  \l  (r7 I:android.graphics.Canvas)\l  (r6 I:android.graphics.Path)\l android.graphics.Canvas.clipPath(android.graphics.Path):boolean type: VIRTUAL \l0x00ae: INVOKE  (r5 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.clipStatePop():void type: DIRECT \l}"];
Node_31 [shape=record,label="{31\:\ 0x00b1|0x00b1: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.checkForClipPath_OldStyle((r5 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r6 I:com.caverock.androidsvg.SVG$SvgElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.caverock.androidsvg.SVG$Box A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_27;
Node_30 -> Node_31;
}

