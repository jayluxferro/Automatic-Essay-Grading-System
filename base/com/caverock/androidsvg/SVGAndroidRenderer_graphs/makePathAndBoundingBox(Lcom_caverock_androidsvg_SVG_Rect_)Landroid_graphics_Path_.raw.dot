digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.makePathAndBoundingBox(Lcom\/caverock\/androidsvg\/SVG$Rect;)Landroid\/graphics\/Path;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x0004: IGET  (r2 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.rx com.caverock.androidsvg.SVG$Length \l0x0006: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r2 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.ry com.caverock.androidsvg.SVG$Length \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IGET  (r2 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.rx com.caverock.androidsvg.SVG$Length \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001c \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IGET  (r2 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.ry com.caverock.androidsvg.SVG$Length \l0x0016: INVOKE  (r2 I:float) = \l  (r2 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IGET  (r2 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.ry com.caverock.androidsvg.SVG$Length \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0027 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: IGET  (r2 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.rx com.caverock.androidsvg.SVG$Length \l0x0022: INVOKE  (r2 I:float) = \l  (r2 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|0x0027: IGET  (r2 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.rx com.caverock.androidsvg.SVG$Length \l0x0029: INVOKE  (r2 I:float) = \l  (r2 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l0x002d: IGET  (r4 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.ry com.caverock.androidsvg.SVG$Length \l0x002f: INVOKE  (r4 I:float) = \l  (r4 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|0x0033: IGET  (r5 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.width com.caverock.androidsvg.SVG$Length \l0x0035: INVOKE  (r5 I:float) = \l  (r5 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l0x0039: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x003b: ARITH  (r5 I:float) = (r5 I:float) \/ (r6 I:float) \l0x003c: INVOKE  (r2 I:float) = (r2 I:float), (r5 I:float) java.lang.Math.min(float, float):float type: STATIC \l0x0040: IGET  (r5 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.height com.caverock.androidsvg.SVG$Length \l0x0042: INVOKE  (r5 I:float) = \l  (r5 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l0x0046: ARITH  (r5 I:float) = (r5 I:float) \/ (r6 I:float) \l0x0047: INVOKE  (r4 I:float) = (r4 I:float), (r5 I:float) java.lang.Math.min(float, float):float type: STATIC \l0x004b: IGET  (r5 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.x com.caverock.androidsvg.SVG$Length \l}"];
Node_14 [shape=record,label="{14\:\ 0x004d|0x004d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0056 \l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|0x004f: IGET  (r5 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.x com.caverock.androidsvg.SVG$Length \l0x0051: INVOKE  (r5 I:float) = \l  (r5 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0056|0x0056: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0057|0x0057: IGET  (r6 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.y com.caverock.androidsvg.SVG$Length \l}"];
Node_18 [shape=record,label="{18\:\ 0x0059|0x0059: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0063 \l}"];
Node_19 [shape=record,label="{19\:\ 0x005b|0x005b: IGET  (r6 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.y com.caverock.androidsvg.SVG$Length \l0x005d: INVOKE  (r6 I:float) = \l  (r6 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l0x0061: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x0063|0x0063: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x0064|0x0064: IGET  (r6 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.width com.caverock.androidsvg.SVG$Length \l0x0066: INVOKE  (r6 I:float) = \l  (r6 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueX(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l0x006a: IGET  (r7 I:com.caverock.androidsvg.SVG$Length) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.height com.caverock.androidsvg.SVG$Length \l0x006c: INVOKE  (r7 I:float) = \l  (r7 I:com.caverock.androidsvg.SVG$Length)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer)\l com.caverock.androidsvg.SVG.Length.floatValueY(com.caverock.androidsvg.SVGAndroidRenderer):float type: VIRTUAL \l0x0070: IGET  (r8 I:com.caverock.androidsvg.SVG$Box) = (r1 I:com.caverock.androidsvg.SVG$Rect) com.caverock.androidsvg.SVG.Rect.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_22 [shape=record,label="{22\:\ 0x0072|0x0072: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x007b \l}"];
Node_23 [shape=record,label="{23\:\ 0x0074|0x0074: NEW_INSTANCE  (r8 I:com.caverock.androidsvg.SVG$Box) =  com.caverock.androidsvg.SVG$Box \l0x0076: INVOKE  \l  (r8 I:com.caverock.androidsvg.SVG$Box)\l  (r5 I:float)\l  (r13 I:float)\l  (r6 I:float)\l  (r7 I:float)\l com.caverock.androidsvg.SVG.Box.\<init\>(float, float, float, float):void type: DIRECT \l0x0079: IPUT  \l  (r8 I:com.caverock.androidsvg.SVG$Box)\l  (r1 I:com.caverock.androidsvg.SVG$Rect)\l com.caverock.androidsvg.SVG.Rect.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_24 [shape=record,label="{24\:\ 0x007b|0x007b: ARITH  (r15 I:float) = (r5 I:float) + (r6 I:float) \l0x007d: ARITH  (r1 I:float) = (r13 I:float) + (r7 I:float) \l0x007f: NEW_INSTANCE  (r14 I:android.graphics.Path) =  android.graphics.Path \l0x0081: INVOKE  (r14 I:android.graphics.Path) android.graphics.Path.\<init\>():void type: DIRECT \l0x0084: CMP_L  (r6 I:int) = (r2 I:float), (r3 I:float) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0086|0x0086: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x00e9 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0088|0x0088: CMP_L  (r3 I:int) = (r4 I:float), (r3 I:float) \l}"];
Node_27 [shape=record,label="{27\:\ 0x008a|0x008a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x008e \l}"];
Node_29 [shape=record,label="{29\:\ 0x008e|0x008e: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1057841801(0x3f0d6289, float:0.5522848) ?[int, float, short, byte, char])\l \l0x0091: ARITH  (r16 I:float) = (r2 I:float) * (r3 I:float) \l0x0093: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x0095: ARITH  (r12 I:float) = (r13 I:float) + (r4 I:float) \l0x0097: INVOKE  (r14 I:android.graphics.Path), (r5 I:float), (r12 I:float) android.graphics.Path.moveTo(float, float):void type: VIRTUAL \l0x009a: ARITH  (r17 I:float) = (r12 I:float) \- (r3 I:float) \l0x009c: ARITH  (r11 I:float) = (r5 I:float) + (r2 I:float) \l0x009e: ARITH  (r21 I:float) = (r11 I:float) \- (r16 I:float) \l0x00a0: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x00a1: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a2: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a4: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a6: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a7: MOVE  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a9: MOVE  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ab: MOVE  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ac: INVOKE  \l  (r6 I:android.graphics.Path)\l  (r7 I:float)\l  (r8 I:float)\l  (r9 I:float)\l  (r10 I:float)\l  (r11 I:float)\l  (r12 I:float)\l android.graphics.Path.cubicTo(float, float, float, float, float, float):void type: VIRTUAL \l0x00af: ARITH  (r2 I:float) = (r15 I:float) \- (r2 I:float) \l0x00b1: INVOKE  (r14 I:android.graphics.Path), (r2 I:float), (r13 I:float) android.graphics.Path.lineTo(float, float):void type: VIRTUAL \l0x00b4: ARITH  (r6 I:float) = (r2 I:float) + (r16 I:float) \l0x00b6: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x00b7: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b8: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b9: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ba: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00bc: MOVE  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00bd: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00bf: INVOKE  \l  (r7 I:android.graphics.Path)\l  (r8 I:float)\l  (r9 I:float)\l  (r10 I:float)\l  (r11 I:float)\l  (r12 I:float)\l  (r13 I:float)\l android.graphics.Path.cubicTo(float, float, float, float, float, float):void type: VIRTUAL \l0x00c2: ARITH  (r12 I:float) = (r1 I:float) \- (r4 I:float) \l0x00c4: INVOKE  (r14 I:android.graphics.Path), (r15 I:float), (r12 I:float) android.graphics.Path.lineTo(float, float):void type: VIRTUAL \l0x00c7: ARITH  (r3 I:float) = (r3 I:float) + (r12 I:float) \l0x00c8: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x00c9: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00cb: MOVE  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00cd: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00cf: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d1: MOVE  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d3: INVOKE  \l  (r14 I:android.graphics.Path)\l  (r15 I:float)\l  (r16 I:float)\l  (r17 I:float)\l  (r18 I:float)\l  (r19 I:float)\l  (r20 I:float)\l android.graphics.Path.cubicTo(float, float, float, float, float, float):void type: VIRTUAL \l0x00d6: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d8: INVOKE  (r4 I:android.graphics.Path), (r2 I:float), (r1 I:float) android.graphics.Path.lineTo(float, float):void type: VIRTUAL \l0x00db: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x00dc: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00de: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00df: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00e0: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00e1: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00e2: INVOKE  \l  (r6 I:android.graphics.Path)\l  (r7 I:float)\l  (r8 I:float)\l  (r9 I:float)\l  (r10 I:float)\l  (r11 I:float)\l  (r12 I:float)\l android.graphics.Path.cubicTo(float, float, float, float, float, float):void type: VIRTUAL \l0x00e5: INVOKE  (r4 I:android.graphics.Path), (r5 I:float), (r13 I:float) android.graphics.Path.lineTo(float, float):void type: VIRTUAL \l}"];
Node_30 [shape=record,label="{30\:\ 0x00e9|0x00e9: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x00ea: INVOKE  (r4 I:android.graphics.Path), (r5 I:float), (r13 I:float) android.graphics.Path.moveTo(float, float):void type: VIRTUAL \l0x00ed: INVOKE  (r4 I:android.graphics.Path), (r15 I:float), (r13 I:float) android.graphics.Path.lineTo(float, float):void type: VIRTUAL \l0x00f0: INVOKE  (r4 I:android.graphics.Path), (r15 I:float), (r1 I:float) android.graphics.Path.lineTo(float, float):void type: VIRTUAL \l0x00f3: INVOKE  (r4 I:android.graphics.Path), (r5 I:float), (r1 I:float) android.graphics.Path.lineTo(float, float):void type: VIRTUAL \l0x00f6: INVOKE  (r4 I:android.graphics.Path), (r5 I:float), (r13 I:float) android.graphics.Path.lineTo(float, float):void type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x00f9|0x00f9: INVOKE  (r4 I:android.graphics.Path) android.graphics.Path.close():void type: VIRTUAL \l}"];
Node_32 [shape=record,label="{32\:\ 0x00fc|0x00fc: RETURN  (r4 I:android.graphics.Path) \l}"];
MethodNode[shape=record,label="{private android.graphics.Path com.caverock.androidsvg.SVGAndroidRenderer.makePathAndBoundingBox((r24 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r25 I:com.caverock.androidsvg.SVG$Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
}

