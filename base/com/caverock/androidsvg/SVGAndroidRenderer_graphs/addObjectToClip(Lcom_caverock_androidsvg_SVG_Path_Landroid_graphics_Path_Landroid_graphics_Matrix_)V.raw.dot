digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.addObjectToClip(Lcom\/caverock\/androidsvg\/SVG$Path;Landroid\/graphics\/Path;Landroid\/graphics\/Matrix;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState) = (r2 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.state com.caverock.androidsvg.SVGAndroidRenderer$RendererState \l0x0002: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l  (r3 I:com.caverock.androidsvg.SVG$SvgElementBase)\l com.caverock.androidsvg.SVGAndroidRenderer.updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState, com.caverock.androidsvg.SVG$SvgElementBase):void type: DIRECT \l0x0005: INVOKE  (r0 I:boolean) = (r2 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.display():boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  (r0 I:boolean) = (r2 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.visible():boolean type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IGET  (r0 I:android.graphics.Matrix) = (r3 I:com.caverock.androidsvg.SVG$Path) com.caverock.androidsvg.SVG.Path.transform android.graphics.Matrix \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001c \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: IGET  (r0 I:android.graphics.Matrix) = (r3 I:com.caverock.androidsvg.SVG$Path) com.caverock.androidsvg.SVG.Path.transform android.graphics.Matrix \l0x0019: INVOKE  \l  (r5 I:android.graphics.Matrix)\l  (r0 I:android.graphics.Matrix)\l android.graphics.Matrix.preConcat(android.graphics.Matrix):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: NEW_INSTANCE  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$PathConverter) =  com.caverock.androidsvg.SVGAndroidRenderer$PathConverter \l0x001e: IGET  (r1 I:com.caverock.androidsvg.SVG$PathDefinition) = (r3 I:com.caverock.androidsvg.SVG$Path) com.caverock.androidsvg.SVG.Path.d com.caverock.androidsvg.SVG$PathDefinition \l0x0020: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$PathConverter)\l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r1 I:com.caverock.androidsvg.SVG$PathDefinition)\l com.caverock.androidsvg.SVGAndroidRenderer.PathConverter.\<init\>(com.caverock.androidsvg.SVGAndroidRenderer, com.caverock.androidsvg.SVG$PathDefinition):void type: DIRECT \l0x0023: INVOKE  (r0 I:android.graphics.Path) = \l  (r0 I:com.caverock.androidsvg.SVGAndroidRenderer$PathConverter)\l com.caverock.androidsvg.SVGAndroidRenderer.PathConverter.getPath():android.graphics.Path type: VIRTUAL \l0x0027: IGET  (r1 I:com.caverock.androidsvg.SVG$Box) = (r3 I:com.caverock.androidsvg.SVG$Path) com.caverock.androidsvg.SVG.Path.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0031 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: INVOKE  (r1 I:com.caverock.androidsvg.SVG$Box) = \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r0 I:android.graphics.Path)\l com.caverock.androidsvg.SVGAndroidRenderer.calculatePathBounds(android.graphics.Path):com.caverock.androidsvg.SVG$Box type: DIRECT \l0x002f: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG$Box)\l  (r3 I:com.caverock.androidsvg.SVG$Path)\l com.caverock.androidsvg.SVG.Path.boundingBox com.caverock.androidsvg.SVG$Box \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r3 I:com.caverock.androidsvg.SVG$SvgElement)\l com.caverock.androidsvg.SVGAndroidRenderer.checkForClipPath(com.caverock.androidsvg.SVG$SvgElement):void type: DIRECT \l0x0034: INVOKE  (r3 I:android.graphics.Path$FillType) = (r2 I:com.caverock.androidsvg.SVGAndroidRenderer) com.caverock.androidsvg.SVGAndroidRenderer.getClipRuleFromState():android.graphics.Path$FillType type: DIRECT \l0x0038: INVOKE  \l  (r4 I:android.graphics.Path)\l  (r3 I:android.graphics.Path$FillType)\l android.graphics.Path.setFillType(android.graphics.Path$FillType):void type: VIRTUAL \l0x003b: INVOKE  \l  (r4 I:android.graphics.Path)\l  (r0 I:android.graphics.Path)\l  (r5 I:android.graphics.Matrix)\l android.graphics.Path.addPath(android.graphics.Path, android.graphics.Matrix):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|0x003e: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.addObjectToClip((r2 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r3 I:com.caverock.androidsvg.SVG$Path A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.graphics.Path A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.graphics.Matrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

