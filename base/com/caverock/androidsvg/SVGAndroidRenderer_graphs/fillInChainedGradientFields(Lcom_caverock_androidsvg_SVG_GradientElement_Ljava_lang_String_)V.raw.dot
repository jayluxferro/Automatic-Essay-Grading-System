digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.fillInChainedGradientFields(Lcom\/caverock\/androidsvg\/SVG$GradientElement;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.caverock.androidsvg.SVG) = (r5 I:com.caverock.androidsvg.SVG$GradientElement) com.caverock.androidsvg.SVG.GradientElement.document com.caverock.androidsvg.SVG \l0x0002: INVOKE  (r0 I:com.caverock.androidsvg.SVG$SvgObject) = (r0 I:com.caverock.androidsvg.SVG), (r6 I:java.lang.String) com.caverock.androidsvg.SVG.resolveIRI(java.lang.String):com.caverock.androidsvg.SVG$SvgObject type: VIRTUAL \l0x0006: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST_STR  (r5 I:java.lang.String) =  \"Gradient reference '%s' not found\" \l0x000c: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x000e: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x0010: INVOKE  (r5 I:java.lang.String), (r0 I:java.lang.Object[]) com.caverock.androidsvg.SVGAndroidRenderer.warn(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: INSTANCE_OF  (r3 I:boolean) = (r0 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$GradientElement \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0020 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: CONST_STR  (r5 I:java.lang.String) =  \"Gradient href attributes must point to other gradient elements\" \l0x001a: NEW_ARRAY  (r6 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x001c: INVOKE  (r5 I:java.lang.String), (r6 I:java.lang.Object[]) com.caverock.androidsvg.SVGAndroidRenderer.error(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: CONST_STR  (r5 I:java.lang.String) =  \"Circular reference in gradient href attribute '%s'\" \l0x0024: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0026: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x0028: INVOKE  (r5 I:java.lang.String), (r0 I:java.lang.Object[]) com.caverock.androidsvg.SVGAndroidRenderer.error(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: RETURN   \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x002d: CHECK_CAST  (r6 I:com.caverock.androidsvg.SVG$GradientElement) = (com.caverock.androidsvg.SVG$GradientElement) (r6 I:?[OBJECT, ARRAY]) \l0x002f: IGET  (r1 I:java.lang.Boolean) = (r5 I:com.caverock.androidsvg.SVG$GradientElement) com.caverock.androidsvg.SVG.GradientElement.gradientUnitsAreUser java.lang.Boolean \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0037 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|0x0033: IGET  (r1 I:java.lang.Boolean) = (r6 I:com.caverock.androidsvg.SVG$GradientElement) com.caverock.androidsvg.SVG.GradientElement.gradientUnitsAreUser java.lang.Boolean \l0x0035: IPUT  \l  (r1 I:java.lang.Boolean)\l  (r5 I:com.caverock.androidsvg.SVG$GradientElement)\l com.caverock.androidsvg.SVG.GradientElement.gradientUnitsAreUser java.lang.Boolean \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: IGET  (r1 I:android.graphics.Matrix) = (r5 I:com.caverock.androidsvg.SVG$GradientElement) com.caverock.androidsvg.SVG.GradientElement.gradientTransform android.graphics.Matrix \l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|0x0039: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x003f \l}"];
Node_16 [shape=record,label="{16\:\ 0x003b|0x003b: IGET  (r1 I:android.graphics.Matrix) = (r6 I:com.caverock.androidsvg.SVG$GradientElement) com.caverock.androidsvg.SVG.GradientElement.gradientTransform android.graphics.Matrix \l0x003d: IPUT  \l  (r1 I:android.graphics.Matrix)\l  (r5 I:com.caverock.androidsvg.SVG$GradientElement)\l com.caverock.androidsvg.SVG.GradientElement.gradientTransform android.graphics.Matrix \l}"];
Node_17 [shape=record,label="{17\:\ 0x003f|0x003f: IGET  (r1 I:com.caverock.androidsvg.SVG$GradientSpread) = (r5 I:com.caverock.androidsvg.SVG$GradientElement) com.caverock.androidsvg.SVG.GradientElement.spreadMethod com.caverock.androidsvg.SVG$GradientSpread \l}"];
Node_18 [shape=record,label="{18\:\ 0x0041|0x0041: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0047 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0043|0x0043: IGET  (r1 I:com.caverock.androidsvg.SVG$GradientSpread) = (r6 I:com.caverock.androidsvg.SVG$GradientElement) com.caverock.androidsvg.SVG.GradientElement.spreadMethod com.caverock.androidsvg.SVG$GradientSpread \l0x0045: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG$GradientSpread)\l  (r5 I:com.caverock.androidsvg.SVG$GradientElement)\l com.caverock.androidsvg.SVG.GradientElement.spreadMethod com.caverock.androidsvg.SVG$GradientSpread \l}"];
Node_20 [shape=record,label="{20\:\ 0x0047|0x0047: IGET  (r1 I:java.util.List\<com.caverock.androidsvg.SVG$SvgObject\>) = (r5 I:com.caverock.androidsvg.SVG$GradientElement) com.caverock.androidsvg.SVG.GradientElement.children java.util.List \l0x0049: INVOKE  (r1 I:boolean) = (r1 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x004d|0x004d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0053 \l}"];
Node_22 [shape=record,label="{22\:\ 0x004f|0x004f: IGET  (r1 I:java.util.List\<com.caverock.androidsvg.SVG$SvgObject\>) = (r6 I:com.caverock.androidsvg.SVG$GradientElement) com.caverock.androidsvg.SVG.GradientElement.children java.util.List \l0x0051: IPUT  \l  (r1 I:java.util.List\<com.caverock.androidsvg.SVG$SvgObject\>)\l  (r5 I:com.caverock.androidsvg.SVG$GradientElement)\l com.caverock.androidsvg.SVG.GradientElement.children java.util.List \l}"];
Node_23 [shape=record,label="{23\:\ 0x0053|SYNTHETIC\lSplitter:B:23:0x0053\l}"];
Node_24 [shape=record,label="{24\:\ ?|Splitter:B:23:0x0053\l|0x0053: INSTANCE_OF  (r1 I:boolean) = (r5 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$SvgLinearGradient A[Catch:\{ ClassCastException \-\> 0x0068 \}, TRY_ENTER]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0055|0x0055: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0060 A[Catch:\{ ClassCastException \-\> 0x0068 \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0057|0x0057: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) A[Catch:\{ ClassCastException \-\> 0x0068 \}]\l0x0058: CHECK_CAST  (r1 I:com.caverock.androidsvg.SVG$SvgLinearGradient) = (com.caverock.androidsvg.SVG$SvgLinearGradient) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ ClassCastException \-\> 0x0068 \}]\l0x005a: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$SvgLinearGradient) = (com.caverock.androidsvg.SVG$SvgLinearGradient) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ ClassCastException \-\> 0x0068 \}]\l0x005c: INVOKE  \l  (r4 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r1 I:com.caverock.androidsvg.SVG$SvgLinearGradient)\l  (r0 I:com.caverock.androidsvg.SVG$SvgLinearGradient)\l com.caverock.androidsvg.SVGAndroidRenderer.fillInChainedGradientFields(com.caverock.androidsvg.SVG$SvgLinearGradient, com.caverock.androidsvg.SVG$SvgLinearGradient):void type: DIRECT A[Catch:\{ ClassCastException \-\> 0x0068 \}]\l0x005f: GOTO  \-\> 0x0068 A[Catch:\{ ClassCastException \-\> 0x0068 \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0060|0x0060: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) A[Catch:\{ ClassCastException \-\> 0x0068 \}]\l0x0061: CHECK_CAST  (r1 I:com.caverock.androidsvg.SVG$SvgRadialGradient) = (com.caverock.androidsvg.SVG$SvgRadialGradient) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ ClassCastException \-\> 0x0068 \}]\l0x0063: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$SvgRadialGradient) = (com.caverock.androidsvg.SVG$SvgRadialGradient) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ ClassCastException \-\> 0x0068 \}]\l0x0065: INVOKE  \l  (r4 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r1 I:com.caverock.androidsvg.SVG$SvgRadialGradient)\l  (r0 I:com.caverock.androidsvg.SVG$SvgRadialGradient)\l com.caverock.androidsvg.SVGAndroidRenderer.fillInChainedGradientFields(com.caverock.androidsvg.SVG$SvgRadialGradient, com.caverock.androidsvg.SVG$SvgRadialGradient):void type: DIRECT A[Catch:\{ ClassCastException \-\> 0x0068 \}, TRY_LEAVE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0068|0x0068: IGET  (r0 I:java.lang.String) = (r6 I:com.caverock.androidsvg.SVG$GradientElement) com.caverock.androidsvg.SVG.GradientElement.href java.lang.String \l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lExcHandler: ClassCastException null\lSplitter:B:23:0x0053\l}"];
Node_30 [shape=record,label="{30\:\ 0x006a|0x006a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0071 \l}"];
Node_31 [shape=record,label="{31\:\ 0x006c|0x006c: IGET  (r6 I:java.lang.String) = (r6 I:com.caverock.androidsvg.SVG$GradientElement) com.caverock.androidsvg.SVG.GradientElement.href java.lang.String \l0x006e: INVOKE  \l  (r4 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r5 I:com.caverock.androidsvg.SVG$GradientElement)\l  (r6 I:java.lang.String)\l com.caverock.androidsvg.SVGAndroidRenderer.fillInChainedGradientFields(com.caverock.androidsvg.SVG$GradientElement, java.lang.String):void type: DIRECT \l}"];
Node_32 [shape=record,label="{32\:\ 0x0071|0x0071: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGAndroidRenderer.fillInChainedGradientFields((r4 'this' I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, THIS]), (r5 I:com.caverock.androidsvg.SVG$GradientElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_29 -> Node_28;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
}

