digraph "CFG forcom.caverock.androidsvg.CSSParser.RuleMatchContext.toString()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.caverock.androidsvg.SVG$SvgElementBase) = (r4 I:com.caverock.androidsvg.CSSParser$RuleMatchContext) com.caverock.androidsvg.CSSParser.RuleMatchContext.targetElement com.caverock.androidsvg.SVG$SvgElementBase \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST_STR  (r0 I:java.lang.String) =  \"\<%s id=\"%s\"\>\" \l0x0006: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0007: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0009: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: IGET  (r3 I:com.caverock.androidsvg.SVG$SvgElementBase) = (r4 I:com.caverock.androidsvg.CSSParser$RuleMatchContext) com.caverock.androidsvg.CSSParser.RuleMatchContext.targetElement com.caverock.androidsvg.SVG$SvgElementBase \l0x000c: INVOKE  (r3 I:java.lang.String) = (r3 I:com.caverock.androidsvg.SVG$SvgElementBase) com.caverock.androidsvg.SVG.SvgElementBase.getNodeName():java.lang.String type: VIRTUAL \l0x0010: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0012: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0013: IGET  (r3 I:com.caverock.androidsvg.SVG$SvgElementBase) = (r4 I:com.caverock.androidsvg.CSSParser$RuleMatchContext) com.caverock.androidsvg.CSSParser.RuleMatchContext.targetElement com.caverock.androidsvg.SVG$SvgElementBase \l0x0015: IGET  (r3 I:java.lang.String) = (r3 I:com.caverock.androidsvg.SVG$SvgElementBase) com.caverock.androidsvg.SVG.SvgElementBase.id java.lang.String \l0x0017: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0019: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String), (r1 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: RETURN  (r0 I:java.lang.String) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: CONST_STR  (r0 I:java.lang.String) =  \"\" \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String com.caverock.androidsvg.CSSParser.RuleMatchContext.toString((r4 'this' I:com.caverock.androidsvg.CSSParser$RuleMatchContext A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

