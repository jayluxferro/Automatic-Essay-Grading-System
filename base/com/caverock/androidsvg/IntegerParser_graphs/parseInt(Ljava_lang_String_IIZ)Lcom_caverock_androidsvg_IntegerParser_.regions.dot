digraph "CFG forcom.caverock.androidsvg.IntegerParser.parseInt(Ljava\/lang\/String;IIZ)Lcom\/caverock\/androidsvg\/IntegerParser;" {
subgraph cluster_Region_1074600297 {
label = "R(1:(2:(1:2)|(5:3|(3:5|(1:(1:9))|10)|11|(2:13|(2:(1:32)|(2:(2:19|(1:(1:21)))(2:22|(1:(1:24)))|25)))|(2:(1:27)|(1:29)))))";
node [shape=record,color=blue];
subgraph cluster_Region_386219872 {
label = "R(2:(1:2)|(5:3|(3:5|(1:(1:9))|10)|11|(2:13|(2:(1:32)|(2:(2:19|(1:(1:21)))(2:22|(1:(1:24)))|25)))|(2:(1:27)|(1:29))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1370400327 {
label = "IF [B:1:0x0001] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r8 \>= r9) goto L_0x0003\l}"];
subgraph cluster_Region_1926834156 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1890350827 {
label = "R(5:3|(3:5|(1:(1:9))|10)|11|(2:13|(2:(1:32)|(2:(2:19|(1:(1:21)))(2:22|(1:(1:24)))|25)))|(2:(1:27)|(1:29)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0004|boolean r1 = false\l}"];
subgraph cluster_IfRegion_1513602703 {
label = "IF [B:4:0x0005] THEN: R(3:5|(1:(1:9))|10) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|if (r10 == true) goto L_0x0007\l}"];
subgraph cluster_Region_942707468 {
label = "R(3:5|(1:(1:9))|10)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0007|char char r10 = r7.charAt(r8)\l}"];
subgraph cluster_IfRegion_1428000911 {
label = "IF [B:6:0x000d] THEN: R(1:(1:9)) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000d|if (r10 != '+') goto L_0x000f\l}"];
subgraph cluster_Region_1693938838 {
label = "R(1:(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_878718133 {
label = "IF [B:8:0x0011] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0011|if (r10 == '\-') goto L_0x0014\l}"];
subgraph cluster_Region_1559546156 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0014|r1 = true\l}"];
}
}
}
}
Node_10 [shape=record,label="{10\:\ 0x0016|PHI: r1 \l  PHI: (r1v2 boolean) = (r1v0 boolean), (r1v3 boolean) binds: [B:6:0x000d, B:9:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|r8++\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x0018|PHI: r1 r8 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v2 boolean), (r1v0 boolean) binds: [B:4:0x0005, B:10:0x0016, B:8:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 int) = (r8v0 int), (r8v2 int), (r8v0 int) binds: [B:4:0x0005, B:10:0x0016, B:8:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|long r2 = 0\lint r10 = r8\l}"];
subgraph cluster_LoopRegion_460011211 {
label = "LOOP:0: (2:13|(2:(1:32)|(2:(2:19|(1:(1:21)))(2:22|(1:(1:24)))|25)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x001b|LOOP_START\lPHI: r2 r10 \l  PHI: (r2v1 long) = (r2v0 long), (r2v2 long) binds: [B:11:0x0018, B:25:0x0049] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v2 int) = (r10v1 int), (r10v3 int) binds: [B:11:0x0018, B:25:0x0049] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:12:0x001b\-\>B:25:0x0049\l|if (r10 \< r9) goto L_0x001d\l}"];
subgraph cluster_Region_1537662161 {
label = "R(2:13|(2:(1:32)|(2:(2:19|(1:(1:21)))(2:22|(1:(1:24)))|25)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x001d|char char r4 = r7.charAt(r10)\l}"];
subgraph cluster_Region_1087339217 {
label = "R(2:(1:32)|(2:(2:19|(1:(1:21)))(2:22|(1:(1:24)))|25))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2058305532 {
label = "IF [B:14:0x0023, B:16:0x0027] THEN: R(1:32) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0023|ADDED_TO_REGION\l|if (r4 \< '0') goto L_0x004c\l}"];
Node_16 [shape=record,label="{16\:\ 0x0027|ADDED_TO_REGION\l|if (r4 \> '9') goto L_0x004c\l}"];
subgraph cluster_Region_2073215843 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x004c|SYNTHETIC\lEDGE_INSN: B:32:0x004c\-\>B:26:0x004c ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_2098588722 {
label = "R(2:(2:19|(1:(1:21)))(2:22|(1:(1:24)))|25)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1220559585 {
label = "IF [B:18:0x002b] THEN: R(2:19|(1:(1:21))) ELSE: R(2:22|(1:(1:24)))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x002b|if (r1 == true) goto L_0x002d\l}"];
subgraph cluster_Region_523729509 {
label = "R(2:19|(1:(1:21)))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x002d|long r2 = (r2 * 10) \- ((long) (r4 \- '0'))\l}"];
subgraph cluster_Region_481741144 {
label = "R(1:(1:21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1498763567 {
label = "IF [B:20:0x0038] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0038|if (r2 \< \-2147483648L) goto L_0x003a\l}"];
subgraph cluster_Region_1127894428 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x003a|RETURN\l|return null\l}"];
}
}
}
}
subgraph cluster_Region_213868087 {
label = "R(2:22|(1:(1:24)))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x003b|long r2 = (r2 * 10) + ((long) (r4 \- '0'))\l}"];
subgraph cluster_Region_2023272152 {
label = "R(1:(1:24))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_795737107 {
label = "IF [B:23:0x0046] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0046|if (r2 \> 2147483647L) goto L_0x0048\l}"];
subgraph cluster_Region_368894835 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0048|RETURN\l|return null\l}"];
}
}
}
}
}
Node_25 [shape=record,label="{25\:\ 0x0049|LOOP_END\lPHI: r2 \l  PHI: (r2v2 long) = (r2v4 long), (r2v6 long) binds: [B:36:0x0049, B:35:0x0049] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:12:0x001b\-\>B:25:0x0049\l|r10++\l}"];
}
}
}
}
subgraph cluster_Region_1059722397 {
label = "R(2:(1:27)|(1:29))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_680075939 {
label = "IF [B:26:0x004c] THEN: R(1:27) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x004c|EDGE_INSN: B:30:0x004c\-\>B:26:0x004c ?: BREAK  \lEDGE_INSN: B:32:0x004c\-\>B:26:0x004c ?: BREAK  \l|if (r10 == r8) goto L_0x004e\l}"];
subgraph cluster_Region_787343433 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x004e|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1710255366 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0054|RETURN\l|return new com.caverock.androidsvg.IntegerParser(r2, r10)\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000f}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0025}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0029}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x004f}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x004c|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:30:0x004c\-\>B:26:0x004c ?: BREAK  \l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0048|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x003a|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x004c|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0049|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0049|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static com.caverock.androidsvg.IntegerParser com.caverock.androidsvg.IntegerParser.parseInt((r7v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_11[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_10[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_11[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_34[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_30;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_32;
Node_32 -> Node_26;
Node_18 -> Node_19;
Node_18 -> Node_22[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_33;
Node_20 -> Node_35[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_31;
Node_23 -> Node_36[style=dashed];
Node_25 -> Node_12;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_0 -> Node_1;
Node_7 -> Node_8;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_28 -> Node_29;
Node_30 -> Node_26;
Node_31 -> Node_24;
Node_33 -> Node_21;
Node_34 -> Node_26;
Node_35 -> Node_25;
Node_36 -> Node_25;
}

