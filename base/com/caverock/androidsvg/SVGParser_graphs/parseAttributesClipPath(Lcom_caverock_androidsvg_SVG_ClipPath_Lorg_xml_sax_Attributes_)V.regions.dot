digraph "CFG forcom.caverock.androidsvg.SVGParser.parseAttributesClipPath(Lcom\/caverock\/androidsvg\/SVG$ClipPath;Lorg\/xml\/sax\/Attributes;)V" {
subgraph cluster_Region_97541312 {
label = "R(2:0|(3:3|(1:(1:7)(1:(1:10)(1:13)))(0)|11))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = 0\l}"];
subgraph cluster_LoopRegion_209204732 {
label = "LOOP:0: (3:3|(1:(1:7)(1:(1:10)(1:13)))(0)|11)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r1 \< r7.getLength()) goto L_0x0008\l}"];
subgraph cluster_Region_739594518 {
label = "R(3:3|(1:(1:7)(1:(1:10)(1:13)))(0)|11)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|java.lang.String java.lang.String r2 = r7.getValue(r1).trim()\l}"];
subgraph cluster_IfRegion_1396148609 {
label = "IF [B:4:0x0022] THEN: R(1:(1:7)(1:(1:10)(1:13))) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0022|if (com.caverock.androidsvg.SVGParser.C05871.$SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr[com.caverock.androidsvg.SVGParser.SVGAttr.fromString(r7.getLocalName(r1)).ordinal()] == 38) goto L_0x0025\l}"];
subgraph cluster_Region_1961818097 {
label = "R(1:(1:7)(1:(1:10)(1:13)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1418131835 {
label = "IF [B:6:0x002b] THEN: R(1:7) ELSE: R(1:(1:10)(1:13))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x002b|if (\"objectBoundingBox\".equals(r2) == true) goto L_0x002d\l}"];
subgraph cluster_Region_2071694335 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002d|r6.clipPathUnitsAreUser = false\l}"];
}
subgraph cluster_Region_1381266770 {
label = "R(1:(1:10)(1:13)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_429715906 {
label = "IF [B:9:0x003a] THEN: R(1:10) ELSE: R(1:13) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x003a|if (\"userSpaceOnUse\".equals(r2) == true) goto L_0x003c\l}"];
subgraph cluster_Region_129712529 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x003c|r6.clipPathUnitsAreUser = true\l}"];
}
subgraph cluster_Region_74018792 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x004d|throw new com.caverock.androidsvg.SVGParseException(\"Invalid value for attribute clipPathUnits\")\l}"];
}
}
}
}
}
subgraph cluster_Region_602548457 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_11 [shape=record,label="{11\:\ 0x0043|LOOP_END\lLOOP:0: B:1:0x0002\-\>B:11:0x0043\l|r1++\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:11:0x0043] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0002\-\>B:11:0x0043\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0025}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0034}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0046}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x004e}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x004e|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0046|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0043|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0043|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0043|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.parseAttributesClipPath((r5v0 'this' com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r6v0 com.caverock.androidsvg.SVG$ClipPath A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 org.xml.sax.Attributes A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_15[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_19[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_18;
Node_9 -> Node_10;
Node_9 -> Node_16[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_1;
Node_1 -> Node_2;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_12 -> Node_13;
Node_15 -> Node_14;
Node_16 -> Node_12;
Node_17 -> Node_11;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

