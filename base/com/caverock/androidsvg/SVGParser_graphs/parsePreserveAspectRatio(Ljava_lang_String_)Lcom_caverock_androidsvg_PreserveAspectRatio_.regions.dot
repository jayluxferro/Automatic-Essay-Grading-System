digraph "CFG forcom.caverock.androidsvg.SVGParser.parsePreserveAspectRatio(Ljava\/lang\/String;)Lcom\/caverock\/androidsvg\/PreserveAspectRatio;" {
subgraph cluster_Region_239339489 {
label = "R(5:0|(1:2)|3|(3:5|(1:(1:11))(1:(1:14))|15)|21)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.caverock.androidsvg.SVGParser$TextScanner com.caverock.androidsvg.SVGParser.TextScanner r0 = new com.caverock.androidsvg.SVGParser.TextScanner(r5)\lr0.skipWhitespace()\ljava.lang.String java.lang.String r1 = r0.nextToken()\l}"];
subgraph cluster_IfRegion_1672912573 {
label = "IF [B:1:0x0012] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0012|if (\"defer\".equals(r1) == true) goto L_0x0014\l}"];
subgraph cluster_Region_1345322400 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0014|r0.skipWhitespace()\ljava.lang.String r1 = r0.nextToken()\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x001b|PHI: r1 \l  PHI: (r1v1 java.lang.String) = (r1v0 java.lang.String), (r1v4 java.lang.String) binds: [B:1:0x0012, B:2:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|com.caverock.androidsvg.PreserveAspectRatio$Alignment com.caverock.androidsvg.PreserveAspectRatio.Alignment r1 = com.caverock.androidsvg.SVGParser.AspectRatioKeywords.get(r1)\lcom.caverock.androidsvg.PreserveAspectRatio.Scale r2 = null\lr0.skipWhitespace()\l}"];
subgraph cluster_IfRegion_1252004734 {
label = "IF [B:4:0x0027] THEN: R(3:5|(1:(1:11))(1:(1:14))|15) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0027|if (r0.empty() == false) goto L_0x0029\l}"];
subgraph cluster_Region_1306784751 {
label = "R(3:5|(1:(1:11))(1:(1:14))|15)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0029|java.lang.String java.lang.String r0 = r0.nextToken()\lchar r2 = 65535\lint int r3 = r0.hashCode()\l}"];
subgraph cluster_IfRegion_833960208 {
label = "IF [B:6:0x0035] THEN: R(1:(1:11)) ELSE: R(1:(1:14))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0035|if (r3 != 3347527) goto L_0x0037\l}"];
subgraph cluster_Region_76340306 {
label = "R(1:(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1417972529 {
label = "IF [B:8:0x003a, B:10:0x0043] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x003a|ADDED_TO_REGION\l|if (r3 == 109526418) goto L_0x003d\l}"];
Node_10 [shape=record,label="{10\:\ 0x0043|ADDED_TO_REGION\l|if (r0.equals(\"slice\") == true) goto L_0x0045\l}"];
subgraph cluster_Region_1202536121 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0045|r2 = 1\l}"];
}
}
}
subgraph cluster_Region_143811616 {
label = "R(1:(1:14)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_59815018 {
label = "IF [B:13:0x004d] THEN: R(1:14) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x004d|if (r0.equals(\"meet\") == true) goto L_0x004f\l}"];
subgraph cluster_Region_305565315 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x004f|r2 = 0\l}"];
}
}
}
}
subgraph cluster_SwitchRegion_922806398 {
label = "Switch: 2, default: R(2:16|17)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0050|PHI: r2 \l  PHI: (r2v5 char) = (r2v4 char), (r2v9 char), (r2v4 char), (r2v4 char), (r2v10 char) binds: [B:13:0x004d, B:14:0x004f, B:8:0x003a, B:10:0x0043, B:11:0x0045] A[DONT_GENERATE, DONT_INLINE]\l|switch(r2) \{\l    case 0: goto L_0x006d;\l    case 1: goto L_0x006a;\l    default: goto L_0x0053;\l\}\l}"];
subgraph cluster_Region_1289469334 {
label = "R(2:19|1)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x006d|com.caverock.androidsvg.PreserveAspectRatio$Scale r2 = com.caverock.androidsvg.PreserveAspectRatio.Scale.meet\l}"];
Node_InsnContainer_124578317 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_103443600 {
label = "R(2:18|1)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x006a|com.caverock.androidsvg.PreserveAspectRatio$Scale r2 = com.caverock.androidsvg.PreserveAspectRatio.Scale.slice\l}"];
Node_InsnContainer_1726926243 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_81982304 {
label = "R(2:16|17)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0053}"];
Node_17 [shape=record,label="{17\:\ 0x0069|throw new com.caverock.androidsvg.SVGParseException(\"Invalid preserveAspectRatio definition: \" + r5)\l}"];
}
}
}
}
Node_21 [shape=record,label="{21\:\ 0x0074|RETURN\l|return new com.caverock.androidsvg.PreserveAspectRatio(r1, r2)\l}"];
}
Node_7 [shape=record,color=red,label="{7\:\ 0x0037}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x003d}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0047}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x006f|PHI: r2 \l  PHI: (r2v3 com.caverock.androidsvg.PreserveAspectRatio$Scale) = (r2v2 com.caverock.androidsvg.PreserveAspectRatio$Scale), (r2v6 com.caverock.androidsvg.PreserveAspectRatio$Scale), (r2v7 com.caverock.androidsvg.PreserveAspectRatio$Scale) binds: [B:4:0x0027, B:19:0x006d, B:18:0x006a] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{static com.caverock.androidsvg.PreserveAspectRatio com.caverock.androidsvg.SVGParser.parsePreserveAspectRatio((r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_20[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_12[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_15[style=dashed];
Node_10 -> Node_11;
Node_10 -> Node_15[style=dashed];
Node_11 -> Node_15;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_18;
Node_15 -> Node_19;
Node_19 -> Node_20;
Node_18 -> Node_20;
Node_16 -> Node_17;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_20 -> Node_21;
}

