digraph "CFG forcom.caverock.androidsvg.SVGParser.tref(Lorg\/xml\/sax\/Attributes;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<tref\>\" \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0005: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGParser)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Object[])\l com.caverock.androidsvg.SVGParser.debug(java.lang.String, java.lang.Object[]):void type: DIRECT \l0x0008: IGET  (r0 I:com.caverock.androidsvg.SVG$SvgContainer) = (r2 I:com.caverock.androidsvg.SVGParser) com.caverock.androidsvg.SVGParser.currentElement com.caverock.androidsvg.SVG$SvgContainer \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0052 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IGET  (r0 I:com.caverock.androidsvg.SVG$SvgContainer) = (r2 I:com.caverock.androidsvg.SVGParser) com.caverock.androidsvg.SVGParser.currentElement com.caverock.androidsvg.SVG$SvgContainer \l0x000e: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$TextContainer \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x004a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: NEW_INSTANCE  (r0 I:com.caverock.androidsvg.SVG$TRef) =  com.caverock.androidsvg.SVG$TRef \l0x0014: INVOKE  (r0 I:com.caverock.androidsvg.SVG$TRef) com.caverock.androidsvg.SVG.TRef.\<init\>():void type: DIRECT \l0x0017: IGET  (r1 I:com.caverock.androidsvg.SVG) = (r2 I:com.caverock.androidsvg.SVGParser) com.caverock.androidsvg.SVGParser.svgDocument com.caverock.androidsvg.SVG \l0x0019: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG)\l  (r0 I:com.caverock.androidsvg.SVG$TRef)\l com.caverock.androidsvg.SVG.TRef.document com.caverock.androidsvg.SVG \l0x001b: IGET  (r1 I:com.caverock.androidsvg.SVG$SvgContainer) = (r2 I:com.caverock.androidsvg.SVGParser) com.caverock.androidsvg.SVGParser.currentElement com.caverock.androidsvg.SVG$SvgContainer \l0x001d: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG$SvgContainer)\l  (r0 I:com.caverock.androidsvg.SVG$TRef)\l com.caverock.androidsvg.SVG.TRef.parent com.caverock.androidsvg.SVG$SvgContainer \l0x001f: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGParser)\l  (r0 I:com.caverock.androidsvg.SVG$SvgElementBase)\l  (r3 I:org.xml.sax.Attributes)\l com.caverock.androidsvg.SVGParser.parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase, org.xml.sax.Attributes):void type: DIRECT \l0x0022: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGParser)\l  (r0 I:com.caverock.androidsvg.SVG$SvgElementBase)\l  (r3 I:org.xml.sax.Attributes)\l com.caverock.androidsvg.SVGParser.parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase, org.xml.sax.Attributes):void type: DIRECT \l0x0025: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGParser)\l  (r0 I:com.caverock.androidsvg.SVG$SvgConditional)\l  (r3 I:org.xml.sax.Attributes)\l com.caverock.androidsvg.SVGParser.parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional, org.xml.sax.Attributes):void type: DIRECT \l0x0028: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGParser)\l  (r0 I:com.caverock.androidsvg.SVG$TRef)\l  (r3 I:org.xml.sax.Attributes)\l com.caverock.androidsvg.SVGParser.parseAttributesTRef(com.caverock.androidsvg.SVG$TRef, org.xml.sax.Attributes):void type: DIRECT \l0x002b: IGET  (r3 I:com.caverock.androidsvg.SVG$SvgContainer) = (r2 I:com.caverock.androidsvg.SVGParser) com.caverock.androidsvg.SVGParser.currentElement com.caverock.androidsvg.SVG$SvgContainer \l0x002d: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVG$SvgContainer)\l  (r0 I:com.caverock.androidsvg.SVG$SvgObject)\l com.caverock.androidsvg.SVG.SvgContainer.addChild(com.caverock.androidsvg.SVG$SvgObject):void type: INTERFACE \l0x0030: IGET  (r3 I:com.caverock.androidsvg.SVG$SvgContainer) = (r0 I:com.caverock.androidsvg.SVG$TRef) com.caverock.androidsvg.SVG.TRef.parent com.caverock.androidsvg.SVG$SvgContainer \l0x0032: INSTANCE_OF  (r3 I:boolean) = (r3 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$TextRoot \l}"];
Node_5 [shape=record,label="{5\:\ 0x0034|0x0034: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x003e \l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|0x0036: IGET  (r3 I:com.caverock.androidsvg.SVG$SvgContainer) = (r0 I:com.caverock.androidsvg.SVG$TRef) com.caverock.androidsvg.SVG.TRef.parent com.caverock.androidsvg.SVG$SvgContainer \l0x0038: CHECK_CAST  (r3 I:com.caverock.androidsvg.SVG$TextRoot) = (com.caverock.androidsvg.SVG$TextRoot) (r3 I:?[OBJECT, ARRAY]) \l0x003a: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVG$TRef)\l  (r3 I:com.caverock.androidsvg.SVG$TextRoot)\l com.caverock.androidsvg.SVG.TRef.setTextRoot(com.caverock.androidsvg.SVG$TextRoot):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|0x003e: IGET  (r3 I:com.caverock.androidsvg.SVG$SvgContainer) = (r0 I:com.caverock.androidsvg.SVG$TRef) com.caverock.androidsvg.SVG.TRef.parent com.caverock.androidsvg.SVG$SvgContainer \l0x0040: CHECK_CAST  (r3 I:com.caverock.androidsvg.SVG$TextChild) = (com.caverock.androidsvg.SVG$TextChild) (r3 I:?[OBJECT, ARRAY]) \l0x0042: INVOKE  (r3 I:com.caverock.androidsvg.SVG$TextRoot) = (r3 I:com.caverock.androidsvg.SVG$TextChild) com.caverock.androidsvg.SVG.TextChild.getTextRoot():com.caverock.androidsvg.SVG$TextRoot type: INTERFACE \l0x0046: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVG$TRef)\l  (r3 I:com.caverock.androidsvg.SVG$TextRoot)\l com.caverock.androidsvg.SVG.TRef.setTextRoot(com.caverock.androidsvg.SVG$TextRoot):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0049|0x0049: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x004a|0x004a: NEW_INSTANCE  (r3 I:com.caverock.androidsvg.SVGParseException) =  com.caverock.androidsvg.SVGParseException \l0x004c: CONST_STR  (r0 I:java.lang.String) =  \"Invalid document. \<tref\> elements are only valid inside \<text\> or \<tspan\> elements.\" \l0x004e: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGParseException)\l  (r0 I:java.lang.String)\l com.caverock.androidsvg.SVGParseException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0051|0x0051: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0052|0x0052: NEW_INSTANCE  (r3 I:com.caverock.androidsvg.SVGParseException) =  com.caverock.androidsvg.SVGParseException \l0x0054: CONST_STR  (r0 I:java.lang.String) =  \"Invalid document. Root element must be \<svg\>\" \l0x0056: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGParseException)\l  (r0 I:java.lang.String)\l com.caverock.androidsvg.SVGParseException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0059|0x0059: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.tref((r2 'this' I:com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r3 I:org.xml.sax.Attributes A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

