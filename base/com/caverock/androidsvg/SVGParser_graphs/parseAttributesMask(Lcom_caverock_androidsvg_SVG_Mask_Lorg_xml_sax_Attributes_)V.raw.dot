digraph "CFG forcom.caverock.androidsvg.SVGParser.parseAttributesMask(Lcom\/caverock\/androidsvg\/SVG$Mask;Lorg\/xml\/sax\/Attributes;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r2 I:int) = (r7 I:org.xml.sax.Attributes) org.xml.sax.Attributes.getLength():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:37:0x00b5 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r2 I:java.lang.String) = (r7 I:org.xml.sax.Attributes), (r1 I:int) org.xml.sax.Attributes.getValue(int):java.lang.String type: INTERFACE \l0x000c: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String) java.lang.String.trim():java.lang.String type: VIRTUAL \l0x0010: SGET  (r3 I:int[]) =  com.caverock.androidsvg.SVGParser.1.$SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr int[] \l0x0012: INVOKE  (r4 I:java.lang.String) = (r7 I:org.xml.sax.Attributes), (r1 I:int) org.xml.sax.Attributes.getLocalName(int):java.lang.String type: INTERFACE \l0x0016: INVOKE  (r4 I:com.caverock.androidsvg.SVGParser$SVGAttr) = (r4 I:java.lang.String) com.caverock.androidsvg.SVGParser.SVGAttr.fromString(java.lang.String):com.caverock.androidsvg.SVGParser$SVGAttr type: STATIC \l0x001a: INVOKE  (r4 I:int) = (r4 I:com.caverock.androidsvg.SVGParser$SVGAttr) com.caverock.androidsvg.SVGParser.SVGAttr.ordinal():int type: VIRTUAL \l0x001e: AGET  (r3 I:?[int, float]) = (r3 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4] t:[0x00ab, 0x00a4, 0x008d, 0x0076] \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[43, 44] t:[0x0050, 0x0029] \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: CONST_STR  (r3 I:java.lang.String) =  \"objectBoundingBox\" \l0x002b: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0039 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: INVOKE  (r2 I:java.lang.Boolean) = (r0 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l0x0035: IPUT  \l  (r2 I:java.lang.Boolean)\l  (r6 I:com.caverock.androidsvg.SVG$Mask)\l com.caverock.androidsvg.SVG.Mask.maskContentUnitsAreUser java.lang.Boolean \l}"];
Node_11 [shape=record,label="{11\:\ 0x0039|0x0039: CONST_STR  (r3 I:java.lang.String) =  \"userSpaceOnUse\" \l0x003b: INVOKE  (r2 I:boolean) = (r3 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|0x003f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0048 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|0x0041: INVOKE  (r2 I:java.lang.Boolean) = (r4 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l0x0045: IPUT  \l  (r2 I:java.lang.Boolean)\l  (r6 I:com.caverock.androidsvg.SVG$Mask)\l com.caverock.androidsvg.SVG.Mask.maskContentUnitsAreUser java.lang.Boolean \l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|0x0048: NEW_INSTANCE  (r6 I:com.caverock.androidsvg.SVGParseException) =  com.caverock.androidsvg.SVGParseException \l0x004a: CONST_STR  (r7 I:java.lang.String) =  \"Invalid value for attribute maskContentUnits\" \l0x004c: INVOKE  \l  (r6 I:com.caverock.androidsvg.SVGParseException)\l  (r7 I:java.lang.String)\l com.caverock.androidsvg.SVGParseException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|0x004f: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0050|0x0050: CONST_STR  (r3 I:java.lang.String) =  \"objectBoundingBox\" \l0x0052: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0056|0x0056: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x005f \l}"];
Node_18 [shape=record,label="{18\:\ 0x0058|0x0058: INVOKE  (r2 I:java.lang.Boolean) = (r0 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l0x005c: IPUT  \l  (r2 I:java.lang.Boolean)\l  (r6 I:com.caverock.androidsvg.SVG$Mask)\l com.caverock.androidsvg.SVG.Mask.maskUnitsAreUser java.lang.Boolean \l}"];
Node_19 [shape=record,label="{19\:\ 0x005f|0x005f: CONST_STR  (r3 I:java.lang.String) =  \"userSpaceOnUse\" \l0x0061: INVOKE  (r2 I:boolean) = (r3 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0065|0x0065: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x006e \l}"];
Node_21 [shape=record,label="{21\:\ 0x0067|0x0067: INVOKE  (r2 I:java.lang.Boolean) = (r4 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l0x006b: IPUT  \l  (r2 I:java.lang.Boolean)\l  (r6 I:com.caverock.androidsvg.SVG$Mask)\l com.caverock.androidsvg.SVG.Mask.maskUnitsAreUser java.lang.Boolean \l}"];
Node_22 [shape=record,label="{22\:\ 0x006e|0x006e: NEW_INSTANCE  (r6 I:com.caverock.androidsvg.SVGParseException) =  com.caverock.androidsvg.SVGParseException \l0x0070: CONST_STR  (r7 I:java.lang.String) =  \"Invalid value for attribute maskUnits\" \l0x0072: INVOKE  \l  (r6 I:com.caverock.androidsvg.SVGParseException)\l  (r7 I:java.lang.String)\l com.caverock.androidsvg.SVGParseException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x0075|0x0075: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0076|0x0076: INVOKE  (r2 I:com.caverock.androidsvg.SVG$Length) = (r2 I:java.lang.String) com.caverock.androidsvg.SVGParser.parseLength(java.lang.String):com.caverock.androidsvg.SVG$Length type: STATIC \l0x007a: IPUT  \l  (r2 I:com.caverock.androidsvg.SVG$Length)\l  (r6 I:com.caverock.androidsvg.SVG$Mask)\l com.caverock.androidsvg.SVG.Mask.height com.caverock.androidsvg.SVG$Length \l0x007c: IGET  (r2 I:com.caverock.androidsvg.SVG$Length) = (r6 I:com.caverock.androidsvg.SVG$Mask) com.caverock.androidsvg.SVG.Mask.height com.caverock.androidsvg.SVG$Length \l0x007e: INVOKE  (r2 I:boolean) = (r2 I:com.caverock.androidsvg.SVG$Length) com.caverock.androidsvg.SVG.Length.isNegative():boolean type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x0082|0x0082: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0085 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0085|0x0085: NEW_INSTANCE  (r6 I:com.caverock.androidsvg.SVGParseException) =  com.caverock.androidsvg.SVGParseException \l0x0087: CONST_STR  (r7 I:java.lang.String) =  \"Invalid \<mask\> element. height cannot be negative\" \l0x0089: INVOKE  \l  (r6 I:com.caverock.androidsvg.SVGParseException)\l  (r7 I:java.lang.String)\l com.caverock.androidsvg.SVGParseException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_28 [shape=record,label="{28\:\ 0x008c|0x008c: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_29 [shape=record,label="{29\:\ 0x008d|0x008d: INVOKE  (r2 I:com.caverock.androidsvg.SVG$Length) = (r2 I:java.lang.String) com.caverock.androidsvg.SVGParser.parseLength(java.lang.String):com.caverock.androidsvg.SVG$Length type: STATIC \l0x0091: IPUT  \l  (r2 I:com.caverock.androidsvg.SVG$Length)\l  (r6 I:com.caverock.androidsvg.SVG$Mask)\l com.caverock.androidsvg.SVG.Mask.width com.caverock.androidsvg.SVG$Length \l0x0093: IGET  (r2 I:com.caverock.androidsvg.SVG$Length) = (r6 I:com.caverock.androidsvg.SVG$Mask) com.caverock.androidsvg.SVG.Mask.width com.caverock.androidsvg.SVG$Length \l0x0095: INVOKE  (r2 I:boolean) = (r2 I:com.caverock.androidsvg.SVG$Length) com.caverock.androidsvg.SVG.Length.isNegative():boolean type: VIRTUAL \l}"];
Node_30 [shape=record,label="{30\:\ 0x0099|0x0099: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x009c \l}"];
Node_32 [shape=record,label="{32\:\ 0x009c|0x009c: NEW_INSTANCE  (r6 I:com.caverock.androidsvg.SVGParseException) =  com.caverock.androidsvg.SVGParseException \l0x009e: CONST_STR  (r7 I:java.lang.String) =  \"Invalid \<mask\> element. width cannot be negative\" \l0x00a0: INVOKE  \l  (r6 I:com.caverock.androidsvg.SVGParseException)\l  (r7 I:java.lang.String)\l com.caverock.androidsvg.SVGParseException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_33 [shape=record,label="{33\:\ 0x00a3|0x00a3: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_34 [shape=record,label="{34\:\ 0x00a4|0x00a4: INVOKE  (r2 I:com.caverock.androidsvg.SVG$Length) = (r2 I:java.lang.String) com.caverock.androidsvg.SVGParser.parseLength(java.lang.String):com.caverock.androidsvg.SVG$Length type: STATIC \l0x00a8: IPUT  \l  (r2 I:com.caverock.androidsvg.SVG$Length)\l  (r6 I:com.caverock.androidsvg.SVG$Mask)\l com.caverock.androidsvg.SVG.Mask.y com.caverock.androidsvg.SVG$Length \l}"];
Node_35 [shape=record,label="{35\:\ 0x00ab|0x00ab: INVOKE  (r2 I:com.caverock.androidsvg.SVG$Length) = (r2 I:java.lang.String) com.caverock.androidsvg.SVGParser.parseLength(java.lang.String):com.caverock.androidsvg.SVG$Length type: STATIC \l0x00af: IPUT  \l  (r2 I:com.caverock.androidsvg.SVG$Length)\l  (r6 I:com.caverock.androidsvg.SVG$Mask)\l com.caverock.androidsvg.SVG.Mask.x com.caverock.androidsvg.SVG$Length \l}"];
Node_36 [shape=record,label="{36\:\ 0x00b1|0x00b1: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_37 [shape=record,label="{37\:\ 0x00b5|0x00b5: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.parseAttributesMask((r5 'this' I:com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r6 I:com.caverock.androidsvg.SVG$Mask A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.xml.sax.Attributes A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_37;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_24;
Node_4 -> Node_29;
Node_4 -> Node_34;
Node_4 -> Node_35;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_16;
Node_6 -> Node_36;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_36;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_36;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_36;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_36;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_25 -> Node_36[style=dashed];
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_30 -> Node_32;
Node_30 -> Node_36[style=dashed];
Node_32 -> Node_33;
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_1;
}

