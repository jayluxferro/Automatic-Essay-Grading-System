digraph "CFG forcom.caverock.androidsvg.SVGParser.parseStyle(Lcom\/caverock\/androidsvg\/SVG$SvgElementBase;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner) =  com.caverock.androidsvg.SVGParser$TextScanner \l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"\/*.*?*\/\" \l0x0004: CONST_STR  (r2 I:java.lang.String) =  \"\" \l0x0006: INVOKE  (r5 I:java.lang.String) = \l  (r5 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l java.lang.String.replaceAll(java.lang.String, java.lang.String):java.lang.String type: VIRTUAL \l0x000a: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner)\l  (r5 I:java.lang.String)\l com.caverock.androidsvg.SVGParser.TextScanner.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: CONST  (r5 I:?[int, float, short, byte, char]) = (58 ?[int, float, short, byte, char]) \l0x000f: INVOKE  (r1 I:java.lang.String) = \l  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner)\l  (r5 I:char)\l com.caverock.androidsvg.SVGParser.TextScanner.nextToken(char):java.lang.String type: VIRTUAL \l0x0013: INVOKE  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.skipWhitespace():void type: VIRTUAL \l0x0016: INVOKE  (r5 I:boolean) = \l  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner)\l  (r5 I:char)\l com.caverock.androidsvg.SVGParser.TextScanner.consume(char):boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|0x001a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001d \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: INVOKE  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.skipWhitespace():void type: VIRTUAL \l0x0020: CONST  (r5 I:?[int, float, short, byte, char]) = (59 ?[int, float, short, byte, char]) \l0x0022: INVOKE  (r2 I:java.lang.String) = \l  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner)\l  (r5 I:char)\l com.caverock.androidsvg.SVGParser.TextScanner.nextTokenWithWhitespace(char):java.lang.String type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0029 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: INVOKE  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.skipWhitespace():void type: VIRTUAL \l0x002c: INVOKE  (r3 I:boolean) = (r0 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.empty():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0038 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|0x0032: INVOKE  (r5 I:boolean) = \l  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner)\l  (r5 I:char)\l com.caverock.androidsvg.SVGParser.TextScanner.consume(char):boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x000d \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: IGET  (r5 I:com.caverock.androidsvg.SVG$Style) = (r4 I:com.caverock.androidsvg.SVG$SvgElementBase) com.caverock.androidsvg.SVG.SvgElementBase.style com.caverock.androidsvg.SVG$Style \l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|0x003a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0043 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|0x003c: NEW_INSTANCE  (r5 I:com.caverock.androidsvg.SVG$Style) =  com.caverock.androidsvg.SVG$Style \l0x003e: INVOKE  (r5 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.\<init\>():void type: DIRECT \l0x0041: IPUT  \l  (r5 I:com.caverock.androidsvg.SVG$Style)\l  (r4 I:com.caverock.androidsvg.SVG$SvgElementBase)\l com.caverock.androidsvg.SVG.SvgElementBase.style com.caverock.androidsvg.SVG$Style \l}"];
Node_14 [shape=record,label="{14\:\ 0x0043|0x0043: IGET  (r5 I:com.caverock.androidsvg.SVG$Style) = (r4 I:com.caverock.androidsvg.SVG$SvgElementBase) com.caverock.androidsvg.SVG.SvgElementBase.style com.caverock.androidsvg.SVG$Style \l0x0045: INVOKE  \l  (r5 I:com.caverock.androidsvg.SVG$Style)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l com.caverock.androidsvg.SVGParser.processStyleProperty(com.caverock.androidsvg.SVG$Style, java.lang.String, java.lang.String):void type: STATIC \l0x0048: INVOKE  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.skipWhitespace():void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{private static void com.caverock.androidsvg.SVGParser.parseStyle((r4 I:com.caverock.androidsvg.SVG$SvgElementBase A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_4;
Node_2 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_1;
}

