digraph "CFG forcom.caverock.androidsvg.SVGParser.parseAttributesMask(Lcom\/caverock\/androidsvg\/SVG$Mask;Lorg\/xml\/sax\/Attributes;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:33:0x00b1] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0002\-\>B:33:0x00b1\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r1 \>= r7.getLength()) goto L_0x00b5\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|java.lang.String r2 = r7.getValue(r1).trim()\lr3 = com.caverock.androidsvg.SVGParser.C05871.$SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr[com.caverock.androidsvg.SVGParser.SVGAttr.fromString(r7.getLocalName(r1)).ordinal()]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|switch(r3) \{\l    case 1: goto L_0x00ab;\l    case 2: goto L_0x00a4;\l    case 3: goto L_0x008d;\l    case 4: goto L_0x0076;\l    default: goto L_0x0023;\l\}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023}"];
Node_6 [shape=record,label="{6\:\ 0x0024|switch(r3) \{\l    case 43: goto L_0x0050;\l    case 44: goto L_0x0029;\l    default: goto L_0x0027;\l\}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029}"];
Node_8 [shape=record,label="{8\:\ 0x002f|if (\"objectBoundingBox\".equals(r2) == false) goto L_0x0039\l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|r6.maskContentUnitsAreUser = false\l}"];
Node_10 [shape=record,label="{10\:\ 0x0039}"];
Node_11 [shape=record,label="{11\:\ 0x003f|if (\"userSpaceOnUse\".equals(r2) == false) goto L_0x0048\l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|r6.maskContentUnitsAreUser = true\l}"];
Node_13 [shape=record,label="{13\:\ 0x0048}"];
Node_14 [shape=record,label="{14\:\ 0x004f|throw new com.caverock.androidsvg.SVGParseException(\"Invalid value for attribute maskContentUnits\")\l}"];
Node_15 [shape=record,label="{15\:\ 0x0050}"];
Node_16 [shape=record,label="{16\:\ 0x0056|if (\"objectBoundingBox\".equals(r2) == false) goto L_0x005f\l}"];
Node_17 [shape=record,label="{17\:\ 0x0058|r6.maskUnitsAreUser = false\l}"];
Node_18 [shape=record,label="{18\:\ 0x005f}"];
Node_19 [shape=record,label="{19\:\ 0x0065|if (\"userSpaceOnUse\".equals(r2) == false) goto L_0x006e\l}"];
Node_20 [shape=record,label="{20\:\ 0x0067|r6.maskUnitsAreUser = true\l}"];
Node_21 [shape=record,label="{21\:\ 0x006e}"];
Node_22 [shape=record,label="{22\:\ 0x0075|throw new com.caverock.androidsvg.SVGParseException(\"Invalid value for attribute maskUnits\")\l}"];
Node_23 [shape=record,label="{23\:\ 0x0076|r6.height = parseLength(r2)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0082|if (r6.height.isNegative() != false) goto L_0x0085\l}"];
Node_25 [shape=record,label="{25\:\ 0x0085}"];
Node_26 [shape=record,label="{26\:\ 0x008c|throw new com.caverock.androidsvg.SVGParseException(\"Invalid \<mask\> element. height cannot be negative\")\l}"];
Node_27 [shape=record,label="{27\:\ 0x008d|r6.width = parseLength(r2)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0099|if (r6.width.isNegative() != false) goto L_0x009c\l}"];
Node_29 [shape=record,label="{29\:\ 0x009c}"];
Node_30 [shape=record,label="{30\:\ 0x00a3|throw new com.caverock.androidsvg.SVGParseException(\"Invalid \<mask\> element. width cannot be negative\")\l}"];
Node_31 [shape=record,label="{31\:\ 0x00a4|r6.f102y = parseLength(r2)\l}"];
Node_32 [shape=record,label="{32\:\ 0x00ab|r6.f101x = parseLength(r2)\l}"];
Node_33 [shape=record,label="{33\:\ 0x00b1|LOOP_END\lLOOP:0: B:1:0x0002\-\>B:33:0x00b1\l|int r1 = r1 + 1\l}"];
Node_34 [shape=record,label="{34\:\ 0x00b5|RETURN\l|return\l}"];
Node_35 [shape=record,label="{35\:\ 0x0085|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x00b5|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x009c|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x006e|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0048|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x00b1|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x00b1|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x00b1|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x00b1|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x00b1|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x00b1|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x00b1|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x00b1|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x00b1|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.parseAttributesMask((r5v0 'this' com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r6v0 com.caverock.androidsvg.SVG$Mask A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 org.xml.sax.Attributes A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_36;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_23;
Node_4 -> Node_27;
Node_4 -> Node_31;
Node_4 -> Node_32;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_15;
Node_6 -> Node_46;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_41;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_39;
Node_12 -> Node_42;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_43;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_38;
Node_20 -> Node_44;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_24 -> Node_35;
Node_24 -> Node_47[style=dashed];
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_28 -> Node_37;
Node_28 -> Node_48[style=dashed];
Node_29 -> Node_30;
Node_31 -> Node_45;
Node_32 -> Node_40;
Node_33 -> Node_1;
Node_35 -> Node_25;
Node_36 -> Node_34;
Node_37 -> Node_29;
Node_38 -> Node_21;
Node_39 -> Node_13;
Node_40 -> Node_33;
Node_41 -> Node_33;
Node_42 -> Node_33;
Node_43 -> Node_33;
Node_44 -> Node_33;
Node_45 -> Node_33;
Node_46 -> Node_33;
Node_47 -> Node_33;
Node_48 -> Node_33;
}

