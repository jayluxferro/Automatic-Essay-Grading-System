digraph "CFG forcom.caverock.androidsvg.SVGParser.parseOverflow(Ljava\/lang\/String;)Ljava\/lang\/Boolean;" {
subgraph cluster_Region_1538561416 {
label = "R(4:0|(1:(2:19|21))(1:(1:(2:16|21))(1:(1:(2:13|21))(1:(2:10|21))))|20|21) | DECL_VAR: char null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r2.hashCode()\l}"];
subgraph cluster_IfRegion_1817399181 {
label = "IF [B:1:0x0007] THEN: R(1:(2:19|21)) ELSE: R(1:(1:(2:16|21))(1:(1:(2:13|21))(1:(2:10|21))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r0 == \-1217487446) goto L_0x0037\l}"];
subgraph cluster_Region_968103730 {
label = "R(1:(2:19|21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_156206930 {
label = "IF [B:18:0x003d] THEN: R(2:19|21) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x003d|if (r2.equals(\"hidden\") == true) goto L_0x003f\l}"];
subgraph cluster_Region_582366520 {
label = "R(2:19|21)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x003f|r2 = 2\l}"];
subgraph cluster_SwitchRegion_1611139189 {
label = "Switch: 2, default: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0042|PHI: r2 \l  PHI: (r2v1 char) = (r2v5 char), (r2v7 char), (r2v9 char), (r2v11 char), (r2v13 char) binds: [B:20:0x0041, B:19:0x003f, B:16:0x0035, B:13:0x002b, B:10:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|switch(r2) \{\l    case 0: goto L_0x004a;\l    case 1: goto L_0x004a;\l    case 2: goto L_0x0047;\l    case 3: goto L_0x0047;\l    default: goto L_0x0045;\l\}\l}"];
subgraph cluster_Region_1167398950 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_1551997473 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_696382452 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_157949201 [shape=record,label="{|break\l}"];
}
}
}
}
}
subgraph cluster_Region_1691578418 {
label = "R(1:(1:(2:16|21))(1:(1:(2:13|21))(1:(2:10|21)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_236103155 {
label = "IF [B:3:0x000c] THEN: R(1:(2:16|21)) ELSE: R(1:(1:(2:13|21))(1:(2:10|21))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r0 == \-907680051) goto L_0x002d\l}"];
subgraph cluster_Region_886291995 {
label = "R(1:(2:16|21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_317453606 {
label = "IF [B:15:0x0033] THEN: R(2:16|21) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0033|if (r2.equals(\"scroll\") == true) goto L_0x0035\l}"];
subgraph cluster_Region_957358496 {
label = "R(2:16|21)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0035|r2 = 3\l}"];
subgraph cluster_SwitchRegion_1269883135 {
label = "Switch: 2, default: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0042|PHI: r2 \l  PHI: (r2v1 char) = (r2v5 char), (r2v7 char), (r2v9 char), (r2v11 char), (r2v13 char) binds: [B:20:0x0041, B:19:0x003f, B:16:0x0035, B:13:0x002b, B:10:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|switch(r2) \{\l    case 0: goto L_0x004a;\l    case 1: goto L_0x004a;\l    case 2: goto L_0x0047;\l    case 3: goto L_0x0047;\l    default: goto L_0x0045;\l\}\l}"];
subgraph cluster_Region_874335067 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_496437413 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1352178932 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_476260608 [shape=record,label="{|break\l}"];
}
}
}
}
}
subgraph cluster_Region_1123741252 {
label = "R(1:(1:(2:13|21))(1:(2:10|21))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_730394419 {
label = "IF [B:5:0x0011] THEN: R(1:(2:13|21)) ELSE: R(1:(2:10|21)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|if (r0 == 3005871) goto L_0x0023\l}"];
subgraph cluster_Region_1728910494 {
label = "R(1:(2:13|21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1936087991 {
label = "IF [B:12:0x0029] THEN: R(2:13|21) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0029|if (r2.equals(\"auto\") == true) goto L_0x002b\l}"];
subgraph cluster_Region_1426956486 {
label = "R(2:13|21)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x002b|r2 = 1\l}"];
subgraph cluster_SwitchRegion_1992841202 {
label = "Switch: 2, default: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0042|PHI: r2 \l  PHI: (r2v1 char) = (r2v5 char), (r2v7 char), (r2v9 char), (r2v11 char), (r2v13 char) binds: [B:20:0x0041, B:19:0x003f, B:16:0x0035, B:13:0x002b, B:10:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|switch(r2) \{\l    case 0: goto L_0x004a;\l    case 1: goto L_0x004a;\l    case 2: goto L_0x0047;\l    case 3: goto L_0x0047;\l    default: goto L_0x0045;\l\}\l}"];
subgraph cluster_Region_1674907553 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_1819496097 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_763960187 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_424324863 [shape=record,label="{|break\l}"];
}
}
}
}
}
subgraph cluster_Region_1378423408 {
label = "R(1:(2:10|21)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1416574751 {
label = "IF [B:7:0x0016, B:9:0x001f] THEN: R(2:10|21) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0016|ADDED_TO_REGION\l|if (r0 == 466743410) goto L_0x0019\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|ADDED_TO_REGION\l|if (r2.equals(com.mapbox.mapboxsdk.style.layers.Property.VISIBLE) == true) goto L_0x0021\l}"];
subgraph cluster_Region_2029494967 {
label = "R(2:10|21)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0021|r2 = 0\l}"];
subgraph cluster_SwitchRegion_618223826 {
label = "Switch: 2, default: R(1:22)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0042|PHI: r2 \l  PHI: (r2v1 char) = (r2v5 char), (r2v7 char), (r2v9 char), (r2v11 char), (r2v13 char) binds: [B:20:0x0041, B:19:0x003f, B:16:0x0035, B:13:0x002b, B:10:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|switch(r2) \{\l    case 0: goto L_0x004a;\l    case 1: goto L_0x004a;\l    case 2: goto L_0x0047;\l    case 3: goto L_0x0047;\l    default: goto L_0x0045;\l\}\l}"];
subgraph cluster_Region_1106173425 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x004c|RETURN\l|return java.lang.Boolean.TRUE\l}"];
}
subgraph cluster_Region_220180069 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0049|RETURN\l|return java.lang.Boolean.FALSE\l}"];
}
subgraph cluster_Region_398427940 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0045|RETURN\l|return null\l}"];
}
}
}
}
}
}
}
}
}
}
Node_20 [shape=record,label="{20\:\ 0x0041|r2 = 65535\l}"];
subgraph cluster_SwitchRegion_2043564745 {
label = "Switch: 2, default: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0042|PHI: r2 \l  PHI: (r2v1 char) = (r2v5 char), (r2v7 char), (r2v9 char), (r2v11 char), (r2v13 char) binds: [B:20:0x0041, B:19:0x003f, B:16:0x0035, B:13:0x002b, B:10:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|switch(r2) \{\l    case 0: goto L_0x004a;\l    case 1: goto L_0x004a;\l    case 2: goto L_0x0047;\l    case 3: goto L_0x0047;\l    default: goto L_0x0045;\l\}\l}"];
subgraph cluster_Region_1316489556 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_1055193720 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1435098151 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_1591379013 [shape=record,label="{|break\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0009}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000e}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0013}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0019}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0023}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x002d}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0037}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0047}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x004a}"];
MethodNode[shape=record,label="{private static java.lang.Boolean com.caverock.androidsvg.SVGParser.parseOverflow((r2v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lRemoved duplicated region for block: B:22:0x0045 A[RETURN]\lRemoved duplicated region for block: B:25:0x004a \lRemoved duplicated region for block: B:23:0x0047 \lRemoved duplicated region for block: B:22:0x0045 A[RETURN]\lRemoved duplicated region for block: B:25:0x004a \lRemoved duplicated region for block: B:23:0x0047 \lRemoved duplicated region for block: B:22:0x0045 A[RETURN]\lRemoved duplicated region for block: B:25:0x004a \lRemoved duplicated region for block: B:23:0x0047 \lRemoved duplicated region for block: B:22:0x0045 A[RETURN]\lRemoved duplicated region for block: B:25:0x004a \lRemoved duplicated region for block: B:23:0x0047 \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_21 -> Node_25;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_15 -> Node_16;
Node_15 -> Node_20[style=dashed];
Node_16 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_21 -> Node_25;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_20[style=dashed];
Node_13 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_21 -> Node_25;
Node_7 -> Node_8;
Node_7 -> Node_20[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_20[style=dashed];
Node_10 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_21 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_21 -> Node_25;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_11 -> Node_12;
Node_14 -> Node_15;
Node_17 -> Node_18;
Node_23 -> Node_24;
Node_25 -> Node_26;
}

