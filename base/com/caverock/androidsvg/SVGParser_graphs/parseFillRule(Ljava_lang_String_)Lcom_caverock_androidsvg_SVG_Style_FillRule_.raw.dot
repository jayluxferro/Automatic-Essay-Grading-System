digraph "CFG forcom.caverock.androidsvg.SVGParser.parseFillRule(Ljava\/lang\/String;)Lcom\/caverock\/androidsvg\/SVG$Style$FillRule;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"nonzero\" \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: SGET  (r1 I:com.caverock.androidsvg.SVG$Style$FillRule) =  com.caverock.androidsvg.SVG.Style.FillRule.NonZero com.caverock.androidsvg.SVG$Style$FillRule \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN  (r1 I:com.caverock.androidsvg.SVG$Style$FillRule) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: CONST_STR  (r0 I:java.lang.String) =  \"evenodd\" \l0x000d: INVOKE  (r1 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0016 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: SGET  (r1 I:com.caverock.androidsvg.SVG$Style$FillRule) =  com.caverock.androidsvg.SVG.Style.FillRule.EvenOdd com.caverock.androidsvg.SVG$Style$FillRule \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: RETURN  (r1 I:com.caverock.androidsvg.SVG$Style$FillRule) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: RETURN  (r1 I:com.caverock.androidsvg.SVG$Style$FillRule) \l}"];
MethodNode[shape=record,label="{private static com.caverock.androidsvg.SVG$Style$FillRule com.caverock.androidsvg.SVGParser.parseFillRule((r1 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

