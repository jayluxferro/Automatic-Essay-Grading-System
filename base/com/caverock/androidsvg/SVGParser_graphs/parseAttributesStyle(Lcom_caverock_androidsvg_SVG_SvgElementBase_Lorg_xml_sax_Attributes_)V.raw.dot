digraph "CFG forcom.caverock.androidsvg.SVGParser.parseAttributesStyle(Lcom\/caverock\/androidsvg\/SVG$SvgElementBase;Lorg\/xml\/sax\/Attributes;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: INVOKE  (r1 I:int) = (r6 I:org.xml.sax.Attributes) org.xml.sax.Attributes.getLength():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:15:0x0054 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: INVOKE  (r1 I:java.lang.String) = (r6 I:org.xml.sax.Attributes), (r0 I:int) org.xml.sax.Attributes.getValue(int):java.lang.String type: INTERFACE \l0x000b: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.String) java.lang.String.trim():java.lang.String type: VIRTUAL \l0x000f: INVOKE  (r2 I:int) = (r1 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0016 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: SGET  (r2 I:int[]) =  com.caverock.androidsvg.SVGParser.1.$SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr int[] \l0x0018: INVOKE  (r3 I:java.lang.String) = (r6 I:org.xml.sax.Attributes), (r0 I:int) org.xml.sax.Attributes.getLocalName(int):java.lang.String type: INTERFACE \l0x001c: INVOKE  (r3 I:com.caverock.androidsvg.SVGParser$SVGAttr) = (r3 I:java.lang.String) com.caverock.androidsvg.SVGParser.SVGAttr.fromString(java.lang.String):com.caverock.androidsvg.SVGParser$SVGAttr type: STATIC \l0x0020: INVOKE  (r3 I:int) = (r3 I:com.caverock.androidsvg.SVGParser$SVGAttr) com.caverock.androidsvg.SVGParser.SVGAttr.ordinal():int type: VIRTUAL \l0x0024: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[45, 46] t:[0x003c, 0x0035] \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: IGET  (r1 I:com.caverock.androidsvg.SVG$Style) = (r5 I:com.caverock.androidsvg.SVG$SvgElementBase) com.caverock.androidsvg.SVG.SvgElementBase.baseStyle com.caverock.androidsvg.SVG$Style \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0040 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: NEW_INSTANCE  (r1 I:com.caverock.androidsvg.SVG$Style) =  com.caverock.androidsvg.SVG$Style \l0x002f: INVOKE  (r1 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.\<init\>():void type: DIRECT \l0x0032: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG$Style)\l  (r5 I:com.caverock.androidsvg.SVG$SvgElementBase)\l com.caverock.androidsvg.SVG.SvgElementBase.baseStyle com.caverock.androidsvg.SVG$Style \l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: INVOKE  (r1 I:java.util.List) = (r1 I:java.lang.String) com.caverock.androidsvg.CSSParser.parseClassAttribute(java.lang.String):java.util.List type: STATIC \l0x0039: IPUT  \l  (r1 I:java.util.List\<java.lang.String\>)\l  (r5 I:com.caverock.androidsvg.SVG$SvgElementBase)\l com.caverock.androidsvg.SVG.SvgElementBase.classNames java.util.List \l}"];
Node_12 [shape=record,label="{12\:\ 0x003c|0x003c: INVOKE  \l  (r5 I:com.caverock.androidsvg.SVG$SvgElementBase)\l  (r1 I:java.lang.String)\l com.caverock.androidsvg.SVGParser.parseStyle(com.caverock.androidsvg.SVG$SvgElementBase, java.lang.String):void type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|0x0040: IGET  (r1 I:com.caverock.androidsvg.SVG$Style) = (r5 I:com.caverock.androidsvg.SVG$SvgElementBase) com.caverock.androidsvg.SVG.SvgElementBase.baseStyle com.caverock.androidsvg.SVG$Style \l0x0042: INVOKE  (r2 I:java.lang.String) = (r6 I:org.xml.sax.Attributes), (r0 I:int) org.xml.sax.Attributes.getLocalName(int):java.lang.String type: INTERFACE \l0x0046: INVOKE  (r3 I:java.lang.String) = (r6 I:org.xml.sax.Attributes), (r0 I:int) org.xml.sax.Attributes.getValue(int):java.lang.String type: INTERFACE \l0x004a: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String) java.lang.String.trim():java.lang.String type: VIRTUAL \l0x004e: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVG$Style)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l com.caverock.androidsvg.SVGParser.processStyleProperty(com.caverock.androidsvg.SVG$Style, java.lang.String, java.lang.String):void type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x0051|0x0051: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0054|0x0054: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.parseAttributesStyle((r4 'this' I:com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r5 I:com.caverock.androidsvg.SVG$SvgElementBase A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:org.xml.sax.Attributes A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_14[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_11;
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_13;
Node_11 -> Node_14;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_1;
}

