digraph "CFG forcom.caverock.androidsvg.SVGParser.parsePaintSpecifier(Ljava\/lang\/String;)Lcom\/caverock\/androidsvg\/SVG$SvgPaint;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"url(\" \l0x0002: INVOKE  (r0 I:boolean) = (r4 I:java.lang.String), (r0 I:java.lang.String) java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0043 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST_STR  (r0 I:java.lang.String) =  \")\" \l0x000a: INVOKE  (r0 I:int) = (r4 I:java.lang.String), (r0 I:java.lang.String) java.lang.String.indexOf(java.lang.String):int type: VIRTUAL \l0x000e: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x000f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0035 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: INVOKE  (r1 I:java.lang.String) = (r4 I:java.lang.String), (r3 I:int), (r0 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x0017: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.String) java.lang.String.trim():java.lang.String type: VIRTUAL \l0x001b: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x001d: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String), (r0 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL \l0x0021: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String) java.lang.String.trim():java.lang.String type: VIRTUAL \l0x0025: INVOKE  (r0 I:int) = (r4 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|0x0029: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x002f \l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|0x002b: INVOKE  (r2 I:com.caverock.androidsvg.SVG$SvgPaint) = (r4 I:java.lang.String) com.caverock.androidsvg.SVGParser.parseColourSpecifer(java.lang.String):com.caverock.androidsvg.SVG$SvgPaint type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: NEW_INSTANCE  (r4 I:com.caverock.androidsvg.SVG$PaintReference) =  com.caverock.androidsvg.SVG$PaintReference \l0x0031: INVOKE  \l  (r4 I:com.caverock.androidsvg.SVG$PaintReference)\l  (r1 I:java.lang.String)\l  (r2 I:com.caverock.androidsvg.SVG$SvgPaint)\l com.caverock.androidsvg.SVG.PaintReference.\<init\>(java.lang.String, com.caverock.androidsvg.SVG$SvgPaint):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|0x0034: RETURN  (r4 I:com.caverock.androidsvg.SVG$SvgPaint) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|0x0035: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String), (r3 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL \l0x0039: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String) java.lang.String.trim():java.lang.String type: VIRTUAL \l0x003d: NEW_INSTANCE  (r0 I:com.caverock.androidsvg.SVG$PaintReference) =  com.caverock.androidsvg.SVG$PaintReference \l0x003f: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVG$PaintReference)\l  (r4 I:java.lang.String)\l  (r2 I:com.caverock.androidsvg.SVG$SvgPaint)\l com.caverock.androidsvg.SVG.PaintReference.\<init\>(java.lang.String, com.caverock.androidsvg.SVG$SvgPaint):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0042|0x0042: RETURN  (r0 I:com.caverock.androidsvg.SVG$SvgPaint) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0043|0x0043: INVOKE  (r4 I:com.caverock.androidsvg.SVG$SvgPaint) = (r4 I:java.lang.String) com.caverock.androidsvg.SVGParser.parseColourSpecifer(java.lang.String):com.caverock.androidsvg.SVG$SvgPaint type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0047|0x0047: RETURN  (r4 I:com.caverock.androidsvg.SVG$SvgPaint) \l}"];
MethodNode[shape=record,label="{private static com.caverock.androidsvg.SVG$SvgPaint com.caverock.androidsvg.SVGParser.parsePaintSpecifier((r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

