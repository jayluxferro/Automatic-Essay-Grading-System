digraph "CFG forcom.caverock.androidsvg.SVGParser.polygon(Lorg\/xml\/sax\/Attributes;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<polygon\>\" \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0005: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGParser)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Object[])\l com.caverock.androidsvg.SVGParser.debug(java.lang.String, java.lang.Object[]):void type: DIRECT \l0x0008: IGET  (r0 I:com.caverock.androidsvg.SVG$SvgContainer) = (r2 I:com.caverock.androidsvg.SVGParser) com.caverock.androidsvg.SVGParser.currentElement com.caverock.androidsvg.SVG$SvgContainer \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0030 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:com.caverock.androidsvg.SVG$Polygon) =  com.caverock.androidsvg.SVG$Polygon \l0x000e: INVOKE  (r0 I:com.caverock.androidsvg.SVG$Polygon) com.caverock.androidsvg.SVG.Polygon.\<init\>():void type: DIRECT \l0x0011: IGET  (r1 I:com.caverock.androidsvg.SVG) = (r2 I:com.caverock.androidsvg.SVGParser) com.caverock.androidsvg.SVGParser.svgDocument com.caverock.androidsvg.SVG \l0x0013: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG)\l  (r0 I:com.caverock.androidsvg.SVG$Polygon)\l com.caverock.androidsvg.SVG.Polygon.document com.caverock.androidsvg.SVG \l0x0015: IGET  (r1 I:com.caverock.androidsvg.SVG$SvgContainer) = (r2 I:com.caverock.androidsvg.SVGParser) com.caverock.androidsvg.SVGParser.currentElement com.caverock.androidsvg.SVG$SvgContainer \l0x0017: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG$SvgContainer)\l  (r0 I:com.caverock.androidsvg.SVG$Polygon)\l com.caverock.androidsvg.SVG.Polygon.parent com.caverock.androidsvg.SVG$SvgContainer \l0x0019: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGParser)\l  (r0 I:com.caverock.androidsvg.SVG$SvgElementBase)\l  (r3 I:org.xml.sax.Attributes)\l com.caverock.androidsvg.SVGParser.parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase, org.xml.sax.Attributes):void type: DIRECT \l0x001c: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGParser)\l  (r0 I:com.caverock.androidsvg.SVG$SvgElementBase)\l  (r3 I:org.xml.sax.Attributes)\l com.caverock.androidsvg.SVGParser.parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase, org.xml.sax.Attributes):void type: DIRECT \l0x001f: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGParser)\l  (r0 I:com.caverock.androidsvg.SVG$HasTransform)\l  (r3 I:org.xml.sax.Attributes)\l com.caverock.androidsvg.SVGParser.parseAttributesTransform(com.caverock.androidsvg.SVG$HasTransform, org.xml.sax.Attributes):void type: DIRECT \l0x0022: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGParser)\l  (r0 I:com.caverock.androidsvg.SVG$SvgConditional)\l  (r3 I:org.xml.sax.Attributes)\l com.caverock.androidsvg.SVGParser.parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional, org.xml.sax.Attributes):void type: DIRECT \l0x0025: CONST_STR  (r1 I:java.lang.String) =  \"polygon\" \l0x0027: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGParser)\l  (r0 I:com.caverock.androidsvg.SVG$PolyLine)\l  (r3 I:org.xml.sax.Attributes)\l  (r1 I:java.lang.String)\l com.caverock.androidsvg.SVGParser.parseAttributesPolyLine(com.caverock.androidsvg.SVG$PolyLine, org.xml.sax.Attributes, java.lang.String):void type: DIRECT \l0x002a: IGET  (r3 I:com.caverock.androidsvg.SVG$SvgContainer) = (r2 I:com.caverock.androidsvg.SVGParser) com.caverock.androidsvg.SVGParser.currentElement com.caverock.androidsvg.SVG$SvgContainer \l0x002c: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVG$SvgContainer)\l  (r0 I:com.caverock.androidsvg.SVG$SvgObject)\l com.caverock.androidsvg.SVG.SvgContainer.addChild(com.caverock.androidsvg.SVG$SvgObject):void type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x002f|0x002f: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0030|0x0030: NEW_INSTANCE  (r3 I:com.caverock.androidsvg.SVGParseException) =  com.caverock.androidsvg.SVGParseException \l0x0032: CONST_STR  (r0 I:java.lang.String) =  \"Invalid document. Root element must be \<svg\>\" \l0x0034: INVOKE  \l  (r3 I:com.caverock.androidsvg.SVGParseException)\l  (r0 I:java.lang.String)\l com.caverock.androidsvg.SVGParseException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0037|0x0037: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.polygon((r2 'this' I:com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r3 I:org.xml.sax.Attributes A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

