digraph "CFG forcom.caverock.androidsvg.SVGParser.parseAttributesPath(Lcom\/caverock\/androidsvg\/SVG$Path;Lorg\/xml\/sax\/Attributes;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: INVOKE  (r1 I:int) = (r6 I:org.xml.sax.Attributes) org.xml.sax.Attributes.getLength():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:13:0x004a \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: INVOKE  (r1 I:java.lang.String) = (r6 I:org.xml.sax.Attributes), (r0 I:int) org.xml.sax.Attributes.getValue(int):java.lang.String type: INTERFACE \l0x000b: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.String) java.lang.String.trim():java.lang.String type: VIRTUAL \l0x000f: SGET  (r2 I:int[]) =  com.caverock.androidsvg.SVGParser.1.$SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr int[] \l0x0011: INVOKE  (r3 I:java.lang.String) = (r6 I:org.xml.sax.Attributes), (r0 I:int) org.xml.sax.Attributes.getLocalName(int):java.lang.String type: INTERFACE \l0x0015: INVOKE  (r3 I:com.caverock.androidsvg.SVGParser$SVGAttr) = (r3 I:java.lang.String) com.caverock.androidsvg.SVGParser.SVGAttr.fromString(java.lang.String):com.caverock.androidsvg.SVGParser$SVGAttr type: STATIC \l0x0019: INVOKE  (r3 I:int) = (r3 I:com.caverock.androidsvg.SVGParser$SVGAttr) com.caverock.androidsvg.SVGParser.SVGAttr.ordinal():int type: VIRTUAL \l0x001d: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[8, 9] t:[0x0041, 0x0023] \l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: INVOKE  (r1 I:float) = (r1 I:java.lang.String) com.caverock.androidsvg.SVGParser.parseFloat(java.lang.String):float type: STATIC \l0x0027: INVOKE  (r1 I:java.lang.Float) = (r1 I:float) java.lang.Float.valueOf(float):java.lang.Float type: STATIC \l0x002b: IPUT  \l  (r1 I:java.lang.Float)\l  (r5 I:com.caverock.androidsvg.SVG$Path)\l com.caverock.androidsvg.SVG.Path.pathLength java.lang.Float \l0x002d: IGET  (r1 I:java.lang.Float) = (r5 I:com.caverock.androidsvg.SVG$Path) com.caverock.androidsvg.SVG.Path.pathLength java.lang.Float \l0x002f: INVOKE  (r1 I:float) = (r1 I:java.lang.Float) java.lang.Float.floatValue():float type: VIRTUAL \l0x0033: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0034: CMP_G  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0036|0x0036: IF  (r1 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:9:0x0039 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0039|0x0039: NEW_INSTANCE  (r5 I:com.caverock.androidsvg.SVGParseException) =  com.caverock.androidsvg.SVGParseException \l0x003b: CONST_STR  (r6 I:java.lang.String) =  \"Invalid \<path\> element. pathLength cannot be negative\" \l0x003d: INVOKE  \l  (r5 I:com.caverock.androidsvg.SVGParseException)\l  (r6 I:java.lang.String)\l com.caverock.androidsvg.SVGParseException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|0x0040: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0041|0x0041: INVOKE  (r1 I:com.caverock.androidsvg.SVG$PathDefinition) = (r1 I:java.lang.String) com.caverock.androidsvg.SVGParser.parsePath(java.lang.String):com.caverock.androidsvg.SVG$PathDefinition type: STATIC \l0x0045: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG$PathDefinition)\l  (r5 I:com.caverock.androidsvg.SVG$Path)\l com.caverock.androidsvg.SVG.Path.d com.caverock.androidsvg.SVG$PathDefinition \l}"];
Node_12 [shape=record,label="{12\:\ 0x0047|0x0047: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x004a|0x004a: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.parseAttributesPath((r4 'this' I:com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r5 I:com.caverock.androidsvg.SVG$Path A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:org.xml.sax.Attributes A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_11;
Node_4 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_12[style=dashed];
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_1;
}

