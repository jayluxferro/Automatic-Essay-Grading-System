digraph "CFG forcom.caverock.androidsvg.SVGParser.appendToTextContainer(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.caverock.androidsvg.SVG$SvgContainer) = (r3 I:com.caverock.androidsvg.SVGParser) com.caverock.androidsvg.SVGParser.currentElement com.caverock.androidsvg.SVG$SvgContainer \l0x0002: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$SvgConditionalContainer) = (com.caverock.androidsvg.SVG$SvgConditionalContainer) (r0 I:?[OBJECT, ARRAY]) \l0x0004: IGET  (r1 I:java.util.List\<com.caverock.androidsvg.SVG$SvgObject\>) = (r0 I:com.caverock.androidsvg.SVG$SvgConditionalContainer) com.caverock.androidsvg.SVG.SvgConditionalContainer.children java.util.List \l0x0006: INVOKE  (r1 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IGET  (r0 I:java.util.List\<com.caverock.androidsvg.SVG$SvgObject\>) = (r0 I:com.caverock.androidsvg.SVG$SvgConditionalContainer) com.caverock.androidsvg.SVG.SvgConditionalContainer.children java.util.List \l0x0010: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x0012: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0016: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$SvgObject) = (com.caverock.androidsvg.SVG$SvgObject) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: INSTANCE_OF  (r1 I:boolean) = (r0 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$TextSequence \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0032 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001e: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0021: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$TextSequence) = (com.caverock.androidsvg.SVG$TextSequence) (r0 I:?[OBJECT, ARRAY]) \l0x0023: IGET  (r2 I:java.lang.String) = (r0 I:com.caverock.androidsvg.SVG$TextSequence) com.caverock.androidsvg.SVG.TextSequence.text java.lang.String \l0x0025: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0028: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002b: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002f: IPUT  \l  (r4 I:java.lang.String)\l  (r0 I:com.caverock.androidsvg.SVG$TextSequence)\l com.caverock.androidsvg.SVG.TextSequence.text java.lang.String \l}"];
Node_7 [shape=record,label="{7\:\ 0x0032|0x0032: IGET  (r0 I:com.caverock.androidsvg.SVG$SvgContainer) = (r3 I:com.caverock.androidsvg.SVGParser) com.caverock.androidsvg.SVGParser.currentElement com.caverock.androidsvg.SVG$SvgContainer \l0x0034: NEW_INSTANCE  (r1 I:com.caverock.androidsvg.SVG$TextSequence) =  com.caverock.androidsvg.SVG$TextSequence \l0x0036: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVG$TextSequence)\l  (r4 I:java.lang.String)\l com.caverock.androidsvg.SVG.TextSequence.\<init\>(java.lang.String):void type: DIRECT \l0x0039: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVG$SvgContainer)\l  (r1 I:com.caverock.androidsvg.SVG$SvgObject)\l com.caverock.androidsvg.SVG.SvgContainer.addChild(com.caverock.androidsvg.SVG$SvgObject):void type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|0x003c: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.appendToTextContainer((r3 'this' I:com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
}

