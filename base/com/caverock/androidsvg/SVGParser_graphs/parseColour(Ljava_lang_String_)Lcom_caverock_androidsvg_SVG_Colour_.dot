digraph "CFG forcom.caverock.androidsvg.SVGParser.parseColour(Ljava\/lang\/String;)Lcom\/caverock\/androidsvg\/SVG$Colour;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2 = 4\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r11.charAt(0) != '#') goto L_0x00b7\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|com.caverock.androidsvg.IntegerParser r0 = com.caverock.androidsvg.IntegerParser.parseHex(r11, 1, r11.length())\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|if (r0 == null) goto L_0x00a0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|int r3 = r0.getEndPos()\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|if (r3 == 7) goto L_0x0095\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e}"];
Node_7 [shape=record,label="{7\:\ 0x0020|if (r3 == 9) goto L_0x0082\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|switch(r3) \{\l    case 4: goto L_0x0062;\l    case 5: goto L_0x003c;\l    default: goto L_0x0025;\l\}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Bad hex colour value: \")\lr1.append(r11)\l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|throw new com.caverock.androidsvg.SVGParseException(r1.toString())\l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|int r11 = r0.value()\lr0 = 61440 & r11\lr1 = r11 & 3840\lr3 = r11 & 240\lr11 = r11 & 15\lint r5 = r11 \<\< 28\l}"];
Node_12 [shape=record,label="{12\:\ 0x0061|RETURN\l|return new com.caverock.androidsvg.SVG.Colour((((((((r11 \<\< 24) \| r5) \| (r0 \<\< 8)) \| (r0 \<\< 4)) \| (r1 \<\< 4)) \| r1) \| r3) \| (r3 \>\> 4))\l}"];
Node_13 [shape=record,label="{13\:\ 0x0062|int r11 = r0.value()\lr0 = r11 & 3840\lr3 = r11 & 240\lr11 = r11 & 15\lint r0 = r0 \<\< 8\l}"];
Node_14 [shape=record,label="{14\:\ 0x0081|RETURN\l|return new com.caverock.androidsvg.SVG.Colour(r11 \| ((((r0 \| (\-16777216 \| (r0 \<\< 12))) \| (r3 \<\< 8)) \| (r3 \<\< 4)) \| (r11 \<\< 4)))\l}"];
Node_15 [shape=record,label="{15\:\ 0x0082|int r0 = r0.value() \>\>\> 8\l}"];
Node_16 [shape=record,label="{16\:\ 0x0094|RETURN\l|return new com.caverock.androidsvg.SVG.Colour(r0 \| (r0.value() \<\< 24))\l}"];
Node_17 [shape=record,label="{17\:\ 0x0095}"];
Node_18 [shape=record,label="{18\:\ 0x009f|RETURN\l|return new com.caverock.androidsvg.SVG.Colour(r0.value() \| android.support.p000v4.view.ViewCompat.MEASURED_STATE_MASK)\l}"];
Node_19 [shape=record,label="{19\:\ 0x00a0|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Bad hex colour value: \")\lr1.append(r11)\l}"];
Node_20 [shape=record,label="{20\:\ 0x00b6|throw new com.caverock.androidsvg.SVGParseException(r1.toString())\l}"];
Node_21 [shape=record,label="{21\:\ 0x00b7|java.lang.String r0 = r11.toLowerCase(java.util.Locale.US)\lboolean r3 = r0.startsWith(\"rgba(\")\l}"];
Node_22 [shape=record,label="{22\:\ 0x00ca|if (r3 != false) goto L_0x0189\l}"];
Node_23 [shape=record,label="{23\:\ 0x00cc}"];
Node_24 [shape=record,label="{24\:\ 0x00d2|if (r0.startsWith(\"rgb(\") == false) goto L_0x00d6\l}"];
Node_25 [shape=record,label="{25\:\ 0x00d6|boolean r3 = r0.startsWith(\"hsla(\")\l}"];
Node_26 [shape=record,label="{26\:\ 0x00dc|if (r3 != false) goto L_0x00ec\l}"];
Node_27 [shape=record,label="{27\:\ 0x00de}"];
Node_28 [shape=record,label="{28\:\ 0x00e4|if (r0.startsWith(\"hsl(\") == false) goto L_0x00e7\l}"];
Node_29 [shape=record,label="{29\:\ 0x00e7}"];
Node_30 [shape=record,label="{30\:\ 0x00eb|RETURN\l|return parseColourKeyword(r0)\l}"];
Node_31 [shape=record,label="{31\:\ 0x00ec}"];
Node_32 [shape=record,label="{32\:\ 0x00ee|if (r3 == false) goto L_0x00f1\l}"];
Node_33 [shape=record,label="{33\:\ 0x00f0|r2 = 5\l}"];
Node_34 [shape=record,label="{34\:\ 0x00f1|PHI: r2 \l  PHI: (r2v10 int) = (r2v0 int), (r2v15 int) binds: [B:32:0x00ee, B:33:0x00f0] A[DONT_GENERATE, DONT_INLINE]\l|com.caverock.androidsvg.SVGParser$TextScanner r0 = new com.caverock.androidsvg.SVGParser.TextScanner(r11.substring(r2))\lr0.skipWhitespace()\lfloat r2 = r0.nextFloat()\lfloat r4 = r0.checkedNextFloat(r2)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0107|if (java.lang.Float.isNaN(r4) != false) goto L_0x010c\l}"];
Node_36 [shape=record,label="{36\:\ 0x0109|r0.consume('%')\l}"];
Node_37 [shape=record,label="{37\:\ 0x010c|float r8 = r0.checkedNextFloat(r4)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0114|if (java.lang.Float.isNaN(r8) != false) goto L_0x0119\l}"];
Node_39 [shape=record,label="{39\:\ 0x0116|r0.consume('%')\l}"];
Node_40 [shape=record,label="{40\:\ 0x0119|if (r3 == false) goto L_0x0158\l}"];
Node_41 [shape=record,label="{41\:\ 0x011b|float r1 = r0.checkedNextFloat(r8)\lr0.skipWhitespace()\l}"];
Node_42 [shape=record,label="{42\:\ 0x0126|if (java.lang.Float.isNaN(r1) != false) goto L_0x0141\l}"];
Node_43 [shape=record,label="{43\:\ 0x0128}"];
Node_44 [shape=record,label="{44\:\ 0x012c|if (r0.consume(')') == false) goto L_0x0141\l}"];
Node_45 [shape=record,label="{45\:\ 0x012e}"];
Node_46 [shape=record,label="{46\:\ 0x0140|RETURN\l|return new com.caverock.androidsvg.SVG.Colour((clamp255(r1 * 256.0f) \<\< 24) \| hslToRgb(r2, r4, r8))\l}"];
Node_47 [shape=record,label="{47\:\ 0x0141|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Bad hsla() colour value: \")\lr1.append(r11)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0157|throw new com.caverock.androidsvg.SVGParseException(r1.toString())\l}"];
Node_49 [shape=record,label="{49\:\ 0x0158|r0.skipWhitespace()\l}"];
Node_50 [shape=record,label="{50\:\ 0x015f|if (java.lang.Float.isNaN(r8) != false) goto L_0x0172\l}"];
Node_51 [shape=record,label="{51\:\ 0x0161}"];
Node_52 [shape=record,label="{52\:\ 0x0165|if (r0.consume(')') == false) goto L_0x0172\l}"];
Node_53 [shape=record,label="{53\:\ 0x0167}"];
Node_54 [shape=record,label="{54\:\ 0x0171|RETURN\l|return new com.caverock.androidsvg.SVG.Colour(hslToRgb(r2, r4, r8) \| android.support.p000v4.view.ViewCompat.MEASURED_STATE_MASK)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0172|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Bad hsl() colour value: \")\lr1.append(r11)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0188|throw new com.caverock.androidsvg.SVGParseException(r1.toString())\l}"];
Node_57 [shape=record,label="{57\:\ 0x0189}"];
Node_58 [shape=record,label="{58\:\ 0x018b|if (r3 == false) goto L_0x018e\l}"];
Node_59 [shape=record,label="{59\:\ 0x018d|r2 = 5\l}"];
Node_60 [shape=record,label="{60\:\ 0x018e|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v9 int) binds: [B:58:0x018b, B:59:0x018d] A[DONT_GENERATE, DONT_INLINE]\l|com.caverock.androidsvg.SVGParser$TextScanner r0 = new com.caverock.androidsvg.SVGParser.TextScanner(r11.substring(r2))\lr0.skipWhitespace()\lfloat r2 = r0.nextFloat()\l}"];
Node_61 [shape=record,label="{61\:\ 0x01a2|if (java.lang.Float.isNaN(r2) != false) goto L_0x01ad\l}"];
Node_62 [shape=record,label="{62\:\ 0x01a4}"];
Node_63 [shape=record,label="{63\:\ 0x01a8|if (r0.consume('%') == false) goto L_0x01ad\l}"];
Node_64 [shape=record,label="{64\:\ 0x01aa|float r2 = (r2 * 256.0f) \/ 100.0f\l}"];
Node_65 [shape=record,label="{65\:\ 0x01ad|PHI: r2 \l  PHI: (r2v4 float) = (r2v3 float), (r2v3 float), (r2v8 float) binds: [B:61:0x01a2, B:63:0x01a8, B:64:0x01aa] A[DONT_GENERATE, DONT_INLINE]\l|float r4 = r0.checkedNextFloat(r2)\l}"];
Node_66 [shape=record,label="{66\:\ 0x01b5|if (java.lang.Float.isNaN(r4) != false) goto L_0x01c0\l}"];
Node_67 [shape=record,label="{67\:\ 0x01b7}"];
Node_68 [shape=record,label="{68\:\ 0x01bb|if (r0.consume('%') == false) goto L_0x01c0\l}"];
Node_69 [shape=record,label="{69\:\ 0x01bd|float r4 = (r4 * 256.0f) \/ 100.0f\l}"];
Node_70 [shape=record,label="{70\:\ 0x01c0|PHI: r4 \l  PHI: (r4v3 float) = (r4v2 float), (r4v2 float), (r4v5 float) binds: [B:66:0x01b5, B:68:0x01bb, B:69:0x01bd] A[DONT_GENERATE, DONT_INLINE]\l|float r9 = r0.checkedNextFloat(r4)\l}"];
Node_71 [shape=record,label="{71\:\ 0x01c8|if (java.lang.Float.isNaN(r9) != false) goto L_0x01d3\l}"];
Node_72 [shape=record,label="{72\:\ 0x01ca}"];
Node_73 [shape=record,label="{73\:\ 0x01ce|if (r0.consume('%') == false) goto L_0x01d3\l}"];
Node_74 [shape=record,label="{74\:\ 0x01d0|float r9 = (r9 * 256.0f) \/ 100.0f\l}"];
Node_75 [shape=record,label="{75\:\ 0x01d3|PHI: r9 \l  PHI: (r9v2 float) = (r9v1 float), (r9v1 float), (r9v4 float) binds: [B:71:0x01c8, B:73:0x01ce, B:74:0x01d0] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == false) goto L_0x0220\l}"];
Node_76 [shape=record,label="{76\:\ 0x01d5|float r1 = r0.checkedNextFloat(r9)\lr0.skipWhitespace()\l}"];
Node_77 [shape=record,label="{77\:\ 0x01e0|if (java.lang.Float.isNaN(r1) != false) goto L_0x0209\l}"];
Node_78 [shape=record,label="{78\:\ 0x01e2}"];
Node_79 [shape=record,label="{79\:\ 0x01e6|if (r0.consume(')') == false) goto L_0x0209\l}"];
Node_80 [shape=record,label="{80\:\ 0x01e8}"];
Node_81 [shape=record,label="{81\:\ 0x0208|RETURN\l|return new com.caverock.androidsvg.SVG.Colour((((clamp255(r1 * 256.0f) \<\< 24) \| (clamp255(r2) \<\< 16)) \| (clamp255(r4) \<\< 8)) \| clamp255(r9))\l}"];
Node_82 [shape=record,label="{82\:\ 0x0209|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Bad rgba() colour value: \")\lr1.append(r11)\l}"];
Node_83 [shape=record,label="{83\:\ 0x021f|throw new com.caverock.androidsvg.SVGParseException(r1.toString())\l}"];
Node_84 [shape=record,label="{84\:\ 0x0220|r0.skipWhitespace()\l}"];
Node_85 [shape=record,label="{85\:\ 0x0227|if (java.lang.Float.isNaN(r9) != false) goto L_0x0248\l}"];
Node_86 [shape=record,label="{86\:\ 0x0229}"];
Node_87 [shape=record,label="{87\:\ 0x022d|if (r0.consume(')') == false) goto L_0x0248\l}"];
Node_88 [shape=record,label="{88\:\ 0x022f}"];
Node_89 [shape=record,label="{89\:\ 0x0247|RETURN\l|return new com.caverock.androidsvg.SVG.Colour((((clamp255(r2) \<\< 16) \| android.support.p000v4.view.ViewCompat.MEASURED_STATE_MASK) \| (clamp255(r4) \<\< 8)) \| clamp255(r9))\l}"];
Node_90 [shape=record,label="{90\:\ 0x0248|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Bad rgb() colour value: \")\lr1.append(r11)\l}"];
Node_91 [shape=record,label="{91\:\ 0x025e|throw new com.caverock.androidsvg.SVGParseException(r1.toString())\l}"];
MethodNode[shape=record,label="{private static com.caverock.androidsvg.SVG$Colour com.caverock.androidsvg.SVGParser.parseColour((r11v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_19;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_8 -> Node_11;
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_57;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_57[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_31;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_31[style=dashed];
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_49;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_47;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_47;
Node_45 -> Node_46;
Node_47 -> Node_48;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_55;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_55;
Node_53 -> Node_54;
Node_55 -> Node_56;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_65;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_65;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_70;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_70;
Node_69 -> Node_70;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_75;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_75;
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_84;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_82;
Node_78 -> Node_79;
Node_79 -> Node_80[style=dashed];
Node_79 -> Node_82;
Node_80 -> Node_81;
Node_82 -> Node_83;
Node_84 -> Node_85;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_90;
Node_86 -> Node_87;
Node_87 -> Node_88[style=dashed];
Node_87 -> Node_90;
Node_88 -> Node_89;
Node_90 -> Node_91;
}

