digraph "CFG forcom.caverock.androidsvg.SVGParser.parsePaintSpecifier(Ljava\/lang\/String;)Lcom\/caverock\/androidsvg\/SVG$SvgPaint;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r4.startsWith(\"url(\") == false) goto L_0x0043\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|int r0 = r4.indexOf(\")\")\lr2 = null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|if (r0 == \-1) goto L_0x0035\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|java.lang.String r1 = r4.substring(4, r0).trim()\ljava.lang.String r4 = r4.substring(r0 + 1).trim()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|if (r4.length() \<= 0) goto L_0x002f\l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|com.caverock.androidsvg.SVG$SvgPaint r2 = parseColourSpecifer(r4)\l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|PHI: r2 \l  PHI: (r2v1 com.caverock.androidsvg.SVG$SvgPaint) = (r2v0 com.caverock.androidsvg.SVG$SvgPaint), (r2v2 com.caverock.androidsvg.SVG$SvgPaint) binds: [B:5:0x0029, B:6:0x002b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|RETURN\l|return new com.caverock.androidsvg.SVG.PaintReference(r1, r2)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0035}"];
Node_10 [shape=record,label="{10\:\ 0x0042|RETURN\l|return new com.caverock.androidsvg.SVG.PaintReference(r4.substring(4).trim(), (com.caverock.androidsvg.SVG.SvgPaint) null)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0043}"];
Node_12 [shape=record,label="{12\:\ 0x0047|RETURN\l|return parseColourSpecifer(r4)\l}"];
MethodNode[shape=record,label="{private static com.caverock.androidsvg.SVG$SvgPaint com.caverock.androidsvg.SVGParser.parsePaintSpecifier((r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

