digraph "CFG forcom.caverock.androidsvg.SVGParser.parseUsingXmlPullParser(Ljava\/io\/InputStream;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lSplitter:B:0:0x0000\l|org.xmlpull.v1.XmlPullParser r0 = android.util.Xml.newPullParser()     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lcom.caverock.androidsvg.SVGParser$XPPAttributesWrapper r1 = new com.caverock.androidsvg.SVGParser.XPPAttributesWrapper(r8, r0)     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lr0.setFeature(org.xmlpull.p030v1.XmlPullParser.FEATURE_PROCESS_DOCDECL, false)     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lr0.setFeature(org.xmlpull.p030v1.XmlPullParser.FEATURE_PROCESS_NAMESPACES, true)     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lr0.setInput(r9, (java.lang.String) null)     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lint r2 = r0.getEventType()     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x001d|LOOP_START\lCatch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lPHI: r2 \l  PHI: (r2v4 int) = (r2v3 int), (r2v5 int) binds: [B:1:?, B:35:0x0100] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x001d\-\>B:35:0x0100\l|if (r2 == 1) goto L_0x0106     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|if (r2 == 0) goto L_0x00fd     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|if (r2 == 8) goto L_0x00ce     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|if (r2 == 10) goto L_0x00a2     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|switch(r2) \{\l    case 2: goto L_0x0076;\l    case 3: goto L_0x0049;\l    case 4: goto L_0x0039;\l    case 5: goto L_0x0030;\l    default: goto L_0x002e;\l\}     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|text(r0.getText())     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|int[] r2 = new int[2]     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\ltext(r0.getTextCharacters(r2), r2[0], r2[1])     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0049|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|java.lang.String r2 = r0.getName()     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0051|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|if (r0.getPrefix() == null) goto L_0x0069     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0053|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|java.lang.StringBuilder r6 = new java.lang.StringBuilder()     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lr6.append(r0.getPrefix())     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lr6.append(':')     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lr6.append(r2)     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\ljava.lang.String r2 = r6.toString()     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0069|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lPHI: r2 \l  PHI: (r2v17 java.lang.String) = (r2v16 java.lang.String), (r2v18 java.lang.String) binds: [B:14:0x0051, B:15:0x0053] A[DONT_GENERATE, DONT_INLINE]\l|endElement(r0.getNamespace(), r0.getName(), r2)     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0076|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|java.lang.String r2 = r0.getName()     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x007e|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|if (r0.getPrefix() == null) goto L_0x0096     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x0080|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|java.lang.StringBuilder r6 = new java.lang.StringBuilder()     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lr6.append(r0.getPrefix())     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lr6.append(':')     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lr6.append(r2)     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\ljava.lang.String r2 = r6.toString()     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x0096|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lPHI: r2 \l  PHI: (r2v14 java.lang.String) = (r2v13 java.lang.String), (r2v15 java.lang.String) binds: [B:18:0x007e, B:19:0x0080] A[DONT_GENERATE, DONT_INLINE]\l|startElement(r0.getNamespace(), r0.getName(), r2, r1)     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x00a2|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|if (r10 == false) goto L_0x0100     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x00a4|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x00aa|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|if (r8.svgDocument.getRootElement() != null) goto L_0x0100     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_24 [shape=record,label="{24\:\ 0x00ac|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x00b6|if (r0.getText().contains(\"\<!ENTITY \") == false) goto L_0x0100\l}"];
Node_26 [shape=record,label="{26\:\ 0x00b8}"];
Node_27 [shape=record,label="{27\:\ 0x00bc|SYNTHETIC\lSplitter:B:27:0x00bc\l}"];
Node_28 [shape=record,label="{28\:\ ?|Catch:\{ IOException \-\> 0x00c6, XmlPullParserException \-\> 0x0113 \}\lSplitter:B:27:0x00bc\l|android.util.Log.d(TAG, \"Switching to SAX parser to process entities\")     \/\/ Catch:\{ IOException \-\> 0x00c6, XmlPullParserException \-\> 0x0113 \}\lr9.reset()     \/\/ Catch:\{ IOException \-\> 0x00c6, XmlPullParserException \-\> 0x0113 \}\lparseUsingSAX(r9)     \/\/ Catch:\{ IOException \-\> 0x00c6, XmlPullParserException \-\> 0x0113 \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x00c6}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:27:0x00bc\l}"];
Node_31 [shape=record,label="{31\:\ 0x00ca|SYNTHETIC\lSplitter:B:31:0x00ca\l}"];
Node_32 [shape=record,label="{32\:\ ?|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lSplitter:B:31:0x00ca\l|android.util.Log.w(TAG, \"Detected internal entity definitions, but could not parse them.\")     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_33 [shape=record,label="{33\:\ 0x00ce|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|java.lang.StringBuilder r5 = new java.lang.StringBuilder()     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lr5.append(\"PROC INSTR: \")     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lr5.append(r0.getText())     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\landroid.util.Log.d(TAG, r5.toString())     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lcom.caverock.androidsvg.SVGParser$TextScanner r2 = new com.caverock.androidsvg.SVGParser.TextScanner(r0.getText())     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lhandleProcessingInstruction(r2.nextToken(), parseProcessingInstructionAttributes(r2))     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_34 [shape=record,label="{34\:\ 0x00fd|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|startDocument()     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_35 [shape=record,label="{35\:\ 0x0100|LOOP_END\lCatch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\lLOOP:0: B:2:0x001d\-\>B:35:0x0100\l|int r2 = r0.nextToken()     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_36 [shape=record,label="{36\:\ 0x0106|Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|endDocument()     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_37 [shape=record,label="{37\:\ 0x0109|RETURN\l|return\l}"];
Node_38 [shape=record,label="{38\:\ 0x010a|ExcHandler: IOException (r9v2 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.io.IOException r9 = move\-exception\l}"];
Node_39 [shape=record,label="{39\:\ 0x010b}"];
Node_40 [shape=record,label="{40\:\ 0x0112|throw new com.caverock.androidsvg.SVGParseException(\"Stream error\", r9)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0113|ExcHandler: XmlPullParserException (r9v1 'e' org.xmlpull.v1.XmlPullParserException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|org.xmlpull.v1.XmlPullParserException r9 = move\-exception\l}"];
Node_42 [shape=record,label="{42\:\ 0x0114}"];
Node_43 [shape=record,label="{43\:\ 0x011b|throw new com.caverock.androidsvg.SVGParseException(\"XML parser problem\", r9)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0106|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x00b8|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0100|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0100|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0100|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0100|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0100|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0100|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x0100|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0100|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x0100|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0100|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lCatch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|return     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lRETURN\lCatch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l|return     \/\/ Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}\l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.parseUsingXmlPullParser((r8v0 'this' com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r9v0 java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_41;
Node_0 -> Node_38;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_44;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_34;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_33;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_9 -> Node_12;
Node_9 -> Node_13;
Node_9 -> Node_17;
Node_10 -> Node_47;
Node_11 -> Node_48;
Node_12 -> Node_49;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_50;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_51;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_52;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_53;
Node_24 -> Node_25;
Node_25 -> Node_45[style=dashed];
Node_25 -> Node_54;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_30;
Node_27 -> Node_41;
Node_28 -> Node_30;
Node_28 -> Node_41;
Node_28 -> Node_57;
Node_29 -> Node_31;
Node_30 -> Node_29;
Node_31 -> Node_32;
Node_31 -> Node_41;
Node_31 -> Node_38;
Node_32 -> Node_56;
Node_33 -> Node_55;
Node_34 -> Node_46;
Node_35 -> Node_2;
Node_36 -> Node_37;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_44 -> Node_36;
Node_45 -> Node_26;
Node_46 -> Node_35;
Node_47 -> Node_35;
Node_48 -> Node_35;
Node_49 -> Node_35;
Node_50 -> Node_35;
Node_51 -> Node_35;
Node_52 -> Node_35;
Node_53 -> Node_35;
Node_54 -> Node_35;
Node_55 -> Node_35;
}

