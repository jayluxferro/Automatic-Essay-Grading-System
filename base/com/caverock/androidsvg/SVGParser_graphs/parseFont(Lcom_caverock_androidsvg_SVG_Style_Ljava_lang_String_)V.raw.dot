digraph "CFG forcom.caverock.androidsvg.SVGParser.parseFont(Lcom\/caverock\/androidsvg\/SVG$Style;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\|caption\|icon\|menu\|message\-box\|small\-caption\|status\-bar\|\" \l0x0002: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0004: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0007: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (124(0x7c, float:1.74E\-43) ?[int, float, short, byte, char])\l \l0x0009: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x000c: INVOKE  (r1 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x000f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0012: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0016: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.CharSequence) java.lang.String.contains(java.lang.CharSequence):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001d \l}"];
Node_2 [shape=record,label="{2\:\ 0x001c|0x001c: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: NEW_INSTANCE  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner) =  com.caverock.androidsvg.SVGParser$TextScanner \l0x001f: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner)\l  (r7 I:java.lang.String)\l com.caverock.androidsvg.SVGParser.TextScanner.\<init\>(java.lang.String):void type: DIRECT \l0x0022: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0024: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: CONST  (r3 I:?[int, float, short, byte, char]) = (47 ?[int, float, short, byte, char]) \l0x0027: INVOKE  (r4 I:java.lang.String) = \l  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner)\l  (r3 I:char)\l com.caverock.androidsvg.SVGParser.TextScanner.nextToken(char):java.lang.String type: VIRTUAL \l0x002b: INVOKE  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.skipWhitespace():void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|0x002e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0031 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|0x0030: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|0x0031: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0036 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0033|0x0033: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0036 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: CONST_STR  (r5 I:java.lang.String) =  \"normal\" \l0x0038: INVOKE  (r5 I:boolean) = (r4 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|0x003c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x003f \l}"];
Node_13 [shape=record,label="{13\:\ 0x003f|0x003f: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0048 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0041|0x0041: INVOKE  (r7 I:java.lang.Integer) = (r4 I:java.lang.String) com.caverock.androidsvg.SVGParser.FontWeightKeywords.get(java.lang.String):java.lang.Integer type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x0045|0x0045: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0048 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|0x0048: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0051 \l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|0x004a: INVOKE  (r1 I:com.caverock.androidsvg.SVG$Style$FontStyle) = (r4 I:java.lang.String) com.caverock.androidsvg.SVGParser.parseFontStyle(java.lang.String):com.caverock.androidsvg.SVG$Style$FontStyle type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x004e|0x004e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0051 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|0x0051: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x005d \l}"];
Node_22 [shape=record,label="{22\:\ 0x0053|0x0053: CONST_STR  (r2 I:java.lang.String) =  \"small\-caps\" \l0x0055: INVOKE  (r2 I:boolean) = (r4 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x0059|0x0059: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x005d \l}"];
Node_24 [shape=record,label="{24\:\ 0x005b|0x005b: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x005d|0x005d: INVOKE  (r2 I:com.caverock.androidsvg.SVG$Length) = (r4 I:java.lang.String) com.caverock.androidsvg.SVGParser.parseFontSize(java.lang.String):com.caverock.androidsvg.SVG$Length type: STATIC \l0x0061: INVOKE  (r3 I:boolean) = \l  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner)\l  (r3 I:char)\l com.caverock.androidsvg.SVGParser.TextScanner.consume(char):boolean type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0065|0x0065: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0078 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0067|0x0067: INVOKE  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.skipWhitespace():void type: VIRTUAL \l0x006a: INVOKE  (r3 I:java.lang.String) = (r0 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.nextToken():java.lang.String type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x006e|0x006e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0075 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0070|SYNTHETIC\lSplitter:B:29:0x0070\l}"];
Node_30 [shape=record,label="{30\:\ ?|Splitter:B:29:0x0070\l|0x0070: INVOKE  (r3 I:java.lang.String) com.caverock.androidsvg.SVGParser.parseLength(java.lang.String):com.caverock.androidsvg.SVG$Length type: STATIC A[Catch:\{ SVGParseException \-\> 0x0074 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0074|0x0074: RETURN   \l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lExcHandler: SVGParseException null\lSplitter:B:29:0x0070\l}"];
Node_34 [shape=record,label="{34\:\ 0x0075|0x0075: INVOKE  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.skipWhitespace():void type: VIRTUAL \l}"];
Node_35 [shape=record,label="{35\:\ 0x0078|0x0078: INVOKE  (r0 I:java.lang.String) = (r0 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.restOfText():java.lang.String type: VIRTUAL \l0x007c: INVOKE  (r0 I:java.util.List) = (r0 I:java.lang.String) com.caverock.androidsvg.SVGParser.parseFontFamily(java.lang.String):java.util.List type: STATIC \l0x0080: IPUT  \l  (r0 I:java.util.List\<java.lang.String\>)\l  (r6 I:com.caverock.androidsvg.SVG$Style)\l com.caverock.androidsvg.SVG.Style.fontFamily java.util.List \l0x0082: IPUT  \l  (r2 I:com.caverock.androidsvg.SVG$Length)\l  (r6 I:com.caverock.androidsvg.SVG$Style)\l com.caverock.androidsvg.SVG.Style.fontSize com.caverock.androidsvg.SVG$Length \l}"];
Node_36 [shape=record,label="{36\:\ 0x0084|0x0084: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0089 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0086|0x0086: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (400(0x190, float:5.6E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_38 [shape=record,label="{38\:\ 0x0089|0x0089: INVOKE  (r7 I:int) = (r7 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_39 [shape=record,label="{39\:\ 0x008d|0x008d: INVOKE  (r7 I:java.lang.Integer) = (r7 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0091: IPUT  \l  (r7 I:java.lang.Integer)\l  (r6 I:com.caverock.androidsvg.SVG$Style)\l com.caverock.androidsvg.SVG.Style.fontWeight java.lang.Integer \l}"];
Node_40 [shape=record,label="{40\:\ 0x0093|0x0093: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0097 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0095|0x0095: SGET  (r1 I:com.caverock.androidsvg.SVG$Style$FontStyle) =  com.caverock.androidsvg.SVG.Style.FontStyle.Normal com.caverock.androidsvg.SVG$Style$FontStyle \l}"];
Node_42 [shape=record,label="{42\:\ 0x0097|0x0097: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG$Style$FontStyle)\l  (r6 I:com.caverock.androidsvg.SVG$Style)\l com.caverock.androidsvg.SVG.Style.fontStyle com.caverock.androidsvg.SVG$Style$FontStyle \l0x0099: IGET  (r0 I:long) = (r6 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.specifiedFlags long \l0x009b: CONST  (r2 I:?[long, double]) = (122880(0x1e000, double:6.0711E\-319) ?[long, double]) \l0x009e: ARITH  (r0 I:long) = (r0 I:long) \| (r2 I:long) \l0x009f: IPUT  (r0 I:long), (r6 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.specifiedFlags long \l}"];
Node_43 [shape=record,label="{43\:\ 0x00a1|0x00a1: RETURN   \l}"];
MethodNode[shape=record,label="{private static void com.caverock.androidsvg.SVGParser.parseFont((r6 I:com.caverock.androidsvg.SVG$Style A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_10;
Node_8 -> Node_25[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_4[style=dashed];
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_4[style=dashed];
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_4[style=dashed];
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_4;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_35;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_34;
Node_29 -> Node_30;
Node_29 -> Node_33;
Node_30 -> Node_33;
Node_30 -> Node_34;
Node_33 -> Node_32;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
}

