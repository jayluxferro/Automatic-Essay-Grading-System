digraph "CFG forcom.caverock.androidsvg.SVGParser.parseUsingXmlPullParser(Ljava\/io\/InputStream;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r0 I:org.xmlpull.v1.XmlPullParser) =  android.util.Xml.newPullParser():org.xmlpull.v1.XmlPullParser type: STATIC A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}, TRY_ENTER]\l0x0004: NEW_INSTANCE  (r1 I:com.caverock.androidsvg.SVGParser$XPPAttributesWrapper) =  com.caverock.androidsvg.SVGParser$XPPAttributesWrapper A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0006: INVOKE  \l  (r1 I:com.caverock.androidsvg.SVGParser$XPPAttributesWrapper)\l  (r8 I:com.caverock.androidsvg.SVGParser)\l  (r0 I:org.xmlpull.v1.XmlPullParser)\l com.caverock.androidsvg.SVGParser.XPPAttributesWrapper.\<init\>(com.caverock.androidsvg.SVGParser, org.xmlpull.v1.XmlPullParser):void type: DIRECT A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0009: CONST_STR  (r2 I:java.lang.String) =  \"http:\/\/xmlpull.org\/v1\/doc\/features.html#process\-docdecl\" A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x000b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x000c: INVOKE  \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r2 I:java.lang.String)\l  (r3 I:boolean)\l org.xmlpull.v1.XmlPullParser.setFeature(java.lang.String, boolean):void type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x000f: CONST_STR  (r2 I:java.lang.String) =  \"http:\/\/xmlpull.org\/v1\/doc\/features.html#process\-namespaces\" A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0011: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0012: INVOKE  \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r2 I:java.lang.String)\l  (r4 I:boolean)\l org.xmlpull.v1.XmlPullParser.setFeature(java.lang.String, boolean):void type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0015: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0016: INVOKE  \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r9 I:java.io.InputStream)\l  (r2 I:java.lang.String)\l org.xmlpull.v1.XmlPullParser.setInput(java.io.InputStream, java.lang.String):void type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0019: INVOKE  (r2 I:int) = (r0 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getEventType():int type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x001d|0x001d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0106 A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x00fd A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: CONST  (r5 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x00ce A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: CONST  (r5 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x00a2 A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: CONST  (r5 I:?[int, float, short, byte, char]) = (58 ?[int, float, short, byte, char]) A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[2, 3, 4, 5] t:[0x0076, 0x0049, 0x0039, 0x0030] A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: GOTO  \-\> 0x0100 A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: INVOKE  (r2 I:java.lang.String) = (r0 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getText():java.lang.String type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0034: INVOKE  \l  (r8 I:com.caverock.androidsvg.SVGParser)\l  (r2 I:java.lang.String)\l com.caverock.androidsvg.SVGParser.text(java.lang.String):void type: DIRECT A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0037: GOTO  \-\> 0x0100 A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|0x0039: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x003a: NEW_ARRAY  (r2 I:int[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: int[] A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x003c: INVOKE  (r5 I:char[]) = (r0 I:org.xmlpull.v1.XmlPullParser), (r2 I:int[]) org.xmlpull.v1.XmlPullParser.getTextCharacters(int[]):char[] type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0040: AGET  (r6 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0042: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r4 I:?[int, short, byte, char]) A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0044: INVOKE  \l  (r8 I:com.caverock.androidsvg.SVGParser)\l  (r5 I:char[])\l  (r6 I:int)\l  (r2 I:int)\l com.caverock.androidsvg.SVGParser.text(char[], int, int):void type: DIRECT A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0047: GOTO  \-\> 0x0100 A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0049|0x0049: INVOKE  (r2 I:java.lang.String) = (r0 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x004d: INVOKE  (r6 I:java.lang.String) = (r0 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getPrefix():java.lang.String type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0051|0x0051: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0069 A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0053|0x0053: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0055: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0058: INVOKE  (r7 I:java.lang.String) = (r0 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getPrefix():java.lang.String type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x005c: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x005f: INVOKE  (r6 I:java.lang.StringBuilder), (r5 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0062: INVOKE  (r6 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0065: INVOKE  (r2 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0069|0x0069: INVOKE  (r5 I:java.lang.String) = (r0 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getNamespace():java.lang.String type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x006d: INVOKE  (r6 I:java.lang.String) = (r0 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0071: INVOKE  \l  (r8 I:com.caverock.androidsvg.SVGParser)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r2 I:java.lang.String)\l com.caverock.androidsvg.SVGParser.endElement(java.lang.String, java.lang.String, java.lang.String):void type: DIRECT A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0074: GOTO  \-\> 0x0100 A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0076|0x0076: INVOKE  (r2 I:java.lang.String) = (r0 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x007a: INVOKE  (r6 I:java.lang.String) = (r0 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getPrefix():java.lang.String type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x007e|0x007e: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0096 A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0080|0x0080: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0082: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0085: INVOKE  (r7 I:java.lang.String) = (r0 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getPrefix():java.lang.String type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0089: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x008c: INVOKE  (r6 I:java.lang.StringBuilder), (r5 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x008f: INVOKE  (r6 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0092: INVOKE  (r2 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0096|0x0096: INVOKE  (r5 I:java.lang.String) = (r0 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getNamespace():java.lang.String type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x009a: INVOKE  (r6 I:java.lang.String) = (r0 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x009e: INVOKE  \l  (r8 I:com.caverock.androidsvg.SVGParser)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r1 I:org.xml.sax.Attributes)\l com.caverock.androidsvg.SVGParser.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes):void type: DIRECT A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00a1: GOTO  \-\> 0x0100 A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x00a2|0x00a2: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0100 A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x00a4|0x00a4: IGET  (r2 I:com.caverock.androidsvg.SVG) = (r8 I:com.caverock.androidsvg.SVGParser) com.caverock.androidsvg.SVGParser.svgDocument com.caverock.androidsvg.SVG A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00a6: INVOKE  (r2 I:com.caverock.androidsvg.SVG$Svg) = (r2 I:com.caverock.androidsvg.SVG) com.caverock.androidsvg.SVG.getRootElement():com.caverock.androidsvg.SVG$Svg type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x00aa|0x00aa: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0100 A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x00ac|0x00ac: INVOKE  (r2 I:java.lang.String) = (r0 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getText():java.lang.String type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00b0: CONST_STR  (r5 I:java.lang.String) =  \"\<!ENTITY \" A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00b2: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r5 I:java.lang.CharSequence) java.lang.String.contains(java.lang.CharSequence):boolean type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00b5: NOP   A[TRY_LEAVE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x00b6|0x00b6: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0100 \l}"];
Node_26 [shape=record,label="{26\:\ 0x00b8|0x00b8: CONST_STR  (r10 I:java.lang.String) =  \"SVGParser\" \l0x00ba: CONST_STR  (r0 I:java.lang.String) =  \"Switching to SAX parser to process entities\" \l}"];
Node_27 [shape=record,label="{27\:\ 0x00bc|SYNTHETIC\lSplitter:B:27:0x00bc\l}"];
Node_28 [shape=record,label="{28\:\ ?|Splitter:B:27:0x00bc\l|0x00bc: INVOKE  (r10 I:java.lang.String), (r0 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ IOException \-\> 0x00c6, XmlPullParserException \-\> 0x0113 \}, TRY_ENTER]\l0x00bf: INVOKE  (r9 I:java.io.InputStream) java.io.InputStream.reset():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x00c6, XmlPullParserException \-\> 0x0113 \}]\l0x00c2: INVOKE  \l  (r8 I:com.caverock.androidsvg.SVGParser)\l  (r9 I:java.io.InputStream)\l com.caverock.androidsvg.SVGParser.parseUsingSAX(java.io.InputStream):void type: DIRECT A[Catch:\{ IOException \-\> 0x00c6, XmlPullParserException \-\> 0x0113 \}, TRY_LEAVE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x00c6|0x00c6: CONST_STR  (r9 I:java.lang.String) =  \"SVGParser\" \l0x00c8: CONST_STR  (r10 I:java.lang.String) =  \"Detected internal entity definitions, but could not parse them.\" \l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:27:0x00bc\l}"];
Node_32 [shape=record,label="{32\:\ 0x00ca|SYNTHETIC\lSplitter:B:32:0x00ca\l}"];
Node_33 [shape=record,label="{33\:\ ?|Splitter:B:32:0x00ca\l|0x00ca: INVOKE  (r9 I:java.lang.String), (r10 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}, TRY_ENTER]\l}"];
Node_34 [shape=record,label="{34\:\ 0x00cd|0x00cd: RETURN   A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_35 [shape=record,label="{35\:\ 0x00ce|0x00ce: CONST_STR  (r2 I:java.lang.String) =  \"SVGParser\" A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00d0: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00d2: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00d5: CONST_STR  (r6 I:java.lang.String) =  \"PROC INSTR: \" A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00d7: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00da: INVOKE  (r6 I:java.lang.String) = (r0 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getText():java.lang.String type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00de: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00e1: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00e5: INVOKE  (r2 I:java.lang.String), (r5 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00e8: NEW_INSTANCE  (r2 I:com.caverock.androidsvg.SVGParser$TextScanner) =  com.caverock.androidsvg.SVGParser$TextScanner A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00ea: INVOKE  (r5 I:java.lang.String) = (r0 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.getText():java.lang.String type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00ee: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGParser$TextScanner)\l  (r5 I:java.lang.String)\l com.caverock.androidsvg.SVGParser.TextScanner.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00f1: INVOKE  (r5 I:java.lang.String) = (r2 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.nextToken():java.lang.String type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00f5: INVOKE  (r2 I:java.util.Map) = \l  (r8 I:com.caverock.androidsvg.SVGParser)\l  (r2 I:com.caverock.androidsvg.SVGParser$TextScanner)\l com.caverock.androidsvg.SVGParser.parseProcessingInstructionAttributes(com.caverock.androidsvg.SVGParser$TextScanner):java.util.Map type: DIRECT A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00f9: INVOKE  \l  (r8 I:com.caverock.androidsvg.SVGParser)\l  (r5 I:java.lang.String)\l  (r2 I:java.util.Map)\l com.caverock.androidsvg.SVGParser.handleProcessingInstruction(java.lang.String, java.util.Map):void type: DIRECT A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x00fc: GOTO  \-\> 0x0100 A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_36 [shape=record,label="{36\:\ 0x00fd|0x00fd: INVOKE  (r8 I:com.caverock.androidsvg.SVGParser) com.caverock.androidsvg.SVGParser.startDocument():void type: DIRECT A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0100|0x0100: INVOKE  (r2 I:int) = (r0 I:org.xmlpull.v1.XmlPullParser) org.xmlpull.v1.XmlPullParser.nextToken():int type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l0x0104: GOTO  \-\> 0x001d A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0106|0x0106: INVOKE  (r8 I:com.caverock.androidsvg.SVGParser) com.caverock.androidsvg.SVGParser.endDocument():void type: DIRECT A[Catch:\{ XmlPullParserException \-\> 0x0113, IOException \-\> 0x010a \}, TRY_LEAVE]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0109|0x0109: RETURN   \l}"];
Node_40 [shape=record,label="{40\:\ 0x010a|ExcHandler: IOException null\lSplitter:B:0:0x0000\l|0x010a: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_41 [shape=record,label="{41\:\ 0x010b|0x010b: NEW_INSTANCE  (r10 I:com.caverock.androidsvg.SVGParseException) =  com.caverock.androidsvg.SVGParseException \l0x010d: CONST_STR  (r0 I:java.lang.String) =  \"Stream error\" \l0x010f: INVOKE  \l  (r10 I:com.caverock.androidsvg.SVGParseException)\l  (r0 I:java.lang.String)\l  (r9 I:java.lang.Exception)\l com.caverock.androidsvg.SVGParseException.\<init\>(java.lang.String, java.lang.Exception):void type: DIRECT \l}"];
Node_42 [shape=record,label="{42\:\ 0x0112|0x0112: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0113|ExcHandler: XmlPullParserException null\lSplitter:B:0:0x0000\l|0x0113: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_44 [shape=record,label="{44\:\ 0x0114|0x0114: NEW_INSTANCE  (r10 I:com.caverock.androidsvg.SVGParseException) =  com.caverock.androidsvg.SVGParseException \l0x0116: CONST_STR  (r0 I:java.lang.String) =  \"XML parser problem\" \l0x0118: INVOKE  \l  (r10 I:com.caverock.androidsvg.SVGParseException)\l  (r0 I:java.lang.String)\l  (r9 I:java.lang.Exception)\l com.caverock.androidsvg.SVGParseException.\<init\>(java.lang.String, java.lang.Exception):void type: DIRECT \l}"];
Node_45 [shape=record,label="{45\:\ 0x011b|0x011b: THROW  (r10 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.parseUsingXmlPullParser((r8 'this' I:com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r9 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_43;
Node_0 -> Node_40;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_38;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_36;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_35;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_9 -> Node_12;
Node_9 -> Node_13;
Node_9 -> Node_17;
Node_10 -> Node_37;
Node_11 -> Node_37;
Node_12 -> Node_37;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_37;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_37;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_37;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_37;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_37;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_31;
Node_27 -> Node_43;
Node_28 -> Node_31;
Node_28 -> Node_43;
Node_28 -> Node_34;
Node_30 -> Node_32;
Node_31 -> Node_30;
Node_32 -> Node_33;
Node_32 -> Node_43;
Node_32 -> Node_40;
Node_33 -> Node_34;
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_2;
Node_38 -> Node_39;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_43 -> Node_44;
Node_44 -> Node_45;
}

