digraph "CFG forcom.caverock.androidsvg.SVGParser.parseAttributesUse(Lcom\/caverock\/androidsvg\/SVG$Use;Lorg\/xml\/sax\/Attributes;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:21:0x007c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:21:0x007c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r0 \>= r6.getLength()) goto L_0x007f\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|java.lang.String r1 = r6.getValue(r0).trim()\lr2 = com.caverock.androidsvg.SVGParser.C05871.$SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr[com.caverock.androidsvg.SVGParser.SVGAttr.fromString(r6.getLocalName(r0)).ordinal()]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|if (r2 == 6) goto L_0x0062\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|switch(r2) \{\l    case 1: goto L_0x005b;\l    case 2: goto L_0x0054;\l    case 3: goto L_0x003d;\l    case 4: goto L_0x0026;\l    default: goto L_0x0025;\l\}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|r5.height = parseLength(r1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0032|if (r5.height.isNegative() != false) goto L_0x0035\l}"];
Node_8 [shape=record,label="{8\:\ 0x0035}"];
Node_9 [shape=record,label="{9\:\ 0x003c|throw new com.caverock.androidsvg.SVGParseException(\"Invalid \<use\> element. height cannot be negative\")\l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|r5.width = parseLength(r1)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0049|if (r5.width.isNegative() != false) goto L_0x004c\l}"];
Node_12 [shape=record,label="{12\:\ 0x004c}"];
Node_13 [shape=record,label="{13\:\ 0x0053|throw new com.caverock.androidsvg.SVGParseException(\"Invalid \<use\> element. width cannot be negative\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x0054|r5.f135y = parseLength(r1)\l}"];
Node_15 [shape=record,label="{15\:\ 0x005b|r5.f134x = parseLength(r1)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0062}"];
Node_17 [shape=record,label="{17\:\ 0x006c|if (\"\".equals(r6.getURI(r0)) != false) goto L_0x007a\l}"];
Node_18 [shape=record,label="{18\:\ 0x006e}"];
Node_19 [shape=record,label="{19\:\ 0x0078|if (XLINK_NAMESPACE.equals(r6.getURI(r0)) == false) goto L_0x007c\l}"];
Node_20 [shape=record,label="{20\:\ 0x007a|r5.href = r1\l}"];
Node_21 [shape=record,label="{21\:\ 0x007c|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:21:0x007c\l|int r0 = r0 + 1\l}"];
Node_22 [shape=record,label="{22\:\ 0x007f|RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ 0x007f|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x004c|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0035|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x007c|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x007c|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x007c|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x007c|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x007c|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x007c|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x007c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.parseAttributesUse((r4v0 'this' com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r5v0 com.caverock.androidsvg.SVG$Use A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 org.xml.sax.Attributes A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_23;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_16;
Node_5 -> Node_6;
Node_5 -> Node_10;
Node_5 -> Node_14;
Node_5 -> Node_15;
Node_5 -> Node_30;
Node_6 -> Node_7;
Node_7 -> Node_25;
Node_7 -> Node_31[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_24;
Node_11 -> Node_32[style=dashed];
Node_12 -> Node_13;
Node_14 -> Node_27;
Node_15 -> Node_28;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_29;
Node_20 -> Node_26;
Node_21 -> Node_1;
Node_23 -> Node_22;
Node_24 -> Node_12;
Node_25 -> Node_8;
Node_26 -> Node_21;
Node_27 -> Node_21;
Node_28 -> Node_21;
Node_29 -> Node_21;
Node_30 -> Node_21;
Node_31 -> Node_21;
Node_32 -> Node_21;
}

