digraph "CFG forcom.caverock.androidsvg.SVGParser.dumpNode(Lcom\/caverock\/androidsvg\/SVG$SvgObject;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"SVGParser\" \l0x0002: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0004: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0007: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x000a: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x000d: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0011: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l0x0014: INSTANCE_OF  (r0 I:boolean) = (r3 I:?[OBJECT, ARRAY]) com.caverock.androidsvg.SVG$SvgConditionalContainer \l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0041 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|0x0018: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001a: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001d: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0020: CONST_STR  (r4 I:java.lang.String) =  \"  \" \l0x0022: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0025: INVOKE  (r4 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0029: CHECK_CAST  (r3 I:com.caverock.androidsvg.SVG$SvgConditionalContainer) = (com.caverock.androidsvg.SVG$SvgConditionalContainer) (r3 I:?[OBJECT, ARRAY]) \l0x002b: IGET  (r3 I:java.util.List\<com.caverock.androidsvg.SVG$SvgObject\>) = (r3 I:com.caverock.androidsvg.SVG$SvgConditionalContainer) com.caverock.androidsvg.SVG.SvgConditionalContainer.children java.util.List \l0x002d: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0031|0x0031: INVOKE  (r0 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0035|0x0035: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0041 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0037|0x0037: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x003b: CHECK_CAST  (r0 I:com.caverock.androidsvg.SVG$SvgObject) = (com.caverock.androidsvg.SVG$SvgObject) (r0 I:?[OBJECT, ARRAY]) \l0x003d: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGParser)\l  (r0 I:com.caverock.androidsvg.SVG$SvgObject)\l  (r4 I:java.lang.String)\l com.caverock.androidsvg.SVGParser.dumpNode(com.caverock.androidsvg.SVG$SvgObject, java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0041|0x0041: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.dumpNode((r2 'this' I:com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r3 I:com.caverock.androidsvg.SVG$SvgObject A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_3;
}

