digraph "CFG forcom.caverock.androidsvg.SVGParser.parseAttributesConditional(Lcom\/caverock\/androidsvg\/SVG$SvgConditional;Lorg\/xml\/sax\/Attributes;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:14:0x0054] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0002\-\>B:14:0x0054\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r1 \>= r7.getLength()) goto L_0x0057\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|java.lang.String r2 = r7.getValue(r1).trim()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|switch(com.caverock.androidsvg.SVGParser.SVGAttr.fromString(r7.getLocalName(r1))) \{\l    case com.caverock.androidsvg.SVGParser.SVGAttr.requiredFeatures :com.caverock.androidsvg.SVGParser$SVGAttr: goto L_0x004d;\l    case com.caverock.androidsvg.SVGParser.SVGAttr.requiredExtensions :com.caverock.androidsvg.SVGParser$SVGAttr: goto L_0x0049;\l    case com.caverock.androidsvg.SVGParser.SVGAttr.systemLanguage :com.caverock.androidsvg.SVGParser$SVGAttr: goto L_0x0041;\l    case com.caverock.androidsvg.SVGParser.SVGAttr.requiredFormats :com.caverock.androidsvg.SVGParser$SVGAttr: goto L_0x0039;\l    case com.caverock.androidsvg.SVGParser.SVGAttr.requiredFonts :com.caverock.androidsvg.SVGParser$SVGAttr: goto L_0x0024;\l    default: goto L_0x0023;\l\}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|java.util.List r2 = parseFontFamily(r2)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|if (r2 == null) goto L_0x0030\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|java.util.HashSet r3 = new java.util.HashSet(r2)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|java.util.HashSet r3 = new java.util.HashSet(0)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|PHI: r3 \l  PHI: (r3v2 java.util.HashSet) = (r3v3 java.util.HashSet), (r3v4 java.util.HashSet) binds: [B:8:0x0030, B:7:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|r6.setRequiredFonts(r3)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|r6.setRequiredFormats(parseRequiredFormats(r2))\l}"];
Node_11 [shape=record,label="{11\:\ 0x0041|r6.setSystemLanguage(parseSystemLanguage(r2))\l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|r6.setRequiredExtensions(r2)\l}"];
Node_13 [shape=record,label="{13\:\ 0x004d|r6.setRequiredFeatures(parseRequiredFeatures(r2))\l}"];
Node_14 [shape=record,label="{14\:\ 0x0054|LOOP_END\lLOOP:0: B:1:0x0002\-\>B:14:0x0054\l|int r1 = r1 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0057|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ 0x0057|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0054|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0054|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0054|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0054|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0054|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0054|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.parseAttributesConditional((r5v0 'this' com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r6v0 com.caverock.androidsvg.SVG$SvgConditional A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 org.xml.sax.Attributes A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_16;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_10;
Node_4 -> Node_11;
Node_4 -> Node_12;
Node_4 -> Node_13;
Node_4 -> Node_22;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_18;
Node_10 -> Node_19;
Node_11 -> Node_20;
Node_12 -> Node_21;
Node_13 -> Node_17;
Node_14 -> Node_1;
Node_16 -> Node_15;
Node_17 -> Node_14;
Node_18 -> Node_14;
Node_19 -> Node_14;
Node_20 -> Node_14;
Node_21 -> Node_14;
Node_22 -> Node_14;
}

