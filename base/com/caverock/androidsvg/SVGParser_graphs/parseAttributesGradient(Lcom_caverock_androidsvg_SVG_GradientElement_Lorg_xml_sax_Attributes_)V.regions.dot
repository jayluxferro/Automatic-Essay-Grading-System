digraph "CFG forcom.caverock.androidsvg.SVGParser.parseAttributesGradient(Lcom\/caverock\/androidsvg\/SVG$GradientElement;Lorg\/xml\/sax\/Attributes;)V" {
subgraph cluster_Region_1107378239 {
label = "R(2:0|(3:3|(1:5)(1:(1:24)(0))|25))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = 0\l}"];
subgraph cluster_LoopRegion_2098322463 {
label = "LOOP:0: (3:3|(1:5)(1:(1:24)(0))|25)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r1 \< r7.getLength()) goto L_0x0008\l}"];
subgraph cluster_Region_1013592922 {
label = "R(3:3|(1:5)(1:(1:24)(0))|25)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|java.lang.String java.lang.String r2 = r7.getValue(r1).trim()\lint r3 = com.caverock.androidsvg.SVGParser.C05871.$SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr[com.caverock.androidsvg.SVGParser.SVGAttr.fromString(r7.getLocalName(r1)).ordinal()]\l}"];
subgraph cluster_IfRegion_1400333935 {
label = "IF [B:4:0x0021] THEN: R(1:5) ELSE: R(1:(1:24)(0))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0021|if (r3 != 6) goto L_0x0023\l}"];
subgraph cluster_Region_326920581 {
label = "R(1:5)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_1059395613 {
label = "Switch: 3, default: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0023|switch(r3) \{\l    case 32: goto L_0x0051;\l    case 33: goto L_0x004a;\l    case 34: goto L_0x0027;\l    default: goto L_0x0026;\l\}\l}"];
subgraph cluster_Region_1401698425 {
label = "R(1:(2:14|1)(1:(2:17|1)(1:19)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1171722446 {
label = "IF [B:13:0x0057] THEN: R(2:14|1) ELSE: R(1:(2:17|1)(1:19))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0057|if (\"objectBoundingBox\".equals(r2) == true) goto L_0x0059\l}"];
subgraph cluster_Region_190185870 {
label = "R(2:14|1)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0059|r6.gradientUnitsAreUser = false\l}"];
Node_InsnContainer_1574891976 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_756980663 {
label = "R(1:(2:17|1)(1:19)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_919985487 {
label = "IF [B:16:0x0066] THEN: R(2:17|1) ELSE: R(1:19) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0066|if (\"userSpaceOnUse\".equals(r2) == true) goto L_0x0068\l}"];
subgraph cluster_Region_534978973 {
label = "R(2:17|1)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0068|r6.gradientUnitsAreUser = true\l}"];
Node_InsnContainer_604117406 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_242809959 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0077|throw new com.caverock.androidsvg.SVGParseException(\"Invalid value for attribute gradientUnits\")\l}"];
}
}
}
}
}
subgraph cluster_Region_1539885100 {
label = "R(2:11|1)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x004a|r6.gradientTransform = parseTransformList(r2)\l}"];
Node_InsnContainer_1466047804 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1359683972 {
label = "R(1:(2:7|1))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1710296274 {
label = "Try: R(2:7|1) catches: R(2:8|10)";
node [shape=record,color=blue];
subgraph cluster_Region_736684742 {
label = "R(2:7|1)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|Catch:\{ IllegalArgumentException \-\> 0x002e \}\lSplitter:B:6:0x0027\l|r6.spreadMethod = com.caverock.androidsvg.SVG.GradientSpread.valueOf(r2)     \/\/ Catch:\{ IllegalArgumentException \-\> 0x002e \}\l}"];
Node_InsnContainer_748904399 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1455738389 {
label = "R(2:8|10) | ExcHandler: IllegalArgumentException (unused java.lang.IllegalArgumentException)\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002e}"];
Node_10 [shape=record,label="{10\:\ 0x0049|throw new com.caverock.androidsvg.SVGParseException(\"Invalid spreadMethod attribute. \"\" + r2 + \"\" is not a valid value.\")\l}"];
}
}
}
}
}
subgraph cluster_Region_1810840730 {
label = "R(1:(1:24)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_228571642 {
label = "IF [B:21:0x0082, B:23:0x008e] THEN: R(1:24) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0082|if (\"\".equals(r7.getURI(r1)) == true) goto L_0x0090\l}"];
Node_23 [shape=record,label="{23\:\ 0x008e|ADDED_TO_REGION\l|if (XLINK_NAMESPACE.equals(r7.getURI(r1)) == true) goto L_0x0090\l}"];
subgraph cluster_Region_1315130919 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0090|r6.href = r2\l}"];
}
subgraph cluster_Region_1675638626 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_25 [shape=record,label="{25\:\ 0x0092|LOOP_END\lLOOP:0: B:1:0x0002\-\>B:25:0x0092\l|r1++\l}"];
}
}
}
subgraph cluster_Region_1455738389 {
label = "R(2:8|10) | ExcHandler: IllegalArgumentException (unused java.lang.IllegalArgumentException)\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002e}"];
Node_10 [shape=record,label="{10\:\ 0x0049|throw new com.caverock.androidsvg.SVGParseException(\"Invalid spreadMethod attribute. \"\" + r2 + \"\" is not a valid value.\")\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:25:0x0092] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0002\-\>B:25:0x0092\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0027|SYNTHETIC\lSplitter:B:6:0x0027\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\lExcHandler: IllegalArgumentException (unused java.lang.IllegalArgumentException)\lSplitter:B:6:0x0027\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0051}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0060}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0070}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0078}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0084}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0096}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0096|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0070|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0092|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0092|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0092|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0092|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0092|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0092|SYNTHETIC\l|continue\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0092|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.parseAttributesGradient((r5v0 'this' com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r6v0 com.caverock.androidsvg.SVG$GradientElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 org.xml.sax.Attributes A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCode restructure failed: missing block: B:34:0x0092, code lost:\l    continue;\l\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_27[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_20[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_11;
Node_5 -> Node_12;
Node_5 -> Node_34;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_31;
Node_16 -> Node_17;
Node_16 -> Node_28[style=dashed];
Node_17 -> Node_32;
Node_11 -> Node_30;
Node_7 -> Node_9;
Node_7 -> Node_35;
Node_8 -> Node_10;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_23 -> Node_24;
Node_23 -> Node_33[style=dashed];
Node_24 -> Node_29;
Node_25 -> Node_1;
Node_8 -> Node_10;
Node_1 -> Node_2;
Node_6 -> Node_7;
Node_6 -> Node_9;
Node_9 -> Node_8;
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_27 -> Node_26;
Node_28 -> Node_18;
Node_29 -> Node_25;
Node_30 -> Node_25;
Node_31 -> Node_25;
Node_32 -> Node_25;
Node_33 -> Node_25;
Node_34 -> Node_25;
Node_35 -> Node_25;
}

