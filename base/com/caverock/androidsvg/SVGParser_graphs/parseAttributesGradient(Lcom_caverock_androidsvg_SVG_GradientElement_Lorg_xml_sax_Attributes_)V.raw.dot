digraph "CFG forcom.caverock.androidsvg.SVGParser.parseAttributesGradient(Lcom\/caverock\/androidsvg\/SVG$GradientElement;Lorg\/xml\/sax\/Attributes;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r2 I:int) = (r7 I:org.xml.sax.Attributes) org.xml.sax.Attributes.getLength():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:28:0x0096 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r2 I:java.lang.String) = (r7 I:org.xml.sax.Attributes), (r1 I:int) org.xml.sax.Attributes.getValue(int):java.lang.String type: INTERFACE \l0x000c: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String) java.lang.String.trim():java.lang.String type: VIRTUAL \l0x0010: SGET  (r3 I:int[]) =  com.caverock.androidsvg.SVGParser.1.$SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr int[] \l0x0012: INVOKE  (r4 I:java.lang.String) = (r7 I:org.xml.sax.Attributes), (r1 I:int) org.xml.sax.Attributes.getLocalName(int):java.lang.String type: INTERFACE \l0x0016: INVOKE  (r4 I:com.caverock.androidsvg.SVGParser$SVGAttr) = (r4 I:java.lang.String) com.caverock.androidsvg.SVGParser.SVGAttr.fromString(java.lang.String):com.caverock.androidsvg.SVGParser$SVGAttr type: STATIC \l0x001a: INVOKE  (r4 I:int) = (r4 I:com.caverock.androidsvg.SVGParser$SVGAttr) com.caverock.androidsvg.SVGParser.SVGAttr.ordinal():int type: VIRTUAL \l0x001e: AGET  (r3 I:?[int, float]) = (r3 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x0020: CONST  (r4 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0078 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[32, 33, 34] t:[0x0051, 0x004a, 0x0027] \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|SYNTHETIC\lSplitter:B:7:0x0027\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0027\l|0x0027: INVOKE  (r3 I:com.caverock.androidsvg.SVG$GradientSpread) = (r2 I:java.lang.String) com.caverock.androidsvg.SVG.GradientSpread.valueOf(java.lang.String):com.caverock.androidsvg.SVG$GradientSpread type: STATIC A[Catch:\{ IllegalArgumentException \-\> 0x002e \}, TRY_ENTER]\l0x002b: IPUT  \l  (r3 I:com.caverock.androidsvg.SVG$GradientSpread)\l  (r6 I:com.caverock.androidsvg.SVG$GradientElement)\l com.caverock.androidsvg.SVG.GradientElement.spreadMethod com.caverock.androidsvg.SVG$GradientSpread A[Catch:\{ IllegalArgumentException \-\> 0x002e \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: NEW_INSTANCE  (r6 I:com.caverock.androidsvg.SVGParseException) =  com.caverock.androidsvg.SVGParseException \l0x0030: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0032: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0035: CONST_STR  (r0 I:java.lang.String) =  \"Invalid spreadMethod attribute. \"\" \l0x0037: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003a: INVOKE  (r7 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003d: CONST_STR  (r0 I:java.lang.String) =  \"\" is not a valid value.\" \l0x003f: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0042: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0046: INVOKE  \l  (r6 I:com.caverock.androidsvg.SVGParseException)\l  (r7 I:java.lang.String)\l com.caverock.androidsvg.SVGParseException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lExcHandler: IllegalArgumentException null\lSplitter:B:7:0x0027\l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|0x0049: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x004a|0x004a: INVOKE  (r2 I:android.graphics.Matrix) = \l  (r5 I:com.caverock.androidsvg.SVGParser)\l  (r2 I:java.lang.String)\l com.caverock.androidsvg.SVGParser.parseTransformList(java.lang.String):android.graphics.Matrix type: DIRECT \l0x004e: IPUT  \l  (r2 I:android.graphics.Matrix)\l  (r6 I:com.caverock.androidsvg.SVG$GradientElement)\l com.caverock.androidsvg.SVG.GradientElement.gradientTransform android.graphics.Matrix \l}"];
Node_14 [shape=record,label="{14\:\ 0x0051|0x0051: CONST_STR  (r3 I:java.lang.String) =  \"objectBoundingBox\" \l0x0053: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0057|0x0057: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0060 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0059|0x0059: INVOKE  (r2 I:java.lang.Boolean) = (r0 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l0x005d: IPUT  \l  (r2 I:java.lang.Boolean)\l  (r6 I:com.caverock.androidsvg.SVG$GradientElement)\l com.caverock.androidsvg.SVG.GradientElement.gradientUnitsAreUser java.lang.Boolean \l}"];
Node_17 [shape=record,label="{17\:\ 0x0060|0x0060: CONST_STR  (r3 I:java.lang.String) =  \"userSpaceOnUse\" \l0x0062: INVOKE  (r2 I:boolean) = (r3 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0066|0x0066: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0070 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0068|0x0068: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0069: INVOKE  (r2 I:java.lang.Boolean) = (r2 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l0x006d: IPUT  \l  (r2 I:java.lang.Boolean)\l  (r6 I:com.caverock.androidsvg.SVG$GradientElement)\l com.caverock.androidsvg.SVG.GradientElement.gradientUnitsAreUser java.lang.Boolean \l}"];
Node_20 [shape=record,label="{20\:\ 0x0070|0x0070: NEW_INSTANCE  (r6 I:com.caverock.androidsvg.SVGParseException) =  com.caverock.androidsvg.SVGParseException \l0x0072: CONST_STR  (r7 I:java.lang.String) =  \"Invalid value for attribute gradientUnits\" \l0x0074: INVOKE  \l  (r6 I:com.caverock.androidsvg.SVGParseException)\l  (r7 I:java.lang.String)\l com.caverock.androidsvg.SVGParseException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x0077|0x0077: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0078|0x0078: CONST_STR  (r3 I:java.lang.String) =  \"\" \l0x007a: INVOKE  (r4 I:java.lang.String) = (r7 I:org.xml.sax.Attributes), (r1 I:int) org.xml.sax.Attributes.getURI(int):java.lang.String type: INTERFACE \l0x007e: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x0082|0x0082: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0090 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0084|0x0084: CONST_STR  (r3 I:java.lang.String) =  \"http:\/\/www.w3.org\/1999\/xlink\" \l0x0086: INVOKE  (r4 I:java.lang.String) = (r7 I:org.xml.sax.Attributes), (r1 I:int) org.xml.sax.Attributes.getURI(int):java.lang.String type: INTERFACE \l0x008a: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x008e|0x008e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0092 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0090|0x0090: IPUT  \l  (r2 I:java.lang.String)\l  (r6 I:com.caverock.androidsvg.SVG$GradientElement)\l com.caverock.androidsvg.SVG.GradientElement.href java.lang.String \l}"];
Node_27 [shape=record,label="{27\:\ 0x0092|0x0092: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0096|0x0096: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.parseAttributesGradient((r5 'this' I:com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r6 I:com.caverock.androidsvg.SVG$GradientElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.xml.sax.Attributes A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_28;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_22;
Node_5 -> Node_7;
Node_5 -> Node_13;
Node_5 -> Node_14;
Node_5 -> Node_27;
Node_7 -> Node_8;
Node_7 -> Node_11;
Node_8 -> Node_11;
Node_8 -> Node_27;
Node_10 -> Node_12;
Node_11 -> Node_10;
Node_13 -> Node_27;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_27;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_1;
}

