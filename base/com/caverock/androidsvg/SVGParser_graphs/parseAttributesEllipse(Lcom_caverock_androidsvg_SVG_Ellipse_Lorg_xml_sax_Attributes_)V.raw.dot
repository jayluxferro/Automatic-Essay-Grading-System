digraph "CFG forcom.caverock.androidsvg.SVGParser.parseAttributesEllipse(Lcom\/caverock\/androidsvg\/SVG$Ellipse;Lorg\/xml\/sax\/Attributes;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: INVOKE  (r1 I:int) = (r6 I:org.xml.sax.Attributes) org.xml.sax.Attributes.getLength():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:19:0x0062 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: INVOKE  (r1 I:java.lang.String) = (r6 I:org.xml.sax.Attributes), (r0 I:int) org.xml.sax.Attributes.getValue(int):java.lang.String type: INTERFACE \l0x000b: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.String) java.lang.String.trim():java.lang.String type: VIRTUAL \l0x000f: SGET  (r2 I:int[]) =  com.caverock.androidsvg.SVGParser.1.$SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr int[] \l0x0011: INVOKE  (r3 I:java.lang.String) = (r6 I:org.xml.sax.Attributes), (r0 I:int) org.xml.sax.Attributes.getLocalName(int):java.lang.String type: INTERFACE \l0x0015: INVOKE  (r3 I:com.caverock.androidsvg.SVGParser$SVGAttr) = (r3 I:java.lang.String) com.caverock.androidsvg.SVGParser.SVGAttr.fromString(java.lang.String):com.caverock.androidsvg.SVGParser$SVGAttr type: STATIC \l0x0019: INVOKE  (r3 I:int) = (r3 I:com.caverock.androidsvg.SVGParser$SVGAttr) com.caverock.androidsvg.SVGParser.SVGAttr.ordinal():int type: VIRTUAL \l0x001d: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[10, 11, 12, 13] t:[0x0048, 0x0031, 0x002a, 0x0023] \l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: INVOKE  (r1 I:com.caverock.androidsvg.SVG$Length) = (r1 I:java.lang.String) com.caverock.androidsvg.SVGParser.parseLength(java.lang.String):com.caverock.androidsvg.SVG$Length type: STATIC \l0x0027: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG$Length)\l  (r5 I:com.caverock.androidsvg.SVG$Ellipse)\l com.caverock.androidsvg.SVG.Ellipse.cy com.caverock.androidsvg.SVG$Length \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: INVOKE  (r1 I:com.caverock.androidsvg.SVG$Length) = (r1 I:java.lang.String) com.caverock.androidsvg.SVGParser.parseLength(java.lang.String):com.caverock.androidsvg.SVG$Length type: STATIC \l0x002e: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG$Length)\l  (r5 I:com.caverock.androidsvg.SVG$Ellipse)\l com.caverock.androidsvg.SVG.Ellipse.cx com.caverock.androidsvg.SVG$Length \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: INVOKE  (r1 I:com.caverock.androidsvg.SVG$Length) = (r1 I:java.lang.String) com.caverock.androidsvg.SVGParser.parseLength(java.lang.String):com.caverock.androidsvg.SVG$Length type: STATIC \l0x0035: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG$Length)\l  (r5 I:com.caverock.androidsvg.SVG$Ellipse)\l com.caverock.androidsvg.SVG.Ellipse.ry com.caverock.androidsvg.SVG$Length \l0x0037: IGET  (r1 I:com.caverock.androidsvg.SVG$Length) = (r5 I:com.caverock.androidsvg.SVG$Ellipse) com.caverock.androidsvg.SVG.Ellipse.ry com.caverock.androidsvg.SVG$Length \l0x0039: INVOKE  (r1 I:boolean) = (r1 I:com.caverock.androidsvg.SVG$Length) com.caverock.androidsvg.SVG.Length.isNegative():boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|0x003d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0040 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: NEW_INSTANCE  (r5 I:com.caverock.androidsvg.SVGParseException) =  com.caverock.androidsvg.SVGParseException \l0x0042: CONST_STR  (r6 I:java.lang.String) =  \"Invalid \<ellipse\> element. ry cannot be negative\" \l0x0044: INVOKE  \l  (r5 I:com.caverock.androidsvg.SVGParseException)\l  (r6 I:java.lang.String)\l com.caverock.androidsvg.SVGParseException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0047|0x0047: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0048|0x0048: INVOKE  (r1 I:com.caverock.androidsvg.SVG$Length) = (r1 I:java.lang.String) com.caverock.androidsvg.SVGParser.parseLength(java.lang.String):com.caverock.androidsvg.SVG$Length type: STATIC \l0x004c: IPUT  \l  (r1 I:com.caverock.androidsvg.SVG$Length)\l  (r5 I:com.caverock.androidsvg.SVG$Ellipse)\l com.caverock.androidsvg.SVG.Ellipse.rx com.caverock.androidsvg.SVG$Length \l0x004e: IGET  (r1 I:com.caverock.androidsvg.SVG$Length) = (r5 I:com.caverock.androidsvg.SVG$Ellipse) com.caverock.androidsvg.SVG.Ellipse.rx com.caverock.androidsvg.SVG$Length \l0x0050: INVOKE  (r1 I:boolean) = (r1 I:com.caverock.androidsvg.SVG$Length) com.caverock.androidsvg.SVG.Length.isNegative():boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0054|0x0054: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0057 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0057|0x0057: NEW_INSTANCE  (r5 I:com.caverock.androidsvg.SVGParseException) =  com.caverock.androidsvg.SVGParseException \l0x0059: CONST_STR  (r6 I:java.lang.String) =  \"Invalid \<ellipse\> element. rx cannot be negative\" \l0x005b: INVOKE  \l  (r5 I:com.caverock.androidsvg.SVGParseException)\l  (r6 I:java.lang.String)\l com.caverock.androidsvg.SVGParseException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x005e|0x005e: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_18 [shape=record,label="{18\:\ 0x005f|0x005f: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0062|0x0062: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.parseAttributesEllipse((r4 'this' I:com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r5 I:com.caverock.androidsvg.SVG$Ellipse A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:org.xml.sax.Attributes A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_19;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_7;
Node_4 -> Node_8;
Node_4 -> Node_13;
Node_4 -> Node_18;
Node_6 -> Node_18;
Node_7 -> Node_18;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_18[style=dashed];
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_16;
Node_14 -> Node_18[style=dashed];
Node_16 -> Node_17;
Node_18 -> Node_1;
}

