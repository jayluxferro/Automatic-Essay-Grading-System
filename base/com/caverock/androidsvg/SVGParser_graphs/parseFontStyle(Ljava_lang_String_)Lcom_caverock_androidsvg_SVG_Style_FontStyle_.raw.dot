digraph "CFG forcom.caverock.androidsvg.SVGParser.parseFontStyle(Ljava\/lang\/String;)Lcom\/caverock\/androidsvg\/SVG$Style$FontStyle;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r2 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (\-1657669071(0xffffffff9d31fa31, float:\-2.35551E\-21) ?[int, float, short, byte, char])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (\-1178781136(0xffffffffb9bd3a30, float:\-3.6092242E\-4) ?[int, float, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (\-1039745817(0xffffffffc206bce7, float:\-33.684475) ?[int, float, short, byte, char])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: CONST_STR  (r0 I:java.lang.String) =  \"normal\" \l0x0016: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0032 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: CONST_STR  (r0 I:java.lang.String) =  \"italic\" \l0x0020: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|0x0024: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0032 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|0x0026: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|0x0028: CONST_STR  (r0 I:java.lang.String) =  \"oblique\" \l0x002a: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x002e|0x002e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0032 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0030|0x0030: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|0x0032: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0033|0x0033: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2] t:[0x003e, 0x003b, 0x0038] \l}"];
Node_18 [shape=record,label="{18\:\ 0x0036|0x0036: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x0037|0x0037: RETURN  (r2 I:com.caverock.androidsvg.SVG$Style$FontStyle) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0038|0x0038: SGET  (r2 I:com.caverock.androidsvg.SVG$Style$FontStyle) =  com.caverock.androidsvg.SVG.Style.FontStyle.Oblique com.caverock.androidsvg.SVG$Style$FontStyle \l}"];
Node_21 [shape=record,label="{21\:\ 0x003a|0x003a: RETURN  (r2 I:com.caverock.androidsvg.SVG$Style$FontStyle) \l}"];
Node_22 [shape=record,label="{22\:\ 0x003b|0x003b: SGET  (r2 I:com.caverock.androidsvg.SVG$Style$FontStyle) =  com.caverock.androidsvg.SVG.Style.FontStyle.Normal com.caverock.androidsvg.SVG$Style$FontStyle \l}"];
Node_23 [shape=record,label="{23\:\ 0x003d|0x003d: RETURN  (r2 I:com.caverock.androidsvg.SVG$Style$FontStyle) \l}"];
Node_24 [shape=record,label="{24\:\ 0x003e|0x003e: SGET  (r2 I:com.caverock.androidsvg.SVG$Style$FontStyle) =  com.caverock.androidsvg.SVG.Style.FontStyle.Italic com.caverock.androidsvg.SVG$Style$FontStyle \l}"];
Node_25 [shape=record,label="{25\:\ 0x0040|0x0040: RETURN  (r2 I:com.caverock.androidsvg.SVG$Style$FontStyle) \l}"];
MethodNode[shape=record,label="{private static com.caverock.androidsvg.SVG$Style$FontStyle com.caverock.androidsvg.SVGParser.parseFontStyle((r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_16[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_20;
Node_17 -> Node_22;
Node_17 -> Node_24;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_24 -> Node_25;
}

