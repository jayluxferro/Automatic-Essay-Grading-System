digraph "CFG forcom.caverock.androidsvg.SVGParser.parseAttributesTextPath(Lcom\/caverock\/androidsvg\/SVG$TextPath;Lorg\/xml\/sax\/Attributes;)V" {
subgraph cluster_Region_2118057236 {
label = "R(2:0|(3:3|(1:(1:7)(0))(1:(1:12)(0))|13))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = 0\l}"];
subgraph cluster_LoopRegion_1258281817 {
label = "LOOP:0: (3:3|(1:(1:7)(0))(1:(1:12)(0))|13)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r0 \< r6.getLength()) goto L_0x0007\l}"];
subgraph cluster_Region_1195469994 {
label = "R(3:3|(1:(1:7)(0))(1:(1:12)(0))|13)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|java.lang.String java.lang.String r1 = r6.getValue(r0).trim()\lint r2 = com.caverock.androidsvg.SVGParser.C05871.$SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr[com.caverock.androidsvg.SVGParser.SVGAttr.fromString(r6.getLocalName(r0)).ordinal()]\l}"];
subgraph cluster_IfRegion_1461515293 {
label = "IF [B:4:0x0020] THEN: R(1:(1:7)(0)) ELSE: R(1:(1:12)(0))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0020|if (r2 != 6) goto L_0x0022\l}"];
subgraph cluster_Region_922636381 {
label = "R(1:(1:7)(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_600629656 {
label = "IF [B:6:0x0024] THEN: R(1:7) ELSE: R(0)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0024|if (r2 == 39) goto L_0x0027\l}"];
subgraph cluster_Region_795200595 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0027|r5.startOffset = parseLength(r1)\l}"];
}
subgraph cluster_Region_2012881451 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_1548898763 {
label = "R(1:(1:12)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_641356765 {
label = "IF [B:9:0x0038, B:11:0x0044] THEN: R(1:12) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0038|if (\"\".equals(r6.getURI(r0)) == true) goto L_0x0046\l}"];
Node_11 [shape=record,label="{11\:\ 0x0044|ADDED_TO_REGION\l|if (XLINK_NAMESPACE.equals(r6.getURI(r0)) == true) goto L_0x0046\l}"];
subgraph cluster_Region_469041141 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0046|r5.href = r1\l}"];
}
subgraph cluster_Region_955827001 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_13 [shape=record,label="{13\:\ 0x0048|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:13:0x0048\l|r0++\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:13:0x0048] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:13:0x0048\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0022}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x002e}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x003a}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x004b}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x004b|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0048|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0048|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0048|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0048|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.caverock.androidsvg.SVGParser.parseAttributesTextPath((r4v0 'this' com.caverock.androidsvg.SVGParser A[IMMUTABLE_TYPE, THIS]), (r5v0 com.caverock.androidsvg.SVG$TextPath A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 org.xml.sax.Attributes A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.SVGParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_15[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_19[style=dashed];
Node_7 -> Node_17;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_11 -> Node_12;
Node_11 -> Node_18[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_1;
Node_1 -> Node_2;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_15 -> Node_14;
Node_16 -> Node_13;
Node_17 -> Node_13;
Node_18 -> Node_13;
Node_19 -> Node_13;
}

