digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.MarkerPositionCalculator.close()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector\>) = \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$MarkerPositionCalculator)\l com.caverock.androidsvg.SVGAndroidRenderer.MarkerPositionCalculator.markers java.util.List \l0x0002: IGET  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector) = \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$MarkerPositionCalculator)\l com.caverock.androidsvg.SVGAndroidRenderer.MarkerPositionCalculator.lastPos com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector \l0x0004: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0007: IGET  (r0 I:float) = \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$MarkerPositionCalculator)\l com.caverock.androidsvg.SVGAndroidRenderer.MarkerPositionCalculator.startX float \l0x0009: IGET  (r1 I:float) = \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$MarkerPositionCalculator)\l com.caverock.androidsvg.SVGAndroidRenderer.MarkerPositionCalculator.startY float \l0x000b: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$MarkerPositionCalculator)\l  (r0 I:float)\l  (r1 I:float)\l com.caverock.androidsvg.SVGAndroidRenderer.MarkerPositionCalculator.lineTo(float, float):void type: VIRTUAL \l0x000e: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000f: IPUT  \l  (r0 I:boolean)\l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer$MarkerPositionCalculator)\l com.caverock.androidsvg.SVGAndroidRenderer.MarkerPositionCalculator.closepathReAdjustPending boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.caverock.androidsvg.SVGAndroidRenderer.MarkerPositionCalculator.close((r2 'this' I:com.caverock.androidsvg.SVGAndroidRenderer$MarkerPositionCalculator A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

