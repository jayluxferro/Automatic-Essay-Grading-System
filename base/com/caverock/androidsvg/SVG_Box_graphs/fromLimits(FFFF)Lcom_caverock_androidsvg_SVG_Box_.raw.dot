digraph "CFG forcom.caverock.androidsvg.SVG.Box.fromLimits(FFFF)Lcom\/caverock\/androidsvg\/SVG$Box;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.caverock.androidsvg.SVG$Box) =  com.caverock.androidsvg.SVG$Box \l0x0002: ARITH  (r3 I:float) = (r3 I:float) \- (r1 I:float) \l0x0003: ARITH  (r4 I:float) = (r4 I:float) \- (r2 I:float) \l0x0004: INVOKE  \l  (r0 I:com.caverock.androidsvg.SVG$Box)\l  (r1 I:float)\l  (r2 I:float)\l  (r3 I:float)\l  (r4 I:float)\l com.caverock.androidsvg.SVG.Box.\<init\>(float, float, float, float):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: RETURN  (r0 I:com.caverock.androidsvg.SVG$Box) \l}"];
MethodNode[shape=record,label="{static com.caverock.androidsvg.SVG$Box com.caverock.androidsvg.SVG.Box.fromLimits((r1 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

