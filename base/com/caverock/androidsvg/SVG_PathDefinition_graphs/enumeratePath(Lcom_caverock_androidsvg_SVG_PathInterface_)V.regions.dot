digraph "CFG forcom.caverock.androidsvg.SVG.PathDefinition.enumeratePath(Lcom\/caverock\/androidsvg\/SVG$PathInterface;)V" {
subgraph cluster_Region_1550456502 {
label = "R(2:0|(3:3|(2:5|19)(1:20)|21)) | DECL_VAR: int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = 0\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_640617583 {
label = "LOOP:0: (3:3|(2:5|19)(1:20)|21)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r1 \< r14.commandsLength) goto L_0x0007\l}"];
subgraph cluster_Region_963963828 {
label = "R(3:3|(2:5|19)(1:20)|21)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|byte byte r3 = r14.commands[r1]\l}"];
subgraph cluster_IfRegion_299217615 {
label = "IF [B:4:0x000d] THEN: R(2:5|19) ELSE: R(1:20)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|if (r3 != 8) goto L_0x000f\l}"];
subgraph cluster_Region_1719817239 {
label = "R(2:5|19)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_414137340 {
label = "Switch: 4, default: R(4:7|11|14|25)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|switch(r3) \{\l    case 0: goto L_0x009c;\l    case 1: goto L_0x008c;\l    case 2: goto L_0x0062;\l    case 3: goto L_0x0045;\l    default: goto L_0x0012;\l\}\l}"];
subgraph cluster_Region_1587718996 {
label = "R(2:18|1)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x009c|int int r4 = r2 + 1\lint r5 = r4 + 1\lr15.moveTo(r14.coords[r2], r14.coords[r4])\l}"];
Node_InsnContainer_444248957 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1025406670 {
label = "R(2:17|1)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x008c|int int r4 = r2 + 1\lint r5 = r4 + 1\lr15.lineTo(r14.coords[r2], r14.coords[r4])\l}"];
Node_InsnContainer_1923692519 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1783701975 {
label = "R(2:16|27)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0062|int int r4 = r2 + 1\lfloat r6 = r14.coords[r2]\lint int r3 = r4 + 1\lfloat r7 = r14.coords[r4]\lint int r4 = r3 + 1\lfloat r8 = r14.coords[r3]\lint int r3 = r4 + 1\lfloat r9 = r14.coords[r4]\lint int r4 = r3 + 1\lr15.cubicTo(r6, r7, r8, r9, r14.coords[r3], r14.coords[r4])\lr2 = r4 + 1\l}"];
Node_27 [shape=record,label="{27\:\ 0x00b0|SYNTHETIC\l|continue\l}"];
}
subgraph cluster_Region_876811398 {
label = "R(2:15|26)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0045|int int r4 = r2 + 1\lint int r5 = r4 + 1\lint int r6 = r5 + 1\lr15.quadTo(r14.coords[r2], r14.coords[r4], r14.coords[r5], r14.coords[r6])\lr2 = r6 + 1\l}"];
Node_26 [shape=record,label="{26\:\ 0x00b0|SYNTHETIC\l|continue\l}"];
}
subgraph cluster_Region_720662769 {
label = "R(4:7|11|14|25)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0015|boolean r10 = (r3 & CUBICTO) != 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|boolean r11 = (r3 & LINETO) != 0\l}"];
Node_14 [shape=record,label="{14\:\ 0x0021|PHI: r11 \l  PHI: (r11v1 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r4 = r2 + 1\lfloat r7 = r14.coords[r2]\lint int r3 = r4 + 1\lfloat r8 = r14.coords[r4]\lint int r4 = r3 + 1\lfloat r9 = r14.coords[r3]\lint int r3 = r4 + 1\lr15.arcTo(r7, r8, r9, r10, r11, r14.coords[r4], r14.coords[r3])\lr2 = r3 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x00b0|SYNTHETIC\l|continue\l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x00ab|PHI: r5 \l  PHI: (r5v0 int) = (r5v1 int), (r5v2 int) binds: [B:18:0x009c, B:17:0x008c] A[DONT_GENERATE, DONT_INLINE]\l|r2 = r5\l}"];
}
subgraph cluster_Region_1946473800 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x00ad|r15.close()\l}"];
}
}
Node_21 [shape=record,label="{21\:\ 0x00b0|LOOP_END\lPHI: r2 \l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int), (r2v11 int), (r2v13 int), (r2v18 int) binds: [B:24:0x00b0, B:28:0x00b0, B:27:0x00b0, B:26:0x00b0, B:25:0x00b0] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:21:0x00b0\l|r1++\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0003|LOOP_START\lPHI: r1 r2 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:21:0x00b0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:21:0x00b0] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:21:0x00b0\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0012}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0017}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0019}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001a|PHI: r10 \l  PHI: (r10v1 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x001e}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0020}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x00b4}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x00b4|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x00b0|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x00b0|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void com.caverock.androidsvg.SVG.PathDefinition.enumeratePath((r14v0 'this' com.caverock.androidsvg.SVG$PathDefinition A[IMMUTABLE_TYPE, THIS]), (r15v0 com.caverock.androidsvg.SVG$PathInterface A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_23[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_20[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_15;
Node_5 -> Node_16;
Node_5 -> Node_17;
Node_5 -> Node_18;
Node_18 -> Node_19;
Node_17 -> Node_19;
Node_16 -> Node_27;
Node_27 -> Node_21;
Node_15 -> Node_26;
Node_26 -> Node_21;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_11 -> Node_12;
Node_11 -> Node_13;
Node_14 -> Node_25;
Node_25 -> Node_21;
Node_19 -> Node_28;
Node_20 -> Node_24;
Node_21 -> Node_1;
Node_1 -> Node_2;
Node_6 -> Node_7;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_23 -> Node_22;
Node_24 -> Node_21;
Node_28 -> Node_21;
}

