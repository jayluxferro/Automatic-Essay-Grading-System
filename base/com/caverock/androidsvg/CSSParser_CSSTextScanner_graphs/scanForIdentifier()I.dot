digraph "CFG forcom.caverock.androidsvg.CSSParser.CSSTextScanner.scanForIdentifier()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (empty() == false) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x0008|RETURN\l|return r9.position\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|int r0 = r9.position\lint r1 = r9.position\lchar r2 = r9.input.charAt(r9.position)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|if (r2 != 45) goto L_0x001d\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|int r2 = advanceChar()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|PHI: r2 \l  PHI: (r2v2 int) = (r2v1 int), (r2v5 int) binds: [B:5:0x0017, B:6:0x0019] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|if (r2 \< 65) goto L_0x002b\l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|if (r2 \<= 90) goto L_0x0031\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|if (r2 \< 97) goto L_0x002f\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|if (r2 \<= 122) goto L_0x0031\l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|if (r2 != 95) goto L_0x0052\l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|int r1 = advanceChar()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|LOOP_START\lPHI: r1 \l  PHI: (r1v3 int) = (r1v2 int), (r1v4 int) binds: [B:13:0x0031, B:25:0x004d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:14:0x0035\-\>B:25:0x004d\l|if (r1 \< 65) goto L_0x0039\l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|if (r1 \<= 90) goto L_0x004d\l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|if (r1 \< 97) goto L_0x003d\l}"];
Node_17 [shape=record,label="{17\:\ 0x003b|if (r1 \<= 122) goto L_0x004d\l}"];
Node_18 [shape=record,label="{18\:\ 0x003d}"];
Node_19 [shape=record,label="{19\:\ 0x003f|if (r1 \< 48) goto L_0x0045\l}"];
Node_20 [shape=record,label="{20\:\ 0x0041}"];
Node_21 [shape=record,label="{21\:\ 0x0043|if (r1 \<= 57) goto L_0x004d\l}"];
Node_22 [shape=record,label="{22\:\ 0x0045|if (r1 == 45) goto L_0x004d\l}"];
Node_23 [shape=record,label="{23\:\ 0x0047|if (r1 != 95) goto L_0x004a\l}"];
Node_24 [shape=record,label="{24\:\ 0x004a|int r1 = r9.position\l}"];
Node_25 [shape=record,label="{25\:\ 0x004d|LOOP_END\lLOOP:0: B:14:0x0035\-\>B:25:0x004d\l|int r1 = advanceChar()\l}"];
Node_26 [shape=record,label="{26\:\ 0x0052|PHI: r1 \l  PHI: (r1v1 int) = (r1v5 int), (r1v0 int) binds: [B:24:0x004a, B:12:0x002f] A[DONT_GENERATE, DONT_INLINE]\l|r9.position = r0\l}"];
Node_27 [shape=record,label="{27\:\ 0x0054|RETURN\l|return r1\l}"];
Node_28 [shape=record,label="{28\:\ 0x004a|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x004d|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x004d|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x004d|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x004d|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x004d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int com.caverock.androidsvg.CSSParser.CSSTextScanner.scanForIdentifier((r9v0 'this' com.caverock.androidsvg.CSSParser$CSSTextScanner A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_26;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_29;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_30;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_31;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_32;
Node_23 -> Node_28;
Node_23 -> Node_33[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_14;
Node_26 -> Node_27;
Node_28 -> Node_24;
Node_29 -> Node_25;
Node_30 -> Node_25;
Node_31 -> Node_25;
Node_32 -> Node_25;
Node_33 -> Node_25;
}

