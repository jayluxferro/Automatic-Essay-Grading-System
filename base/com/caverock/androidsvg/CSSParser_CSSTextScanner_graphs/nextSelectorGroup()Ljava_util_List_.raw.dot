digraph "CFG forcom.caverock.androidsvg.CSSParser.CSSTextScanner.nextSelectorGroup()Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r4 I:com.caverock.androidsvg.CSSParser$CSSTextScanner) com.caverock.androidsvg.CSSParser.CSSTextScanner.empty():boolean type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  \l  (r1 I:java.util.List\<com.caverock.androidsvg.CSSParser$Selector\>)\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x000a: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000b: INVOKE  (r0 I:java.util.ArrayList), (r2 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x000e: NEW_INSTANCE  (r2 I:com.caverock.androidsvg.CSSParser$Selector) =  com.caverock.androidsvg.CSSParser$Selector \l0x0010: INVOKE  \l  (r2 I:com.caverock.androidsvg.CSSParser$Selector)\l  (r1 I:com.caverock.androidsvg.CSSParser$1)\l com.caverock.androidsvg.CSSParser.Selector.\<init\>(com.caverock.androidsvg.CSSParser$1):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: INVOKE  (r3 I:boolean) = (r4 I:com.caverock.androidsvg.CSSParser$CSSTextScanner) com.caverock.androidsvg.CSSParser.CSSTextScanner.empty():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002f \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: INVOKE  (r3 I:boolean) = \l  (r4 I:com.caverock.androidsvg.CSSParser$CSSTextScanner)\l  (r2 I:com.caverock.androidsvg.CSSParser$Selector)\l com.caverock.androidsvg.CSSParser.CSSTextScanner.nextSimpleSelector(com.caverock.androidsvg.CSSParser$Selector):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002f \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: INVOKE  (r3 I:boolean) = (r4 I:com.caverock.androidsvg.CSSParser$CSSTextScanner) com.caverock.androidsvg.CSSParser.CSSTextScanner.skipCommaWhitespace():boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0026 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: INVOKE  (r0 I:java.util.ArrayList), (r2 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x0029: NEW_INSTANCE  (r2 I:com.caverock.androidsvg.CSSParser$Selector) =  com.caverock.androidsvg.CSSParser$Selector \l0x002b: INVOKE  \l  (r2 I:com.caverock.androidsvg.CSSParser$Selector)\l  (r1 I:com.caverock.androidsvg.CSSParser$1)\l com.caverock.androidsvg.CSSParser.Selector.\<init\>(com.caverock.androidsvg.CSSParser$1):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: INVOKE  (r1 I:boolean) = (r2 I:com.caverock.androidsvg.CSSParser$Selector) com.caverock.androidsvg.CSSParser.Selector.isEmpty():boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|0x0033: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0038 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|0x0035: INVOKE  (r0 I:java.util.ArrayList), (r2 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|0x0038: RETURN  \l  (r0 I:java.util.List\<com.caverock.androidsvg.CSSParser$Selector\>)\l \l}"];
MethodNode[shape=record,label="{private java.util.List\<com.caverock.androidsvg.CSSParser$Selector\> com.caverock.androidsvg.CSSParser.CSSTextScanner.nextSelectorGroup((r4 'this' I:com.caverock.androidsvg.CSSParser$CSSTextScanner A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.caverock.androidsvg.CSSParseException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/List\<, Lcom\/caverock\/androidsvg\/CSSParser$Selector;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_4[style=dashed];
Node_11 -> Node_4;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
}

