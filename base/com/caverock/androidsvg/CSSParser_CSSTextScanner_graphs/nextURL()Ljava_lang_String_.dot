digraph "CFG forcom.caverock.androidsvg.CSSParser.CSSTextScanner.nextURL()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (empty() == false) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|int r0 = r4.position\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|if (consume(\"url(\") != false) goto L_0x0013\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|RETURN\l|return null\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|skipWhitespace()\ljava.lang.String r2 = nextCSSString()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|if (r2 != null) goto L_0x0020\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|java.lang.String r2 = nextLegacyURL()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|PHI: r2 \l  PHI: (r2v3 java.lang.String) = (r2v2 java.lang.String), (r2v4 java.lang.String) binds: [B:7:0x001a, B:8:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 != null) goto L_0x0025\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|r4.position = r0\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|RETURN\l|return null\l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|skipWhitespace()\l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|if (empty() != false) goto L_0x003a\l}"];
Node_14 [shape=record,label="{14\:\ 0x002e}"];
Node_15 [shape=record,label="{15\:\ 0x0034|if (consume(\")\") == false) goto L_0x0037\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|r4.position = r0\l}"];
Node_17 [shape=record,label="{17\:\ 0x0039|RETURN\l|return null\l}"];
Node_18 [shape=record,label="{18\:\ 0x003a|RETURN\l|return r2\l}"];
MethodNode[shape=record,label="{java.lang.String com.caverock.androidsvg.CSSParser.CSSTextScanner.nextURL((r4v0 'this' com.caverock.androidsvg.CSSParser$CSSTextScanner A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_18[style=dashed];
Node_16 -> Node_17;
}

