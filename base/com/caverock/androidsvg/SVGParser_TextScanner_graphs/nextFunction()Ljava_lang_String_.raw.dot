digraph "CFG forcom.caverock.androidsvg.SVGParser.TextScanner.nextFunction()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r5 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.empty():boolean type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r1 I:java.lang.String) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:int) = (r5 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x000a: IGET  (r2 I:java.lang.String) = (r5 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.input java.lang.String \l0x000c: IGET  (r3 I:int) = (r5 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x000e: INVOKE  (r2 I:char) = (r2 I:java.lang.String), (r3 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: CONST  (r3 I:?[int, float, short, byte, char]) = (97 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r2 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:8:0x001a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (122(0x7a, float:1.71E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IF  (r2 I:?[int, byte, short, char]) \<= (r3 I:?[int, byte, short, char])  \-\> B:12:0x0022 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: CONST  (r3 I:?[int, float, short, byte, char]) = (65 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IF  (r2 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:13:0x0027 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: CONST  (r3 I:?[int, float, short, byte, char]) = (90 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: IF  (r2 I:?[int, byte, short, char]) \> (r3 I:?[int, byte, short, char])  \-\> B:13:0x0027 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: INVOKE  (r2 I:int) = (r5 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.advanceChar():int type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|0x0027: IGET  (r3 I:int) = (r5 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|0x0029: INVOKE  (r4 I:boolean) = \l  (r5 I:com.caverock.androidsvg.SVGParser$TextScanner)\l  (r2 I:int)\l com.caverock.androidsvg.SVGParser.TextScanner.isWhitespace(int):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|0x002d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0034 \l}"];
Node_16 [shape=record,label="{16\:\ 0x002f|0x002f: INVOKE  (r2 I:int) = (r5 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.advanceChar():int type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0034|0x0034: CONST  (r4 I:?[int, float, short, byte, char]) = (40 ?[int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0036|0x0036: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0045 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0038|0x0038: IGET  (r1 I:int) = (r5 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x003a: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x003c: IPUT  \l  (r1 I:int)\l  (r5 I:com.caverock.androidsvg.SVGParser$TextScanner)\l com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x003e: IGET  (r1 I:java.lang.String) = (r5 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.input java.lang.String \l0x0040: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.String), (r0 I:int), (r3 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0044|0x0044: RETURN  (r0 I:java.lang.String) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0045|0x0045: IPUT  \l  (r0 I:int)\l  (r5 I:com.caverock.androidsvg.SVGParser$TextScanner)\l com.caverock.androidsvg.SVGParser.TextScanner.position int \l}"];
Node_22 [shape=record,label="{22\:\ 0x0047|0x0047: RETURN  (r1 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{java.lang.String com.caverock.androidsvg.SVGParser.TextScanner.nextFunction((r5 'this' I:com.caverock.androidsvg.SVGParser$TextScanner A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_4;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_14;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_21 -> Node_22;
}

