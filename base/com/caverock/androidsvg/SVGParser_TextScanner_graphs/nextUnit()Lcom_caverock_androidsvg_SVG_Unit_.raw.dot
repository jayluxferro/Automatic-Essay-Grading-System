digraph "CFG forcom.caverock.androidsvg.SVGParser.TextScanner.nextUnit()Lcom\/caverock\/androidsvg\/SVG$Unit;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.empty():boolean type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r1 I:com.caverock.androidsvg.SVG$Unit) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:java.lang.String) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.input java.lang.String \l0x000a: IGET  (r2 I:int) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x000c: INVOKE  (r0 I:char) = (r0 I:java.lang.String), (r2 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x0010: CONST  (r2 I:?[int, float, short, byte, char]) = (37 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IGET  (r0 I:int) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x0016: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0018: IPUT  \l  (r0 I:int)\l  (r4 I:com.caverock.androidsvg.SVGParser$TextScanner)\l com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x001a: SGET  (r0 I:com.caverock.androidsvg.SVG$Unit) =  com.caverock.androidsvg.SVG.Unit.percent com.caverock.androidsvg.SVG$Unit \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: RETURN  (r0 I:com.caverock.androidsvg.SVG$Unit) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IGET  (r0 I:int) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x001f: IGET  (r2 I:int) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.inputLength int \l0x0021: ARITH  (r2 I:int) = (r2 I:int) + (\-2 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: IF  (r0 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:10:0x0026 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: RETURN  (r1 I:com.caverock.androidsvg.SVG$Unit) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|SYNTHETIC\lSplitter:B:10:0x0026\l}"];
Node_11 [shape=record,label="{11\:\ ?|Splitter:B:10:0x0026\l|0x0026: IGET  (r0 I:java.lang.String) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.input java.lang.String A[Catch:\{ IllegalArgumentException \-\> 0x0043 \}, TRY_ENTER]\l0x0028: IGET  (r2 I:int) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int A[Catch:\{ IllegalArgumentException \-\> 0x0043 \}]\l0x002a: IGET  (r3 I:int) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int A[Catch:\{ IllegalArgumentException \-\> 0x0043 \}]\l0x002c: ARITH  (r3 I:int) = (r3 I:int) + (2 int) A[Catch:\{ IllegalArgumentException \-\> 0x0043 \}]\l0x002e: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String), (r2 I:int), (r3 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL A[Catch:\{ IllegalArgumentException \-\> 0x0043 \}]\l0x0032: SGET  (r2 I:java.util.Locale) =  java.util.Locale.US java.util.Locale A[Catch:\{ IllegalArgumentException \-\> 0x0043 \}]\l0x0034: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String), (r2 I:java.util.Locale) java.lang.String.toLowerCase(java.util.Locale):java.lang.String type: VIRTUAL A[Catch:\{ IllegalArgumentException \-\> 0x0043 \}]\l0x0038: INVOKE  (r0 I:com.caverock.androidsvg.SVG$Unit) = (r0 I:java.lang.String) com.caverock.androidsvg.SVG.Unit.valueOf(java.lang.String):com.caverock.androidsvg.SVG$Unit type: STATIC A[Catch:\{ IllegalArgumentException \-\> 0x0043 \}]\l0x003c: IGET  (r2 I:int) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int A[Catch:\{ IllegalArgumentException \-\> 0x0043 \}]\l0x003e: ARITH  (r2 I:int) = (r2 I:int) + (2 int) A[Catch:\{ IllegalArgumentException \-\> 0x0043 \}]\l0x0040: IPUT  \l  (r2 I:int)\l  (r4 I:com.caverock.androidsvg.SVGParser$TextScanner)\l com.caverock.androidsvg.SVGParser.TextScanner.position int A[Catch:\{ IllegalArgumentException \-\> 0x0043 \}, TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0042|0x0042: RETURN  (r0 I:com.caverock.androidsvg.SVG$Unit) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|0x0043: RETURN  (r1 I:com.caverock.androidsvg.SVG$Unit) \l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lExcHandler: IllegalArgumentException null\lSplitter:B:10:0x0026\l}"];
MethodNode[shape=record,label="{com.caverock.androidsvg.SVG$Unit com.caverock.androidsvg.SVGParser.TextScanner.nextUnit((r4 'this' I:com.caverock.androidsvg.SVGParser$TextScanner A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_11 -> Node_14;
Node_14 -> Node_13;
}

