digraph "CFG forcom.caverock.androidsvg.SVGParser.TextScanner.\<init\>(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: IPUT  \l  (r0 I:int)\l  (r1 I:com.caverock.androidsvg.SVGParser$TextScanner)\l com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x0006: IPUT  \l  (r0 I:int)\l  (r1 I:com.caverock.androidsvg.SVGParser$TextScanner)\l com.caverock.androidsvg.SVGParser.TextScanner.inputLength int \l0x0008: NEW_INSTANCE  (r0 I:com.caverock.androidsvg.NumberParser) =  com.caverock.androidsvg.NumberParser \l0x000a: INVOKE  (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.\<init\>():void type: DIRECT \l0x000d: IPUT  \l  (r0 I:com.caverock.androidsvg.NumberParser)\l  (r1 I:com.caverock.androidsvg.SVGParser$TextScanner)\l com.caverock.androidsvg.SVGParser.TextScanner.numberParser com.caverock.androidsvg.NumberParser \l0x000f: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String) java.lang.String.trim():java.lang.String type: VIRTUAL \l0x0013: IPUT  \l  (r2 I:java.lang.String)\l  (r1 I:com.caverock.androidsvg.SVGParser$TextScanner)\l com.caverock.androidsvg.SVGParser.TextScanner.input java.lang.String \l0x0015: IGET  (r2 I:java.lang.String) = (r1 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.input java.lang.String \l0x0017: INVOKE  (r2 I:int) = (r2 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x001b: IPUT  \l  (r2 I:int)\l  (r1 I:com.caverock.androidsvg.SVGParser$TextScanner)\l com.caverock.androidsvg.SVGParser.TextScanner.inputLength int \l}"];
Node_1 [shape=record,label="{1\:\ 0x001d|0x001d: RETURN   \l}"];
MethodNode[shape=record,label="{void com.caverock.androidsvg.SVGParser.TextScanner.\<init\>((r1 'this' I:com.caverock.androidsvg.SVGParser$TextScanner A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

