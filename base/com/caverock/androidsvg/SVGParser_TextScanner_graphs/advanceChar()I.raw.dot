digraph "CFG forcom.caverock.androidsvg.SVGParser.TextScanner.advanceChar()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r3 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x0002: IGET  (r1 I:int) = (r3 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.inputLength int \l0x0004: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r2 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:int) = (r3 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x000a: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x000c: IPUT  \l  (r0 I:int)\l  (r3 I:com.caverock.androidsvg.SVGParser$TextScanner)\l com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x000e: IGET  (r0 I:int) = (r3 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x0010: IGET  (r1 I:int) = (r3 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.inputLength int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:7:0x001d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IGET  (r0 I:java.lang.String) = (r3 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.input java.lang.String \l0x0016: IGET  (r1 I:int) = (r3 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x0018: INVOKE  (r0 I:char) = (r0 I:java.lang.String), (r1 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: RETURN  (r0 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{int com.caverock.androidsvg.SVGParser.TextScanner.advanceChar((r3 'this' I:com.caverock.androidsvg.SVGParser$TextScanner A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
}

