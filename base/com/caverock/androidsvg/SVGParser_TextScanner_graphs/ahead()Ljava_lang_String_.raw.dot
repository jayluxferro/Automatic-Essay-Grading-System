digraph "CFG forcom.caverock.androidsvg.SVGParser.TextScanner.ahead()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r3 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r1 I:boolean) = (r3 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.empty():boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001d \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r1 I:java.lang.String) = (r3 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.input java.lang.String \l0x000a: IGET  (r2 I:int) = (r3 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x000c: INVOKE  (r1 I:char) = (r1 I:java.lang.String), (r2 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x0010: INVOKE  (r1 I:boolean) = \l  (r3 I:com.caverock.androidsvg.SVGParser$TextScanner)\l  (r1 I:int)\l com.caverock.androidsvg.SVGParser.TextScanner.isWhitespace(int):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IGET  (r1 I:int) = (r3 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x0018: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x001a: IPUT  \l  (r1 I:int)\l  (r3 I:com.caverock.androidsvg.SVGParser$TextScanner)\l com.caverock.androidsvg.SVGParser.TextScanner.position int \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: IGET  (r1 I:java.lang.String) = (r3 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.input java.lang.String \l0x001f: IGET  (r2 I:int) = (r3 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x0021: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.String), (r0 I:int), (r2 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x0025: IPUT  \l  (r0 I:int)\l  (r3 I:com.caverock.androidsvg.SVGParser$TextScanner)\l com.caverock.androidsvg.SVGParser.TextScanner.position int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: RETURN  (r1 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{java.lang.String com.caverock.androidsvg.SVGParser.TextScanner.ahead((r3 'this' I:com.caverock.androidsvg.SVGParser$TextScanner A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_1;
Node_6 -> Node_7;
}

