digraph "CFG forcom.caverock.androidsvg.SVGParser.TextScanner.possibleNextFloat()F" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.skipCommaWhitespace():boolean type: VIRTUAL \l0x0003: IGET  (r0 I:com.caverock.androidsvg.NumberParser) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.numberParser com.caverock.androidsvg.NumberParser \l0x0005: IGET  (r1 I:java.lang.String) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.input java.lang.String \l0x0007: IGET  (r2 I:int) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x0009: IGET  (r3 I:int) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.inputLength int \l0x000b: INVOKE  (r0 I:float) = \l  (r0 I:com.caverock.androidsvg.NumberParser)\l  (r1 I:java.lang.String)\l  (r2 I:int)\l  (r3 I:int)\l com.caverock.androidsvg.NumberParser.parseNumber(java.lang.String, int, int):float type: VIRTUAL \l0x000f: INVOKE  (r1 I:boolean) = (r0 I:float) java.lang.Float.isNaN(float):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: IGET  (r1 I:com.caverock.androidsvg.NumberParser) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.numberParser com.caverock.androidsvg.NumberParser \l0x0017: INVOKE  (r1 I:int) = (r1 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.getEndPos():int type: VIRTUAL \l0x001b: IPUT  \l  (r1 I:int)\l  (r4 I:com.caverock.androidsvg.SVGParser$TextScanner)\l com.caverock.androidsvg.SVGParser.TextScanner.position int \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: RETURN  (r0 I:float) \l}"];
MethodNode[shape=record,label="{float com.caverock.androidsvg.SVGParser.TextScanner.possibleNextFloat((r4 'this' I:com.caverock.androidsvg.SVGParser$TextScanner A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

