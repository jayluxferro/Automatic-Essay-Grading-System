digraph "CFG forcom.caverock.androidsvg.SVGParser.TextScanner.checkedNextFloat(Ljava\/lang\/Boolean;)F" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (2143289344(0x7fc00000, float:NaN) ?[int, float, short, byte, char])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN  (r1 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: INVOKE  (r0 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.skipCommaWhitespace():boolean type: VIRTUAL \l0x0008: INVOKE  (r1 I:float) = (r0 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.nextFloat():float type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: RETURN  (r1 I:float) \l}"];
MethodNode[shape=record,label="{float com.caverock.androidsvg.SVGParser.TextScanner.checkedNextFloat((r0 'this' I:com.caverock.androidsvg.SVGParser$TextScanner A[IMMUTABLE_TYPE, THIS]), (r1 I:java.lang.Boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

