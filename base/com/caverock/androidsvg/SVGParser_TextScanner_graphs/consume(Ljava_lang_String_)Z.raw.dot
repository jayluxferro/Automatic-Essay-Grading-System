digraph "CFG forcom.caverock.androidsvg.SVGParser.TextScanner.consume(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r5 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0004: IGET  (r1 I:int) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x0006: IGET  (r2 I:int) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.inputLength int \l0x0008: ARITH  (r2 I:int) = (r2 I:int) \- (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r1 I:?[int, byte, short, char]) \> (r2 I:?[int, byte, short, char])  \-\> B:5:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IGET  (r1 I:java.lang.String) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.input java.lang.String \l0x000d: IGET  (r2 I:int) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x000f: IGET  (r3 I:int) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x0011: ARITH  (r3 I:int) = (r3 I:int) + (r0 I:int) \l0x0012: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.String), (r2 I:int), (r3 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x0016: INVOKE  (r5 I:boolean) = (r1 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001e \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0026 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: IGET  (r1 I:int) = (r4 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x0023: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x0024: IPUT  \l  (r1 I:int)\l  (r4 I:com.caverock.androidsvg.SVGParser$TextScanner)\l com.caverock.androidsvg.SVGParser.TextScanner.position int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: RETURN  (r5 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean com.caverock.androidsvg.SVGParser.TextScanner.consume((r4 'this' I:com.caverock.androidsvg.SVGParser$TextScanner A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
}

