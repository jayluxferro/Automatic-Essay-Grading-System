digraph "CFG forcom.caverock.androidsvg.SVGParser.TextScanner.nextQuotedString()Ljava\/lang\/String;" {
subgraph cluster_Region_1584277383 {
label = "R(1:(2:(1:2)|(2:3|(2:(1:7)|(3:8|(1:12)|(2:(2:14|15)|(2:16|17)))))))";
node [shape=record,color=blue];
subgraph cluster_Region_38187540 {
label = "R(2:(1:2)|(2:3|(2:(1:7)|(3:8|(1:12)|(2:(2:14|15)|(2:16|17))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_957369725 {
label = "IF [B:1:0x0005] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (empty() == true) goto L_0x0007\l}"];
subgraph cluster_Region_1201861301 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1700214744 {
label = "R(2:3|(2:(1:7)|(3:8|(1:12)|(2:(2:14|15)|(2:16|17)))))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|int int r0 = r5.position\lchar char r2 = r5.input.charAt(r5.position)\l}"];
subgraph cluster_Region_1751099353 {
label = "R(2:(1:7)|(3:8|(1:12)|(2:(2:14|15)|(2:16|17))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1124948098 {
label = "IF [B:4:0x0014, B:6:0x0018] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0014|if (r2 != ''') goto L_0x0016\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|ADDED_TO_REGION\l|if (r2 != '\"') goto L_0x001a\l}"];
subgraph cluster_Region_1606315732 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001a|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_523787980 {
label = "R(3:8|(1:12)|(2:(2:14|15)|(2:16|17)))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001b|int int r3 = advanceChar()\l}"];
subgraph cluster_LoopRegion_915843462 {
label = "LOOP:0: (1:12)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0020|if (r3 != \-1) goto L_0x0022\l}"];
subgraph cluster_Region_995697073 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0024|LOOP_END\lLOOP:0: B:9:0x001f\-\>B:12:0x0024\l|int r3 = advanceChar()\l}"];
}
}
subgraph cluster_Region_1694415867 {
label = "R(2:(2:14|15)|(2:16|17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_536231582 {
label = "IF [B:13:0x0029] THEN: R(2:14|15) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0029|if (r3 == \-1) goto L_0x002b\l}"];
subgraph cluster_Region_1699226019 {
label = "R(2:14|15)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002b|r5.position = r0\l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_2137933201 {
label = "R(2:16|17)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x002e|r5.position++\l}"];
Node_17 [shape=record,label="{17\:\ 0x0040|RETURN\l|return r5.input.substring(r0 + 1, r5.position \- 1)\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0016}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001f|LOOP_START\lPHI: r3 \l  PHI: (r3v3 int) = (r3v2 int), (r3v4 int) binds: [B:8:0x001b, B:12:0x0024] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:9:0x001f\-\>B:12:0x0024\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0022|ADDED_TO_REGION\l|if (r3 != r2) goto L_0x0024\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0029|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0029|SYNTHETIC\l}"];
MethodNode[shape=record,label="{java.lang.String com.caverock.androidsvg.SVGParser.TextScanner.nextQuotedString((r5v0 'this' com.caverock.androidsvg.SVGParser$TextScanner A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_18[style=dashed];
Node_12 -> Node_9;
Node_13 -> Node_14;
Node_13 -> Node_16[style=dashed];
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_0 -> Node_1;
Node_5 -> Node_6;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_11 -> Node_19[style=dashed];
Node_18 -> Node_13;
Node_19 -> Node_13;
}

