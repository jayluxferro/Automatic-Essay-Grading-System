digraph "CFG forcom.caverock.androidsvg.SVGParser.TextScanner.nextWord()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r7 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.empty():boolean type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r1 I:java.lang.String) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:int) = (r7 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x000a: IGET  (r2 I:java.lang.String) = (r7 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.input java.lang.String \l0x000c: IGET  (r3 I:int) = (r7 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x000e: INVOKE  (r2 I:char) = (r2 I:java.lang.String), (r3 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x0012: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (122(0x7a, float:1.71E\-43) ?[int, float, short, byte, char])\l \l0x0014: CONST  (r4 I:?[int, float, short, byte, char]) = (97 ?[int, float, short, byte, char]) \l0x0016: CONST  (r5 I:?[int, float, short, byte, char]) = (90 ?[int, float, short, byte, char]) \l0x0018: CONST  (r6 I:?[int, float, short, byte, char]) = (65 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: IF  (r2 I:?[int, byte, short, char]) \< (r6 I:?[int, byte, short, char])  \-\> B:6:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: IF  (r2 I:?[int, byte, short, char]) \<= (r5 I:?[int, byte, short, char])  \-\> B:8:0x0022 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IF  (r2 I:?[int, byte, short, char]) \< (r4 I:?[int, byte, short, char])  \-\> B:16:0x003c \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: IF  (r2 I:?[int, byte, short, char]) \> (r3 I:?[int, byte, short, char])  \-\> B:16:0x003c \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: INVOKE  (r1 I:int) = (r7 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.advanceChar():int type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: IF  (r1 I:?[int, byte, short, char]) \< (r6 I:?[int, byte, short, char])  \-\> B:11:0x002a \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: IF  (r1 I:?[int, byte, short, char]) \<= (r5 I:?[int, byte, short, char])  \-\> B:13:0x002e \l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: IF  (r1 I:?[int, byte, short, char]) \< (r4 I:?[int, byte, short, char])  \-\> B:14:0x0033 \l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|0x002c: IF  (r1 I:?[int, byte, short, char]) \> (r3 I:?[int, byte, short, char])  \-\> B:14:0x0033 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|0x002e: INVOKE  (r1 I:int) = (r7 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.advanceChar():int type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: IGET  (r1 I:java.lang.String) = (r7 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.input java.lang.String \l0x0035: IGET  (r2 I:int) = (r7 I:com.caverock.androidsvg.SVGParser$TextScanner) com.caverock.androidsvg.SVGParser.TextScanner.position int \l0x0037: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.String), (r0 I:int), (r2 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x003b|0x003b: RETURN  (r0 I:java.lang.String) \l}"];
Node_16 [shape=record,label="{16\:\ 0x003c|0x003c: IPUT  \l  (r0 I:int)\l  (r7 I:com.caverock.androidsvg.SVGParser$TextScanner)\l com.caverock.androidsvg.SVGParser.TextScanner.position int \l}"];
Node_17 [shape=record,label="{17\:\ 0x003e|0x003e: RETURN  (r1 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{java.lang.String com.caverock.androidsvg.SVGParser.TextScanner.nextWord((r7 'this' I:com.caverock.androidsvg.SVGParser$TextScanner A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_16;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_16;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

