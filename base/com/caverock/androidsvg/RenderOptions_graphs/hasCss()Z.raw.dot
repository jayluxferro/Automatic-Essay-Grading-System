digraph "CFG forcom.caverock.androidsvg.RenderOptions.hasCss()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.caverock.androidsvg.CSSParser$Ruleset) = (r1 I:com.caverock.androidsvg.RenderOptions) com.caverock.androidsvg.RenderOptions.css com.caverock.androidsvg.CSSParser$Ruleset \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:com.caverock.androidsvg.CSSParser$Ruleset) = (r1 I:com.caverock.androidsvg.RenderOptions) com.caverock.androidsvg.RenderOptions.css com.caverock.androidsvg.CSSParser$Ruleset \l0x0006: INVOKE  (r0 I:int) = (r0 I:com.caverock.androidsvg.CSSParser$Ruleset) com.caverock.androidsvg.CSSParser.Ruleset.ruleCount():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:5:0x000e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.caverock.androidsvg.RenderOptions.hasCss((r1 'this' I:com.caverock.androidsvg.RenderOptions A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
}

