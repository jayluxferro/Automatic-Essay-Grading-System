digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.PlainTextToPath.doTextContainer(Lcom\/caverock\/androidsvg\/SVG$TextContainer;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r3 instanceof com.caverock.androidsvg.SVG.TextPath) == false) goto L_0x000d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|com.caverock.androidsvg.SVGAndroidRenderer.access$800(\"Using \<textPath\> elements in a clip path is not supported.\", new java.lang.Object[0])\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|RETURN\l|return false\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|RETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean com.caverock.androidsvg.SVGAndroidRenderer.PlainTextToPath.doTextContainer((r2v0 'this' com.caverock.androidsvg.SVGAndroidRenderer$PlainTextToPath A[IMMUTABLE_TYPE, THIS]), (r3v0 com.caverock.androidsvg.SVG$TextContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

