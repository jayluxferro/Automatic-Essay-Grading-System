digraph "CFG forcom.caverock.androidsvg.NumberParser.parseNumber(Ljava\/lang\/String;II)F" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0004: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: IPUT  (r2 I:int), (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x000a: IGET  (r2 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x000c: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (2143289344(0x7fc00000, float:NaN) ?[int, float, short, byte, char])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r2 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:3:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: RETURN  (r4 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IGET  (r2 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x0013: INVOKE  (r2 I:char) = (r1 I:java.lang.String), (r2 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x0017: CONST  (r5 I:?[int, float, short, byte, char]) = (45 ?[int, float, short, byte, char]) \l0x0019: CONST  (r6 I:?[int, float, short, byte, char]) = (43 ?[int, float, short, byte, char]) \l0x001b: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0024 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0022 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: IGET  (r9 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x0027: ARITH  (r9 I:int) = (r9 I:int) + (r8 I:int) \l0x0028: IPUT  (r9 I:int), (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: IGET  (r9 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x002c: CONST  (r10 I:?[long, double]) = (0 ?[long, double]) \l0x002e: MOVE  (r17 I:?[long, double]) = (r10 I:?[long, double]) \l0x0030: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0031: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0032: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0033: CONST  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0034: CONST  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|0x0036: IGET  (r7 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x0038: CONST  (r5 I:?[int, float, short, byte, char]) = (57 ?[int, float, short, byte, char]) \l0x003a: CONST  (r6 I:?[int, float, short, byte, char]) = (48 ?[int, float, short, byte, char]) \l0x003c: CONST  (r19 I:?[long, double]) = \l  (922337203685477580(0xccccccccccccccc, double:5.1488004017107686E\-247) ?[long, double])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|0x0041: IF  (r7 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:40:0x0091 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|0x0043: IGET  (r7 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x0045: INVOKE  (r7 I:char) = (r1 I:java.lang.String), (r7 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0049|0x0049: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0053 \l}"];
Node_15 [shape=record,label="{15\:\ 0x004b|0x004b: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0050 \l}"];
Node_16 [shape=record,label="{16\:\ 0x004d|0x004d: ARITH  (r13 I:int) = (r13 I:int) + (1 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0050|0x0050: ARITH  (r14 I:int) = (r14 I:int) + (1 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|0x0053: CONST  (r6 I:?[int, float, short, byte, char]) = (49 ?[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0055|0x0055: IF  (r7 I:?[int, byte, short, char]) \< (r6 I:?[int, byte, short, char])  \-\> B:34:0x007a \l}"];
Node_20 [shape=record,label="{20\:\ 0x0057|0x0057: IF  (r7 I:?[int, byte, short, char]) \> (r5 I:?[int, byte, short, char])  \-\> B:34:0x007a \l}"];
Node_21 [shape=record,label="{21\:\ 0x0059|0x0059: ARITH  (r12 I:int) = (r12 I:int) + (r14 I:int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x005a|0x005a: CONST  (r5 I:?[long, double]) = (10 ?[long, double]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x005c|0x005c: IF  (r14 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:28:0x0068 \l}"];
Node_24 [shape=record,label="{24\:\ 0x005e|0x005e: CMP_L  (r21 I:int) = (r17 I:long), (r19 I:long) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0060|0x0060: IF  (r21 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:27:0x0063 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0062|0x0062: RETURN  (r4 I:float) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0063|0x0063: ARITH  (r17 I:long) = (r17 I:long) * (r5 I:long) \l0x0065: ARITH  (r14 I:int) = (r14 I:int) + (\-1 int) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0068|0x0068: CMP_L  (r19 I:int) = (r17 I:long), (r19 I:long) \l}"];
Node_29 [shape=record,label="{29\:\ 0x006a|0x006a: IF  (r19 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:31:0x006d \l}"];
Node_30 [shape=record,label="{30\:\ 0x006c|0x006c: RETURN  (r4 I:float) \l}"];
Node_31 [shape=record,label="{31\:\ 0x006d|0x006d: ARITH  (r17 I:long) = (r17 I:long) * (r5 I:long) \l0x006f: ARITH  (r7 I:int) = (r7 I:int) + (\-48 int) \l0x0071: CAST  (r5 I:long) = (long) (r7 I:int) \l0x0072: ARITH  (r17 I:long) = (r17 I:long) + (r5 I:long) \l0x0074: ARITH  (r12 I:int) = (r12 I:int) + (r8 I:int) \l0x0075: CMP_L  (r5 I:int) = (r17 I:long), (r10 I:long) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0077|0x0077: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:39:0x0087 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0079|0x0079: RETURN  (r4 I:float) \l}"];
Node_34 [shape=record,label="{34\:\ 0x007a|0x007a: CONST  (r6 I:?[int, float, short, byte, char]) = (46 ?[int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x007c|0x007c: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0091 \l}"];
Node_36 [shape=record,label="{36\:\ 0x007e|0x007e: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0081 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0081|0x0081: IGET  (r5 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x0083: ARITH  (r5 I:int) = (r5 I:int) \- (r9 I:int) \l0x0084: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0086: CONST  (r15 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0087|0x0087: IGET  (r5 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x0089: ARITH  (r5 I:int) = (r5 I:int) + (r8 I:int) \l0x008a: IPUT  (r5 I:int), (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x008c: CONST  (r5 I:?[int, float, short, byte, char]) = (45 ?[int, float, short, byte, char]) \l0x008e: CONST  (r6 I:?[int, float, short, byte, char]) = (43 ?[int, float, short, byte, char]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0091|0x0091: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x009a \l}"];
Node_41 [shape=record,label="{41\:\ 0x0093|0x0093: IGET  (r6 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x0095: ARITH  (r7 I:int) = (r16 I:int) + (1 int) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0097|0x0097: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x009a \l}"];
Node_43 [shape=record,label="{43\:\ 0x0099|0x0099: RETURN  (r4 I:float) \l}"];
Node_44 [shape=record,label="{44\:\ 0x009a|0x009a: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x00a0 \l}"];
Node_45 [shape=record,label="{45\:\ 0x009c|0x009c: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x009f \l}"];
Node_46 [shape=record,label="{46\:\ 0x009e|0x009e: RETURN  (r4 I:float) \l}"];
Node_47 [shape=record,label="{47\:\ 0x009f|0x009f: CONST  (r12 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x00a0|0x00a0: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x00a6 \l}"];
Node_49 [shape=record,label="{49\:\ 0x00a2|0x00a2: ARITH  (r16 I:int) = (r16 I:int) \- (r13 I:int) \l0x00a4: ARITH  (r14 I:int) = (r16 I:int) \- (r12 I:int) \l}"];
Node_50 [shape=record,label="{50\:\ 0x00a6|0x00a6: IGET  (r6 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l}"];
Node_51 [shape=record,label="{51\:\ 0x00a8|0x00a8: IF  (r6 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:87:0x0118 \l}"];
Node_52 [shape=record,label="{52\:\ 0x00aa|0x00aa: IGET  (r6 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x00ac: INVOKE  (r6 I:char) = (r1 I:java.lang.String), (r6 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x00b0: CONST  (r7 I:?[int, float, short, byte, char]) = (69 ?[int, float, short, byte, char]) \l}"];
Node_53 [shape=record,label="{53\:\ 0x00b2|0x00b2: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x00b8 \l}"];
Node_54 [shape=record,label="{54\:\ 0x00b4|0x00b4: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (101(0x65, float:1.42E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_55 [shape=record,label="{55\:\ 0x00b6|0x00b6: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:87:0x0118 \l}"];
Node_56 [shape=record,label="{56\:\ 0x00b8|0x00b8: IGET  (r6 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x00ba: ARITH  (r6 I:int) = (r6 I:int) + (r8 I:int) \l0x00bb: IPUT  (r6 I:int), (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x00bd: IGET  (r6 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l}"];
Node_57 [shape=record,label="{57\:\ 0x00bf|0x00bf: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x00c2 \l}"];
Node_58 [shape=record,label="{58\:\ 0x00c1|0x00c1: RETURN  (r4 I:float) \l}"];
Node_59 [shape=record,label="{59\:\ 0x00c2|0x00c2: IGET  (r6 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x00c4: INVOKE  (r6 I:char) = (r1 I:java.lang.String), (r6 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x00c8: CONST  (r7 I:?[int, float, short, byte, char]) = (43 ?[int, float, short, byte, char]) \l}"];
Node_60 [shape=record,label="{60\:\ 0x00ca|0x00ca: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x00df \l}"];
Node_61 [shape=record,label="{61\:\ 0x00cc|0x00cc: CONST  (r7 I:?[int, float, short, byte, char]) = (45 ?[int, float, short, byte, char]) \l}"];
Node_62 [shape=record,label="{62\:\ 0x00ce|0x00ce: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x00dd \l}"];
Node_63 [shape=record,label="{63\:\ 0x00d0|0x00d0: SWITCH  \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[48, 49, 50, 51, 52, 53, 54, 55, 56, 57] t:[0x00db, 0x00db, 0x00db, 0x00db, 0x00db, 0x00db, 0x00db, 0x00db, 0x00db, 0x00db] \l}"];
Node_64 [shape=record,label="{64\:\ 0x00d3|0x00d3: IGET  (r6 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x00d5: ARITH  (r6 I:int) = (r6 I:int) \- (r8 I:int) \l0x00d6: IPUT  (r6 I:int), (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x00d8: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_65 [shape=record,label="{65\:\ 0x00d9|0x00d9: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_66 [shape=record,label="{66\:\ 0x00db|0x00db: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_67 [shape=record,label="{67\:\ 0x00dd|0x00dd: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_68 [shape=record,label="{68\:\ 0x00df|0x00df: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_69 [shape=record,label="{69\:\ 0x00e0|0x00e0: IGET  (r6 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x00e2: ARITH  (r6 I:int) = (r6 I:int) + (r8 I:int) \l0x00e3: IPUT  (r6 I:int), (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x00e5: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_70 [shape=record,label="{70\:\ 0x00e6|0x00e6: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:87:0x0118 \l}"];
Node_71 [shape=record,label="{71\:\ 0x00e8|0x00e8: IGET  (r6 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x00ea: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_72 [shape=record,label="{72\:\ 0x00eb|0x00eb: IGET  (r13 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l}"];
Node_73 [shape=record,label="{73\:\ 0x00ed|0x00ed: IF  (r13 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:81:0x010e \l}"];
Node_74 [shape=record,label="{74\:\ 0x00ef|0x00ef: IGET  (r13 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x00f1: INVOKE  (r13 I:char) = (r1 I:java.lang.String), (r13 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x00f5: CONST  (r15 I:?[int, float, short, byte, char]) = (48 ?[int, float, short, byte, char]) \l}"];
Node_75 [shape=record,label="{75\:\ 0x00f7|0x00f7: IF  (r13 I:?[int, byte, short, char]) \< (r15 I:?[int, byte, short, char])  \-\> B:81:0x010e \l}"];
Node_76 [shape=record,label="{76\:\ 0x00f9|0x00f9: IF  (r13 I:?[int, byte, short, char]) \> (r5 I:?[int, byte, short, char])  \-\> B:81:0x010e \l}"];
Node_77 [shape=record,label="{77\:\ 0x00fb|0x00fb: CAST  (r10 I:long) = (long) (r9 I:int) \l0x00fc: CMP_L  (r10 I:int) = (r10 I:long), (r19 I:long) \l}"];
Node_78 [shape=record,label="{78\:\ 0x00fe|0x00fe: IF  (r10 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:80:0x0101 \l}"];
Node_79 [shape=record,label="{79\:\ 0x0100|0x0100: RETURN  (r4 I:float) \l}"];
Node_80 [shape=record,label="{80\:\ 0x0101|0x0101: ARITH  (r9 I:int) = (r9 I:int) * (10 int) \l0x0103: ARITH  (r13 I:int) = (r13 I:int) + (\-48 int) \l0x0105: ARITH  (r9 I:int) = (r9 I:int) + (r13 I:int) \l0x0106: IGET  (r10 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x0108: ARITH  (r10 I:int) = (r10 I:int) + (r8 I:int) \l0x0109: IPUT  (r10 I:int), (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l0x010b: CONST  (r10 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_81 [shape=record,label="{81\:\ 0x010e|0x010e: IGET  (r1 I:int) = (r0 I:com.caverock.androidsvg.NumberParser) com.caverock.androidsvg.NumberParser.pos int \l}"];
Node_82 [shape=record,label="{82\:\ 0x0110|0x0110: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:84:0x0113 \l}"];
Node_83 [shape=record,label="{83\:\ 0x0112|0x0112: RETURN  (r4 I:float) \l}"];
Node_84 [shape=record,label="{84\:\ 0x0113|0x0113: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:86:0x0117 \l}"];
Node_85 [shape=record,label="{85\:\ 0x0115|0x0115: ARITH  (r14 I:int) = (r14 I:int) \- (r9 I:int) \l}"];
Node_86 [shape=record,label="{86\:\ 0x0117|0x0117: ARITH  (r14 I:int) = (r14 I:int) + (r9 I:int) \l}"];
Node_87 [shape=record,label="{87\:\ 0x0118|0x0118: ARITH  (r12 I:int) = (r12 I:int) + (r14 I:int) \l0x0119: CONST  (r1 I:?[int, float, short, byte, char]) = (39 ?[int, float, short, byte, char]) \l}"];
Node_88 [shape=record,label="{88\:\ 0x011b|0x011b: IF  (r12 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:104:0x0150 \l}"];
Node_89 [shape=record,label="{89\:\ 0x011d|0x011d: CONST  (r1 I:?[int, float, short, byte, char]) = (\-44 ?[int, float, short, byte, char]) \l}"];
Node_90 [shape=record,label="{90\:\ 0x011f|0x011f: IF  (r12 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:92:0x0122 \l}"];
Node_92 [shape=record,label="{92\:\ 0x0122|0x0122: MOVE  (r10 I:?[long, double]) = (r17 I:?[long, double]) \l0x0124: CAST  (r1 I:float) = (float) (r10 I:long) \l0x0125: CONST  (r3 I:?[long, double]) = (0 ?[long, double]) \l0x0127: CMP_L  (r3 I:int) = (r10 I:long), (r3 I:long) \l}"];
Node_93 [shape=record,label="{93\:\ 0x0129|0x0129: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:101:0x014c \l}"];
Node_94 [shape=record,label="{94\:\ 0x012b|0x012b: IF  (r14 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:96:0x0134 \l}"];
Node_95 [shape=record,label="{95\:\ 0x012d|0x012d: SGET  (r3 I:float[]) =  com.caverock.androidsvg.NumberParser.positivePowersOf10 float[] \l0x012f: AGET  (r3 I:?[int, float]) = (r3 I:?[int, float][]), (r14 I:?[int, short, byte, char]) \l0x0131: ARITH  (r1 I:float) = (r1 I:float) * (r3 I:float) \l}"];
Node_96 [shape=record,label="{96\:\ 0x0134|0x0134: IF  (r14 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:101:0x014c \l}"];
Node_97 [shape=record,label="{97\:\ 0x0136|0x0136: CONST  (r3 I:?[int, float, short, byte, char]) = (\-38 ?[int, float, short, byte, char]) \l}"];
Node_98 [shape=record,label="{98\:\ 0x0138|0x0138: IF  (r14 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:100:0x0145 \l}"];
Node_99 [shape=record,label="{99\:\ 0x013a|0x013a: CAST  (r3 I:double) = (double) (r1 I:float) \l0x013b: CONST  (r5 I:?[long, double]) = \l  (4307583784117748259(0x3bc79ca10c924223, double:1.0E\-20) ?[long, double])\l \l0x0140: ARITH  (r3 I:double) = (r3 I:double) * (r5 I:double) \l0x0142: CAST  (r1 I:float) = (float) (r3 I:double) \l0x0143: ARITH  (r14 I:int) = (r14 I:int) + (20 int) \l}"];
Node_100 [shape=record,label="{100\:\ 0x0145|0x0145: SGET  (r3 I:float[]) =  com.caverock.androidsvg.NumberParser.negativePowersOf10 float[] \l0x0147: NEG  (r4 I:int) = (r14 I:int) \l0x0148: AGET  (r3 I:?[int, float]) = (r3 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x014a: ARITH  (r1 I:float) = (r1 I:float) * (r3 I:float) \l}"];
Node_101 [shape=record,label="{101\:\ 0x014c|0x014c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:103:0x014f \l}"];
Node_102 [shape=record,label="{102\:\ 0x014e|0x014e: NEG  (r1 I:float) = (r1 I:float) \l}"];
Node_103 [shape=record,label="{103\:\ 0x014f|0x014f: RETURN  (r1 I:float) \l}"];
Node_104 [shape=record,label="{104\:\ 0x0150|0x0150: RETURN  (r4 I:float) \l}"];
MethodNode[shape=record,label="{float com.caverock.androidsvg.NumberParser.parseNumber((r22 'this' I:com.caverock.androidsvg.NumberParser A[IMMUTABLE_TYPE, THIS]), (r23 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_10;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_40;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_39;
Node_17 -> Node_39;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_34;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_34;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_27 -> Node_22;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_39;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_40;
Node_36 -> Node_38;
Node_36 -> Node_40[style=dashed];
Node_38 -> Node_39;
Node_39 -> Node_11;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_44;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_48;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_87;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_56;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_87;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_68;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_67;
Node_63 -> Node_64;
Node_63 -> Node_66;
Node_64 -> Node_65;
Node_65 -> Node_70;
Node_66 -> Node_65;
Node_67 -> Node_69;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_87;
Node_71 -> Node_72;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_81;
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_81;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_81;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_80;
Node_80 -> Node_72;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_86;
Node_85 -> Node_87;
Node_86 -> Node_87;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_104;
Node_89 -> Node_90;
Node_90 -> Node_92;
Node_90 -> Node_104[style=dashed];
Node_92 -> Node_93;
Node_93 -> Node_94[style=dashed];
Node_93 -> Node_101;
Node_94 -> Node_95[style=dashed];
Node_94 -> Node_96;
Node_95 -> Node_101;
Node_96 -> Node_97[style=dashed];
Node_96 -> Node_101;
Node_97 -> Node_98;
Node_98 -> Node_99[style=dashed];
Node_98 -> Node_100;
Node_99 -> Node_100;
Node_100 -> Node_101;
Node_101 -> Node_102[style=dashed];
Node_101 -> Node_103;
Node_102 -> Node_103;
}

