digraph "CFG forcom.caverock.androidsvg.SVGAndroidRenderer.RendererState.\<init\>(Lcom\/caverock\/androidsvg\/SVGAndroidRenderer;Lcom\/caverock\/androidsvg\/SVGAndroidRenderer$RendererState;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r2 I:com.caverock.androidsvg.SVGAndroidRenderer)\l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.this$0 com.caverock.androidsvg.SVGAndroidRenderer \l0x0002: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0005: IGET  (r2 I:boolean) = \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.hasFill boolean \l0x0007: IPUT  \l  (r2 I:boolean)\l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.hasFill boolean \l0x0009: IGET  (r2 I:boolean) = \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.hasStroke boolean \l0x000b: IPUT  \l  (r2 I:boolean)\l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.hasStroke boolean \l0x000d: NEW_INSTANCE  (r2 I:android.graphics.Paint) =  android.graphics.Paint \l0x000f: IGET  (r0 I:android.graphics.Paint) = \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.fillPaint android.graphics.Paint \l0x0011: INVOKE  \l  (r2 I:android.graphics.Paint)\l  (r0 I:android.graphics.Paint)\l android.graphics.Paint.\<init\>(android.graphics.Paint):void type: DIRECT \l0x0014: IPUT  \l  (r2 I:android.graphics.Paint)\l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.fillPaint android.graphics.Paint \l0x0016: NEW_INSTANCE  (r2 I:android.graphics.Paint) =  android.graphics.Paint \l0x0018: IGET  (r0 I:android.graphics.Paint) = \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.strokePaint android.graphics.Paint \l0x001a: INVOKE  \l  (r2 I:android.graphics.Paint)\l  (r0 I:android.graphics.Paint)\l android.graphics.Paint.\<init\>(android.graphics.Paint):void type: DIRECT \l0x001d: IPUT  \l  (r2 I:android.graphics.Paint)\l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.strokePaint android.graphics.Paint \l0x001f: IGET  (r2 I:com.caverock.androidsvg.SVG$Box) = \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.viewPort com.caverock.androidsvg.SVG$Box \l}"];
Node_1 [shape=record,label="{1\:\ 0x0021|0x0021: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x002c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0023|0x0023: NEW_INSTANCE  (r2 I:com.caverock.androidsvg.SVG$Box) =  com.caverock.androidsvg.SVG$Box \l0x0025: IGET  (r0 I:com.caverock.androidsvg.SVG$Box) = \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.viewPort com.caverock.androidsvg.SVG$Box \l0x0027: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVG$Box)\l  (r0 I:com.caverock.androidsvg.SVG$Box)\l com.caverock.androidsvg.SVG.Box.\<init\>(com.caverock.androidsvg.SVG$Box):void type: DIRECT \l0x002a: IPUT  \l  (r2 I:com.caverock.androidsvg.SVG$Box)\l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.viewPort com.caverock.androidsvg.SVG$Box \l}"];
Node_3 [shape=record,label="{3\:\ 0x002c|0x002c: IGET  (r2 I:com.caverock.androidsvg.SVG$Box) = \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.viewBox com.caverock.androidsvg.SVG$Box \l}"];
Node_4 [shape=record,label="{4\:\ 0x002e|0x002e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0039 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0030|0x0030: NEW_INSTANCE  (r2 I:com.caverock.androidsvg.SVG$Box) =  com.caverock.androidsvg.SVG$Box \l0x0032: IGET  (r0 I:com.caverock.androidsvg.SVG$Box) = \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.viewBox com.caverock.androidsvg.SVG$Box \l0x0034: INVOKE  \l  (r2 I:com.caverock.androidsvg.SVG$Box)\l  (r0 I:com.caverock.androidsvg.SVG$Box)\l com.caverock.androidsvg.SVG.Box.\<init\>(com.caverock.androidsvg.SVG$Box):void type: DIRECT \l0x0037: IPUT  \l  (r2 I:com.caverock.androidsvg.SVG$Box)\l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.viewBox com.caverock.androidsvg.SVG$Box \l}"];
Node_6 [shape=record,label="{6\:\ 0x0039|0x0039: IGET  (r2 I:boolean) = \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.spacePreserve boolean \l0x003b: IPUT  \l  (r2 I:boolean)\l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.spacePreserve boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|SYNTHETIC\lSplitter:B:7:0x003d\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x003d\l|0x003d: IGET  (r2 I:com.caverock.androidsvg.SVG$Style) = \l  (r3 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style A[Catch:\{ CloneNotSupportedException \-\> 0x0048 \}, TRY_ENTER]\l0x003f: INVOKE  (r2 I:java.lang.Object) = (r2 I:com.caverock.androidsvg.SVG$Style) com.caverock.androidsvg.SVG.Style.clone():java.lang.Object type: VIRTUAL A[Catch:\{ CloneNotSupportedException \-\> 0x0048 \}]\l0x0043: CHECK_CAST  (r2 I:com.caverock.androidsvg.SVG$Style) = (com.caverock.androidsvg.SVG$Style) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ CloneNotSupportedException \-\> 0x0048 \}]\l0x0045: IPUT  \l  (r2 I:com.caverock.androidsvg.SVG$Style)\l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style A[Catch:\{ CloneNotSupportedException \-\> 0x0048 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|ExcHandler: CloneNotSupportedException null\lSplitter:B:7:0x003d\l|0x0048: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0049|0x0049: CONST_STR  (r3 I:java.lang.String) =  \"SVGAndroidRenderer\" \l0x004b: CONST_STR  (r0 I:java.lang.String) =  \"Unexpected clone error\" \l0x004d: INVOKE  \l  (r3 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r2 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l0x0050: INVOKE  (r2 I:com.caverock.androidsvg.SVG$Style) =  com.caverock.androidsvg.SVG.Style.getDefaultStyle():com.caverock.androidsvg.SVG$Style type: STATIC \l0x0054: IPUT  \l  (r2 I:com.caverock.androidsvg.SVG$Style)\l  (r1 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState)\l com.caverock.androidsvg.SVGAndroidRenderer.RendererState.style com.caverock.androidsvg.SVG$Style \l}"];
Node_12 [shape=record,label="{12\:\ 0x0056|0x0056: RETURN   \l}"];
MethodNode[shape=record,label="{void com.caverock.androidsvg.SVGAndroidRenderer.RendererState.\<init\>((r1 'this' I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState A[IMMUTABLE_TYPE, THIS]), (r2 I:com.caverock.androidsvg.SVGAndroidRenderer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.caverock.androidsvg.SVGAndroidRenderer$RendererState A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_10;
Node_8 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

