digraph "CFG forcom.caverock.androidsvg.PreserveAspectRatio.of(Ljava\/lang\/String;)Lcom\/caverock\/androidsvg\/PreserveAspectRatio;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ SVGParseException \-\> 0x0005 \}\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return com.caverock.androidsvg.SVGParser.parsePreserveAspectRatio(r1)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|ExcHandler: SVGParseException (r1v1 'e' com.caverock.androidsvg.SVGParseException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|com.caverock.androidsvg.SVGParseException r1 = move\-exception\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006}"];
Node_5 [shape=record,label="{5\:\ 0x000f|throw new java.lang.IllegalArgumentException(r1.getMessage())\l}"];
MethodNode[shape=record,label="{public static com.caverock.androidsvg.PreserveAspectRatio com.caverock.androidsvg.PreserveAspectRatio.of((r1v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

