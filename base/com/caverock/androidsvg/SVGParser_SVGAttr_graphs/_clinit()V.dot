digraph "CFG forcom.caverock.androidsvg.SVGParser.SVGAttr.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2 = 0\lCLASS = new com.caverock.androidsvg.SVGParser.SVGAttr(\"CLASS\", 0)\lclip = new com.caverock.androidsvg.SVGParser.SVGAttr(\"clip\", 1)\lclip_path = new com.caverock.androidsvg.SVGParser.SVGAttr(\"clip_path\", 2)\lclipPathUnits = new com.caverock.androidsvg.SVGParser.SVGAttr(\"clipPathUnits\", 3)\lclip_rule = new com.caverock.androidsvg.SVGParser.SVGAttr(\"clip_rule\", 4)\lcolor = new com.caverock.androidsvg.SVGParser.SVGAttr(\"color\", 5)\lf147cx = new com.caverock.androidsvg.SVGParser.SVGAttr(\"cx\", 6)\lf148cy = new com.caverock.androidsvg.SVGParser.SVGAttr(\"cy\", 7)\ldirection = new com.caverock.androidsvg.SVGParser.SVGAttr(\"direction\", 8)\lf150dx = new com.caverock.androidsvg.SVGParser.SVGAttr(\"dx\", 9)\lf151dy = new com.caverock.androidsvg.SVGParser.SVGAttr(\"dy\", 10)\lf152fx = new com.caverock.androidsvg.SVGParser.SVGAttr(\"fx\", 11)\lf153fy = new com.caverock.androidsvg.SVGParser.SVGAttr(\"fy\", 12)\lf149d = new com.caverock.androidsvg.SVGParser.SVGAttr(\"d\", 13)\ldisplay = new com.caverock.androidsvg.SVGParser.SVGAttr(\"display\", 14)\lfill = new com.caverock.androidsvg.SVGParser.SVGAttr(\"fill\", 15)\lfill_rule = new com.caverock.androidsvg.SVGParser.SVGAttr(\"fill_rule\", 16)\lfill_opacity = new com.caverock.androidsvg.SVGParser.SVGAttr(\"fill_opacity\", 17)\lfont = new com.caverock.androidsvg.SVGParser.SVGAttr(\"font\", 18)\lfont_family = new com.caverock.androidsvg.SVGParser.SVGAttr(\"font_family\", 19)\lfont_size = new com.caverock.androidsvg.SVGParser.SVGAttr(\"font_size\", 20)\lfont_weight = new com.caverock.androidsvg.SVGParser.SVGAttr(android.support.p000v4.provider.FontsContractCompat.Columns.WEIGHT, 21)\lfont_style = new com.caverock.androidsvg.SVGParser.SVGAttr(\"font_style\", 22)\lgradientTransform = new com.caverock.androidsvg.SVGParser.SVGAttr(\"gradientTransform\", 23)\lgradientUnits = new com.caverock.androidsvg.SVGParser.SVGAttr(\"gradientUnits\", 24)\lheight = new com.caverock.androidsvg.SVGParser.SVGAttr(\"height\", 25)\lhref = new com.caverock.androidsvg.SVGParser.SVGAttr(com.caverock.androidsvg.SVGParser.XML_STYLESHEET_ATTR_HREF, 26)\limage_rendering = new com.caverock.androidsvg.SVGParser.SVGAttr(\"image_rendering\", 27)\lmarker = new com.caverock.androidsvg.SVGParser.SVGAttr(\"marker\", 28)\lmarker_start = new com.caverock.androidsvg.SVGParser.SVGAttr(\"marker_start\", 29)\lmarker_mid = new com.caverock.androidsvg.SVGParser.SVGAttr(\"marker_mid\", 30)\lmarker_end = new com.caverock.androidsvg.SVGParser.SVGAttr(\"marker_end\", 31)\lmarkerHeight = new com.caverock.androidsvg.SVGParser.SVGAttr(\"markerHeight\", 32)\lmarkerUnits = new com.caverock.androidsvg.SVGParser.SVGAttr(\"markerUnits\", 33)\lmarkerWidth = new com.caverock.androidsvg.SVGParser.SVGAttr(\"markerWidth\", 34)\lmask = new com.caverock.androidsvg.SVGParser.SVGAttr(\"mask\", 35)\lmaskContentUnits = new com.caverock.androidsvg.SVGParser.SVGAttr(\"maskContentUnits\", 36)\lmaskUnits = new com.caverock.androidsvg.SVGParser.SVGAttr(\"maskUnits\", 37)\lmedia = new com.caverock.androidsvg.SVGParser.SVGAttr(com.caverock.androidsvg.SVGParser.XML_STYLESHEET_ATTR_MEDIA, 38)\loffset = new com.caverock.androidsvg.SVGParser.SVGAttr(\"offset\", 39)\lopacity = new com.caverock.androidsvg.SVGParser.SVGAttr(\"opacity\", 40)\lorient = new com.caverock.androidsvg.SVGParser.SVGAttr(\"orient\", 41)\loverflow = new com.caverock.androidsvg.SVGParser.SVGAttr(\"overflow\", 42)\lpathLength = new com.caverock.androidsvg.SVGParser.SVGAttr(\"pathLength\", 43)\lpatternContentUnits = new com.caverock.androidsvg.SVGParser.SVGAttr(\"patternContentUnits\", 44)\lpatternTransform = new com.caverock.androidsvg.SVGParser.SVGAttr(\"patternTransform\", 45)\lpatternUnits = new com.caverock.androidsvg.SVGParser.SVGAttr(\"patternUnits\", 46)\lpoints = new com.caverock.androidsvg.SVGParser.SVGAttr(\"points\", 47)\lpreserveAspectRatio = new com.caverock.androidsvg.SVGParser.SVGAttr(\"preserveAspectRatio\", 48)\lf154r = new com.caverock.androidsvg.SVGParser.SVGAttr(\"r\", 49)\lrefX = new com.caverock.androidsvg.SVGParser.SVGAttr(\"refX\", 50)\lrefY = new com.caverock.androidsvg.SVGParser.SVGAttr(\"refY\", 51)\lrequiredFeatures = new com.caverock.androidsvg.SVGParser.SVGAttr(\"requiredFeatures\", 52)\lrequiredExtensions = new com.caverock.androidsvg.SVGParser.SVGAttr(\"requiredExtensions\", 53)\lrequiredFormats = new com.caverock.androidsvg.SVGParser.SVGAttr(\"requiredFormats\", 54)\lrequiredFonts = new com.caverock.androidsvg.SVGParser.SVGAttr(\"requiredFonts\", 55)\lf155rx = new com.caverock.androidsvg.SVGParser.SVGAttr(\"rx\", 56)\lf156ry = new com.caverock.androidsvg.SVGParser.SVGAttr(\"ry\", 57)\lsolid_color = new com.caverock.androidsvg.SVGParser.SVGAttr(\"solid_color\", 58)\lsolid_opacity = new com.caverock.androidsvg.SVGParser.SVGAttr(\"solid_opacity\", 59)\lspreadMethod = new com.caverock.androidsvg.SVGParser.SVGAttr(\"spreadMethod\", 60)\lstartOffset = new com.caverock.androidsvg.SVGParser.SVGAttr(\"startOffset\", 61)\lstop_color = new com.caverock.androidsvg.SVGParser.SVGAttr(\"stop_color\", 62)\lstop_opacity = new com.caverock.androidsvg.SVGParser.SVGAttr(\"stop_opacity\", 63)\lstroke = new com.caverock.androidsvg.SVGParser.SVGAttr(\"stroke\", 64)\lstroke_dasharray = new com.caverock.androidsvg.SVGParser.SVGAttr(\"stroke_dasharray\", 65)\lstroke_dashoffset = new com.caverock.androidsvg.SVGParser.SVGAttr(\"stroke_dashoffset\", 66)\lstroke_linecap = new com.caverock.androidsvg.SVGParser.SVGAttr(\"stroke_linecap\", 67)\lstroke_linejoin = new com.caverock.androidsvg.SVGParser.SVGAttr(\"stroke_linejoin\", 68)\lstroke_miterlimit = new com.caverock.androidsvg.SVGParser.SVGAttr(\"stroke_miterlimit\", 69)\lstroke_opacity = new com.caverock.androidsvg.SVGParser.SVGAttr(\"stroke_opacity\", 70)\lstroke_width = new com.caverock.androidsvg.SVGParser.SVGAttr(\"stroke_width\", 71)\lstyle = new com.caverock.androidsvg.SVGParser.SVGAttr(\"style\", 72)\lsystemLanguage = new com.caverock.androidsvg.SVGParser.SVGAttr(\"systemLanguage\", 73)\ltext_anchor = new com.caverock.androidsvg.SVGParser.SVGAttr(\"text_anchor\", 74)\ltext_decoration = new com.caverock.androidsvg.SVGParser.SVGAttr(\"text_decoration\", 75)\ltransform = new com.caverock.androidsvg.SVGParser.SVGAttr(\"transform\", 76)\ltype = new com.caverock.androidsvg.SVGParser.SVGAttr(\"type\", 77)\lvector_effect = new com.caverock.androidsvg.SVGParser.SVGAttr(\"vector_effect\", 78)\lversion = new com.caverock.androidsvg.SVGParser.SVGAttr(\"version\", 79)\lviewBox = new com.caverock.androidsvg.SVGParser.SVGAttr(\"viewBox\", 80)\lwidth = new com.caverock.androidsvg.SVGParser.SVGAttr(\"width\", 81)\lf157x = new com.caverock.androidsvg.SVGParser.SVGAttr(\"x\", 82)\lf160y = new com.caverock.androidsvg.SVGParser.SVGAttr(\"y\", 83)\lf158x1 = new com.caverock.androidsvg.SVGParser.SVGAttr(\"x1\", 84)\lf161y1 = new com.caverock.androidsvg.SVGParser.SVGAttr(\"y1\", 85)\lf159x2 = new com.caverock.androidsvg.SVGParser.SVGAttr(\"x2\", 86)\lf162y2 = new com.caverock.androidsvg.SVGParser.SVGAttr(\"y2\", 87)\lviewport_fill = new com.caverock.androidsvg.SVGParser.SVGAttr(\"viewport_fill\", 88)\lviewport_fill_opacity = new com.caverock.androidsvg.SVGParser.SVGAttr(\"viewport_fill_opacity\", 89)\lvisibility = new com.caverock.androidsvg.SVGParser.SVGAttr(\"visibility\", 90)\lUNSUPPORTED = new com.caverock.androidsvg.SVGParser.SVGAttr(\"UNSUPPORTED\", 91)\lcom.caverock.androidsvg.SVGParser$SVGAttr[] r0 = new com.caverock.androidsvg.SVGParser.SVGAttr[]\{CLASS, clip, clip_path, clipPathUnits, clip_rule, color, f147cx, f148cy, direction, f150dx, f151dy, f152fx, f153fy, f149d, display, fill, fill_rule, fill_opacity, font, font_family, font_size, font_weight, font_style, gradientTransform, gradientUnits, height, href, image_rendering, marker, marker_start, marker_mid, marker_end, markerHeight, markerUnits, markerWidth, mask, maskContentUnits, maskUnits, media, offset, opacity, orient, overflow, pathLength, patternContentUnits, patternTransform, patternUnits, points, preserveAspectRatio, f154r, refX, refY, requiredFeatures, requiredExtensions, requiredFormats, requiredFonts, f155rx, f156ry, solid_color, solid_opacity, spreadMethod, startOffset, stop_color, stop_opacity, stroke, stroke_dasharray, stroke_dashoffset, stroke_linecap, stroke_linejoin, stroke_miterlimit, stroke_opacity, stroke_width, style, systemLanguage, text_anchor, text_decoration, transform, type, vector_effect, version, viewBox, width, f157x, f160y, f158x1, f161y1, f159x2, f162y2, viewport_fill, viewport_fill_opacity, visibility, UNSUPPORTED\}\l$VALUES = r0\lcache = new java.util.HashMap()\lcom.caverock.androidsvg.SVGParser$SVGAttr[] r0 = values()\lint r1 = r0.length\l}"];
Node_1 [shape=record,label="{1\:\ 0x060c|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:9:0x0633] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x060c\-\>B:9:0x0633\l|if (r2 \>= r1) goto L_0x0636\l}"];
Node_2 [shape=record,label="{2\:\ 0x060e|r3 = r0[r2]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0612|if (r3 != CLASS) goto L_0x061e\l}"];
Node_4 [shape=record,label="{4\:\ 0x0614|cache.put(\"class\", r3)\l}"];
Node_5 [shape=record,label="{5\:\ 0x061b}"];
Node_6 [shape=record,label="{6\:\ 0x061e}"];
Node_7 [shape=record,label="{7\:\ 0x0620|if (r3 == UNSUPPORTED) goto L_0x061b\l}"];
Node_8 [shape=record,label="{8\:\ 0x0622|java.lang.String r4 = r3.name().replace('_', '\-')\lcache.put(r4, r3)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0633|LOOP_END\lLOOP:0: B:1:0x060c\-\>B:9:0x0633\l|int r2 = r2 + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0636|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x0636|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0633|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0633|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static void com.caverock.androidsvg.SVGParser.SVGAttr.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_5;
Node_7 -> Node_8[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_1;
Node_11 -> Node_10;
Node_12 -> Node_9;
Node_13 -> Node_9;
}

