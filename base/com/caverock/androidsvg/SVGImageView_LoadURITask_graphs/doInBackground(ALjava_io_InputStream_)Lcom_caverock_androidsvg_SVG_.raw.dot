digraph "CFG forcom.caverock.androidsvg.SVGImageView.LoadURITask.doInBackground([Ljava\/io\/InputStream;)Lcom\/caverock\/androidsvg\/SVG;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: AGET  (r1 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) A[Catch:\{ SVGParseException \-\> 0x000f \}, TRY_ENTER]\l0x0003: INVOKE  (r1 I:com.caverock.androidsvg.SVG) = (r1 I:java.io.InputStream) com.caverock.androidsvg.SVG.getFromInputStream(java.io.InputStream):com.caverock.androidsvg.SVG type: STATIC A[Catch:\{ SVGParseException \-\> 0x000f \}]\l0x0006: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|SYNTHETIC\lSplitter:B:3:0x0007\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0007\l|0x0007: AGET  (r6 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) A[Catch:\{ IOException \-\> 0x000c \}, TRY_ENTER]\l0x0009: INVOKE  (r6 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x000c \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: RETURN  (r1 I:com.caverock.androidsvg.SVG) \l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:3:0x0007\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|ExcHandler: all null\lSplitter:B:11:0x0012\l|0x000d: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x000f|ExcHandler: SVGParseException null\lSplitter:B:1:0x0001\l|0x000f: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0010|0x0010: CONST_STR  (r2 I:java.lang.String) =  \"SVGImageView\" \l}"];
Node_11 [shape=record,label="{11\:\ 0x0012|SYNTHETIC\lSplitter:B:11:0x0012\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x0012\l|0x0012: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x000d \}, TRY_ENTER]\l0x0014: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x000d \}]\l0x0017: CONST_STR  (r4 I:java.lang.String) =  \"Parse error loading URI: \" A[Catch:\{ all \-\> 0x000d \}]\l0x0019: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x000d \}]\l0x001c: INVOKE  (r1 I:java.lang.String) = (r1 I:com.caverock.androidsvg.SVGParseException) com.caverock.androidsvg.SVGParseException.getMessage():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x000d \}]\l0x0020: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x000d \}]\l0x0023: INVOKE  (r1 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x000d \}]\l0x0027: INVOKE  (r2 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ all \-\> 0x000d \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|SYNTHETIC\lSplitter:B:13:0x002a\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x002a\l|0x002a: AGET  (r6 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) A[Catch:\{ IOException \-\> 0x002f \}, TRY_ENTER]\l0x002c: INVOKE  (r6 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x002f \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|0x002f: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:13:0x002a\l}"];
Node_17 [shape=record,label="{17\:\ 0x0030|0x0030: RETURN  (r6 I:com.caverock.androidsvg.SVG) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0031|SYNTHETIC\lSplitter:B:18:0x0031\l}"];
Node_19 [shape=record,label="{19\:\ ?|Splitter:B:18:0x0031\l|0x0031: AGET  (r6 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) A[Catch:\{ IOException \-\> 0x0036 \}, TRY_ENTER]\l0x0033: INVOKE  (r6 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0036 \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0036|0x0036: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:18:0x0031\l}"];
MethodNode[shape=record,label="{protected com.caverock.androidsvg.SVG com.caverock.androidsvg.SVGImageView.LoadURITask.doInBackground((r5 'this' I:com.caverock.androidsvg.SVGImageView$LoadURITask A[IMMUTABLE_TYPE, THIS]), (r6 I:java.io.InputStream[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_5;
Node_7 -> Node_18;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_7;
Node_12 -> Node_13;
Node_12 -> Node_7;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_15;
Node_18 -> Node_19;
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_20;
}

