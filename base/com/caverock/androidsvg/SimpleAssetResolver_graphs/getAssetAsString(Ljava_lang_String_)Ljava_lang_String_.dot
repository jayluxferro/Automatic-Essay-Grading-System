digraph "CFG forcom.caverock.androidsvg.SimpleAssetResolver.getAssetAsString(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IOException \-\> 0x0040, all \-\> 0x0036 \}\lSplitter:B:1:0x0001\l|java.io.InputStream r8 = r7.assetManager.open(r8)     \/\/ Catch:\{ IOException \-\> 0x0040, all \-\> 0x0036 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|SYNTHETIC\lSplitter:B:3:0x0007\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}\lSplitter:B:3:0x0007\l|java.io.InputStreamReader r1 = new java.io.InputStreamReader(r8, java.nio.charset.Charset.forName(p018io.fabric.sdk.android.services.network.HttpRequest.CHARSET_UTF8))     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}\lchar[] r2 = new char[4096]     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}\ljava.lang.StringBuilder r3 = new java.lang.StringBuilder()     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}\lint r4 = r1.read(r2)     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|LOOP_START\lCatch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}\lPHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:4:?, B:6:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x001f\-\>B:6:0x0021\l|if (r4 \<= 0) goto L_0x002a     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|LOOP_END\lCatch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}\lLOOP:0: B:5:0x001f\-\>B:6:0x0021\l|r3.append(r2, 0, r4)     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}\lint r4 = r1.read(r2)     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}\l|java.lang.String r1 = r3.toString()     \/\/ Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|if (r8 == null) goto L_0x0033\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|SYNTHETIC\lSplitter:B:9:0x0030\l}"];
Node_10 [shape=record,label="{10\:\ ?|Catch:\{ IOException \-\> 0x0033 \}\lSplitter:B:9:0x0030\l|r8.close()     \/\/ Catch:\{ IOException \-\> 0x0033 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|RETURN\l|return r1\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:9:0x0030\l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:3:0x0007\l|java.lang.Throwable r0 = th\l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|ExcHandler: all (r8v4 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:1:0x0001\l|java.lang.Throwable r8 = move\-exception\l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|r0 = r8\lr8 = null\l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|PHI: r0 r8 \l  PHI: (r0v1 'th' java.lang.Throwable) = (r0v2 'th' java.lang.Throwable), (r0v3 'th' java.lang.Throwable) binds: [B:15:0x0037, B:13:0x0034] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v3 java.io.InputStream) = (r8v5 java.io.InputStream), (r8v6 java.io.InputStream) binds: [B:15:0x0037, B:13:0x0034] A[DONT_GENERATE, DONT_INLINE]\l|if (r8 == null) goto L_0x003f\l}"];
Node_17 [shape=record,label="{17\:\ 0x003c|SYNTHETIC\lSplitter:B:17:0x003c\l}"];
Node_18 [shape=record,label="{18\:\ ?|Catch:\{ IOException \-\> 0x003f \}\lSplitter:B:17:0x003c\l|r8.close()     \/\/ Catch:\{ IOException \-\> 0x003f \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x003f|throw r0\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:17:0x003c\l}"];
Node_21 [shape=record,label="{21\:\ 0x0040|r8 = null\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:1:0x0001\l}"];
Node_23 [shape=record,label="{23\:\ 0x0041|PHI: r8 \l  PHI: (r8v1 java.io.InputStream) = (r8v2 java.io.InputStream), (r8v6 java.io.InputStream) binds: [B:21:0x0040, B:24:?] A[DONT_GENERATE, DONT_INLINE]\l|if (r8 == null) goto L_0x0046\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:3:0x0007\l}"];
Node_25 [shape=record,label="{25\:\ 0x0043|SYNTHETIC\lSplitter:B:25:0x0043\l}"];
Node_26 [shape=record,label="{26\:\ ?|Catch:\{ IOException \-\> 0x0046 \}\lSplitter:B:25:0x0043\l|r8.close()     \/\/ Catch:\{ IOException \-\> 0x0046 \}\l}"];
Node_27 [shape=record,label="{27\:\ 0x0046|RETURN\l|return null\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:25:0x0043\l}"];
Node_29 [shape=record,label="{29\:\ 0x002a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private java.lang.String com.caverock.androidsvg.SimpleAssetResolver.getAssetAsString((r7v0 'this' com.caverock.androidsvg.SimpleAssetResolver A[IMMUTABLE_TYPE, THIS]), (r8v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_22;
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_24;
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_29;
Node_6 -> Node_5;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_11;
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_19;
Node_21 -> Node_23;
Node_22 -> Node_21;
Node_23 -> Node_25[style=dashed];
Node_23 -> Node_27;
Node_24 -> Node_23;
Node_25 -> Node_26;
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_27;
Node_29 -> Node_7;
}

