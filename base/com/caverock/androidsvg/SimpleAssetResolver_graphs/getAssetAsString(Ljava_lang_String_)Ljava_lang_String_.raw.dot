digraph "CFG forcom.caverock.androidsvg.SimpleAssetResolver.getAssetAsString(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r1 I:android.content.res.AssetManager) = (r7 I:com.caverock.androidsvg.SimpleAssetResolver) com.caverock.androidsvg.SimpleAssetResolver.assetManager android.content.res.AssetManager A[Catch:\{ IOException \-\> 0x0040, all \-\> 0x0036 \}, TRY_ENTER]\l0x0003: INVOKE  (r8 I:java.io.InputStream) = \l  (r1 I:android.content.res.AssetManager)\l  (r8 I:java.lang.String)\l android.content.res.AssetManager.open(java.lang.String):java.io.InputStream type: VIRTUAL A[Catch:\{ IOException \-\> 0x0040, all \-\> 0x0036 \}]\l0x0006: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|SYNTHETIC\lSplitter:B:3:0x0007\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0007\l|0x0007: NEW_INSTANCE  (r1 I:java.io.InputStreamReader) =  java.io.InputStreamReader A[Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}, TRY_ENTER]\l0x0009: CONST_STR  (r2 I:java.lang.String) =  \"UTF\-8\" A[Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}]\l0x000b: INVOKE  (r2 I:java.nio.charset.Charset) = (r2 I:java.lang.String) java.nio.charset.Charset.forName(java.lang.String):java.nio.charset.Charset type: STATIC A[Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}]\l0x000f: INVOKE  \l  (r1 I:java.io.InputStreamReader)\l  (r8 I:java.io.InputStream)\l  (r2 I:java.nio.charset.Charset)\l java.io.InputStreamReader.\<init\>(java.io.InputStream, java.nio.charset.Charset):void type: DIRECT A[Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}]\l0x0012: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (4096(0x1000, float:5.74E\-42) ?[int, float, short, byte, char])\l A[Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}]\l0x0014: NEW_ARRAY  (r2 I:char[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: char[] A[Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}]\l0x0016: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}]\l0x0018: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}]\l0x001b: INVOKE  (r4 I:int) = (r1 I:java.io.Reader), (r2 I:char[]) java.io.Reader.read(char[]):int type: VIRTUAL A[Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x002a A[Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}]\l0x0022: INVOKE  \l  (r3 I:java.lang.StringBuilder)\l  (r2 I:char[])\l  (r5 I:int)\l  (r4 I:int)\l java.lang.StringBuilder.append(char[], int, int):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}]\l0x0025: INVOKE  (r4 I:int) = (r1 I:java.io.Reader), (r2 I:char[]) java.io.Reader.read(char[]):int type: VIRTUAL A[Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}]\l0x0029: GOTO  \-\> 0x001f A[Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: INVOKE  (r1 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ IOException \-\> 0x0041, all \-\> 0x0034 \}]\l0x002d: NOP   A[TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0033 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|SYNTHETIC\lSplitter:B:9:0x0030\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x0030\l|0x0030: INVOKE  (r8 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0033 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: RETURN  (r1 I:java.lang.String) \l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:9:0x0030\l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|ExcHandler: all null\lSplitter:B:3:0x0007\l|0x0034: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0036|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0036: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|0x0037: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0038: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0039: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x003a|0x003a: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x003f \l}"];
Node_18 [shape=record,label="{18\:\ 0x003c|SYNTHETIC\lSplitter:B:18:0x003c\l}"];
Node_19 [shape=record,label="{19\:\ ?|Splitter:B:18:0x003c\l|0x003c: INVOKE  (r8 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x003f \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x003f|0x003f: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:18:0x003c\l}"];
Node_22 [shape=record,label="{22\:\ 0x0040|0x0040: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:1:0x0001\l}"];
Node_24 [shape=record,label="{24\:\ 0x0041|0x0041: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0046 \l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:3:0x0007\l}"];
Node_26 [shape=record,label="{26\:\ 0x0043|SYNTHETIC\lSplitter:B:26:0x0043\l}"];
Node_27 [shape=record,label="{27\:\ ?|Splitter:B:26:0x0043\l|0x0043: INVOKE  (r8 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0046 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0046|0x0046: RETURN  (r0 I:java.lang.String) \l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:26:0x0043\l}"];
MethodNode[shape=record,label="{private java.lang.String com.caverock.androidsvg.SimpleAssetResolver.getAssetAsString((r7 'this' I:com.caverock.androidsvg.SimpleAssetResolver A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_23;
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_25;
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_5;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_11;
Node_13 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_20;
Node_22 -> Node_24;
Node_23 -> Node_22;
Node_24 -> Node_26[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_24;
Node_26 -> Node_27;
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_27 -> Node_29;
Node_29 -> Node_28;
}

