digraph "CFG forcom.caverock.androidsvg.SimpleAssetResolver.resolveImage(Ljava\/lang\/String;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:java.lang.String) =  com.caverock.androidsvg.SimpleAssetResolver.TAG java.lang.String \l0x0002: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0004: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0007: CONST_STR  (r2 I:java.lang.String) =  \"resolveImage(\" \l0x0009: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x000c: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x000f: CONST_STR  (r2 I:java.lang.String) =  \")\" \l0x0011: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0014: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0018: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.i(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|SYNTHETIC\lSplitter:B:1:0x001b\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x001b\l|0x001b: IGET  (r0 I:android.content.res.AssetManager) = (r3 I:com.caverock.androidsvg.SimpleAssetResolver) com.caverock.androidsvg.SimpleAssetResolver.assetManager android.content.res.AssetManager A[Catch:\{ IOException \-\> 0x0026 \}, TRY_ENTER]\l0x001d: INVOKE  (r4 I:java.io.InputStream) = \l  (r0 I:android.content.res.AssetManager)\l  (r4 I:java.lang.String)\l android.content.res.AssetManager.open(java.lang.String):java.io.InputStream type: VIRTUAL A[Catch:\{ IOException \-\> 0x0026 \}]\l0x0021: INVOKE  (r4 I:android.graphics.Bitmap) = (r4 I:java.io.InputStream) android.graphics.BitmapFactory.decodeStream(java.io.InputStream):android.graphics.Bitmap type: STATIC A[Catch:\{ IOException \-\> 0x0026 \}]\l0x0024: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0025|0x0025: RETURN  (r4 I:android.graphics.Bitmap) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|0x0026: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:1:0x001b\l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: RETURN  (r4 I:android.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{public android.graphics.Bitmap com.caverock.androidsvg.SimpleAssetResolver.resolveImage((r3 'this' I:com.caverock.androidsvg.SimpleAssetResolver A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_4 -> Node_6;
Node_5 -> Node_4;
}

