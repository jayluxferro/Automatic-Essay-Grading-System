digraph "CFG forcom.ghanapostgps.ghanapost.fragments.LocationFragment.getMessage(Lcom\/ghanapostgps\/ghanapost\/model\/EventsBuss$PopulateLocationFragment;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r7.getMessage().equals(\"setloadaddress\") == false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|java.util.HashMap r7 = r7.getLocation()\lr6.CodeDigitalAddress = r7.get(com.mapbox.api.geocoding.p009v5.GeocodingCriteria.TYPE_ADDRESS)\ljava.lang.String r0 = r7.get(\"latitude\")\ljava.lang.String r1 = r7.get(\"longitude\")\lr2 = 0.0d\l}"];
Node_3 [shape=record,label="{3\:\ 0x002c|if (r1 == null) goto L_0x003a\l}"];
Node_4 [shape=record,label="{4\:\ 0x002e}"];
Node_5 [shape=record,label="{5\:\ 0x0032|if (r1.isEmpty() == false) goto L_0x0035\l}"];
Node_6 [shape=record,label="{6\:\ 0x0035|double r4 = java.lang.Double.parseDouble(r1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x003a|r4 = 0.0d\l}"];
Node_8 [shape=record,label="{8\:\ 0x003b|PHI: r4 \l  PHI: (r4v0 double) = (r4v1 double), (r4v3 double) binds: [B:7:0x003a, B:6:0x0035] A[DONT_GENERATE, DONT_INLINE]\l|r6.CodeLongitude = java.lang.Double.valueOf(r4)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|if (r0 == null) goto L_0x004e\l}"];
Node_10 [shape=record,label="{10\:\ 0x0043}"];
Node_11 [shape=record,label="{11\:\ 0x0047|if (r0.isEmpty() == false) goto L_0x004a\l}"];
Node_12 [shape=record,label="{12\:\ 0x004a|double r2 = java.lang.Double.parseDouble(r0)\l}"];
Node_13 [shape=record,label="{13\:\ 0x004e|PHI: r2 \l  PHI: (r2v1 double) = (r2v0 double), (r2v0 double), (r2v2 double) binds: [B:9:0x0041, B:11:0x0047, B:12:0x004a] A[DONT_GENERATE, DONT_INLINE]\l|r6.CodeLatitude = java.lang.Double.valueOf(r2)\lr6.CodeStreetAddress = r7.get(\"street\")\lr6.CodeCountry = r7.get(com.mapbox.api.geocoding.p009v5.GeocodingCriteria.TYPE_COUNTRY)\lr6.CodeDistrict = r7.get(com.mapbox.api.geocoding.p009v5.GeocodingCriteria.TYPE_DISTRICT)\lr6.CodeRegion = r7.get(com.mapbox.api.geocoding.p009v5.GeocodingCriteria.TYPE_REGION)\lr6.CodePostCode = r7.get(com.mapbox.api.geocoding.p009v5.GeocodingCriteria.TYPE_POSTCODE)\lr6.CodeUniversalAddress = r7.get(\"world_address\")\lr6.CodeArea = r7.get(\"area\")\ljava.lang.String r7 = r7.get(\"accuracy\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x00a3|if (r7 == null) goto L_0x00b1\l}"];
Node_15 [shape=record,label="{15\:\ 0x00a5}"];
Node_16 [shape=record,label="{16\:\ 0x00a9|if (r7.isEmpty() == false) goto L_0x00ac\l}"];
Node_17 [shape=record,label="{17\:\ 0x00ac|int r7 = java.lang.Integer.parseInt(r7)\l}"];
Node_18 [shape=record,label="{18\:\ 0x00b1|r7 = 0\l}"];
Node_19 [shape=record,label="{19\:\ 0x00b2|PHI: r7 \l  PHI: (r7v4 int) = (r7v9 int), (r7v10 int) binds: [B:18:0x00b1, B:17:0x00ac] A[DONT_GENERATE, DONT_INLINE]\l|r6.CodeAccuracy = r7\lr6.isAddressGenerated = false\ljava.lang.StringBuilder r7 = new java.lang.StringBuilder()\lr7.append(r6.CodeLatitude)\lr7.append(\", \")\lr7.append(r6.CodeLongitude)\lr6.CodeLatLon = r7.toString()\lupdateAddressControls()\lSetCurrentAddressFromRequest()\lcom.ghanapostgps.ghanapost.model.EventsBuss$PostMsgToFragment r7 = new com.ghanapostgps.ghanapost.model.EventsBuss.PostMsgToFragment(\"settab\")\lcom.ghanapostgps.ghanapost.application.GlobalBus.getsBus().post(r7)\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.ghanapostgps.ghanapost.fragments.LocationFragment.getMessage((r6v0 'this' com.ghanapostgps.ghanapost.fragments.LocationFragment A[IMMUTABLE_TYPE, THIS]), (r7v0 com.ghanapostgps.ghanapost.model.EventsBuss$PopulateLocationFragment A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, com.squareup.otto.Subscribe, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
}

