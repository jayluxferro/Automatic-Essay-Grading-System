digraph "CFG forcom.ghanapostgps.ghanapost.fragments.MapFragment.setLocationFromDB(Ljava\/util\/HashMap;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.LocationRequestView.setVisibility(8)\lr4.CodeDigitalAddress = r5.get(\"GPSName\")\lr4.CodeLatitude = java.lang.Double.valueOf(java.lang.Double.parseDouble(r5.get(\"Latitude\")))\lr4.CodeLongitude = java.lang.Double.valueOf(java.lang.Double.parseDouble(r5.get(\"Longitude\")))\ljava.lang.Object[] r1 = new java.lang.Object[]\{r4.CodeLatitude, r4.CodeLongitude\}\lr4.CodeLatLon = java.lang.String.format(\"%f,%f\", r1)\l}"];
Node_1 [shape=record,label="{1\:\ 0x004c|if (r4.CurrentAccuracy \< 1) goto L_0x0051\l}"];
Node_2 [shape=record,label="{2\:\ 0x004e|int r0 = r4.CurrentAccuracy\l}"];
Node_3 [shape=record,label="{3\:\ 0x0051|r0 = \-2\l}"];
Node_4 [shape=record,label="{4\:\ 0x0052|PHI: r0 \l  PHI: (r0v17 int) = (r0v28 int), (r0v29 int) binds: [B:3:0x0051, B:2:0x004e] A[DONT_GENERATE, DONT_INLINE]\l|r4.CodeAccuracy = r0\lr4.CodePostCode = r5.get(\"PostCode\")\lr4.CodeRegion = r5.get(\"Region\")\lr4.CodeDistrict = r5.get(\"District\")\lr4.CodeArea = \"\"\ljava.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(\"GH\-\")\lr5.append(r4.CodeDigitalAddress)\lr4.CodeUniversalAddress = r5.toString()\lr4.CodeCountry = \"Ghana\"\lr4.CodeStreetAddress = \"\"\lSetCurrentAddressFromRequest()\lsendMessageToLocation()\lcallAsaaseGetAddressSilent(r4.CodeLatitude, r4.CodeLongitude)\l}"];
Node_5 [shape=record,label="{5\:\ 0x00a0|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.ghanapostgps.ghanapost.fragments.MapFragment.setLocationFromDB((r4v0 'this' com.ghanapostgps.ghanapost.fragments.MapFragment A[IMMUTABLE_TYPE, THIS]), (r5v0 java.util.HashMap\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/HashMap\<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

