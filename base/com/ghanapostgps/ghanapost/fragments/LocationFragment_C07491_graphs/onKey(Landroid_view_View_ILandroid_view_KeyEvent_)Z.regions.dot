digraph "CFG forcom.ghanapostgps.ghanapost.fragments.LocationFragment.1.onKey(Landroid\/view\/View;ILandroid\/view\/KeyEvent;)Z" {
subgraph cluster_Region_1511449433 {
label = "R(1:(2:(1:7)|(2:4|5)))";
node [shape=record,color=blue];
subgraph cluster_Region_2027503931 {
label = "R(2:(1:7)|(2:4|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1510199504 {
label = "IF [B:1:0x0004, B:3:0x0008] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r3.getAction() != 0) goto L_?\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|ADDED_TO_REGION\l|if (r2 != 66) goto L_?\l}"];
subgraph cluster_Region_1813595080 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_33061177 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|com.ghanapostgps.ghanapost.fragments.LocationFragment.this.searchAddress()\lcom.ghanapostgps.ghanapost.util.AsaaseLog.write(com.ghanapostgps.ghanapost.fragments.LocationFragment.this.getContext(), com.ghanapostgps.ghanapost.util.Const.GPSViewSearchEnter)\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|RETURN\l|return true\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{public boolean com.ghanapostgps.ghanapost.fragments.LocationFragment.1.onKey((r0v0 'this' com.ghanapostgps.ghanapost.fragments.LocationFragment$1 A[IMMUTABLE_TYPE, THIS]), (r1v0 android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 android.view.KeyEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_0 -> Node_1;
Node_2 -> Node_3;
}

