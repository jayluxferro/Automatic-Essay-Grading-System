digraph "CFG forcom.ghanapostgps.ghanapost.UserLoginTelephone.GetMSISDN()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r0 = r4.telephoneTxt.getText().toString()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|if (r0.equals(\"\") != false) goto L_0x006c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|java.lang.String r1 = com.ghanapostgps.ghanapost.util.Utils.getUserCountryCode(r4)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|if (r1.equals(\"eq\") == false) goto L_0x0021\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|java.lang.String r1 = \"240\"\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021}"];
Node_6 [shape=record,label="{6\:\ 0x0027|if (r1.equals(\"lr\") == false) goto L_0x002c\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|java.lang.String r1 = \"231\"\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|java.lang.String r1 = \"233\"\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|PHI: r1 \l  PHI: (r1v3 java.lang.String) = (r1v5 java.lang.String), (r1v6 java.lang.String), (r1v7 java.lang.String) binds: [B:8:0x002c, B:7:0x0029, B:4:0x001e] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.String r0 = r0.replace(\"+\", \"\").replace(\"\-\", \"\").replace(\"(\", \"\").replace(\" \", \"\")\l}"];
Node_10 [shape=record,label="{10\:\ 0x0054|if (r0.startsWith(\"0\") == false) goto L_0x006b\l}"];
Node_11 [shape=record,label="{11\:\ 0x0056|java.lang.String r0 = r0.substring(1)\ljava.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(r1)\lr2.append(r0)\l}"];
Node_12 [shape=record,label="{12\:\ 0x006a|RETURN\l|return r2.toString()\l}"];
Node_13 [shape=record,label="{13\:\ 0x006b|RETURN\l|return r0\l}"];
Node_14 [shape=record,label="{14\:\ 0x006c|RETURN\l|return \"\"\l}"];
MethodNode[shape=record,label="{private java.lang.String com.ghanapostgps.ghanapost.UserLoginTelephone.GetMSISDN((r4v0 'this' com.ghanapostgps.ghanapost.UserLoginTelephone A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
}

