digraph "CFG forcom.ghanapostgps.ghanapost.util.Utils.getMapboxAccessToken(Landroid\/content\/Context;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ Exception \-\> 0x0013 \}\lSplitter:B:0:0x0000\l|java.lang.String r0 = com.mapbox.mapboxsdk.Mapbox.getAccessToken()     \/\/ Catch:\{ Exception \-\> 0x0013 \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|Catch:\{ Exception \-\> 0x0013 \}\l|if (r0 == null) goto L_0x000d     \/\/ Catch:\{ Exception \-\> 0x0013 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|Catch:\{ Exception \-\> 0x0013 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|Catch:\{ Exception \-\> 0x0013 \}\l|if (r0.isEmpty() != false) goto L_0x000d     \/\/ Catch:\{ Exception \-\> 0x0013 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|RETURN\lCatch:\{ Exception \-\> 0x0013 \}\l|return r0     \/\/ Catch:\{ Exception \-\> 0x0013 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|Catch:\{ Exception \-\> 0x0013 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|Catch:\{ Exception \-\> 0x0013 \}\l|throw new java.lang.IllegalArgumentException()     \/\/ Catch:\{ Exception \-\> 0x0013 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|int r0 = r4.getResources().getIdentifier(\"access_token\", \"string\", r4.getPackageName())\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lExcHandler: Exception (unused java.lang.Exception)\lSplitter:B:0:0x0000\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|if (r0 == 0) goto L_0x002b\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026}"];
Node_12 [shape=record,label="{12\:\ 0x002b|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return r4.getString(r0)\l}"];
MethodNode[shape=record,label="{public static java.lang.String com.ghanapostgps.ghanapost.util.Utils.getMapboxAccessToken((r4v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_9;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_10;
Node_9 -> Node_8;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
}

