digraph "CFG forcom.ghanapostgps.ghanapost.util.ZipUnzip.unzip(Ljava\/io\/InputStream;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\" \l0x0002: INVOKE  (r6 I:java.lang.String), (r0 I:java.lang.String) com.ghanapostgps.ghanapost.util.ZipUnzip.dirChecker(java.lang.String, java.lang.String):void type: STATIC \l0x0005: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (10240(0x2800, float:1.4349E\-41) ?[int, float, short, byte, char])\l \l0x0007: NEW_ARRAY  (r0 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|SYNTHETIC\lSplitter:B:1:0x0009\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0009\l|0x0009: NEW_INSTANCE  (r1 I:java.util.zip.ZipInputStream) =  java.util.zip.ZipInputStream A[Catch:\{ Exception \-\> 0x006e \}, TRY_ENTER]\l0x000b: INVOKE  \l  (r1 I:java.util.zip.ZipInputStream)\l  (r5 I:java.io.InputStream)\l java.util.zip.ZipInputStream.\<init\>(java.io.InputStream):void type: DIRECT A[Catch:\{ Exception \-\> 0x006e \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: INVOKE  (r5 I:java.util.zip.ZipEntry) = (r1 I:java.util.zip.ZipInputStream) java.util.zip.ZipInputStream.getNextEntry():java.util.zip.ZipEntry type: VIRTUAL A[Catch:\{ Exception \-\> 0x006e \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x006a A[Catch:\{ Exception \-\> 0x006e \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: INVOKE  (r2 I:boolean) = (r5 I:java.util.zip.ZipEntry) java.util.zip.ZipEntry.isDirectory():boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x006e \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0022 A[Catch:\{ Exception \-\> 0x006e \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: INVOKE  (r5 I:java.lang.String) = (r5 I:java.util.zip.ZipEntry) java.util.zip.ZipEntry.getName():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x006e \}]\l0x001e: INVOKE  (r6 I:java.lang.String), (r5 I:java.lang.String) com.ghanapostgps.ghanapost.util.ZipUnzip.dirChecker(java.lang.String, java.lang.String):void type: STATIC A[Catch:\{ Exception \-\> 0x006e \}]\l0x0021: GOTO  \-\> 0x000e A[Catch:\{ Exception \-\> 0x006e \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: NEW_INSTANCE  (r2 I:java.io.File) =  java.io.File A[Catch:\{ Exception \-\> 0x006e \}]\l0x0024: INVOKE  (r5 I:java.lang.String) = (r5 I:java.util.zip.ZipEntry) java.util.zip.ZipEntry.getName():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x006e \}]\l0x0028: INVOKE  \l  (r2 I:java.io.File)\l  (r6 I:java.lang.String)\l  (r5 I:java.lang.String)\l java.io.File.\<init\>(java.lang.String, java.lang.String):void type: DIRECT A[Catch:\{ Exception \-\> 0x006e \}]\l0x002b: INVOKE  (r5 I:boolean) = (r2 I:java.io.File) java.io.File.exists():boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x006e \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e A[Catch:\{ Exception \-\> 0x006e \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: INVOKE  (r5 I:boolean) = (r2 I:java.io.File) java.io.File.createNewFile():boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x006e \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0052 A[Catch:\{ Exception \-\> 0x006e \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|0x0037: CONST_STR  (r5 I:java.lang.String) =  \"Decompress\" A[Catch:\{ Exception \-\> 0x006e \}]\l0x0039: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Exception \-\> 0x006e \}]\l0x003b: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Exception \-\> 0x006e \}]\l0x003e: CONST_STR  (r4 I:java.lang.String) =  \"Failed to create file \" A[Catch:\{ Exception \-\> 0x006e \}]\l0x0040: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x006e \}]\l0x0043: INVOKE  (r2 I:java.lang.String) = (r2 I:java.io.File) java.io.File.getName():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x006e \}]\l0x0047: INVOKE  (r3 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x006e \}]\l0x004a: INVOKE  (r2 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x006e \}]\l0x004e: INVOKE  (r5 I:java.lang.String), (r2 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ Exception \-\> 0x006e \}]\l0x0051: GOTO  \-\> 0x000e A[Catch:\{ Exception \-\> 0x006e \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0052|0x0052: NEW_INSTANCE  (r5 I:java.io.FileOutputStream) =  java.io.FileOutputStream A[Catch:\{ Exception \-\> 0x006e \}]\l0x0054: INVOKE  (r5 I:java.io.FileOutputStream), (r2 I:java.io.File) java.io.FileOutputStream.\<init\>(java.io.File):void type: DIRECT A[Catch:\{ Exception \-\> 0x006e \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0057|0x0057: INVOKE  (r2 I:int) = (r1 I:java.util.zip.ZipInputStream), (r0 I:byte[]) java.util.zip.ZipInputStream.read(byte[]):int type: VIRTUAL A[Catch:\{ Exception \-\> 0x006e \}]\l0x005b: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x006e \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x005c|0x005c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0063 A[Catch:\{ Exception \-\> 0x006e \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x005e|0x005e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x006e \}]\l0x005f: INVOKE  \l  (r5 I:java.io.FileOutputStream)\l  (r0 I:byte[])\l  (r3 I:int)\l  (r2 I:int)\l java.io.FileOutputStream.write(byte[], int, int):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x006e \}]\l0x0062: GOTO  \-\> 0x0057 A[Catch:\{ Exception \-\> 0x006e \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0063|0x0063: INVOKE  (r1 I:java.util.zip.ZipInputStream) java.util.zip.ZipInputStream.closeEntry():void type: VIRTUAL A[Catch:\{ Exception \-\> 0x006e \}]\l0x0066: INVOKE  (r5 I:java.io.FileOutputStream) java.io.FileOutputStream.close():void type: VIRTUAL A[Catch:\{ Exception \-\> 0x006e \}]\l0x0069: GOTO  \-\> 0x000e A[Catch:\{ Exception \-\> 0x006e \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x006a|0x006a: INVOKE  (r1 I:java.util.zip.ZipInputStream) java.util.zip.ZipInputStream.close():void type: VIRTUAL A[Catch:\{ Exception \-\> 0x006e \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x006e|ExcHandler: Exception null\lSplitter:B:1:0x0009\l|0x006e: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_21 [shape=record,label="{21\:\ 0x006f|0x006f: CONST_STR  (r6 I:java.lang.String) =  \"Decompress\" \l0x0071: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0073: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0076: CONST_STR  (r1 I:java.lang.String) =  \"unzip: \" \l0x0078: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007b: INVOKE  (r1 I:java.lang.String) = (r5 I:java.lang.Exception) java.lang.Exception.getMessage():java.lang.String type: VIRTUAL \l0x007f: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0082: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0086: INVOKE  (r6 I:java.lang.String), (r0 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l0x0089: INVOKE  (r5 I:java.lang.Exception) java.lang.Exception.printStackTrace():void type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x008c|0x008c: RETURN   \l}"];
MethodNode[shape=record,label="{public static void com.ghanapostgps.ghanapost.util.ZipUnzip.unzip((r5 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_18;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_3;
Node_8 -> Node_9;
Node_9 -> Node_3;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_3;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_14;
Node_17 -> Node_3;
Node_18 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_22;
}

