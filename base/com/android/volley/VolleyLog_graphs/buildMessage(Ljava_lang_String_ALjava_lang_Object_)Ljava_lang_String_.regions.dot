digraph "CFG forcom.android.volley.VolleyLog.buildMessage(Ljava\/lang\/String;[Ljava\/lang\/Object;)Ljava\/lang\/String;" {
subgraph cluster_Region_96508787 {
label = "R(5:(1:1)|2|(1:(1:12)(1:(2:7|1)(1:8)))|9|10)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1110918158 {
label = "IF [B:0:0x0000] THEN: R(1:1) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r9 != null) goto L_0x0003\l}"];
subgraph cluster_Region_1051540101 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|java.lang.String r8 = java.lang.String.format(java.util.Locale.US, r8, r9)\l}"];
}
}
Node_2 [shape=record,label="{2\:\ 0x0009|PHI: r8 \l  PHI: (r8v1 java.lang.String) = (r8v0 java.lang.String), (r8v3 java.lang.String) binds: [B:0:0x0000, B:1:0x0003] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.StackTraceElement[] java.lang.StackTraceElement[] r9 = new java.lang.Throwable().fillInStackTrace().getStackTrace()\ljava.lang.String java.lang.String r0 = \"\<unknown\>\"\lint r2 = 2\l}"];
subgraph cluster_LoopRegion_96248556 {
label = "LOOP:0: (1:(1:12)(1:(2:7|1)(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1226809110 {
label = "R(1:(1:12)(1:(2:7|1)(1:8)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_422362982 {
label = "IF [B:4:0x001c] THEN: R(1:12) ELSE: R(1:(2:7|1)(1:8))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001c|if (r2 \>= r9.length) goto L_0x0066\l}"];
subgraph cluster_Region_837858575 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0066|SYNTHETIC\lEDGE_INSN: B:12:0x0066\-\>B:9:0x0066 ?: BREAK  \l|break\l}"];
}
subgraph cluster_Region_1725876390 {
label = "R(1:(2:7|1)(1:8)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1612437858 {
label = "IF [B:6:0x002a] THEN: R(2:7|1) ELSE: R(1:8) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x002a|if (r9[r2].getClassName().equals(CLASS_NAME) == false) goto L_0x002c\l}"];
subgraph cluster_Region_1281714131 {
label = "R(2:7|1)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002c|EDGE_INSN: B:7:0x002c\-\>B:9:0x0066 ?: BREAK  \l|java.lang.String java.lang.String r0 = r9[r2].getClassName()\ljava.lang.String java.lang.String r0 = r0.substring(r0.lastIndexOf(46) + 1)\ljava.lang.String r0 = r0.substring(r0.lastIndexOf(36) + 1) + mil.nga.geopackage.property.PropertyConstants.PROPERTY_DIVIDER + r9[r2].getMethodName()\l}"];
Node_InsnContainer_110476627 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1308583471 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0063|LOOP_END\lLOOP:0: B:3:0x001a\-\>B:8:0x0063\l|r2++\l}"];
}
}
}
}
}
}
Node_9 [shape=record,label="{9\:\ 0x0066|EDGE_INSN: B:7:0x002c\-\>B:9:0x0066 ?: BREAK  \lEDGE_INSN: B:12:0x0066\-\>B:9:0x0066 ?: BREAK  \lPHI: r0 \l  PHI: (r0v1 java.lang.String) = (r0v0 java.lang.String), (r0v7 java.lang.String) binds: [B:12:0x0066, B:7:0x002c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0084|RETURN\l|return java.lang.String.format(java.util.Locale.US, \"[%d] %s: %s\", new java.lang.Object[]\{java.lang.Long.valueOf(java.lang.Thread.currentThread().getId()), r0, r8\})\l}"];
}
Node_3 [shape=record,color=red,label="{3\:\ 0x001a|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v3 int) binds: [B:2:0x0009, B:8:0x0063] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x001a\-\>B:8:0x0063\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001e}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x002c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static java.lang.String com.android.volley.VolleyLog.buildMessage((r8v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2[style=dashed];
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_12 -> Node_9;
Node_6 -> Node_8[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_9;
Node_8 -> Node_3;
Node_9 -> Node_10;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_11 -> Node_7;
}

