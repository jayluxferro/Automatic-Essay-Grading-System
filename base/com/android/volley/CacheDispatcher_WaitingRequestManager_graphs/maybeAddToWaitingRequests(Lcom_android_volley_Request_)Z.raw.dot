digraph "CFG forcom.android.volley.CacheDispatcher.WaitingRequestManager.maybeAddToWaitingRequests(Lcom\/android\/volley\/Request;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r0 I:java.lang.String) = (r6 I:com.android.volley.Request) com.android.volley.Request.getCacheKey():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0052 \}, TRY_ENTER]\l0x0005: IGET  (r1 I:java.util.Map\<java.lang.String, java.util.List\<com.android.volley.Request\<?\>\>\>) = \l  (r5 I:com.android.volley.CacheDispatcher$WaitingRequestManager)\l com.android.volley.CacheDispatcher.WaitingRequestManager.mWaitingRequests java.util.Map A[Catch:\{ all \-\> 0x0052 \}]\l0x0007: INVOKE  (r1 I:boolean) = (r1 I:java.util.Map), (r0 I:java.lang.Object) java.util.Map.containsKey(java.lang.Object):boolean type: INTERFACE A[Catch:\{ all \-\> 0x0052 \}]\l0x000b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0052 \}]\l0x000c: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0052 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003a A[Catch:\{ all \-\> 0x0052 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IGET  (r1 I:java.util.Map\<java.lang.String, java.util.List\<com.android.volley.Request\<?\>\>\>) = \l  (r5 I:com.android.volley.CacheDispatcher$WaitingRequestManager)\l com.android.volley.CacheDispatcher.WaitingRequestManager.mWaitingRequests java.util.Map A[Catch:\{ all \-\> 0x0052 \}]\l0x0011: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.Map), (r0 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0052 \}]\l0x0015: CHECK_CAST  (r1 I:java.util.List) = (java.util.List) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0052 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001e A[Catch:\{ all \-\> 0x0052 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList A[Catch:\{ all \-\> 0x0052 \}]\l0x001b: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0052 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: CONST_STR  (r4 I:java.lang.String) =  \"waiting\-for\-response\" A[Catch:\{ all \-\> 0x0052 \}]\l0x0020: INVOKE  (r6 I:com.android.volley.Request), (r4 I:java.lang.String) com.android.volley.Request.addMarker(java.lang.String):void type: VIRTUAL A[Catch:\{ all \-\> 0x0052 \}]\l0x0023: INVOKE  (r1 I:java.util.List), (r6 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE A[Catch:\{ all \-\> 0x0052 \}]\l0x0026: IGET  (r6 I:java.util.Map\<java.lang.String, java.util.List\<com.android.volley.Request\<?\>\>\>) = \l  (r5 I:com.android.volley.CacheDispatcher$WaitingRequestManager)\l com.android.volley.CacheDispatcher.WaitingRequestManager.mWaitingRequests java.util.Map A[Catch:\{ all \-\> 0x0052 \}]\l0x0028: INVOKE  \l  (r6 I:java.util.Map)\l  (r0 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0052 \}]\l0x002b: SGET  (r6 I:boolean) =  com.android.volley.VolleyLog.DEBUG boolean A[Catch:\{ all \-\> 0x0052 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0038 A[Catch:\{ all \-\> 0x0052 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: CONST_STR  (r6 I:java.lang.String) =  \"Request for cacheKey=%s is in flight, putting on hold.\" A[Catch:\{ all \-\> 0x0052 \}]\l0x0031: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ all \-\> 0x0052 \}]\l0x0033: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0052 \}]\l0x0035: INVOKE  (r6 I:java.lang.String), (r1 I:java.lang.Object[]) com.android.volley.VolleyLog.d(java.lang.String, java.lang.Object[]):void type: STATIC A[Catch:\{ all \-\> 0x0052 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: MONITOR_EXIT  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0039|0x0039: RETURN  (r2 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|SYNTHETIC\lSplitter:B:12:0x003a\l}"];
Node_13 [shape=record,label="{13\:\ ?|Splitter:B:12:0x003a\l|0x003a: IGET  (r1 I:java.util.Map\<java.lang.String, java.util.List\<com.android.volley.Request\<?\>\>\>) = \l  (r5 I:com.android.volley.CacheDispatcher$WaitingRequestManager)\l com.android.volley.CacheDispatcher.WaitingRequestManager.mWaitingRequests java.util.Map A[Catch:\{ all \-\> 0x0052 \}, TRY_ENTER]\l0x003c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0052 \}]\l0x003d: INVOKE  \l  (r1 I:java.util.Map)\l  (r0 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0052 \}]\l0x0040: INVOKE  \l  (r6 I:com.android.volley.Request)\l  (r5 I:com.android.volley.Request$NetworkRequestCompleteListener)\l com.android.volley.Request.setNetworkRequestCompleteListener(com.android.volley.Request$NetworkRequestCompleteListener):void type: VIRTUAL A[Catch:\{ all \-\> 0x0052 \}]\l0x0043: SGET  (r6 I:boolean) =  com.android.volley.VolleyLog.DEBUG boolean A[Catch:\{ all \-\> 0x0052 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0045|0x0045: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0050 A[Catch:\{ all \-\> 0x0052 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0047|0x0047: CONST_STR  (r6 I:java.lang.String) =  \"new request, sending to network %s\" A[Catch:\{ all \-\> 0x0052 \}]\l0x0049: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ all \-\> 0x0052 \}]\l0x004b: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0052 \}]\l0x004d: INVOKE  (r6 I:java.lang.String), (r1 I:java.lang.Object[]) com.android.volley.VolleyLog.d(java.lang.String, java.lang.Object[]):void type: STATIC A[Catch:\{ all \-\> 0x0052 \}, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0050|0x0050: MONITOR_EXIT  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0051|0x0051: RETURN  (r3 I:boolean) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0052|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0052: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_19 [shape=record,label="{19\:\ 0x0053|0x0053: MONITOR_EXIT  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0054|0x0054: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private synchronized boolean com.android.volley.CacheDispatcher.WaitingRequestManager.maybeAddToWaitingRequests((r5 'this' I:com.android.volley.CacheDispatcher$WaitingRequestManager A[IMMUTABLE_TYPE, THIS]), (r6 I:com.android.volley.Request\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/android\/volley\/Request\<, *\>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_18;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_18;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20;
}

