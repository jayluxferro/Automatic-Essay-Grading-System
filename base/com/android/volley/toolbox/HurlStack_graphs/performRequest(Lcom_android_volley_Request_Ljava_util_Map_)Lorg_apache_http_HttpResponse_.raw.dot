digraph "CFG forcom.android.volley.toolbox.HurlStack.performRequest(Lcom\/android\/volley\/Request;Ljava\/util\/Map;)Lorg\/apache\/http\/HttpResponse;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r14 I:java.lang.String) = \l  (r19 I:com.android.volley.Request A[D('request' com.android.volley.Request\<?\>)])\l com.android.volley.Request.getUrl():java.lang.String type: VIRTUAL \l0x0004: NEW_INSTANCE  (r7 I:java.util.HashMap) =  java.util.HashMap \l0x0006: INVOKE  (r7 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0009: INVOKE  (r15 I:java.util.Map) = \l  (r19 I:com.android.volley.Request A[D('request' com.android.volley.Request\<?\>)])\l com.android.volley.Request.getHeaders():java.util.Map type: VIRTUAL \l0x000d: INVOKE  \l  (r7 I:java.util.HashMap A[D('map' java.util.HashMap\<java.lang.String, java.lang.String\>)])\l  (r15 I:java.util.Map)\l java.util.HashMap.putAll(java.util.Map):void type: VIRTUAL \l0x0010: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('additionalHeaders' java.util.Map\<java.lang.String, java.lang.String\>)])\l \l0x0012: INVOKE  \l  (r7 I:java.util.HashMap A[D('map' java.util.HashMap\<java.lang.String, java.lang.String\>)])\l  (r0 I:java.util.Map)\l java.util.HashMap.putAll(java.util.Map):void type: VIRTUAL \l0x0015: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0017: IGET  (r15 I:com.android.volley.toolbox.HurlStack$UrlRewriter) = (r0 I:com.android.volley.toolbox.HurlStack) com.android.volley.toolbox.HurlStack.mUrlRewriter com.android.volley.toolbox.HurlStack$UrlRewriter \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0041 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001b|0x001b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x001d: IGET  (r15 I:com.android.volley.toolbox.HurlStack$UrlRewriter) = (r0 I:com.android.volley.toolbox.HurlStack) com.android.volley.toolbox.HurlStack.mUrlRewriter com.android.volley.toolbox.HurlStack$UrlRewriter \l0x001f: INVOKE  (r13 I:java.lang.String) = \l  (r15 I:com.android.volley.toolbox.HurlStack$UrlRewriter)\l  (r14 I:java.lang.String A[D('url' java.lang.String)])\l com.android.volley.toolbox.HurlStack.UrlRewriter.rewriteUrl(java.lang.String):java.lang.String type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|0x0023: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('rewritten' java.lang.String)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0040 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: NEW_INSTANCE  (r15 I:java.io.IOException) =  java.io.IOException \l0x0027: NEW_INSTANCE  (r16 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0029: INVOKE  (r16 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002c: CONST_STR  (r17 I:java.lang.String) =  \"URL blocked by rewriter: \" \l0x002e: INVOKE  (r16 I:java.lang.StringBuilder) = (r16 I:java.lang.StringBuilder), (r17 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0032: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0034: INVOKE  (r16 I:java.lang.StringBuilder) = \l  (r0 I:java.lang.StringBuilder)\l  (r14 I:java.lang.String A[D('url' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0038: INVOKE  (r16 I:java.lang.String) = (r16 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003c: INVOKE  (r15 I:java.io.IOException), (r16 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x003f|0x003f: THROW  (r15 I:java.lang.Throwable) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0040|0x0040: MOVE  (r14 I:?[OBJECT, ARRAY] A[D('url' java.lang.String)]) = (r13 I:?[OBJECT, ARRAY] A[D('rewritten' java.lang.String)]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0041|0x0041: NEW_INSTANCE  (r8 I:java.net.URL) =  java.net.URL \l0x0043: INVOKE  \l  (r8 I:java.net.URL)\l  (r14 I:java.lang.String A[D('url' java.lang.String)])\l java.net.URL.\<init\>(java.lang.String):void type: DIRECT \l0x0046: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0048: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r19 I:?[OBJECT, ARRAY] A[D('request' com.android.volley.Request\<?\>)])\l \l0x004a: INVOKE  (r2 I:java.net.HttpURLConnection) = \l  (r0 I:com.android.volley.toolbox.HurlStack)\l  (r8 I:java.net.URL A[D('parsedUrl' java.net.URL)])\l  (r1 I:com.android.volley.Request)\l com.android.volley.toolbox.HurlStack.openConnection(java.net.URL, com.android.volley.Request):java.net.HttpURLConnection type: DIRECT \l0x004e: INVOKE  (r15 I:java.util.Set) = \l  (r7 I:java.util.HashMap A[D('map' java.util.HashMap\<java.lang.String, java.lang.String\>)])\l java.util.HashMap.keySet():java.util.Set type: VIRTUAL \l0x0052: INVOKE  (r6 I:java.util.Iterator) = (r15 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x0056|0x0056: INVOKE  (r15 I:boolean) = (r6 I:java.util.Iterator A[D('i$' java.util.Iterator)]) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x005a|0x005a: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x006c \l}"];
Node_10 [shape=record,label="{10\:\ 0x005c|0x005c: INVOKE  (r5 I:java.lang.Object) = (r6 I:java.util.Iterator A[D('i$' java.util.Iterator)]) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0060: CHECK_CAST  (r5 I:java.lang.String) = (java.lang.String) (r5 I:?[OBJECT, ARRAY]) \l0x0062: INVOKE  (r15 I:java.lang.Object) = \l  (r7 I:java.util.HashMap A[D('map' java.util.HashMap\<java.lang.String, java.lang.String\>)])\l  (r5 I:java.lang.Object A[D('headerName' java.lang.String)])\l java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0066: CHECK_CAST  (r15 I:java.lang.String) = (java.lang.String) (r15 I:?[OBJECT, ARRAY]) \l0x0068: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l  (r5 I:java.lang.String A[D('headerName' java.lang.String)])\l  (r15 I:java.lang.String)\l java.net.HttpURLConnection.addRequestProperty(java.lang.String, java.lang.String):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x006c|0x006c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r19 I:?[OBJECT, ARRAY] A[D('request' com.android.volley.Request\<?\>)])\l \l0x006e: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l  (r0 I:com.android.volley.Request)\l com.android.volley.toolbox.HurlStack.setConnectionParametersForRequest(java.net.HttpURLConnection, com.android.volley.Request):void type: STATIC \l0x0071: NEW_INSTANCE  (r9 I:org.apache.http.ProtocolVersion) =  org.apache.http.ProtocolVersion \l0x0073: CONST_STR  (r15 I:java.lang.String) =  \"HTTP\" \l0x0075: CONST  (r16 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0077: CONST  (r17 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0079: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007b: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007d: INVOKE  \l  (r9 I:org.apache.http.ProtocolVersion)\l  (r15 I:java.lang.String)\l  (r0 I:int)\l  (r1 I:int)\l org.apache.http.ProtocolVersion.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0080: INVOKE  (r11 I:int) = \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l java.net.HttpURLConnection.getResponseCode():int type: VIRTUAL \l0x0084: CONST  (r15 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0085|0x0085: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('responseCode' int)]) != (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x008f \l}"];
Node_13 [shape=record,label="{13\:\ 0x0087|0x0087: NEW_INSTANCE  (r15 I:java.io.IOException) =  java.io.IOException \l0x0089: CONST_STR  (r16 I:java.lang.String) =  \"Could not retrieve response code from HttpUrlConnection.\" \l0x008b: INVOKE  (r15 I:java.io.IOException), (r16 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x008e|0x008e: THROW  (r15 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x008f|0x008f: NEW_INSTANCE  (r12 I:org.apache.http.message.BasicStatusLine) =  org.apache.http.message.BasicStatusLine \l0x0091: INVOKE  (r15 I:int) = \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l java.net.HttpURLConnection.getResponseCode():int type: VIRTUAL \l0x0095: INVOKE  (r16 I:java.lang.String) = \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l java.net.HttpURLConnection.getResponseMessage():java.lang.String type: VIRTUAL \l0x0099: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x009b: INVOKE  \l  (r12 I:org.apache.http.message.BasicStatusLine)\l  (r9 I:org.apache.http.ProtocolVersion A[D('protocolVersion' org.apache.http.ProtocolVersion)])\l  (r15 I:int)\l  (r0 I:java.lang.String)\l org.apache.http.message.BasicStatusLine.\<init\>(org.apache.http.ProtocolVersion, int, java.lang.String):void type: DIRECT \l0x009e: NEW_INSTANCE  (r10 I:org.apache.http.message.BasicHttpResponse) =  org.apache.http.message.BasicHttpResponse \l0x00a0: INVOKE  \l  (r10 I:org.apache.http.message.BasicHttpResponse)\l  (r12 I:org.apache.http.StatusLine A[D('responseStatus' org.apache.http.StatusLine)])\l org.apache.http.message.BasicHttpResponse.\<init\>(org.apache.http.StatusLine):void type: DIRECT \l0x00a3: INVOKE  (r15 I:org.apache.http.HttpEntity) = \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l com.android.volley.toolbox.HurlStack.entityFromConnection(java.net.HttpURLConnection):org.apache.http.HttpEntity type: STATIC \l0x00a7: INVOKE  \l  (r10 I:org.apache.http.message.BasicHttpResponse A[D('response' org.apache.http.message.BasicHttpResponse)])\l  (r15 I:org.apache.http.HttpEntity)\l org.apache.http.message.BasicHttpResponse.setEntity(org.apache.http.HttpEntity):void type: VIRTUAL \l0x00aa: INVOKE  (r15 I:java.util.Map) = \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l java.net.HttpURLConnection.getHeaderFields():java.util.Map type: VIRTUAL \l0x00ae: INVOKE  (r15 I:java.util.Set) = (r15 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x00b2: INVOKE  (r6 I:java.util.Iterator A[D('i$' java.util.Iterator)]) = (r15 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_16 [shape=record,label="{16\:\ 0x00b6|0x00b6: INVOKE  (r15 I:boolean) = (r6 I:java.util.Iterator A[D('i$' java.util.Iterator)]) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_17 [shape=record,label="{17\:\ 0x00ba|0x00ba: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x00e7 \l}"];
Node_18 [shape=record,label="{18\:\ 0x00bc|0x00bc: INVOKE  (r4 I:java.lang.Object) = (r6 I:java.util.Iterator A[D('i$' java.util.Iterator)]) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x00c0: CHECK_CAST  (r4 I:java.util.Map$Entry) = (java.util.Map$Entry) (r4 I:?[OBJECT, ARRAY]) \l0x00c2: INVOKE  (r15 I:java.lang.Object) = \l  (r4 I:java.util.Map$Entry A[D('header' java.util.Map$Entry\<java.lang.String, java.util.List\<java.lang.String\>\>)])\l java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l}"];
Node_19 [shape=record,label="{19\:\ 0x00c6|0x00c6: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x00b6 \l}"];
Node_20 [shape=record,label="{20\:\ 0x00c8|0x00c8: NEW_INSTANCE  (r3 I:org.apache.http.message.BasicHeader) =  org.apache.http.message.BasicHeader \l0x00ca: INVOKE  (r15 I:java.lang.Object) = \l  (r4 I:java.util.Map$Entry A[D('header' java.util.Map$Entry\<java.lang.String, java.util.List\<java.lang.String\>\>)])\l java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x00ce: CHECK_CAST  (r15 I:java.lang.String) = (java.lang.String) (r15 I:?[OBJECT, ARRAY]) \l0x00d0: INVOKE  (r16 I:java.lang.Object) = \l  (r4 I:java.util.Map$Entry A[D('header' java.util.Map$Entry\<java.lang.String, java.util.List\<java.lang.String\>\>)])\l java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x00d4: CHECK_CAST  (r16 I:java.util.List) = (java.util.List) (r16 I:?[OBJECT, ARRAY]) \l0x00d6: CONST  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d8: INVOKE  (r16 I:java.lang.Object) = (r16 I:java.util.List), (r17 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x00dc: CHECK_CAST  (r16 I:java.lang.String) = (java.lang.String) (r16 I:?[OBJECT, ARRAY]) \l0x00de: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x00e0: INVOKE  \l  (r3 I:org.apache.http.message.BasicHeader)\l  (r15 I:java.lang.String)\l  (r0 I:java.lang.String)\l org.apache.http.message.BasicHeader.\<init\>(java.lang.String, java.lang.String):void type: DIRECT \l0x00e3: INVOKE  \l  (r10 I:org.apache.http.message.BasicHttpResponse A[D('response' org.apache.http.message.BasicHttpResponse)])\l  (r3 I:org.apache.http.Header A[D('h' org.apache.http.Header)])\l org.apache.http.message.BasicHttpResponse.addHeader(org.apache.http.Header):void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x00e7|0x00e7: RETURN  \l  (r10 I:org.apache.http.HttpResponse A[D('response' org.apache.http.message.BasicHttpResponse)])\l \l}"];
MethodNode[shape=record,label="{public org.apache.http.HttpResponse com.android.volley.toolbox.HurlStack.performRequest((r18 'this' I:com.android.volley.toolbox.HurlStack A[IMMUTABLE_TYPE, THIS]), (r19 I:com.android.volley.Request\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:java.util.Map\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0023\-0x0041: r13 'rewritten' java.lang.String\l  0x0062\-0x006c: r5 'headerName' java.lang.String\l  0x00e3\-0x00e7: r3 'h' org.apache.http.Header\l  0x00c2\-0x00e7: r4 'header' java.util.Map$Entry\<java.lang.String, java.util.List\<java.lang.String\>\>\l  0x004e\-0x00e7: r2 'connection' java.net.HttpURLConnection\l  0x0056\-0x00e7: r6 'i$' java.util.Iterator\l  0x0009\-0x00e7: r7 'map' java.util.HashMap\<java.lang.String, java.lang.String\>\l  0x0046\-0x00e7: r8 'parsedUrl' java.net.URL\l  0x0080\-0x00e7: r9 'protocolVersion' org.apache.http.ProtocolVersion\l  0x00a3\-0x00e7: r10 'response' org.apache.http.message.BasicHttpResponse\l  0x0084\-0x00e7: r11 'responseCode' int\l  0x009e\-0x00e7: r12 'responseStatus' org.apache.http.StatusLine\l  0x0004\-0x00e7: r14 'url' java.lang.String\l  0x0000\-0x00e7: r19 'request' com.android.volley.Request\<?\>\l  0x0000\-0x00e7: r20 'additionalHeaders' java.util.Map\<java.lang.String, java.lang.String\>\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, com.android.volley.AuthFailureError]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/android\/volley\/Request, \<*\>;, Ljava\/util\/Map, \<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;), Lorg\/apache\/http\/HttpResponse;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_8;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_16;
Node_19 -> Node_20[style=dashed];
Node_20 -> Node_16;
}

