digraph "CFG forcom.android.volley.toolbox.HurlStack.openConnection(Ljava\/net\/URL;Lcom\/android\/volley\/Request;)Ljava\/net\/HttpURLConnection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.net.HttpURLConnection) = \l  (r1 I:com.android.volley.toolbox.HurlStack)\l  (r2 I:java.net.URL)\l com.android.volley.toolbox.HurlStack.createConnection(java.net.URL):java.net.HttpURLConnection type: VIRTUAL \l0x0004: INVOKE  (r3 I:int) = (r3 I:com.android.volley.Request) com.android.volley.Request.getTimeoutMs():int type: VIRTUAL \l0x0008: INVOKE  (r0 I:java.net.HttpURLConnection), (r3 I:int) java.net.HttpURLConnection.setConnectTimeout(int):void type: VIRTUAL \l0x000b: INVOKE  (r0 I:java.net.HttpURLConnection), (r3 I:int) java.net.HttpURLConnection.setReadTimeout(int):void type: VIRTUAL \l0x000e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000f: INVOKE  (r0 I:java.net.HttpURLConnection), (r3 I:boolean) java.net.HttpURLConnection.setUseCaches(boolean):void type: VIRTUAL \l0x0012: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0013: INVOKE  (r0 I:java.net.HttpURLConnection), (r3 I:boolean) java.net.HttpURLConnection.setDoInput(boolean):void type: VIRTUAL \l0x0016: CONST_STR  (r3 I:java.lang.String) =  \"https\" \l0x0018: INVOKE  (r2 I:java.lang.String) = (r2 I:java.net.URL) java.net.URL.getProtocol():java.lang.String type: VIRTUAL \l0x001c: INVOKE  (r2 I:boolean) = (r3 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0020|0x0020: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0022|0x0022: IGET  (r2 I:javax.net.ssl.SSLSocketFactory) = (r1 I:com.android.volley.toolbox.HurlStack) com.android.volley.toolbox.HurlStack.mSslSocketFactory javax.net.ssl.SSLSocketFactory \l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|0x0024: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x002e \l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|0x0026: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0027: CHECK_CAST  (r2 I:javax.net.ssl.HttpsURLConnection) = (javax.net.ssl.HttpsURLConnection) (r2 I:?[OBJECT, ARRAY]) \l0x0029: IGET  (r3 I:javax.net.ssl.SSLSocketFactory) = (r1 I:com.android.volley.toolbox.HurlStack) com.android.volley.toolbox.HurlStack.mSslSocketFactory javax.net.ssl.SSLSocketFactory \l0x002b: INVOKE  \l  (r2 I:javax.net.ssl.HttpsURLConnection)\l  (r3 I:javax.net.ssl.SSLSocketFactory)\l javax.net.ssl.HttpsURLConnection.setSSLSocketFactory(javax.net.ssl.SSLSocketFactory):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|0x002e: RETURN  (r0 I:java.net.HttpURLConnection) \l}"];
MethodNode[shape=record,label="{private java.net.HttpURLConnection com.android.volley.toolbox.HurlStack.openConnection((r1 'this' I:com.android.volley.toolbox.HurlStack A[IMMUTABLE_TYPE, THIS]), (r2 I:java.net.URL A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.android.volley.Request\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/net\/URL;, Lcom\/android\/volley\/Request\<, *\>;), Ljava\/net\/HttpURLConnection;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
}

