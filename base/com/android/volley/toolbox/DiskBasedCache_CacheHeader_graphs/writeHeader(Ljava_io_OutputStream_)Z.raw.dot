digraph "CFG forcom.android.volley.toolbox.DiskBasedCache.CacheHeader.writeHeader(Ljava\/io\/OutputStream;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (538247942(0x20150306, float:1.2621791E\-19) ?[int, float, short, byte, char])\l \l0x0003: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|SYNTHETIC\lSplitter:B:1:0x0004\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0004\l|0x0004: INVOKE  (r5 I:java.io.OutputStream), (r0 I:int) com.android.volley.toolbox.DiskBasedCache.writeInt(java.io.OutputStream, int):void type: STATIC A[Catch:\{ IOException \-\> 0x0035 \}, TRY_ENTER]\l0x0007: IGET  (r0 I:java.lang.String) = \l  (r4 I:com.android.volley.toolbox.DiskBasedCache$CacheHeader)\l com.android.volley.toolbox.DiskBasedCache.CacheHeader.key java.lang.String A[Catch:\{ IOException \-\> 0x0035 \}]\l0x0009: INVOKE  (r5 I:java.io.OutputStream), (r0 I:java.lang.String) com.android.volley.toolbox.DiskBasedCache.writeString(java.io.OutputStream, java.lang.String):void type: STATIC A[Catch:\{ IOException \-\> 0x0035 \}]\l0x000c: IGET  (r0 I:java.lang.String) = \l  (r4 I:com.android.volley.toolbox.DiskBasedCache$CacheHeader)\l com.android.volley.toolbox.DiskBasedCache.CacheHeader.etag java.lang.String A[Catch:\{ IOException \-\> 0x0035 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0013 A[Catch:\{ IOException \-\> 0x0035 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: CONST_STR  (r0 I:java.lang.String) =  \"\" A[Catch:\{ IOException \-\> 0x0035 \}]\l0x0012: GOTO  \-\> 0x0015 A[Catch:\{ IOException \-\> 0x0035 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IGET  (r0 I:java.lang.String) = \l  (r4 I:com.android.volley.toolbox.DiskBasedCache$CacheHeader)\l com.android.volley.toolbox.DiskBasedCache.CacheHeader.etag java.lang.String A[Catch:\{ IOException \-\> 0x0035 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INVOKE  (r5 I:java.io.OutputStream), (r0 I:java.lang.String) com.android.volley.toolbox.DiskBasedCache.writeString(java.io.OutputStream, java.lang.String):void type: STATIC A[Catch:\{ IOException \-\> 0x0035 \}]\l0x0018: IGET  (r2 I:long) = \l  (r4 I:com.android.volley.toolbox.DiskBasedCache$CacheHeader)\l com.android.volley.toolbox.DiskBasedCache.CacheHeader.serverDate long A[Catch:\{ IOException \-\> 0x0035 \}]\l0x001a: INVOKE  (r5 I:java.io.OutputStream), (r2 I:long) com.android.volley.toolbox.DiskBasedCache.writeLong(java.io.OutputStream, long):void type: STATIC A[Catch:\{ IOException \-\> 0x0035 \}]\l0x001d: IGET  (r2 I:long) = \l  (r4 I:com.android.volley.toolbox.DiskBasedCache$CacheHeader)\l com.android.volley.toolbox.DiskBasedCache.CacheHeader.lastModified long A[Catch:\{ IOException \-\> 0x0035 \}]\l0x001f: INVOKE  (r5 I:java.io.OutputStream), (r2 I:long) com.android.volley.toolbox.DiskBasedCache.writeLong(java.io.OutputStream, long):void type: STATIC A[Catch:\{ IOException \-\> 0x0035 \}]\l0x0022: IGET  (r2 I:long) = \l  (r4 I:com.android.volley.toolbox.DiskBasedCache$CacheHeader)\l com.android.volley.toolbox.DiskBasedCache.CacheHeader.ttl long A[Catch:\{ IOException \-\> 0x0035 \}]\l0x0024: INVOKE  (r5 I:java.io.OutputStream), (r2 I:long) com.android.volley.toolbox.DiskBasedCache.writeLong(java.io.OutputStream, long):void type: STATIC A[Catch:\{ IOException \-\> 0x0035 \}]\l0x0027: IGET  (r2 I:long) = \l  (r4 I:com.android.volley.toolbox.DiskBasedCache$CacheHeader)\l com.android.volley.toolbox.DiskBasedCache.CacheHeader.softTtl long A[Catch:\{ IOException \-\> 0x0035 \}]\l0x0029: INVOKE  (r5 I:java.io.OutputStream), (r2 I:long) com.android.volley.toolbox.DiskBasedCache.writeLong(java.io.OutputStream, long):void type: STATIC A[Catch:\{ IOException \-\> 0x0035 \}]\l0x002c: IGET  (r0 I:java.util.List\<com.android.volley.Header\>) = \l  (r4 I:com.android.volley.toolbox.DiskBasedCache$CacheHeader)\l com.android.volley.toolbox.DiskBasedCache.CacheHeader.allResponseHeaders java.util.List A[Catch:\{ IOException \-\> 0x0035 \}]\l0x002e: INVOKE  (r0 I:java.util.List), (r5 I:java.io.OutputStream) com.android.volley.toolbox.DiskBasedCache.writeHeaderList(java.util.List, java.io.OutputStream):void type: STATIC A[Catch:\{ IOException \-\> 0x0035 \}]\l0x0031: INVOKE  (r5 I:java.io.OutputStream) java.io.OutputStream.flush():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0035 \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|0x0034: RETURN  (r1 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0035|ExcHandler: IOException null\lSplitter:B:1:0x0004\l|0x0035: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|0x0036: CONST_STR  (r0 I:java.lang.String) =  \"%s\" \l0x0038: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x003a: INVOKE  (r5 I:java.lang.String) = (r5 I:java.io.IOException) java.io.IOException.toString():java.lang.String type: VIRTUAL \l0x003e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003f: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x0041: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.Object[]) com.android.volley.VolleyLog.d(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0044|0x0044: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean com.android.volley.toolbox.DiskBasedCache.CacheHeader.writeHeader((r4 'this' I:com.android.volley.toolbox.DiskBasedCache$CacheHeader A[IMMUTABLE_TYPE, THIS]), (r5 I:java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

