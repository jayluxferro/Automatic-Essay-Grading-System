digraph "CFG forcom.android.volley.toolbox.DiskBasedCache.readString(Ljava\/io\/InputStream;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:long) = (r4 I:java.io.InputStream A[D('is' java.io.InputStream)]) com.android.volley.toolbox.DiskBasedCache.readLong(java.io.InputStream):long type: STATIC \l0x0004: CAST  (r1 I:int) = (int) (r2 I:long) \l0x0005: INVOKE  (r0 I:byte[]) = \l  (r4 I:java.io.InputStream A[D('is' java.io.InputStream)])\l  (r1 I:int A[D('n' int)])\l com.android.volley.toolbox.DiskBasedCache.streamToBytes(java.io.InputStream, int):byte[] type: STATIC \l0x0009: NEW_INSTANCE  (r2 I:java.lang.String) =  java.lang.String \l0x000b: CONST_STR  (r3 I:java.lang.String) =  \"UTF\-8\" \l0x000d: INVOKE  \l  (r2 I:java.lang.String)\l  (r0 I:byte[] A[D('b' byte[])])\l  (r3 I:java.lang.String)\l java.lang.String.\<init\>(byte[], java.lang.String):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: RETURN  (r2 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{static java.lang.String com.android.volley.toolbox.DiskBasedCache.readString((r4 I:java.io.InputStream A[D('is' java.io.InputStream), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0009\-0x0010: r0 'b' byte[]\l  0x0005\-0x0010: r1 'n' int\l  ?\-0x0010: r4 'is' java.io.InputStream\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

