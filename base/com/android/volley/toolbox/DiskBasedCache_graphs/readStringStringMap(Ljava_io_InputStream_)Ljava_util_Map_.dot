digraph "CFG forcom.android.volley.toolbox.DiskBasedCache.readStringStringMap(Ljava\/io\/InputStream;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r3 = readInt(r6)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r3 != 0) goto L_0x0023\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|java.util.Map r2 = java.util.Collections.emptyMap()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|PHI: r2 \l  PHI: (r2v1 'result' java.util.Map\<java.lang.String, java.lang.String\>) = (r2v0 'result' java.util.Map\<java.lang.String, java.lang.String\>), (r2v2 'result' java.util.Map\<java.lang.String, java.lang.String\>) binds: [B:6:0x0023, B:2:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|r0 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:3:0x000a, B:5:0x000d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000b\-\>B:5:0x000d\l|if (r0 \>= r3) goto L_0x0029\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|LOOP_END\lLOOP:0: B:4:0x000b\-\>B:5:0x000d\l|r2.put(readString(r6).intern(), readString(r6).intern())\lint r0 = r0 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|java.util.HashMap r2 = new java.util.HashMap\<\>(r3)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|RETURN\l|return r2\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static java.util.Map\<java.lang.String, java.lang.String\> com.android.volley.toolbox.DiskBasedCache.readStringStringMap((r6v0 'is' java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/io\/InputStream;, ), Ljava\/util\/Map, \<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_4;
Node_6 -> Node_3;
Node_8 -> Node_7;
}

