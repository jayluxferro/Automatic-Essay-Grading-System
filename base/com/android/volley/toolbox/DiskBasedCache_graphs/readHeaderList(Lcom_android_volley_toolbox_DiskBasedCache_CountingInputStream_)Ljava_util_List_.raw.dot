digraph "CFG forcom.android.volley.toolbox.DiskBasedCache.readHeaderList(Lcom\/android\/volley\/toolbox\/DiskBasedCache$CountingInputStream;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r6 I:java.io.InputStream) com.android.volley.toolbox.DiskBasedCache.readInt(java.io.InputStream):int type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:9:0x0031 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r1 I:java.util.List) =  java.util.Collections.emptyList():java.util.List type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x000f: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:8:0x0030 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: INVOKE  (r3 I:java.lang.String) = \l  (r6 I:com.android.volley.toolbox.DiskBasedCache$CountingInputStream)\l com.android.volley.toolbox.DiskBasedCache.readString(com.android.volley.toolbox.DiskBasedCache$CountingInputStream):java.lang.String type: STATIC \l0x0019: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String) java.lang.String.intern():java.lang.String type: VIRTUAL \l0x001d: INVOKE  (r4 I:java.lang.String) = \l  (r6 I:com.android.volley.toolbox.DiskBasedCache$CountingInputStream)\l com.android.volley.toolbox.DiskBasedCache.readString(com.android.volley.toolbox.DiskBasedCache$CountingInputStream):java.lang.String type: STATIC \l0x0021: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String) java.lang.String.intern():java.lang.String type: VIRTUAL \l0x0025: NEW_INSTANCE  (r5 I:com.android.volley.Header) =  com.android.volley.Header \l0x0027: INVOKE  \l  (r5 I:com.android.volley.Header)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l com.android.volley.Header.\<init\>(java.lang.String, java.lang.String):void type: DIRECT \l0x002a: INVOKE  (r1 I:java.util.List), (r5 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x002d: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: RETURN  (r1 I:java.util.List\<com.android.volley.Header\>) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: NEW_INSTANCE  (r6 I:java.io.IOException) =  java.io.IOException \l0x0033: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0035: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0038: CONST_STR  (r2 I:java.lang.String) =  \"readHeaderList size=\" \l0x003a: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003d: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0040: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0044: INVOKE  (r6 I:java.io.IOException), (r0 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0047|0x0047: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{static java.util.List\<com.android.volley.Header\> com.android.volley.toolbox.DiskBasedCache.readHeaderList((r6 I:com.android.volley.toolbox.DiskBasedCache$CountingInputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/android\/volley\/toolbox\/DiskBasedCache$CountingInputStream;, ), Ljava\/util\/List\<, Lcom\/android\/volley\/Header;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_6;
Node_9 -> Node_10;
}

