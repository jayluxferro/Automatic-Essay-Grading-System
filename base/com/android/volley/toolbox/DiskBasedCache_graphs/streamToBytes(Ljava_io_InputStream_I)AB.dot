digraph "CFG forcom.android.volley.toolbox.DiskBasedCache.streamToBytes(Ljava\/io\/InputStream;I)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|byte[] r0 = new byte[r7]\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|LOOP_START\lPHI: r2 \l  PHI: (r2v1 'pos' int) = (r2v0 'pos' int), (r2v2 'pos' int) binds: [B:0:0x0000, B:4:0x000e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:4:0x000e\l|if (r2 \>= r7) goto L_0x0010\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|int r1 = r6.read(r0, r2, r7 \- r2)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r1 == \-1) goto L_0x0010\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|LOOP_END\lLOOP:0: B:1:0x0003\-\>B:4:0x000e\l|int r2 = r2 + r1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r2 == r7) goto L_0x003b\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012}"];
Node_7 [shape=record,label="{7\:\ 0x003a|throw new java.io.IOException(new java.lang.StringBuilder().append(\"Expected \").append(r7).append(\" bytes, read \").append(r2).append(\" bytes\").toString())\l}"];
Node_8 [shape=record,label="{8\:\ 0x003b|RETURN\l|return r0\l}"];
Node_9 [shape=record,label="{9\:\ 0x0010|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0010|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static byte[] com.android.volley.toolbox.DiskBasedCache.streamToBytes((r6v0 'in' java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'length' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_1;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_9 -> Node_5;
Node_10 -> Node_5;
}

