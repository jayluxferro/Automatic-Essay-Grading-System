digraph "CFG forcom.android.volley.toolbox.DiskBasedCache.writeStringStringMap(Ljava\/util\/Map;Ljava\/io\/OutputStream;)V" {
subgraph cluster_Region_1468991140 {
label = "R(1:(2:(3:1|(1:4)|8)|(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_492477691 {
label = "R(2:(3:1|(1:4)|8)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1307368392 {
label = "IF [B:0:0x0000] THEN: R(3:1|(1:4)|8) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r3 != null) goto L_0x0002\l}"];
subgraph cluster_Region_2114847701 {
label = "R(3:1|(1:4)|8)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|writeInt(r4, r3.size())\ljava.util.Iterator r1 = r3.entrySet().iterator()\l}"];
subgraph cluster_LoopRegion_1360760982 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0015|if (r1.hasNext() != false) goto L_0x0017\l}"];
subgraph cluster_Region_418345738 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0017|LOOP_END\lLOOP:0: B:2:0x0011\-\>B:4:0x0017\l|java.util.Map$Entry r0 = r1.next()\lwriteString(r4, r0.getKey())\lwriteString(r4, r0.getValue())\l}"];
}
}
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_863422788 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0030|writeInt(r4, 0)\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0011|LOOP_START\lLOOP:0: B:2:0x0011\-\>B:4:0x0017\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0034|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
MethodNode[shape=record,label="{static void com.android.volley.toolbox.DiskBasedCache.writeStringStringMap((r3v0 'map' java.util.Map\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'os' java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Map, \<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;, Ljava\/io\/OutputStream;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_5[style=dashed];
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_2;
Node_5 -> Node_7;
Node_2 -> Node_3;
Node_6 -> Node_8;
}

