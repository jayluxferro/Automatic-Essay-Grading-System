digraph "CFG forcom.android.volley.toolbox.DiskBasedCache.streamToBytes(Lcom\/android\/volley\/toolbox\/DiskBasedCache$CountingInputStream;J)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:long) = \l  (r5 I:com.android.volley.toolbox.DiskBasedCache$CountingInputStream)\l com.android.volley.toolbox.DiskBasedCache.CountingInputStream.bytesRemaining():long type: VIRTUAL \l0x0004: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0006: CMP_L  (r2 I:int) = (r6 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r2 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CMP_L  (r2 I:int) = (r6 I:long), (r0 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r2 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: CAST  (r2 I:int) = (int) (r6 I:long) \l0x000f: CAST  (r3 I:long) = (long) (r2 I:int) \l0x0010: CMP_L  (r3 I:int) = (r3 I:long), (r6 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: NEW_ARRAY  (r6 I:byte[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0016: NEW_INSTANCE  (r7 I:java.io.DataInputStream) =  java.io.DataInputStream \l0x0018: INVOKE  (r7 I:java.io.DataInputStream), (r5 I:java.io.InputStream) java.io.DataInputStream.\<init\>(java.io.InputStream):void type: DIRECT \l0x001b: INVOKE  (r7 I:java.io.DataInputStream), (r6 I:byte[]) java.io.DataInputStream.readFully(byte[]):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: RETURN  (r6 I:byte[]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: NEW_INSTANCE  (r5 I:java.io.IOException) =  java.io.IOException \l0x0021: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0023: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0026: CONST_STR  (r3 I:java.lang.String) =  \"streamToBytes length=\" \l0x0028: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002b: INVOKE  (r2 I:java.lang.StringBuilder), (r6 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x002e: CONST_STR  (r6 I:java.lang.String) =  \", maxLength=\" \l0x0030: INVOKE  (r2 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0033: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x0036: INVOKE  (r6 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003a: INVOKE  (r5 I:java.io.IOException), (r6 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|0x003d: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{static byte[] com.android.volley.toolbox.DiskBasedCache.streamToBytes((r5 I:com.android.volley.toolbox.DiskBasedCache$CountingInputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

