digraph "CFG forcom.android.volley.toolbox.BasicNetwork.inputStreamToBytes(Ljava\/io\/InputStream;I)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.android.volley.toolbox.PoolingByteArrayOutputStream) =  com.android.volley.toolbox.PoolingByteArrayOutputStream \l0x0002: IGET  (r1 I:com.android.volley.toolbox.ByteArrayPool) = (r5 I:com.android.volley.toolbox.BasicNetwork) com.android.volley.toolbox.BasicNetwork.mPool com.android.volley.toolbox.ByteArrayPool \l0x0004: INVOKE  \l  (r0 I:com.android.volley.toolbox.PoolingByteArrayOutputStream)\l  (r1 I:com.android.volley.toolbox.ByteArrayPool)\l  (r7 I:int)\l com.android.volley.toolbox.PoolingByteArrayOutputStream.\<init\>(com.android.volley.toolbox.ByteArrayPool, int):void type: DIRECT \l0x0007: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x003d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|SYNTHETIC\lSplitter:B:2:0x000b\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x000b\l|0x000b: IGET  (r2 I:com.android.volley.toolbox.ByteArrayPool) = (r5 I:com.android.volley.toolbox.BasicNetwork) com.android.volley.toolbox.BasicNetwork.mPool com.android.volley.toolbox.ByteArrayPool A[Catch:\{ all \-\> 0x0043 \}, TRY_ENTER]\l0x000d: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1024(0x400, float:1.435E\-42) ?[int, float, short, byte, char])\l A[Catch:\{ all \-\> 0x0043 \}]\l0x000f: INVOKE  (r2 I:byte[]) = (r2 I:com.android.volley.toolbox.ByteArrayPool), (r3 I:int) com.android.volley.toolbox.ByteArrayPool.getBuf(int):byte[] type: VIRTUAL A[Catch:\{ all \-\> 0x0043 \}]\l0x0012: NOP   A[TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|SYNTHETIC\lSplitter:B:4:0x0013\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x0013\l|0x0013: INVOKE  (r1 I:int) = (r6 I:java.io.InputStream), (r2 I:byte[]) java.io.InputStream.read(byte[]):int type: VIRTUAL A[Catch:\{ all \-\> 0x0038 \}, TRY_ENTER]\l0x0017: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0038 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001e A[Catch:\{ all \-\> 0x0038 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: INVOKE  \l  (r0 I:com.android.volley.toolbox.PoolingByteArrayOutputStream)\l  (r2 I:byte[])\l  (r7 I:int)\l  (r1 I:int)\l com.android.volley.toolbox.PoolingByteArrayOutputStream.write(byte[], int, int):void type: VIRTUAL A[Catch:\{ all \-\> 0x0038 \}]\l0x001d: GOTO  \-\> 0x0013 A[Catch:\{ all \-\> 0x0038 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: INVOKE  (r1 I:byte[]) = \l  (r0 I:com.android.volley.toolbox.PoolingByteArrayOutputStream)\l com.android.volley.toolbox.PoolingByteArrayOutputStream.toByteArray():byte[] type: VIRTUAL A[Catch:\{ all \-\> 0x0038 \}]\l0x0021: NOP   A[TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002f \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|SYNTHETIC\lSplitter:B:10:0x0024\l}"];
Node_11 [shape=record,label="{11\:\ ?|Splitter:B:10:0x0024\l|0x0024: INVOKE  (r6 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0028 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|0x0028: CONST_STR  (r6 I:java.lang.String) =  \"Error occurred when closing InputStream\" \l0x002a: NEW_ARRAY  (r7 I:java.lang.Object[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x002c: INVOKE  (r6 I:java.lang.String), (r7 I:java.lang.Object[]) com.android.volley.VolleyLog.v(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:10:0x0024\l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|0x002f: IGET  (r6 I:com.android.volley.toolbox.ByteArrayPool) = (r5 I:com.android.volley.toolbox.BasicNetwork) com.android.volley.toolbox.BasicNetwork.mPool com.android.volley.toolbox.ByteArrayPool \l0x0031: INVOKE  \l  (r6 I:com.android.volley.toolbox.ByteArrayPool)\l  (r2 I:byte[])\l com.android.volley.toolbox.ByteArrayPool.returnBuf(byte[]):void type: VIRTUAL \l0x0034: INVOKE  \l  (r0 I:com.android.volley.toolbox.PoolingByteArrayOutputStream)\l com.android.volley.toolbox.PoolingByteArrayOutputStream.close():void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|0x0037: RETURN  (r1 I:byte[]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0038|ExcHandler: all null\lSplitter:B:4:0x0013\l|0x0038: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x0039|0x0039: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x003a: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x003b: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x003d|SYNTHETIC\lSplitter:B:19:0x003d\l}"];
Node_20 [shape=record,label="{20\:\ ?|Splitter:B:19:0x003d\l|0x003d: NEW_INSTANCE  (r2 I:com.android.volley.ServerError) =  com.android.volley.ServerError A[Catch:\{ all \-\> 0x0043 \}, TRY_ENTER]\l0x003f: INVOKE  (r2 I:com.android.volley.ServerError) com.android.volley.ServerError.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0043 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0042|0x0042: THROW  (r2 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0043 \}, TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0043|ExcHandler: all null\lSplitter:B:2:0x000b\l|0x0043: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_23 [shape=record,label="{23\:\ 0x0044|0x0044: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0051 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0046|SYNTHETIC\lSplitter:B:24:0x0046\l}"];
Node_25 [shape=record,label="{25\:\ ?|Splitter:B:24:0x0046\l|0x0046: INVOKE  (r6 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x004a \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x004a|0x004a: NEW_ARRAY  (r6 I:java.lang.Object[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x004c: CONST_STR  (r7 I:java.lang.String) =  \"Error occurred when closing InputStream\" \l0x004e: INVOKE  (r7 I:java.lang.String), (r6 I:java.lang.Object[]) com.android.volley.VolleyLog.v(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:24:0x0046\l}"];
Node_29 [shape=record,label="{29\:\ 0x0051|0x0051: IGET  (r6 I:com.android.volley.toolbox.ByteArrayPool) = (r5 I:com.android.volley.toolbox.BasicNetwork) com.android.volley.toolbox.BasicNetwork.mPool com.android.volley.toolbox.ByteArrayPool \l0x0053: INVOKE  \l  (r6 I:com.android.volley.toolbox.ByteArrayPool)\l  (r1 I:byte[])\l com.android.volley.toolbox.ByteArrayPool.returnBuf(byte[]):void type: VIRTUAL \l0x0056: INVOKE  \l  (r0 I:com.android.volley.toolbox.PoolingByteArrayOutputStream)\l com.android.volley.toolbox.PoolingByteArrayOutputStream.close():void type: VIRTUAL \l}"];
Node_30 [shape=record,label="{30\:\ 0x0059|0x0059: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private byte[] com.android.volley.toolbox.BasicNetwork.inputStreamToBytes((r5 'this' I:com.android.volley.toolbox.BasicNetwork A[IMMUTABLE_TYPE, THIS]), (r6 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, com.android.volley.ServerError]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_2 -> Node_22;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_17;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_4;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_10 -> Node_14;
Node_11 -> Node_14;
Node_11 -> Node_15;
Node_13 -> Node_15;
Node_14 -> Node_13;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_24 -> Node_28;
Node_25 -> Node_28;
Node_25 -> Node_29;
Node_27 -> Node_29;
Node_28 -> Node_27;
Node_29 -> Node_30;
}

