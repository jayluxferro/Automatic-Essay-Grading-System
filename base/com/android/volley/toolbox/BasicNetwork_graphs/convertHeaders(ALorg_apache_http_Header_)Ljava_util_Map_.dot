digraph "CFG forcom.android.volley.toolbox.BasicNetwork.convertHeaders([Lorg\/apache\/http\/Header;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.HashMap r1 = new java.util.HashMap\<\>()\lr0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:0:0x0000, B:3:0x0009] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:3:0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|if (r0 \>= r4.length) goto L_0x001b\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|LOOP_END\lLOOP:0: B:1:0x0006\-\>B:3:0x0009\l|r1.put(r4[r0].getName(), r4[r0].getValue())\lint r0 = r0 + 1\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|RETURN\l|return r1\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static java.util.Map\<java.lang.String, java.lang.String\> com.android.volley.toolbox.BasicNetwork.convertHeaders((r4v0 'headers' org.apache.http.Header[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([, Lorg\/apache\/http\/Header;, ), Ljava\/util\/Map, \<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_1;
Node_5 -> Node_4;
}

