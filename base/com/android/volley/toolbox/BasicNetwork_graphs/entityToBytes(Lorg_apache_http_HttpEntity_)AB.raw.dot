digraph "CFG forcom.android.volley.toolbox.BasicNetwork.entityToBytes(Lorg\/apache\/http\/HttpEntity;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: NEW_INSTANCE  (r1 I:com.android.volley.toolbox.PoolingByteArrayOutputStream) =  com.android.volley.toolbox.PoolingByteArrayOutputStream \l0x0003: IGET  (r5 I:com.android.volley.toolbox.ByteArrayPool) = (r9 I:com.android.volley.toolbox.BasicNetwork) com.android.volley.toolbox.BasicNetwork.mPool com.android.volley.toolbox.ByteArrayPool \l0x0005: INVOKE  (r6 I:long) = \l  (r10 I:org.apache.http.HttpEntity A[D('entity' org.apache.http.HttpEntity)])\l org.apache.http.HttpEntity.getContentLength():long type: INTERFACE \l0x0009: CAST  (r6 I:int) = (int) (r6 I:long) \l0x000a: INVOKE  \l  (r1 I:com.android.volley.toolbox.PoolingByteArrayOutputStream)\l  (r5 I:com.android.volley.toolbox.ByteArrayPool)\l  (r6 I:int)\l com.android.volley.toolbox.PoolingByteArrayOutputStream.\<init\>(com.android.volley.toolbox.ByteArrayPool, int):void type: DIRECT \l0x000d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|SYNTHETIC\lSplitter:B:1:0x000e\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x000e\l|0x000e: INVOKE  (r4 I:java.io.InputStream) = \l  (r10 I:org.apache.http.HttpEntity A[D('entity' org.apache.http.HttpEntity)])\l org.apache.http.HttpEntity.getContent():java.io.InputStream type: INTERFACE A[Catch:\{ all \-\> 0x001a \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('in' java.io.InputStream)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0027 A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: NEW_INSTANCE  (r5 I:com.android.volley.ServerError) =  com.android.volley.ServerError A[Catch:\{ all \-\> 0x001a \}]\l0x0016: INVOKE  (r5 I:com.android.volley.ServerError) com.android.volley.ServerError.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: THROW  (r5 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x001a \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|ExcHandler: all null\lSplitter:B:1:0x000e\l|0x001a: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|SYNTHETIC\lSplitter:B:7:0x001b\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x001b\l|0x001b: INVOKE  \l  (r10 I:org.apache.http.HttpEntity A[D('entity' org.apache.http.HttpEntity)])\l org.apache.http.HttpEntity.consumeContent():void type: INTERFACE A[Catch:\{ IOException \-\> 0x0054 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: IGET  (r6 I:com.android.volley.toolbox.ByteArrayPool) = (r9 I:com.android.volley.toolbox.BasicNetwork) com.android.volley.toolbox.BasicNetwork.mPool com.android.volley.toolbox.ByteArrayPool \l0x0020: INVOKE  \l  (r6 I:com.android.volley.toolbox.ByteArrayPool)\l  (r0 I:byte[] A[D('buffer' byte[])])\l com.android.volley.toolbox.ByteArrayPool.returnBuf(byte[]):void type: VIRTUAL \l0x0023: INVOKE  \l  (r1 I:com.android.volley.toolbox.PoolingByteArrayOutputStream A[D('bytes' com.android.volley.toolbox.PoolingByteArrayOutputStream)])\l com.android.volley.toolbox.PoolingByteArrayOutputStream.close():void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|SYNTHETIC\lSplitter:B:11:0x0027\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x0027\l|0x0027: IGET  (r5 I:com.android.volley.toolbox.ByteArrayPool) = (r9 I:com.android.volley.toolbox.BasicNetwork) com.android.volley.toolbox.BasicNetwork.mPool com.android.volley.toolbox.ByteArrayPool A[Catch:\{ all \-\> 0x001a \}, TRY_ENTER]\l0x0029: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (1024(0x400, float:1.435E\-42) ?[int, float, short, byte, char])\l A[Catch:\{ all \-\> 0x001a \}]\l0x002b: INVOKE  (r0 I:byte[] A[D('buffer' byte[])]) = (r5 I:com.android.volley.toolbox.ByteArrayPool), (r6 I:int) com.android.volley.toolbox.ByteArrayPool.getBuf(int):byte[] type: VIRTUAL A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: INVOKE  (r2 I:int) = \l  (r4 I:java.io.InputStream A[D('in' java.io.InputStream)])\l  (r0 I:byte[] A[D('buffer' byte[])])\l java.io.InputStream.read(byte[]):int type: VIRTUAL A[Catch:\{ all \-\> 0x001a \}]\l0x0033: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0034|0x0034: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('count' int)]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x003b A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0036|0x0036: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x001a \}]\l0x0037: INVOKE  \l  (r1 I:com.android.volley.toolbox.PoolingByteArrayOutputStream A[D('bytes' com.android.volley.toolbox.PoolingByteArrayOutputStream)])\l  (r0 I:byte[] A[D('buffer' byte[])])\l  (r5 I:int)\l  (r2 I:int A[D('count' int)])\l com.android.volley.toolbox.PoolingByteArrayOutputStream.write(byte[], int, int):void type: VIRTUAL A[Catch:\{ all \-\> 0x001a \}]\l0x003a: GOTO  \-\> 0x002f A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x003b|0x003b: INVOKE  (r5 I:byte[]) = \l  (r1 I:com.android.volley.toolbox.PoolingByteArrayOutputStream A[D('bytes' com.android.volley.toolbox.PoolingByteArrayOutputStream)])\l com.android.volley.toolbox.PoolingByteArrayOutputStream.toByteArray():byte[] type: VIRTUAL A[Catch:\{ all \-\> 0x001a \}, TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|SYNTHETIC\lSplitter:B:18:0x003f\l}"];
Node_19 [shape=record,label="{19\:\ ?|Splitter:B:18:0x003f\l|0x003f: INVOKE  \l  (r10 I:org.apache.http.HttpEntity A[D('entity' org.apache.http.HttpEntity)])\l org.apache.http.HttpEntity.consumeContent():void type: INTERFACE A[Catch:\{ IOException \-\> 0x004b \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0042|0x0042: IGET  (r6 I:com.android.volley.toolbox.ByteArrayPool) = (r9 I:com.android.volley.toolbox.BasicNetwork) com.android.volley.toolbox.BasicNetwork.mPool com.android.volley.toolbox.ByteArrayPool \l0x0044: INVOKE  \l  (r6 I:com.android.volley.toolbox.ByteArrayPool)\l  (r0 I:byte[] A[D('buffer' byte[])])\l com.android.volley.toolbox.ByteArrayPool.returnBuf(byte[]):void type: VIRTUAL \l0x0047: INVOKE  \l  (r1 I:com.android.volley.toolbox.PoolingByteArrayOutputStream A[D('bytes' com.android.volley.toolbox.PoolingByteArrayOutputStream)])\l com.android.volley.toolbox.PoolingByteArrayOutputStream.close():void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x004a|0x004a: RETURN  (r5 I:byte[]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x004b|ExcHandler: IOException null\lSplitter:B:18:0x003f\l|0x004b: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_23 [shape=record,label="{23\:\ 0x004c|0x004c: CONST_STR  (r6 I:java.lang.String) =  \"Error occured when calling consumingContent\" \l0x004e: NEW_ARRAY  (r7 I:java.lang.Object[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0050: INVOKE  (r6 I:java.lang.String), (r7 I:java.lang.Object[]) com.android.volley.VolleyLog.v(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
Node_24 [shape=record,label="{24\:\ 0x0054|ExcHandler: IOException null\lSplitter:B:7:0x001b\l|0x0054: MOVE_EXCEPTION  (r3 I:?[OBJECT] A[D('e' java.io.IOException)]) =  \l}"];
Node_25 [shape=record,label="{25\:\ 0x0055|0x0055: CONST_STR  (r6 I:java.lang.String) =  \"Error occured when calling consumingContent\" \l0x0057: NEW_ARRAY  (r7 I:java.lang.Object[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0059: INVOKE  (r6 I:java.lang.String), (r7 I:java.lang.Object[]) com.android.volley.VolleyLog.v(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
MethodNode[shape=record,label="{private byte[] com.android.volley.toolbox.BasicNetwork.entityToBytes((r9 'this' I:com.android.volley.toolbox.BasicNetwork A[IMMUTABLE_TYPE, THIS]), (r10 I:org.apache.http.HttpEntity A[D('entity' org.apache.http.HttpEntity), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0012\-0x001a: r4 'in' java.io.InputStream\l  0x0033\-0x0054: r2 'count' int\l  0x004c\-0x0054: r3 'e' java.io.IOException\l  0x0027\-0x0054: r4 'in' java.io.InputStream\l  0x000e\-0x005c: r0 'buffer' byte[]\l  0x000d\-0x005c: r1 'bytes' com.android.volley.toolbox.PoolingByteArrayOutputStream\l  0x0055\-0x005c: r3 'e' java.io.IOException\l  ?\-0x005c: r10 'entity' org.apache.http.HttpEntity\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, com.android.volley.ServerError]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_24;
Node_8 -> Node_9;
Node_8 -> Node_24;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_11 -> Node_6;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_13;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_20;
Node_24 -> Node_25;
Node_25 -> Node_9;
}

