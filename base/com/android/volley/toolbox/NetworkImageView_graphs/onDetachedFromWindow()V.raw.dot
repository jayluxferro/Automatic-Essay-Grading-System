digraph "CFG forcom.android.volley.toolbox.NetworkImageView.onDetachedFromWindow()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.android.volley.toolbox.ImageLoader$ImageContainer) = (r1 I:com.android.volley.toolbox.NetworkImageView) com.android.volley.toolbox.NetworkImageView.mImageContainer com.android.volley.toolbox.ImageLoader$ImageContainer \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:com.android.volley.toolbox.ImageLoader$ImageContainer) = (r1 I:com.android.volley.toolbox.NetworkImageView) com.android.volley.toolbox.NetworkImageView.mImageContainer com.android.volley.toolbox.ImageLoader$ImageContainer \l0x0006: INVOKE  \l  (r0 I:com.android.volley.toolbox.ImageLoader$ImageContainer)\l com.android.volley.toolbox.ImageLoader.ImageContainer.cancelRequest():void type: VIRTUAL \l0x0009: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: INVOKE  \l  (r1 I:com.android.volley.toolbox.NetworkImageView)\l  (r0 I:android.graphics.Bitmap)\l com.android.volley.toolbox.NetworkImageView.setImageBitmap(android.graphics.Bitmap):void type: VIRTUAL \l0x000d: IPUT  \l  (r0 I:com.android.volley.toolbox.ImageLoader$ImageContainer)\l  (r1 I:com.android.volley.toolbox.NetworkImageView)\l com.android.volley.toolbox.NetworkImageView.mImageContainer com.android.volley.toolbox.ImageLoader$ImageContainer \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: INVOKE  (r1 I:android.widget.ImageView) android.widget.ImageView.onDetachedFromWindow():void type: SUPER \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: RETURN   \l}"];
MethodNode[shape=record,label="{protected void com.android.volley.toolbox.NetworkImageView.onDetachedFromWindow((r1 'this' I:com.android.volley.toolbox.NetworkImageView A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

