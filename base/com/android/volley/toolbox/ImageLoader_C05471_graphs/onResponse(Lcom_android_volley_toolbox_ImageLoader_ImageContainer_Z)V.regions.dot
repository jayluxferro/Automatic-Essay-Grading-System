digraph "CFG forcom.android.volley.toolbox.ImageLoader.1.onResponse(Lcom\/android\/volley\/toolbox\/ImageLoader$ImageContainer;Z)V" {
subgraph cluster_Region_1873606337 {
label = "R(1:(1:2)(1:(1:5)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_379669649 {
label = "IF [B:1:0x0004] THEN: R(1:2) ELSE: R(1:(1:5)(0))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r3.getBitmap() != null) goto L_0x0006\l}"];
subgraph cluster_Region_707331238 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|r1.setImageBitmap(r3.getBitmap())\l}"];
}
subgraph cluster_Region_846817303 {
label = "R(1:(1:5)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_988519015 {
label = "IF [B:4:0x0012] THEN: R(1:5) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012|if (r2 != 0) goto L_0x0014\l}"];
subgraph cluster_Region_649239663 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|r1.setImageResource(r2)\l}"];
}
subgraph cluster_Region_1155313707 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0010}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.android.volley.toolbox.ImageLoader.1.onResponse((r2v0 'this' com.android.volley.toolbox.ImageLoader$1 A[IMMUTABLE_TYPE, THIS]), (r3v0 'response' com.android.volley.toolbox.ImageLoader$ImageContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'isImmediate' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_5 -> Node_8;
Node_0 -> Node_1;
Node_3 -> Node_4;
}

