digraph "CFG forcom.android.volley.toolbox.ImageRequest.getResizedDimension(IIII)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r8 != 0) goto L_0x0005\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r9 != 0) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r8 != 0) goto L_0x000f\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|double r0 = ((double) r9) \/ ((double) r11)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|if (r9 != 0) goto L_0x0013\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011}"];
Node_6 [shape=record,label="{6\:\ 0x0013|double r0 = ((double) r11) \/ ((double) r10)\lr2 = r8\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|if (((((double) r2) * r0) \> ((double) r9) ? 1 : ((((double) r2) * r0) == ((double) r9) ? 0 : \-1)) \<= 0) goto L_0x0022\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|int r2 = (int) (((double) r9) \/ r0)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|PHI: r2 \l  PHI: (r2v1 'resized' int) = (r2v0 'resized' int), (r2v2 'resized' int) binds: [B:7:0x001d, B:8:0x001f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r10\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return (int) (((double) r10) * r0)\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return r8\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
MethodNode[shape=record,label="{private static int com.android.volley.toolbox.ImageRequest.getResizedDimension((r8v0 'maxPrimary' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'maxSecondary' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'actualPrimary' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'actualSecondary' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_1 -> Node_10[style=dashed];
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_11;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_13;
}

