digraph "CFG forcom.android.volley.toolbox.ImageRequest.parseNetworkResponse(Lcom\/android\/volley\/NetworkResponse;)Lcom\/android\/volley\/Response;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:java.lang.Object) =  com.android.volley.toolbox.ImageRequest.sDecodeLock java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: INVOKE  (r1 I:com.android.volley.Response) = \l  (r5 I:com.android.volley.toolbox.ImageRequest)\l  (r6 I:com.android.volley.NetworkResponse)\l com.android.volley.toolbox.ImageRequest.doParse(com.android.volley.NetworkResponse):com.android.volley.Response type: DIRECT A[Catch:\{ OutOfMemoryError \-\> 0x000b \}, TRY_ENTER]\l0x0006: NOP   A[TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|SYNTHETIC\lSplitter:B:4:0x0007\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x0007\l|0x0007: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0009 \}, TRY_ENTER]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|0x0008: RETURN  (r1 I:com.android.volley.Response\<android.graphics.Bitmap\>) A[Catch:\{ all \-\> 0x0009 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|ExcHandler: all null\lSplitter:B:4:0x0007\l|0x0009: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0009 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x000a|0x000a: GOTO  \-\> 0x0030 A[Catch:\{ all \-\> 0x0009 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x000b|ExcHandler: OutOfMemoryError null\lSplitter:B:2:0x0003\l|0x000b: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0009 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x000c|0x000c: CONST_STR  (r2 I:java.lang.String) =  \"Caught OOM for %d byte image, url=%s\" A[Catch:\{ all \-\> 0x0009 \}]\l0x000e: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0009 \}]\l0x000f: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ all \-\> 0x0009 \}]\l0x0011: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0009 \}]\l0x0012: IGET  (r6 I:byte[]) = (r6 I:com.android.volley.NetworkResponse) com.android.volley.NetworkResponse.data byte[] A[Catch:\{ all \-\> 0x0009 \}]\l0x0014: ARRAY_LENGTH  (r6 I:int) = (r6 I:?[]) A[Catch:\{ all \-\> 0x0009 \}]\l0x0015: INVOKE  (r6 I:java.lang.Integer) = (r6 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ all \-\> 0x0009 \}]\l0x0019: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0009 \}]\l0x001b: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0009 \}]\l0x001c: INVOKE  (r4 I:java.lang.String) = (r5 I:com.android.volley.toolbox.ImageRequest) com.android.volley.toolbox.ImageRequest.getUrl():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0009 \}]\l0x0020: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r6 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0009 \}]\l0x0022: INVOKE  (r2 I:java.lang.String), (r3 I:java.lang.Object[]) com.android.volley.VolleyLog.e(java.lang.String, java.lang.Object[]):void type: STATIC A[Catch:\{ all \-\> 0x0009 \}]\l0x0025: NEW_INSTANCE  (r6 I:com.android.volley.ParseError) =  com.android.volley.ParseError A[Catch:\{ all \-\> 0x0009 \}]\l0x0027: INVOKE  \l  (r6 I:com.android.volley.ParseError)\l  (r1 I:java.lang.Throwable)\l com.android.volley.ParseError.\<init\>(java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x0009 \}]\l0x002a: INVOKE  (r6 I:com.android.volley.Response) = (r6 I:com.android.volley.VolleyError) com.android.volley.Response.error(com.android.volley.VolleyError):com.android.volley.Response type: STATIC A[Catch:\{ all \-\> 0x0009 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0009 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: RETURN  (r6 I:com.android.volley.Response\<android.graphics.Bitmap\>) A[Catch:\{ all \-\> 0x0009 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|0x0030: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0009 \}, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|0x0031: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected com.android.volley.Response\<android.graphics.Bitmap\> com.android.volley.toolbox.ImageRequest.parseNetworkResponse((r5 'this' I:com.android.volley.toolbox.ImageRequest A[IMMUTABLE_TYPE, THIS]), (r6 I:com.android.volley.NetworkResponse A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/android\/volley\/NetworkResponse;, ), Lcom\/android\/volley\/Response\<, Landroid\/graphics\/Bitmap;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
}

