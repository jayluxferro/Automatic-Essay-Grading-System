digraph "CFG forcom.android.volley.Request.compareTo(Lcom\/android\/volley\/Request;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.android.volley.Request$Priority) = (r2 I:com.android.volley.Request) com.android.volley.Request.getPriority():com.android.volley.Request$Priority type: VIRTUAL \l0x0004: INVOKE  (r1 I:com.android.volley.Request$Priority) = (r3 I:com.android.volley.Request) com.android.volley.Request.getPriority():com.android.volley.Request$Priority type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r0 I:java.lang.Integer) = (r2 I:com.android.volley.Request) com.android.volley.Request.mSequence java.lang.Integer \l0x000c: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0010: IGET  (r3 I:java.lang.Integer) = (r3 I:com.android.volley.Request) com.android.volley.Request.mSequence java.lang.Integer \l0x0012: INVOKE  (r3 I:int) = (r3 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0016: ARITH  (r0 I:int) = (r0 I:int) \- (r3 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: INVOKE  (r3 I:int) = (r1 I:com.android.volley.Request$Priority) com.android.volley.Request.Priority.ordinal():int type: VIRTUAL \l0x001c: INVOKE  (r0 I:int) = (r0 I:com.android.volley.Request$Priority) com.android.volley.Request.Priority.ordinal():int type: VIRTUAL \l0x0020: ARITH  (r0 I:int) = (r3 I:int) \- (r0 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int com.android.volley.Request.compareTo((r2 'this' I:com.android.volley.Request A[IMMUTABLE_TYPE, THIS]), (r3 I:com.android.volley.Request\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/android\/volley\/Request\<, TT;\>;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

