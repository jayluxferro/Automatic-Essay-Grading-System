digraph "CFG forcom.android.volley.Request.encodeParameters(Ljava\/util\/Map;Ljava\/lang\/String;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0002: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|SYNTHETIC\lSplitter:B:1:0x0005\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0005\l|0x0005: INVOKE  (r6 I:java.util.Set) = (r6 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}, TRY_ENTER]\l0x0009: INVOKE  (r6 I:java.util.Iterator) = (r6 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: INVOKE  (r1 I:boolean) = (r6 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0067 A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: INVOKE  (r1 I:java.lang.Object) = (r6 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x0017: CHECK_CAST  (r1 I:java.util.Map$Entry) = (java.util.Map$Entry) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x0019: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x004a A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x004a A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x0029: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x002b: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String), (r7 I:java.lang.String) java.net.URLEncoder.encode(java.lang.String, java.lang.String):java.lang.String type: STATIC A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x002f: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x0032: CONST  (r2 I:?[int, float, short, byte, char]) = (61 ?[int, float, short, byte, char]) A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x0034: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x0037: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x003b: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x003d: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.String), (r7 I:java.lang.String) java.net.URLEncoder.encode(java.lang.String, java.lang.String):java.lang.String type: STATIC A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x0041: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x0044: CONST  (r1 I:?[int, float, short, byte, char]) = (38 ?[int, float, short, byte, char]) A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x0046: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x0049: GOTO  \-\> 0x000d A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x004a|0x004a: NEW_INSTANCE  (r6 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x004c: CONST_STR  (r0 I:java.lang.String) =  \"Request#getParams() or Request#getPostParams() returned a map containing a null key or value: (%s, %s). All keys and values must be non\-null.\" A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x004e: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x004f: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x0051: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x0052: INVOKE  (r4 I:java.lang.Object) = (r1 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x0056: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x0058: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x0059: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x005d: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x005f: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String), (r2 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x0063: INVOKE  \l  (r6 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0066|0x0066: THROW  (r6 I:java.lang.Throwable) A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0067|0x0067: INVOKE  (r6 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x006b: INVOKE  (r6 I:byte[]) = (r6 I:java.lang.String), (r7 I:java.lang.String) java.lang.String.getBytes(java.lang.String):byte[] type: VIRTUAL A[Catch:\{ UnsupportedEncodingException \-\> 0x0070 \}]\l0x006e: NOP   A[TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x006f|0x006f: RETURN  (r6 I:byte[]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0070|ExcHandler: UnsupportedEncodingException null\lSplitter:B:1:0x0005\l|0x0070: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0071|0x0071: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0073: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0075: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0078: CONST_STR  (r2 I:java.lang.String) =  \"Encoding not supported: \" \l0x007a: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007d: INVOKE  (r1 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0080: INVOKE  (r7 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0084: INVOKE  \l  (r0 I:java.lang.RuntimeException)\l  (r7 I:java.lang.String)\l  (r6 I:java.lang.Throwable)\l java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0087|0x0087: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private byte[] com.android.volley.Request.encodeParameters((r5 'this' I:com.android.volley.Request A[IMMUTABLE_TYPE, THIS]), (r6 I:java.util.Map\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;, Ljava\/lang\/String;, )[B]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_3;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

