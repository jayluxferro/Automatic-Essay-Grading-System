digraph "CFG forcom.mapbox.mapboxsdk.utils.BitmapUtils.getByteArrayFromDrawable(Landroid\/graphics\/drawable\/Drawable;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:byte[]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INVOKE  (r3 I:android.graphics.Bitmap) = (r3 I:android.graphics.drawable.Drawable) com.mapbox.mapboxsdk.utils.BitmapUtils.getBitmapFromDrawable(android.graphics.drawable.Drawable):android.graphics.Bitmap type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000b \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: RETURN  (r0 I:byte[]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:java.io.ByteArrayOutputStream) =  java.io.ByteArrayOutputStream \l0x000d: INVOKE  (r0 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.\<init\>():void type: DIRECT \l0x0010: SGET  (r1 I:android.graphics.Bitmap$CompressFormat) =  android.graphics.Bitmap.CompressFormat.PNG android.graphics.Bitmap$CompressFormat \l0x0012: CONST  (r2 I:?[int, float, short, byte, char]) = (100 ?[int, float, short, byte, char]) \l0x0014: INVOKE  \l  (r3 I:android.graphics.Bitmap)\l  (r1 I:android.graphics.Bitmap$CompressFormat)\l  (r2 I:int)\l  (r0 I:java.io.OutputStream)\l android.graphics.Bitmap.compress(android.graphics.Bitmap$CompressFormat, int, java.io.OutputStream):boolean type: VIRTUAL \l0x0017: INVOKE  (r3 I:byte[]) = (r0 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.toByteArray():byte[] type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: RETURN  (r3 I:byte[]) \l}"];
MethodNode[shape=record,label="{public static byte[] com.mapbox.mapboxsdk.utils.BitmapUtils.getByteArrayFromDrawable((r3 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
}

