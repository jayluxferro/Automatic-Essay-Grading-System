digraph "CFG forcom.mapbox.mapboxsdk.utils.BitmapUtils.getByteArrayFromDrawable(Landroid\/graphics\/drawable\/Drawable;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r3 != null) goto L_0x0004\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|android.graphics.Bitmap r3 = getBitmapFromDrawable(r3)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|if (r3 != null) goto L_0x000b\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|RETURN\l|return null\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|java.io.ByteArrayOutputStream r0 = new java.io.ByteArrayOutputStream()\lr3.compress(android.graphics.Bitmap.CompressFormat.PNG, 100, r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|RETURN\l|return r0.toByteArray()\l}"];
MethodNode[shape=record,label="{public static byte[] com.mapbox.mapboxsdk.utils.BitmapUtils.getByteArrayFromDrawable((r3v0 android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
}

