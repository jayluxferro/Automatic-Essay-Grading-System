digraph "CFG forcom.mapbox.mapboxsdk.annotations.InfoWindow.adaptDefaultMarker(Lcom\/mapbox\/mapboxsdk\/annotations\/Marker;Lcom\/mapbox\/mapboxsdk\/maps\/MapboxMap;Lcom\/mapbox\/mapboxsdk\/maps\/MapView;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.ref.WeakReference\<android.view.View\>) = (r4 I:com.mapbox.mapboxsdk.annotations.InfoWindow) com.mapbox.mapboxsdk.annotations.InfoWindow.view java.lang.ref.WeakReference \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:android.view.View) = (android.view.View) (r0 I:?[OBJECT, ARRAY]) \l0x0008: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: INVOKE  (r0 I:android.content.Context) = (r7 I:com.mapbox.mapboxsdk.maps.MapView) com.mapbox.mapboxsdk.maps.MapView.getContext():android.content.Context type: VIRTUAL \l0x000f: INVOKE  (r0 I:android.view.LayoutInflater) = (r0 I:android.content.Context) android.view.LayoutInflater.from(android.content.Context):android.view.LayoutInflater type: STATIC \l0x0013: IGET  (r2 I:int) = (r4 I:com.mapbox.mapboxsdk.annotations.InfoWindow) com.mapbox.mapboxsdk.annotations.InfoWindow.layoutRes int \l0x0015: INVOKE  (r0 I:android.view.View) = \l  (r0 I:android.view.LayoutInflater)\l  (r2 I:int)\l  (r7 I:android.view.ViewGroup)\l  (r1 I:boolean)\l android.view.LayoutInflater.inflate(int, android.view.ViewGroup, boolean):android.view.View type: VIRTUAL \l0x0019: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.annotations.InfoWindow)\l  (r0 I:android.view.View)\l  (r6 I:com.mapbox.mapboxsdk.maps.MapboxMap)\l com.mapbox.mapboxsdk.annotations.InfoWindow.initialize(android.view.View, com.mapbox.mapboxsdk.maps.MapboxMap):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: NEW_INSTANCE  (r7 I:java.lang.ref.WeakReference) =  java.lang.ref.WeakReference \l0x001e: INVOKE  (r7 I:java.lang.ref.WeakReference), (r6 I:java.lang.Object) java.lang.ref.WeakReference.\<init\>(java.lang.Object):void type: DIRECT \l0x0021: IPUT  \l  (r7 I:java.lang.ref.WeakReference\<com.mapbox.mapboxsdk.maps.MapboxMap\>)\l  (r4 I:com.mapbox.mapboxsdk.annotations.InfoWindow)\l com.mapbox.mapboxsdk.annotations.InfoWindow.mapboxMap java.lang.ref.WeakReference \l0x0023: INVOKE  (r6 I:java.lang.String) = (r5 I:com.mapbox.mapboxsdk.annotations.Marker) com.mapbox.mapboxsdk.annotations.Marker.getTitle():java.lang.String type: VIRTUAL \l0x0027: SGET  (r7 I:int) =  com.mapbox.mapboxsdk.R.id.infowindow_title int \l0x0029: INVOKE  (r7 I:android.view.View) = (r0 I:android.view.View), (r7 I:int) android.view.View.findViewById(int):android.view.View type: VIRTUAL \l0x002d: CHECK_CAST  (r7 I:android.widget.TextView) = (android.widget.TextView) (r7 I:?[OBJECT, ARRAY]) \l0x002f: INVOKE  (r2 I:boolean) = (r6 I:java.lang.CharSequence) android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l0x0033: CONST  (r3 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0035|0x0035: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x003e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0037|0x0037: INVOKE  \l  (r7 I:android.widget.TextView)\l  (r6 I:java.lang.CharSequence)\l android.widget.TextView.setText(java.lang.CharSequence):void type: VIRTUAL \l0x003a: INVOKE  (r7 I:android.widget.TextView), (r1 I:int) android.widget.TextView.setVisibility(int):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|0x003e: INVOKE  (r7 I:android.widget.TextView), (r3 I:int) android.widget.TextView.setVisibility(int):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0041|0x0041: INVOKE  (r5 I:java.lang.String) = (r5 I:com.mapbox.mapboxsdk.annotations.Marker) com.mapbox.mapboxsdk.annotations.Marker.getSnippet():java.lang.String type: VIRTUAL \l0x0045: SGET  (r6 I:int) =  com.mapbox.mapboxsdk.R.id.infowindow_description int \l0x0047: INVOKE  (r6 I:android.view.View) = (r0 I:android.view.View), (r6 I:int) android.view.View.findViewById(int):android.view.View type: VIRTUAL \l0x004b: CHECK_CAST  (r6 I:android.widget.TextView) = (android.widget.TextView) (r6 I:?[OBJECT, ARRAY]) \l0x004d: INVOKE  (r7 I:boolean) = (r5 I:java.lang.CharSequence) android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0051|0x0051: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x005a \l}"];
Node_9 [shape=record,label="{9\:\ 0x0053|0x0053: INVOKE  \l  (r6 I:android.widget.TextView)\l  (r5 I:java.lang.CharSequence)\l android.widget.TextView.setText(java.lang.CharSequence):void type: VIRTUAL \l0x0056: INVOKE  (r6 I:android.widget.TextView), (r1 I:int) android.widget.TextView.setVisibility(int):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x005a|0x005a: INVOKE  (r6 I:android.widget.TextView), (r3 I:int) android.widget.TextView.setVisibility(int):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x005d|0x005d: RETURN   \l}"];
MethodNode[shape=record,label="{void com.mapbox.mapboxsdk.annotations.InfoWindow.adaptDefaultMarker((r4 'this' I:com.mapbox.mapboxsdk.annotations.InfoWindow A[IMMUTABLE_TYPE, THIS]), (r5 I:com.mapbox.mapboxsdk.annotations.Marker A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.mapbox.mapboxsdk.maps.MapboxMap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.mapbox.mapboxsdk.maps.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
}

