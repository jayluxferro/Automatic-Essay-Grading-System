digraph "CFG forcom.mapbox.mapboxsdk.annotations.InfoWindow.update()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.ref.WeakReference\<com.mapbox.mapboxsdk.maps.MapboxMap\>) = (r3 I:com.mapbox.mapboxsdk.annotations.InfoWindow) com.mapbox.mapboxsdk.annotations.InfoWindow.mapboxMap java.lang.ref.WeakReference \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:com.mapbox.mapboxsdk.maps.MapboxMap) = (com.mapbox.mapboxsdk.maps.MapboxMap) (r0 I:?[OBJECT, ARRAY]) \l0x0008: IGET  (r1 I:java.lang.ref.WeakReference\<com.mapbox.mapboxsdk.annotations.Marker\>) = (r3 I:com.mapbox.mapboxsdk.annotations.InfoWindow) com.mapbox.mapboxsdk.annotations.InfoWindow.boundMarker java.lang.ref.WeakReference \l0x000a: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l0x000e: CHECK_CAST  (r1 I:com.mapbox.mapboxsdk.annotations.Marker) = (com.mapbox.mapboxsdk.annotations.Marker) (r1 I:?[OBJECT, ARRAY]) \l0x0010: IGET  (r2 I:java.lang.ref.WeakReference\<android.view.View\>) = (r3 I:com.mapbox.mapboxsdk.annotations.InfoWindow) com.mapbox.mapboxsdk.annotations.InfoWindow.view java.lang.ref.WeakReference \l0x0012: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l0x0016: CHECK_CAST  (r2 I:android.view.View) = (android.view.View) (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x005a \l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|0x001a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x005a \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x005a \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: INVOKE  (r0 I:com.mapbox.mapboxsdk.maps.Projection) = (r0 I:com.mapbox.mapboxsdk.maps.MapboxMap) com.mapbox.mapboxsdk.maps.MapboxMap.getProjection():com.mapbox.mapboxsdk.maps.Projection type: VIRTUAL \l0x0022: INVOKE  (r1 I:com.mapbox.mapboxsdk.geometry.LatLng) = (r1 I:com.mapbox.mapboxsdk.annotations.Marker) com.mapbox.mapboxsdk.annotations.Marker.getPosition():com.mapbox.mapboxsdk.geometry.LatLng type: VIRTUAL \l0x0026: INVOKE  (r0 I:android.graphics.PointF) = \l  (r0 I:com.mapbox.mapboxsdk.maps.Projection)\l  (r1 I:com.mapbox.mapboxsdk.geometry.LatLng)\l com.mapbox.mapboxsdk.maps.Projection.toScreenLocation(com.mapbox.mapboxsdk.geometry.LatLng):android.graphics.PointF type: VIRTUAL \l0x002a: IPUT  \l  (r0 I:android.graphics.PointF)\l  (r3 I:com.mapbox.mapboxsdk.annotations.InfoWindow)\l com.mapbox.mapboxsdk.annotations.InfoWindow.coordinates android.graphics.PointF \l0x002c: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.mapbox.mapboxsdk.annotations.BubbleLayout \l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|0x002e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x003e \l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|0x0030: IGET  (r0 I:android.graphics.PointF) = (r3 I:com.mapbox.mapboxsdk.annotations.InfoWindow) com.mapbox.mapboxsdk.annotations.InfoWindow.coordinates android.graphics.PointF \l0x0032: IGET  (r0 I:float) = (r0 I:android.graphics.PointF) android.graphics.PointF.x float \l0x0034: IGET  (r1 I:float) = (r3 I:com.mapbox.mapboxsdk.annotations.InfoWindow) com.mapbox.mapboxsdk.annotations.InfoWindow.viewWidthOffset float \l0x0036: ARITH  (r0 I:float) = (r0 I:float) + (r1 I:float) \l0x0037: IGET  (r1 I:float) = (r3 I:com.mapbox.mapboxsdk.annotations.InfoWindow) com.mapbox.mapboxsdk.annotations.InfoWindow.markerWidthOffset float \l0x0039: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x003a: INVOKE  (r2 I:android.view.View), (r0 I:float) android.view.View.setX(float):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|0x003e: IGET  (r0 I:android.graphics.PointF) = (r3 I:com.mapbox.mapboxsdk.annotations.InfoWindow) com.mapbox.mapboxsdk.annotations.InfoWindow.coordinates android.graphics.PointF \l0x0040: IGET  (r0 I:float) = (r0 I:android.graphics.PointF) android.graphics.PointF.x float \l0x0042: INVOKE  (r1 I:int) = (r2 I:android.view.View) android.view.View.getMeasuredWidth():int type: VIRTUAL \l0x0046: ARITH  (r1 I:int) = (r1 I:int) \/ (2 int) \l0x0048: CAST  (r1 I:float) = (float) (r1 I:int) \l0x0049: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x004a: IGET  (r1 I:float) = (r3 I:com.mapbox.mapboxsdk.annotations.InfoWindow) com.mapbox.mapboxsdk.annotations.InfoWindow.markerWidthOffset float \l0x004c: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x004d: INVOKE  (r2 I:android.view.View), (r0 I:float) android.view.View.setX(float):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0050|0x0050: IGET  (r0 I:android.graphics.PointF) = (r3 I:com.mapbox.mapboxsdk.annotations.InfoWindow) com.mapbox.mapboxsdk.annotations.InfoWindow.coordinates android.graphics.PointF \l0x0052: IGET  (r0 I:float) = (r0 I:android.graphics.PointF) android.graphics.PointF.y float \l0x0054: IGET  (r1 I:float) = (r3 I:com.mapbox.mapboxsdk.annotations.InfoWindow) com.mapbox.mapboxsdk.annotations.InfoWindow.viewHeightOffset float \l0x0056: ARITH  (r0 I:float) = (r0 I:float) + (r1 I:float) \l0x0057: INVOKE  (r2 I:android.view.View), (r0 I:float) android.view.View.setY(float):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x005a|0x005a: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.annotations.InfoWindow.update((r3 'this' I:com.mapbox.mapboxsdk.annotations.InfoWindow A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

