digraph "CFG forcom.mapbox.mapboxsdk.annotations.InfoWindow.3.onGlobalLayout()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.mapbox.mapboxsdk.annotations.InfoWindow) = (r3 I:com.mapbox.mapboxsdk.annotations.InfoWindow$3) com.mapbox.mapboxsdk.annotations.InfoWindow.3.this$0 com.mapbox.mapboxsdk.annotations.InfoWindow \l0x0002: IGET  (r0 I:java.lang.ref.WeakReference\<android.view.View\>) = (r0 I:com.mapbox.mapboxsdk.annotations.InfoWindow) com.mapbox.mapboxsdk.annotations.InfoWindow.view java.lang.ref.WeakReference \l0x0004: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l0x0008: CHECK_CAST  (r0 I:android.view.View) = (android.view.View) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0038 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x000e: CONST  (r2 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r1 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:5:0x001a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: INVOKE  (r1 I:android.view.ViewTreeObserver) = (r0 I:android.view.View) android.view.View.getViewTreeObserver():android.view.ViewTreeObserver type: VIRTUAL \l0x0016: INVOKE  \l  (r1 I:android.view.ViewTreeObserver)\l  (r3 I:android.view.ViewTreeObserver$OnGlobalLayoutListener)\l android.view.ViewTreeObserver.removeOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: INVOKE  (r1 I:android.view.ViewTreeObserver) = (r0 I:android.view.View) android.view.View.getViewTreeObserver():android.view.ViewTreeObserver type: VIRTUAL \l0x001e: INVOKE  \l  (r1 I:android.view.ViewTreeObserver)\l  (r3 I:android.view.ViewTreeObserver$OnGlobalLayoutListener)\l android.view.ViewTreeObserver.removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: IGET  (r1 I:com.mapbox.mapboxsdk.annotations.InfoWindow) = (r3 I:com.mapbox.mapboxsdk.annotations.InfoWindow$3) com.mapbox.mapboxsdk.annotations.InfoWindow.3.this$0 com.mapbox.mapboxsdk.annotations.InfoWindow \l0x0023: INVOKE  (r0 I:int) = (r0 I:android.view.View) android.view.View.getMeasuredHeight():int type: VIRTUAL \l0x0027: NEG  (r0 I:int) = (r0 I:int) \l0x0028: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0029: IGET  (r2 I:com.mapbox.mapboxsdk.annotations.InfoWindow) = (r3 I:com.mapbox.mapboxsdk.annotations.InfoWindow$3) com.mapbox.mapboxsdk.annotations.InfoWindow.3.this$0 com.mapbox.mapboxsdk.annotations.InfoWindow \l0x002b: INVOKE  (r2 I:float) = (r2 I:com.mapbox.mapboxsdk.annotations.InfoWindow) com.mapbox.mapboxsdk.annotations.InfoWindow.access$300(com.mapbox.mapboxsdk.annotations.InfoWindow):float type: STATIC \l0x002f: ARITH  (r0 I:float) = (r0 I:float) + (r2 I:float) \l0x0030: INVOKE  \l  (r1 I:com.mapbox.mapboxsdk.annotations.InfoWindow)\l  (r0 I:float)\l com.mapbox.mapboxsdk.annotations.InfoWindow.access$202(com.mapbox.mapboxsdk.annotations.InfoWindow, float):float type: STATIC \l0x0033: IGET  (r0 I:com.mapbox.mapboxsdk.annotations.InfoWindow) = (r3 I:com.mapbox.mapboxsdk.annotations.InfoWindow$3) com.mapbox.mapboxsdk.annotations.InfoWindow.3.this$0 com.mapbox.mapboxsdk.annotations.InfoWindow \l0x0035: INVOKE  (r0 I:com.mapbox.mapboxsdk.annotations.InfoWindow) com.mapbox.mapboxsdk.annotations.InfoWindow.update():void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0038|0x0038: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.annotations.InfoWindow.3.onGlobalLayout((r3 'this' I:com.mapbox.mapboxsdk.annotations.InfoWindow$3 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

