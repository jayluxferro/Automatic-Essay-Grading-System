digraph "CFG forcom.mapbox.mapboxsdk.annotations.PolylineOptions.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if ((getAlpha() \> 0.0f ? 1 : (getAlpha() == 0.0f ? 0 : \-1)) == 0) goto L_0x0013\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|int r0 = java.lang.Float.floatToIntBits(getAlpha())\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|r0 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|PHI: r0 \l  PHI: (r0v2 int) = (r0v10 int), (r0v12 int) binds: [B:3:0x0013, B:2:0x000a] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (((r0 + 31) * 31) + getColor()) * 31\l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|if ((getWidth() \> 0.0f ? 1 : (getWidth() == 0.0f ? 0 : \-1)) == 0) goto L_0x0031\l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|int r1 = java.lang.Float.floatToIntBits(getWidth())\l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|r1 = 0\l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|PHI: r1 \l  PHI: (r1v2 int) = (r1v5 int), (r1v7 int) binds: [B:7:0x0031, B:6:0x0028] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 + r1) * 31\l}"];
Node_9 [shape=record,label="{9\:\ 0x0039|if (getPoints() == null) goto L_0x0043\l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|int r2 = getPoints().hashCode()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0043|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:9:0x0039, B:10:0x003b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0044|RETURN\l|return r0 + r2\l}"];
MethodNode[shape=record,label="{public int com.mapbox.mapboxsdk.annotations.PolylineOptions.hashCode((r5v0 'this' com.mapbox.mapboxsdk.annotations.PolylineOptions A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

