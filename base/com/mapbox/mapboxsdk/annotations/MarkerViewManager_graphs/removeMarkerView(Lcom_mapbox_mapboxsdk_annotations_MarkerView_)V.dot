digraph "CFG forcom.mapbox.mapboxsdk.annotations.MarkerViewManager.removeMarkerView(Lcom\/mapbox\/mapboxsdk\/annotations\/MarkerView;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.view.View r0 = r5.markerViewMap.get(r6)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0 == null) goto L_0x003b\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|if (r6 == null) goto L_0x003b\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|java.util.Iterator r1 = r5.markerViewAdapters.iterator()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|LOOP_START\lLOOP:0: B:4:0x0012\-\>B:13:0x0012\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|if (r1.hasNext() == false) goto L_0x003b\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|com.mapbox.mapboxsdk.maps.MapboxMap$MarkerViewAdapter r2 = r1.next()\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|if (r2.getMarkerClass().equals(r6.getClass()) == false) goto L_0x0012\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c}"];
Node_9 [shape=record,label="{9\:\ 0x0030|if (r2.prepareViewForReuse(r6, r0) == false) goto L_0x0012\l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|r6.setOffset(\-1.0f, \-1.0f)\lr2.releaseView(r0)\l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|r6.setMapboxMap((com.mapbox.mapboxsdk.maps.MapboxMap) null)\lr5.markerViewMap.remove(r6)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0044|RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ 0x0012|LOOP_END\lSYNTHETIC\lLOOP:0: B:4:0x0012\-\>B:13:0x0012\l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0012|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.annotations.MarkerViewManager.removeMarkerView((r5v0 'this' com.mapbox.mapboxsdk.annotations.MarkerViewManager A[IMMUTABLE_TYPE, THIS]), (r6v0 com.mapbox.mapboxsdk.annotations.MarkerView A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_17;
Node_11 -> Node_12;
Node_13 -> Node_4;
Node_14 -> Node_11;
Node_15 -> Node_13;
Node_16 -> Node_13;
Node_17 -> Node_13;
}

