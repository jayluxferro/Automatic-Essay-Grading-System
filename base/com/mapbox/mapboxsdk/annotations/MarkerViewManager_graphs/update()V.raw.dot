digraph "CFG forcom.mapbox.mapboxsdk.annotations.MarkerViewManager.update()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewManager) com.mapbox.mapboxsdk.annotations.MarkerViewManager.enabled boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:long) =  android.os.SystemClock.elapsedRealtime():long type: STATIC \l0x0008: IGET  (r2 I:long) = (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewManager) com.mapbox.mapboxsdk.annotations.MarkerViewManager.updateTime long \l0x000a: CMP_L  (r2 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:6:0x0012 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: INVOKE  (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewManager) com.mapbox.mapboxsdk.annotations.MarkerViewManager.updateMarkerViewsPosition():void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: INVOKE  (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewManager) com.mapbox.mapboxsdk.annotations.MarkerViewManager.invalidateViewMarkersInVisibleRegion():void type: VIRTUAL \l0x0015: CONST  (r2 I:?[long, double]) = (250(0xfa, double:1.235E\-321) ?[long, double]) \l0x0017: ARITH  (r0 I:long) = (r0 I:long) + (r2 I:long) \l0x0018: IPUT  \l  (r0 I:long)\l  (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewManager)\l com.mapbox.mapboxsdk.annotations.MarkerViewManager.updateTime long \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.annotations.MarkerViewManager.update((r4 'this' I:com.mapbox.mapboxsdk.annotations.MarkerViewManager A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

