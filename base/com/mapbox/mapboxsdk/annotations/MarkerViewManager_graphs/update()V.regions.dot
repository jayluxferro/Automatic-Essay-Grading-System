digraph "CFG forcom.mapbox.mapboxsdk.annotations.MarkerViewManager.update()V" {
subgraph cluster_Region_1227564119 {
label = "R(1:(1:(2:2|(2:(2:4|5)|(1:6)))))";
node [shape=record,color=blue];
subgraph cluster_Region_479876759 {
label = "R(1:(2:2|(2:(2:4|5)|(1:6))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2131231181 {
label = "IF [B:1:0x0002] THEN: R(2:2|(2:(2:4|5)|(1:6))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4.enabled == true) goto L_0x0004\l}"];
subgraph cluster_Region_1494810973 {
label = "R(2:2|(2:(2:4|5)|(1:6)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|long long r0 = android.os.SystemClock.elapsedRealtime()\l}"];
subgraph cluster_Region_1798830143 {
label = "R(2:(2:4|5)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_363289105 {
label = "IF [B:3:0x000c] THEN: R(2:4|5) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r0 \< r4.updateTime) goto L_0x000e\l}"];
subgraph cluster_Region_2075029650 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|updateMarkerViewsPosition()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1058583391 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0012|invalidateViewMarkersInVisibleRegion()\lr4.updateTime = r0 + 250\l}"];
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.annotations.MarkerViewManager.update((r4v0 'this' com.mapbox.mapboxsdk.annotations.MarkerViewManager A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_8[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_0 -> Node_1;
}

