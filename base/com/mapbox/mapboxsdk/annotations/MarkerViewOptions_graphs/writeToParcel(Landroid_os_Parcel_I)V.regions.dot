digraph "CFG forcom.mapbox.mapboxsdk.annotations.MarkerViewOptions.writeToParcel(Landroid\/os\/Parcel;I)V" {
subgraph cluster_Region_1971704309 {
label = "R(3:0|4|(1:(1:6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3.writeParcelable(getPosition(), r4)\lr3.writeString(getSnippet())\lr3.writeString(getTitle())\lr3.writeByte(isFlat() ? (byte) 1 : 0)\lr3.writeFloat(getAnchorU())\lr3.writeFloat(getAnchorV())\lr3.writeFloat(getInfoWindowAnchorU())\lr3.writeFloat(getInfoWindowAnchorV())\lr3.writeFloat(getRotation())\lr3.writeByte(isVisible() ? (byte) 1 : 0)\lr3.writeFloat(r2.alpha)\lcom.mapbox.mapboxsdk.annotations.Icon com.mapbox.mapboxsdk.annotations.Icon r0 = getIcon()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0056|PHI: r1 \l  PHI: (r1v0 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r3.writeByte((byte) (r0 != null ? 1 : 0))\l}"];
subgraph cluster_Region_1045535175 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1067558367 {
label = "IF [B:5:0x005a] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x005a|if (r0 != null) goto L_0x005c\l}"];
subgraph cluster_Region_1857219486 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x005c|r3.writeString(getIcon().getId())\lr3.writeParcelable(getIcon().getBitmap(), r4)\l}"];
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0051}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0053}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0055}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.annotations.MarkerViewOptions.writeToParcel((r2v0 'this' com.mapbox.mapboxsdk.annotations.MarkerViewOptions A[IMMUTABLE_TYPE, THIS]), (r3v0 android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

