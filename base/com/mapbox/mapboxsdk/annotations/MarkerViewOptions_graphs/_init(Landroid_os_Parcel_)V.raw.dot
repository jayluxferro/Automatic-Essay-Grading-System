digraph "CFG forcom.mapbox.mapboxsdk.annotations.MarkerViewOptions.\<init\>(Landroid\/os\/Parcel;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions)\l com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:com.mapbox.mapboxsdk.annotations.MarkerView) =  com.mapbox.mapboxsdk.annotations.MarkerView \l0x0005: INVOKE  (r0 I:com.mapbox.mapboxsdk.annotations.MarkerView) com.mapbox.mapboxsdk.annotations.MarkerView.\<init\>():void type: DIRECT \l0x0008: IPUT  \l  (r0 I:com.mapbox.mapboxsdk.annotations.MarkerView)\l  (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewOptions)\l com.mapbox.mapboxsdk.annotations.MarkerViewOptions.marker com.mapbox.mapboxsdk.annotations.MarkerView \l0x000a: CONST_CLASS  (r0 I:java.lang.Class\<com.mapbox.mapboxsdk.geometry.LatLng\>) =  com.mapbox.mapboxsdk.geometry.LatLng.class \l0x000c: INVOKE  (r0 I:java.lang.ClassLoader) = (r0 I:java.lang.Class) java.lang.Class.getClassLoader():java.lang.ClassLoader type: VIRTUAL \l0x0010: INVOKE  (r0 I:android.os.Parcelable) = (r5 I:android.os.Parcel), (r0 I:java.lang.ClassLoader) android.os.Parcel.readParcelable(java.lang.ClassLoader):android.os.Parcelable type: VIRTUAL \l0x0014: CHECK_CAST  (r0 I:com.mapbox.mapboxsdk.geometry.LatLng) = (com.mapbox.mapboxsdk.geometry.LatLng) (r0 I:?[OBJECT, ARRAY]) \l0x0016: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewOptions)\l  (r0 I:com.mapbox.mapboxsdk.geometry.LatLng)\l com.mapbox.mapboxsdk.annotations.MarkerViewOptions.position(com.mapbox.mapboxsdk.geometry.LatLng):com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions type: VIRTUAL \l0x0019: INVOKE  (r0 I:java.lang.String) = (r5 I:android.os.Parcel) android.os.Parcel.readString():java.lang.String type: VIRTUAL \l0x001d: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewOptions)\l  (r0 I:java.lang.String)\l com.mapbox.mapboxsdk.annotations.MarkerViewOptions.snippet(java.lang.String):com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions type: VIRTUAL \l0x0020: INVOKE  (r0 I:java.lang.String) = (r5 I:android.os.Parcel) android.os.Parcel.readString():java.lang.String type: VIRTUAL \l0x0024: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewOptions)\l  (r0 I:java.lang.String)\l com.mapbox.mapboxsdk.annotations.MarkerViewOptions.title(java.lang.String):com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions type: VIRTUAL \l0x0027: INVOKE  (r0 I:byte) = (r5 I:android.os.Parcel) android.os.Parcel.readByte():byte type: VIRTUAL \l0x002b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x002d|0x002d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0031 \l}"];
Node_2 [shape=record,label="{2\:\ 0x002f|0x002f: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0031|0x0031: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0032|0x0032: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewOptions)\l  (r0 I:boolean)\l com.mapbox.mapboxsdk.annotations.MarkerViewOptions.flat(boolean):com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions type: VIRTUAL \l0x0035: INVOKE  (r0 I:float) = (r5 I:android.os.Parcel) android.os.Parcel.readFloat():float type: VIRTUAL \l0x0039: INVOKE  (r3 I:float) = (r5 I:android.os.Parcel) android.os.Parcel.readFloat():float type: VIRTUAL \l0x003d: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewOptions)\l  (r0 I:float)\l  (r3 I:float)\l com.mapbox.mapboxsdk.annotations.MarkerViewOptions.anchor(float, float):com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions type: VIRTUAL \l0x0040: INVOKE  (r0 I:float) = (r5 I:android.os.Parcel) android.os.Parcel.readFloat():float type: VIRTUAL \l0x0044: INVOKE  (r3 I:float) = (r5 I:android.os.Parcel) android.os.Parcel.readFloat():float type: VIRTUAL \l0x0048: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewOptions)\l  (r0 I:float)\l  (r3 I:float)\l com.mapbox.mapboxsdk.annotations.MarkerViewOptions.infoWindowAnchor(float, float):com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions type: VIRTUAL \l0x004b: INVOKE  (r0 I:float) = (r5 I:android.os.Parcel) android.os.Parcel.readFloat():float type: VIRTUAL \l0x004f: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewOptions)\l  (r0 I:float)\l com.mapbox.mapboxsdk.annotations.MarkerViewOptions.rotation(float):com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions type: VIRTUAL \l0x0052: INVOKE  (r0 I:byte) = (r5 I:android.os.Parcel) android.os.Parcel.readByte():byte type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0056|0x0056: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0059 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0058|0x0058: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0059|0x0059: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewOptions)\l  (r1 I:boolean)\l com.mapbox.mapboxsdk.annotations.MarkerViewOptions.visible(boolean):com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions type: VIRTUAL \l0x005c: INVOKE  (r0 I:float) = (r5 I:android.os.Parcel) android.os.Parcel.readFloat():float type: VIRTUAL \l0x0060: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewOptions)\l  (r0 I:float)\l com.mapbox.mapboxsdk.annotations.MarkerViewOptions.alpha(float):com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions type: VIRTUAL \l0x0063: INVOKE  (r0 I:byte) = (r5 I:android.os.Parcel) android.os.Parcel.readByte():byte type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0067|0x0067: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0081 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0069|0x0069: INVOKE  (r0 I:java.lang.String) = (r5 I:android.os.Parcel) android.os.Parcel.readString():java.lang.String type: VIRTUAL \l0x006d: CONST_CLASS  (r1 I:java.lang.Class\<android.graphics.Bitmap\>) =  android.graphics.Bitmap.class \l0x006f: INVOKE  (r1 I:java.lang.ClassLoader) = (r1 I:java.lang.Class) java.lang.Class.getClassLoader():java.lang.ClassLoader type: VIRTUAL \l0x0073: INVOKE  (r5 I:android.os.Parcelable) = (r5 I:android.os.Parcel), (r1 I:java.lang.ClassLoader) android.os.Parcel.readParcelable(java.lang.ClassLoader):android.os.Parcelable type: VIRTUAL \l0x0077: CHECK_CAST  (r5 I:android.graphics.Bitmap) = (android.graphics.Bitmap) (r5 I:?[OBJECT, ARRAY]) \l0x0079: NEW_INSTANCE  (r1 I:com.mapbox.mapboxsdk.annotations.Icon) =  com.mapbox.mapboxsdk.annotations.Icon \l0x007b: INVOKE  \l  (r1 I:com.mapbox.mapboxsdk.annotations.Icon)\l  (r0 I:java.lang.String)\l  (r5 I:android.graphics.Bitmap)\l com.mapbox.mapboxsdk.annotations.Icon.\<init\>(java.lang.String, android.graphics.Bitmap):void type: DIRECT \l0x007e: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewOptions)\l  (r1 I:com.mapbox.mapboxsdk.annotations.Icon)\l com.mapbox.mapboxsdk.annotations.MarkerViewOptions.icon(com.mapbox.mapboxsdk.annotations.Icon):com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0081|0x0081: RETURN   \l}"];
MethodNode[shape=record,label="{protected void com.mapbox.mapboxsdk.annotations.MarkerViewOptions.\<init\>((r4 'this' I:com.mapbox.mapboxsdk.annotations.MarkerViewOptions A[IMMUTABLE_TYPE, THIS]), (r5 I:android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
}

