digraph "CFG forcom.mapbox.mapboxsdk.storage.FileSource.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.concurrent.locks.ReentrantLock) =  java.util.concurrent.locks.ReentrantLock \l0x0002: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantLock) java.util.concurrent.locks.ReentrantLock.\<init\>():void type: DIRECT \l0x0005: SPUT  (r0 I:java.util.concurrent.locks.Lock) com.mapbox.mapboxsdk.storage.FileSource.resourcesCachePathLoaderLock java.util.concurrent.locks.Lock \l0x0007: NEW_INSTANCE  (r0 I:java.util.concurrent.locks.ReentrantLock) =  java.util.concurrent.locks.ReentrantLock \l0x0009: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantLock) java.util.concurrent.locks.ReentrantLock.\<init\>():void type: DIRECT \l0x000c: SPUT  (r0 I:java.util.concurrent.locks.Lock) com.mapbox.mapboxsdk.storage.FileSource.internalCachePathLoaderLock java.util.concurrent.locks.Lock \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: RETURN   \l}"];
MethodNode[shape=record,label="{static void com.mapbox.mapboxsdk.storage.FileSource.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

