digraph "CFG forcom.mapbox.mapboxsdk.http.HttpRequestUrl.buildResourceUrl(Ljava\/lang\/String;Ljava\/lang\/String;I)Ljava\/lang\/String;" {
subgraph cluster_Region_2037313972 {
label = "R(1:(2:(1:7)|(3:(1:3)(1:4)|5|6))) | DECL_VAR: java.lang.String null\l";
node [shape=record,color=blue];
subgraph cluster_Region_1394150222 {
label = "R(2:(1:7)|(3:(1:3)(1:4)|5|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_453215612 {
label = "IF [B:1:0x0004] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (isValidMapboxEndpoint(r0) != true) goto L_?\l}"];
subgraph cluster_Region_410366385 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return r1\l}"];
}
}
subgraph cluster_Region_379060314 {
label = "R(3:(1:3)(1:4)|5|6)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_230701756 {
label = "IF [B:2:0x0006] THEN: R(1:3) ELSE: R(1:4)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r2 == 0) goto L_0x0008\l}"];
subgraph cluster_Region_881859929 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|java.lang.String r0 = r1 + \"?\"\l}"];
}
subgraph cluster_Region_1071561511 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001a|java.lang.String r0 = r1 + \"&\"\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x002b|PHI: r0 \l  PHI: (r0v2 java.lang.String) = (r0v5 java.lang.String), (r0v7 java.lang.String) binds: [B:4:0x001a, B:3:0x0008] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r0 + \"events=true\"\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
MethodNode[shape=record,label="{public static java.lang.String com.mapbox.mapboxsdk.http.HttpRequestUrl.buildResourceUrl((r0v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_0 -> Node_1;
}

