digraph "CFG forcom.mapbox.mapboxsdk.http.NativeHttpRequest.\<init\>(JLjava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r8 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: INVOKE  (r0 I:com.mapbox.mapboxsdk.ModuleProvider) =  com.mapbox.mapboxsdk.Mapbox.getModuleProvider():com.mapbox.mapboxsdk.ModuleProvider type: STATIC \l0x0007: INVOKE  (r0 I:com.mapbox.mapboxsdk.http.HttpRequest) = (r0 I:com.mapbox.mapboxsdk.ModuleProvider) com.mapbox.mapboxsdk.ModuleProvider.createHttpRequest():com.mapbox.mapboxsdk.http.HttpRequest type: INTERFACE \l0x000b: IPUT  \l  (r0 I:com.mapbox.mapboxsdk.http.HttpRequest)\l  (r8 I:com.mapbox.mapboxsdk.http.NativeHttpRequest)\l com.mapbox.mapboxsdk.http.NativeHttpRequest.httpRequest com.mapbox.mapboxsdk.http.HttpRequest \l0x000d: NEW_INSTANCE  (r0 I:java.util.concurrent.locks.ReentrantLock) =  java.util.concurrent.locks.ReentrantLock \l0x000f: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantLock) java.util.concurrent.locks.ReentrantLock.\<init\>():void type: DIRECT \l0x0012: IPUT  \l  (r0 I:java.util.concurrent.locks.ReentrantLock)\l  (r8 I:com.mapbox.mapboxsdk.http.NativeHttpRequest)\l com.mapbox.mapboxsdk.http.NativeHttpRequest.lock java.util.concurrent.locks.ReentrantLock \l0x0014: IPUT  \l  (r9 I:long)\l  (r8 I:com.mapbox.mapboxsdk.http.NativeHttpRequest)\l com.mapbox.mapboxsdk.http.NativeHttpRequest.nativePtr long \l0x0016: CONST_STR  (r0 I:java.lang.String) =  \"local:\/\/\" \l0x0018: INVOKE  (r0 I:boolean) = (r11 I:java.lang.String), (r0 I:java.lang.String) java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001e|0x001e: INVOKE  \l  (r8 I:com.mapbox.mapboxsdk.http.NativeHttpRequest)\l  (r11 I:java.lang.String)\l com.mapbox.mapboxsdk.http.NativeHttpRequest.executeLocalRequest(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|0x0021: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: IGET  (r1 I:com.mapbox.mapboxsdk.http.HttpRequest) = (r8 I:com.mapbox.mapboxsdk.http.NativeHttpRequest) com.mapbox.mapboxsdk.http.NativeHttpRequest.httpRequest com.mapbox.mapboxsdk.http.HttpRequest \l0x0024: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0025: MOVE  (r3 I:?[long, double]) = (r9 I:?[long, double]) \l0x0026: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0027: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0028: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0029: INVOKE  \l  (r1 I:com.mapbox.mapboxsdk.http.HttpRequest)\l  (r2 I:com.mapbox.mapboxsdk.http.HttpResponder)\l  (r3 I:long)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String)\l com.mapbox.mapboxsdk.http.HttpRequest.executeRequest(com.mapbox.mapboxsdk.http.HttpResponder, long, java.lang.String, java.lang.String, java.lang.String):void type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.mapboxsdk.http.NativeHttpRequest.\<init\>((r8 'this' I:com.mapbox.mapboxsdk.http.NativeHttpRequest A[IMMUTABLE_TYPE, THIS]), (r9 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Keep, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

