digraph "CFG forcom.mapbox.mapboxsdk.http.LocalRequestTask.loadFile(Landroid\/content\/res\/AssetManager;Ljava\/lang\/String;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r3 I:java.io.InputStream) = \l  (r3 I:android.content.res.AssetManager)\l  (r4 I:java.lang.String)\l android.content.res.AssetManager.open(java.lang.String):java.io.InputStream type: VIRTUAL A[Catch:\{ IOException \-\> 0x0032 \}, TRY_ENTER]\l0x0004: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|SYNTHETIC\lSplitter:B:3:0x0005\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0005\l|0x0005: INVOKE  (r4 I:int) = (r3 I:java.io.InputStream) java.io.InputStream.available():int type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0019, all \-\> 0x0016 \}, TRY_ENTER]\l0x0009: NEW_ARRAY  (r4 I:byte[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: byte[] A[Catch:\{ Throwable \-\> 0x0019, all \-\> 0x0016 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|SYNTHETIC\lSplitter:B:5:0x000b\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x000b\l|0x000b: INVOKE  (r3 I:java.io.InputStream), (r4 I:byte[]) java.io.InputStream.read(byte[]):int type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0014 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x003e \l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|SYNTHETIC\lSplitter:B:8:0x0010\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0010\l|0x0010: INVOKE  (r3 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0030 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0014|ExcHandler: Throwable null\lSplitter:B:5:0x000b\l|0x0014: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x0016|ExcHandler: all null\lSplitter:B:3:0x0005\l|0x0016: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x0017|0x0017: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0019|ExcHandler: Throwable null\lSplitter:B:3:0x0005\l|0x0019: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x001a|0x001a: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x001b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x001c: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x001d|SYNTHETIC\lSplitter:B:17:0x001d\l}"];
Node_18 [shape=record,label="{18\:\ ?|Splitter:B:17:0x001d\l|0x001d: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x001e \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x001e|ExcHandler: all null\lSplitter:B:17:0x001d\l|0x001e: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_20 [shape=record,label="{20\:\ 0x001f|0x001f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x002f \l}"];
Node_21 [shape=record,label="{21\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x002c \l}"];
Node_22 [shape=record,label="{22\:\ 0x0023|SYNTHETIC\lSplitter:B:22:0x0023\l}"];
Node_23 [shape=record,label="{23\:\ ?|Splitter:B:22:0x0023\l|0x0023: INVOKE  (r3 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0027 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0027|ExcHandler: Throwable null\lSplitter:B:22:0x0023\l|0x0027: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_26 [shape=record,label="{26\:\ 0x0028|SYNTHETIC\lSplitter:B:26:0x0028\l}"];
Node_27 [shape=record,label="{27\:\ ?|Splitter:B:26:0x0028\l|0x0028: INVOKE  (r0 I:java.lang.Throwable), (r3 I:java.lang.Throwable) java.lang.Throwable.addSuppressed(java.lang.Throwable):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0030 \}, TRY_ENTER]\l0x002b: GOTO  \-\> 0x002f A[Catch:\{ IOException \-\> 0x0030 \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x002c|0x002c: INVOKE  (r3 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0030 \}]\l}"];
Node_29 [shape=record,label="{29\:\ 0x002f|0x002f: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ IOException \-\> 0x0030 \}, TRY_LEAVE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0030|ExcHandler: IOException null\lSplitter:B:8:0x0010\l|0x0030: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_32 [shape=record,label="{32\:\ 0x0032|ExcHandler: IOException null\lSplitter:B:1:0x0001\l|0x0032: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_33 [shape=record,label="{33\:\ 0x0033|0x0033: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0034|0x0034: CONST_STR  (r0 I:java.lang.String) =  \"Load file failed\" \l0x0036: CONST_STR  (r1 I:java.lang.String) =  \"Mbgl\-LocalRequestTask\" \l0x0038: INVOKE  \l  (r1 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r3 I:java.lang.Throwable)\l com.mapbox.mapboxsdk.log.Logger.e(java.lang.String, java.lang.String, java.lang.Throwable):void type: STATIC \l0x003b: INVOKE  (r0 I:java.lang.String), (r3 I:java.lang.Exception) com.mapbox.mapboxsdk.MapStrictMode.strictModeViolation(java.lang.String, java.lang.Exception):void type: STATIC \l}"];
Node_35 [shape=record,label="{35\:\ 0x003e|0x003e: RETURN  (r4 I:byte[]) \l}"];
MethodNode[shape=record,label="{private static byte[] com.mapbox.mapboxsdk.http.LocalRequestTask.loadFile((r3 I:android.content.res.AssetManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_32;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_15;
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_4 -> Node_15;
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_6 -> Node_11;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_35;
Node_8 -> Node_9;
Node_8 -> Node_30;
Node_9 -> Node_30;
Node_9 -> Node_35;
Node_11 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_29;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_28;
Node_22 -> Node_23;
Node_22 -> Node_25;
Node_23 -> Node_25;
Node_23 -> Node_29;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_30;
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_30 -> Node_34;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
}

