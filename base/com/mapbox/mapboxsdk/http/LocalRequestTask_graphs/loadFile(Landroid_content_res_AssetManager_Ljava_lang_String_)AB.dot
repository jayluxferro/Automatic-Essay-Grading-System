digraph "CFG forcom.mapbox.mapboxsdk.http.LocalRequestTask.loadFile(Landroid\/content\/res\/AssetManager;Ljava\/lang\/String;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IOException \-\> 0x0032 \}\lSplitter:B:1:0x0001\l|java.io.InputStream r3 = r3.open(r4)     \/\/ Catch:\{ IOException \-\> 0x0032 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|SYNTHETIC\lSplitter:B:3:0x0005\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ Throwable \-\> 0x0019, all \-\> 0x0016 \}\lSplitter:B:3:0x0005\l|byte[] r4 = new byte[r3.available()]     \/\/ Catch:\{ Throwable \-\> 0x0019, all \-\> 0x0016 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|SYNTHETIC\lSplitter:B:5:0x000b\l}"];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ Throwable \-\> 0x0014 \}\lSplitter:B:5:0x000b\l|r3.read(r4)     \/\/ Catch:\{ Throwable \-\> 0x0014 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|if (r3 == null) goto L_0x003e\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|SYNTHETIC\lSplitter:B:8:0x0010\l}"];
Node_9 [shape=record,label="{9\:\ ?|Catch:\{ IOException \-\> 0x0030 \}\lSplitter:B:8:0x0010\l|r3.close()     \/\/ Catch:\{ IOException \-\> 0x0030 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|ExcHandler: Throwable (th java.lang.Throwable)\lSplitter:B:5:0x000b\l|java.lang.Throwable r0 = th\l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:3:0x0005\l|java.lang.Throwable r1 = th\l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|r4 = null\l}"];
Node_13 [shape=record,label="{13\:\ 0x0019|ExcHandler: Throwable (r4v7 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:3:0x0005\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_14 [shape=record,label="{14\:\ 0x001a|r0 = r4\lr4 = null\l}"];
Node_15 [shape=record,label="{15\:\ 0x001d|SYNTHETIC\lPHI: r0 r4 \l  PHI: (r0v3 'th' java.lang.Throwable) = (r0v4 'th' java.lang.Throwable), (r0v5 'th' java.lang.Throwable) binds: [B:14:0x001a, B:10:0x0014] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v6 byte[]) = (r4v8 byte[]), (r4v11 byte[]) binds: [B:14:0x001a, B:10:0x0014] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:15:0x001d\l}"];
Node_16 [shape=record,label="{16\:\ ?|Catch:\{ all \-\> 0x001e \}\lSplitter:B:15:0x001d\l|throw r0     \/\/ Catch:\{ all \-\> 0x001e \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x001e|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:15:0x001d\l|java.lang.Throwable r1 = th\l}"];
Node_18 [shape=record,label="{18\:\ 0x001f|PHI: r0 r1 r4 \l  PHI: (r0v2 'th' java.lang.Throwable) = (r0v3 'th' java.lang.Throwable), (r0v0 'th' java.lang.Throwable) binds: [B:17:0x001e, B:12:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 'th' java.lang.Throwable) = (r1v2 'th' java.lang.Throwable), (r1v3 'th' java.lang.Throwable) binds: [B:17:0x001e, B:12:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v5 byte[]) = (r4v6 byte[]), (r4v9 byte[]) binds: [B:17:0x001e, B:12:0x0017] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == null) goto L_0x002f\l}"];
Node_19 [shape=record,label="{19\:\ 0x0021|if (r0 == null) goto L_0x002c\l}"];
Node_20 [shape=record,label="{20\:\ 0x0023|SYNTHETIC\lSplitter:B:20:0x0023\l}"];
Node_21 [shape=record,label="{21\:\ ?|Catch:\{ Throwable \-\> 0x0027 \}\lSplitter:B:20:0x0023\l|r3.close()     \/\/ Catch:\{ Throwable \-\> 0x0027 \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x0027|ExcHandler: Throwable (r3v5 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:20:0x0023\l|java.lang.Throwable r3 = move\-exception\l}"];
Node_23 [shape=record,label="{23\:\ 0x0028|SYNTHETIC\lSplitter:B:23:0x0028\l}"];
Node_24 [shape=record,label="{24\:\ ?|Catch:\{ IOException \-\> 0x0030 \}\lSplitter:B:23:0x0028\l|r0.addSuppressed(r3)     \/\/ Catch:\{ IOException \-\> 0x0030 \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x002c|Catch:\{ IOException \-\> 0x0030 \}\l|r3.close()     \/\/ Catch:\{ IOException \-\> 0x0030 \}\l}"];
Node_26 [shape=record,label="{26\:\ 0x002f|Catch:\{ IOException \-\> 0x0030 \}\l|throw r1     \/\/ Catch:\{ IOException \-\> 0x0030 \}\l}"];
Node_27 [shape=record,label="{27\:\ 0x0030|ExcHandler: IOException (e java.io.IOException)\lSplitter:B:8:0x0010\l|java.io.IOException r3 = e\l}"];
Node_28 [shape=record,label="{28\:\ 0x0032|ExcHandler: IOException (e java.io.IOException)\lSplitter:B:1:0x0001\l|java.io.IOException r3 = e\l}"];
Node_29 [shape=record,label="{29\:\ 0x0033|r4 = null\l}"];
Node_30 [shape=record,label="{30\:\ 0x0034|PHI: r3 r4 \l  PHI: (r3v1 'e' java.io.IOException) = (r3v2 'e' java.io.IOException), (r3v4 'e' java.io.IOException) binds: [B:29:0x0033, B:27:0x0030] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 byte[]) = (r4v3 byte[]), (r4v5 byte[]) binds: [B:29:0x0033, B:27:0x0030] A[DONT_GENERATE, DONT_INLINE]\l|com.mapbox.mapboxsdk.log.Logger.m81e(TAG, \"Load file failed\", r3)\lcom.mapbox.mapboxsdk.MapStrictMode.strictModeViolation(\"Load file failed\", (java.lang.Exception) r3)\l}"];
Node_31 [shape=record,label="{31\:\ 0x003e|RETURN\lPHI: r4 \l  PHI: (r4v1 byte[]) = (r4v2 byte[]), (r4v11 byte[]), (r4v11 byte[]) binds: [B:30:0x0034, B:7:0x000e, B:9:?] A[DONT_GENERATE, DONT_INLINE]\l|return r4\l}"];
MethodNode[shape=record,label="{private static byte[] com.mapbox.mapboxsdk.http.LocalRequestTask.loadFile((r3v0 android.content.res.AssetManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_28;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_13;
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_4 -> Node_13;
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_6 -> Node_10;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_31;
Node_8 -> Node_9;
Node_8 -> Node_27;
Node_9 -> Node_27;
Node_9 -> Node_31;
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_18;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_26;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_21 -> Node_26;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_27;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
}

