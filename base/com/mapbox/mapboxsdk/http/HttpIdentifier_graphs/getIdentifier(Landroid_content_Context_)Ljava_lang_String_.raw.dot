digraph "CFG forcom.mapbox.mapboxsdk.http.HttpIdentifier.getIdentifier(Landroid\/content\/Context;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r0 I:android.content.pm.PackageManager) = (r4 I:android.content.Context) android.content.Context.getPackageManager():android.content.pm.PackageManager type: VIRTUAL A[Catch:\{ Exception \-\> 0x002b \}, TRY_ENTER]\l0x0004: INVOKE  (r1 I:java.lang.String) = (r4 I:android.content.Context) android.content.Context.getPackageName():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x002b \}]\l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x002b \}]\l0x0009: INVOKE  (r0 I:android.content.pm.PackageInfo) = \l  (r0 I:android.content.pm.PackageManager)\l  (r1 I:java.lang.String)\l  (r2 I:int)\l android.content.pm.PackageManager.getPackageInfo(java.lang.String, int):android.content.pm.PackageInfo type: VIRTUAL A[Catch:\{ Exception \-\> 0x002b \}]\l0x000d: CONST_STR  (r1 I:java.lang.String) =  \"%s\/%s (%s)\" A[Catch:\{ Exception \-\> 0x002b \}]\l0x000f: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x002b \}]\l0x0010: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ Exception \-\> 0x002b \}]\l0x0012: INVOKE  (r4 I:java.lang.String) = (r4 I:android.content.Context) android.content.Context.getPackageName():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x002b \}]\l0x0016: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x002b \}]\l0x0018: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x002b \}]\l0x0019: IGET  (r2 I:java.lang.String) = (r0 I:android.content.pm.PackageInfo) android.content.pm.PackageInfo.versionName java.lang.String A[Catch:\{ Exception \-\> 0x002b \}]\l0x001b: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x002b \}]\l0x001d: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x002b \}]\l0x001e: IGET  (r0 I:int) = (r0 I:android.content.pm.PackageInfo) android.content.pm.PackageInfo.versionCode int A[Catch:\{ Exception \-\> 0x002b \}]\l0x0020: INVOKE  (r0 I:java.lang.Integer) = (r0 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ Exception \-\> 0x002b \}]\l0x0024: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x002b \}]\l0x0026: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.String), (r3 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC A[Catch:\{ Exception \-\> 0x002b \}]\l0x0029: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x002a|0x002a: RETURN  (r4 I:java.lang.String) \l}"];
Node_3 [shape=record,label="{3\:\ 0x002b|ExcHandler: Exception null\lSplitter:B:0:0x0000\l|0x002b: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|0x002c: INVOKE  (r4 I:java.lang.Exception) com.mapbox.mapboxsdk.MapStrictMode.strictModeViolation(java.lang.Exception):void type: STATIC \l0x002f: CONST_STR  (r4 I:java.lang.String) =  \"\" \l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|0x0031: RETURN  (r4 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{private static java.lang.String com.mapbox.mapboxsdk.http.HttpIdentifier.getIdentifier((r4 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

