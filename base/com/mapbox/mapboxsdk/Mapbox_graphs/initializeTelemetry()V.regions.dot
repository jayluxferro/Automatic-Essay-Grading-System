digraph "CFG forcom.mapbox.mapboxsdk.Mapbox.initializeTelemetry()V" {
subgraph cluster_Region_971473208 {
label = "R(1:(1:1))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1169583300 {
label = "Try: R(1:1) catches: R(2:2|3)";
node [shape=record,color=blue];
subgraph cluster_Region_829578255 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ Exception \-\> 0x000d \}\lSplitter:B:0:0x0000\l|INSTANCE.telemetry = getModuleProvider().obtainTelemetry()     \/\/ Catch:\{ Exception \-\> 0x000d \}\l}"];
}
subgraph cluster_Region_1468813130 {
label = "R(2:2|3) | ExcHandler: Exception (r0v0 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000d|ExcHandler: Exception (r0v0 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|com.mapbox.mapboxsdk.log.Logger.m81e(TAG, \"Error occurred while initializing telemetry\", r0)\lcom.mapbox.mapboxsdk.MapStrictMode.strictModeViolation(\"Error occurred while initializing telemetry\", r0)\l}"];
}
}
}
subgraph cluster_Region_1468813130 {
label = "R(2:2|3) | ExcHandler: Exception (r0v0 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000d|ExcHandler: Exception (r0v0 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|com.mapbox.mapboxsdk.log.Logger.m81e(TAG, \"Error occurred while initializing telemetry\", r0)\lcom.mapbox.mapboxsdk.MapStrictMode.strictModeViolation(\"Error occurred while initializing telemetry\", r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void com.mapbox.mapboxsdk.Mapbox.initializeTelemetry() }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_0 -> Node_1;
Node_0 -> Node_2;
}

