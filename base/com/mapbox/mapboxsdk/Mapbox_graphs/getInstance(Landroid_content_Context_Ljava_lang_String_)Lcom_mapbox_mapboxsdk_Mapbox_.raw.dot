digraph "CFG forcom.mapbox.mapboxsdk.Mapbox.getInstance(Landroid\/content\/Context;Ljava\/lang\/String;)Lcom\/mapbox\/mapboxsdk\/Mapbox;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_CLASS  (r0 I:java.lang.Class\<com.mapbox.mapboxsdk.Mapbox\>) =  com.mapbox.mapboxsdk.Mapbox.class \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: CONST_STR  (r1 I:java.lang.String) =  \"Mapbox\" \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|SYNTHETIC\lSplitter:B:3:0x0005\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0005\l|0x0005: INVOKE  (r1 I:java.lang.String) com.mapbox.mapboxsdk.utils.ThreadUtils.checkThread(java.lang.String):void type: STATIC A[Catch:\{ all \-\> 0x002a \}, TRY_ENTER]\l0x0008: SGET  (r1 I:com.mapbox.mapboxsdk.Mapbox) =  com.mapbox.mapboxsdk.Mapbox.INSTANCE com.mapbox.mapboxsdk.Mapbox A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0026 A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: INVOKE  (r2 I:android.content.Context) = (r2 I:android.content.Context) android.content.Context.getApplicationContext():android.content.Context type: VIRTUAL A[Catch:\{ all \-\> 0x002a \}]\l0x0010: INVOKE  (r2 I:android.content.Context) com.mapbox.mapboxsdk.storage.FileSource.initializeFileDirsPaths(android.content.Context):void type: STATIC A[Catch:\{ all \-\> 0x002a \}]\l0x0013: NEW_INSTANCE  (r1 I:com.mapbox.mapboxsdk.Mapbox) =  com.mapbox.mapboxsdk.Mapbox A[Catch:\{ all \-\> 0x002a \}]\l0x0015: INVOKE  \l  (r1 I:com.mapbox.mapboxsdk.Mapbox)\l  (r2 I:android.content.Context)\l  (r3 I:java.lang.String)\l com.mapbox.mapboxsdk.Mapbox.\<init\>(android.content.Context, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x002a \}]\l0x0018: SPUT  (r1 I:com.mapbox.mapboxsdk.Mapbox) com.mapbox.mapboxsdk.Mapbox.INSTANCE com.mapbox.mapboxsdk.Mapbox A[Catch:\{ all \-\> 0x002a \}]\l0x001a: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String) com.mapbox.mapboxsdk.Mapbox.isAccessTokenValid(java.lang.String):boolean type: STATIC A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0023 A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: INVOKE   com.mapbox.mapboxsdk.Mapbox.initializeTelemetry():void type: STATIC A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: INVOKE  (r2 I:android.content.Context) com.mapbox.mapboxsdk.net.ConnectivityReceiver.instance(android.content.Context):com.mapbox.mapboxsdk.net.ConnectivityReceiver type: STATIC A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: SGET  (r2 I:com.mapbox.mapboxsdk.Mapbox) =  com.mapbox.mapboxsdk.Mapbox.INSTANCE com.mapbox.mapboxsdk.Mapbox A[Catch:\{ all \-\> 0x002a \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: RETURN  (r2 I:com.mapbox.mapboxsdk.Mapbox) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|ExcHandler: all null\lSplitter:B:3:0x0005\l|0x002a: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|0x002b: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|0x002c: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static synchronized com.mapbox.mapboxsdk.Mapbox com.mapbox.mapboxsdk.Mapbox.getInstance((r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[BUILD, android.support.annotation.UiThread, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

