digraph "CFG forcom.mapbox.mapboxsdk.maps.MapboxMapOptions.createFromAttributes(Landroid\/content\/Context;Landroid\/util\/AttributeSet;)Lcom\/mapbox\/mapboxsdk\/maps\/MapboxMapOptions;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.mapbox.mapboxsdk.maps.MapboxMapOptions r0 = new com.mapbox.mapboxsdk.maps.MapboxMapOptions()\lfloat r1 = r11.getResources().getDisplayMetrics().density\landroid.content.res.TypedArray r12 = r11.obtainStyledAttributes(r12, com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView, 0, 0)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|SYNTHETIC\lSplitter:B:1:0x0016\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x01bc \}\lSplitter:B:1:0x0016\l|r0.camera(new com.mapbox.mapboxsdk.camera.CameraPosition.Builder(r12).build())     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.styleUrl(r12.getString(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_styleUrl))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.styleJson(r12.getString(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_styleJson))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.apiBaseUrl(r12.getString(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_apiBaseUrl))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.zoomGesturesEnabled(r12.getBoolean(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiZoomGestures, true))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.scrollGesturesEnabled(r12.getBoolean(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiScrollGestures, true))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.rotateGesturesEnabled(r12.getBoolean(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiRotateGestures, true))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.tiltGesturesEnabled(r12.getBoolean(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiTiltGestures, true))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.zoomControlsEnabled(r12.getBoolean(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiZoomControls, false))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.doubleTapGesturesEnabled(r12.getBoolean(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiDoubleTapGestures, true))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.maxZoomPreference((double) r12.getFloat(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_cameraZoomMax, 25.5f))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.minZoomPreference((double) r12.getFloat(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_cameraZoomMin, 0.0f))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.compassEnabled(r12.getBoolean(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiCompass, true))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.compassGravity(r12.getInt(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiCompassGravity, 8388661))     \/\/ Catch:\{ all \-\> 0x01bc \}\lint r7 = com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiCompassMarginLeft     \/\/ Catch:\{ all \-\> 0x01bc \}\lfloat r8 = FOUR_DP * r1     \/\/ Catch:\{ all \-\> 0x01bc \}\lint[] r6 = new int[]\{(int) r12.getDimension(r7, r8), (int) r12.getDimension(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiCompassMarginTop, r8), (int) r12.getDimension(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiCompassMarginRight, r8), (int) r12.getDimension(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiCompassMarginBottom, r8)\}\lr0.compassMargins(r6)     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.compassFadesWhenFacingNorth(r12.getBoolean(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiCompassFadeFacingNorth, true))     \/\/ Catch:\{ all \-\> 0x01bc \}\landroid.graphics.drawable.Drawable r6 = r12.getDrawable(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiCompassDrawable)     \/\/ Catch:\{ all \-\> 0x01bc \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x00df|Catch:\{ all \-\> 0x01bc \}\l|if (r6 != null) goto L_0x00ec     \/\/ Catch:\{ all \-\> 0x01bc \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x00e1|Catch:\{ all \-\> 0x01bc \}\l|android.graphics.drawable.Drawable r6 = android.support.p000v4.content.res.ResourcesCompat.getDrawable(r11.getResources(), com.mapbox.mapboxsdk.C1080R.C1081drawable.mapbox_compass_icon, (android.content.res.Resources.Theme) null)     \/\/ Catch:\{ all \-\> 0x01bc \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x00ec|Catch:\{ all \-\> 0x01bc \}\lPHI: r6 \l  PHI: (r6v7 android.graphics.drawable.Drawable) = (r6v6 android.graphics.drawable.Drawable), (r6v11 android.graphics.drawable.Drawable) binds: [B:3:0x00df, B:4:0x00e1] A[DONT_GENERATE, DONT_INLINE]\l|r0.compassImage(r6)     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.logoEnabled(r12.getBoolean(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiLogo, true))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.logoGravity(r12.getInt(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiLogoGravity, 8388691))     \/\/ Catch:\{ all \-\> 0x01bc \}\lint[] r11 = new int[]\{(int) r12.getDimension(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiLogoMarginLeft, r8), (int) r12.getDimension(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiLogoMarginTop, r8), (int) r12.getDimension(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiLogoMarginRight, r8), (int) r12.getDimension(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiLogoMarginBottom, r8)\}\lr0.logoMargins(r11)     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.attributionTintColor(r12.getColor(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiAttributionTintColor, \-1))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.attributionEnabled(r12.getBoolean(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiAttribution, true))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.attributionGravity(r12.getInt(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiAttributionGravity, 8388691))     \/\/ Catch:\{ all \-\> 0x01bc \}\lint[] r11 = new int[]\{(int) r12.getDimension(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiAttributionMarginLeft, r1 * NINETY_TWO_DP), (int) r12.getDimension(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiAttributionMarginTop, r8), (int) r12.getDimension(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiAttributionMarginRight, r8), (int) r12.getDimension(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_uiAttributionMarginBottom, r8)\}\lr0.attributionMargins(r11)     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.textureMode(r12.getBoolean(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_renderTextureMode, false))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.translucentTextureSurface(r12.getBoolean(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_renderTextureTranslucentSurface, false))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.setPrefetchesTiles(r12.getBoolean(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_enableTilePrefetch, true))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.renderSurfaceOnTop(r12.getBoolean(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_enableZMediaOverlay, false))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.localIdeographFontFamily(r12.getString(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_localIdeographFontFamily))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.pixelRatio(r12.getFloat(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_pixelRatio, 0.0f))     \/\/ Catch:\{ all \-\> 0x01bc \}\lr0.foregroundLoadColor(r12.getInt(com.mapbox.mapboxsdk.C1080R.styleable.mapbox_MapView_mapbox_foregroundLoadColor, LIGHT_GRAY))     \/\/ Catch:\{ all \-\> 0x01bc \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x01b8|DONT_GENERATE\l|r12.recycle()\l}"];
Node_7 [shape=record,label="{7\:\ 0x01bb|RETURN\l|return r0\l}"];
Node_8 [shape=record,label="{8\:\ 0x01bc|ExcHandler:  FINALLY\lSplitter:B:1:0x0016\l|java.lang.Throwable r11 = move\-exception\l}"];
Node_9 [shape=record,label="{9\:\ 0x01bd|FINALLY_INSNS\l|r12.recycle()\l}"];
Node_10 [shape=record,label="{10\:\ 0x01c0|throw r11\l}"];
MethodNode[shape=record,label="{public static com.mapbox.mapboxsdk.maps.MapboxMapOptions com.mapbox.mapboxsdk.maps.MapboxMapOptions.createFromAttributes((r11v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

