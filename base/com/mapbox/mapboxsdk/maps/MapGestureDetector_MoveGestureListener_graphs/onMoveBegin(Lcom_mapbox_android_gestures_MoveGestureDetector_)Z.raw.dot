digraph "CFG forcom.mapbox.mapboxsdk.maps.MapGestureDetector.MoveGestureListener.onMoveBegin(Lcom\/mapbox\/android\/gestures\/MoveGestureDetector;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$MoveGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.MoveGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0002: INVOKE  (r0 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$600(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.UiSettings type: STATIC \l0x0006: INVOKE  (r0 I:boolean) = (r0 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.isScrollGesturesEnabled():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN  (r4 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$MoveGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.MoveGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0010: INVOKE  (r0 I:com.mapbox.mapboxsdk.maps.Transform) = (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$400(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.Transform type: STATIC \l0x0014: INVOKE  (r0 I:com.mapbox.mapboxsdk.maps.Transform) com.mapbox.mapboxsdk.maps.Transform.cancelTransitions():void type: VIRTUAL \l0x0017: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$MoveGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.MoveGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0019: CONST_STR  (r1 I:java.lang.String) =  \"Pan\" \l0x001b: INVOKE  (r2 I:android.graphics.PointF) = (r4 I:com.mapbox.android.gestures.MoveGestureDetector) com.mapbox.android.gestures.MoveGestureDetector.getFocalPoint():android.graphics.PointF type: VIRTUAL \l0x001f: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l  (r1 I:java.lang.String)\l  (r2 I:android.graphics.PointF)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.access$700(com.mapbox.mapboxsdk.maps.MapGestureDetector, java.lang.String, android.graphics.PointF):void type: STATIC \l0x0022: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$MoveGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.MoveGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0024: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l  (r4 I:com.mapbox.android.gestures.MoveGestureDetector)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.notifyOnMoveBeginListeners(com.mapbox.android.gestures.MoveGestureDetector):void type: VIRTUAL \l0x0027: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0028|0x0028: RETURN  (r4 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.mapboxsdk.maps.MapGestureDetector.MoveGestureListener.onMoveBegin((r3 'this' I:com.mapbox.mapboxsdk.maps.MapGestureDetector$MoveGestureListener A[IMMUTABLE_TYPE, THIS]), (r4 I:com.mapbox.android.gestures.MoveGestureDetector A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

