digraph "CFG forcom.mapbox.mapboxsdk.maps.IconManager.addIcon(Lcom\/mapbox\/mapboxsdk\/annotations\/Icon;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Map\<com.mapbox.mapboxsdk.annotations.Icon, java.lang.Integer\>) = (r2 I:com.mapbox.mapboxsdk.maps.IconManager) com.mapbox.mapboxsdk.maps.IconManager.iconMap java.util.Map \l0x0002: INVOKE  (r0 I:java.util.Set) = (r0 I:java.util.Map) java.util.Map.keySet():java.util.Set type: INTERFACE \l0x0006: INVOKE  (r0 I:boolean) = (r0 I:java.util.Set), (r3 I:java.lang.Object) java.util.Set.contains(java.lang.Object):boolean type: INTERFACE \l0x000a: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IGET  (r0 I:java.util.Map\<com.mapbox.mapboxsdk.annotations.Icon, java.lang.Integer\>) = (r2 I:com.mapbox.mapboxsdk.maps.IconManager) com.mapbox.mapboxsdk.maps.IconManager.iconMap java.util.Map \l0x000f: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0013: INVOKE  \l  (r0 I:java.util.Map)\l  (r3 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0032 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: INVOKE  \l  (r2 I:com.mapbox.mapboxsdk.maps.IconManager)\l  (r3 I:com.mapbox.mapboxsdk.annotations.Icon)\l com.mapbox.mapboxsdk.maps.IconManager.loadIcon(com.mapbox.mapboxsdk.annotations.Icon):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: IGET  (r4 I:java.util.Map\<com.mapbox.mapboxsdk.annotations.Icon, java.lang.Integer\>) = (r2 I:com.mapbox.mapboxsdk.maps.IconManager) com.mapbox.mapboxsdk.maps.IconManager.iconMap java.util.Map \l0x001e: IGET  (r0 I:java.util.Map\<com.mapbox.mapboxsdk.annotations.Icon, java.lang.Integer\>) = (r2 I:com.mapbox.mapboxsdk.maps.IconManager) com.mapbox.mapboxsdk.maps.IconManager.iconMap java.util.Map \l0x0020: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r3 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0024: CHECK_CAST  (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:?[OBJECT, ARRAY]) \l0x0026: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x002a: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x002b: INVOKE  (r0 I:java.lang.Integer) = (r0 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x002f: INVOKE  \l  (r4 I:java.util.Map)\l  (r3 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0032|0x0032: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.mapboxsdk.maps.IconManager.addIcon((r2 'this' I:com.mapbox.mapboxsdk.maps.IconManager A[IMMUTABLE_TYPE, THIS]), (r3 I:com.mapbox.mapboxsdk.annotations.Icon A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_6;
Node_5 -> Node_6;
}

