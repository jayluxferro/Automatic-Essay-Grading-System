digraph "CFG forcom.mapbox.mapboxsdk.maps.IconManager.updateIconRefCounter(Lcom\/mapbox\/mapboxsdk\/annotations\/Icon;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Map\<com.mapbox.mapboxsdk.annotations.Icon, java.lang.Integer\>) = (r1 I:com.mapbox.mapboxsdk.maps.IconManager) com.mapbox.mapboxsdk.maps.IconManager.iconMap java.util.Map \l0x0002: INVOKE  (r3 I:java.lang.Integer) = (r3 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0006: INVOKE  \l  (r0 I:java.util.Map)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.mapboxsdk.maps.IconManager.updateIconRefCounter((r1 'this' I:com.mapbox.mapboxsdk.maps.IconManager A[IMMUTABLE_TYPE, THIS]), (r2 I:com.mapbox.mapboxsdk.annotations.Icon A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

