digraph "CFG forcom.mapbox.mapboxsdk.maps.MapGestureDetector.TapGestureListener.onMultiFingerTap(Lcom\/mapbox\/android\/gestures\/MultiFingerTapGestureDetector;I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if (com.mapbox.mapboxsdk.maps.MapGestureDetector.access$600(r4.this$0).isZoomGesturesEnabled() == false) goto L_0x0048\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r6 == 2) goto L_0x0011\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|com.mapbox.mapboxsdk.maps.MapGestureDetector.access$400(r4.this$0).cancelTransitions()\lcom.mapbox.mapboxsdk.maps.MapGestureDetector.access$900(r4.this$0).onCameraMoveStarted(1)\lcom.mapbox.mapboxsdk.maps.MapGestureDetector.access$700(r4.this$0, com.mapbox.mapboxsdk.constants.TelemetryConstants.TWO_FINGER_TAP, r5.getFocalPoint())\l}"];
Node_5 [shape=record,label="{5\:\ 0x0035|if (com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1000(r4.this$0) == null) goto L_0x003e\l}"];
Node_6 [shape=record,label="{6\:\ 0x0037|android.graphics.PointF r5 = com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1000(r4.this$0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|android.graphics.PointF r5 = r5.getFocalPoint()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0042|PHI: r5 \l  PHI: (r5v1 android.graphics.PointF) = (r5v2 android.graphics.PointF), (r5v4 android.graphics.PointF) binds: [B:7:0x003e, B:6:0x0037] A[DONT_GENERATE, DONT_INLINE]\l|r4.this$0.zoomOutAnimated(r5, false)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0047|RETURN\l|return true\l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.mapboxsdk.maps.MapGestureDetector.TapGestureListener.onMultiFingerTap((r4v0 'this' com.mapbox.mapboxsdk.maps.MapGestureDetector$TapGestureListener A[IMMUTABLE_TYPE, THIS]), (r5v0 com.mapbox.android.gestures.MultiFingerTapGestureDetector A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_10[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

