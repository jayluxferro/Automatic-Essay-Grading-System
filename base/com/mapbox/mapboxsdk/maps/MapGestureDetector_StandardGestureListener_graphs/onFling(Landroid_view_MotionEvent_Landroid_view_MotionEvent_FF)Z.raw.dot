digraph "CFG forcom.mapbox.mapboxsdk.maps.MapGestureDetector.StandardGestureListener.onFling(Landroid\/view\/MotionEvent;Landroid\/view\/MotionEvent;FF)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: IGET  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$StandardGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.StandardGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0008: INVOKE  (r3 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$600(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.UiSettings type: STATIC \l0x000c: INVOKE  (r3 I:boolean) = (r3 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.isScrollGesturesEnabled():boolean type: VIRTUAL \l0x0010: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: RETURN  (r4 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IGET  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$StandardGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.StandardGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0016: INVOKE  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.notifyOnFlingListeners():void type: VIRTUAL \l0x0019: IGET  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$StandardGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.StandardGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x001b: INVOKE  (r3 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$600(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.UiSettings type: STATIC \l0x001f: INVOKE  (r3 I:boolean) = (r3 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.isFlingVelocityAnimationEnabled():boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|0x0023: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0026 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: RETURN  (r4 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: IGET  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$StandardGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.StandardGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0028: INVOKE  (r3 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$600(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.UiSettings type: STATIC \l0x002c: INVOKE  (r3 I:float) = (r3 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.getPixelRatio():float type: VIRTUAL \l0x0030: ARITH  (r5 I:float) = (r1 I:float) \/ (r3 I:float) \l0x0032: CAST  (r5 I:double) = (double) (r5 I:float) \l0x0033: ARITH  (r7 I:float) = (r2 I:float) \/ (r3 I:float) \l0x0035: CAST  (r7 I:double) = (double) (r7 I:float) \l0x0036: INVOKE  (r5 I:double) = (r5 I:double), (r7 I:double) java.lang.Math.hypot(double, double):double type: STATIC \l0x003a: CONST  (r7 I:?[long, double]) = \l  (4652007308841189376(0x408f400000000000, double:1000.0) ?[long, double])\l \l0x003f: CMP_G  (r7 I:int) = (r5 I:double), (r7 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0041|0x0041: IF  (r7 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:9:0x0044 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0043|0x0043: RETURN  (r4 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0044|0x0044: IGET  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$StandardGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.StandardGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0046: INVOKE  (r4 I:com.mapbox.mapboxsdk.maps.Transform) = (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$400(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.Transform type: STATIC \l0x004a: INVOKE  (r4 I:com.mapbox.mapboxsdk.maps.Transform) com.mapbox.mapboxsdk.maps.Transform.cancelTransitions():void type: VIRTUAL \l0x004d: IGET  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$StandardGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.StandardGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x004f: INVOKE  (r4 I:com.mapbox.mapboxsdk.maps.CameraChangeDispatcher) = (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$900(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.CameraChangeDispatcher type: STATIC \l0x0053: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0054: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.maps.CameraChangeDispatcher)\l  (r7 I:int)\l com.mapbox.mapboxsdk.maps.CameraChangeDispatcher.onCameraMoveStarted(int):void type: VIRTUAL \l0x0057: IGET  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$StandardGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.StandardGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0059: INVOKE  (r4 I:com.mapbox.mapboxsdk.maps.Transform) = (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$400(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.Transform type: STATIC \l0x005d: INVOKE  (r8 I:double) = (r4 I:com.mapbox.mapboxsdk.maps.Transform) com.mapbox.mapboxsdk.maps.Transform.getTilt():double type: VIRTUAL \l0x0061: CONST  (r10 I:?[long, double]) = \l  (4609434218613702656(0x3ff8000000000000, double:1.5) ?[long, double])\l \l0x0063: CONST  (r12 I:?[long, double]) = (0 ?[long, double]) \l0x0065: CMP_L  (r4 I:int) = (r8 I:double), (r12 I:double) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0067|0x0067: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x006d \l}"];
Node_11 [shape=record,label="{11\:\ 0x0069|0x0069: CONST  (r12 I:?[long, double]) = \l  (4621819117588971520(0x4024000000000000, double:10.0) ?[long, double])\l \l0x006b: ARITH  (r12 I:double) = (r8 I:double) \/ (r12 I:double) \l}"];
Node_12 [shape=record,label="{12\:\ 0x006d|0x006d: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006e: ARITH  (r12 I:double) = (r12 I:double) + (r10 I:double) \l0x006f: CAST  (r8 I:double) = (double) (r1 I:float) \l0x0070: ARITH  (r8 I:double) = (r8 I:double) \/ (r12 I:double) \l0x0071: CAST  (r3 I:double) = (double) (r3 I:float) \l0x0072: ARITH  (r15 I:double) = (r8 I:double) \/ (r3 I:double) \l0x0074: CAST  (r1 I:double) = (double) (r2 I:float) \l0x0075: ARITH  (r1 I:double) = (r1 I:double) \/ (r12 I:double) \l0x0076: ARITH  (r17 I:double) = (r1 I:double) \/ (r3 I:double) \l0x0078: CONST  (r1 I:?[long, double]) = \l  (4619567317775286272(0x401c000000000000, double:7.0) ?[long, double])\l \l0x007a: ARITH  (r5 I:double) = (r5 I:double) \/ (r1 I:double) \l0x007b: ARITH  (r5 I:double) = (r5 I:double) \/ (r12 I:double) \l0x007c: CONST  (r1 I:?[long, double]) = \l  (4639481672377565184(0x4062c00000000000, double:150.0) ?[long, double])\l \l0x0081: ARITH  (r5 I:double) = (r5 I:double) + (r1 I:double) \l0x0082: CAST  (r1 I:long) = (long) (r5 I:double) \l0x0083: IGET  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$StandardGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.StandardGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0085: INVOKE  (r14 I:com.mapbox.mapboxsdk.maps.Transform) = (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$400(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.Transform type: STATIC \l0x0089: MOVE  (r19 I:?[long, double]) = (r1 I:?[long, double]) \l0x008b: INVOKE  \l  (r14 I:com.mapbox.mapboxsdk.maps.Transform)\l  (r15 I:double)\l  (r17 I:double)\l  (r19 I:long)\l com.mapbox.mapboxsdk.maps.Transform.moveBy(double, double, long):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x008e|0x008e: RETURN  (r7 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.mapboxsdk.maps.MapGestureDetector.StandardGestureListener.onFling((r21 'this' I:com.mapbox.mapboxsdk.maps.MapGestureDetector$StandardGestureListener A[IMMUTABLE_TYPE, THIS]), (r22 I:android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

