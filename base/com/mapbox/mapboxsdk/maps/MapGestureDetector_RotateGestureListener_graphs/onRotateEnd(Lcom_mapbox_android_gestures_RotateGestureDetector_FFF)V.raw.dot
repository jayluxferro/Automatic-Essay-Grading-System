digraph "CFG forcom.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.onRotateEnd(Lcom\/mapbox\/android\/gestures\/RotateGestureDetector;FFF)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r2 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0002: INVOKE  (r4 I:com.mapbox.mapboxsdk.maps.CameraChangeDispatcher) = (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$900(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.CameraChangeDispatcher type: STATIC \l0x0006: INVOKE  (r4 I:com.mapbox.mapboxsdk.maps.CameraChangeDispatcher) com.mapbox.mapboxsdk.maps.CameraChangeDispatcher.onCameraIdle():void type: VIRTUAL \l0x0009: IGET  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r2 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x000b: INVOKE  (r4 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$600(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.UiSettings type: STATIC \l0x000f: INVOKE  (r4 I:boolean) = (r4 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.isIncreaseScaleThresholdWhenRotating():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0024 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: IGET  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r2 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0017: INVOKE  (r4 I:com.mapbox.android.gestures.AndroidGesturesManager) = (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1100(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.android.gestures.AndroidGesturesManager type: STATIC \l0x001b: INVOKE  (r4 I:com.mapbox.android.gestures.StandardScaleGestureDetector) = (r4 I:com.mapbox.android.gestures.AndroidGesturesManager) com.mapbox.android.gestures.AndroidGesturesManager.getStandardScaleGestureDetector():com.mapbox.android.gestures.StandardScaleGestureDetector type: VIRTUAL \l0x001f: IGET  (r5 I:float) = \l  (r2 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.defaultSpanSinceStartThreshold float \l0x0021: INVOKE  \l  (r4 I:com.mapbox.android.gestures.StandardScaleGestureDetector)\l  (r5 I:float)\l com.mapbox.android.gestures.StandardScaleGestureDetector.setSpanSinceStartThreshold(float):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|0x0024: IGET  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r2 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0026: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l  (r3 I:com.mapbox.android.gestures.RotateGestureDetector)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.notifyOnRotateEndListeners(com.mapbox.android.gestures.RotateGestureDetector):void type: VIRTUAL \l0x0029: IGET  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r2 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x002b: INVOKE  (r3 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$600(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.UiSettings type: STATIC \l0x002f: INVOKE  (r3 I:boolean) = (r3 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.isRotateVelocityAnimationEnabled():boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0033|0x0033: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0036 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0035|0x0035: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|0x0036: INVOKE  (r3 I:float) = (r6 I:float) java.lang.Math.abs(float):float type: STATIC \l0x003a: IGET  (r4 I:float) = \l  (r2 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.minimumAngularVelocity float \l0x003c: CMP_G  (r3 I:int) = (r3 I:float), (r4 I:float) \l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|0x003e: IF  (r3 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:9:0x0041 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0040|0x0040: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|0x0041: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0042: CMP_G  (r3 I:int) = (r6 I:float), (r3 I:float) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0044|0x0044: IF  (r3 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:12:0x0048 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0046|0x0046: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0048|0x0048: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0049|0x0049: CAST  (r4 I:double) = (double) (r6 I:float) \l0x004a: CONST  (r0 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x004c: INVOKE  (r4 I:double) = (r4 I:double), (r0 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x0050: CAST  (r4 I:float) = (float) (r4 I:double) \l0x0051: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (1069547520(0x3fc00000, float:1.5) ?[int, float, short, byte, char])\l \l0x0053: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (1101004800(0x41a00000, float:20.0) ?[int, float, short, byte, char])\l \l0x0055: INVOKE  (r4 I:float) = (r4 I:float), (r5 I:float), (r6 I:float) com.mapbox.mapboxsdk.utils.MathUtils.clamp(float, float, float):float type: STATIC \l0x0059: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x005b: ARITH  (r5 I:float) = (r5 I:float) + (r4 I:float) \l0x005c: CAST  (r5 I:double) = (double) (r5 I:float) \l0x005d: INVOKE  (r5 I:double) = (r5 I:double) java.lang.Math.log(double):double type: STATIC \l0x0061: CONST  (r0 I:?[long, double]) = \l  (4647503709213818880(0x407f400000000000, double:500.0) ?[long, double])\l \l0x0066: ARITH  (r5 I:double) = (r5 I:double) * (r0 I:double) \l0x0068: CAST  (r5 I:long) = (long) (r5 I:double) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0069|0x0069: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x006c \l}"];
Node_15 [shape=record,label="{15\:\ 0x006b|0x006b: NEG  (r4 I:float) = (r4 I:float) \l}"];
Node_16 [shape=record,label="{16\:\ 0x006c|0x006c: IGET  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r2 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x006e: INVOKE  (r4 I:android.animation.Animator) = \l  (r2 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l  (r4 I:float)\l  (r5 I:long)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.createRotateAnimator(float, long):android.animation.Animator type: DIRECT \l0x0072: INVOKE  \l  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l  (r4 I:android.animation.Animator)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1502(com.mapbox.mapboxsdk.maps.MapGestureDetector, android.animation.Animator):android.animation.Animator type: STATIC \l0x0075: IGET  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r2 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0077: IGET  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r2 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0079: INVOKE  (r4 I:android.animation.Animator) = (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1500(com.mapbox.mapboxsdk.maps.MapGestureDetector):android.animation.Animator type: STATIC \l0x007d: INVOKE  \l  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l  (r4 I:android.animation.Animator)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1400(com.mapbox.mapboxsdk.maps.MapGestureDetector, android.animation.Animator):void type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x0080|0x0080: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.onRotateEnd((r2 'this' I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener A[IMMUTABLE_TYPE, THIS]), (r3 I:com.mapbox.android.gestures.RotateGestureDetector A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

