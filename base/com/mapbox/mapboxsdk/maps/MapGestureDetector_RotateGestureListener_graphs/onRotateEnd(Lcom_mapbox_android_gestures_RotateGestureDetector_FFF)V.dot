digraph "CFG forcom.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.onRotateEnd(Lcom\/mapbox\/android\/gestures\/RotateGestureDetector;FFF)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.mapbox.mapboxsdk.maps.MapGestureDetector.access$900(r2.this$0).onCameraIdle()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|if (com.mapbox.mapboxsdk.maps.MapGestureDetector.access$600(r2.this$0).isIncreaseScaleThresholdWhenRotating() == false) goto L_0x0024\l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1100(r2.this$0).getStandardScaleGestureDetector().setSpanSinceStartThreshold(r2.defaultSpanSinceStartThreshold)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|r2.this$0.notifyOnRotateEndListeners(r3)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0033|if (com.mapbox.mapboxsdk.maps.MapGestureDetector.access$600(r2.this$0).isRotateVelocityAnimationEnabled() != false) goto L_0x0036\l}"];
Node_5 [shape=record,label="{5\:\ 0x0035|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x0036}"];
Node_7 [shape=record,label="{7\:\ 0x003e|if ((java.lang.Math.abs(r6) \> r2.minimumAngularVelocity ? 1 : (java.lang.Math.abs(r6) == r2.minimumAngularVelocity ? 0 : \-1)) \>= 0) goto L_0x0041\l}"];
Node_8 [shape=record,label="{8\:\ 0x0040|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ 0x0041}"];
Node_10 [shape=record,label="{10\:\ 0x0044|if ((r6 \> 0.0f ? 1 : (r6 == 0.0f ? 0 : \-1)) \>= 0) goto L_0x0048\l}"];
Node_11 [shape=record,label="{11\:\ 0x0046|r3 = true\l}"];
Node_12 [shape=record,label="{12\:\ 0x0048|r3 = false\l}"];
Node_13 [shape=record,label="{13\:\ 0x0049|PHI: r3 \l  PHI: (r3v8 boolean) = (r3v11 boolean), (r3v12 boolean) binds: [B:12:0x0048, B:11:0x0046] A[DONT_GENERATE, DONT_INLINE]\l|float r4 = com.mapbox.mapboxsdk.utils.MathUtils.clamp((float) java.lang.Math.pow((double) r6, 2.0d), 1.5f, 20.0f)\llong r5 = (long) (java.lang.Math.log((double) (1.0f + r4)) * 500.0d)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0069|if (r3 == false) goto L_0x006c\l}"];
Node_15 [shape=record,label="{15\:\ 0x006b|float r4 = \-r4\l}"];
Node_16 [shape=record,label="{16\:\ 0x006c|PHI: r4 \l  PHI: (r4v12 float) = (r4v11 float), (r4v16 float) binds: [B:14:0x0069, B:15:0x006b] A[DONT_GENERATE, DONT_INLINE]\l|com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1502(r2.this$0, createRotateAnimator(r4, r5))\lcom.mapbox.mapboxsdk.maps.MapGestureDetector.access$1400(r2.this$0, com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1500(r2.this$0))\l}"];
Node_17 [shape=record,label="{17\:\ 0x0080|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.onRotateEnd((r2v0 'this' com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener A[IMMUTABLE_TYPE, THIS]), (r3v0 com.mapbox.android.gestures.RotateGestureDetector A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

