digraph "CFG forcom.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.onRotateBegin(Lcom\/mapbox\/android\/gestures\/RotateGestureDetector;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0002: INVOKE  (r0 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$600(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.UiSettings type: STATIC \l0x0006: INVOKE  (r0 I:boolean) = (r0 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.isRotateGesturesEnabled():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN  (r4 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0010: INVOKE  (r0 I:com.mapbox.mapboxsdk.maps.Transform) = (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$400(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.Transform type: STATIC \l0x0014: INVOKE  (r0 I:com.mapbox.mapboxsdk.maps.Transform) com.mapbox.mapboxsdk.maps.Transform.cancelTransitions():void type: VIRTUAL \l0x0017: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0019: INVOKE  (r0 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$600(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.UiSettings type: STATIC \l0x001d: INVOKE  (r0 I:boolean) = (r0 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.isIncreaseScaleThresholdWhenRotating():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x003f \l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0025: INVOKE  (r0 I:com.mapbox.android.gestures.AndroidGesturesManager) = (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1100(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.android.gestures.AndroidGesturesManager type: STATIC \l0x0029: INVOKE  (r0 I:com.mapbox.android.gestures.StandardScaleGestureDetector) = (r0 I:com.mapbox.android.gestures.AndroidGesturesManager) com.mapbox.android.gestures.AndroidGesturesManager.getStandardScaleGestureDetector():com.mapbox.android.gestures.StandardScaleGestureDetector type: VIRTUAL \l0x002d: IGET  (r1 I:float) = \l  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.minimumScaleSpanWhenRotating float \l0x002f: INVOKE  \l  (r0 I:com.mapbox.android.gestures.StandardScaleGestureDetector)\l  (r1 I:float)\l com.mapbox.android.gestures.StandardScaleGestureDetector.setSpanSinceStartThreshold(float):void type: VIRTUAL \l0x0032: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0034: INVOKE  (r0 I:com.mapbox.android.gestures.AndroidGesturesManager) = (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1100(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.android.gestures.AndroidGesturesManager type: STATIC \l0x0038: INVOKE  (r0 I:com.mapbox.android.gestures.StandardScaleGestureDetector) = (r0 I:com.mapbox.android.gestures.AndroidGesturesManager) com.mapbox.android.gestures.AndroidGesturesManager.getStandardScaleGestureDetector():com.mapbox.android.gestures.StandardScaleGestureDetector type: VIRTUAL \l0x003c: INVOKE  \l  (r0 I:com.mapbox.android.gestures.StandardScaleGestureDetector)\l com.mapbox.android.gestures.StandardScaleGestureDetector.interrupt():void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x003f|0x003f: INVOKE  \l  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l  (r4 I:com.mapbox.android.gestures.RotateGestureDetector)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.setRotateFocalPoint(com.mapbox.android.gestures.RotateGestureDetector):void type: DIRECT \l0x0042: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0044: CONST_STR  (r1 I:java.lang.String) =  \"Rotation\" \l0x0046: IGET  (r2 I:android.graphics.PointF) = \l  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.rotateFocalPoint android.graphics.PointF \l0x0048: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l  (r1 I:java.lang.String)\l  (r2 I:android.graphics.PointF)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.access$700(com.mapbox.mapboxsdk.maps.MapGestureDetector, java.lang.String, android.graphics.PointF):void type: STATIC \l0x004b: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x004d: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l  (r4 I:com.mapbox.android.gestures.RotateGestureDetector)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.notifyOnRotateBeginListeners(com.mapbox.android.gestures.RotateGestureDetector):void type: VIRTUAL \l0x0050: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0051|0x0051: RETURN  (r4 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.mapboxsdk.maps.MapGestureDetector.RotateGestureListener.onRotateBegin((r3 'this' I:com.mapbox.mapboxsdk.maps.MapGestureDetector$RotateGestureListener A[IMMUTABLE_TYPE, THIS]), (r4 I:com.mapbox.android.gestures.RotateGestureDetector A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

