digraph "CFG forcom.mapbox.mapboxsdk.maps.MapView.GesturesManagerInteractionListener.setGesturesManager(Lcom\/mapbox\/android\/gestures\/AndroidGesturesManager;ZZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapView) = \l  (r2 I:com.mapbox.mapboxsdk.maps.MapView$GesturesManagerInteractionListener)\l com.mapbox.mapboxsdk.maps.MapView.GesturesManagerInteractionListener.this$0 com.mapbox.mapboxsdk.maps.MapView \l0x0002: INVOKE  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = (r0 I:com.mapbox.mapboxsdk.maps.MapView) com.mapbox.mapboxsdk.maps.MapView.access$1100(com.mapbox.mapboxsdk.maps.MapView):com.mapbox.mapboxsdk.maps.MapGestureDetector type: STATIC \l0x0006: IGET  (r1 I:com.mapbox.mapboxsdk.maps.MapView) = \l  (r2 I:com.mapbox.mapboxsdk.maps.MapView$GesturesManagerInteractionListener)\l com.mapbox.mapboxsdk.maps.MapView.GesturesManagerInteractionListener.this$0 com.mapbox.mapboxsdk.maps.MapView \l0x0008: INVOKE  (r1 I:android.content.Context) = (r1 I:com.mapbox.mapboxsdk.maps.MapView) com.mapbox.mapboxsdk.maps.MapView.getContext():android.content.Context type: VIRTUAL \l0x000c: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l  (r1 I:android.content.Context)\l  (r3 I:com.mapbox.android.gestures.AndroidGesturesManager)\l  (r4 I:boolean)\l  (r5 I:boolean)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.setGesturesManager(android.content.Context, com.mapbox.android.gestures.AndroidGesturesManager, boolean, boolean):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.maps.MapView.GesturesManagerInteractionListener.setGesturesManager((r2 'this' I:com.mapbox.mapboxsdk.maps.MapView$GesturesManagerInteractionListener A[IMMUTABLE_TYPE, THIS]), (r3 I:com.mapbox.android.gestures.AndroidGesturesManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

