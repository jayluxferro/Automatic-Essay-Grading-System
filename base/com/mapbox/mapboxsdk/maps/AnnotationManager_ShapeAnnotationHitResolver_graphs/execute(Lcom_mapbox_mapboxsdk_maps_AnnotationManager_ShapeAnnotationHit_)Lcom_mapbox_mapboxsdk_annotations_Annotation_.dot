digraph "CFG forcom.mapbox.mapboxsdk.maps.AnnotationManager.ShapeAnnotationHitResolver.execute(Lcom\/mapbox\/mapboxsdk\/maps\/AnnotationManager$ShapeAnnotationHit;)Lcom\/mapbox\/mapboxsdk\/annotations\/Annotation;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.List r2 = r1.shapeAnnotations.obtainAllIn(com.mapbox.mapboxsdk.maps.AnnotationManager.ShapeAnnotationHit.access$000(r2))\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r2.size() \<= 0) goto L_0x0018\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010}"];
Node_3 [shape=record,label="{3\:\ 0x0018|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\l|return r2.get(0)\l}"];
MethodNode[shape=record,label="{public com.mapbox.mapboxsdk.annotations.Annotation com.mapbox.mapboxsdk.maps.AnnotationManager.ShapeAnnotationHitResolver.execute((r1v0 'this' com.mapbox.mapboxsdk.maps.AnnotationManager$ShapeAnnotationHitResolver A[IMMUTABLE_TYPE, THIS]), (r2v0 com.mapbox.mapboxsdk.maps.AnnotationManager$ShapeAnnotationHit A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
}

