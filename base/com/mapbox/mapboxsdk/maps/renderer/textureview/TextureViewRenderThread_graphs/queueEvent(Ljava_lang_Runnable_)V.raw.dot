digraph "CFG forcom.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.queueEvent(Ljava\/lang\/Runnable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0014 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:java.lang.Object) = \l  (r2 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.lock java.lang.Object \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|SYNTHETIC\lSplitter:B:3:0x0005\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0005\l|0x0005: IGET  (r1 I:java.util.ArrayList\<java.lang.Runnable\>) = \l  (r2 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.eventQueue java.util.ArrayList A[Catch:\{ all \-\> 0x0011 \}, TRY_ENTER]\l0x0007: INVOKE  (r1 I:java.util.ArrayList), (r3 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0011 \}]\l0x000a: IGET  (r3 I:java.lang.Object) = \l  (r2 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.lock java.lang.Object A[Catch:\{ all \-\> 0x0011 \}]\l0x000c: INVOKE  (r3 I:java.lang.Object) java.lang.Object.notifyAll():void type: VIRTUAL A[Catch:\{ all \-\> 0x0011 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0011 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: RETURN   A[Catch:\{ all \-\> 0x0011 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|ExcHandler: all null\lSplitter:B:3:0x0005\l|0x0011: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0011 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0011 \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|0x0014: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0016: CONST_STR  (r0 I:java.lang.String) =  \"runnable must not be null\" \l0x0018: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{void com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.queueEvent((r2 'this' I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Runnable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

