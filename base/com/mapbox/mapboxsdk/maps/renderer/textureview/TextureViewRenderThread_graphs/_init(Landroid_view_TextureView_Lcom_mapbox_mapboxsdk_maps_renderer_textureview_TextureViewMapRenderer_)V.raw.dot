digraph "CFG forcom.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.\<init\>(Landroid\/view\/TextureView;Lcom\/mapbox\/mapboxsdk\/maps\/renderer\/textureview\/TextureViewMapRenderer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.Thread) java.lang.Thread.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:java.lang.Object) =  java.lang.Object \l0x0005: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0008: IPUT  \l  (r0 I:java.lang.Object)\l  (r2 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.lock java.lang.Object \l0x000a: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x000c: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x000f: IPUT  \l  (r0 I:java.util.ArrayList\<java.lang.Runnable\>)\l  (r2 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.eventQueue java.util.ArrayList \l0x0011: INVOKE  (r0 I:boolean) = \l  (r4 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewMapRenderer)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewMapRenderer.isTranslucentSurface():boolean type: VIRTUAL \l0x0015: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (1 ?[boolean, int, float, short, byte, char]) \l0x0017: INVOKE  (r3 I:android.view.TextureView), (r0 I:boolean) android.view.TextureView.setOpaque(boolean):void type: VIRTUAL \l0x001a: INVOKE  \l  (r3 I:android.view.TextureView)\l  (r2 I:android.view.TextureView$SurfaceTextureListener)\l android.view.TextureView.setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener):void type: VIRTUAL \l0x001d: IPUT  \l  (r4 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewMapRenderer)\l  (r2 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.mapRenderer com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewMapRenderer \l0x001f: NEW_INSTANCE  (r0 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder) =  com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder \l0x0021: NEW_INSTANCE  (r1 I:java.lang.ref.WeakReference) =  java.lang.ref.WeakReference \l0x0023: INVOKE  (r1 I:java.lang.ref.WeakReference), (r3 I:java.lang.Object) java.lang.ref.WeakReference.\<init\>(java.lang.Object):void type: DIRECT \l0x0026: INVOKE  (r3 I:boolean) = \l  (r4 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewMapRenderer)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewMapRenderer.isTranslucentSurface():boolean type: VIRTUAL \l0x002a: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l  (r1 I:java.lang.ref.WeakReference)\l  (r3 I:boolean)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.\<init\>(java.lang.ref.WeakReference, boolean):void type: DIRECT \l0x002d: IPUT  \l  (r0 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l  (r2 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.eglHolder com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder \l}"];
Node_1 [shape=record,label="{1\:\ 0x002f|0x002f: RETURN   \l}"];
MethodNode[shape=record,label="{void com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.\<init\>((r2 'this' I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.TextureView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewMapRenderer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.UiThread, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

