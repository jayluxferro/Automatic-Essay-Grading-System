digraph "CFG forcom.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.queueEvent(Ljava\/lang\/Runnable;)V" {
subgraph cluster_Region_1957777590 {
label = "R(1:(2:(3:1|4|6)|(1:11)))";
node [shape=record,color=blue];
subgraph cluster_Region_1650676205 {
label = "R(2:(3:1|4|6)|(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1995356774 {
label = "IF [B:0:0x0000] THEN: R(3:1|4|6) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r3 != null) goto L_0x0002\l}"];
subgraph cluster_Region_280107607 {
label = "R(3:1|4|6)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
subgraph cluster_SynchronizedRegion_1853410327 {
label = "Synchronized:R(2:2|(1:4))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
subgraph cluster_Region_376177676 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ ?|r2.eventQueue.add(r3)\lr2.lock.notifyAll()\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0010|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_366129453 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001b|throw new java.lang.IllegalArgumentException(\"runnable must not be null\")\l}"];
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0005|SYNTHETIC\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000f|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x000f: MONITOR_EXIT  \l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0011|REMOVE\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0012|REMOVE\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0013|REMOVE\l|throw r3\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0014}"];
MethodNode[shape=record,label="{void com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.queueEvent((r2v0 'this' com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.Runnable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_10[style=dashed];
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

