digraph "CFG forcom.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.terminate()V" {
subgraph cluster_Region_378580363 {
label = "R(1:(1:(2:(1:5)|6)))";
node [shape=record,color=blue];
subgraph cluster_Region_91573151 {
label = "R(1:(2:(1:5)|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1234074137 {
label = "IF [B:1:0x0004] THEN: R(2:(1:5)|6) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r5.eglDisplay != javax.microedition.khronos.egl.EGL10.EGL_NO_DISPLAY) goto L_0x0007\l}"];
subgraph cluster_Region_1287142000 {
label = "R(2:(1:5)|6)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1607940761 {
label = "IF [B:4:0x000f] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|if (r5.egl.eglTerminate(r5.eglDisplay) == false) goto L_0x0011\l}"];
subgraph cluster_Region_1892793167 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|com.mapbox.mapboxsdk.log.Logger.m86w(com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.TAG, java.lang.String.format(\"Could not terminate egl. Display %s\", new java.lang.Object[]\{r5.eglDisplay\}))\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0024|r5.eglDisplay = javax.microedition.khronos.egl.EGL10.EGL_NO_DISPLAY\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0007}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0028}"];
MethodNode[shape=record,label="{private void com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.terminate((r5v0 'this' com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_3 -> Node_4;
}

