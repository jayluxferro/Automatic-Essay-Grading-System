digraph "CFG forcom.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.prepare()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:javax.microedition.khronos.egl.EGL) =  javax.microedition.khronos.egl.EGLContext.getEGL():javax.microedition.khronos.egl.EGL type: STATIC \l0x0004: CHECK_CAST  (r0 I:javax.microedition.khronos.egl.EGL10) = (javax.microedition.khronos.egl.EGL10) (r0 I:?[OBJECT, ARRAY]) \l0x0006: IPUT  \l  (r0 I:javax.microedition.khronos.egl.EGL10)\l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.egl javax.microedition.khronos.egl.EGL10 \l0x0008: IGET  (r0 I:javax.microedition.khronos.egl.EGLDisplay) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglDisplay javax.microedition.khronos.egl.EGLDisplay \l0x000a: SGET  (r1 I:javax.microedition.khronos.egl.EGLDisplay) =  javax.microedition.khronos.egl.EGL10.EGL_NO_DISPLAY javax.microedition.khronos.egl.EGLDisplay \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x003c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: IGET  (r0 I:javax.microedition.khronos.egl.EGL10) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.egl javax.microedition.khronos.egl.EGL10 \l0x0010: SGET  (r1 I:java.lang.Object) =  javax.microedition.khronos.egl.EGL10.EGL_DEFAULT_DISPLAY java.lang.Object \l0x0012: INVOKE  (r0 I:javax.microedition.khronos.egl.EGLDisplay) = \l  (r0 I:javax.microedition.khronos.egl.EGL10)\l  (r1 I:java.lang.Object)\l javax.microedition.khronos.egl.EGL10.eglGetDisplay(java.lang.Object):javax.microedition.khronos.egl.EGLDisplay type: INTERFACE \l0x0016: IPUT  \l  (r0 I:javax.microedition.khronos.egl.EGLDisplay)\l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglDisplay javax.microedition.khronos.egl.EGLDisplay \l0x0018: IGET  (r0 I:javax.microedition.khronos.egl.EGLDisplay) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglDisplay javax.microedition.khronos.egl.EGLDisplay \l0x001a: SGET  (r1 I:javax.microedition.khronos.egl.EGLDisplay) =  javax.microedition.khronos.egl.EGL10.EGL_NO_DISPLAY javax.microedition.khronos.egl.EGLDisplay \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0034 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x001f: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0021: IGET  (r1 I:javax.microedition.khronos.egl.EGL10) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.egl javax.microedition.khronos.egl.EGL10 \l0x0023: IGET  (r2 I:javax.microedition.khronos.egl.EGLDisplay) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglDisplay javax.microedition.khronos.egl.EGLDisplay \l0x0025: INVOKE  (r0 I:boolean) = \l  (r1 I:javax.microedition.khronos.egl.EGL10)\l  (r2 I:javax.microedition.khronos.egl.EGLDisplay)\l  (r0 I:int[])\l javax.microedition.khronos.egl.EGL10.eglInitialize(javax.microedition.khronos.egl.EGLDisplay, int[]):boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|0x0029: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002c \l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x002e: CONST_STR  (r1 I:java.lang.String) =  \"eglInitialize failed\" \l0x0030: INVOKE  (r0 I:java.lang.RuntimeException), (r1 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0033|0x0033: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0036: CONST_STR  (r1 I:java.lang.String) =  \"eglGetDisplay failed\" \l0x0038: INVOKE  (r0 I:java.lang.RuntimeException), (r1 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|0x003b: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|0x003c: IGET  (r0 I:java.lang.ref.WeakReference\<android.view.TextureView\>) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.textureViewWeakRef java.lang.ref.WeakReference \l}"];
Node_12 [shape=record,label="{12\:\ 0x003e|0x003e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0048 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|0x0040: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0041: IPUT  \l  (r0 I:javax.microedition.khronos.egl.EGLConfig)\l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglConfig javax.microedition.khronos.egl.EGLConfig \l0x0043: SGET  (r0 I:javax.microedition.khronos.egl.EGLContext) =  javax.microedition.khronos.egl.EGL10.EGL_NO_CONTEXT javax.microedition.khronos.egl.EGLContext \l0x0045: IPUT  \l  (r0 I:javax.microedition.khronos.egl.EGLContext)\l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglContext javax.microedition.khronos.egl.EGLContext \l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|0x0048: IGET  (r0 I:javax.microedition.khronos.egl.EGLContext) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglContext javax.microedition.khronos.egl.EGLContext \l0x004a: SGET  (r1 I:javax.microedition.khronos.egl.EGLContext) =  javax.microedition.khronos.egl.EGL10.EGL_NO_CONTEXT javax.microedition.khronos.egl.EGLContext \l}"];
Node_15 [shape=record,label="{15\:\ 0x004c|0x004c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0073 \l}"];
Node_16 [shape=record,label="{16\:\ 0x004e|0x004e: NEW_INSTANCE  (r0 I:com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser) =  com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser \l0x0050: IGET  (r1 I:boolean) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.translucentSurface boolean \l0x0052: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser)\l  (r1 I:boolean)\l com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser.\<init\>(boolean):void type: DIRECT \l0x0055: IGET  (r1 I:javax.microedition.khronos.egl.EGL10) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.egl javax.microedition.khronos.egl.EGL10 \l0x0057: IGET  (r2 I:javax.microedition.khronos.egl.EGLDisplay) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglDisplay javax.microedition.khronos.egl.EGLDisplay \l0x0059: INVOKE  (r0 I:javax.microedition.khronos.egl.EGLConfig) = \l  (r0 I:com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser)\l  (r1 I:javax.microedition.khronos.egl.EGL10)\l  (r2 I:javax.microedition.khronos.egl.EGLDisplay)\l com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser.chooseConfig(javax.microedition.khronos.egl.EGL10, javax.microedition.khronos.egl.EGLDisplay):javax.microedition.khronos.egl.EGLConfig type: VIRTUAL \l0x005d: IPUT  \l  (r0 I:javax.microedition.khronos.egl.EGLConfig)\l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglConfig javax.microedition.khronos.egl.EGLConfig \l0x005f: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0060: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0062: FILL_ARRAY  (r0 I:?[int, float][]), data: [12440, 2, 12344] \l0x0065: IGET  (r1 I:javax.microedition.khronos.egl.EGL10) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.egl javax.microedition.khronos.egl.EGL10 \l0x0067: IGET  (r2 I:javax.microedition.khronos.egl.EGLDisplay) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglDisplay javax.microedition.khronos.egl.EGLDisplay \l0x0069: IGET  (r3 I:javax.microedition.khronos.egl.EGLConfig) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglConfig javax.microedition.khronos.egl.EGLConfig \l0x006b: SGET  (r4 I:javax.microedition.khronos.egl.EGLContext) =  javax.microedition.khronos.egl.EGL10.EGL_NO_CONTEXT javax.microedition.khronos.egl.EGLContext \l0x006d: INVOKE  (r0 I:javax.microedition.khronos.egl.EGLContext) = \l  (r1 I:javax.microedition.khronos.egl.EGL10)\l  (r2 I:javax.microedition.khronos.egl.EGLDisplay)\l  (r3 I:javax.microedition.khronos.egl.EGLConfig)\l  (r4 I:javax.microedition.khronos.egl.EGLContext)\l  (r0 I:int[])\l javax.microedition.khronos.egl.EGL10.eglCreateContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, javax.microedition.khronos.egl.EGLContext, int[]):javax.microedition.khronos.egl.EGLContext type: INTERFACE \l0x0071: IPUT  \l  (r0 I:javax.microedition.khronos.egl.EGLContext)\l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglContext javax.microedition.khronos.egl.EGLContext \l}"];
Node_17 [shape=record,label="{17\:\ 0x0073|0x0073: IGET  (r0 I:javax.microedition.khronos.egl.EGLContext) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglContext javax.microedition.khronos.egl.EGLContext \l0x0075: SGET  (r1 I:javax.microedition.khronos.egl.EGLContext) =  javax.microedition.khronos.egl.EGL10.EGL_NO_CONTEXT javax.microedition.khronos.egl.EGLContext \l}"];
Node_18 [shape=record,label="{18\:\ 0x0077|0x0077: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x007a \l}"];
Node_19 [shape=record,label="{19\:\ 0x0079|0x0079: RETURN   \l}"];
Node_20 [shape=record,label="{20\:\ 0x007a|0x007a: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x007c: CONST_STR  (r1 I:java.lang.String) =  \"createContext\" \l0x007e: INVOKE  (r0 I:java.lang.RuntimeException), (r1 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x0081|0x0081: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{void com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.prepare((r5 'this' I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_11[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_20 -> Node_21;
}

