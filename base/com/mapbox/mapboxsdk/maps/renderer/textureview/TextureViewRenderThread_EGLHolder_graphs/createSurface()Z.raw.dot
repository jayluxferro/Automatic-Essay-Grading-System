digraph "CFG forcom.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.createSurface()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r6 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.destroySurface():void type: DIRECT \l0x0003: IGET  (r0 I:java.lang.ref.WeakReference\<android.view.TextureView\>) = \l  (r6 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.textureViewWeakRef java.lang.ref.WeakReference \l0x0005: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l0x0009: CHECK_CAST  (r0 I:android.view.TextureView) = (android.view.TextureView) (r0 I:?[OBJECT, ARRAY]) \l0x000b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0026 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000f: NEW_ARRAY  (r2 I:int[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0011: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (12344(0x3038, float:1.7298E\-41) ?[int, float, short, byte, char])\l \l0x0013: APUT  \l  (r2 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x0015: IGET  (r3 I:javax.microedition.khronos.egl.EGL10) = \l  (r6 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.egl javax.microedition.khronos.egl.EGL10 \l0x0017: IGET  (r4 I:javax.microedition.khronos.egl.EGLDisplay) = \l  (r6 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglDisplay javax.microedition.khronos.egl.EGLDisplay \l0x0019: IGET  (r5 I:javax.microedition.khronos.egl.EGLConfig) = \l  (r6 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglConfig javax.microedition.khronos.egl.EGLConfig \l0x001b: INVOKE  (r0 I:android.graphics.SurfaceTexture) = (r0 I:android.view.TextureView) android.view.TextureView.getSurfaceTexture():android.graphics.SurfaceTexture type: VIRTUAL \l0x001f: INVOKE  (r0 I:javax.microedition.khronos.egl.EGLSurface) = \l  (r3 I:javax.microedition.khronos.egl.EGL10)\l  (r4 I:javax.microedition.khronos.egl.EGLDisplay)\l  (r5 I:javax.microedition.khronos.egl.EGLConfig)\l  (r0 I:java.lang.Object)\l  (r2 I:int[])\l javax.microedition.khronos.egl.EGL10.eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[]):javax.microedition.khronos.egl.EGLSurface type: INTERFACE \l0x0023: IPUT  \l  (r0 I:javax.microedition.khronos.egl.EGLSurface)\l  (r6 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglSurface javax.microedition.khronos.egl.EGLSurface \l}"];
Node_3 [shape=record,label="{3\:\ 0x0026|0x0026: SGET  (r0 I:javax.microedition.khronos.egl.EGLSurface) =  javax.microedition.khronos.egl.EGL10.EGL_NO_SURFACE javax.microedition.khronos.egl.EGLSurface \l0x0028: IPUT  \l  (r0 I:javax.microedition.khronos.egl.EGLSurface)\l  (r6 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglSurface javax.microedition.khronos.egl.EGLSurface \l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|0x002a: IGET  (r0 I:javax.microedition.khronos.egl.EGLSurface) = \l  (r6 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglSurface javax.microedition.khronos.egl.EGLSurface \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x003a \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: IGET  (r0 I:javax.microedition.khronos.egl.EGLSurface) = \l  (r6 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglSurface javax.microedition.khronos.egl.EGLSurface \l0x0030: SGET  (r2 I:javax.microedition.khronos.egl.EGLSurface) =  javax.microedition.khronos.egl.EGL10.EGL_NO_SURFACE javax.microedition.khronos.egl.EGLSurface \l}"];
Node_7 [shape=record,label="{7\:\ 0x0032|0x0032: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0035 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|0x0035: INVOKE  (r0 I:boolean) = \l  (r6 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.makeCurrent():boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|0x0039: RETURN  (r0 I:boolean) \l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|0x003a: IGET  (r0 I:javax.microedition.khronos.egl.EGL10) = \l  (r6 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.egl javax.microedition.khronos.egl.EGL10 \l0x003c: INVOKE  (r0 I:int) = (r0 I:javax.microedition.khronos.egl.EGL10) javax.microedition.khronos.egl.EGL10.eglGetError():int type: INTERFACE \l0x0040: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (12299(0x300b, float:1.7235E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0042|0x0042: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x004b \l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|0x0044: CONST_STR  (r0 I:java.lang.String) =  \"Mbgl\-TextureViewRenderThread\" \l0x0046: CONST_STR  (r2 I:java.lang.String) =  \"createWindowSurface returned EGL_BAD_NATIVE_WINDOW.\" \l0x0048: INVOKE  (r0 I:java.lang.String), (r2 I:java.lang.String) com.mapbox.mapboxsdk.log.Logger.e(java.lang.String, java.lang.String):void type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x004b|0x004b: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.createSurface((r6 'this' I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_11[style=dashed];
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
}

