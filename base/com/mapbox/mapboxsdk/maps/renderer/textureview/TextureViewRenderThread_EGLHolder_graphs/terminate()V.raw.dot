digraph "CFG forcom.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.terminate()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:javax.microedition.khronos.egl.EGLDisplay) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglDisplay javax.microedition.khronos.egl.EGLDisplay \l0x0002: SGET  (r1 I:javax.microedition.khronos.egl.EGLDisplay) =  javax.microedition.khronos.egl.EGL10.EGL_NO_DISPLAY javax.microedition.khronos.egl.EGLDisplay \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IGET  (r0 I:javax.microedition.khronos.egl.EGL10) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.egl javax.microedition.khronos.egl.EGL10 \l0x0009: IGET  (r1 I:javax.microedition.khronos.egl.EGLDisplay) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglDisplay javax.microedition.khronos.egl.EGLDisplay \l0x000b: INVOKE  (r0 I:boolean) = \l  (r0 I:javax.microedition.khronos.egl.EGL10)\l  (r1 I:javax.microedition.khronos.egl.EGLDisplay)\l javax.microedition.khronos.egl.EGL10.eglTerminate(javax.microedition.khronos.egl.EGLDisplay):boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0024 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: CONST_STR  (r0 I:java.lang.String) =  \"Mbgl\-TextureViewRenderThread\" \l0x0013: CONST_STR  (r1 I:java.lang.String) =  \"Could not terminate egl. Display %s\" \l0x0015: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0016: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0018: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: IGET  (r4 I:javax.microedition.khronos.egl.EGLDisplay) = \l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglDisplay javax.microedition.khronos.egl.EGLDisplay \l0x001b: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x001d: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.String), (r2 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x0021: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) com.mapbox.mapboxsdk.log.Logger.w(java.lang.String, java.lang.String):void type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: SGET  (r0 I:javax.microedition.khronos.egl.EGLDisplay) =  javax.microedition.khronos.egl.EGL10.EGL_NO_DISPLAY javax.microedition.khronos.egl.EGLDisplay \l0x0026: IPUT  \l  (r0 I:javax.microedition.khronos.egl.EGLDisplay)\l  (r5 I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder)\l com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.eglDisplay javax.microedition.khronos.egl.EGLDisplay \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread.EGLHolder.terminate((r5 'this' I:com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread$EGLHolder A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

