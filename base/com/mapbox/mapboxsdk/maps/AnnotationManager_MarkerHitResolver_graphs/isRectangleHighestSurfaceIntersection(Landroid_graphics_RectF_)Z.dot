digraph "CFG forcom.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.isRectangleHighestSurfaceIntersection(Landroid\/graphics\/RectF;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|if (((r3.width() * r3.height()) \> (r2.highestSurfaceIntersection.width() * r2.highestSurfaceIntersection.height()) ? 1 : ((r3.width() * r3.height()) == (r2.highestSurfaceIntersection.width() * r2.highestSurfaceIntersection.height()) ? 0 : \-1)) \<= 0) goto L_0x001e\l}"];
Node_2 [shape=record,label="{2\:\ 0x001c|SYNTHETIC\lRETURN\l|return true\l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{private boolean com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.isRectangleHighestSurfaceIntersection((r2v0 'this' com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver A[IMMUTABLE_TYPE, THIS]), (r3v0 android.graphics.RectF A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
}

