digraph "CFG forcom.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.resolveForMarker(Lcom\/mapbox\/mapboxsdk\/maps\/AnnotationManager$MarkerHit;Lcom\/mapbox\/mapboxsdk\/annotations\/Marker;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.mapbox.mapboxsdk.maps.Projection) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.projection com.mapbox.mapboxsdk.maps.Projection \l0x0002: INVOKE  (r1 I:com.mapbox.mapboxsdk.geometry.LatLng) = (r6 I:com.mapbox.mapboxsdk.annotations.Marker) com.mapbox.mapboxsdk.annotations.Marker.getPosition():com.mapbox.mapboxsdk.geometry.LatLng type: VIRTUAL \l0x0006: INVOKE  (r0 I:android.graphics.PointF) = \l  (r0 I:com.mapbox.mapboxsdk.maps.Projection)\l  (r1 I:com.mapbox.mapboxsdk.geometry.LatLng)\l com.mapbox.mapboxsdk.maps.Projection.toScreenLocation(com.mapbox.mapboxsdk.geometry.LatLng):android.graphics.PointF type: VIRTUAL \l0x000a: IPUT  \l  (r0 I:android.graphics.PointF)\l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.markerLocation android.graphics.PointF \l0x000c: INVOKE  (r0 I:com.mapbox.mapboxsdk.annotations.Icon) = (r6 I:com.mapbox.mapboxsdk.annotations.Marker) com.mapbox.mapboxsdk.annotations.Marker.getIcon():com.mapbox.mapboxsdk.annotations.Icon type: VIRTUAL \l0x0010: INVOKE  (r0 I:android.graphics.Bitmap) = (r0 I:com.mapbox.mapboxsdk.annotations.Icon) com.mapbox.mapboxsdk.annotations.Icon.getBitmap():android.graphics.Bitmap type: VIRTUAL \l0x0014: IPUT  \l  (r0 I:android.graphics.Bitmap)\l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.bitmap android.graphics.Bitmap \l0x0016: IGET  (r0 I:android.graphics.Bitmap) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.bitmap android.graphics.Bitmap \l0x0018: INVOKE  (r0 I:int) = (r0 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL \l0x001c: IPUT  \l  (r0 I:int)\l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.bitmapHeight int \l0x001e: IGET  (r0 I:int) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.bitmapHeight int \l0x0020: IGET  (r1 I:int) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.minimalTouchSize int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0022|0x0022: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0024|0x0024: IGET  (r0 I:int) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.minimalTouchSize int \l0x0026: IPUT  \l  (r0 I:int)\l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.bitmapHeight int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0028|0x0028: IGET  (r0 I:android.graphics.Bitmap) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.bitmap android.graphics.Bitmap \l0x002a: INVOKE  (r0 I:int) = (r0 I:android.graphics.Bitmap) android.graphics.Bitmap.getWidth():int type: VIRTUAL \l0x002e: IPUT  \l  (r0 I:int)\l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.bitmapWidth int \l0x0030: IGET  (r0 I:int) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.bitmapWidth int \l0x0032: IGET  (r1 I:int) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.minimalTouchSize int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0034|0x0034: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:6:0x003a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0036|0x0036: IGET  (r0 I:int) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.minimalTouchSize int \l0x0038: IPUT  \l  (r0 I:int)\l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.bitmapWidth int \l}"];
Node_6 [shape=record,label="{6\:\ 0x003a|0x003a: IGET  (r0 I:android.graphics.RectF) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.hitRectMarker android.graphics.RectF \l0x003c: IGET  (r1 I:int) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.bitmapWidth int \l0x003e: CAST  (r1 I:float) = (float) (r1 I:int) \l0x003f: IGET  (r2 I:int) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.bitmapHeight int \l0x0041: CAST  (r2 I:float) = (float) (r2 I:int) \l0x0042: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0043: INVOKE  \l  (r0 I:android.graphics.RectF)\l  (r3 I:float)\l  (r3 I:float)\l  (r1 I:float)\l  (r2 I:float)\l android.graphics.RectF.set(float, float, float, float):void type: VIRTUAL \l0x0046: IGET  (r0 I:android.graphics.RectF) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.hitRectMarker android.graphics.RectF \l0x0048: IGET  (r1 I:android.graphics.PointF) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.markerLocation android.graphics.PointF \l0x004a: IGET  (r1 I:float) = (r1 I:android.graphics.PointF) android.graphics.PointF.x float \l0x004c: IGET  (r2 I:int) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.bitmapWidth int \l0x004e: ARITH  (r2 I:int) = (r2 I:int) \/ (2 int) \l0x0050: CAST  (r2 I:float) = (float) (r2 I:int) \l0x0051: ARITH  (r1 I:float) = (r1 I:float) \- (r2 I:float) \l0x0052: IGET  (r2 I:android.graphics.PointF) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.markerLocation android.graphics.PointF \l0x0054: IGET  (r2 I:float) = (r2 I:android.graphics.PointF) android.graphics.PointF.y float \l0x0056: IGET  (r3 I:int) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.bitmapHeight int \l0x0058: ARITH  (r3 I:int) = (r3 I:int) \/ (2 int) \l0x005a: CAST  (r3 I:float) = (float) (r3 I:int) \l0x005b: ARITH  (r2 I:float) = (r2 I:float) \- (r3 I:float) \l0x005c: INVOKE  (r0 I:android.graphics.RectF), (r1 I:float), (r2 I:float) android.graphics.RectF.offsetTo(float, float):void type: VIRTUAL \l0x005f: IGET  (r0 I:android.graphics.RectF) = \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.hitRectMarker android.graphics.RectF \l0x0061: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver)\l  (r5 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHit)\l  (r6 I:com.mapbox.mapboxsdk.annotations.Marker)\l  (r0 I:android.graphics.RectF)\l com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.hitTestMarker(com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHit, com.mapbox.mapboxsdk.annotations.Marker, android.graphics.RectF):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0064|0x0064: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.mapboxsdk.maps.AnnotationManager.MarkerHitResolver.resolveForMarker((r4 'this' I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHitResolver A[IMMUTABLE_TYPE, THIS]), (r5 I:com.mapbox.mapboxsdk.maps.AnnotationManager$MarkerHit A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.mapbox.mapboxsdk.annotations.Marker A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

