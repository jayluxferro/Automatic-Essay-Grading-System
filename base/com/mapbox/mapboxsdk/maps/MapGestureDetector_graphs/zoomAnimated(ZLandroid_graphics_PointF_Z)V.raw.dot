digraph "CFG forcom.mapbox.mapboxsdk.maps.MapGestureDetector.zoomAnimated(ZLandroid\/graphics\/PointF;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.animation.Animator) = (r9 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.scaleAnimator android.animation.Animator \l0x0002: INVOKE  \l  (r9 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l  (r0 I:android.animation.Animator)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.cancelAnimator(android.animation.Animator):void type: DIRECT \l0x0005: IGET  (r0 I:com.mapbox.mapboxsdk.maps.Transform) = (r9 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.transform com.mapbox.mapboxsdk.maps.Transform \l0x0007: INVOKE  (r2 I:double) = (r0 I:com.mapbox.mapboxsdk.maps.Transform) com.mapbox.mapboxsdk.maps.Transform.getRawZoom():double type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: CONST  (r0 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: MOVE  (r4 I:?[long, double]) = (r0 I:?[long, double]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: CONST  (r0 I:?[long, double]) = \l  (\-4616189618054758400(0xbff0000000000000, double:\-1.0) ?[long, double])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: CONST  (r7 I:?[long, double]) = (300(0x12c, double:1.48E\-321) ?[long, double]) \l0x0016: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0017: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0018: INVOKE  (r10 I:android.animation.Animator) = \l  (r1 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l  (r2 I:double)\l  (r4 I:double)\l  (r6 I:android.graphics.PointF)\l  (r7 I:long)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.createScaleAnimator(double, double, android.graphics.PointF, long):android.animation.Animator type: DIRECT \l0x001c: IPUT  \l  (r10 I:android.animation.Animator)\l  (r9 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.scaleAnimator android.animation.Animator \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0026 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: IGET  (r10 I:android.animation.Animator) = (r9 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.scaleAnimator android.animation.Animator \l0x0022: INVOKE  (r10 I:android.animation.Animator) android.animation.Animator.start():void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: IGET  (r10 I:android.animation.Animator) = (r9 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.scaleAnimator android.animation.Animator \l0x0028: INVOKE  \l  (r9 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l  (r10 I:android.animation.Animator)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.scheduleAnimator(android.animation.Animator):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.mapboxsdk.maps.MapGestureDetector.zoomAnimated((r9 'this' I:com.mapbox.mapboxsdk.maps.MapGestureDetector A[IMMUTABLE_TYPE, THIS]), (r10 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.graphics.PointF A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_4 -> Node_3;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
}

