digraph "CFG forcom.mapbox.mapboxsdk.maps.MapGestureDetector.notifyOnMapLongClickListeners(Landroid\/graphics\/PointF;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapboxMap$OnMapLongClickListener) = (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.onMapLongClickListener com.mapbox.mapboxsdk.maps.MapboxMap$OnMapLongClickListener \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapboxMap$OnMapLongClickListener) = (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.onMapLongClickListener com.mapbox.mapboxsdk.maps.MapboxMap$OnMapLongClickListener \l0x0006: IGET  (r1 I:com.mapbox.mapboxsdk.maps.Projection) = (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.projection com.mapbox.mapboxsdk.maps.Projection \l0x0008: INVOKE  (r1 I:com.mapbox.mapboxsdk.geometry.LatLng) = \l  (r1 I:com.mapbox.mapboxsdk.maps.Projection)\l  (r4 I:android.graphics.PointF)\l com.mapbox.mapboxsdk.maps.Projection.fromScreenLocation(android.graphics.PointF):com.mapbox.mapboxsdk.geometry.LatLng type: VIRTUAL \l0x000c: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.maps.MapboxMap$OnMapLongClickListener)\l  (r1 I:com.mapbox.mapboxsdk.geometry.LatLng)\l com.mapbox.mapboxsdk.maps.MapboxMap.OnMapLongClickListener.onMapLongClick(com.mapbox.mapboxsdk.geometry.LatLng):void type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IGET  (r0 I:java.util.concurrent.CopyOnWriteArrayList\<com.mapbox.mapboxsdk.maps.MapboxMap$OnMapLongClickListener\>) = (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.onMapLongClickListenerList java.util.concurrent.CopyOnWriteArrayList \l0x0011: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.concurrent.CopyOnWriteArrayList) java.util.concurrent.CopyOnWriteArrayList.iterator():java.util.Iterator type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002b \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x001f: CHECK_CAST  (r1 I:com.mapbox.mapboxsdk.maps.MapboxMap$OnMapLongClickListener) = (com.mapbox.mapboxsdk.maps.MapboxMap$OnMapLongClickListener) (r1 I:?[OBJECT, ARRAY]) \l0x0021: IGET  (r2 I:com.mapbox.mapboxsdk.maps.Projection) = (r3 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.projection com.mapbox.mapboxsdk.maps.Projection \l0x0023: INVOKE  (r2 I:com.mapbox.mapboxsdk.geometry.LatLng) = \l  (r2 I:com.mapbox.mapboxsdk.maps.Projection)\l  (r4 I:android.graphics.PointF)\l com.mapbox.mapboxsdk.maps.Projection.fromScreenLocation(android.graphics.PointF):com.mapbox.mapboxsdk.geometry.LatLng type: VIRTUAL \l0x0027: INVOKE  \l  (r1 I:com.mapbox.mapboxsdk.maps.MapboxMap$OnMapLongClickListener)\l  (r2 I:com.mapbox.mapboxsdk.geometry.LatLng)\l com.mapbox.mapboxsdk.maps.MapboxMap.OnMapLongClickListener.onMapLongClick(com.mapbox.mapboxsdk.geometry.LatLng):void type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: RETURN   \l}"];
MethodNode[shape=record,label="{void com.mapbox.mapboxsdk.maps.MapGestureDetector.notifyOnMapLongClickListeners((r3 'this' I:com.mapbox.mapboxsdk.maps.MapGestureDetector A[IMMUTABLE_TYPE, THIS]), (r4 I:android.graphics.PointF A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_4;
}

