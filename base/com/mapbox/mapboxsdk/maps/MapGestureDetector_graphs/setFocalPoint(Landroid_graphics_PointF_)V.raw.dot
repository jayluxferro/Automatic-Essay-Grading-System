digraph "CFG forcom.mapbox.mapboxsdk.maps.MapGestureDetector.setFocalPoint(Landroid\/graphics\/PointF;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0010 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r1 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.uiSettings com.mapbox.mapboxsdk.maps.UiSettings \l0x0004: INVOKE  (r0 I:android.graphics.PointF) = (r0 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.getFocalPoint():android.graphics.PointF type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0010 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IGET  (r2 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r1 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.uiSettings com.mapbox.mapboxsdk.maps.UiSettings \l0x000c: INVOKE  (r2 I:android.graphics.PointF) = (r2 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.getFocalPoint():android.graphics.PointF type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IPUT  \l  (r2 I:android.graphics.PointF)\l  (r1 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.focalPoint android.graphics.PointF \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: RETURN   \l}"];
MethodNode[shape=record,label="{void com.mapbox.mapboxsdk.maps.MapGestureDetector.setFocalPoint((r1 'this' I:com.mapbox.mapboxsdk.maps.MapGestureDetector A[IMMUTABLE_TYPE, THIS]), (r2 I:android.graphics.PointF A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

