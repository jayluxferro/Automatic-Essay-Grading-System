digraph "CFG forcom.mapbox.mapboxsdk.maps.MapGestureDetector.\<init\>(Landroid\/content\/Context;Lcom\/mapbox\/mapboxsdk\/maps\/Transform;Lcom\/mapbox\/mapboxsdk\/maps\/Projection;Lcom\/mapbox\/mapboxsdk\/maps\/UiSettings;Lcom\/mapbox\/mapboxsdk\/maps\/AnnotationManager;Lcom\/mapbox\/mapboxsdk\/maps\/CameraChangeDispatcher;)V" {
subgraph cluster_Region_1795323935 {
label = "R(2:0|(1:(1:2)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.annotationManager = r6\lr1.transform = r3\lr1.projection = r4\lr1.uiSettings = r5\lr1.cameraChangeDispatcher = r7\l}"];
subgraph cluster_Region_1957510231 {
label = "R(1:(1:2))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_276663287 {
label = "IF [B:1:0x005a] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x005a|if (r2 != null) goto L_0x005c\l}"];
subgraph cluster_Region_454408624 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x005c|initializeGesturesManager(new com.mapbox.android.gestures.AndroidGesturesManager(r2), true)\linitializeGestureListeners(r2, true)\l}"];
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void com.mapbox.mapboxsdk.maps.MapGestureDetector.\<init\>((r1v0 'this' com.mapbox.mapboxsdk.maps.MapGestureDetector A[IMMUTABLE_TYPE, THIS]), (r2v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 com.mapbox.mapboxsdk.maps.Transform A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 com.mapbox.mapboxsdk.maps.Projection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 com.mapbox.mapboxsdk.maps.UiSettings A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 com.mapbox.mapboxsdk.maps.AnnotationManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 com.mapbox.mapboxsdk.maps.CameraChangeDispatcher A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
}

