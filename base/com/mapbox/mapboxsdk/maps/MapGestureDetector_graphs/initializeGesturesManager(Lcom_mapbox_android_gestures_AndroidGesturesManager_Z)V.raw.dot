digraph "CFG forcom.mapbox.mapboxsdk.maps.MapGestureDetector.initializeGesturesManager(Lcom\/mapbox\/android\/gestures\/AndroidGesturesManager;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x004b \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: NEW_INSTANCE  (r8 I:java.util.HashSet) =  java.util.HashSet \l0x0004: INVOKE  (r8 I:java.util.HashSet) java.util.HashSet.\<init\>():void type: DIRECT \l0x0007: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0008: INVOKE  (r1 I:java.lang.Integer) = (r0 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x000c: INVOKE  (r8 I:java.util.Set), (r1 I:java.lang.Object) java.util.Set.add(java.lang.Object):boolean type: INTERFACE \l0x000f: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0010: INVOKE  (r2 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0014: INVOKE  (r8 I:java.util.Set), (r2 I:java.lang.Object) java.util.Set.add(java.lang.Object):boolean type: INTERFACE \l0x0017: NEW_INSTANCE  (r2 I:java.util.HashSet) =  java.util.HashSet \l0x0019: INVOKE  (r2 I:java.util.HashSet) java.util.HashSet.\<init\>():void type: DIRECT \l0x001c: INVOKE  (r3 I:java.lang.Integer) = (r0 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0020: INVOKE  (r2 I:java.util.Set), (r3 I:java.lang.Object) java.util.Set.add(java.lang.Object):boolean type: INTERFACE \l0x0023: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0024: INVOKE  (r4 I:java.lang.Integer) = (r3 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0028: INVOKE  (r2 I:java.util.Set), (r4 I:java.lang.Object) java.util.Set.add(java.lang.Object):boolean type: INTERFACE \l0x002b: NEW_INSTANCE  (r4 I:java.util.HashSet) =  java.util.HashSet \l0x002d: INVOKE  (r4 I:java.util.HashSet) java.util.HashSet.\<init\>():void type: DIRECT \l0x0030: INVOKE  (r5 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0034: INVOKE  (r4 I:java.util.Set), (r5 I:java.lang.Object) java.util.Set.add(java.lang.Object):boolean type: INTERFACE \l0x0037: CONST  (r5 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0038: INVOKE  (r5 I:java.lang.Integer) = (r5 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x003c: INVOKE  (r4 I:java.util.Set), (r5 I:java.lang.Object) java.util.Set.add(java.lang.Object):boolean type: INTERFACE \l0x003f: NEW_ARRAY  (r0 I:java.util.Set[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.util.Set[] \l0x0041: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0042: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r8 I:?[OBJECT, ARRAY])\l \l0x0044: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0046: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x0048: INVOKE  \l  (r7 I:com.mapbox.android.gestures.AndroidGesturesManager)\l  (r0 I:java.util.Set[])\l com.mapbox.android.gestures.AndroidGesturesManager.setMutuallyExclusiveGestures(java.util.Set[]):void type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x004b|0x004b: IPUT  \l  (r7 I:com.mapbox.android.gestures.AndroidGesturesManager)\l  (r6 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.gesturesManager com.mapbox.android.gestures.AndroidGesturesManager \l}"];
Node_3 [shape=record,label="{3\:\ 0x004d|0x004d: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.mapboxsdk.maps.MapGestureDetector.initializeGesturesManager((r6 'this' I:com.mapbox.mapboxsdk.maps.MapGestureDetector A[IMMUTABLE_TYPE, THIS]), (r7 I:com.mapbox.android.gestures.AndroidGesturesManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3;
}

