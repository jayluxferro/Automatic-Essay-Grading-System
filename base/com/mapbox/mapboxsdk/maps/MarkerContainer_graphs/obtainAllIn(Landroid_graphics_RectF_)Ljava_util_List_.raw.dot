digraph "CFG forcom.mapbox.mapboxsdk.maps.MarkerContainer.obtainAllIn(Landroid\/graphics\/RectF;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.mapbox.mapboxsdk.maps.NativeMapView) = (r7 I:com.mapbox.mapboxsdk.maps.MarkerContainer) com.mapbox.mapboxsdk.maps.MarkerContainer.nativeMapView com.mapbox.mapboxsdk.maps.NativeMapView \l0x0002: INVOKE  (r8 I:android.graphics.RectF) = \l  (r0 I:com.mapbox.mapboxsdk.maps.NativeMapView)\l  (r8 I:android.graphics.RectF)\l com.mapbox.mapboxsdk.maps.NativeMapView.getDensityDependantRectangle(android.graphics.RectF):android.graphics.RectF type: VIRTUAL \l0x0006: IGET  (r0 I:com.mapbox.mapboxsdk.maps.NativeMapView) = (r7 I:com.mapbox.mapboxsdk.maps.MarkerContainer) com.mapbox.mapboxsdk.maps.MarkerContainer.nativeMapView com.mapbox.mapboxsdk.maps.NativeMapView \l0x0008: INVOKE  (r8 I:long[]) = \l  (r0 I:com.mapbox.mapboxsdk.maps.NativeMapView)\l  (r8 I:android.graphics.RectF)\l com.mapbox.mapboxsdk.maps.NativeMapView.queryPointAnnotations(android.graphics.RectF):long[] type: VIRTUAL \l0x000c: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x000e: ARRAY_LENGTH  (r1 I:int) = (r8 I:?[]) \l0x000f: INVOKE  (r0 I:java.util.ArrayList), (r1 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x0012: ARRAY_LENGTH  (r1 I:int) = (r8 I:?[]) \l0x0013: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: IF  (r3 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x0023 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: AGET  (r4 I:?[long, double]) = (r8 I:?[long, double][]), (r3 I:?[int, short, byte, char]) \l0x0019: INVOKE  (r4 I:java.lang.Long) = (r4 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x001d: INVOKE  (r0 I:java.util.List), (r4 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0020: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|0x0023: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0025: ARRAY_LENGTH  (r8 I:int) = (r8 I:?[]) \l0x0026: INVOKE  (r1 I:java.util.ArrayList), (r8 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x0029: INVOKE  (r8 I:java.util.List) = (r7 I:com.mapbox.mapboxsdk.maps.MarkerContainer) com.mapbox.mapboxsdk.maps.MarkerContainer.obtainAnnotations():java.util.List type: DIRECT \l0x002d: INVOKE  (r3 I:int) = (r8 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|0x0031: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:11:0x0053 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0033|0x0033: INVOKE  (r4 I:java.lang.Object) = (r8 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0037: CHECK_CAST  (r4 I:com.mapbox.mapboxsdk.annotations.Annotation) = (com.mapbox.mapboxsdk.annotations.Annotation) (r4 I:?[OBJECT, ARRAY]) \l0x0039: INSTANCE_OF  (r5 I:boolean) = (r4 I:?[OBJECT, ARRAY]) com.mapbox.mapboxsdk.annotations.Marker \l}"];
Node_6 [shape=record,label="{6\:\ 0x003b|0x003b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0050 \l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|0x003d: INVOKE  (r5 I:long) = (r4 I:com.mapbox.mapboxsdk.annotations.Annotation) com.mapbox.mapboxsdk.annotations.Annotation.getId():long type: VIRTUAL \l0x0041: INVOKE  (r5 I:java.lang.Long) = (r5 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0045: INVOKE  (r5 I:boolean) = (r0 I:java.util.List), (r5 I:java.lang.Object) java.util.List.contains(java.lang.Object):boolean type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x0049|0x0049: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0050 \l}"];
Node_9 [shape=record,label="{9\:\ 0x004b|0x004b: CHECK_CAST  (r4 I:com.mapbox.mapboxsdk.annotations.Marker) = (com.mapbox.mapboxsdk.annotations.Marker) (r4 I:?[OBJECT, ARRAY]) \l0x004d: INVOKE  (r1 I:java.util.List), (r4 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0050|0x0050: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0053|0x0053: NEW_INSTANCE  (r8 I:java.util.ArrayList) =  java.util.ArrayList \l0x0055: INVOKE  (r8 I:java.util.ArrayList), (r1 I:java.util.Collection) java.util.ArrayList.\<init\>(java.util.Collection):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0058|0x0058: RETURN  \l  (r8 I:java.util.List\<com.mapbox.mapboxsdk.annotations.Marker\>)\l \l}"];
MethodNode[shape=record,label="{public java.util.List\<com.mapbox.mapboxsdk.annotations.Marker\> com.mapbox.mapboxsdk.maps.MarkerContainer.obtainAllIn((r7 'this' I:com.mapbox.mapboxsdk.maps.MarkerContainer A[IMMUTABLE_TYPE, THIS]), (r8 I:android.graphics.RectF A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/graphics\/RectF;, ), Ljava\/util\/List\<, Lcom\/mapbox\/mapboxsdk\/annotations\/Marker;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_4;
Node_11 -> Node_12;
}

