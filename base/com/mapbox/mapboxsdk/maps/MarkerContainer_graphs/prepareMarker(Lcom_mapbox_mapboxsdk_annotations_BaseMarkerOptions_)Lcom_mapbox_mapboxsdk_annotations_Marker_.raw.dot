digraph "CFG forcom.mapbox.mapboxsdk.maps.MarkerContainer.prepareMarker(Lcom\/mapbox\/mapboxsdk\/annotations\/BaseMarkerOptions;)Lcom\/mapbox\/mapboxsdk\/annotations\/Marker;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:com.mapbox.mapboxsdk.annotations.Marker) = (r3 I:com.mapbox.mapboxsdk.annotations.BaseMarkerOptions) com.mapbox.mapboxsdk.annotations.BaseMarkerOptions.getMarker():com.mapbox.mapboxsdk.annotations.Marker type: VIRTUAL \l0x0004: IGET  (r0 I:com.mapbox.mapboxsdk.maps.IconManager) = (r2 I:com.mapbox.mapboxsdk.maps.MarkerContainer) com.mapbox.mapboxsdk.maps.MarkerContainer.iconManager com.mapbox.mapboxsdk.maps.IconManager \l0x0006: INVOKE  (r0 I:com.mapbox.mapboxsdk.annotations.Icon) = \l  (r0 I:com.mapbox.mapboxsdk.maps.IconManager)\l  (r3 I:com.mapbox.mapboxsdk.annotations.Marker)\l com.mapbox.mapboxsdk.maps.IconManager.loadIconForMarker(com.mapbox.mapboxsdk.annotations.Marker):com.mapbox.mapboxsdk.annotations.Icon type: VIRTUAL \l0x000a: IGET  (r1 I:com.mapbox.mapboxsdk.maps.IconManager) = (r2 I:com.mapbox.mapboxsdk.maps.MarkerContainer) com.mapbox.mapboxsdk.maps.MarkerContainer.iconManager com.mapbox.mapboxsdk.maps.IconManager \l0x000c: INVOKE  (r0 I:int) = \l  (r1 I:com.mapbox.mapboxsdk.maps.IconManager)\l  (r0 I:com.mapbox.mapboxsdk.annotations.Icon)\l com.mapbox.mapboxsdk.maps.IconManager.getTopOffsetPixelsForIcon(com.mapbox.mapboxsdk.annotations.Icon):int type: VIRTUAL \l0x0010: INVOKE  (r3 I:com.mapbox.mapboxsdk.annotations.Marker), (r0 I:int) com.mapbox.mapboxsdk.annotations.Marker.setTopOffsetPixels(int):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: RETURN  (r3 I:com.mapbox.mapboxsdk.annotations.Marker) \l}"];
MethodNode[shape=record,label="{private com.mapbox.mapboxsdk.annotations.Marker com.mapbox.mapboxsdk.maps.MarkerContainer.prepareMarker((r2 'this' I:com.mapbox.mapboxsdk.maps.MarkerContainer A[IMMUTABLE_TYPE, THIS]), (r3 I:com.mapbox.mapboxsdk.annotations.BaseMarkerOptions A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

