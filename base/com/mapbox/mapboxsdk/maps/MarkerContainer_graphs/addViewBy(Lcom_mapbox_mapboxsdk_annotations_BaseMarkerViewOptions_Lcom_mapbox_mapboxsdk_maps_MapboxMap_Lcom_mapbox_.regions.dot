digraph "CFG forcom.mapbox.mapboxsdk.maps.MarkerContainer.addViewBy(Lcom\/mapbox\/mapboxsdk\/annotations\/BaseMarkerViewOptions;Lcom\/mapbox\/mapboxsdk\/maps\/MapboxMap;Lcom\/mapbox\/mapboxsdk\/annotations\/MarkerViewManager$OnMarkerViewAddedListener;)Lcom\/mapbox\/mapboxsdk\/annotations\/MarkerView;" {
subgraph cluster_Region_1384123202 {
label = "R(4:0|(1:2)|3|4)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.mapbox.mapboxsdk.annotations.MarkerView com.mapbox.mapboxsdk.annotations.MarkerView r3 = prepareViewMarker(r3)\lr3.setMapboxMap(r4)\llong long r0 = r2.nativeMapView.addMarker(r3)\lr3.setId(r0)\lr2.annotations.put(r0, r3)\l}"];
subgraph cluster_IfRegion_1631039413 {
label = "IF [B:1:0x0015] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0015|if (r5 != null) goto L_0x0017\l}"];
subgraph cluster_Region_1895695213 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0017|r2.markerViewManager.addOnMarkerViewAddedListener(r3, r5)\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x001c|r2.markerViewManager.setEnabled(true)\lr2.markerViewManager.setWaitingForRenderInvoke(true)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0027|RETURN\l|return r3\l}"];
}
MethodNode[shape=record,label="{public com.mapbox.mapboxsdk.annotations.MarkerView com.mapbox.mapboxsdk.maps.MarkerContainer.addViewBy((r2v0 'this' com.mapbox.mapboxsdk.maps.MarkerContainer A[IMMUTABLE_TYPE, THIS]), (r3v0 com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 com.mapbox.mapboxsdk.maps.MapboxMap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 com.mapbox.mapboxsdk.annotations.MarkerViewManager$OnMarkerViewAddedListener A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
}

