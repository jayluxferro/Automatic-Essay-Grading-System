digraph "CFG forcom.mapbox.mapboxsdk.maps.MarkerContainer.addViewsBy(Ljava\/util\/List;Lcom\/mapbox\/mapboxsdk\/maps\/MapboxMap;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r1 I:java.util.Iterator) = (r7 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l0x000d: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x003f \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0014: CHECK_CAST  (r2 I:com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions) = (com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions) (r2 I:?[OBJECT, ARRAY]) \l0x0016: INVOKE  (r4 I:int) = (r7 I:java.util.List), (r2 I:java.lang.Object) java.util.List.indexOf(java.lang.Object):int type: INTERFACE \l0x001a: INVOKE  (r5 I:int) = (r7 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x001e: ARITH  (r5 I:int) = (r5 I:int) \- (r3 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0026 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: IGET  (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewManager) = (r6 I:com.mapbox.mapboxsdk.maps.MarkerContainer) com.mapbox.mapboxsdk.maps.MarkerContainer.markerViewManager com.mapbox.mapboxsdk.annotations.MarkerViewManager \l0x0023: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.annotations.MarkerViewManager)\l  (r3 I:boolean)\l com.mapbox.mapboxsdk.annotations.MarkerViewManager.setWaitingForRenderInvoke(boolean):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: INVOKE  (r2 I:com.mapbox.mapboxsdk.annotations.MarkerView) = \l  (r6 I:com.mapbox.mapboxsdk.maps.MarkerContainer)\l  (r2 I:com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions)\l com.mapbox.mapboxsdk.maps.MarkerContainer.prepareViewMarker(com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions):com.mapbox.mapboxsdk.annotations.MarkerView type: DIRECT \l0x002a: INVOKE  \l  (r2 I:com.mapbox.mapboxsdk.annotations.MarkerView)\l  (r8 I:com.mapbox.mapboxsdk.maps.MapboxMap)\l com.mapbox.mapboxsdk.annotations.MarkerView.setMapboxMap(com.mapbox.mapboxsdk.maps.MapboxMap):void type: VIRTUAL \l0x002d: IGET  (r3 I:com.mapbox.mapboxsdk.maps.NativeMapView) = (r6 I:com.mapbox.mapboxsdk.maps.MarkerContainer) com.mapbox.mapboxsdk.maps.MarkerContainer.nativeMapView com.mapbox.mapboxsdk.maps.NativeMapView \l0x002f: INVOKE  (r3 I:long) = \l  (r3 I:com.mapbox.mapboxsdk.maps.NativeMapView)\l  (r2 I:com.mapbox.mapboxsdk.annotations.Marker)\l com.mapbox.mapboxsdk.maps.NativeMapView.addMarker(com.mapbox.mapboxsdk.annotations.Marker):long type: VIRTUAL \l0x0033: INVOKE  \l  (r2 I:com.mapbox.mapboxsdk.annotations.MarkerView)\l  (r3 I:long)\l com.mapbox.mapboxsdk.annotations.MarkerView.setId(long):void type: VIRTUAL \l0x0036: IGET  (r5 I:android.support.v4.util.LongSparseArray\<com.mapbox.mapboxsdk.annotations.Annotation\>) = (r6 I:com.mapbox.mapboxsdk.maps.MarkerContainer) com.mapbox.mapboxsdk.maps.MarkerContainer.annotations android.support.v4.util.LongSparseArray \l0x0038: INVOKE  \l  (r5 I:android.support.v4.util.LongSparseArray)\l  (r3 I:long)\l  (r2 I:java.lang.Object)\l android.support.v4.util.LongSparseArray.put(long, java.lang.Object):void type: VIRTUAL \l0x003b: INVOKE  (r0 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x003f|0x003f: IGET  (r7 I:com.mapbox.mapboxsdk.annotations.MarkerViewManager) = (r6 I:com.mapbox.mapboxsdk.maps.MarkerContainer) com.mapbox.mapboxsdk.maps.MarkerContainer.markerViewManager com.mapbox.mapboxsdk.annotations.MarkerViewManager \l0x0041: INVOKE  \l  (r7 I:com.mapbox.mapboxsdk.annotations.MarkerViewManager)\l  (r3 I:boolean)\l com.mapbox.mapboxsdk.annotations.MarkerViewManager.setEnabled(boolean):void type: VIRTUAL \l0x0044: IGET  (r7 I:com.mapbox.mapboxsdk.annotations.MarkerViewManager) = (r6 I:com.mapbox.mapboxsdk.maps.MarkerContainer) com.mapbox.mapboxsdk.maps.MarkerContainer.markerViewManager com.mapbox.mapboxsdk.annotations.MarkerViewManager \l0x0046: INVOKE  (r7 I:com.mapbox.mapboxsdk.annotations.MarkerViewManager) com.mapbox.mapboxsdk.annotations.MarkerViewManager.update():void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0049|0x0049: RETURN  \l  (r0 I:java.util.List\<com.mapbox.mapboxsdk.annotations.MarkerView\>)\l \l}"];
MethodNode[shape=record,label="{public java.util.List\<com.mapbox.mapboxsdk.annotations.MarkerView\> com.mapbox.mapboxsdk.maps.MarkerContainer.addViewsBy((r6 'this' I:com.mapbox.mapboxsdk.maps.MarkerContainer A[IMMUTABLE_TYPE, THIS]), (r7 I:java.util.List\<? extends com.mapbox.mapboxsdk.annotations.BaseMarkerViewOptions\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.mapbox.mapboxsdk.maps.MapboxMap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, +, Lcom\/mapbox\/mapboxsdk\/annotations\/BaseMarkerViewOptions;, \>;, Lcom\/mapbox\/mapboxsdk\/maps\/MapboxMap;, ), Ljava\/util\/List\<, Lcom\/mapbox\/mapboxsdk\/annotations\/MarkerView;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_7 -> Node_8;
}

