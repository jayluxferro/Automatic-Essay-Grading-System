digraph "CFG forcom.mapbox.mapboxsdk.maps.widgets.CompassView.initialize(Landroid\/content\/Context;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  \l  (r2 I:com.mapbox.mapboxsdk.maps.widgets.CompassView)\l  (r0 I:boolean)\l com.mapbox.mapboxsdk.maps.widgets.CompassView.setEnabled(boolean):void type: VIRTUAL \l0x0004: INVOKE  (r3 I:android.content.res.Resources) = (r3 I:android.content.Context) android.content.Context.getResources():android.content.res.Resources type: VIRTUAL \l0x0008: INVOKE  (r3 I:android.util.DisplayMetrics) = (r3 I:android.content.res.Resources) android.content.res.Resources.getDisplayMetrics():android.util.DisplayMetrics type: VIRTUAL \l0x000c: IGET  (r3 I:float) = (r3 I:android.util.DisplayMetrics) android.util.DisplayMetrics.density float \l0x000e: NEW_INSTANCE  (r0 I:android.view.ViewGroup$LayoutParams) =  android.view.ViewGroup$LayoutParams \l0x0010: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1111490560(0x42400000, float:48.0) ?[int, float, short, byte, char])\l \l0x0012: ARITH  (r3 I:float) = (r3 I:float) * (r1 I:float) \l0x0014: CAST  (r3 I:int) = (int) (r3 I:float) \l0x0015: INVOKE  \l  (r0 I:android.view.ViewGroup$LayoutParams)\l  (r3 I:int)\l  (r3 I:int)\l android.view.ViewGroup.LayoutParams.\<init\>(int, int):void type: DIRECT \l0x0018: INVOKE  \l  (r2 I:com.mapbox.mapboxsdk.maps.widgets.CompassView)\l  (r0 I:android.view.ViewGroup$LayoutParams)\l com.mapbox.mapboxsdk.maps.widgets.CompassView.setLayoutParams(android.view.ViewGroup$LayoutParams):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|0x001b: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.mapboxsdk.maps.widgets.CompassView.initialize((r2 'this' I:com.mapbox.mapboxsdk.maps.widgets.CompassView A[IMMUTABLE_TYPE, THIS]), (r3 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

