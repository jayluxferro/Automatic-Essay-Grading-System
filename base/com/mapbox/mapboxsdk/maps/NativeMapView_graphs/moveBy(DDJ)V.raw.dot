digraph "CFG forcom.mapbox.mapboxsdk.maps.NativeMapView.moveBy(DDJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"moveBy\" \l0x0002: INVOKE  (r0 I:boolean) = \l  (r9 I:com.mapbox.mapboxsdk.maps.NativeMapView)\l  (r0 I:java.lang.String)\l com.mapbox.mapboxsdk.maps.NativeMapView.checkState(java.lang.String):boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r0 I:float) = (r9 I:com.mapbox.mapboxsdk.maps.NativeMapView) com.mapbox.mapboxsdk.maps.NativeMapView.pixelRatio float \l0x000b: CAST  (r0 I:double) = (double) (r0 I:float) \l0x000c: ARITH  (r3 I:double) = (r10 I:double) \/ (r0 I:double) \l0x000e: IGET  (r10 I:float) = (r9 I:com.mapbox.mapboxsdk.maps.NativeMapView) com.mapbox.mapboxsdk.maps.NativeMapView.pixelRatio float \l0x0010: CAST  (r10 I:double) = (double) (r10 I:float) \l0x0011: ARITH  (r5 I:double) = (r12 I:double) \/ (r10 I:double) \l0x0013: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0014: MOVE  (r7 I:?[long, double]) = (r14 I:?[long, double]) \l0x0015: INVOKE  \l  (r2 I:com.mapbox.mapboxsdk.maps.NativeMapView)\l  (r3 I:double)\l  (r5 I:double)\l  (r7 I:long)\l com.mapbox.mapboxsdk.maps.NativeMapView.nativeMoveBy(double, double, long):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.maps.NativeMapView.moveBy((r9 'this' I:com.mapbox.mapboxsdk.maps.NativeMapView A[IMMUTABLE_TYPE, THIS]), (r10 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

