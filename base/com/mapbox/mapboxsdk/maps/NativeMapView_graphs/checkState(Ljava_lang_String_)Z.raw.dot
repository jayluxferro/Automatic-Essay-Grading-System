digraph "CFG forcom.mapbox.mapboxsdk.maps.NativeMapView.checkState(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Thread) = (r4 I:com.mapbox.mapboxsdk.maps.NativeMapView) com.mapbox.mapboxsdk.maps.NativeMapView.thread java.lang.Thread \l0x0002: INVOKE  (r1 I:java.lang.Thread) =  java.lang.Thread.currentThread():java.lang.Thread type: STATIC \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0029 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r0 I:boolean) = (r4 I:com.mapbox.mapboxsdk.maps.NativeMapView) com.mapbox.mapboxsdk.maps.NativeMapView.destroyed boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0026 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: INVOKE  (r0 I:boolean) = (r5 I:java.lang.CharSequence) android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0026 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: CONST_STR  (r0 I:java.lang.String) =  \"You're calling `%s` after the `MapView` was destroyed, were you invoking it after `onDestroy()`?\" \l0x0016: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0018: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x001a: INVOKE  (r5 I:java.lang.String) = (r0 I:java.lang.String), (r1 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x001e: CONST_STR  (r0 I:java.lang.String) =  \"Mbgl\-NativeMapView\" \l0x0020: INVOKE  (r0 I:java.lang.String), (r5 I:java.lang.String) com.mapbox.mapboxsdk.log.Logger.e(java.lang.String, java.lang.String):void type: STATIC \l0x0023: INVOKE  (r5 I:java.lang.String) com.mapbox.mapboxsdk.MapStrictMode.strictModeViolation(java.lang.String):void type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: IGET  (r5 I:boolean) = (r4 I:com.mapbox.mapboxsdk.maps.NativeMapView) com.mapbox.mapboxsdk.maps.NativeMapView.destroyed boolean \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: RETURN  (r5 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: NEW_INSTANCE  (r0 I:com.mapbox.mapboxsdk.exceptions.CalledFromWorkerThreadException) =  com.mapbox.mapboxsdk.exceptions.CalledFromWorkerThreadException \l0x002b: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x002d: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x002f: CONST_STR  (r5 I:java.lang.String) =  \"Map interactions should happen on the UI thread. Method invoked from wrong thread is %s.\" \l0x0031: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.String), (r1 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x0035: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.exceptions.CalledFromWorkerThreadException)\l  (r5 I:java.lang.String)\l com.mapbox.mapboxsdk.exceptions.CalledFromWorkerThreadException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private boolean com.mapbox.mapboxsdk.maps.NativeMapView.checkState((r4 'this' I:com.mapbox.mapboxsdk.maps.NativeMapView A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
}

