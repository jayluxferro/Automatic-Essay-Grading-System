digraph "CFG forcom.mapbox.mapboxsdk.maps.NativeMapView.resizeView(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"resizeView\" \l0x0002: INVOKE  (r0 I:boolean) = \l  (r6 I:com.mapbox.mapboxsdk.maps.NativeMapView)\l  (r0 I:java.lang.String)\l com.mapbox.mapboxsdk.maps.NativeMapView.checkState(java.lang.String):boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: CAST  (r7 I:float) = (float) (r7 I:int) \l0x000a: IGET  (r0 I:float) = (r6 I:com.mapbox.mapboxsdk.maps.NativeMapView) com.mapbox.mapboxsdk.maps.NativeMapView.pixelRatio float \l0x000c: ARITH  (r7 I:float) = (r7 I:float) \/ (r0 I:float) \l0x000d: CAST  (r0 I:double) = (double) (r7 I:float) \l0x000e: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x0012: CAST  (r7 I:int) = (int) (r0 I:double) \l0x0013: CAST  (r8 I:float) = (float) (r8 I:int) \l0x0014: IGET  (r0 I:float) = (r6 I:com.mapbox.mapboxsdk.maps.NativeMapView) com.mapbox.mapboxsdk.maps.NativeMapView.pixelRatio float \l0x0016: ARITH  (r8 I:float) = (r8 I:float) \/ (r0 I:float) \l0x0017: CAST  (r0 I:double) = (double) (r8 I:float) \l0x0018: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x001c: CAST  (r8 I:int) = (int) (r0 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: IF  (r7 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:15:0x0062 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: IF  (r8 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:13:0x005a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0022: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0023: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (65535(0xffff, float:9.1834E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: IF  (r7 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:9:0x003e \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: CONST_STR  (r3 I:java.lang.String) =  \"Mbgl\-NativeMapView\" \l0x002a: CONST_STR  (r4 I:java.lang.String) =  \"Device returned an out of range width size, capping value at 65535 instead of %s\" \l0x002c: NEW_ARRAY  (r5 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x002e: INVOKE  (r7 I:java.lang.Integer) = (r7 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0032: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r7 I:?[OBJECT, ARRAY])\l \l0x0034: INVOKE  (r7 I:java.lang.String) = (r4 I:java.lang.String), (r5 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x0038: INVOKE  (r3 I:java.lang.String), (r7 I:java.lang.String) com.mapbox.mapboxsdk.log.Logger.e(java.lang.String, java.lang.String):void type: STATIC \l0x003b: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (65535(0xffff, float:9.1834E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x003e|0x003e: IF  (r8 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:11:0x0056 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|0x0040: CONST_STR  (r3 I:java.lang.String) =  \"Mbgl\-NativeMapView\" \l0x0042: CONST_STR  (r4 I:java.lang.String) =  \"Device returned an out of range height size, capping value at 65535 instead of %s\" \l0x0044: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0046: INVOKE  (r8 I:java.lang.Integer) = (r8 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x004a: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r8 I:?[OBJECT, ARRAY])\l \l0x004c: INVOKE  (r8 I:java.lang.String) = (r4 I:java.lang.String), (r1 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x0050: INVOKE  (r3 I:java.lang.String), (r8 I:java.lang.String) com.mapbox.mapboxsdk.log.Logger.e(java.lang.String, java.lang.String):void type: STATIC \l0x0053: CONST  (r8 I:?[int, float, short, byte, char]) = \l  (65535(0xffff, float:9.1834E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0056|0x0056: INVOKE  \l  (r6 I:com.mapbox.mapboxsdk.maps.NativeMapView)\l  (r7 I:int)\l  (r8 I:int)\l com.mapbox.mapboxsdk.maps.NativeMapView.nativeResizeView(int, int):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0059|0x0059: RETURN   \l}"];
Node_13 [shape=record,label="{13\:\ 0x005a|0x005a: NEW_INSTANCE  (r7 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x005c: CONST_STR  (r8 I:java.lang.String) =  \"height cannot be negative.\" \l0x005e: INVOKE  \l  (r7 I:java.lang.IllegalArgumentException)\l  (r8 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x0061|0x0061: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0062|0x0062: NEW_INSTANCE  (r7 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0064: CONST_STR  (r8 I:java.lang.String) =  \"width cannot be negative.\" \l0x0066: INVOKE  \l  (r7 I:java.lang.IllegalArgumentException)\l  (r8 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0069|0x0069: THROW  (r7 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.maps.NativeMapView.resizeView((r6 'this' I:com.mapbox.mapboxsdk.maps.NativeMapView A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_15;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
}

