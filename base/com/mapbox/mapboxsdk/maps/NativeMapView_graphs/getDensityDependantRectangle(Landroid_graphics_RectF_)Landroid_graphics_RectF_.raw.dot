digraph "CFG forcom.mapbox.mapboxsdk.maps.NativeMapView.getDensityDependantRectangle(Landroid\/graphics\/RectF;)Landroid\/graphics\/RectF;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:android.graphics.RectF) =  android.graphics.RectF \l0x0002: IGET  (r1 I:float) = (r6 I:android.graphics.RectF) android.graphics.RectF.left float \l0x0004: IGET  (r2 I:float) = (r5 I:com.mapbox.mapboxsdk.maps.NativeMapView) com.mapbox.mapboxsdk.maps.NativeMapView.pixelRatio float \l0x0006: ARITH  (r1 I:float) = (r1 I:float) \/ (r2 I:float) \l0x0007: IGET  (r2 I:float) = (r6 I:android.graphics.RectF) android.graphics.RectF.top float \l0x0009: IGET  (r3 I:float) = (r5 I:com.mapbox.mapboxsdk.maps.NativeMapView) com.mapbox.mapboxsdk.maps.NativeMapView.pixelRatio float \l0x000b: ARITH  (r2 I:float) = (r2 I:float) \/ (r3 I:float) \l0x000c: IGET  (r3 I:float) = (r6 I:android.graphics.RectF) android.graphics.RectF.right float \l0x000e: IGET  (r4 I:float) = (r5 I:com.mapbox.mapboxsdk.maps.NativeMapView) com.mapbox.mapboxsdk.maps.NativeMapView.pixelRatio float \l0x0010: ARITH  (r3 I:float) = (r3 I:float) \/ (r4 I:float) \l0x0011: IGET  (r6 I:float) = (r6 I:android.graphics.RectF) android.graphics.RectF.bottom float \l0x0013: IGET  (r4 I:float) = (r5 I:com.mapbox.mapboxsdk.maps.NativeMapView) com.mapbox.mapboxsdk.maps.NativeMapView.pixelRatio float \l0x0015: ARITH  (r6 I:float) = (r6 I:float) \/ (r4 I:float) \l0x0016: INVOKE  \l  (r0 I:android.graphics.RectF)\l  (r1 I:float)\l  (r2 I:float)\l  (r3 I:float)\l  (r6 I:float)\l android.graphics.RectF.\<init\>(float, float, float, float):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: RETURN  (r0 I:android.graphics.RectF) \l}"];
MethodNode[shape=record,label="{android.graphics.RectF com.mapbox.mapboxsdk.maps.NativeMapView.getDensityDependantRectangle((r5 'this' I:com.mapbox.mapboxsdk.maps.NativeMapView A[IMMUTABLE_TYPE, THIS]), (r6 I:android.graphics.RectF A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

