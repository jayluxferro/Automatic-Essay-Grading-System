digraph "CFG forcom.mapbox.mapboxsdk.maps.MapZoomButtonController.setVisible(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r1 I:com.mapbox.mapboxsdk.maps.MapZoomButtonController) com.mapbox.mapboxsdk.maps.MapZoomButtonController.uiSettings com.mapbox.mapboxsdk.maps.UiSettings \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r1 I:com.mapbox.mapboxsdk.maps.MapZoomButtonController) com.mapbox.mapboxsdk.maps.MapZoomButtonController.uiSettings com.mapbox.mapboxsdk.maps.UiSettings \l0x0006: INVOKE  (r0 I:boolean) = (r0 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.isZoomControlsEnabled():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000d \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IGET  (r0 I:android.widget.ZoomButtonsController) = (r1 I:com.mapbox.mapboxsdk.maps.MapZoomButtonController) com.mapbox.mapboxsdk.maps.MapZoomButtonController.zoomButtonsController android.widget.ZoomButtonsController \l0x000f: INVOKE  (r0 I:android.widget.ZoomButtonsController), (r2 I:boolean) android.widget.ZoomButtonsController.setVisible(boolean):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: RETURN   \l}"];
MethodNode[shape=record,label="{void com.mapbox.mapboxsdk.maps.MapZoomButtonController.setVisible((r1 'this' I:com.mapbox.mapboxsdk.maps.MapZoomButtonController A[IMMUTABLE_TYPE, THIS]), (r2 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
}

