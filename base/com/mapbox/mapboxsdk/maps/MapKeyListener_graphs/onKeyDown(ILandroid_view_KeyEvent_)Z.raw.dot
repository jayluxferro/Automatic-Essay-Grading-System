digraph "CFG forcom.mapbox.mapboxsdk.maps.MapKeyListener.onKeyDown(ILandroid\/view\/KeyEvent;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: INVOKE  (r2 I:int) = (r18 I:android.view.KeyEvent) android.view.KeyEvent.getRepeatCount():int type: VIRTUAL \l0x0008: CONST  (r3 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r2 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: CONST  (r2 I:?[long, double]) = \l  (4632233691727265792(0x4049000000000000, double:50.0) ?[long, double])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: MOVE  (r7 I:?[long, double]) = (r2 I:?[long, double]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: CONST  (r2 I:?[long, double]) = \l  (4621819117588971520(0x4024000000000000, double:10.0) ?[long, double])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: CONST  (r2 I:?[int, float, short, byte, char]) = (66 ?[int, float, short, byte, char]) \l0x0014: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0080 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[19, 20, 21, 22, 23] t:[0x0068, 0x004f, 0x0035, 0x001c, 0x0080] \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: RETURN  (r2 I:boolean) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: IGET  (r1 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r0 I:com.mapbox.mapboxsdk.maps.MapKeyListener) com.mapbox.mapboxsdk.maps.MapKeyListener.uiSettings com.mapbox.mapboxsdk.maps.UiSettings \l0x001e: INVOKE  (r1 I:boolean) = (r1 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.isScrollGesturesEnabled():boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0025 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: RETURN  (r2 I:boolean) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|0x0025: IGET  (r1 I:com.mapbox.mapboxsdk.maps.Transform) = (r0 I:com.mapbox.mapboxsdk.maps.MapKeyListener) com.mapbox.mapboxsdk.maps.MapKeyListener.transform com.mapbox.mapboxsdk.maps.Transform \l0x0027: INVOKE  (r1 I:com.mapbox.mapboxsdk.maps.Transform) com.mapbox.mapboxsdk.maps.Transform.cancelTransitions():void type: VIRTUAL \l0x002a: IGET  (r9 I:com.mapbox.mapboxsdk.maps.Transform) = (r0 I:com.mapbox.mapboxsdk.maps.MapKeyListener) com.mapbox.mapboxsdk.maps.MapKeyListener.transform com.mapbox.mapboxsdk.maps.Transform \l0x002c: NEG  (r10 I:double) = (r7 I:double) \l0x002d: CONST  (r12 I:?[long, double]) = (0 ?[long, double]) \l0x002f: CONST  (r14 I:?[long, double]) = (0 ?[long, double]) \l0x0031: INVOKE  \l  (r9 I:com.mapbox.mapboxsdk.maps.Transform)\l  (r10 I:double)\l  (r12 I:double)\l  (r14 I:long)\l com.mapbox.mapboxsdk.maps.Transform.moveBy(double, double, long):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0034|0x0034: RETURN  (r3 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|0x0035: IGET  (r1 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r0 I:com.mapbox.mapboxsdk.maps.MapKeyListener) com.mapbox.mapboxsdk.maps.MapKeyListener.uiSettings com.mapbox.mapboxsdk.maps.UiSettings \l0x0037: INVOKE  (r1 I:boolean) = (r1 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.isScrollGesturesEnabled():boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x003b|0x003b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x003e \l}"];
Node_17 [shape=record,label="{17\:\ 0x003d|0x003d: RETURN  (r2 I:boolean) \l}"];
Node_18 [shape=record,label="{18\:\ 0x003e|0x003e: IGET  (r1 I:com.mapbox.mapboxsdk.maps.Transform) = (r0 I:com.mapbox.mapboxsdk.maps.MapKeyListener) com.mapbox.mapboxsdk.maps.MapKeyListener.transform com.mapbox.mapboxsdk.maps.Transform \l0x0040: INVOKE  (r1 I:com.mapbox.mapboxsdk.maps.Transform) com.mapbox.mapboxsdk.maps.Transform.cancelTransitions():void type: VIRTUAL \l0x0043: IGET  (r4 I:com.mapbox.mapboxsdk.maps.Transform) = (r0 I:com.mapbox.mapboxsdk.maps.MapKeyListener) com.mapbox.mapboxsdk.maps.MapKeyListener.transform com.mapbox.mapboxsdk.maps.Transform \l0x0045: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l0x0047: CONST  (r9 I:?[long, double]) = (0 ?[long, double]) \l0x0049: MOVE  (r5 I:?[long, double]) = (r7 I:?[long, double]) \l0x004a: MOVE  (r7 I:?[long, double]) = (r1 I:?[long, double]) \l0x004b: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.maps.Transform)\l  (r5 I:double)\l  (r7 I:double)\l  (r9 I:long)\l com.mapbox.mapboxsdk.maps.Transform.moveBy(double, double, long):void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x004e|0x004e: RETURN  (r3 I:boolean) \l}"];
Node_20 [shape=record,label="{20\:\ 0x004f|0x004f: IGET  (r1 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r0 I:com.mapbox.mapboxsdk.maps.MapKeyListener) com.mapbox.mapboxsdk.maps.MapKeyListener.uiSettings com.mapbox.mapboxsdk.maps.UiSettings \l0x0051: INVOKE  (r1 I:boolean) = (r1 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.isScrollGesturesEnabled():boolean type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0055|0x0055: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0058 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0057|0x0057: RETURN  (r2 I:boolean) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0058|0x0058: IGET  (r1 I:com.mapbox.mapboxsdk.maps.Transform) = (r0 I:com.mapbox.mapboxsdk.maps.MapKeyListener) com.mapbox.mapboxsdk.maps.MapKeyListener.transform com.mapbox.mapboxsdk.maps.Transform \l0x005a: INVOKE  (r1 I:com.mapbox.mapboxsdk.maps.Transform) com.mapbox.mapboxsdk.maps.Transform.cancelTransitions():void type: VIRTUAL \l0x005d: IGET  (r9 I:com.mapbox.mapboxsdk.maps.Transform) = (r0 I:com.mapbox.mapboxsdk.maps.MapKeyListener) com.mapbox.mapboxsdk.maps.MapKeyListener.transform com.mapbox.mapboxsdk.maps.Transform \l0x005f: CONST  (r10 I:?[long, double]) = (0 ?[long, double]) \l0x0061: NEG  (r12 I:double) = (r7 I:double) \l0x0062: CONST  (r14 I:?[long, double]) = (0 ?[long, double]) \l0x0064: INVOKE  \l  (r9 I:com.mapbox.mapboxsdk.maps.Transform)\l  (r10 I:double)\l  (r12 I:double)\l  (r14 I:long)\l com.mapbox.mapboxsdk.maps.Transform.moveBy(double, double, long):void type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0067|0x0067: RETURN  (r3 I:boolean) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0068|0x0068: IGET  (r1 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r0 I:com.mapbox.mapboxsdk.maps.MapKeyListener) com.mapbox.mapboxsdk.maps.MapKeyListener.uiSettings com.mapbox.mapboxsdk.maps.UiSettings \l0x006a: INVOKE  (r1 I:boolean) = (r1 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.isScrollGesturesEnabled():boolean type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x006e|0x006e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0071 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0070|0x0070: RETURN  (r2 I:boolean) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0071|0x0071: IGET  (r1 I:com.mapbox.mapboxsdk.maps.Transform) = (r0 I:com.mapbox.mapboxsdk.maps.MapKeyListener) com.mapbox.mapboxsdk.maps.MapKeyListener.transform com.mapbox.mapboxsdk.maps.Transform \l0x0073: INVOKE  (r1 I:com.mapbox.mapboxsdk.maps.Transform) com.mapbox.mapboxsdk.maps.Transform.cancelTransitions():void type: VIRTUAL \l0x0076: IGET  (r4 I:com.mapbox.mapboxsdk.maps.Transform) = (r0 I:com.mapbox.mapboxsdk.maps.MapKeyListener) com.mapbox.mapboxsdk.maps.MapKeyListener.transform com.mapbox.mapboxsdk.maps.Transform \l0x0078: CONST  (r5 I:?[long, double]) = (0 ?[long, double]) \l0x007a: CONST  (r9 I:?[long, double]) = (0 ?[long, double]) \l0x007c: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.maps.Transform)\l  (r5 I:double)\l  (r7 I:double)\l  (r9 I:long)\l com.mapbox.mapboxsdk.maps.Transform.moveBy(double, double, long):void type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x007f|0x007f: RETURN  (r3 I:boolean) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0080|0x0080: INVOKE  (r18 I:android.view.KeyEvent) android.view.KeyEvent.startTracking():void type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x0083|0x0083: RETURN  (r3 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean com.mapbox.mapboxsdk.maps.MapKeyListener.onKeyDown((r16 'this' I:com.mapbox.mapboxsdk.maps.MapKeyListener A[IMMUTABLE_TYPE, THIS]), (r17 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:android.view.KeyEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_4 -> Node_3;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_30;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_10;
Node_8 -> Node_15;
Node_8 -> Node_20;
Node_8 -> Node_25;
Node_8 -> Node_30;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_28 -> Node_29;
Node_30 -> Node_31;
}

