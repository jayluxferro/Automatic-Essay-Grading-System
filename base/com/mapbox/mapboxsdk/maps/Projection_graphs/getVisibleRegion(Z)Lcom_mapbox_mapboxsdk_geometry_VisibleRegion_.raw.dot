digraph "CFG forcom.mapbox.mapboxsdk.maps.Projection.getVisibleRegion(Z)Lcom\/mapbox\/mapboxsdk\/geometry\/VisibleRegion;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r26 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r2 I:com.mapbox.mapboxsdk.maps.NativeMapView) = (r0 I:com.mapbox.mapboxsdk.maps.Projection) com.mapbox.mapboxsdk.maps.Projection.nativeMapView com.mapbox.mapboxsdk.maps.NativeMapView \l0x0007: INVOKE  (r2 I:int) = (r2 I:com.mapbox.mapboxsdk.maps.NativeMapView) com.mapbox.mapboxsdk.maps.NativeMapView.getWidth():int type: VIRTUAL \l0x000b: CAST  (r2 I:float) = (float) (r2 I:int) \l0x000c: IGET  (r3 I:com.mapbox.mapboxsdk.maps.NativeMapView) = (r0 I:com.mapbox.mapboxsdk.maps.Projection) com.mapbox.mapboxsdk.maps.Projection.nativeMapView com.mapbox.mapboxsdk.maps.NativeMapView \l0x000e: INVOKE  (r3 I:int) = (r3 I:com.mapbox.mapboxsdk.maps.NativeMapView) com.mapbox.mapboxsdk.maps.NativeMapView.getHeight():int type: VIRTUAL \l0x0012: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0013: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IGET  (r1 I:int[]) = (r0 I:com.mapbox.mapboxsdk.maps.Projection) com.mapbox.mapboxsdk.maps.Projection.contentPadding int[] \l0x0018: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: AGET  (r1 I:?[int, float]) = (r1 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x001b: CAST  (r1 I:float) = (float) (r1 I:int) \l0x001c: IGET  (r2 I:com.mapbox.mapboxsdk.maps.NativeMapView) = (r0 I:com.mapbox.mapboxsdk.maps.Projection) com.mapbox.mapboxsdk.maps.Projection.nativeMapView com.mapbox.mapboxsdk.maps.NativeMapView \l0x001e: INVOKE  (r2 I:int) = (r2 I:com.mapbox.mapboxsdk.maps.NativeMapView) com.mapbox.mapboxsdk.maps.NativeMapView.getWidth():int type: VIRTUAL \l0x0022: IGET  (r3 I:int[]) = (r0 I:com.mapbox.mapboxsdk.maps.Projection) com.mapbox.mapboxsdk.maps.Projection.contentPadding int[] \l0x0024: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0025: AGET  (r3 I:?[int, float]) = (r3 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x0027: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x0028: CAST  (r2 I:float) = (float) (r2 I:int) \l0x0029: IGET  (r3 I:int[]) = (r0 I:com.mapbox.mapboxsdk.maps.Projection) com.mapbox.mapboxsdk.maps.Projection.contentPadding int[] \l0x002b: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x002c: AGET  (r3 I:?[int, float]) = (r3 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x002e: CAST  (r3 I:float) = (float) (r3 I:int) \l0x002f: IGET  (r4 I:com.mapbox.mapboxsdk.maps.NativeMapView) = (r0 I:com.mapbox.mapboxsdk.maps.Projection) com.mapbox.mapboxsdk.maps.Projection.nativeMapView com.mapbox.mapboxsdk.maps.NativeMapView \l0x0031: INVOKE  (r4 I:int) = (r4 I:com.mapbox.mapboxsdk.maps.NativeMapView) com.mapbox.mapboxsdk.maps.NativeMapView.getHeight():int type: VIRTUAL \l0x0035: IGET  (r5 I:int[]) = (r0 I:com.mapbox.mapboxsdk.maps.Projection) com.mapbox.mapboxsdk.maps.Projection.contentPadding int[] \l0x0037: CONST  (r6 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0038: AGET  (r5 I:?[int, float]) = (r5 I:?[int, float][]), (r6 I:?[int, short, byte, char]) \l0x003a: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x003b: CAST  (r4 I:float) = (float) (r4 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x003c|0x003c: NEW_INSTANCE  (r5 I:android.graphics.PointF) =  android.graphics.PointF \l0x003e: ARITH  (r6 I:float) = (r2 I:float) \- (r1 I:float) \l0x0040: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x0042: ARITH  (r6 I:float) = (r6 I:float) \/ (r7 I:float) \l0x0043: ARITH  (r6 I:float) = (r6 I:float) + (r1 I:float) \l0x0044: ARITH  (r8 I:float) = (r4 I:float) \- (r3 I:float) \l0x0046: ARITH  (r8 I:float) = (r8 I:float) \/ (r7 I:float) \l0x0047: ARITH  (r8 I:float) = (r8 I:float) + (r3 I:float) \l0x0048: INVOKE  (r5 I:android.graphics.PointF), (r6 I:float), (r8 I:float) android.graphics.PointF.\<init\>(float, float):void type: DIRECT \l0x004b: INVOKE  (r5 I:com.mapbox.mapboxsdk.geometry.LatLng) = \l  (r0 I:com.mapbox.mapboxsdk.maps.Projection)\l  (r5 I:android.graphics.PointF)\l com.mapbox.mapboxsdk.maps.Projection.fromScreenLocation(android.graphics.PointF):com.mapbox.mapboxsdk.geometry.LatLng type: VIRTUAL \l0x004f: NEW_INSTANCE  (r6 I:android.graphics.PointF) =  android.graphics.PointF \l0x0051: INVOKE  (r6 I:android.graphics.PointF), (r1 I:float), (r3 I:float) android.graphics.PointF.\<init\>(float, float):void type: DIRECT \l0x0054: INVOKE  (r8 I:com.mapbox.mapboxsdk.geometry.LatLng) = \l  (r0 I:com.mapbox.mapboxsdk.maps.Projection)\l  (r6 I:android.graphics.PointF)\l com.mapbox.mapboxsdk.maps.Projection.fromScreenLocation(android.graphics.PointF):com.mapbox.mapboxsdk.geometry.LatLng type: VIRTUAL \l0x0058: NEW_INSTANCE  (r6 I:android.graphics.PointF) =  android.graphics.PointF \l0x005a: INVOKE  (r6 I:android.graphics.PointF), (r2 I:float), (r3 I:float) android.graphics.PointF.\<init\>(float, float):void type: DIRECT \l0x005d: INVOKE  (r9 I:com.mapbox.mapboxsdk.geometry.LatLng) = \l  (r0 I:com.mapbox.mapboxsdk.maps.Projection)\l  (r6 I:android.graphics.PointF)\l com.mapbox.mapboxsdk.maps.Projection.fromScreenLocation(android.graphics.PointF):com.mapbox.mapboxsdk.geometry.LatLng type: VIRTUAL \l0x0061: NEW_INSTANCE  (r3 I:android.graphics.PointF) =  android.graphics.PointF \l0x0063: INVOKE  (r3 I:android.graphics.PointF), (r2 I:float), (r4 I:float) android.graphics.PointF.\<init\>(float, float):void type: DIRECT \l0x0066: INVOKE  (r11 I:com.mapbox.mapboxsdk.geometry.LatLng) = \l  (r0 I:com.mapbox.mapboxsdk.maps.Projection)\l  (r3 I:android.graphics.PointF)\l com.mapbox.mapboxsdk.maps.Projection.fromScreenLocation(android.graphics.PointF):com.mapbox.mapboxsdk.geometry.LatLng type: VIRTUAL \l0x006a: NEW_INSTANCE  (r2 I:android.graphics.PointF) =  android.graphics.PointF \l0x006c: INVOKE  (r2 I:android.graphics.PointF), (r1 I:float), (r4 I:float) android.graphics.PointF.\<init\>(float, float):void type: DIRECT \l0x006f: INVOKE  (r10 I:com.mapbox.mapboxsdk.geometry.LatLng) = \l  (r0 I:com.mapbox.mapboxsdk.maps.Projection)\l  (r2 I:android.graphics.PointF)\l com.mapbox.mapboxsdk.maps.Projection.fromScreenLocation(android.graphics.PointF):com.mapbox.mapboxsdk.geometry.LatLng type: VIRTUAL \l0x0073: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0075: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0078: INVOKE  (r1 I:java.util.List), (r9 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x007b: INVOKE  (r1 I:java.util.List), (r11 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x007e: INVOKE  (r1 I:java.util.List), (r10 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0081: INVOKE  (r1 I:java.util.List), (r8 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0084: CONST  (r2 I:?[long, double]) = \l  (\-4587338432941916160(0xc056800000000000, double:\-90.0) ?[long, double])\l \l0x0089: CONST  (r6 I:?[long, double]) = \l  (4636033603912859648(0x4056800000000000, double:90.0) ?[long, double])\l \l0x008e: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l0x0092: CONST  (r12 I:?[long, double]) = (0 ?[long, double]) \l0x0094: MOVE  (r14 I:?[long, double]) = (r2 I:?[long, double]) \l0x0095: MOVE  (r18 I:?[long, double]) = (r6 I:?[long, double]) \l0x0097: MOVE  (r2 I:?[long, double]) = (r12 I:?[long, double]) \l0x0098: MOVE  (r6 I:?[long, double]) = (r2 I:?[long, double]) \l0x0099: MOVE  (r16 I:?[long, double]) = (r6 I:?[long, double]) \l0x009b: MOVE  (r20 I:?[long, double]) = (r16 I:?[long, double]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x009d|0x009d: INVOKE  (r4 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x00a1|0x00a1: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0106 \l}"];
Node_7 [shape=record,label="{7\:\ 0x00a3|0x00a3: INVOKE  (r4 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x00a7: CHECK_CAST  (r4 I:com.mapbox.mapboxsdk.geometry.LatLng) = (com.mapbox.mapboxsdk.geometry.LatLng) (r4 I:?[OBJECT, ARRAY]) \l0x00a9: INVOKE  (r22 I:double) = \l  (r5 I:com.mapbox.mapboxsdk.geometry.LatLng)\l  (r4 I:com.mapbox.mapboxsdk.geometry.LatLng)\l com.mapbox.mapboxsdk.maps.Projection.bearing(com.mapbox.mapboxsdk.geometry.LatLng, com.mapbox.mapboxsdk.geometry.LatLng):double type: STATIC \l0x00ad: CMP_L  (r22 I:int) = (r22 I:double), (r12 I:double) \l}"];
Node_8 [shape=record,label="{8\:\ 0x00af|0x00af: IF  (r22 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:14:0x00cb \l}"];
Node_9 [shape=record,label="{9\:\ 0x00b1|0x00b1: INVOKE  (r12 I:double) = (r4 I:com.mapbox.mapboxsdk.geometry.LatLng) com.mapbox.mapboxsdk.geometry.LatLng.getLongitude():double type: VIRTUAL \l0x00b5: MOVE  (r24 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x00b7: INVOKE  (r0 I:double) = (r5 I:com.mapbox.mapboxsdk.geometry.LatLng) com.mapbox.mapboxsdk.geometry.LatLng.getLongitude():double type: VIRTUAL \l0x00bb: INVOKE  (r0 I:double) = (r12 I:double), (r0 I:double) com.mapbox.mapboxsdk.maps.Projection.getLongitudeSpan(double, double):double type: STATIC \l0x00bf: CMP_L  (r12 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_10 [shape=record,label="{10\:\ 0x00c1|0x00c1: IF  (r12 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x00c8 \l}"];
Node_11 [shape=record,label="{11\:\ 0x00c3|0x00c3: INVOKE  (r16 I:double) = (r4 I:com.mapbox.mapboxsdk.geometry.LatLng) com.mapbox.mapboxsdk.geometry.LatLng.getLongitude():double type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x00c8|0x00c8: MOVE  (r0 I:?[long, double]) = (r2 I:?[long, double]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x00c9|0x00c9: MOVE  (r2 I:?[long, double]) = (r0 I:?[long, double]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x00cb|0x00cb: MOVE  (r24 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x00cd: INVOKE  (r0 I:double) = (r5 I:com.mapbox.mapboxsdk.geometry.LatLng) com.mapbox.mapboxsdk.geometry.LatLng.getLongitude():double type: VIRTUAL \l0x00d1: INVOKE  (r12 I:double) = (r4 I:com.mapbox.mapboxsdk.geometry.LatLng) com.mapbox.mapboxsdk.geometry.LatLng.getLongitude():double type: VIRTUAL \l0x00d5: INVOKE  (r0 I:double) = (r0 I:double), (r12 I:double) com.mapbox.mapboxsdk.maps.Projection.getLongitudeSpan(double, double):double type: STATIC \l0x00d9: CMP_L  (r12 I:int) = (r0 I:double), (r6 I:double) \l}"];
Node_15 [shape=record,label="{15\:\ 0x00db|0x00db: IF  (r12 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:17:0x00e4 \l}"];
Node_16 [shape=record,label="{16\:\ 0x00dd|0x00dd: INVOKE  (r6 I:double) = (r4 I:com.mapbox.mapboxsdk.geometry.LatLng) com.mapbox.mapboxsdk.geometry.LatLng.getLongitude():double type: VIRTUAL \l0x00e1: MOVE  (r20 I:?[long, double]) = (r6 I:?[long, double]) \l0x00e3: MOVE  (r6 I:?[long, double]) = (r0 I:?[long, double]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x00e4|0x00e4: INVOKE  (r0 I:double) = (r4 I:com.mapbox.mapboxsdk.geometry.LatLng) com.mapbox.mapboxsdk.geometry.LatLng.getLatitude():double type: VIRTUAL \l0x00e8: CMP_G  (r0 I:int) = (r14 I:double), (r0 I:double) \l}"];
Node_18 [shape=record,label="{18\:\ 0x00ea|0x00ea: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:20:0x00f1 \l}"];
Node_19 [shape=record,label="{19\:\ 0x00ec|0x00ec: INVOKE  (r0 I:double) = (r4 I:com.mapbox.mapboxsdk.geometry.LatLng) com.mapbox.mapboxsdk.geometry.LatLng.getLatitude():double type: VIRTUAL \l0x00f0: MOVE  (r14 I:?[long, double]) = (r0 I:?[long, double]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x00f1|0x00f1: INVOKE  (r0 I:double) = (r4 I:com.mapbox.mapboxsdk.geometry.LatLng) com.mapbox.mapboxsdk.geometry.LatLng.getLatitude():double type: VIRTUAL \l0x00f5: CMP_L  (r0 I:int) = (r18 I:double), (r0 I:double) \l}"];
Node_21 [shape=record,label="{21\:\ 0x00f7|0x00f7: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:23:0x00ff \l}"];
Node_22 [shape=record,label="{22\:\ 0x00f9|0x00f9: INVOKE  (r0 I:double) = (r4 I:com.mapbox.mapboxsdk.geometry.LatLng) com.mapbox.mapboxsdk.geometry.LatLng.getLatitude():double type: VIRTUAL \l0x00fd: MOVE  (r18 I:?[long, double]) = (r0 I:?[long, double]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x00ff|0x00ff: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0101: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x0103: CONST  (r12 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0106|0x0106: NEW_INSTANCE  (r0 I:com.mapbox.mapboxsdk.geometry.VisibleRegion) =  com.mapbox.mapboxsdk.geometry.VisibleRegion \l0x0108: INVOKE  (r12 I:com.mapbox.mapboxsdk.geometry.LatLngBounds) = \l  (r14 I:double)\l  (r16 I:double)\l  (r18 I:double)\l  (r20 I:double)\l com.mapbox.mapboxsdk.geometry.LatLngBounds.from(double, double, double, double):com.mapbox.mapboxsdk.geometry.LatLngBounds type: STATIC \l0x010c: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x010d: INVOKE  \l  (r7 I:com.mapbox.mapboxsdk.geometry.VisibleRegion)\l  (r8 I:com.mapbox.mapboxsdk.geometry.LatLng)\l  (r9 I:com.mapbox.mapboxsdk.geometry.LatLng)\l  (r10 I:com.mapbox.mapboxsdk.geometry.LatLng)\l  (r11 I:com.mapbox.mapboxsdk.geometry.LatLng)\l  (r12 I:com.mapbox.mapboxsdk.geometry.LatLngBounds)\l com.mapbox.mapboxsdk.geometry.VisibleRegion.\<init\>(com.mapbox.mapboxsdk.geometry.LatLng, com.mapbox.mapboxsdk.geometry.LatLng, com.mapbox.mapboxsdk.geometry.LatLng, com.mapbox.mapboxsdk.geometry.LatLng, com.mapbox.mapboxsdk.geometry.LatLngBounds):void type: DIRECT \l}"];
Node_25 [shape=record,label="{25\:\ 0x0110|0x0110: RETURN  (r0 I:com.mapbox.mapboxsdk.geometry.VisibleRegion) \l}"];
MethodNode[shape=record,label="{public com.mapbox.mapboxsdk.geometry.VisibleRegion com.mapbox.mapboxsdk.maps.Projection.getVisibleRegion((r25 'this' I:com.mapbox.mapboxsdk.maps.Projection A[IMMUTABLE_TYPE, THIS]), (r26 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_24;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_5;
Node_24 -> Node_25;
}

