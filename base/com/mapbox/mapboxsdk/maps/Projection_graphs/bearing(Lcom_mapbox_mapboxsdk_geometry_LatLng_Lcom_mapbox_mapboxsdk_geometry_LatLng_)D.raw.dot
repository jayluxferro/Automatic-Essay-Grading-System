digraph "CFG forcom.mapbox.mapboxsdk.maps.Projection.bearing(Lcom\/mapbox\/mapboxsdk\/geometry\/LatLng;Lcom\/mapbox\/mapboxsdk\/geometry\/LatLng;)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:double) = (r10 I:com.mapbox.mapboxsdk.geometry.LatLng) com.mapbox.mapboxsdk.geometry.LatLng.getLongitude():double type: VIRTUAL \l0x0004: INVOKE  (r0 I:double) = (r0 I:double) com.mapbox.mapboxsdk.maps.Projection.degreesToRadians(double):double type: STATIC \l0x0008: INVOKE  (r2 I:double) = (r11 I:com.mapbox.mapboxsdk.geometry.LatLng) com.mapbox.mapboxsdk.geometry.LatLng.getLongitude():double type: VIRTUAL \l0x000c: INVOKE  (r2 I:double) = (r2 I:double) com.mapbox.mapboxsdk.maps.Projection.degreesToRadians(double):double type: STATIC \l0x0010: INVOKE  (r4 I:double) = (r10 I:com.mapbox.mapboxsdk.geometry.LatLng) com.mapbox.mapboxsdk.geometry.LatLng.getLatitude():double type: VIRTUAL \l0x0014: INVOKE  (r4 I:double) = (r4 I:double) com.mapbox.mapboxsdk.maps.Projection.degreesToRadians(double):double type: STATIC \l0x0018: INVOKE  (r10 I:double) = (r11 I:com.mapbox.mapboxsdk.geometry.LatLng) com.mapbox.mapboxsdk.geometry.LatLng.getLatitude():double type: VIRTUAL \l0x001c: INVOKE  (r10 I:double) = (r10 I:double) com.mapbox.mapboxsdk.maps.Projection.degreesToRadians(double):double type: STATIC \l0x0020: ARITH  (r2 I:double) = (r2 I:double) \- (r0 I:double) \l0x0021: INVOKE  (r0 I:double) = (r2 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0025: INVOKE  (r6 I:double) = (r10 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0029: ARITH  (r0 I:double) = (r0 I:double) * (r6 I:double) \l0x002b: INVOKE  (r6 I:double) = (r4 I:double) java.lang.Math.cos(double):double type: STATIC \l0x002f: INVOKE  (r8 I:double) = (r10 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0033: ARITH  (r6 I:double) = (r6 I:double) * (r8 I:double) \l0x0035: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0039: INVOKE  (r10 I:double) = (r10 I:double) java.lang.Math.cos(double):double type: STATIC \l0x003d: ARITH  (r4 I:double) = (r4 I:double) * (r10 I:double) \l0x003f: INVOKE  (r10 I:double) = (r2 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0043: ARITH  (r4 I:double) = (r4 I:double) * (r10 I:double) \l0x0045: ARITH  (r6 I:double) = (r6 I:double) \- (r4 I:double) \l0x0046: INVOKE  (r10 I:double) = (r0 I:double), (r6 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x004a: INVOKE  (r10 I:double) = (r10 I:double) com.mapbox.mapboxsdk.maps.Projection.radiansToDegrees(double):double type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x004e|0x004e: RETURN  (r10 I:double) \l}"];
MethodNode[shape=record,label="{static double com.mapbox.mapboxsdk.maps.Projection.bearing((r10 I:com.mapbox.mapboxsdk.geometry.LatLng A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:com.mapbox.mapboxsdk.geometry.LatLng A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

