digraph "CFG forcom.mapbox.mapboxsdk.maps.AnnotationManager.handleClickForShapeAnnotation(Lcom\/mapbox\/mapboxsdk\/annotations\/Annotation;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r3 I:?[OBJECT, ARRAY]) com.mapbox.mapboxsdk.annotations.Polygon \l0x0002: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapboxMap$OnPolygonClickListener) = (r2 I:com.mapbox.mapboxsdk.maps.AnnotationManager) com.mapbox.mapboxsdk.maps.AnnotationManager.onPolygonClickListener com.mapbox.mapboxsdk.maps.MapboxMap$OnPolygonClickListener \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0011 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapboxMap$OnPolygonClickListener) = (r2 I:com.mapbox.mapboxsdk.maps.AnnotationManager) com.mapbox.mapboxsdk.maps.AnnotationManager.onPolygonClickListener com.mapbox.mapboxsdk.maps.MapboxMap$OnPolygonClickListener \l0x000b: CHECK_CAST  (r3 I:com.mapbox.mapboxsdk.annotations.Polygon) = (com.mapbox.mapboxsdk.annotations.Polygon) (r3 I:?[OBJECT, ARRAY]) \l0x000d: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.maps.MapboxMap$OnPolygonClickListener)\l  (r3 I:com.mapbox.mapboxsdk.annotations.Polygon)\l com.mapbox.mapboxsdk.maps.MapboxMap.OnPolygonClickListener.onPolygonClick(com.mapbox.mapboxsdk.annotations.Polygon):void type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: RETURN  (r1 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: INSTANCE_OF  (r0 I:boolean) = (r3 I:?[OBJECT, ARRAY]) com.mapbox.mapboxsdk.annotations.Polyline \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0021 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|0x0015: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapboxMap$OnPolylineClickListener) = (r2 I:com.mapbox.mapboxsdk.maps.AnnotationManager) com.mapbox.mapboxsdk.maps.AnnotationManager.onPolylineClickListener com.mapbox.mapboxsdk.maps.MapboxMap$OnPolylineClickListener \l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0021 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapboxMap$OnPolylineClickListener) = (r2 I:com.mapbox.mapboxsdk.maps.AnnotationManager) com.mapbox.mapboxsdk.maps.AnnotationManager.onPolylineClickListener com.mapbox.mapboxsdk.maps.MapboxMap$OnPolylineClickListener \l0x001b: CHECK_CAST  (r3 I:com.mapbox.mapboxsdk.annotations.Polyline) = (com.mapbox.mapboxsdk.annotations.Polyline) (r3 I:?[OBJECT, ARRAY]) \l0x001d: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.maps.MapboxMap$OnPolylineClickListener)\l  (r3 I:com.mapbox.mapboxsdk.annotations.Polyline)\l com.mapbox.mapboxsdk.maps.MapboxMap.OnPolylineClickListener.onPolylineClick(com.mapbox.mapboxsdk.annotations.Polyline):void type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: RETURN  (r1 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|0x0021: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|0x0022: RETURN  (r3 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean com.mapbox.mapboxsdk.maps.AnnotationManager.handleClickForShapeAnnotation((r2 'this' I:com.mapbox.mapboxsdk.maps.AnnotationManager A[IMMUTABLE_TYPE, THIS]), (r3 I:com.mapbox.mapboxsdk.annotations.Annotation A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
}

