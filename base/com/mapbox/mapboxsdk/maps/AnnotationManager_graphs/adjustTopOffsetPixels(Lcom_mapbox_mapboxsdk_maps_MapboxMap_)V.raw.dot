digraph "CFG forcom.mapbox.mapboxsdk.maps.AnnotationManager.adjustTopOffsetPixels(Lcom\/mapbox\/mapboxsdk\/maps\/MapboxMap;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.support.v4.util.LongSparseArray\<com.mapbox.mapboxsdk.annotations.Annotation\>) = (r5 I:com.mapbox.mapboxsdk.maps.AnnotationManager) com.mapbox.mapboxsdk.maps.AnnotationManager.annotationsArray android.support.v4.util.LongSparseArray \l0x0002: INVOKE  (r0 I:int) = (r0 I:android.support.v4.util.LongSparseArray) android.support.v4.util.LongSparseArray.size():int type: VIRTUAL \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:6:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r2 I:android.support.v4.util.LongSparseArray\<com.mapbox.mapboxsdk.annotations.Annotation\>) = (r5 I:com.mapbox.mapboxsdk.maps.AnnotationManager) com.mapbox.mapboxsdk.maps.AnnotationManager.annotationsArray android.support.v4.util.LongSparseArray \l0x000b: CAST  (r3 I:long) = (long) (r1 I:int) \l0x000c: INVOKE  (r2 I:java.lang.Object) = (r2 I:android.support.v4.util.LongSparseArray), (r3 I:long) android.support.v4.util.LongSparseArray.get(long):java.lang.Object type: VIRTUAL \l0x0010: CHECK_CAST  (r2 I:com.mapbox.mapboxsdk.annotations.Annotation) = (com.mapbox.mapboxsdk.annotations.Annotation) (r2 I:?[OBJECT, ARRAY]) \l0x0012: INSTANCE_OF  (r3 I:boolean) = (r2 I:?[OBJECT, ARRAY]) com.mapbox.mapboxsdk.annotations.Marker \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0025 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: CHECK_CAST  (r2 I:com.mapbox.mapboxsdk.annotations.Marker) = (com.mapbox.mapboxsdk.annotations.Marker) (r2 I:?[OBJECT, ARRAY]) \l0x0018: IGET  (r3 I:com.mapbox.mapboxsdk.maps.IconManager) = (r5 I:com.mapbox.mapboxsdk.maps.AnnotationManager) com.mapbox.mapboxsdk.maps.AnnotationManager.iconManager com.mapbox.mapboxsdk.maps.IconManager \l0x001a: INVOKE  (r4 I:com.mapbox.mapboxsdk.annotations.Icon) = (r2 I:com.mapbox.mapboxsdk.annotations.Marker) com.mapbox.mapboxsdk.annotations.Marker.getIcon():com.mapbox.mapboxsdk.annotations.Icon type: VIRTUAL \l0x001e: INVOKE  (r3 I:int) = \l  (r3 I:com.mapbox.mapboxsdk.maps.IconManager)\l  (r4 I:com.mapbox.mapboxsdk.annotations.Icon)\l com.mapbox.mapboxsdk.maps.IconManager.getTopOffsetPixelsForIcon(com.mapbox.mapboxsdk.annotations.Icon):int type: VIRTUAL \l0x0022: INVOKE  (r2 I:com.mapbox.mapboxsdk.annotations.Marker), (r3 I:int) com.mapbox.mapboxsdk.annotations.Marker.setTopOffsetPixels(int):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: IGET  (r0 I:java.util.List\<com.mapbox.mapboxsdk.annotations.Marker\>) = (r5 I:com.mapbox.mapboxsdk.maps.AnnotationManager) com.mapbox.mapboxsdk.maps.AnnotationManager.selectedMarkers java.util.List \l0x002a: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|0x002e: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|0x0032: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0049 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0038: CHECK_CAST  (r1 I:com.mapbox.mapboxsdk.annotations.Marker) = (com.mapbox.mapboxsdk.annotations.Marker) (r1 I:?[OBJECT, ARRAY]) \l0x003a: INVOKE  (r2 I:boolean) = (r1 I:com.mapbox.mapboxsdk.annotations.Marker) com.mapbox.mapboxsdk.annotations.Marker.isInfoWindowShown():boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x003e|0x003e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002e \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: INVOKE  (r1 I:com.mapbox.mapboxsdk.annotations.Marker) com.mapbox.mapboxsdk.annotations.Marker.hideInfoWindow():void type: VIRTUAL \l0x0043: IGET  (r2 I:com.mapbox.mapboxsdk.maps.MapView) = (r5 I:com.mapbox.mapboxsdk.maps.AnnotationManager) com.mapbox.mapboxsdk.maps.AnnotationManager.mapView com.mapbox.mapboxsdk.maps.MapView \l0x0045: INVOKE  \l  (r1 I:com.mapbox.mapboxsdk.annotations.Marker)\l  (r6 I:com.mapbox.mapboxsdk.maps.MapboxMap)\l  (r2 I:com.mapbox.mapboxsdk.maps.MapView)\l com.mapbox.mapboxsdk.annotations.Marker.showInfoWindow(com.mapbox.mapboxsdk.maps.MapboxMap, com.mapbox.mapboxsdk.maps.MapView):com.mapbox.mapboxsdk.annotations.InfoWindow type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|0x0049: RETURN   \l}"];
MethodNode[shape=record,label="{void com.mapbox.mapboxsdk.maps.AnnotationManager.adjustTopOffsetPixels((r5 'this' I:com.mapbox.mapboxsdk.maps.AnnotationManager A[IMMUTABLE_TYPE, THIS]), (r6 I:com.mapbox.mapboxsdk.maps.MapboxMap A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_7;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_7;
}

