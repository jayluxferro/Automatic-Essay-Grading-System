digraph "CFG forcom.mapbox.mapboxsdk.maps.AnnotationManager.deselectMarkers()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<com.mapbox.mapboxsdk.annotations.Marker\>) = (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager) com.mapbox.mapboxsdk.maps.AnnotationManager.selectedMarkers java.util.List \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r0 I:java.util.List\<com.mapbox.mapboxsdk.annotations.Marker\>) = (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager) com.mapbox.mapboxsdk.maps.AnnotationManager.selectedMarkers java.util.List \l0x000b: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0033 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0019: CHECK_CAST  (r1 I:com.mapbox.mapboxsdk.annotations.Marker) = (com.mapbox.mapboxsdk.annotations.Marker) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: INVOKE  (r2 I:boolean) = (r1 I:com.mapbox.mapboxsdk.annotations.Marker) com.mapbox.mapboxsdk.annotations.Marker.isInfoWindowShown():boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0026 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: INVOKE  (r1 I:com.mapbox.mapboxsdk.annotations.Marker) com.mapbox.mapboxsdk.annotations.Marker.hideInfoWindow():void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: INSTANCE_OF  (r2 I:boolean) = (r1 I:?[OBJECT, ARRAY]) com.mapbox.mapboxsdk.annotations.MarkerView \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|0x002a: IGET  (r2 I:com.mapbox.mapboxsdk.annotations.MarkerViewManager) = (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager) com.mapbox.mapboxsdk.maps.AnnotationManager.markerViewManager com.mapbox.mapboxsdk.annotations.MarkerViewManager \l0x002c: CHECK_CAST  (r1 I:com.mapbox.mapboxsdk.annotations.MarkerView) = (com.mapbox.mapboxsdk.annotations.MarkerView) (r1 I:?[OBJECT, ARRAY]) \l0x002e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: INVOKE  \l  (r2 I:com.mapbox.mapboxsdk.annotations.MarkerViewManager)\l  (r1 I:com.mapbox.mapboxsdk.annotations.MarkerView)\l  (r3 I:boolean)\l com.mapbox.mapboxsdk.annotations.MarkerViewManager.deselect(com.mapbox.mapboxsdk.annotations.MarkerView, boolean):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: IGET  (r0 I:java.util.List\<com.mapbox.mapboxsdk.annotations.Marker\>) = (r4 I:com.mapbox.mapboxsdk.maps.AnnotationManager) com.mapbox.mapboxsdk.maps.AnnotationManager.selectedMarkers java.util.List \l0x0035: INVOKE  (r0 I:java.util.List) java.util.List.clear():void type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|0x0038: RETURN   \l}"];
MethodNode[shape=record,label="{void com.mapbox.mapboxsdk.maps.AnnotationManager.deselectMarkers((r4 'this' I:com.mapbox.mapboxsdk.maps.AnnotationManager A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_4;
Node_7 -> Node_8[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_4;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_4;
Node_14 -> Node_15;
}

