digraph "CFG forcom.mapbox.mapboxsdk.maps.MapGestureDetector.ShoveGestureListener.onShove(Lcom\/mapbox\/android\/gestures\/ShoveGestureDetector;FF)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.mapbox.mapboxsdk.maps.MapGestureDetector.access$900(r9.this$0).onCameraMoveStarted(1)\ldouble r11 = com.mapbox.mapboxsdk.utils.MathUtils.clamp(com.mapbox.mapboxsdk.maps.MapGestureDetector.access$400(r9.this$0).getTilt() \- ((double) (r11 * 0.1f)), 0.0d, 60.0d)\lcom.mapbox.mapboxsdk.maps.MapGestureDetector.access$400(r9.this$0).setTilt(java.lang.Double.valueOf(r11))\lr9.this$0.notifyOnShoveListeners(r10)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0036|RETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.mapboxsdk.maps.MapGestureDetector.ShoveGestureListener.onShove((r9v0 'this' com.mapbox.mapboxsdk.maps.MapGestureDetector$ShoveGestureListener A[IMMUTABLE_TYPE, THIS]), (r10v0 com.mapbox.android.gestures.ShoveGestureDetector A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

