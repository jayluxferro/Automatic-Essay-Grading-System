digraph "CFG forcom.mapbox.mapboxsdk.maps.Transform.5.onMapChanged(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IGET  (r2 I:com.mapbox.mapboxsdk.maps.Transform) = (r1 I:com.mapbox.mapboxsdk.maps.Transform$5) com.mapbox.mapboxsdk.maps.Transform.5.this$0 com.mapbox.mapboxsdk.maps.Transform \l0x0005: INVOKE  (r2 I:com.mapbox.mapboxsdk.maps.NativeMapView) = (r2 I:com.mapbox.mapboxsdk.maps.Transform) com.mapbox.mapboxsdk.maps.Transform.access$200(com.mapbox.mapboxsdk.maps.Transform):com.mapbox.mapboxsdk.maps.NativeMapView type: STATIC \l0x0009: INVOKE  \l  (r2 I:com.mapbox.mapboxsdk.maps.NativeMapView)\l  (r1 I:com.mapbox.mapboxsdk.maps.MapView$OnMapChangedListener)\l com.mapbox.mapboxsdk.maps.NativeMapView.removeOnMapChangedListener(com.mapbox.mapboxsdk.maps.MapView$OnMapChangedListener):void type: VIRTUAL \l0x000c: IGET  (r2 I:com.mapbox.mapboxsdk.maps.Transform) = (r1 I:com.mapbox.mapboxsdk.maps.Transform$5) com.mapbox.mapboxsdk.maps.Transform.5.this$0 com.mapbox.mapboxsdk.maps.Transform \l0x000e: INVOKE  (r2 I:com.mapbox.mapboxsdk.maps.CameraChangeDispatcher) = (r2 I:com.mapbox.mapboxsdk.maps.Transform) com.mapbox.mapboxsdk.maps.Transform.access$100(com.mapbox.mapboxsdk.maps.Transform):com.mapbox.mapboxsdk.maps.CameraChangeDispatcher type: STATIC \l0x0012: INVOKE  (r2 I:com.mapbox.mapboxsdk.maps.CameraChangeDispatcher) com.mapbox.mapboxsdk.maps.CameraChangeDispatcher.onCameraIdle():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.maps.Transform.5.onMapChanged((r1 'this' I:com.mapbox.mapboxsdk.maps.Transform$5 A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

