digraph "CFG forcom.mapbox.mapboxsdk.maps.Transform.moveBy(DDJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0002: CMP_L  (r0 I:int) = (r14 I:long), (r0 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:com.mapbox.mapboxsdk.maps.NativeMapView) = (r9 I:com.mapbox.mapboxsdk.maps.Transform) com.mapbox.mapboxsdk.maps.Transform.mapView com.mapbox.mapboxsdk.maps.NativeMapView \l0x0008: NEW_INSTANCE  (r1 I:com.mapbox.mapboxsdk.maps.Transform$5) =  com.mapbox.mapboxsdk.maps.Transform$5 \l0x000a: INVOKE  \l  (r1 I:com.mapbox.mapboxsdk.maps.Transform$5)\l  (r9 I:com.mapbox.mapboxsdk.maps.Transform)\l com.mapbox.mapboxsdk.maps.Transform.5.\<init\>(com.mapbox.mapboxsdk.maps.Transform):void type: DIRECT \l0x000d: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.maps.NativeMapView)\l  (r1 I:com.mapbox.mapboxsdk.maps.MapView$OnMapChangedListener)\l com.mapbox.mapboxsdk.maps.NativeMapView.addOnMapChangedListener(com.mapbox.mapboxsdk.maps.MapView$OnMapChangedListener):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IGET  (r2 I:com.mapbox.mapboxsdk.maps.NativeMapView) = (r9 I:com.mapbox.mapboxsdk.maps.Transform) com.mapbox.mapboxsdk.maps.Transform.mapView com.mapbox.mapboxsdk.maps.NativeMapView \l0x0012: MOVE  (r3 I:?[long, double]) = (r10 I:?[long, double]) \l0x0013: MOVE  (r5 I:?[long, double]) = (r12 I:?[long, double]) \l0x0014: MOVE  (r7 I:?[long, double]) = (r14 I:?[long, double]) \l0x0015: INVOKE  \l  (r2 I:com.mapbox.mapboxsdk.maps.NativeMapView)\l  (r3 I:double)\l  (r5 I:double)\l  (r7 I:long)\l com.mapbox.mapboxsdk.maps.NativeMapView.moveBy(double, double, long):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{void com.mapbox.mapboxsdk.maps.Transform.moveBy((r9 'this' I:com.mapbox.mapboxsdk.maps.Transform A[IMMUTABLE_TYPE, THIS]), (r10 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

