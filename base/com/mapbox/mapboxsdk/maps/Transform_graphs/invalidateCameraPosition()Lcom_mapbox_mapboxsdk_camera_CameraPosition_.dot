digraph "CFG forcom.mapbox.mapboxsdk.maps.Transform.invalidateCameraPosition()Lcom\/mapbox\/mapboxsdk\/camera\/CameraPosition;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.mapView == null) goto L_0x0031\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|com.mapbox.mapboxsdk.camera.CameraPosition r0 = r2.mapView.getCameraPosition()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r2.cameraPosition == null) goto L_0x001b\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e}"];
Node_5 [shape=record,label="{5\:\ 0x0014|if (r2.cameraPosition.equals(r0) != false) goto L_0x001b\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|r2.cameraChangeDispatcher.onCameraMove()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b}"];
Node_8 [shape=record,label="{8\:\ 0x001f|if (isComponentUpdateRequired(r0) == false) goto L_0x0024\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|updateCameraPosition(r0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|r2.cameraPosition = r0\l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|if (r2.onCameraChangeListener == null) goto L_0x0031\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|r2.onCameraChangeListener.onCameraChange(r2.cameraPosition)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0031}"];
Node_14 [shape=record,label="{14\:\ 0x0033|RETURN\l|return r2.cameraPosition\l}"];
MethodNode[shape=record,label="{com.mapbox.mapboxsdk.camera.CameraPosition com.mapbox.mapboxsdk.maps.Transform.invalidateCameraPosition((r2v0 'this' com.mapbox.mapboxsdk.maps.Transform A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.UiThread, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

