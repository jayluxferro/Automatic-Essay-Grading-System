digraph "CFG forcom.mapbox.mapboxsdk.maps.MapView.onSizeChanged(IIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r3 I:boolean) = (r0 I:com.mapbox.mapboxsdk.maps.MapView) com.mapbox.mapboxsdk.maps.MapView.destroyed boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: INVOKE  (r3 I:boolean) = (r0 I:com.mapbox.mapboxsdk.maps.MapView) com.mapbox.mapboxsdk.maps.MapView.isInEditMode():boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0016 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: INVOKE  (r3 I:boolean) = (r0 I:com.mapbox.mapboxsdk.maps.MapView) com.mapbox.mapboxsdk.maps.MapView.isMapInitialized():boolean type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0016 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IGET  (r3 I:com.mapbox.mapboxsdk.maps.NativeMapView) = (r0 I:com.mapbox.mapboxsdk.maps.MapView) com.mapbox.mapboxsdk.maps.MapView.nativeMapView com.mapbox.mapboxsdk.maps.NativeMapView \l0x0013: INVOKE  \l  (r3 I:com.mapbox.mapboxsdk.maps.NativeMapView)\l  (r1 I:int)\l  (r2 I:int)\l com.mapbox.mapboxsdk.maps.NativeMapView.resizeView(int, int):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: RETURN   \l}"];
MethodNode[shape=record,label="{protected void com.mapbox.mapboxsdk.maps.MapView.onSizeChanged((r0 'this' I:com.mapbox.mapboxsdk.maps.MapView A[IMMUTABLE_TYPE, THIS]), (r1 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
}

