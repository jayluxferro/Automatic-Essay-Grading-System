digraph "CFG forcom.mapbox.mapboxsdk.maps.MapView.onDestroy()V" {
subgraph cluster_Region_1367309376 {
label = "R(3:0|(1:4)|(1:(1:7)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.destroyed = true\lr1.onMapChangedListeners.clear()\lr1.mapCallback.clearOnMapReadyCallbacks()\l}"];
subgraph cluster_IfRegion_945088794 {
label = "IF [B:1:0x000f, B:3:0x0013] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000f|ADDED_TO_REGION\l|if (r1.nativeMapView != null) goto L_0x0011\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|ADDED_TO_REGION\l|if (r1.hasSurface == true) goto L_0x0015\l}"];
subgraph cluster_Region_574545195 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0015|r1.nativeMapView.destroy()\lr1.nativeMapView = null\l}"];
}
}
subgraph cluster_Region_119951886 {
label = "R(1:(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_756134870 {
label = "IF [B:6:0x001f] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001f|if (r1.mapRenderer != null) goto L_0x0021\l}"];
subgraph cluster_Region_840074071 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0021|r1.mapRenderer.onDestroy()\l}"];
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0011}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001d}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.maps.MapView.onDestroy((r1v0 'this' com.mapbox.mapboxsdk.maps.MapView A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.support.annotation.UiThread, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_2 -> Node_3;
Node_5 -> Node_6;
}

