digraph "CFG forcom.mapbox.mapboxsdk.maps.MapView.initialize(Landroid\/content\/Context;Lcom\/mapbox\/mapboxsdk\/maps\/MapboxMapOptions;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (isInEditMode() == false) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|setForeground(new android.graphics.drawable.ColorDrawable(r4.getForegroundLoadColor()))\laddOnMapChangedListener(new com.mapbox.mapboxsdk.maps.MapView.InitialRenderCallback(r2))\lr2.mapboxMapOptions = r4\landroid.view.View r0 = android.view.LayoutInflater.from(r3).inflate(com.mapbox.mapboxsdk.C1080R.layout.mapbox_mapview_internal, r2)\lr2.compassView = (com.mapbox.mapboxsdk.maps.widgets.CompassView) r0.findViewById(com.mapbox.mapboxsdk.C1080R.C1082id.compassView)\lr2.attrView = (android.widget.ImageView) r0.findViewById(com.mapbox.mapboxsdk.C1080R.C1082id.attributionView)\lr2.logoView = (android.widget.ImageView) r0.findViewById(com.mapbox.mapboxsdk.C1080R.C1082id.logoView)\lsetContentDescription(r3.getString(com.mapbox.mapboxsdk.C1080R.string.mapbox_mapActionDescription))\lsetWillNotDraw(false)\lgetViewTreeObserver().addOnGlobalLayoutListener(new com.mapbox.mapboxsdk.maps.MapView.MapViewLayoutListener(r2, r4))\l}"];
Node_4 [shape=record,label="{4\:\ 0x005e|RETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void com.mapbox.mapboxsdk.maps.MapView.initialize((r2v0 'this' com.mapbox.mapboxsdk.maps.MapView A[IMMUTABLE_TYPE, THIS]), (r3v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 com.mapbox.mapboxsdk.maps.MapboxMapOptions A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.UiThread, \{\}], Annotation[BUILD, android.support.annotation.CallSuper, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

