digraph "CFG forcom.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.calculateScale(DZ)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = \l  (4652007308841189376(0x408f400000000000, double:1000.0) ?[long, double])\l \l0x0005: ARITH  (r3 I:double) = (r3 I:double) \/ (r0 I:double) \l0x0006: CONST  (r0 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0008: ARITH  (r3 I:double) = (r3 I:double) + (r0 I:double) \l0x0009: INVOKE  (r3 I:double) = (r3 I:double) java.lang.Math.log(double):double type: STATIC \l0x000d: CAST  (r3 I:float) = (float) (r3 I:double) \l0x000e: CAST  (r3 I:double) = (double) (r3 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: NEG  (r3 I:double) = (r3 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: RETURN  (r3 I:double) \l}"];
MethodNode[shape=record,label="{private double com.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.calculateScale((r2 'this' I:com.mapbox.mapboxsdk.maps.MapGestureDetector$ScaleGestureListener A[IMMUTABLE_TYPE, THIS]), (r3 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

