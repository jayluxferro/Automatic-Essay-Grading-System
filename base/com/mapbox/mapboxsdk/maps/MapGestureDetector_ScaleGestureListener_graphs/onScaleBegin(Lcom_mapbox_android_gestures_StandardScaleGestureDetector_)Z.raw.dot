digraph "CFG forcom.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.onScaleBegin(Lcom\/mapbox\/android\/gestures\/StandardScaleGestureDetector;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$ScaleGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0002: INVOKE  (r0 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$600(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.UiSettings type: STATIC \l0x0006: INVOKE  (r0 I:boolean) = (r0 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.isZoomGesturesEnabled():boolean type: VIRTUAL \l0x000a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$ScaleGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0010: INVOKE  (r0 I:com.mapbox.mapboxsdk.maps.Transform) = (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$400(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.Transform type: STATIC \l0x0014: INVOKE  (r0 I:com.mapbox.mapboxsdk.maps.Transform) com.mapbox.mapboxsdk.maps.Transform.cancelTransitions():void type: VIRTUAL \l0x0017: INVOKE  (r0 I:int) = \l  (r5 I:com.mapbox.android.gestures.StandardScaleGestureDetector)\l com.mapbox.android.gestures.StandardScaleGestureDetector.getPointersCount():int type: VIRTUAL \l0x001b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0020 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: IPUT  \l  (r0 I:boolean)\l  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$ScaleGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.quickZoom boolean \l0x0023: IGET  (r0 I:boolean) = \l  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$ScaleGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.quickZoom boolean \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0039 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$ScaleGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0029: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l  (r1 I:boolean)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.access$802(com.mapbox.mapboxsdk.maps.MapGestureDetector, boolean):boolean type: STATIC \l0x002c: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$ScaleGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x002e: INVOKE  (r0 I:com.mapbox.android.gestures.AndroidGesturesManager) = (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1100(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.android.gestures.AndroidGesturesManager type: STATIC \l0x0032: INVOKE  (r0 I:com.mapbox.android.gestures.MoveGestureDetector) = (r0 I:com.mapbox.android.gestures.AndroidGesturesManager) com.mapbox.android.gestures.AndroidGesturesManager.getMoveGestureDetector():com.mapbox.android.gestures.MoveGestureDetector type: VIRTUAL \l0x0036: INVOKE  \l  (r0 I:com.mapbox.android.gestures.MoveGestureDetector)\l  (r1 I:boolean)\l com.mapbox.android.gestures.MoveGestureDetector.setEnabled(boolean):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|0x0039: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$ScaleGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x003b: INVOKE  (r0 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$600(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.mapboxsdk.maps.UiSettings type: STATIC \l0x003f: INVOKE  (r0 I:boolean) = (r0 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.isIncreaseRotateThresholdWhenScaling():boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0043|0x0043: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0055 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0045|0x0045: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$ScaleGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0047: INVOKE  (r0 I:com.mapbox.android.gestures.AndroidGesturesManager) = (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1100(com.mapbox.mapboxsdk.maps.MapGestureDetector):com.mapbox.android.gestures.AndroidGesturesManager type: STATIC \l0x004b: INVOKE  (r0 I:com.mapbox.android.gestures.RotateGestureDetector) = (r0 I:com.mapbox.android.gestures.AndroidGesturesManager) com.mapbox.android.gestures.AndroidGesturesManager.getRotateGestureDetector():com.mapbox.android.gestures.RotateGestureDetector type: VIRTUAL \l0x004f: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1109472051(0x42213333, float:40.3) ?[int, float, short, byte, char])\l \l0x0052: INVOKE  \l  (r0 I:com.mapbox.android.gestures.RotateGestureDetector)\l  (r1 I:float)\l com.mapbox.android.gestures.RotateGestureDetector.setAngleThreshold(float):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0055|0x0055: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$ScaleGestureListener)\l  (r5 I:com.mapbox.android.gestures.StandardScaleGestureDetector)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.setScaleFocalPoint(com.mapbox.android.gestures.StandardScaleGestureDetector):void type: DIRECT \l0x0058: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$ScaleGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x005a: CONST_STR  (r1 I:java.lang.String) =  \"Pinch\" \l0x005c: IGET  (r3 I:android.graphics.PointF) = \l  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$ScaleGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.scaleFocalPoint android.graphics.PointF \l0x005e: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l  (r1 I:java.lang.String)\l  (r3 I:android.graphics.PointF)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.access$700(com.mapbox.mapboxsdk.maps.MapGestureDetector, java.lang.String, android.graphics.PointF):void type: STATIC \l0x0061: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector) = \l  (r4 I:com.mapbox.mapboxsdk.maps.MapGestureDetector$ScaleGestureListener)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.this$0 com.mapbox.mapboxsdk.maps.MapGestureDetector \l0x0063: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.maps.MapGestureDetector)\l  (r5 I:com.mapbox.android.gestures.StandardScaleGestureDetector)\l com.mapbox.mapboxsdk.maps.MapGestureDetector.notifyOnScaleBeginListeners(com.mapbox.android.gestures.StandardScaleGestureDetector):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0066|0x0066: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.onScaleBegin((r4 'this' I:com.mapbox.mapboxsdk.maps.MapGestureDetector$ScaleGestureListener A[IMMUTABLE_TYPE, THIS]), (r5 I:com.mapbox.android.gestures.StandardScaleGestureDetector A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

