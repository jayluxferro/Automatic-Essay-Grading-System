digraph "CFG forcom.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.onScaleEnd(Lcom\/mapbox\/android\/gestures\/StandardScaleGestureDetector;FF)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.mapbox.mapboxsdk.maps.MapGestureDetector.access$900(r8.this$0).onCameraIdle()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r8.quickZoom == false) goto L_0x001b\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1100(r8.this$0).getMoveGestureDetector().setEnabled(true)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b}"];
Node_4 [shape=record,label="{4\:\ 0x0025|if (com.mapbox.mapboxsdk.maps.MapGestureDetector.access$600(r8.this$0).isIncreaseRotateThresholdWhenScaling() == false) goto L_0x0037\l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1100(r8.this$0).getRotateGestureDetector().setAngleThreshold(15.3f)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0037|r8.this$0.notifyOnScaleEndListeners(r9)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0046|if (com.mapbox.mapboxsdk.maps.MapGestureDetector.access$600(r8.this$0).isScaleVelocityAnimationEnabled() != false) goto L_0x0049\l}"];
Node_8 [shape=record,label="{8\:\ 0x0048|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ 0x0049|float r10 = java.lang.Math.abs(r10) + java.lang.Math.abs(r11)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0056|if ((r10 \> r8.minimumVelocity ? 1 : (r10 == r8.minimumVelocity ? 0 : \-1)) \<= 0) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x0058|double r3 = calculateScale((double) r10, r9.isScalingOut())\ldouble r1 = com.mapbox.mapboxsdk.maps.MapGestureDetector.access$400(r8.this$0).getRawZoom()\llong r6 = (long) ((java.lang.Math.abs(r3) * 1000.0d) \/ 4.0d)\lcom.mapbox.mapboxsdk.maps.MapGestureDetector.access$1202(r8.this$0, com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1300(r8.this$0, r1, r3, r8.scaleFocalPoint, r6))\lcom.mapbox.mapboxsdk.maps.MapGestureDetector.access$1400(r8.this$0, com.mapbox.mapboxsdk.maps.MapGestureDetector.access$1200(r8.this$0))\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.onScaleEnd((r8v0 'this' com.mapbox.mapboxsdk.maps.MapGestureDetector$ScaleGestureListener A[IMMUTABLE_TYPE, THIS]), (r9v0 com.mapbox.android.gestures.StandardScaleGestureDetector A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
}

