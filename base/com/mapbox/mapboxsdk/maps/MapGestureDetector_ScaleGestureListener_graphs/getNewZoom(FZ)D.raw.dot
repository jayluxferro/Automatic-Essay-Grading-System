digraph "CFG forcom.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.getNewZoom(FZ)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CAST  (r0 I:double) = (double) (r9 I:float) \l0x0001: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.log(double):double type: STATIC \l0x0005: CONST  (r2 I:?[long, double]) = \l  (4609753056924675352(0x3ff921fb54442d18, double:1.5707963267948966) ?[long, double])\l \l0x000a: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.log(double):double type: STATIC \l0x000e: ARITH  (r0 I:double) = (r0 I:double) \/ (r2 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: CONST  (r9 I:?[long, double]) = (0 ?[long, double]) \l0x0013: CMP_G  (r9 I:int) = (r0 I:double), (r9 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r9 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:5:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: INVOKE  (r2 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x001e: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x0020: CONST  (r6 I:?[long, double]) = \l  (4594572340058128384(0x3fc3333340000000, double:0.15000000596046448) ?[long, double])\l \l0x0025: INVOKE  (r0 I:double) = (r2 I:double), (r4 I:double), (r6 I:double) com.mapbox.mapboxsdk.utils.MathUtils.clamp(double, double, double):double type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002c \l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|0x002b: NEG  (r0 I:double) = (r0 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: RETURN  (r0 I:double) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: RETURN  (r0 I:double) \l}"];
MethodNode[shape=record,label="{private double com.mapbox.mapboxsdk.maps.MapGestureDetector.ScaleGestureListener.getNewZoom((r8 'this' I:com.mapbox.mapboxsdk.maps.MapGestureDetector$ScaleGestureListener A[IMMUTABLE_TYPE, THIS]), (r9 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
}

