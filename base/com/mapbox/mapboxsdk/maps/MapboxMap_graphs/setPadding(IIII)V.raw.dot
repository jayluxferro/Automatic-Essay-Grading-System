digraph "CFG forcom.mapbox.mapboxsdk.maps.MapboxMap.setPadding(IIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.mapbox.mapboxsdk.maps.Projection) = (r3 I:com.mapbox.mapboxsdk.maps.MapboxMap) com.mapbox.mapboxsdk.maps.MapboxMap.projection com.mapbox.mapboxsdk.maps.Projection \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0003: NEW_ARRAY  (r1 I:int[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0005: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: APUT  \l  (r1 I:?[int, float][])\l  (r2 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x0008: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0009: APUT  \l  (r1 I:?[int, float][])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:?[int, float])\l \l0x000b: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000c: APUT  \l  (r1 I:?[int, float][])\l  (r4 I:?[int, short, byte, char])\l  (r6 I:?[int, float])\l \l0x000e: CONST  (r4 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x000f: APUT  \l  (r1 I:?[int, float][])\l  (r4 I:?[int, short, byte, char])\l  (r7 I:?[int, float])\l \l0x0011: INVOKE  (r0 I:com.mapbox.mapboxsdk.maps.Projection), (r1 I:int[]) com.mapbox.mapboxsdk.maps.Projection.setContentPadding(int[]):void type: VIRTUAL \l0x0014: IGET  (r4 I:com.mapbox.mapboxsdk.maps.UiSettings) = (r3 I:com.mapbox.mapboxsdk.maps.MapboxMap) com.mapbox.mapboxsdk.maps.MapboxMap.uiSettings com.mapbox.mapboxsdk.maps.UiSettings \l0x0016: INVOKE  (r4 I:com.mapbox.mapboxsdk.maps.UiSettings) com.mapbox.mapboxsdk.maps.UiSettings.invalidate():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.maps.MapboxMap.setPadding((r3 'this' I:com.mapbox.mapboxsdk.maps.MapboxMap A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

