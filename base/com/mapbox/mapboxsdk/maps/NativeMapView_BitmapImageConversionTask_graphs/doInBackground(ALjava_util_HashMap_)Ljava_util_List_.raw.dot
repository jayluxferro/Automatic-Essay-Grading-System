digraph "CFG forcom.mapbox.mapboxsdk.maps.NativeMapView.BitmapImageConversionTask.doInBackground([Ljava\/util\/HashMap;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: AGET  (r13 I:?[OBJECT, ARRAY]) = \l  (r13 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l \l0x0003: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0005: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0008: INVOKE  (r13 I:java.util.Set) = (r13 I:java.util.HashMap) java.util.HashMap.entrySet():java.util.Set type: VIRTUAL \l0x000c: INVOKE  (r13 I:java.util.Iterator) = (r13 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: INVOKE  (r2 I:boolean) = (r13 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0063 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: INVOKE  (r2 I:java.lang.Object) = (r13 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x001a: CHECK_CAST  (r2 I:java.util.Map$Entry) = (java.util.Map$Entry) (r2 I:?[OBJECT, ARRAY]) \l0x001c: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x0020: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0021: CHECK_CAST  (r7 I:java.lang.String) = (java.lang.String) (r7 I:?[OBJECT, ARRAY]) \l0x0023: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x0027: CHECK_CAST  (r2 I:android.graphics.Bitmap) = (android.graphics.Bitmap) (r2 I:?[OBJECT, ARRAY]) \l0x0029: INVOKE  (r3 I:android.graphics.Bitmap$Config) = (r2 I:android.graphics.Bitmap) android.graphics.Bitmap.getConfig():android.graphics.Bitmap$Config type: VIRTUAL \l0x002d: SGET  (r4 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config \l}"];
Node_4 [shape=record,label="{4\:\ 0x002f|0x002f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0037 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|0x0031: SGET  (r3 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config \l0x0033: INVOKE  (r2 I:android.graphics.Bitmap) = \l  (r2 I:android.graphics.Bitmap)\l  (r3 I:android.graphics.Bitmap$Config)\l  (r0 I:boolean)\l android.graphics.Bitmap.copy(android.graphics.Bitmap$Config, boolean):android.graphics.Bitmap type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0037|0x0037: INVOKE  (r3 I:int) = (r2 I:android.graphics.Bitmap) android.graphics.Bitmap.getByteCount():int type: VIRTUAL \l0x003b: INVOKE  (r3 I:java.nio.ByteBuffer) = (r3 I:int) java.nio.ByteBuffer.allocate(int):java.nio.ByteBuffer type: STATIC \l0x003f: INVOKE  (r2 I:android.graphics.Bitmap), (r3 I:java.nio.Buffer) android.graphics.Bitmap.copyPixelsToBuffer(java.nio.Buffer):void type: VIRTUAL \l0x0042: INVOKE  (r4 I:int) = (r2 I:android.graphics.Bitmap) android.graphics.Bitmap.getDensity():int type: VIRTUAL \l0x0046: CAST  (r4 I:float) = (float) (r4 I:int) \l0x0047: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (1126170624(0x43200000, float:160.0) ?[int, float, short, byte, char])\l \l0x0049: ARITH  (r6 I:float) = (r4 I:float) \/ (r5 I:float) \l0x004b: NEW_INSTANCE  (r11 I:com.mapbox.mapboxsdk.maps.Image) =  com.mapbox.mapboxsdk.maps.Image \l0x004d: INVOKE  (r5 I:byte[]) = (r3 I:java.nio.ByteBuffer) java.nio.ByteBuffer.array():byte[] type: VIRTUAL \l0x0051: INVOKE  (r8 I:int) = (r2 I:android.graphics.Bitmap) android.graphics.Bitmap.getWidth():int type: VIRTUAL \l0x0055: INVOKE  (r9 I:int) = (r2 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL \l0x0059: IGET  (r10 I:boolean) = \l  (r12 I:com.mapbox.mapboxsdk.maps.NativeMapView$BitmapImageConversionTask)\l com.mapbox.mapboxsdk.maps.NativeMapView.BitmapImageConversionTask.sdf boolean \l0x005b: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x005c: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.maps.Image)\l  (r5 I:byte[])\l  (r6 I:float)\l  (r7 I:java.lang.String)\l  (r8 I:int)\l  (r9 I:int)\l  (r10 I:boolean)\l com.mapbox.mapboxsdk.maps.Image.\<init\>(byte[], float, java.lang.String, int, int, boolean):void type: DIRECT \l0x005f: INVOKE  (r1 I:java.util.List), (r11 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0063|0x0063: RETURN  (r1 I:java.util.List\<com.mapbox.mapboxsdk.maps.Image\>) \l}"];
MethodNode[shape=record,label="{protected java.util.List\<com.mapbox.mapboxsdk.maps.Image\> com.mapbox.mapboxsdk.maps.NativeMapView.BitmapImageConversionTask.doInBackground((r12 'this' I:com.mapbox.mapboxsdk.maps.NativeMapView$BitmapImageConversionTask A[IMMUTABLE_TYPE, THIS]), (r13 I:java.util.HashMap\<java.lang.String, android.graphics.Bitmap\>[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([, Ljava\/util\/HashMap\<, Ljava\/lang\/String;, Landroid\/graphics\/Bitmap;, \>;), Ljava\/util\/List\<, Lcom\/mapbox\/mapboxsdk\/maps\/Image;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

