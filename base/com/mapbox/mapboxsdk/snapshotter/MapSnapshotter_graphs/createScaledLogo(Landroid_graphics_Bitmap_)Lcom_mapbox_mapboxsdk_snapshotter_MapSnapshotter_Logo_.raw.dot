digraph "CFG forcom.mapbox.mapboxsdk.snapshotter.MapSnapshotter.createScaledLogo(Landroid\/graphics\/Bitmap;)Lcom\/mapbox\/mapboxsdk\/snapshotter\/MapSnapshotter$Logo;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.content.Context) = (r11 I:com.mapbox.mapboxsdk.snapshotter.MapSnapshotter) com.mapbox.mapboxsdk.snapshotter.MapSnapshotter.context android.content.Context \l0x0002: INVOKE  (r0 I:android.content.res.Resources) = (r0 I:android.content.Context) android.content.Context.getResources():android.content.res.Resources type: VIRTUAL \l0x0006: SGET  (r1 I:int) =  com.mapbox.mapboxsdk.R.drawable.mapbox_logo_icon int \l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: INVOKE  (r3 I:android.graphics.Bitmap) = \l  (r0 I:android.content.res.Resources)\l  (r1 I:int)\l  (r2 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.decodeResource(android.content.res.Resources, int, android.graphics.BitmapFactory$Options):android.graphics.Bitmap type: STATIC \l0x000d: INVOKE  (r12 I:float) = \l  (r11 I:com.mapbox.mapboxsdk.snapshotter.MapSnapshotter)\l  (r12 I:android.graphics.Bitmap)\l  (r3 I:android.graphics.Bitmap)\l com.mapbox.mapboxsdk.snapshotter.MapSnapshotter.calculateLogoScale(android.graphics.Bitmap, android.graphics.Bitmap):float type: DIRECT \l0x0011: NEW_INSTANCE  (r0 I:android.graphics.Matrix) =  android.graphics.Matrix \l0x0013: INVOKE  (r0 I:android.graphics.Matrix) android.graphics.Matrix.\<init\>():void type: DIRECT \l0x0016: INVOKE  \l  (r0 I:android.graphics.Matrix)\l  (r12 I:float)\l  (r12 I:float)\l android.graphics.Matrix.postScale(float, float):boolean type: VIRTUAL \l0x0019: IGET  (r1 I:android.content.Context) = (r11 I:com.mapbox.mapboxsdk.snapshotter.MapSnapshotter) com.mapbox.mapboxsdk.snapshotter.MapSnapshotter.context android.content.Context \l0x001b: INVOKE  (r1 I:android.content.res.Resources) = (r1 I:android.content.Context) android.content.Context.getResources():android.content.res.Resources type: VIRTUAL \l0x001f: SGET  (r4 I:int) =  com.mapbox.mapboxsdk.R.drawable.mapbox_logo_helmet int \l0x0021: INVOKE  (r1 I:android.graphics.Bitmap) = \l  (r1 I:android.content.res.Resources)\l  (r4 I:int)\l  (r2 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.decodeResource(android.content.res.Resources, int, android.graphics.BitmapFactory$Options):android.graphics.Bitmap type: STATIC \l0x0025: INVOKE  (r6 I:int) = (r3 I:android.graphics.Bitmap) android.graphics.Bitmap.getWidth():int type: VIRTUAL \l0x0029: INVOKE  (r7 I:int) = (r3 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL \l0x002d: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002e: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0030: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0031: INVOKE  (r2 I:android.graphics.Bitmap) = \l  (r3 I:android.graphics.Bitmap)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:android.graphics.Matrix)\l  (r9 I:boolean)\l android.graphics.Bitmap.createBitmap(android.graphics.Bitmap, int, int, int, int, android.graphics.Matrix, boolean):android.graphics.Bitmap type: STATIC \l0x0035: INVOKE  (r7 I:int) = (r1 I:android.graphics.Bitmap) android.graphics.Bitmap.getWidth():int type: VIRTUAL \l0x0039: INVOKE  (r8 I:int) = (r1 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL \l0x003d: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003e: CONST  (r10 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x003f: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0040: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0041: INVOKE  (r0 I:android.graphics.Bitmap) = \l  (r4 I:android.graphics.Bitmap)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:android.graphics.Matrix)\l  (r10 I:boolean)\l android.graphics.Bitmap.createBitmap(android.graphics.Bitmap, int, int, int, int, android.graphics.Matrix, boolean):android.graphics.Bitmap type: STATIC \l0x0045: NEW_INSTANCE  (r1 I:com.mapbox.mapboxsdk.snapshotter.MapSnapshotter$Logo) =  com.mapbox.mapboxsdk.snapshotter.MapSnapshotter$Logo \l0x0047: INVOKE  \l  (r1 I:com.mapbox.mapboxsdk.snapshotter.MapSnapshotter$Logo)\l  (r11 I:com.mapbox.mapboxsdk.snapshotter.MapSnapshotter)\l  (r2 I:android.graphics.Bitmap)\l  (r0 I:android.graphics.Bitmap)\l  (r12 I:float)\l com.mapbox.mapboxsdk.snapshotter.MapSnapshotter.Logo.\<init\>(com.mapbox.mapboxsdk.snapshotter.MapSnapshotter, android.graphics.Bitmap, android.graphics.Bitmap, float):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x004a|0x004a: RETURN  (r1 I:com.mapbox.mapboxsdk.snapshotter.MapSnapshotter$Logo) \l}"];
MethodNode[shape=record,label="{private com.mapbox.mapboxsdk.snapshotter.MapSnapshotter$Logo com.mapbox.mapboxsdk.snapshotter.MapSnapshotter.createScaledLogo((r11 'this' I:com.mapbox.mapboxsdk.snapshotter.MapSnapshotter A[IMMUTABLE_TYPE, THIS]), (r12 I:android.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

