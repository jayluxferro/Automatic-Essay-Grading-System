digraph "CFG forcom.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral.equals(Ljava\/lang\/Object;)Z" {
subgraph cluster_Region_1788701106 {
label = "R(1:(2:(1:2)|(1:(2:(1:9)|(2:10|(2:(1:17)|(1:(2:(1:18)|(1:15)))))))))";
node [shape=record,color=blue];
subgraph cluster_Region_4114096 {
label = "R(2:(1:2)|(1:(2:(1:9)|(2:10|(2:(1:17)|(1:(2:(1:18)|(1:15))))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_872708319 {
label = "IF [B:1:0x0001] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r4 == r5) goto L_0x0003\l}"];
subgraph cluster_Region_1214149792 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1234130144 {
label = "R(1:(2:(1:9)|(2:10|(2:(1:17)|(1:(2:(1:18)|(1:15)))))))";
node [shape=record,color=blue];
subgraph cluster_Region_1064439847 {
label = "R(2:(1:9)|(2:10|(2:(1:17)|(1:(2:(1:18)|(1:15))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_673662358 {
label = "IF [B:4:0x0005, B:6:0x000f, B:8:0x0016] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|if (r5 == null) goto L_0x002f\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|ADDED_TO_REGION\l|if (getClass() != r5.getClass()) goto L_0x002f\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|ADDED_TO_REGION\l|if (com.mapbox.mapboxsdk.style.expressions.Expression.super.equals(r5) == false) goto L_0x0018\l}"];
subgraph cluster_Region_325570374 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0018|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_190545338 {
label = "R(2:10|(2:(1:17)|(1:(2:(1:18)|(1:15)))))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0019|com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral r5 = (com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral) r5\l}"];
subgraph cluster_Region_545038750 {
label = "R(2:(1:17)|(1:(2:(1:18)|(1:15))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_262172318 {
label = "IF [B:11:0x001d] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001d|if (r4.literal != null) goto L_0x001f\l}"];
subgraph cluster_Region_1695315522 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return r4.literal.equals(r5.literal)\l}"];
}
}
subgraph cluster_Region_498696457 {
label = "R(1:(2:(1:18)|(1:15)))";
node [shape=record,color=blue];
subgraph cluster_Region_805924871 {
label = "R(2:(1:18)|(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1348484595 {
label = "IF [B:14:0x002a] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002a|if (r5.literal == null) goto L_?\l}"];
subgraph cluster_Region_1966888905 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
subgraph cluster_Region_2036601710 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002d|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0004}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0007}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0012}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x001f}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0028}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x002f|RETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral.equals((r4v0 'this' com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_16;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_16;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_12 -> Node_17;
Node_13 -> Node_14;
}

