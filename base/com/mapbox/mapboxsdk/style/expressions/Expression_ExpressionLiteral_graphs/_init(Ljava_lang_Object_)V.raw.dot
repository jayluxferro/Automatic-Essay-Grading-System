digraph "CFG forcom.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral.\<init\>(Ljava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:com.mapbox.mapboxsdk.style.expressions.Expression) com.mapbox.mapboxsdk.style.expressions.Expression.\<init\>():void type: DIRECT \l0x0003: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) java.lang.String \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x0009: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String) com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral.unwrapStringLiteral(java.lang.String):java.lang.String type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) java.lang.Number \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001c \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: CHECK_CAST  (r2 I:java.lang.Number) = (java.lang.Number) (r2 I:?[OBJECT, ARRAY]) \l0x0014: INVOKE  (r2 I:float) = (r2 I:java.lang.Number) java.lang.Number.floatValue():float type: VIRTUAL \l0x0018: INVOKE  (r2 I:java.lang.Float) = (r2 I:float) java.lang.Float.valueOf(float):java.lang.Float type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IPUT  \l  (r2 I:java.lang.Object)\l  (r1 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral)\l com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral.literal java.lang.Object \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral.\<init\>((r1 'this' I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

