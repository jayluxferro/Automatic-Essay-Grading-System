digraph "CFG forcom.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x002f \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: INVOKE  (r2 I:java.lang.Class) = (r4 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x000b: INVOKE  (r3 I:java.lang.Class) = (r5 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0012 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: INVOKE  (r2 I:boolean) = \l  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression)\l  (r5 I:java.lang.Object)\l com.mapbox.mapboxsdk.style.expressions.Expression.equals(java.lang.Object):boolean type: SUPER \l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|0x0016: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0019 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|0x0018: RETURN  (r1 I:boolean) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|0x0019: CHECK_CAST  (r5 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral) = (com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral) (r5 I:?[OBJECT, ARRAY]) \l0x001b: IGET  (r2 I:java.lang.Object) = \l  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral)\l com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral.literal java.lang.Object \l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0028 \l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|0x001f: IGET  (r0 I:java.lang.Object) = \l  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral)\l com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral.literal java.lang.Object \l0x0021: IGET  (r5 I:java.lang.Object) = \l  (r5 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral)\l com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral.literal java.lang.Object \l0x0023: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r5 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|0x0028: IGET  (r5 I:java.lang.Object) = \l  (r5 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral)\l com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral.literal java.lang.Object \l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|0x002a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x002d \l}"];
Node_17 [shape=record,label="{17\:\ 0x002d|0x002d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x002e|0x002e: RETURN  (r0 I:boolean) \l}"];
Node_19 [shape=record,label="{19\:\ 0x002f|0x002f: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral.equals((r4 'this' I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_19;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_19[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_18[style=dashed];
Node_17 -> Node_18;
}

