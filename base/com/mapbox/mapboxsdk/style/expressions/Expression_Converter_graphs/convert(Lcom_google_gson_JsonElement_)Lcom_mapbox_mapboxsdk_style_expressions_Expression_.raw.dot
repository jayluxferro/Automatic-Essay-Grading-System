digraph "CFG forcom.mapbox.mapboxsdk.style.expressions.Expression.Converter.convert(Lcom\/google\/gson\/JsonElement;)Lcom\/mapbox\/mapboxsdk\/style\/expressions\/Expression;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r4 I:?[OBJECT, ARRAY]) com.google.gson.JsonArray \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CHECK_CAST  (r4 I:com.google.gson.JsonArray) = (com.google.gson.JsonArray) (r4 I:?[OBJECT, ARRAY]) \l0x0006: INVOKE  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression) = (r4 I:com.google.gson.JsonArray) com.mapbox.mapboxsdk.style.expressions.Expression.Converter.convert(com.google.gson.JsonArray):com.mapbox.mapboxsdk.style.expressions.Expression type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: INSTANCE_OF  (r0 I:boolean) = (r4 I:?[OBJECT, ARRAY]) com.google.gson.JsonPrimitive \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0016 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: CHECK_CAST  (r4 I:com.google.gson.JsonPrimitive) = (com.google.gson.JsonPrimitive) (r4 I:?[OBJECT, ARRAY]) \l0x0011: INVOKE  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression) = (r4 I:com.google.gson.JsonPrimitive) com.mapbox.mapboxsdk.style.expressions.Expression.Converter.convert(com.google.gson.JsonPrimitive):com.mapbox.mapboxsdk.style.expressions.Expression type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: RETURN  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: INSTANCE_OF  (r0 I:boolean) = (r4 I:?[OBJECT, ARRAY]) com.google.gson.JsonNull \l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0022 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: NEW_INSTANCE  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral) =  com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral \l0x001c: CONST_STR  (r0 I:java.lang.String) =  \"\" \l0x001e: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral)\l  (r0 I:java.lang.Object)\l com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral.\<init\>(java.lang.Object):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: RETURN  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: INSTANCE_OF  (r0 I:boolean) = (r4 I:?[OBJECT, ARRAY]) com.google.gson.JsonObject \l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|0x0024: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0053 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0026|0x0026: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x0028: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x002b: CHECK_CAST  (r4 I:com.google.gson.JsonObject) = (com.google.gson.JsonObject) (r4 I:?[OBJECT, ARRAY]) \l0x002d: INVOKE  (r1 I:java.util.Set) = (r4 I:com.google.gson.JsonObject) com.google.gson.JsonObject.keySet():java.util.Set type: VIRTUAL \l0x0031: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|0x0035: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|0x0039: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x004d \l}"];
Node_17 [shape=record,label="{17\:\ 0x003b|0x003b: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x003f: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x0041: INVOKE  (r3 I:com.google.gson.JsonElement) = (r4 I:com.google.gson.JsonObject), (r2 I:java.lang.String) com.google.gson.JsonObject.get(java.lang.String):com.google.gson.JsonElement type: VIRTUAL \l0x0045: INVOKE  (r3 I:com.mapbox.mapboxsdk.style.expressions.Expression) = (r3 I:com.google.gson.JsonElement) com.mapbox.mapboxsdk.style.expressions.Expression.Converter.convert(com.google.gson.JsonElement):com.mapbox.mapboxsdk.style.expressions.Expression type: STATIC \l0x0049: INVOKE  \l  (r0 I:java.util.Map)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x004d|0x004d: NEW_INSTANCE  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionMap) =  com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionMap \l0x004f: INVOKE  \l  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionMap)\l  (r0 I:java.util.Map)\l com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionMap.\<init\>(java.util.Map):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0052|0x0052: RETURN  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0053|0x0053: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0055: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0057: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x005a: CONST_STR  (r2 I:java.lang.String) =  \"Unsupported expression conversion for \" \l0x005c: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005f: INVOKE  (r4 I:java.lang.Class) = (r4 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x0063: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0066: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x006a: INVOKE  (r0 I:java.lang.RuntimeException), (r4 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x006d|0x006d: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static com.mapbox.mapboxsdk.style.expressions.Expression com.mapbox.mapboxsdk.style.expressions.Expression.Converter.convert((r4 I:com.google.gson.JsonElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_15;
Node_18 -> Node_19;
Node_20 -> Node_21;
}

