digraph "CFG forcom.mapbox.mapboxsdk.style.expressions.Expression.ExpressionMap.toValue()Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x0002: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0005: IGET  (r1 I:java.util.Map\<java.lang.String, com.mapbox.mapboxsdk.style.expressions.Expression\>) = \l  (r5 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionMap)\l com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionMap.map java.util.Map \l0x0007: INVOKE  (r1 I:java.util.Set) = (r1 I:java.util.Map) java.util.Map.keySet():java.util.Set type: INTERFACE \l0x000b: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0039 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0019: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x001b: IGET  (r3 I:java.util.Map\<java.lang.String, com.mapbox.mapboxsdk.style.expressions.Expression\>) = \l  (r5 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionMap)\l com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionMap.map java.util.Map \l0x001d: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.Map), (r2 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0021: CHECK_CAST  (r3 I:com.mapbox.mapboxsdk.style.expressions.Expression) = (com.mapbox.mapboxsdk.style.expressions.Expression) (r3 I:?[OBJECT, ARRAY]) \l0x0023: INSTANCE_OF  (r4 I:boolean) = (r3 I:?[OBJECT, ARRAY]) com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral \l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0031 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|0x0027: CHECK_CAST  (r3 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral) = (com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral) (r3 I:?[OBJECT, ARRAY]) \l0x0029: INVOKE  (r3 I:java.lang.Object) = \l  (r3 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral)\l com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral.toValue():java.lang.Object type: VIRTUAL \l0x002d: INVOKE  \l  (r0 I:java.util.Map)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0031|0x0031: INVOKE  (r3 I:java.lang.Object[]) = (r3 I:com.mapbox.mapboxsdk.style.expressions.Expression) com.mapbox.mapboxsdk.style.expressions.Expression.toArray():java.lang.Object[] type: VIRTUAL \l0x0035: INVOKE  \l  (r0 I:java.util.Map)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0039|0x0039: RETURN  (r0 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public java.lang.Object com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionMap.toValue((r5 'this' I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionMap A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

