digraph "CFG forcom.mapbox.mapboxsdk.style.expressions.Expression.ExpressionMap.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = com.mapbox.mapboxsdk.style.expressions.Expression.super.hashCode() * 31\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r2.map != null) goto L_0x000c\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|r1 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|int r1 = r2.map.hashCode()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|PHI: r1 \l  PHI: (r1v1 int) = (r1v3 int), (r1v4 int) binds: [B:3:0x000c, B:2:0x000a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|RETURN\l|return r0 + r1\l}"];
MethodNode[shape=record,label="{public int com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionMap.hashCode((r2v0 'this' com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionMap A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

