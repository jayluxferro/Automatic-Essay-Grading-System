digraph "CFG forcom.mapbox.mapboxsdk.style.expressions.Expression.literal(Ljava\/lang\/Object;)Lcom\/mapbox\/mapboxsdk\/style\/expressions\/Expression;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r1.getClass().isArray() == false) goto L_0x0013\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a}"];
Node_3 [shape=record,label="{3\:\ 0x0012|RETURN\l|return literal(com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionArray.toObjectArray(r1))\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013}"];
Node_5 [shape=record,label="{5\:\ 0x0015|if ((r1 instanceof com.mapbox.mapboxsdk.style.expressions.Expression) != false) goto L_0x001d\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017}"];
Node_7 [shape=record,label="{7\:\ 0x001c|RETURN\l|return new com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral(r1)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d}"];
Node_9 [shape=record,label="{9\:\ 0x0024|throw new java.lang.RuntimeException(\"Can't convert an expression to a literal\")\l}"];
MethodNode[shape=record,label="{public static com.mapbox.mapboxsdk.style.expressions.Expression com.mapbox.mapboxsdk.style.expressions.Expression.literal((r1v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

