digraph "CFG forcom.mapbox.mapboxsdk.style.expressions.Expression.literal(Ljava\/lang\/Object;)Lcom\/mapbox\/mapboxsdk\/style\/expressions\/Expression;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Class) = (r1 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x0004: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Class) java.lang.Class.isArray():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  (r1 I:java.lang.Object[]) = (r1 I:java.lang.Object) com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionArray.toObjectArray(java.lang.Object):java.lang.Object[] type: STATIC \l0x000e: INVOKE  (r1 I:com.mapbox.mapboxsdk.style.expressions.Expression) = (r1 I:java.lang.Object[]) com.mapbox.mapboxsdk.style.expressions.Expression.literal(java.lang.Object[]):com.mapbox.mapboxsdk.style.expressions.Expression type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: RETURN  (r1 I:com.mapbox.mapboxsdk.style.expressions.Expression) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: INSTANCE_OF  (r0 I:boolean) = (r1 I:?[OBJECT, ARRAY]) com.mapbox.mapboxsdk.style.expressions.Expression \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001d \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: NEW_INSTANCE  (r0 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral) =  com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral \l0x0019: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionLiteral)\l  (r1 I:java.lang.Object)\l com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionLiteral.\<init\>(java.lang.Object):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: RETURN  (r0 I:com.mapbox.mapboxsdk.style.expressions.Expression) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: NEW_INSTANCE  (r1 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x001f: CONST_STR  (r0 I:java.lang.String) =  \"Can't convert an expression to a literal\" \l0x0021: INVOKE  (r1 I:java.lang.RuntimeException), (r0 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static com.mapbox.mapboxsdk.style.expressions.Expression com.mapbox.mapboxsdk.style.expressions.Expression.literal((r1 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

