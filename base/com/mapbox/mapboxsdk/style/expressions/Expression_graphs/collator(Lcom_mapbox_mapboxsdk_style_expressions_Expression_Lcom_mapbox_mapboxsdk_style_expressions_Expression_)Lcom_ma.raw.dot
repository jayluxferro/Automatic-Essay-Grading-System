digraph "CFG forcom.mapbox.mapboxsdk.style.expressions.Expression.collator(Lcom\/mapbox\/mapboxsdk\/style\/expressions\/Expression;Lcom\/mapbox\/mapboxsdk\/style\/expressions\/Expression;)Lcom\/mapbox\/mapboxsdk\/style\/expressions\/Expression;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x0002: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0005: CONST_STR  (r1 I:java.lang.String) =  \"case\-sensitive\" \l0x0007: INVOKE  \l  (r0 I:java.util.Map)\l  (r1 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x000a: CONST_STR  (r3 I:java.lang.String) =  \"diacritic\-sensitive\" \l0x000c: INVOKE  \l  (r0 I:java.util.Map)\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x000f: NEW_INSTANCE  (r3 I:com.mapbox.mapboxsdk.style.expressions.Expression) =  com.mapbox.mapboxsdk.style.expressions.Expression \l0x0011: CONST_STR  (r4 I:java.lang.String) =  \"collator\" \l0x0013: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0014: NEW_ARRAY  (r1 I:com.mapbox.mapboxsdk.style.expressions.Expression[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: com.mapbox.mapboxsdk.style.expressions.Expression[] \l0x0016: NEW_INSTANCE  (r2 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionMap) =  com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionMap \l0x0018: INVOKE  \l  (r2 I:com.mapbox.mapboxsdk.style.expressions.Expression$ExpressionMap)\l  (r0 I:java.util.Map)\l com.mapbox.mapboxsdk.style.expressions.Expression.ExpressionMap.\<init\>(java.util.Map):void type: DIRECT \l0x001b: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001c: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x001e: INVOKE  \l  (r3 I:com.mapbox.mapboxsdk.style.expressions.Expression)\l  (r4 I:java.lang.String)\l  (r1 I:com.mapbox.mapboxsdk.style.expressions.Expression[])\l com.mapbox.mapboxsdk.style.expressions.Expression.\<init\>(java.lang.String, com.mapbox.mapboxsdk.style.expressions.Expression[]):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0021|0x0021: RETURN  (r3 I:com.mapbox.mapboxsdk.style.expressions.Expression) \l}"];
MethodNode[shape=record,label="{public static com.mapbox.mapboxsdk.style.expressions.Expression com.mapbox.mapboxsdk.style.expressions.Expression.collator((r3 I:com.mapbox.mapboxsdk.style.expressions.Expression A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

