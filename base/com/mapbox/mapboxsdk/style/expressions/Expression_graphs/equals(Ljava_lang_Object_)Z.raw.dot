digraph "CFG forcom.mapbox.mapboxsdk.style.expressions.Expression.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:java.lang.Object), (r4 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: SUPER \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: RETURN  (r4 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x002e \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: INSTANCE_OF  (r1 I:boolean) = (r4 I:?[OBJECT, ARRAY]) com.mapbox.mapboxsdk.style.expressions.Expression \l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|0x000c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x000f \l}"];
Node_9 [shape=record,label="{9\:\ 0x000f|0x000f: CHECK_CAST  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression) = (com.mapbox.mapboxsdk.style.expressions.Expression) (r4 I:?[OBJECT, ARRAY]) \l0x0011: IGET  (r1 I:java.lang.String) = (r3 I:com.mapbox.mapboxsdk.style.expressions.Expression) com.mapbox.mapboxsdk.style.expressions.Expression.operator java.lang.String \l}"];
Node_10 [shape=record,label="{10\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0020 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|0x0015: IGET  (r1 I:java.lang.String) = (r3 I:com.mapbox.mapboxsdk.style.expressions.Expression) com.mapbox.mapboxsdk.style.expressions.Expression.operator java.lang.String \l0x0017: IGET  (r2 I:java.lang.String) = (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression) com.mapbox.mapboxsdk.style.expressions.Expression.operator java.lang.String \l0x0019: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0025 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|0x0020: IGET  (r1 I:java.lang.String) = (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression) com.mapbox.mapboxsdk.style.expressions.Expression.operator java.lang.String \l}"];
Node_15 [shape=record,label="{15\:\ 0x0022|0x0022: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0025 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0024|0x0024: RETURN  (r0 I:boolean) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0025|0x0025: IGET  (r0 I:com.mapbox.mapboxsdk.style.expressions.Expression[]) = (r3 I:com.mapbox.mapboxsdk.style.expressions.Expression) com.mapbox.mapboxsdk.style.expressions.Expression.arguments com.mapbox.mapboxsdk.style.expressions.Expression[] \l0x0027: IGET  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression[]) = (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression) com.mapbox.mapboxsdk.style.expressions.Expression.arguments com.mapbox.mapboxsdk.style.expressions.Expression[] \l0x0029: INVOKE  (r4 I:boolean) = (r0 I:java.lang.Object[]), (r4 I:java.lang.Object[]) java.util.Arrays.deepEquals(java.lang.Object[], java.lang.Object[]):boolean type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x002d|0x002d: RETURN  (r4 I:boolean) \l}"];
Node_19 [shape=record,label="{19\:\ 0x002e|0x002e: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.mapboxsdk.style.expressions.Expression.equals((r3 'this' I:com.mapbox.mapboxsdk.style.expressions.Expression A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_19;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_19[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_17;
Node_12 -> Node_16[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_18;
}

