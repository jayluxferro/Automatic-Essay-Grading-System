digraph "CFG forcom.mapbox.mapboxsdk.style.sources.CustomGeometrySource.1.\<init\>(Lcom\/mapbox\/mapboxsdk\/style\/sources\/CustomGeometrySource;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r1 I:com.mapbox.mapboxsdk.style.sources.CustomGeometrySource)\l  (r0 I:com.mapbox.mapboxsdk.style.sources.CustomGeometrySource$1)\l com.mapbox.mapboxsdk.style.sources.CustomGeometrySource.1.this$0 com.mapbox.mapboxsdk.style.sources.CustomGeometrySource \l0x0002: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0005: NEW_INSTANCE  (r1 I:java.util.concurrent.atomic.AtomicInteger) =  java.util.concurrent.atomic.AtomicInteger \l0x0007: INVOKE  (r1 I:java.util.concurrent.atomic.AtomicInteger) java.util.concurrent.atomic.AtomicInteger.\<init\>():void type: DIRECT \l0x000a: IPUT  \l  (r1 I:java.util.concurrent.atomic.AtomicInteger)\l  (r0 I:com.mapbox.mapboxsdk.style.sources.CustomGeometrySource$1)\l com.mapbox.mapboxsdk.style.sources.CustomGeometrySource.1.threadCount java.util.concurrent.atomic.AtomicInteger \l0x000c: INVOKE  (r1 I:java.util.concurrent.atomic.AtomicInteger) =  com.mapbox.mapboxsdk.style.sources.CustomGeometrySource.access$000():java.util.concurrent.atomic.AtomicInteger type: STATIC \l0x0010: INVOKE  (r1 I:int) = (r1 I:java.util.concurrent.atomic.AtomicInteger) java.util.concurrent.atomic.AtomicInteger.getAndIncrement():int type: VIRTUAL \l0x0014: IPUT  \l  (r1 I:int)\l  (r0 I:com.mapbox.mapboxsdk.style.sources.CustomGeometrySource$1)\l com.mapbox.mapboxsdk.style.sources.CustomGeometrySource.1.poolId int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|0x0016: RETURN   \l}"];
MethodNode[shape=record,label="{void com.mapbox.mapboxsdk.style.sources.CustomGeometrySource.1.\<init\>((r0 'this' I:com.mapbox.mapboxsdk.style.sources.CustomGeometrySource$1 A[IMMUTABLE_TYPE, THIS]), (r1 I:com.mapbox.mapboxsdk.style.sources.CustomGeometrySource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | ANONYMOUS_CONSTRUCTOR\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

