digraph "CFG forcom.mapbox.mapboxsdk.style.layers.PropertyValue.getExpression()Lcom\/mapbox\/mapboxsdk\/style\/expressions\/Expression;" {
subgraph cluster_Region_1692853411 {
label = "R(1:(2:(1:3)|(2:6|7)))";
node [shape=record,color=blue];
subgraph cluster_Region_1835139582 {
label = "R(2:(1:3)|(2:6|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1231022658 {
label = "IF [B:1:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (isExpression() == true) goto L_0x0006\l}"];
subgraph cluster_Region_179735748 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return r2.value instanceof com.google.gson.JsonArray ? com.mapbox.mapboxsdk.style.expressions.Expression.Converter.convert((com.google.gson.JsonArray) r2.value) : (com.mapbox.mapboxsdk.style.expressions.Expression) r2.value\l}"];
}
}
subgraph cluster_Region_1495708365 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001a|com.mapbox.mapboxsdk.log.Logger.m86w(TAG, \"not a expression, try value\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|RETURN\l|return null\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000c}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0015}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public com.mapbox.mapboxsdk.style.expressions.Expression com.mapbox.mapboxsdk.style.layers.PropertyValue.getExpression((r2v0 'this' com.mapbox.mapboxsdk.style.layers.PropertyValue A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_9;
Node_5 -> Node_8;
}

