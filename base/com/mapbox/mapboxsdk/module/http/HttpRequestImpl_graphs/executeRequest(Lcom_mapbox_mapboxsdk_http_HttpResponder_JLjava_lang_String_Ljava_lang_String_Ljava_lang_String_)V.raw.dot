digraph "CFG forcom.mapbox.mapboxsdk.module.http.HttpRequestImpl.executeRequest(Lcom\/mapbox\/mapboxsdk\/http\/HttpResponder;JLjava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r3 I:com.mapbox.mapboxsdk.module.http.HttpRequestImpl$OkHttpCallback) =  com.mapbox.mapboxsdk.module.http.HttpRequestImpl$OkHttpCallback \l0x0002: INVOKE  \l  (r3 I:com.mapbox.mapboxsdk.module.http.HttpRequestImpl$OkHttpCallback)\l  (r2 I:com.mapbox.mapboxsdk.http.HttpResponder)\l com.mapbox.mapboxsdk.module.http.HttpRequestImpl.OkHttpCallback.\<init\>(com.mapbox.mapboxsdk.http.HttpResponder):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|SYNTHETIC\lSplitter:B:1:0x0005\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0005\l|0x0005: INVOKE  (r2 I:okhttp3.HttpUrl) = (r5 I:java.lang.String) okhttp3.HttpUrl.parse(java.lang.String):okhttp3.HttpUrl type: STATIC A[Catch:\{ Exception \-\> 0x0072 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001c A[Catch:\{ Exception \-\> 0x0072 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: CONST  (r2 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0072 \}]\l0x000c: CONST_STR  (r4 I:java.lang.String) =  \"[HTTP] Unable to parse resourceUrl %s\" A[Catch:\{ Exception \-\> 0x0072 \}]\l0x000e: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0072 \}]\l0x000f: NEW_ARRAY  (r6 I:java.lang.Object[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0011: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0012: APUT  \l  (r6 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0014: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String), (r6 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0018: INVOKE  (r2 I:int), (r4 I:java.lang.String) com.mapbox.mapboxsdk.http.HttpLogger.log(int, java.lang.String):void type: STATIC A[Catch:\{ Exception \-\> 0x0072 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: RETURN   A[Catch:\{ Exception \-\> 0x0072 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: INVOKE  (r4 I:java.lang.String) = (r2 I:okhttp3.HttpUrl) okhttp3.HttpUrl.host():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0020: SGET  (r0 I:java.util.Locale) =  com.mapbox.mapboxsdk.constants.MapboxConstants.MAPBOX_LOCALE java.util.Locale A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0022: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String), (r0 I:java.util.Locale) java.lang.String.toLowerCase(java.util.Locale):java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0026: INVOKE  (r2 I:int) = (r2 I:okhttp3.HttpUrl) okhttp3.HttpUrl.querySize():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x0072 \}]\l0x002a: INVOKE  (r2 I:java.lang.String) = \l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r2 I:int)\l com.mapbox.mapboxsdk.http.HttpRequestUrl.buildResourceUrl(java.lang.String, java.lang.String, int):java.lang.String type: STATIC A[Catch:\{ Exception \-\> 0x0072 \}]\l0x002e: NEW_INSTANCE  (r4 I:okhttp3.Request$Builder) =  okhttp3.Request$Builder A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0030: INVOKE  (r4 I:okhttp3.Request$Builder) okhttp3.Request.Builder.\<init\>():void type: DIRECT A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0033: INVOKE  (r4 I:okhttp3.Request$Builder) = (r4 I:okhttp3.Request$Builder), (r2 I:java.lang.String) okhttp3.Request.Builder.url(java.lang.String):okhttp3.Request$Builder type: VIRTUAL A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0037: SGET  (r5 I:java.util.Locale) =  com.mapbox.mapboxsdk.constants.MapboxConstants.MAPBOX_LOCALE java.util.Locale A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0039: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String), (r5 I:java.util.Locale) java.lang.String.toLowerCase(java.util.Locale):java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x0072 \}]\l0x003d: INVOKE  (r2 I:okhttp3.Request$Builder) = (r4 I:okhttp3.Request$Builder), (r2 I:java.lang.Object) okhttp3.Request.Builder.tag(java.lang.Object):okhttp3.Request$Builder type: VIRTUAL A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0041: CONST_STR  (r4 I:java.lang.String) =  \"User\-Agent\" A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0043: SGET  (r5 I:java.lang.String) =  com.mapbox.mapboxsdk.module.http.HttpRequestImpl.userAgentString java.lang.String A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0045: INVOKE  (r2 I:okhttp3.Request$Builder) = \l  (r2 I:okhttp3.Request$Builder)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l okhttp3.Request.Builder.addHeader(java.lang.String, java.lang.String):okhttp3.Request$Builder type: VIRTUAL A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0049: INVOKE  (r4 I:int) = (r6 I:java.lang.String) java.lang.String.length():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x0072 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x004d|0x004d: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:9:0x0055 A[Catch:\{ Exception \-\> 0x0072 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x004f|0x004f: CONST_STR  (r4 I:java.lang.String) =  \"If\-None\-Match\" A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0051: INVOKE  \l  (r2 I:okhttp3.Request$Builder)\l  (r4 I:java.lang.String)\l  (r6 I:java.lang.String)\l okhttp3.Request.Builder.addHeader(java.lang.String, java.lang.String):okhttp3.Request$Builder type: VIRTUAL A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0054: GOTO  \-\> 0x0060 A[Catch:\{ Exception \-\> 0x0072 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0055|0x0055: INVOKE  (r4 I:int) = (r7 I:java.lang.String) java.lang.String.length():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x0072 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0059|0x0059: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x0060 A[Catch:\{ Exception \-\> 0x0072 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x005b|0x005b: CONST_STR  (r4 I:java.lang.String) =  \"If\-Modified\-Since\" A[Catch:\{ Exception \-\> 0x0072 \}]\l0x005d: INVOKE  \l  (r2 I:okhttp3.Request$Builder)\l  (r4 I:java.lang.String)\l  (r7 I:java.lang.String)\l okhttp3.Request.Builder.addHeader(java.lang.String, java.lang.String):okhttp3.Request$Builder type: VIRTUAL A[Catch:\{ Exception \-\> 0x0072 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0060|0x0060: INVOKE  (r2 I:okhttp3.Request) = (r2 I:okhttp3.Request$Builder) okhttp3.Request.Builder.build():okhttp3.Request type: VIRTUAL A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0064: SGET  (r4 I:okhttp3.OkHttpClient) =  com.mapbox.mapboxsdk.module.http.HttpRequestImpl.client okhttp3.OkHttpClient A[Catch:\{ Exception \-\> 0x0072 \}]\l0x0066: INVOKE  (r2 I:okhttp3.Call) = (r4 I:okhttp3.OkHttpClient), (r2 I:okhttp3.Request) okhttp3.OkHttpClient.newCall(okhttp3.Request):okhttp3.Call type: VIRTUAL A[Catch:\{ Exception \-\> 0x0072 \}]\l0x006a: IPUT  \l  (r2 I:okhttp3.Call)\l  (r1 I:com.mapbox.mapboxsdk.module.http.HttpRequestImpl)\l com.mapbox.mapboxsdk.module.http.HttpRequestImpl.call okhttp3.Call A[Catch:\{ Exception \-\> 0x0072 \}]\l0x006c: IGET  (r2 I:okhttp3.Call) = (r1 I:com.mapbox.mapboxsdk.module.http.HttpRequestImpl) com.mapbox.mapboxsdk.module.http.HttpRequestImpl.call okhttp3.Call A[Catch:\{ Exception \-\> 0x0072 \}]\l0x006e: INVOKE  (r2 I:okhttp3.Call), (r3 I:okhttp3.Callback) okhttp3.Call.enqueue(okhttp3.Callback):void type: INTERFACE A[Catch:\{ Exception \-\> 0x0072 \}, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0072|ExcHandler: Exception null\lSplitter:B:1:0x0005\l|0x0072: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0073|0x0073: IGET  (r4 I:okhttp3.Call) = (r1 I:com.mapbox.mapboxsdk.module.http.HttpRequestImpl) com.mapbox.mapboxsdk.module.http.HttpRequestImpl.call okhttp3.Call \l0x0075: INVOKE  \l  (r3 I:com.mapbox.mapboxsdk.module.http.HttpRequestImpl$OkHttpCallback)\l  (r4 I:okhttp3.Call)\l  (r2 I:java.lang.Exception)\l com.mapbox.mapboxsdk.module.http.HttpRequestImpl.OkHttpCallback.access$000(com.mapbox.mapboxsdk.module.http.HttpRequestImpl$OkHttpCallback, okhttp3.Call, java.lang.Exception):void type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0078|0x0078: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.module.http.HttpRequestImpl.executeRequest((r1 'this' I:com.mapbox.mapboxsdk.module.http.HttpRequestImpl A[IMMUTABLE_TYPE, THIS]), (r2 I:com.mapbox.mapboxsdk.http.HttpResponder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

