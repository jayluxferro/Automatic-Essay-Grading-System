digraph "CFG forcom.mapbox.mapboxsdk.module.telemetry.TelemetryImpl.updateSessionIdRotationInterval(Lcom\/mapbox\/android\/telemetry\/SessionInterval;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r0 I:java.lang.Class) = (r2 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL A[Catch:\{ Exception \-\> 0x0023 \}, TRY_ENTER]\l0x0004: CONST_STR  (r1 I:java.lang.String) =  \"interval\" A[Catch:\{ Exception \-\> 0x0023 \}]\l0x0006: INVOKE  (r0 I:java.lang.reflect.Field) = (r0 I:java.lang.Class), (r1 I:java.lang.String) java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field type: VIRTUAL A[Catch:\{ Exception \-\> 0x0023 \}]\l0x000a: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0023 \}]\l0x000b: INVOKE  (r0 I:java.lang.reflect.Field), (r1 I:boolean) java.lang.reflect.Field.setAccessible(boolean):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x0023 \}]\l0x000e: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.lang.reflect.Field), (r2 I:java.lang.Object) java.lang.reflect.Field.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ Exception \-\> 0x0023 \}]\l0x0012: CHECK_CAST  (r2 I:java.lang.Integer) = (java.lang.Integer) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x0023 \}]\l0x0014: INVOKE  (r0 I:com.mapbox.mapboxsdk.maps.TelemetryDefinition) =  com.mapbox.mapboxsdk.Mapbox.getTelemetry():com.mapbox.mapboxsdk.maps.TelemetryDefinition type: STATIC A[Catch:\{ Exception \-\> 0x0023 \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002e A[Catch:\{ Exception \-\> 0x0023 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: INVOKE  (r2 I:int) = (r2 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x0023 \}]\l0x001e: INVOKE  (r2 I:boolean) = \l  (r0 I:com.mapbox.mapboxsdk.maps.TelemetryDefinition)\l  (r2 I:int)\l com.mapbox.mapboxsdk.maps.TelemetryDefinition.setSessionIdRotationInterval(int):boolean type: INTERFACE A[Catch:\{ Exception \-\> 0x0023 \}]\l0x0021: NOP   A[TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: RETURN  (r2 I:boolean) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|ExcHandler: Exception null\lSplitter:B:0:0x0000\l|0x0023: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: CONST_STR  (r0 I:java.lang.String) =  \"Mbgl\-TelemetryImpl\" \l0x0026: CONST_STR  (r1 I:java.lang.String) =  \"Exception occurred when updating session id rotation interval\" \l0x0028: INVOKE  \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Throwable)\l com.mapbox.mapboxsdk.log.Logger.e(java.lang.String, java.lang.String, java.lang.Throwable):void type: STATIC \l0x002b: INVOKE  (r2 I:java.lang.Exception) com.mapbox.mapboxsdk.MapStrictMode.strictModeViolation(java.lang.Exception):void type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|0x002e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl.updateSessionIdRotationInterval((r2 I:com.mapbox.android.telemetry.SessionInterval A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, java.lang.Deprecated, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

