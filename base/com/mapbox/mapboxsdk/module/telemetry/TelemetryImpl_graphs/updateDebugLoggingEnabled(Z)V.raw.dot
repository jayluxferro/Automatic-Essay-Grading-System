digraph "CFG forcom.mapbox.mapboxsdk.module.telemetry.TelemetryImpl.updateDebugLoggingEnabled(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.mapbox.mapboxsdk.maps.TelemetryDefinition) =  com.mapbox.mapboxsdk.Mapbox.getTelemetry():com.mapbox.mapboxsdk.maps.TelemetryDefinition type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.maps.TelemetryDefinition)\l  (r1 I:boolean)\l com.mapbox.mapboxsdk.maps.TelemetryDefinition.setDebugLoggingEnabled(boolean):void type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: RETURN   \l}"];
MethodNode[shape=record,label="{public static void com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl.updateDebugLoggingEnabled((r1 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, java.lang.Deprecated, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

