digraph "CFG forcom.mapbox.mapboxsdk.attribution.AttributionMeasure.SmallLogoShortTextCommand.execute(Lcom\/mapbox\/mapboxsdk\/attribution\/AttributionMeasure;)Lcom\/mapbox\/mapboxsdk\/attribution\/AttributionLayout;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|if (((com.mapbox.mapboxsdk.attribution.AttributionMeasure.access$700(r5) + com.mapbox.mapboxsdk.attribution.AttributionMeasure.access$1500(r5)) \> com.mapbox.mapboxsdk.attribution.AttributionMeasure.access$1600(r5) ? 1 : ((com.mapbox.mapboxsdk.attribution.AttributionMeasure.access$700(r5) + com.mapbox.mapboxsdk.attribution.AttributionMeasure.access$1500(r5)) == com.mapbox.mapboxsdk.attribution.AttributionMeasure.access$1600(r5) ? 0 : \-1)) \> 0) goto L_0x0014\l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|r0 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|r0 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|PHI: r0 \l  PHI: (r0v3 boolean) = (r0v6 boolean), (r0v7 boolean) binds: [B:3:0x0014, B:2:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L_0x0031\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|android.graphics.PointF r0 = com.mapbox.mapboxsdk.attribution.AttributionMeasure.access$1300(com.mapbox.mapboxsdk.attribution.AttributionMeasure.access$1000(r5), com.mapbox.mapboxsdk.attribution.AttributionMeasure.access$1700(r5), com.mapbox.mapboxsdk.attribution.AttributionMeasure.access$1200(r5))\l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|RETURN\l|return new com.mapbox.mapboxsdk.attribution.AttributionLayout(com.mapbox.mapboxsdk.attribution.AttributionMeasure.access$1900(r5), r0, true)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public com.mapbox.mapboxsdk.attribution.AttributionLayout com.mapbox.mapboxsdk.attribution.AttributionMeasure.SmallLogoShortTextCommand.execute((r4v0 'this' com.mapbox.mapboxsdk.attribution.AttributionMeasure$SmallLogoShortTextCommand A[IMMUTABLE_TYPE, THIS]), (r5v0 com.mapbox.mapboxsdk.attribution.AttributionMeasure A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
}

