digraph "CFG forcom.mapbox.mapboxsdk.attribution.AttributionParser.parseUrlSpan(Landroid\/text\/SpannableStringBuilder;Landroid\/text\/style\/URLSpan;)V" {
subgraph cluster_Region_1415389311 {
label = "R(2:0|(1:(3:2|(1:4)|5)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String java.lang.String r0 = r4.getURL()\l}"];
subgraph cluster_Region_832185041 {
label = "R(1:(3:2|(1:4)|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_117875872 {
label = "IF [B:1:0x0008] THEN: R(3:2|(1:4)|5) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if (isUrlValid(r0) == true) goto L_0x000a\l}"];
subgraph cluster_Region_2113114453 {
label = "R(3:2|(1:4)|5)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|java.lang.String java.lang.String r3 = parseAnchorValue(r3, r4)\l}"];
subgraph cluster_IfRegion_1853506071 {
label = "IF [B:3:0x0012] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0012|if (isImproveThisMapAnchor(r3) == true) goto L_0x0014\l}"];
subgraph cluster_Region_1394204371 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0014|java.lang.String r3 = translateImproveThisMapAnchor(r3)\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0018|PHI: r3 \l  PHI: (r3v2 java.lang.String) = (r3v1 java.lang.String), (r3v3 java.lang.String) binds: [B:3:0x0012, B:4:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|r2.attributions.add(new com.mapbox.mapboxsdk.attribution.Attribution(r3, r0))\l}"];
}
}
}
}
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.mapbox.mapboxsdk.attribution.AttributionParser.parseUrlSpan((r2v0 'this' com.mapbox.mapboxsdk.attribution.AttributionParser A[IMMUTABLE_TYPE, THIS]), (r3v0 android.text.SpannableStringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.text.style.URLSpan A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
}

