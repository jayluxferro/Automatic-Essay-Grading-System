digraph "CFG forcom.mapbox.mapboxsdk.geometry.LatLngBounds.unionNoParamCheck(DDDD)Lcom\/mapbox\/mapboxsdk\/geometry\/LatLngBounds;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r14\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if ((r0.latitudeNorth \> r15 ? 1 : (r0.latitudeNorth == r15 ? 0 : \-1)) \>= 0) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|r4 = r15\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|r4 = r0.latitudeNorth\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|PHI: r4 \l  PHI: (r4v0 double) = (r4v1 double), (r4v2 double) binds: [B:3:0x0009, B:2:0x0007] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if ((r0.latitudeSouth \> r19 ? 1 : (r0.latitudeSouth == r19 ? 0 : \-1)) \<= 0) goto L_0x0015\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|r8 = r19\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|r8 = r0.latitudeSouth\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|PHI: r8 \l  PHI: (r8v0 double) = (r8v1 double), (r8v2 double) binds: [B:7:0x0015, B:6:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|double r1 = com.mapbox.mapboxsdk.geometry.LatLng.wrap(r17, \-180.0d, 180.0d)\ldouble r10 = com.mapbox.mapboxsdk.geometry.LatLng.wrap(r21, \-180.0d, 180.0d)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0044|if ((r0.longitudeEast \> r1 ? 1 : (r0.longitudeEast == r1 ? 0 : \-1)) != 0) goto L_0x0054\l}"];
Node_10 [shape=record,label="{10\:\ 0x0046}"];
Node_11 [shape=record,label="{11\:\ 0x004a|if ((r0.longitudeWest \> r10 ? 1 : (r0.longitudeWest == r10 ? 0 : \-1)) != 0) goto L_0x0054\l}"];
Node_12 [shape=record,label="{12\:\ 0x004c}"];
Node_13 [shape=record,label="{13\:\ 0x0053|RETURN\l|return new com.mapbox.mapboxsdk.geometry.LatLngBounds(r4, r1, r8, r10)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0054|double r6 = r0.longitudeEast\lboolean r3 = containsLongitude(r6, r0.longitudeWest, r1)\ldouble r6 = r0.longitudeEast\lboolean r6 = containsLongitude(r6, r0.longitudeWest, r10)\lr15 = r1\lr17 = r10\lboolean r7 = containsLongitude(r15, r17, r0.longitudeEast)\lboolean r12 = containsLongitude(r15, r17, r0.longitudeWest)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0081|if (r3 == false) goto L_0x009a\l}"];
Node_16 [shape=record,label="{16\:\ 0x0083|if (r6 == false) goto L_0x009a\l}"];
Node_17 [shape=record,label="{17\:\ 0x0085|if (r7 == false) goto L_0x009a\l}"];
Node_18 [shape=record,label="{18\:\ 0x0087|if (r12 == false) goto L_0x009a\l}"];
Node_19 [shape=record,label="{19\:\ 0x0089}"];
Node_20 [shape=record,label="{20\:\ 0x0099|RETURN\l|return new com.mapbox.mapboxsdk.geometry.LatLngBounds(r4, 180.0d, r8, \-180.0d)\l}"];
Node_21 [shape=record,label="{21\:\ 0x009a|if (r3 == false) goto L_0x00b2\l}"];
Node_22 [shape=record,label="{22\:\ 0x009c|if (r6 == false) goto L_0x00a9\l}"];
Node_23 [shape=record,label="{23\:\ 0x009e}"];
Node_24 [shape=record,label="{24\:\ 0x00a8|RETURN\l|return new com.mapbox.mapboxsdk.geometry.LatLngBounds(r4, r0.longitudeEast, r8, r0.longitudeWest)\l}"];
Node_25 [shape=record,label="{25\:\ 0x00a9}"];
Node_26 [shape=record,label="{26\:\ 0x00b1|RETURN\l|return new com.mapbox.mapboxsdk.geometry.LatLngBounds(r4, r0.longitudeEast, r8, r10)\l}"];
Node_27 [shape=record,label="{27\:\ 0x00b2|if (r7 == false) goto L_0x00c8\l}"];
Node_28 [shape=record,label="{28\:\ 0x00b4|if (r12 == false) goto L_0x00be\l}"];
Node_29 [shape=record,label="{29\:\ 0x00b6}"];
Node_30 [shape=record,label="{30\:\ 0x00bd|RETURN\l|return new com.mapbox.mapboxsdk.geometry.LatLngBounds(r4, r1, r8, r10)\l}"];
Node_31 [shape=record,label="{31\:\ 0x00be|r6 = r1\l}"];
Node_32 [shape=record,label="{32\:\ 0x00c7|RETURN\l|return new com.mapbox.mapboxsdk.geometry.LatLngBounds(r4, r6, r8, r0.longitudeWest)\l}"];
Node_33 [shape=record,label="{33\:\ 0x00c8}"];
Node_34 [shape=record,label="{34\:\ 0x00d6|if ((com.mapbox.mapboxsdk.geometry.LatLngSpan.getLongitudeSpan(r1, r0.longitudeWest) \> com.mapbox.mapboxsdk.geometry.LatLngSpan.getLongitudeSpan(r0.longitudeEast, r10) ? 1 : (com.mapbox.mapboxsdk.geometry.LatLngSpan.getLongitudeSpan(r1, r0.longitudeWest) == com.mapbox.mapboxsdk.geometry.LatLngSpan.getLongitudeSpan(r0.longitudeEast, r10) ? 0 : \-1)) \>= 0) goto L_0x00e2\l}"];
Node_35 [shape=record,label="{35\:\ 0x00d8|r6 = r1\l}"];
Node_36 [shape=record,label="{36\:\ 0x00e1|RETURN\l|return new com.mapbox.mapboxsdk.geometry.LatLngBounds(r4, r6, r8, r0.longitudeWest)\l}"];
Node_37 [shape=record,label="{37\:\ 0x00e2}"];
Node_38 [shape=record,label="{38\:\ 0x00ea|RETURN\l|return new com.mapbox.mapboxsdk.geometry.LatLngBounds(r4, r0.longitudeEast, r8, r10)\l}"];
MethodNode[shape=record,label="{private com.mapbox.mapboxsdk.geometry.LatLngBounds com.mapbox.mapboxsdk.geometry.LatLngBounds.unionNoParamCheck((r14v0 'this' com.mapbox.mapboxsdk.geometry.LatLngBounds A[IMMUTABLE_TYPE, THIS]), (r15v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.FloatRange, \{from=\-90.0, to=90.0\}], , Annotation[BUILD, android.support.annotation.FloatRange, \{from=\-90.0, to=90.0\}], \lAnnotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_33;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_37;
Node_35 -> Node_36;
Node_37 -> Node_38;
}

