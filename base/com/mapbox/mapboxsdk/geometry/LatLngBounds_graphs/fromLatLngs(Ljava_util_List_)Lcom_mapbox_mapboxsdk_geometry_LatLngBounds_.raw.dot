digraph "CFG forcom.mapbox.mapboxsdk.geometry.LatLngBounds.fromLatLngs(Ljava\/util\/List;)Lcom\/mapbox\/mapboxsdk\/geometry\/LatLngBounds;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0007: CHECK_CAST  (r1 I:com.mapbox.mapboxsdk.geometry.ILatLng) = (com.mapbox.mapboxsdk.geometry.ILatLng) (r1 I:?[OBJECT, ARRAY]) \l0x0009: INVOKE  (r1 I:double) = (r1 I:com.mapbox.mapboxsdk.geometry.ILatLng) com.mapbox.mapboxsdk.geometry.ILatLng.getLongitude():double type: INTERFACE \l0x000d: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000e: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.List), (r3 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0012: CHECK_CAST  (r3 I:com.mapbox.mapboxsdk.geometry.ILatLng) = (com.mapbox.mapboxsdk.geometry.ILatLng) (r3 I:?[OBJECT, ARRAY]) \l0x0014: INVOKE  (r3 I:double) = (r3 I:com.mapbox.mapboxsdk.geometry.ILatLng) com.mapbox.mapboxsdk.geometry.ILatLng.getLongitude():double type: INTERFACE \l0x0018: ARITH  (r5 I:double) = (r1 I:double) \- (r3 I:double) \l0x001a: INVOKE  (r5 I:double) = (r5 I:double) java.lang.Math.abs(double):double type: STATIC \l0x001e: CONST  (r7 I:?[long, double]) = \l  (4640537203540230144(0x4066800000000000, double:180.0) ?[long, double])\l \l0x0023: CMP_G  (r5 I:int) = (r5 I:double), (r7 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0025|0x0025: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:5:0x002c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0027|0x0027: CMP_G  (r5 I:int) = (r1 I:double), (r3 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|0x0029: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:8:0x0031 \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: CMP_G  (r5 I:int) = (r3 I:double), (r1 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:8:0x0031 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: MOVE  (r20 I:?[long, double]) = (r1 I:?[long, double]) \l0x0033: MOVE  (r1 I:?[long, double]) = (r3 I:?[long, double]) \l0x0034: MOVE  (r3 I:?[long, double]) = (r20 I:?[long, double]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|0x0036: INVOKE  (r0 I:java.util.Iterator) = (r22 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l0x003a: CONST  (r5 I:?[long, double]) = \l  (4636033603912859648(0x4056800000000000, double:90.0) ?[long, double])\l \l0x003f: CONST  (r7 I:?[long, double]) = \l  (\-4587338432941916160(0xc056800000000000, double:\-90.0) ?[long, double])\l \l0x0044: MOVE  (r12 I:?[long, double]) = (r1 I:?[long, double]) \l0x0045: MOVE  (r14 I:?[long, double]) = (r5 I:?[long, double]) \l0x0046: MOVE  (r10 I:?[long, double]) = (r7 I:?[long, double]) \l0x0047: MOVE  (r7 I:?[long, double]) = (r3 I:?[long, double]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|0x0048: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x004c|0x004c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0080 \l}"];
Node_12 [shape=record,label="{12\:\ 0x004e|0x004e: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0052: CHECK_CAST  (r1 I:com.mapbox.mapboxsdk.geometry.ILatLng) = (com.mapbox.mapboxsdk.geometry.ILatLng) (r1 I:?[OBJECT, ARRAY]) \l0x0054: INVOKE  (r2 I:double) = (r1 I:com.mapbox.mapboxsdk.geometry.ILatLng) com.mapbox.mapboxsdk.geometry.ILatLng.getLatitude():double type: INTERFACE \l0x0058: INVOKE  (r14 I:double) = (r14 I:double), (r2 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x005c: INVOKE  (r10 I:double) = (r10 I:double), (r2 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x0060: INVOKE  (r5 I:double) = (r1 I:com.mapbox.mapboxsdk.geometry.ILatLng) com.mapbox.mapboxsdk.geometry.ILatLng.getLongitude():double type: INTERFACE \l0x0064: MOVE  (r1 I:?[long, double]) = (r7 I:?[long, double]) \l0x0065: MOVE  (r3 I:?[long, double]) = (r12 I:?[long, double]) \l0x0066: MOVE  (r18 I:?[long, double]) = (r5 I:?[long, double]) \l0x0068: INVOKE  (r1 I:boolean) = (r1 I:double), (r3 I:double), (r5 I:double) com.mapbox.mapboxsdk.geometry.LatLngBounds.containsLongitude(double, double, double):boolean type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x006c|0x006c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0048 \l}"];
Node_14 [shape=record,label="{14\:\ 0x006e|0x006e: MOVE  (r1 I:?[long, double]) = (r18 I:?[long, double]) \l0x0070: INVOKE  (r3 I:double) = (r1 I:double), (r12 I:double) com.mapbox.mapboxsdk.geometry.LatLngBounds.getLongitudeSpan(double, double):double type: STATIC \l0x0074: INVOKE  (r5 I:double) = (r7 I:double), (r1 I:double) com.mapbox.mapboxsdk.geometry.LatLngBounds.getLongitudeSpan(double, double):double type: STATIC \l0x0078: CMP_G  (r3 I:int) = (r3 I:double), (r5 I:double) \l}"];
Node_15 [shape=record,label="{15\:\ 0x007a|0x007a: IF  (r3 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:17:0x007e \l}"];
Node_16 [shape=record,label="{16\:\ 0x007c|0x007c: MOVE  (r7 I:?[long, double]) = (r1 I:?[long, double]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x007e|0x007e: MOVE  (r12 I:?[long, double]) = (r1 I:?[long, double]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0080|0x0080: NEW_INSTANCE  (r0 I:com.mapbox.mapboxsdk.geometry.LatLngBounds) =  com.mapbox.mapboxsdk.geometry.LatLngBounds \l0x0082: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0083: MOVE  (r1 I:?[long, double]) = (r12 I:?[long, double]) \l0x0084: MOVE  (r12 I:?[long, double]) = (r7 I:?[long, double]) \l0x0085: MOVE  (r16 I:?[long, double]) = (r1 I:?[long, double]) \l0x0087: INVOKE  \l  (r9 I:com.mapbox.mapboxsdk.geometry.LatLngBounds)\l  (r10 I:double)\l  (r12 I:double)\l  (r14 I:double)\l  (r16 I:double)\l com.mapbox.mapboxsdk.geometry.LatLngBounds.\<init\>(double, double, double, double):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x008a|0x008a: RETURN  (r0 I:com.mapbox.mapboxsdk.geometry.LatLngBounds) \l}"];
MethodNode[shape=record,label="{static com.mapbox.mapboxsdk.geometry.LatLngBounds com.mapbox.mapboxsdk.geometry.LatLngBounds.fromLatLngs((r22 I:java.util.List\<? extends com.mapbox.mapboxsdk.geometry.ILatLng\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, +, Lcom\/mapbox\/mapboxsdk\/geometry\/ILatLng;, \>;), Lcom\/mapbox\/mapboxsdk\/geometry\/LatLngBounds;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_8;
Node_3 -> Node_9[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_13 -> Node_10;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_10;
Node_17 -> Node_10;
Node_18 -> Node_19;
}

