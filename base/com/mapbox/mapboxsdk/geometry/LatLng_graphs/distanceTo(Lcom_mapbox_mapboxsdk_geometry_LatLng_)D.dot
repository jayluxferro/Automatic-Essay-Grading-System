digraph "CFG forcom.mapbox.mapboxsdk.geometry.LatLng.distanceTo(Lcom\/mapbox\/mapboxsdk\/geometry\/LatLng;)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r18\lr1 = r19\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|if ((r0.latitude \> r1.latitude ? 1 : (r0.latitude == r1.latitude ? 0 : \-1)) != 0) goto L_0x0017\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c}"];
Node_3 [shape=record,label="{3\:\ 0x0012|if ((r0.longitude \> r1.longitude ? 1 : (r0.longitude == r1.longitude ? 0 : \-1)) != 0) goto L_0x0017\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|RETURN\l|return 0.0d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|double r2 = java.lang.Math.toRadians(r0.latitude)\ldouble r4 = java.lang.Math.toRadians(r0.longitude)\ldouble r6 = java.lang.Math.toRadians(r19.getLatitude())\ldouble r8 = java.lang.Math.toRadians(r19.getLongitude())\ldouble r10 = java.lang.Math.cos(r2)\ldouble r12 = java.lang.Math.cos(r6)\ldouble r14 = (((java.lang.Math.cos(r4) * r10) * r12) * java.lang.Math.cos(r8)) + (((r10 * java.lang.Math.sin(r4)) * r12) * java.lang.Math.sin(r8))\l}"];
Node_6 [shape=record,label="{6\:\ 0x006e|RETURN\l|return java.lang.Math.acos(r14 + (java.lang.Math.sin(r2) * java.lang.Math.sin(r6))) * 6378137.0d\l}"];
MethodNode[shape=record,label="{public double com.mapbox.mapboxsdk.geometry.LatLng.distanceTo((r18v0 'this' com.mapbox.mapboxsdk.geometry.LatLng A[IMMUTABLE_TYPE, THIS]), (r19v0 com.mapbox.mapboxsdk.geometry.LatLng A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
}

