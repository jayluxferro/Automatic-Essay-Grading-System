digraph "CFG forcom.mapbox.mapboxsdk.offline.OfflineManager.createOfflineRegion(Lcom\/mapbox\/mapboxsdk\/offline\/OfflineRegionDefinition;[BLcom\/mapbox\/mapboxsdk\/offline\/OfflineManager$CreateOfflineRegionCallback;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (isValidOfflineRegionDefinition(r3) != false) goto L_0x0020\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|java.lang.String r4 = r2.context.getString(com.mapbox.mapboxsdk.C1080R.string.mapbox_offline_error_region_definition_invalid)\ljava.lang.Object[] r0 = new java.lang.Object[]\{r3.getBounds()\}\lr5.onError(java.lang.String.format(r4, r0))\l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|com.mapbox.mapboxsdk.net.ConnectivityReceiver.instance(r2.context).activate()\lcom.mapbox.mapboxsdk.storage.FileSource.getInstance(r2.context).activate()\lcreateOfflineRegion(r2.fileSource, r3, r4, new com.mapbox.mapboxsdk.offline.OfflineManager.C11353(r2))\l}"];
Node_5 [shape=record,label="{5\:\ 0x003c|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.offline.OfflineManager.createOfflineRegion((r2v0 'this' com.mapbox.mapboxsdk.offline.OfflineManager A[IMMUTABLE_TYPE, THIS]), (r3v0 com.mapbox.mapboxsdk.offline.OfflineRegionDefinition A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback A[DONT_INLINE, IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

