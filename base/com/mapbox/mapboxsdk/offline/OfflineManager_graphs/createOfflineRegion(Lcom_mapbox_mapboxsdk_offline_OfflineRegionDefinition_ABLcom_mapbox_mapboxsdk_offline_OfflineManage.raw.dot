digraph "CFG forcom.mapbox.mapboxsdk.offline.OfflineManager.createOfflineRegion(Lcom\/mapbox\/mapboxsdk\/offline\/OfflineRegionDefinition;[BLcom\/mapbox\/mapboxsdk\/offline\/OfflineManager$CreateOfflineRegionCallback;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r2 I:com.mapbox.mapboxsdk.offline.OfflineManager)\l  (r3 I:com.mapbox.mapboxsdk.offline.OfflineRegionDefinition)\l com.mapbox.mapboxsdk.offline.OfflineManager.isValidOfflineRegionDefinition(com.mapbox.mapboxsdk.offline.OfflineRegionDefinition):boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0020 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r4 I:android.content.Context) = (r2 I:com.mapbox.mapboxsdk.offline.OfflineManager) com.mapbox.mapboxsdk.offline.OfflineManager.context android.content.Context \l0x0008: SGET  (r0 I:int) =  com.mapbox.mapboxsdk.R.string.mapbox_offline_error_region_definition_invalid int \l0x000a: INVOKE  (r4 I:java.lang.String) = (r4 I:android.content.Context), (r0 I:int) android.content.Context.getString(int):java.lang.String type: VIRTUAL \l0x000e: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000f: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0011: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: INVOKE  (r3 I:com.mapbox.mapboxsdk.geometry.LatLngBounds) = (r3 I:com.mapbox.mapboxsdk.offline.OfflineRegionDefinition) com.mapbox.mapboxsdk.offline.OfflineRegionDefinition.getBounds():com.mapbox.mapboxsdk.geometry.LatLngBounds type: INTERFACE \l0x0016: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0018: INVOKE  (r3 I:java.lang.String) = (r4 I:java.lang.String), (r0 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x001c: INVOKE  \l  (r5 I:com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback)\l  (r3 I:java.lang.String)\l com.mapbox.mapboxsdk.offline.OfflineManager.CreateOfflineRegionCallback.onError(java.lang.String):void type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: IGET  (r0 I:android.content.Context) = (r2 I:com.mapbox.mapboxsdk.offline.OfflineManager) com.mapbox.mapboxsdk.offline.OfflineManager.context android.content.Context \l0x0022: INVOKE  (r0 I:com.mapbox.mapboxsdk.net.ConnectivityReceiver) = (r0 I:android.content.Context) com.mapbox.mapboxsdk.net.ConnectivityReceiver.instance(android.content.Context):com.mapbox.mapboxsdk.net.ConnectivityReceiver type: STATIC \l0x0026: INVOKE  (r0 I:com.mapbox.mapboxsdk.net.ConnectivityReceiver) com.mapbox.mapboxsdk.net.ConnectivityReceiver.activate():void type: VIRTUAL \l0x0029: IGET  (r0 I:android.content.Context) = (r2 I:com.mapbox.mapboxsdk.offline.OfflineManager) com.mapbox.mapboxsdk.offline.OfflineManager.context android.content.Context \l0x002b: INVOKE  (r0 I:com.mapbox.mapboxsdk.storage.FileSource) = (r0 I:android.content.Context) com.mapbox.mapboxsdk.storage.FileSource.getInstance(android.content.Context):com.mapbox.mapboxsdk.storage.FileSource type: STATIC \l0x002f: INVOKE  (r0 I:com.mapbox.mapboxsdk.storage.FileSource) com.mapbox.mapboxsdk.storage.FileSource.activate():void type: VIRTUAL \l0x0032: IGET  (r0 I:com.mapbox.mapboxsdk.storage.FileSource) = (r2 I:com.mapbox.mapboxsdk.offline.OfflineManager) com.mapbox.mapboxsdk.offline.OfflineManager.fileSource com.mapbox.mapboxsdk.storage.FileSource \l0x0034: NEW_INSTANCE  (r1 I:com.mapbox.mapboxsdk.offline.OfflineManager$3) =  com.mapbox.mapboxsdk.offline.OfflineManager$3 \l0x0036: INVOKE  \l  (r1 I:com.mapbox.mapboxsdk.offline.OfflineManager$3)\l  (r2 I:com.mapbox.mapboxsdk.offline.OfflineManager)\l  (r5 I:com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback)\l com.mapbox.mapboxsdk.offline.OfflineManager.3.\<init\>(com.mapbox.mapboxsdk.offline.OfflineManager, com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback):void type: DIRECT \l0x0039: INVOKE  \l  (r2 I:com.mapbox.mapboxsdk.offline.OfflineManager)\l  (r0 I:com.mapbox.mapboxsdk.storage.FileSource)\l  (r3 I:com.mapbox.mapboxsdk.offline.OfflineRegionDefinition)\l  (r4 I:byte[])\l  (r1 I:com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback)\l com.mapbox.mapboxsdk.offline.OfflineManager.createOfflineRegion(com.mapbox.mapboxsdk.storage.FileSource, com.mapbox.mapboxsdk.offline.OfflineRegionDefinition, byte[], com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x003c|0x003c: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.offline.OfflineManager.createOfflineRegion((r2 'this' I:com.mapbox.mapboxsdk.offline.OfflineManager A[IMMUTABLE_TYPE, THIS]), (r3 I:com.mapbox.mapboxsdk.offline.OfflineRegionDefinition A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

