digraph "CFG forcom.mapbox.mapboxsdk.plugins.locationlayer.LocationLayer.styleScaling(Lcom\/mapbox\/mapboxsdk\/plugins\/locationlayer\/LocationLayerOptions;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<java.lang.String\>) = \l  (r11 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayer)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayer.layerMap java.util.List \l0x0002: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0067 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0010: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) \l0x0012: IGET  (r2 I:com.mapbox.mapboxsdk.maps.MapboxMap) = \l  (r11 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayer)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayer.mapboxMap com.mapbox.mapboxsdk.maps.MapboxMap \l0x0014: INVOKE  (r1 I:com.mapbox.mapboxsdk.style.layers.Layer) = \l  (r2 I:com.mapbox.mapboxsdk.maps.MapboxMap)\l  (r1 I:java.lang.String)\l com.mapbox.mapboxsdk.maps.MapboxMap.getLayer(java.lang.String):com.mapbox.mapboxsdk.style.layers.Layer type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0006 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: INSTANCE_OF  (r2 I:boolean) = (r1 I:?[OBJECT, ARRAY]) com.mapbox.mapboxsdk.style.layers.SymbolLayer \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0006 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001f: NEW_ARRAY  (r3 I:com.mapbox.mapboxsdk.style.layers.PropertyValue[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: com.mapbox.mapboxsdk.style.layers.PropertyValue[] \l0x0021: INVOKE  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression$Interpolator) =  com.mapbox.mapboxsdk.style.expressions.Expression.linear():com.mapbox.mapboxsdk.style.expressions.Expression$Interpolator type: STATIC \l0x0025: INVOKE  (r5 I:com.mapbox.mapboxsdk.style.expressions.Expression) =  com.mapbox.mapboxsdk.style.expressions.Expression.zoom():com.mapbox.mapboxsdk.style.expressions.Expression type: STATIC \l0x0029: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x002a: NEW_ARRAY  (r6 I:com.mapbox.mapboxsdk.style.expressions.Expression$Stop[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: com.mapbox.mapboxsdk.style.expressions.Expression$Stop[] \l0x002c: INVOKE  (r7 I:double) = \l  (r12 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerOptions)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerOptions.minZoom():double type: VIRTUAL \l0x0030: INVOKE  (r7 I:java.lang.Double) = (r7 I:double) java.lang.Double.valueOf(double):java.lang.Double type: STATIC \l0x0034: INVOKE  (r8 I:float) = \l  (r12 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerOptions)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerOptions.minZoomIconScale():float type: VIRTUAL \l0x0038: INVOKE  (r8 I:java.lang.Float) = (r8 I:float) java.lang.Float.valueOf(float):java.lang.Float type: STATIC \l0x003c: INVOKE  (r7 I:com.mapbox.mapboxsdk.style.expressions.Expression$Stop) = (r7 I:java.lang.Object), (r8 I:java.lang.Object) com.mapbox.mapboxsdk.style.expressions.Expression.stop(java.lang.Object, java.lang.Object):com.mapbox.mapboxsdk.style.expressions.Expression$Stop type: STATIC \l0x0040: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0041: APUT  \l  (r6 I:?[OBJECT, ARRAY][])\l  (r8 I:?[int, short, byte, char])\l  (r7 I:?[OBJECT, ARRAY])\l \l0x0043: INVOKE  (r9 I:double) = \l  (r12 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerOptions)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerOptions.maxZoom():double type: VIRTUAL \l0x0047: INVOKE  (r7 I:java.lang.Double) = (r9 I:double) java.lang.Double.valueOf(double):java.lang.Double type: STATIC \l0x004b: INVOKE  (r9 I:float) = \l  (r12 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerOptions)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerOptions.maxZoomIconScale():float type: VIRTUAL \l0x004f: INVOKE  (r9 I:java.lang.Float) = (r9 I:float) java.lang.Float.valueOf(float):java.lang.Float type: STATIC \l0x0053: INVOKE  (r7 I:com.mapbox.mapboxsdk.style.expressions.Expression$Stop) = (r7 I:java.lang.Object), (r9 I:java.lang.Object) com.mapbox.mapboxsdk.style.expressions.Expression.stop(java.lang.Object, java.lang.Object):com.mapbox.mapboxsdk.style.expressions.Expression$Stop type: STATIC \l0x0057: APUT  \l  (r6 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r7 I:?[OBJECT, ARRAY])\l \l0x0059: INVOKE  (r2 I:com.mapbox.mapboxsdk.style.expressions.Expression) = \l  (r4 I:com.mapbox.mapboxsdk.style.expressions.Expression$Interpolator)\l  (r5 I:com.mapbox.mapboxsdk.style.expressions.Expression)\l  (r6 I:com.mapbox.mapboxsdk.style.expressions.Expression$Stop[])\l com.mapbox.mapboxsdk.style.expressions.Expression.interpolate(com.mapbox.mapboxsdk.style.expressions.Expression$Interpolator, com.mapbox.mapboxsdk.style.expressions.Expression, com.mapbox.mapboxsdk.style.expressions.Expression$Stop[]):com.mapbox.mapboxsdk.style.expressions.Expression type: STATIC \l0x005d: INVOKE  (r2 I:com.mapbox.mapboxsdk.style.layers.PropertyValue) = (r2 I:com.mapbox.mapboxsdk.style.expressions.Expression) com.mapbox.mapboxsdk.style.layers.PropertyFactory.iconSize(com.mapbox.mapboxsdk.style.expressions.Expression):com.mapbox.mapboxsdk.style.layers.PropertyValue type: STATIC \l0x0061: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r8 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0063: INVOKE  \l  (r1 I:com.mapbox.mapboxsdk.style.layers.Layer)\l  (r3 I:com.mapbox.mapboxsdk.style.layers.PropertyValue[])\l com.mapbox.mapboxsdk.style.layers.Layer.setProperties(com.mapbox.mapboxsdk.style.layers.PropertyValue[]):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0067|0x0067: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayer.styleScaling((r11 'this' I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayer A[IMMUTABLE_TYPE, THIS]), (r12 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerOptions A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_1;
}

