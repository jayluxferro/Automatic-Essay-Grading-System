digraph "CFG forcom.mapbox.mapboxsdk.plugins.locationlayer.LocationLayer.setLayerVisibility(Ljava\/lang\/String;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapboxMap) = \l  (r2 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayer)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayer.mapboxMap com.mapbox.mapboxsdk.maps.MapboxMap \l0x0002: INVOKE  (r3 I:com.mapbox.mapboxsdk.style.layers.Layer) = \l  (r0 I:com.mapbox.mapboxsdk.maps.MapboxMap)\l  (r3 I:java.lang.String)\l com.mapbox.mapboxsdk.maps.MapboxMap.getLayer(java.lang.String):com.mapbox.mapboxsdk.style.layers.Layer type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0031 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: CONST_STR  (r0 I:java.lang.String) =  \"visible\" \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: CONST_STR  (r0 I:java.lang.String) =  \"none\" \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: INVOKE  (r1 I:com.mapbox.mapboxsdk.style.layers.PropertyValue) = (r3 I:com.mapbox.mapboxsdk.style.layers.Layer) com.mapbox.mapboxsdk.style.layers.Layer.getVisibility():com.mapbox.mapboxsdk.style.layers.PropertyValue type: VIRTUAL \l0x0013: IGET  (r1 I:T) = (r1 I:com.mapbox.mapboxsdk.style.layers.PropertyValue) com.mapbox.mapboxsdk.style.layers.PropertyValue.value java.lang.Object \l0x0015: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) \l0x0017: INVOKE  (r0 I:boolean) = (r1 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0031 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001e: NEW_ARRAY  (r0 I:com.mapbox.mapboxsdk.style.layers.PropertyValue[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: com.mapbox.mapboxsdk.style.layers.PropertyValue[] \l0x0020: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0026 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: CONST_STR  (r4 I:java.lang.String) =  \"visible\" \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: CONST_STR  (r4 I:java.lang.String) =  \"none\" \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: INVOKE  (r4 I:com.mapbox.mapboxsdk.style.layers.PropertyValue) = (r4 I:java.lang.String) com.mapbox.mapboxsdk.style.layers.PropertyFactory.visibility(java.lang.String):com.mapbox.mapboxsdk.style.layers.PropertyValue type: STATIC \l0x002c: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x002e: INVOKE  \l  (r3 I:com.mapbox.mapboxsdk.style.layers.Layer)\l  (r0 I:com.mapbox.mapboxsdk.style.layers.PropertyValue[])\l com.mapbox.mapboxsdk.style.layers.Layer.setProperties(com.mapbox.mapboxsdk.style.layers.PropertyValue[]):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayer.setLayerVisibility((r2 'this' I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayer A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

