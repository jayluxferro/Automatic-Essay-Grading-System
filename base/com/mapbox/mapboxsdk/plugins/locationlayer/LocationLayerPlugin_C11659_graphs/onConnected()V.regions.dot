digraph "CFG forcom.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerPlugin.9.onConnected()V" {
subgraph cluster_Region_488061845 {
label = "R(1:(1:(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_699806263 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1313767490 {
label = "IF [B:1:0x0006, B:3:0x000e, B:5:0x0016] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerPlugin.this.usingInternalLocationEngine != false) goto L_0x0008\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|ADDED_TO_REGION\l|if (com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerPlugin.this.isLocationLayerStarted != false) goto L_0x0010\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|ADDED_TO_REGION\l|if (com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerPlugin.this.isEnabled != false) goto L_0x0018\l}"];
subgraph cluster_Region_1762533518 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0018|com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerPlugin.this.locationEngine.requestLocationUpdates()\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0010}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerPlugin.9.onConnected((r1v0 'this' com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerPlugin$9 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_8[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_9[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_10[style=dashed];
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

