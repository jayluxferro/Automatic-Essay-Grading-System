digraph "CFG forcom.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCamera.onNewGpsBearingValue(F)V" {
subgraph cluster_Region_1738643334 {
label = "R(2:1|(1:(1:11)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|boolean r0 = r4.cameraMode == 36 && r4.mapboxMap.getCameraPosition().bearing != 0.0d\l}"];
subgraph cluster_Region_1112955189 {
label = "R(1:(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2143226855 {
label = "IF [B:7:0x001b, B:9:0x0021, B:10:0x0023] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001b|if (r4.cameraMode == 34) goto L_0x0025\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|ADDED_TO_REGION\l|if (r4.cameraMode == 22) goto L_0x0025\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|ADDED_TO_REGION\l|if (r0 == true) goto L_0x0025\l}"];
subgraph cluster_Region_1277864869 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0025|setBearing(r5)\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0012|REMOVE\lADDED_TO_REGION\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0014}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0016}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0017|PHI: r0 \l  PHI: (r0v1 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001d}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCamera.onNewGpsBearingValue((r4v0 'this' com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCamera A[IMMUTABLE_TYPE, THIS]), (r5v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

