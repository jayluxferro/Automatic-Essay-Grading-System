digraph "CFG forcom.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerPlugin.updateLocation(Landroid\/location\/Location;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r4 != null) goto L_0x0003\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|RETURN\l|return\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r3.isLocationLayerStarted != false) goto L_0x000a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|r3.lastLocation = r4\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|showLocationLayerIfHidden()\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|if (r5 != false) goto L_0x0014\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|r3.staleStateManager.updateLatestLocationTime()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|com.mapbox.mapboxsdk.camera.CameraPosition r5 = r3.mapboxMap.getCameraPosition()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|if (getCameraMode() != 36) goto L_0x0025\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|r0 = true\l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|r0 = false\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|PHI: r0 \l  PHI: (r0v2 boolean) = (r0v3 boolean), (r0v4 boolean) binds: [B:12:0x0025, B:11:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|r3.pluginAnimatorCoordinator.feedNewLocation(r4, r5, r0)\lupdateAccuracyRadius(r4, false)\lr3.lastLocation = r4\l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerPlugin.updateLocation((r3v0 'this' com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerPlugin A[IMMUTABLE_TYPE, THIS]), (r4v0 android.location.Location A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

