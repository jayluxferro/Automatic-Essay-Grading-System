digraph "CFG forcom.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.onSensorChanged(Landroid\/hardware\/SensorEvent;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:long) =  android.os.SystemClock.elapsedRealtime():long type: STATIC \l0x0004: IGET  (r2 I:long) = \l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.compassUpdateNextTimestamp long \l0x0006: CMP_L  (r2 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r2 I:int) = \l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.lastAccuracySensorStatus int \l0x000d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: CONST_STR  (r6 I:java.lang.String) =  \"Compass sensor is unreliable, device calibration is needed.\" \l0x0012: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0014: INVOKE  (r6 I:java.lang.String), (r0 I:java.lang.Object[]) timber.log.Timber.d(java.lang.String, java.lang.Object[]):void type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IGET  (r2 I:android.hardware.Sensor) = (r6 I:android.hardware.SensorEvent) android.hardware.SensorEvent.sensor android.hardware.Sensor \l0x001a: INVOKE  (r2 I:int) = (r2 I:android.hardware.Sensor) android.hardware.Sensor.getType():int type: VIRTUAL \l0x001e: CONST  (r4 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0031 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: INVOKE  (r6 I:float[]) = \l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l  (r6 I:android.hardware.SensorEvent)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.getRotationVectorFromSensorEvent(android.hardware.SensorEvent):float[] type: DIRECT \l0x0026: IPUT  \l  (r6 I:float[])\l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.rotationVectorValue float[] \l0x0028: INVOKE  \l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.updateOrientation():void type: DIRECT \l0x002b: CONST  (r2 I:?[long, double]) = (500(0x1f4, double:2.47E\-321) ?[long, double]) \l0x002d: ARITH  (r0 I:long) = (r0 I:long) + (r2 I:long) \l0x002e: IPUT  \l  (r0 I:long)\l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.compassUpdateNextTimestamp long \l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: IGET  (r0 I:android.hardware.Sensor) = (r6 I:android.hardware.SensorEvent) android.hardware.SensorEvent.sensor android.hardware.Sensor \l0x0033: INVOKE  (r0 I:int) = (r0 I:android.hardware.Sensor) android.hardware.Sensor.getType():int type: VIRTUAL \l0x0037: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0046 \l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|0x003a: IGET  (r6 I:float[]) = (r6 I:android.hardware.SensorEvent) android.hardware.SensorEvent.values float[] \l0x003c: AGET  (r6 I:?[int, float]) = (r6 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x003e: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1135869952(0x43b40000, float:360.0) ?[int, float, short, byte, char])\l \l0x0040: ARITH  (r6 I:float) = (r6 I:float) + (r0 I:float) \l0x0041: ARITH  (r6 I:float) = (r6 I:float) % (r0 I:float) \l0x0042: INVOKE  \l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l  (r6 I:float)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.notifyCompassChangeListeners(float):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|0x0046: IGET  (r0 I:android.hardware.Sensor) = (r6 I:android.hardware.SensorEvent) android.hardware.SensorEvent.sensor android.hardware.Sensor \l0x0048: INVOKE  (r0 I:int) = (r0 I:android.hardware.Sensor) android.hardware.Sensor.getType():int type: VIRTUAL \l0x004c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x004d|0x004d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x005f \l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|0x004f: INVOKE  (r6 I:float[]) = \l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l  (r6 I:android.hardware.SensorEvent)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.getRotationVectorFromSensorEvent(android.hardware.SensorEvent):float[] type: DIRECT \l0x0053: IGET  (r0 I:float[]) = \l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.gravityValues float[] \l0x0055: INVOKE  (r6 I:float[]) = \l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l  (r6 I:float[])\l  (r0 I:float[])\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.lowPassFilter(float[], float[]):float[] type: DIRECT \l0x0059: IPUT  \l  (r6 I:float[])\l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.gravityValues float[] \l0x005b: INVOKE  \l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.updateOrientation():void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x005f|0x005f: IGET  (r0 I:android.hardware.Sensor) = (r6 I:android.hardware.SensorEvent) android.hardware.SensorEvent.sensor android.hardware.Sensor \l0x0061: INVOKE  (r0 I:int) = (r0 I:android.hardware.Sensor) android.hardware.Sensor.getType():int type: VIRTUAL \l0x0065: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0066|0x0066: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0077 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0068|0x0068: INVOKE  (r6 I:float[]) = \l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l  (r6 I:android.hardware.SensorEvent)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.getRotationVectorFromSensorEvent(android.hardware.SensorEvent):float[] type: DIRECT \l0x006c: IGET  (r0 I:float[]) = \l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.magneticValues float[] \l0x006e: INVOKE  (r6 I:float[]) = \l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l  (r6 I:float[])\l  (r0 I:float[])\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.lowPassFilter(float[], float[]):float[] type: DIRECT \l0x0072: IPUT  \l  (r6 I:float[])\l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.magneticValues float[] \l0x0074: INVOKE  \l  (r5 I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine)\l com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.updateOrientation():void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0077|0x0077: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine.onSensorChanged((r5 'this' I:com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerCompassEngine A[IMMUTABLE_TYPE, THIS]), (r6 I:android.hardware.SensorEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_19;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_19;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
}

