digraph "CFG forcom.mapbox.mapboxsdk.camera.CameraUpdateFactory.newLatLngBounds(Lcom\/mapbox\/mapboxsdk\/geometry\/LatLngBounds;IIII)Lcom\/mapbox\/mapboxsdk\/camera\/CameraUpdate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r6 I:com.mapbox.mapboxsdk.camera.CameraUpdateFactory$CameraBoundsUpdate) =  com.mapbox.mapboxsdk.camera.CameraUpdateFactory$CameraBoundsUpdate \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0003: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0004: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.camera.CameraUpdateFactory$CameraBoundsUpdate)\l  (r1 I:com.mapbox.mapboxsdk.geometry.LatLngBounds)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l com.mapbox.mapboxsdk.camera.CameraUpdateFactory.CameraBoundsUpdate.\<init\>(com.mapbox.mapboxsdk.geometry.LatLngBounds, int, int, int, int):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: RETURN  (r6 I:com.mapbox.mapboxsdk.camera.CameraUpdate) \l}"];
MethodNode[shape=record,label="{public static com.mapbox.mapboxsdk.camera.CameraUpdate com.mapbox.mapboxsdk.camera.CameraUpdateFactory.newLatLngBounds((r7 I:com.mapbox.mapboxsdk.geometry.LatLngBounds A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], , , , \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

