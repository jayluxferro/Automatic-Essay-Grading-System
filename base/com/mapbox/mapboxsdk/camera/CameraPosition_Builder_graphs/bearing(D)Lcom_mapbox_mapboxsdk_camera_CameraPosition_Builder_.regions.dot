digraph "CFG forcom.mapbox.mapboxsdk.camera.CameraPosition.Builder.bearing(D)Lcom\/mapbox\/mapboxsdk\/camera\/CameraPosition$Builder;" {
subgraph cluster_Region_1304207147 {
label = "R(4:(1:2)|(1:5)|6|7)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1254427683 {
label = "LOOP:0: (1:2)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r5 \>= 360.0d) goto L_0x0009\l}"];
subgraph cluster_Region_71242644 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|LOOP_END\lLOOP:0: B:0:0x0000\-\>B:2:0x0009\l|r5 \-= 360.0d\l}"];
}
}
subgraph cluster_LoopRegion_1996726911 {
label = "LOOP:1: (1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|if (r5 \< 0.0d) goto L_0x0011\l}"];
subgraph cluster_Region_1584344691 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|LOOP_END\lLOOP:1: B:3:0x000b\-\>B:5:0x0011\l|r5 += 360.0d\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0013|r4.bearing = r5\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|RETURN\l|return r4\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lPHI: r5 \l  PHI: (r5v1 double) = (r5v0 double), (r5v4 double) binds: [B:0:0x0000, B:2:0x0009] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:2:0x0009\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000b|LOOP_START\lPHI: r5 \l  PHI: (r5v2 double) = (r5v1 double), (r5v3 double) binds: [B:8:0x000b, B:5:0x0011] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:3:0x000b\-\>B:5:0x0011\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000b|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0013|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public com.mapbox.mapboxsdk.camera.CameraPosition$Builder com.mapbox.mapboxsdk.camera.CameraPosition.Builder.bearing((r4v0 'this' com.mapbox.mapboxsdk.camera.CameraPosition$Builder A[IMMUTABLE_TYPE, THIS]), (r5v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_8[style=dashed];
Node_2 -> Node_0;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_3;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_8 -> Node_3;
Node_9 -> Node_6;
}

