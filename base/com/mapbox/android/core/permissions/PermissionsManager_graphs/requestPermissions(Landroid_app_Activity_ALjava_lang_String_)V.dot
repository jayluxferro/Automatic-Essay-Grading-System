digraph "CFG forcom.mapbox.android.core.permissions.PermissionsManager.requestPermissions(Landroid\/app\/Activity;[Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.ArrayList r0 = new java.util.ArrayList()\lint r1 = r8.length\lr3 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|LOOP_START\lPHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:0:0x0000, B:5:0x0015] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0008\-\>B:5:0x0015\l|if (r3 \>= r1) goto L_0x0018\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|r4 = r8[r3]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|if (android.support.p000v4.app.ActivityCompat.shouldShowRequestPermissionRationale(r7, r4) == false) goto L_0x0015\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|r0.add(r4)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|LOOP_END\lLOOP:0: B:1:0x0008\-\>B:5:0x0015\l|int r3 = r3 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018}"];
Node_7 [shape=record,label="{7\:\ 0x001a|if (r6.listener == null) goto L_0x0027\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c}"];
Node_9 [shape=record,label="{9\:\ 0x0020|if (r0.size() \<= 0) goto L_0x0027\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|r6.listener.onExplanationNeeded(r0)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|android.support.p000v4.app.ActivityCompat.requestPermissions(r7, r8, 0)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ 0x0018|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0015|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0015|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.mapbox.android.core.permissions.PermissionsManager.requestPermissions((r6v0 'this' com.mapbox.android.core.permissions.PermissionsManager A[IMMUTABLE_TYPE, THIS]), (r7v0 android.app.Activity A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_14;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_6;
Node_14 -> Node_5;
Node_15 -> Node_5;
}

