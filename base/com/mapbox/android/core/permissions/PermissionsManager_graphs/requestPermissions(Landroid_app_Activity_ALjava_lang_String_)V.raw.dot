digraph "CFG forcom.mapbox.android.core.permissions.PermissionsManager.requestPermissions(Landroid\/app\/Activity;[Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0005: ARRAY_LENGTH  (r1 I:int) = (r8 I:?[]) \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r3 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: AGET  (r4 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x000c: INVOKE  (r5 I:boolean) = (r7 I:android.app.Activity), (r4 I:java.lang.String) android.support.v4.app.ActivityCompat.shouldShowRequestPermissionRationale(android.app.Activity, java.lang.String):boolean type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: INVOKE  (r0 I:java.util.ArrayList), (r4 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IGET  (r1 I:com.mapbox.android.core.permissions.PermissionsListener) = \l  (r6 I:com.mapbox.android.core.permissions.PermissionsManager)\l com.mapbox.android.core.permissions.PermissionsManager.listener com.mapbox.android.core.permissions.PermissionsListener \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0027 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: INVOKE  (r1 I:int) = (r0 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:11:0x0027 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: IGET  (r1 I:com.mapbox.android.core.permissions.PermissionsListener) = \l  (r6 I:com.mapbox.android.core.permissions.PermissionsManager)\l com.mapbox.android.core.permissions.PermissionsManager.listener com.mapbox.android.core.permissions.PermissionsListener \l0x0024: INVOKE  \l  (r1 I:com.mapbox.android.core.permissions.PermissionsListener)\l  (r0 I:java.util.List)\l com.mapbox.android.core.permissions.PermissionsListener.onExplanationNeeded(java.util.List):void type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: INVOKE  \l  (r7 I:android.app.Activity)\l  (r8 I:java.lang.String[])\l  (r2 I:int)\l android.support.v4.app.ActivityCompat.requestPermissions(android.app.Activity, java.lang.String[], int):void type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.android.core.permissions.PermissionsManager.requestPermissions((r6 'this' I:com.mapbox.android.core.permissions.PermissionsManager A[IMMUTABLE_TYPE, THIS]), (r7 I:android.app.Activity A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

