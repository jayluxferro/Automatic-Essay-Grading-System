digraph "CFG forcom.mapbox.android.core.location.AndroidLocationEngine.getLocationEngine(Landroid\/content\/Context;)Lcom\/mapbox\/android\/core\/location\/LocationEngine;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_CLASS  (r0 I:java.lang.Class\<com.mapbox.android.core.location.AndroidLocationEngine\>) =  com.mapbox.android.core.location.AndroidLocationEngine.class \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: NEW_INSTANCE  (r1 I:com.mapbox.android.core.location.AndroidLocationEngine) =  com.mapbox.android.core.location.AndroidLocationEngine A[Catch:\{ all \-\> 0x000e \}, TRY_ENTER]\l0x0005: INVOKE  (r2 I:android.content.Context) = (r2 I:android.content.Context) android.content.Context.getApplicationContext():android.content.Context type: VIRTUAL A[Catch:\{ all \-\> 0x000e \}]\l0x0009: INVOKE  \l  (r1 I:com.mapbox.android.core.location.AndroidLocationEngine)\l  (r2 I:android.content.Context)\l com.mapbox.android.core.location.AndroidLocationEngine.\<init\>(android.content.Context):void type: DIRECT A[Catch:\{ all \-\> 0x000e \}, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: RETURN  (r1 I:com.mapbox.android.core.location.LocationEngine) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x000e: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{static synchronized com.mapbox.android.core.location.LocationEngine com.mapbox.android.core.location.AndroidLocationEngine.getLocationEngine((r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

