digraph "CFG forcom.mapbox.android.core.location.GoogleLocationEngine.requestLocationUpdates()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.google.android.gms.location.LocationRequest) =  com.google.android.gms.location.LocationRequest.create():com.google.android.gms.location.LocationRequest type: STATIC \l0x0004: IGET  (r1 I:java.lang.Integer) = \l  (r3 I:com.mapbox.android.core.location.GoogleLocationEngine)\l com.mapbox.android.core.location.GoogleLocationEngine.interval java.lang.Integer \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r1 I:java.lang.Integer) = \l  (r3 I:com.mapbox.android.core.location.GoogleLocationEngine)\l com.mapbox.android.core.location.GoogleLocationEngine.interval java.lang.Integer \l0x000a: INVOKE  (r1 I:int) = (r1 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x000e: CAST  (r1 I:long) = (long) (r1 I:int) \l0x000f: INVOKE  \l  (r0 I:com.google.android.gms.location.LocationRequest)\l  (r1 I:long)\l com.google.android.gms.location.LocationRequest.setInterval(long):com.google.android.gms.location.LocationRequest type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IGET  (r1 I:java.lang.Integer) = \l  (r3 I:com.mapbox.android.core.location.GoogleLocationEngine)\l com.mapbox.android.core.location.GoogleLocationEngine.fastestInterval java.lang.Integer \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0020 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IGET  (r1 I:java.lang.Integer) = \l  (r3 I:com.mapbox.android.core.location.GoogleLocationEngine)\l com.mapbox.android.core.location.GoogleLocationEngine.fastestInterval java.lang.Integer \l0x0018: INVOKE  (r1 I:int) = (r1 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x001c: CAST  (r1 I:long) = (long) (r1 I:int) \l0x001d: INVOKE  \l  (r0 I:com.google.android.gms.location.LocationRequest)\l  (r1 I:long)\l com.google.android.gms.location.LocationRequest.setFastestInterval(long):com.google.android.gms.location.LocationRequest type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: IGET  (r1 I:java.lang.Float) = \l  (r3 I:com.mapbox.android.core.location.GoogleLocationEngine)\l com.mapbox.android.core.location.GoogleLocationEngine.smallestDisplacement java.lang.Float \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002d \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: IGET  (r1 I:java.lang.Float) = \l  (r3 I:com.mapbox.android.core.location.GoogleLocationEngine)\l com.mapbox.android.core.location.GoogleLocationEngine.smallestDisplacement java.lang.Float \l0x0026: INVOKE  (r1 I:float) = (r1 I:java.lang.Float) java.lang.Float.floatValue():float type: VIRTUAL \l0x002a: INVOKE  \l  (r0 I:com.google.android.gms.location.LocationRequest)\l  (r1 I:float)\l com.google.android.gms.location.LocationRequest.setSmallestDisplacement(float):com.google.android.gms.location.LocationRequest type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: INVOKE  \l  (r3 I:com.mapbox.android.core.location.GoogleLocationEngine)\l  (r0 I:com.google.android.gms.location.LocationRequest)\l com.mapbox.android.core.location.GoogleLocationEngine.updateRequestPriority(com.google.android.gms.location.LocationRequest):void type: DIRECT \l0x0030: IGET  (r1 I:com.google.android.gms.common.api.GoogleApiClient) = \l  (r3 I:com.mapbox.android.core.location.GoogleLocationEngine)\l com.mapbox.android.core.location.GoogleLocationEngine.googleApiClient com.google.android.gms.common.api.GoogleApiClient \l0x0032: INVOKE  (r1 I:boolean) = (r1 I:com.google.android.gms.common.api.GoogleApiClient) com.google.android.gms.common.api.GoogleApiClient.isConnected():boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003f \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: SGET  (r1 I:com.google.android.gms.location.FusedLocationProviderApi) =  com.google.android.gms.location.LocationServices.FusedLocationApi com.google.android.gms.location.FusedLocationProviderApi \l0x003a: IGET  (r2 I:com.google.android.gms.common.api.GoogleApiClient) = \l  (r3 I:com.mapbox.android.core.location.GoogleLocationEngine)\l com.mapbox.android.core.location.GoogleLocationEngine.googleApiClient com.google.android.gms.common.api.GoogleApiClient \l0x003c: INVOKE  \l  (r1 I:com.google.android.gms.location.FusedLocationProviderApi)\l  (r2 I:com.google.android.gms.common.api.GoogleApiClient)\l  (r0 I:com.google.android.gms.location.LocationRequest)\l  (r3 I:com.google.android.gms.location.LocationListener)\l com.google.android.gms.location.FusedLocationProviderApi.requestLocationUpdates(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.location.LocationRequest, com.google.android.gms.location.LocationListener):com.google.android.gms.common.api.PendingResult type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|0x003f: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.android.core.location.GoogleLocationEngine.requestLocationUpdates((r3 'this' I:com.mapbox.android.core.location.GoogleLocationEngine A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
}

