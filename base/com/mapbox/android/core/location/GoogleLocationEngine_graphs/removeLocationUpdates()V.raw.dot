digraph "CFG forcom.mapbox.android.core.location.GoogleLocationEngine.removeLocationUpdates()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.google.android.gms.common.api.GoogleApiClient) = \l  (r2 I:com.mapbox.android.core.location.GoogleLocationEngine)\l com.mapbox.android.core.location.GoogleLocationEngine.googleApiClient com.google.android.gms.common.api.GoogleApiClient \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:com.google.android.gms.common.api.GoogleApiClient) com.google.android.gms.common.api.GoogleApiClient.isConnected():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: SGET  (r0 I:com.google.android.gms.location.FusedLocationProviderApi) =  com.google.android.gms.location.LocationServices.FusedLocationApi com.google.android.gms.location.FusedLocationProviderApi \l0x000a: IGET  (r1 I:com.google.android.gms.common.api.GoogleApiClient) = \l  (r2 I:com.mapbox.android.core.location.GoogleLocationEngine)\l com.mapbox.android.core.location.GoogleLocationEngine.googleApiClient com.google.android.gms.common.api.GoogleApiClient \l0x000c: INVOKE  \l  (r0 I:com.google.android.gms.location.FusedLocationProviderApi)\l  (r1 I:com.google.android.gms.common.api.GoogleApiClient)\l  (r2 I:com.google.android.gms.location.LocationListener)\l com.google.android.gms.location.FusedLocationProviderApi.removeLocationUpdates(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.location.LocationListener):com.google.android.gms.common.api.PendingResult type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.android.core.location.GoogleLocationEngine.removeLocationUpdates((r2 'this' I:com.mapbox.android.core.location.GoogleLocationEngine A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

