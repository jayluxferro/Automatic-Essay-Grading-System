digraph "CFG forcom.mapbox.android.telemetry.TelemetryService.registerTelemetryReceiver()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.content.Context) = (r4 I:com.mapbox.android.telemetry.TelemetryService) com.mapbox.android.telemetry.TelemetryService.getApplicationContext():android.content.Context type: VIRTUAL \l0x0004: INVOKE  (r0 I:android.support.v4.content.LocalBroadcastManager) = (r0 I:android.content.Context) android.support.v4.content.LocalBroadcastManager.getInstance(android.content.Context):android.support.v4.content.LocalBroadcastManager type: STATIC \l0x0008: IGET  (r1 I:com.mapbox.android.telemetry.TelemetryReceiver) = (r4 I:com.mapbox.android.telemetry.TelemetryService) com.mapbox.android.telemetry.TelemetryService.telemetryReceiver com.mapbox.android.telemetry.TelemetryReceiver \l0x000a: NEW_INSTANCE  (r2 I:android.content.IntentFilter) =  android.content.IntentFilter \l0x000c: CONST_STR  (r3 I:java.lang.String) =  \"com.mapbox.telemetry_receiver\" \l0x000e: INVOKE  \l  (r2 I:android.content.IntentFilter)\l  (r3 I:java.lang.String)\l android.content.IntentFilter.\<init\>(java.lang.String):void type: DIRECT \l0x0011: INVOKE  \l  (r0 I:android.support.v4.content.LocalBroadcastManager)\l  (r1 I:android.content.BroadcastReceiver)\l  (r2 I:android.content.IntentFilter)\l android.support.v4.content.LocalBroadcastManager.registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter):void type: VIRTUAL \l0x0014: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0015: IPUT  \l  (r0 I:boolean)\l  (r4 I:com.mapbox.android.telemetry.TelemetryService)\l com.mapbox.android.telemetry.TelemetryService.isTelemetryReceiverRegistered boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.android.telemetry.TelemetryService.registerTelemetryReceiver((r4 'this' I:com.mapbox.android.telemetry.TelemetryService A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

