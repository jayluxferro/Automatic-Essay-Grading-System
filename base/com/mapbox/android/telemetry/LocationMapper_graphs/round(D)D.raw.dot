digraph "CFG forcom.mapbox.android.telemetry.LocationMapper.round(D)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.math.BigDecimal) =  java.math.BigDecimal \l0x0002: INVOKE  (r0 I:java.math.BigDecimal), (r2 I:double) java.math.BigDecimal.\<init\>(double):void type: DIRECT \l0x0005: CONST  (r2 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l0x0006: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: INVOKE  (r2 I:java.math.BigDecimal) = (r0 I:java.math.BigDecimal), (r2 I:int), (r3 I:int) java.math.BigDecimal.setScale(int, int):java.math.BigDecimal type: VIRTUAL \l0x000b: INVOKE  (r2 I:double) = (r2 I:java.math.BigDecimal) java.math.BigDecimal.doubleValue():double type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN  (r2 I:double) \l}"];
MethodNode[shape=record,label="{private double com.mapbox.android.telemetry.LocationMapper.round((r1 'this' I:com.mapbox.android.telemetry.LocationMapper A[IMMUTABLE_TYPE, THIS]), (r2 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

