digraph "CFG forcom.mapbox.android.telemetry.AlarmSchedulerFlusher.unregister()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.manager.cancel(r2.pendingIntent)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|SYNTHETIC\lSplitter:B:1:0x0007\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IllegalArgumentException \-\> 0x000e \}\lSplitter:B:1:0x0007\l|r2.context.unregisterReceiver(r2.receiver)     \/\/ Catch:\{ IllegalArgumentException \-\> 0x000e \}\l}"];
Node_3 [shape=record,label="{3\:\ ?|SYNTHETIC\lExcHandler: IllegalArgumentException (unused java.lang.IllegalArgumentException)\lSplitter:B:1:0x0007\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.mapbox.android.telemetry.AlarmSchedulerFlusher.unregister((r2v0 'this' com.mapbox.android.telemetry.AlarmSchedulerFlusher A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_5;
}

