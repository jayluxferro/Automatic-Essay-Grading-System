digraph "CFG forcom.mapbox.android.telemetry.StagingServerInformation.obtainServerInformation(Landroid\/os\/Bundle;)Lcom\/mapbox\/android\/telemetry\/ServerInformation;" {
subgraph cluster_Region_1700410629 {
label = "R(2:0|(2:(1:7)|(1:5)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String java.lang.String r0 = r4.getString(KEY_META_DATA_STAGING_SERVER)\ljava.lang.String java.lang.String r1 = r4.getString(KEY_META_DATA_STAGING_ACCESS_TOKEN)\l}"];
subgraph cluster_Region_316334756 {
label = "R(2:(1:7)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_512466700 {
label = "IF [B:1:0x0010, B:3:0x0016] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0010|if (com.mapbox.android.telemetry.TelemetryUtils.isEmpty(r0) == true) goto L_0x001d\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|ADDED_TO_REGION\l|if (com.mapbox.android.telemetry.TelemetryUtils.isEmpty(r1) == true) goto L_0x001d\l}"];
subgraph cluster_Region_468131961 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0023|RETURN\l|return r3.chain.obtainServerInformation(r4)\l}"];
}
}
subgraph cluster_Region_303264994 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001c|RETURN\l|return obtainStagingServerInformation(r0, r1)\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0012}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0018}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001d}"];
MethodNode[shape=record,label="{public com.mapbox.android.telemetry.ServerInformation com.mapbox.android.telemetry.StagingServerInformation.obtainServerInformation((r3v0 'this' com.mapbox.android.telemetry.StagingServerInformation A[IMMUTABLE_TYPE, THIS]), (r4v0 android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

