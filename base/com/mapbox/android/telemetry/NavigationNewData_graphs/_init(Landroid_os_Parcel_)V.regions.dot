digraph "CFG forcom.mapbox.android.telemetry.NavigationNewData.\<init\>(Landroid\/os\/Parcel;)V" {
subgraph cluster_Region_745340094 {
label = "R(3:(1:2)(1:3)|(1:6)(1:7)|8)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1922535244 {
label = "IF [B:1:0x0008] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r3.readByte() == 0) goto L_0x000a\l}"];
subgraph cluster_Region_2093696709 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|r2.newDistanceRemaining = null\l}"];
}
subgraph cluster_Region_2023561731 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000d|r2.newDistanceRemaining = java.lang.Integer.valueOf(r3.readInt())\l}"];
}
}
subgraph cluster_IfRegion_861900962 {
label = "IF [B:5:0x001b] THEN: R(1:6) ELSE: R(1:7)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001b|if (r3.readByte() == 0) goto L_0x001d\l}"];
subgraph cluster_Region_2113705066 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001d|r2.newDurationRemaining = null\l}"];
}
subgraph cluster_Region_1537673342 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0020|r2.newDurationRemaining = java.lang.Integer.valueOf(r3.readInt())\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x002a|r2.newGeometry = r3.readString()\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0017}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0030}"];
MethodNode[shape=record,label="{private void com.mapbox.android.telemetry.NavigationNewData.\<init\>((r2v0 'this' com.mapbox.android.telemetry.NavigationNewData A[IMMUTABLE_TYPE, THIS]), (r3v0 android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_0 -> Node_1;
Node_4 -> Node_5;
}

