digraph "CFG forcom.mapbox.android.telemetry.NavigationNewData.writeToParcel(Landroid\/os\/Parcel;I)V" {
subgraph cluster_Region_457456640 {
label = "R(3:(1:2)(1:3)|(1:6)(1:7)|8)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1251936673 {
label = "IF [B:1:0x0004] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r2.newDistanceRemaining == null) goto L_0x0006\l}"];
subgraph cluster_Region_1080119183 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|r3.writeByte((byte) 0)\l}"];
}
subgraph cluster_Region_1326924917 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|r3.writeByte((byte) 1)\lr3.writeInt(r2.newDistanceRemaining.intValue())\l}"];
}
}
subgraph cluster_IfRegion_1963578795 {
label = "IF [B:5:0x0018] THEN: R(1:6) ELSE: R(1:7)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r2.newDurationRemaining == null) goto L_0x001a\l}"];
subgraph cluster_Region_1206458538 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001a|r3.writeByte((byte) 0)\l}"];
}
subgraph cluster_Region_230566639 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001e|r3.writeByte((byte) 1)\lr3.writeInt(r2.newDurationRemaining.intValue())\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x002a|r3.writeString(r2.newGeometry)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0016}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002f}"];
MethodNode[shape=record,label="{public void com.mapbox.android.telemetry.NavigationNewData.writeToParcel((r2v0 'this' com.mapbox.android.telemetry.NavigationNewData A[IMMUTABLE_TYPE, THIS]), (r3v0 android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_0 -> Node_1;
Node_4 -> Node_5;
}

