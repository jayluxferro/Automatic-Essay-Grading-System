digraph "CFG forcom.mapbox.android.telemetry.CertificateBlacklist.retrieveLastUpdateTime()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.content.Context) = (r3 I:com.mapbox.android.telemetry.CertificateBlacklist) com.mapbox.android.telemetry.CertificateBlacklist.context android.content.Context \l0x0002: INVOKE  (r0 I:java.io.File) = (r0 I:android.content.Context) android.content.Context.getFilesDir():java.io.File type: VIRTUAL \l0x0006: NEW_INSTANCE  (r1 I:java.io.File) =  java.io.File \l0x0008: CONST_STR  (r2 I:java.lang.String) =  \"MapboxBlacklist\" \l0x000a: INVOKE  \l  (r1 I:java.io.File)\l  (r0 I:java.io.File)\l  (r2 I:java.lang.String)\l java.io.File.\<init\>(java.io.File, java.lang.String):void type: DIRECT \l0x000d: INVOKE  (r0 I:boolean) = (r1 I:java.io.File) java.io.File.exists():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0033 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|SYNTHETIC\lSplitter:B:2:0x0013\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0013\l|0x0013: INVOKE  (r0 I:java.util.List) = \l  (r3 I:com.mapbox.android.telemetry.CertificateBlacklist)\l  (r1 I:java.io.File)\l com.mapbox.android.telemetry.CertificateBlacklist.obtainBlacklistContents(java.io.File):java.util.List type: DIRECT A[Catch:\{ IOException \-\> 0x0027 \}, TRY_ENTER]\l0x0017: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x0027 \}]\l0x0018: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE A[Catch:\{ IOException \-\> 0x0027 \}]\l0x001c: CHECK_CAST  (r0 I:java.lang.String) = (java.lang.String) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x0027 \}]\l0x001e: INVOKE  (r0 I:java.lang.Long) = (r0 I:java.lang.String) java.lang.Long.valueOf(java.lang.String):java.lang.Long type: STATIC A[Catch:\{ IOException \-\> 0x0027 \}]\l0x0022: INVOKE  (r0 I:long) = (r0 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL A[Catch:\{ IOException \-\> 0x0027 \}]\l0x0025: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|ExcHandler: IOException null\lSplitter:B:2:0x0013\l|0x0027: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: IGET  (r1 I:com.mapbox.android.telemetry.Logger) = (r3 I:com.mapbox.android.telemetry.CertificateBlacklist) com.mapbox.android.telemetry.CertificateBlacklist.logger com.mapbox.android.telemetry.Logger \l0x002a: CONST_STR  (r2 I:java.lang.String) =  \"Unable to retrieve last update time from blacklist\" \l0x002c: INVOKE  (r0 I:java.lang.String) = (r0 I:java.io.IOException) java.io.IOException.getMessage():java.lang.String type: VIRTUAL \l0x0030: INVOKE  \l  (r1 I:com.mapbox.android.telemetry.Logger)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.String)\l com.mapbox.android.telemetry.Logger.error(java.lang.String, java.lang.String):int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|0x0033: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0035|0x0035: RETURN  (r0 I:long) \l}"];
MethodNode[shape=record,label="{private long com.mapbox.android.telemetry.CertificateBlacklist.retrieveLastUpdateTime((r3 'this' I:com.mapbox.android.telemetry.CertificateBlacklist A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

