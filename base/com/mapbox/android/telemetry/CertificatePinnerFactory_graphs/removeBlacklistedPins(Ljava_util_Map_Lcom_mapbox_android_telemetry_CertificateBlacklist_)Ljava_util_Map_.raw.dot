digraph "CFG forcom.mapbox.android.telemetry.CertificatePinnerFactory.removeBlacklistedPins(Ljava\/util\/Map;Lcom\/mapbox\/android\/telemetry\/CertificateBlacklist;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:java.util.List) = (r4 I:com.mapbox.android.telemetry.CertificateBlacklist) com.mapbox.android.telemetry.CertificateBlacklist.retrieveBlackList():java.util.List type: VIRTUAL \l0x0004: INVOKE  (r0 I:boolean) = (r4 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: RETURN  \l  (r3 I:java.util.Map\<java.lang.String, java.util.List\<java.lang.String\>\>)\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: INVOKE  (r0 I:java.lang.String) = \l  (r2 I:com.mapbox.android.telemetry.CertificatePinnerFactory)\l  (r3 I:java.util.Map)\l com.mapbox.android.telemetry.CertificatePinnerFactory.retrievePinKey(java.util.Map):java.lang.String type: DIRECT \l0x000f: INVOKE  (r1 I:java.lang.Object) = (r3 I:java.util.Map), (r0 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0013: CHECK_CAST  (r1 I:java.util.List) = (java.util.List) (r1 I:?[OBJECT, ARRAY]) \l0x0015: INVOKE  (r4 I:java.util.List) = \l  (r2 I:com.mapbox.android.telemetry.CertificatePinnerFactory)\l  (r4 I:java.util.List)\l  (r1 I:java.util.List)\l com.mapbox.android.telemetry.CertificatePinnerFactory.removeBlaklistedHashes(java.util.List, java.util.List):java.util.List type: DIRECT \l0x0019: INVOKE  \l  (r3 I:java.util.Map)\l  (r0 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: RETURN  \l  (r3 I:java.util.Map\<java.lang.String, java.util.List\<java.lang.String\>\>)\l \l}"];
MethodNode[shape=record,label="{private java.util.Map\<java.lang.String, java.util.List\<java.lang.String\>\> com.mapbox.android.telemetry.CertificatePinnerFactory.removeBlacklistedPins((r2 'this' I:com.mapbox.android.telemetry.CertificatePinnerFactory A[IMMUTABLE_TYPE, THIS]), (r3 I:java.util.Map\<java.lang.String, java.util.List\<java.lang.String\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.mapbox.android.telemetry.CertificateBlacklist A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;\>;, Lcom\/mapbox\/android\/telemetry\/CertificateBlacklist;, ), Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

