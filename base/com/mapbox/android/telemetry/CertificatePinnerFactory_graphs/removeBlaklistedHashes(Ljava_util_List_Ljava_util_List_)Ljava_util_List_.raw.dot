digraph "CFG forcom.mapbox.android.telemetry.CertificatePinnerFactory.removeBlaklistedHashes(Ljava\/util\/List;Ljava\/util\/List;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.util.Iterator) = (r5 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001a \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x000e: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) \l0x0010: INVOKE  (r2 I:boolean) = (r4 I:java.util.List), (r1 I:java.lang.Object) java.util.List.contains(java.lang.Object):boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0004 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: INVOKE  (r5 I:java.util.List), (r1 I:java.lang.Object) java.util.List.remove(java.lang.Object):boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: RETURN  (r5 I:java.util.List\<java.lang.String\>) \l}"];
MethodNode[shape=record,label="{private java.util.List\<java.lang.String\> com.mapbox.android.telemetry.CertificatePinnerFactory.removeBlaklistedHashes((r3 'this' I:com.mapbox.android.telemetry.CertificatePinnerFactory A[IMMUTABLE_TYPE, THIS]), (r4 I:java.util.List A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.util.List\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;), Ljava\/util\/List\<, Ljava\/lang\/String;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_1;
}

