digraph "CFG forcom.mapbox.android.telemetry.CertificatePinnerFactory.addCertificatesPins(Ljava\/util\/Map;Lokhttp3\/CertificatePinner$Builder;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r7 I:java.util.Set) = (r7 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x0004: INVOKE  (r7 I:java.util.Iterator) = (r7 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: INVOKE  (r0 I:boolean) = (r7 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x003a \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: INVOKE  (r0 I:java.lang.Object) = (r7 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0012: CHECK_CAST  (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:?[OBJECT, ARRAY]) \l0x0014: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x0018: CHECK_CAST  (r1 I:java.util.List) = (java.util.List) (r1 I:?[OBJECT, ARRAY]) \l0x001a: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0008 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0028: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x002a: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x002e: CHECK_CAST  (r3 I:java.lang.String) = (java.lang.String) (r3 I:?[OBJECT, ARRAY]) \l0x0030: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0031: NEW_ARRAY  (r4 I:java.lang.String[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x0033: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0034: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0036: INVOKE  \l  (r8 I:okhttp3.CertificatePinner$Builder)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String[])\l okhttp3.CertificatePinner.Builder.add(java.lang.String, java.lang.String[]):okhttp3.CertificatePinner$Builder type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x003a|0x003a: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.android.telemetry.CertificatePinnerFactory.addCertificatesPins((r6 'this' I:com.mapbox.android.telemetry.CertificatePinnerFactory A[IMMUTABLE_TYPE, THIS]), (r7 I:java.util.Map\<java.lang.String, java.util.List\<java.lang.String\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:okhttp3.CertificatePinner$Builder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;\>;, Lokhttp3\/CertificatePinner$Builder;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_5 -> Node_6[style=dashed];
Node_6 -> Node_4;
}

