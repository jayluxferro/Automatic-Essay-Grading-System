digraph "CFG forcom.mapbox.android.telemetry.MapboxTelemetry.sendEventIfWhitelisted(Lcom\/mapbox\/android\/telemetry\/Event;)Z" {
subgraph cluster_Region_998758912 {
label = "R(1:(2:2|3)(1:(1:8)(2:6|7)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1711434459 {
label = "IF [B:1:0x000a] THEN: R(2:2|3) ELSE: R(1:(1:8)(2:6|7))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|if (com.mapbox.android.telemetry.Event.Type.TURNSTILE.equals(r3.obtainType()) == true) goto L_0x000c\l}"];
subgraph cluster_Region_1965176357 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000c|java.util.ArrayList java.util.ArrayList r0 = new java.util.ArrayList(1)\lr0.add(r3)\lsendEventsIfPossible(r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|RETURN\l|return true\l}"];
}
subgraph cluster_Region_347861186 {
label = "R(1:(1:8)(2:6|7)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_49829334 {
label = "IF [B:5:0x0023] THEN: R(1:8) ELSE: R(2:6|7) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0023|if (com.mapbox.android.telemetry.Event.Type.VIS_ATTACHMENT.equals(r3.obtainType()) != true) goto L_?\l}"];
subgraph cluster_Region_128637011 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
subgraph cluster_Region_1913339599 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0025|sendAttachment(r3)\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0019}"];
MethodNode[shape=record,label="{private boolean com.mapbox.android.telemetry.MapboxTelemetry.sendEventIfWhitelisted((r2v0 'this' com.mapbox.android.telemetry.MapboxTelemetry A[IMMUTABLE_TYPE, THIS]), (r3v0 com.mapbox.android.telemetry.Event A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_4 -> Node_5;
}

