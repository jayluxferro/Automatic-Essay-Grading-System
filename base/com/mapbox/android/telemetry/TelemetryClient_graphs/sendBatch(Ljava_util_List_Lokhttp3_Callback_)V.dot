digraph "CFG forcom.mapbox.android.telemetry.TelemetryClient.sendBatch(Ljava\/util\/List;Lokhttp3\/Callback;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r0 = configureGsonBuilder().create().toJson((java.lang.Object) r10)\lokhttp3.RequestBody r1 = okhttp3.RequestBody.create(JSON, r0)\lokhttp3.HttpUrl r2 = r9.setting.getBaseUrl().newBuilder(EVENTS_ENDPOINT).addQueryParameter(ACCESS_TOKEN_QUERY_PARAMETER, r9.accessToken).build()\l}"];
Node_1 [shape=record,label="{1\:\ 0x002e|if (isExtraDebuggingNeeded() == false) goto L_0x0058\l}"];
Node_2 [shape=record,label="{2\:\ 0x0030|com.mapbox.android.telemetry.Logger r3 = r9.logger\ljava.util.Locale r5 = java.util.Locale.US\ljava.lang.Object[] r7 = new java.lang.Object[]\{r2, java.lang.Integer.valueOf(r10.size()), r9.userAgent, r0\}\lr3.debug(LOG_TAG, java.lang.String.format(r5, EXTRA_DEBUGGING_LOG, r7))\l}"];
Node_3 [shape=record,label="{3\:\ 0x0058|okhttp3.Request r10 = new okhttp3.Request.Builder().url(r2).header(\"User\-Agent\", r9.userAgent).post(r1).build()\lr9.setting.getClient(r9.certificateBlacklist).newCall(r10).enqueue(r11)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0080|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.mapbox.android.telemetry.TelemetryClient.sendBatch((r9v0 'this' com.mapbox.android.telemetry.TelemetryClient A[IMMUTABLE_TYPE, THIS]), (r10v0 java.util.List\<com.mapbox.android.telemetry.Event\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 okhttp3.Callback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lcom\/mapbox\/android\/telemetry\/Event;, \>;, Lokhttp3\/Callback;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

