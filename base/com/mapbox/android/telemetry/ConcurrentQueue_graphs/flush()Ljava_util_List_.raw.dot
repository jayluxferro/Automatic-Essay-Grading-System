digraph "CFG forcom.mapbox.android.telemetry.ConcurrentQueue.flush()Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: IGET  (r1 I:int) = (r4 I:com.mapbox.android.telemetry.ConcurrentQueue) com.mapbox.android.telemetry.ConcurrentQueue.count int \l0x0004: INVOKE  (r0 I:java.util.ArrayList), (r1 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x0007: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IGET  (r3 I:int) = (r4 I:com.mapbox.android.telemetry.ConcurrentQueue) com.mapbox.android.telemetry.ConcurrentQueue.count int \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:4:0x0019 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IGET  (r3 I:java.util.Queue\<T\>) = (r4 I:com.mapbox.android.telemetry.ConcurrentQueue) com.mapbox.android.telemetry.ConcurrentQueue.queue java.util.Queue \l0x000f: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.Queue) java.util.Queue.remove():java.lang.Object type: INTERFACE \l0x0013: INVOKE  (r0 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0016: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: IPUT  \l  (r1 I:int)\l  (r4 I:com.mapbox.android.telemetry.ConcurrentQueue)\l com.mapbox.android.telemetry.ConcurrentQueue.count int \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: RETURN  (r0 I:java.util.List\<T\>) \l}"];
MethodNode[shape=record,label="{java.util.List\<T\> com.mapbox.android.telemetry.ConcurrentQueue.flush((r4 'this' I:com.mapbox.android.telemetry.ConcurrentQueue A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

