digraph "CFG forcom.mapbox.android.telemetry.TelemetryEnabler.updatePreferences(Lcom\/mapbox\/android\/telemetry\/TelemetryEnabler$State;)Lcom\/mapbox\/android\/telemetry\/TelemetryEnabler$State;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r1 I:com.mapbox.android.telemetry.TelemetryEnabler) com.mapbox.android.telemetry.TelemetryEnabler.isFromPreferences boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r2 I:com.mapbox.android.telemetry.TelemetryEnabler$State) = (r2 I:com.mapbox.android.telemetry.TelemetryEnabler$State) com.mapbox.android.telemetry.TelemetryEnabler.updateTelemetryState(com.mapbox.android.telemetry.TelemetryEnabler$State):com.mapbox.android.telemetry.TelemetryEnabler$State type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: RETURN  (r2 I:com.mapbox.android.telemetry.TelemetryEnabler$State) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IPUT  \l  (r2 I:com.mapbox.android.telemetry.TelemetryEnabler$State)\l  (r1 I:com.mapbox.android.telemetry.TelemetryEnabler)\l com.mapbox.android.telemetry.TelemetryEnabler.currentTelemetryState com.mapbox.android.telemetry.TelemetryEnabler$State \l0x000b: IGET  (r2 I:com.mapbox.android.telemetry.TelemetryEnabler$State) = (r1 I:com.mapbox.android.telemetry.TelemetryEnabler) com.mapbox.android.telemetry.TelemetryEnabler.currentTelemetryState com.mapbox.android.telemetry.TelemetryEnabler$State \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: RETURN  (r2 I:com.mapbox.android.telemetry.TelemetryEnabler$State) \l}"];
MethodNode[shape=record,label="{com.mapbox.android.telemetry.TelemetryEnabler$State com.mapbox.android.telemetry.TelemetryEnabler.updatePreferences((r1 'this' I:com.mapbox.android.telemetry.TelemetryEnabler A[IMMUTABLE_TYPE, THIS]), (r2 I:com.mapbox.android.telemetry.TelemetryEnabler$State A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

