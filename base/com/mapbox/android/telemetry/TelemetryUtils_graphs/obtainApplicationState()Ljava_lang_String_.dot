digraph "CFG forcom.mapbox.android.telemetry.TelemetryUtils.obtainApplicationState()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.List r0 = ((android.app.ActivityManager) com.mapbox.android.telemetry.MapboxTelemetry.applicationContext.getSystemService(\"activity\")).getRunningAppProcesses()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r0 != null) goto L_0x0013\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|RETURN\l|return \"\"\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|java.lang.String r1 = com.mapbox.android.telemetry.MapboxTelemetry.applicationContext.getPackageName()\ljava.util.Iterator r0 = r0.iterator()\l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|LOOP_START\lLOOP:0: B:4:0x001d\-\>B:12:0x001d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|if (r0.hasNext() == false) goto L_0x003a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|android.app.ActivityManager$RunningAppProcessInfo r2 = r0.next()\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|if (r2.importance != 100) goto L_0x001d\l}"];
Node_8 [shape=record,label="{8\:\ 0x002f}"];
Node_9 [shape=record,label="{9\:\ 0x0035|if (r2.processName.equals(r1) == false) goto L_0x001d\l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|RETURN\l|return FOREGROUND\l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|RETURN\l|return BACKGROUND\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|LOOP_END\lSYNTHETIC\lLOOP:0: B:4:0x001d\-\>B:12:0x001d\l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x001d|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x001d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static java.lang.String com.mapbox.android.telemetry.TelemetryUtils.obtainApplicationState() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_14[style=dashed];
Node_9 -> Node_16;
Node_12 -> Node_4;
Node_13 -> Node_11;
Node_14 -> Node_10;
Node_15 -> Node_12;
Node_16 -> Node_12;
}

