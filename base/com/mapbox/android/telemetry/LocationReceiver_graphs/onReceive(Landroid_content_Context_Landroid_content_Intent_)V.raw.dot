digraph "CFG forcom.mapbox.android.telemetry.LocationReceiver.onReceive(Landroid\/content\/Context;Landroid\/content\/Intent;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r2 I:java.lang.String) =  \"location_received\" \l0x0002: INVOKE  (r2 I:java.lang.String) = (r3 I:android.content.Intent), (r2 I:java.lang.String) android.content.Intent.getStringExtra(java.lang.String):java.lang.String type: VIRTUAL \l0x0006: CONST_STR  (r0 I:java.lang.String) =  \"onLocation\" \l0x0008: INVOKE  (r2 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: INVOKE  (r2 I:android.os.Bundle) = (r3 I:android.content.Intent) android.content.Intent.getExtras():android.os.Bundle type: VIRTUAL \l0x0012: CONST_STR  (r3 I:java.lang.String) =  \"location\" \l0x0014: INVOKE  (r2 I:java.lang.Object) = (r2 I:android.os.Bundle), (r3 I:java.lang.String) android.os.Bundle.get(java.lang.String):java.lang.Object type: VIRTUAL \l0x0018: CHECK_CAST  (r2 I:android.location.Location) = (android.location.Location) (r2 I:?[OBJECT, ARRAY]) \l0x001a: INVOKE  \l  (r1 I:com.mapbox.android.telemetry.LocationReceiver)\l  (r2 I:android.location.Location)\l com.mapbox.android.telemetry.LocationReceiver.sendEvent(android.location.Location):boolean type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.android.telemetry.LocationReceiver.onReceive((r1 'this' I:com.mapbox.android.telemetry.LocationReceiver A[IMMUTABLE_TYPE, THIS]), (r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.content.Intent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

