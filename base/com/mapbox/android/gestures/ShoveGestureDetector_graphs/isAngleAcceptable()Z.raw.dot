digraph "CFG forcom.mapbox.android.gestures.ShoveGestureDetector.isAngleAcceptable()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.HashMap) = (r8 I:com.mapbox.android.gestures.ShoveGestureDetector) com.mapbox.android.gestures.ShoveGestureDetector.pointersDistanceMap java.util.HashMap \l0x0002: NEW_INSTANCE  (r1 I:com.mapbox.android.gestures.PointerDistancePair) =  com.mapbox.android.gestures.PointerDistancePair \l0x0004: IGET  (r2 I:java.util.List) = (r8 I:com.mapbox.android.gestures.ShoveGestureDetector) com.mapbox.android.gestures.ShoveGestureDetector.pointerIdList java.util.List \l0x0006: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.List), (r3 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x000b: CHECK_CAST  (r2 I:java.lang.Integer) = (java.lang.Integer) (r2 I:?[OBJECT, ARRAY]) \l0x000d: IGET  (r4 I:java.util.List) = (r8 I:com.mapbox.android.gestures.ShoveGestureDetector) com.mapbox.android.gestures.ShoveGestureDetector.pointerIdList java.util.List \l0x000f: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0010: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.List), (r5 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0014: CHECK_CAST  (r4 I:java.lang.Integer) = (java.lang.Integer) (r4 I:?[OBJECT, ARRAY]) \l0x0016: INVOKE  \l  (r1 I:com.mapbox.android.gestures.PointerDistancePair)\l  (r2 I:java.lang.Integer)\l  (r4 I:java.lang.Integer)\l com.mapbox.android.gestures.PointerDistancePair.\<init\>(java.lang.Integer, java.lang.Integer):void type: DIRECT \l0x0019: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.HashMap), (r1 I:java.lang.Object) java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x001d: CHECK_CAST  (r0 I:com.mapbox.android.gestures.MultiFingerDistancesObject) = (com.mapbox.android.gestures.MultiFingerDistancesObject) (r0 I:?[OBJECT, ARRAY]) \l0x001f: INVOKE  (r1 I:float) = \l  (r0 I:com.mapbox.android.gestures.MultiFingerDistancesObject)\l com.mapbox.android.gestures.MultiFingerDistancesObject.getCurrFingersDiffY():float type: VIRTUAL \l0x0023: CAST  (r1 I:double) = (double) (r1 I:float) \l0x0024: INVOKE  (r0 I:float) = \l  (r0 I:com.mapbox.android.gestures.MultiFingerDistancesObject)\l com.mapbox.android.gestures.MultiFingerDistancesObject.getCurrFingersDiffX():float type: VIRTUAL \l0x0028: CAST  (r6 I:double) = (double) (r0 I:float) \l0x0029: INVOKE  (r0 I:double) = (r1 I:double), (r6 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x002d: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0031: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.toDegrees(double):double type: STATIC \l0x0035: IGET  (r2 I:float) = (r8 I:com.mapbox.android.gestures.ShoveGestureDetector) com.mapbox.android.gestures.ShoveGestureDetector.maxShoveAngle float \l0x0037: CAST  (r6 I:double) = (double) (r2 I:float) \l0x0038: CMP_G  (r2 I:int) = (r0 I:double), (r6 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x003a|0x003a: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:4:0x0049 \l}"];
Node_2 [shape=record,label="{2\:\ 0x003c|0x003c: CONST  (r6 I:?[long, double]) = \l  (4640537203540230144(0x4066800000000000, double:180.0) ?[long, double])\l \l0x0041: ARITH  (r6 I:double) = (r6 I:double) \- (r0 I:double) \l0x0042: IGET  (r0 I:float) = (r8 I:com.mapbox.android.gestures.ShoveGestureDetector) com.mapbox.android.gestures.ShoveGestureDetector.maxShoveAngle float \l0x0044: CAST  (r0 I:double) = (double) (r0 I:float) \l0x0045: CMP_G  (r0 I:int) = (r6 I:double), (r0 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0047|0x0047: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:5:0x004a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0049|0x0049: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x004a|0x004a: RETURN  (r3 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean com.mapbox.android.gestures.ShoveGestureDetector.isAngleAcceptable((r8 'this' I:com.mapbox.android.gestures.ShoveGestureDetector A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
}

