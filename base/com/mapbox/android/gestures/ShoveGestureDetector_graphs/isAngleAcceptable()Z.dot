digraph "CFG forcom.mapbox.android.gestures.ShoveGestureDetector.isAngleAcceptable()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.mapbox.android.gestures.MultiFingerDistancesObject r0 = (com.mapbox.android.gestures.MultiFingerDistancesObject) r8.pointersDistanceMap.get(new com.mapbox.android.gestures.PointerDistancePair((java.lang.Integer) r8.pointerIdList.get(0), (java.lang.Integer) r8.pointerIdList.get(1)))\ldouble r0 = java.lang.Math.toDegrees(java.lang.Math.abs(java.lang.Math.atan2((double) r0.getCurrFingersDiffY(), (double) r0.getCurrFingersDiffX())))\l}"];
Node_1 [shape=record,label="{1\:\ 0x003a|if ((r0 \> ((double) r8.maxShoveAngle) ? 1 : (r0 == ((double) r8.maxShoveAngle) ? 0 : \-1)) \<= 0) goto L_0x0049\l}"];
Node_2 [shape=record,label="{2\:\ 0x003c}"];
Node_3 [shape=record,label="{3\:\ 0x0047|if (((180.0d \- r0) \> ((double) r8.maxShoveAngle) ? 1 : ((180.0d \- r0) == ((double) r8.maxShoveAngle) ? 0 : \-1)) \> 0) goto L_?\l}"];
Node_4 [shape=record,label="{4\:\ 0x0049|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{boolean com.mapbox.android.gestures.ShoveGestureDetector.isAngleAcceptable((r8v0 'this' com.mapbox.android.gestures.ShoveGestureDetector A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
}

