digraph "CFG forcom.mapbox.android.gestures.MultiFingerTapGestureDetector.exceededMovementThreshold(Ljava\/util\/HashMap;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:java.util.Collection) = (r6 I:java.util.HashMap) java.util.HashMap.values():java.util.Collection type: VIRTUAL \l0x0004: INVOKE  (r6 I:java.util.Iterator) = (r6 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: INVOKE  (r0 I:boolean) = (r6 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l0x000c: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0044 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: INVOKE  (r0 I:java.lang.Object) = (r6 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0013: CHECK_CAST  (r0 I:com.mapbox.android.gestures.MultiFingerDistancesObject) = (com.mapbox.android.gestures.MultiFingerDistancesObject) (r0 I:?[OBJECT, ARRAY]) \l0x0015: INVOKE  (r2 I:float) = \l  (r0 I:com.mapbox.android.gestures.MultiFingerDistancesObject)\l com.mapbox.android.gestures.MultiFingerDistancesObject.getCurrFingersDiffX():float type: VIRTUAL \l0x0019: INVOKE  (r3 I:float) = \l  (r0 I:com.mapbox.android.gestures.MultiFingerDistancesObject)\l com.mapbox.android.gestures.MultiFingerDistancesObject.getPrevFingersDiffX():float type: VIRTUAL \l0x001d: ARITH  (r2 I:float) = (r2 I:float) \- (r3 I:float) \l0x001e: INVOKE  (r2 I:float) = (r2 I:float) java.lang.Math.abs(float):float type: STATIC \l0x0022: INVOKE  (r3 I:float) = \l  (r0 I:com.mapbox.android.gestures.MultiFingerDistancesObject)\l com.mapbox.android.gestures.MultiFingerDistancesObject.getCurrFingersDiffY():float type: VIRTUAL \l0x0026: INVOKE  (r0 I:float) = \l  (r0 I:com.mapbox.android.gestures.MultiFingerDistancesObject)\l com.mapbox.android.gestures.MultiFingerDistancesObject.getPrevFingersDiffY():float type: VIRTUAL \l0x002a: ARITH  (r3 I:float) = (r3 I:float) \- (r0 I:float) \l0x002b: INVOKE  (r0 I:float) = (r3 I:float) java.lang.Math.abs(float):float type: STATIC \l0x002f: IGET  (r3 I:float) = \l  (r5 I:com.mapbox.android.gestures.MultiFingerTapGestureDetector)\l com.mapbox.android.gestures.MultiFingerTapGestureDetector.multiFingerTapMovementThreshold float \l0x0031: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0032: CMP_L  (r2 I:int) = (r2 I:float), (r3 I:float) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0034|0x0034: IF  (r2 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:7:0x003c \l}"];
Node_5 [shape=record,label="{5\:\ 0x0036|0x0036: IGET  (r2 I:float) = \l  (r5 I:com.mapbox.android.gestures.MultiFingerTapGestureDetector)\l com.mapbox.android.gestures.MultiFingerTapGestureDetector.multiFingerTapMovementThreshold float \l0x0038: CMP_L  (r0 I:int) = (r0 I:float), (r2 I:float) \l}"];
Node_6 [shape=record,label="{6\:\ 0x003a|0x003a: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:8:0x003d \l}"];
Node_7 [shape=record,label="{7\:\ 0x003c|0x003c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x003d|0x003d: IPUT  \l  (r1 I:boolean)\l  (r5 I:com.mapbox.android.gestures.MultiFingerTapGestureDetector)\l com.mapbox.android.gestures.MultiFingerTapGestureDetector.invalidMovement boolean \l0x003f: IGET  (r0 I:boolean) = \l  (r5 I:com.mapbox.android.gestures.MultiFingerTapGestureDetector)\l com.mapbox.android.gestures.MultiFingerTapGestureDetector.invalidMovement boolean \l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|0x0041: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0008 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0043|0x0043: RETURN  (r4 I:boolean) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0044|0x0044: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean com.mapbox.android.gestures.MultiFingerTapGestureDetector.exceededMovementThreshold((r5 'this' I:com.mapbox.android.gestures.MultiFingerTapGestureDetector A[IMMUTABLE_TYPE, THIS]), (r6 I:java.util.HashMap\<com.mapbox.android.gestures.PointerDistancePair, com.mapbox.android.gestures.MultiFingerDistancesObject\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/HashMap\<, Lcom\/mapbox\/android\/gestures\/PointerDistancePair;, Lcom\/mapbox\/android\/gestures\/MultiFingerDistancesObject;, \>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_9 -> Node_10[style=dashed];
}

