digraph "CFG forcom.mapbox.android.gestures.StandardScaleGestureDetector.innerOnScaleBegin(Landroid\/view\/ScaleGestureDetector;)Z" {
subgraph cluster_Region_1785110858 {
label = "R(2:0|(2:(1:8)|(3:2|(1:6)|7)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.startSpan = r3.getCurrentSpan()\l}"];
subgraph cluster_Region_439660904 {
label = "R(2:(1:8)|(3:2|(1:6)|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1782120947 {
label = "IF [B:1:0x000b] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000b|if (canExecute(1) != true) goto L_0x0028\l}"];
subgraph cluster_Region_114652997 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0028|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1508309540 {
label = "R(3:2|(1:6)|7)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000d|r2.velocityTracker = android.view.VelocityTracker.obtain()\l}"];
subgraph cluster_IfRegion_1718005633 {
label = "IF [B:3:0x0018, B:5:0x0022] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0018|ADDED_TO_REGION\l|if (r2.spanSinceStartThreshold == 0.0f) goto L_0x001a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|ADDED_TO_REGION\l|if (((com.mapbox.android.gestures.StandardScaleGestureDetector.StandardOnScaleGestureListener) r2.listener).onScaleBegin(r2) == true) goto L_0x0024\l}"];
subgraph cluster_Region_1156717607 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0024|gestureStarted()\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x0027|RETURN\l|return true\l}"];
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x001a}"];
MethodNode[shape=record,label="{boolean com.mapbox.android.gestures.StandardScaleGestureDetector.innerOnScaleBegin((r2v0 'this' com.mapbox.android.gestures.StandardScaleGestureDetector A[IMMUTABLE_TYPE, THIS]), (r3v0 android.view.ScaleGestureDetector A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_4 -> Node_5;
}

