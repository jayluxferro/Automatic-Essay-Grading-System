digraph "CFG forcom.mapbox.android.gestures.StandardScaleGestureDetector.gestureStopped()V" {
subgraph cluster_Region_406075505 {
label = "R(1:(1:2)(1:(1:6)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2033976848 {
label = "IF [B:1:0x0004] THEN: R(1:2) ELSE: R(1:(1:6)(0))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (isInProgress() == false) goto L_0x0006\l}"];
subgraph cluster_Region_86887708 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|super.gestureStopped()\l}"];
}
subgraph cluster_Region_1354548242 {
label = "R(1:(1:6)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1769114052 {
label = "IF [B:5:0x000c] THEN: R(1:6) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000c|if (r3.stopConfirmed == true) goto L_0x000e\l}"];
subgraph cluster_Region_1894190716 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000e|super.gestureStopped()\l((com.mapbox.android.gestures.StandardScaleGestureDetector.StandardOnScaleGestureListener) r3.listener).onScaleEnd(r3, r3.velocityX, r3.velocityY)\lr3.stopConfirmed = false\l}"];
}
subgraph cluster_Region_457799761 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0009}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000a}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void com.mapbox.android.gestures.StandardScaleGestureDetector.gestureStopped((r3v0 'this' com.mapbox.android.gestures.StandardScaleGestureDetector A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_4 -> Node_5;
}

