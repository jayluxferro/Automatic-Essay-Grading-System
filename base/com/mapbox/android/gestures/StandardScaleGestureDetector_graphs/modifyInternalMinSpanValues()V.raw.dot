digraph "CFG forcom.mapbox.android.gestures.StandardScaleGestureDetector.modifyInternalMinSpanValues()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.view.ScaleGestureDetector) = \l  (r5 I:com.mapbox.android.gestures.StandardScaleGestureDetector)\l com.mapbox.android.gestures.StandardScaleGestureDetector.scaleGestureDetector android.view.ScaleGestureDetector \l0x0002: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x0006: CONST_STR  (r1 I:java.lang.String) =  \"mMinSpan\" \l0x0008: INVOKE  (r0 I:java.lang.reflect.Field) = (r0 I:java.lang.Class), (r1 I:java.lang.String) java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field type: VIRTUAL \l0x000c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: INVOKE  (r0 I:java.lang.reflect.Field), (r1 I:boolean) java.lang.reflect.Field.setAccessible(boolean):void type: VIRTUAL \l0x0010: SGET  (r2 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0012: CONST  (r3 I:?[int, float, short, byte, char]) = (24 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: IF  (r2 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:3:0x002d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: IGET  (r2 I:android.view.ScaleGestureDetector) = \l  (r5 I:com.mapbox.android.gestures.StandardScaleGestureDetector)\l com.mapbox.android.gestures.StandardScaleGestureDetector.scaleGestureDetector android.view.ScaleGestureDetector \l0x0018: IGET  (r3 I:android.content.Context) = \l  (r5 I:com.mapbox.android.gestures.StandardScaleGestureDetector)\l com.mapbox.android.gestures.StandardScaleGestureDetector.context android.content.Context \l0x001a: INVOKE  (r3 I:android.content.res.Resources) = (r3 I:android.content.Context) android.content.Context.getResources():android.content.res.Resources type: VIRTUAL \l0x001e: SGET  (r4 I:int) =  com.mapbox.android.gestures.R.dimen.mapbox_internalScaleMinSpan24 int \l0x0020: INVOKE  (r3 I:float) = (r3 I:android.content.res.Resources), (r4 I:int) android.content.res.Resources.getDimension(int):float type: VIRTUAL \l0x0024: CAST  (r3 I:int) = (int) (r3 I:float) \l0x0025: INVOKE  (r3 I:java.lang.Integer) = (r3 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0029: INVOKE  \l  (r0 I:java.lang.reflect.Field)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.lang.reflect.Field.set(java.lang.Object, java.lang.Object):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x002d|0x002d: IGET  (r2 I:android.view.ScaleGestureDetector) = \l  (r5 I:com.mapbox.android.gestures.StandardScaleGestureDetector)\l com.mapbox.android.gestures.StandardScaleGestureDetector.scaleGestureDetector android.view.ScaleGestureDetector \l0x002f: IGET  (r3 I:android.content.Context) = \l  (r5 I:com.mapbox.android.gestures.StandardScaleGestureDetector)\l com.mapbox.android.gestures.StandardScaleGestureDetector.context android.content.Context \l0x0031: INVOKE  (r3 I:android.content.res.Resources) = (r3 I:android.content.Context) android.content.Context.getResources():android.content.res.Resources type: VIRTUAL \l0x0035: SGET  (r4 I:int) =  com.mapbox.android.gestures.R.dimen.mapbox_internalScaleMinSpan23 int \l0x0037: INVOKE  (r3 I:float) = (r3 I:android.content.res.Resources), (r4 I:int) android.content.res.Resources.getDimension(int):float type: VIRTUAL \l0x003b: CAST  (r3 I:int) = (int) (r3 I:float) \l0x003c: INVOKE  (r3 I:java.lang.Integer) = (r3 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0040: INVOKE  \l  (r0 I:java.lang.reflect.Field)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.lang.reflect.Field.set(java.lang.Object, java.lang.Object):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0043|0x0043: IGET  (r0 I:android.view.ScaleGestureDetector) = \l  (r5 I:com.mapbox.android.gestures.StandardScaleGestureDetector)\l com.mapbox.android.gestures.StandardScaleGestureDetector.scaleGestureDetector android.view.ScaleGestureDetector \l0x0045: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x0049: CONST_STR  (r2 I:java.lang.String) =  \"mSpanSlop\" \l0x004b: INVOKE  (r0 I:java.lang.reflect.Field) = (r0 I:java.lang.Class), (r2 I:java.lang.String) java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field type: VIRTUAL \l0x004f: INVOKE  (r0 I:java.lang.reflect.Field), (r1 I:boolean) java.lang.reflect.Field.setAccessible(boolean):void type: VIRTUAL \l0x0052: IGET  (r1 I:android.view.ScaleGestureDetector) = \l  (r5 I:com.mapbox.android.gestures.StandardScaleGestureDetector)\l com.mapbox.android.gestures.StandardScaleGestureDetector.scaleGestureDetector android.view.ScaleGestureDetector \l0x0054: IGET  (r2 I:android.content.Context) = \l  (r5 I:com.mapbox.android.gestures.StandardScaleGestureDetector)\l com.mapbox.android.gestures.StandardScaleGestureDetector.context android.content.Context \l0x0056: INVOKE  (r2 I:android.view.ViewConfiguration) = (r2 I:android.content.Context) android.view.ViewConfiguration.get(android.content.Context):android.view.ViewConfiguration type: STATIC \l0x005a: INVOKE  (r2 I:int) = (r2 I:android.view.ViewConfiguration) android.view.ViewConfiguration.getScaledTouchSlop():int type: VIRTUAL \l0x005e: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0062: INVOKE  \l  (r0 I:java.lang.reflect.Field)\l  (r1 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l java.lang.reflect.Field.set(java.lang.Object, java.lang.Object):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0065|0x0065: RETURN   \l}"];
MethodNode[shape=record,label="{void com.mapbox.android.gestures.StandardScaleGestureDetector.modifyInternalMinSpanValues((r5 'this' I:com.mapbox.android.gestures.StandardScaleGestureDetector A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.NoSuchFieldException, java.lang.IllegalAccessException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

