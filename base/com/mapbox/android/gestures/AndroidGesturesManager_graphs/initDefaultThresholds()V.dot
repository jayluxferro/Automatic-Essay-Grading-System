digraph "CFG forcom.mapbox.android.gestures.AndroidGesturesManager.initDefaultThresholds()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r0 = r6.detectors.iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lLOOP:0: B:1:0x0006\-\>B:21:0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|if (r0.hasNext() == false) goto L_0x0066\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|com.mapbox.android.gestures.BaseGesture r1 = r0.next()\lboolean r2 = r1 instanceof com.mapbox.android.gestures.MultiFingerTapGestureDetector\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|if (r2 == false) goto L_0x001e\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|((com.mapbox.android.gestures.MultiFingerGesture) r1).setSpanThresholdResource(com.mapbox.android.gestures.C0976R.dimen.mapbox_defaultMutliFingerSpanThreshold)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e}"];
Node_7 [shape=record,label="{7\:\ 0x0020|if ((r1 instanceof com.mapbox.android.gestures.StandardScaleGestureDetector) == false) goto L_0x002a\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|((com.mapbox.android.gestures.StandardScaleGestureDetector) r1).setSpanSinceStartThresholdResource(com.mapbox.android.gestures.C0976R.dimen.mapbox_defaultScaleSpanSinceStartThreshold)\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a}"];
Node_10 [shape=record,label="{10\:\ 0x002e|if ((r1 instanceof com.mapbox.android.gestures.ShoveGestureDetector) == false) goto L_0x003b\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|com.mapbox.android.gestures.ShoveGestureDetector r3 = (com.mapbox.android.gestures.ShoveGestureDetector) r1\lr3.setPixelDeltaThresholdResource(com.mapbox.android.gestures.C0976R.dimen.mapbox_defaultShovePixelThreshold)\lr3.setMaxShoveAngle(20.0f)\l}"];
Node_12 [shape=record,label="{12\:\ 0x003b}"];
Node_13 [shape=record,label="{13\:\ 0x003d|if ((r1 instanceof com.mapbox.android.gestures.SidewaysShoveGestureDetector) == false) goto L_0x004a\l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|com.mapbox.android.gestures.SidewaysShoveGestureDetector r3 = (com.mapbox.android.gestures.SidewaysShoveGestureDetector) r1\lr3.setPixelDeltaThresholdResource(com.mapbox.android.gestures.C0976R.dimen.mapbox_defaultShovePixelThreshold)\lr3.setMaxShoveAngle(20.0f)\l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|if (r2 == false) goto L_0x0059\l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|com.mapbox.android.gestures.MultiFingerTapGestureDetector r2 = (com.mapbox.android.gestures.MultiFingerTapGestureDetector) r1\lr2.setMultiFingerTapMovementThresholdResource(com.mapbox.android.gestures.C0976R.dimen.mapbox_defaultMultiTapMovementThreshold)\lr2.setMultiFingerTapTimeThreshold(150)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0059}"];
Node_18 [shape=record,label="{18\:\ 0x005b|if ((r1 instanceof com.mapbox.android.gestures.RotateGestureDetector) == false) goto L_0x0006\l}"];
Node_19 [shape=record,label="{19\:\ 0x005d|((com.mapbox.android.gestures.RotateGestureDetector) r1).setAngleThreshold(15.3f)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0066|RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0006\-\>B:21:0x0006\l}"];
Node_22 [shape=record,label="{22\:\ 0x0066|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0006|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0006|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.mapbox.android.gestures.AndroidGesturesManager.initDefaultThresholds((r6v0 'this' com.mapbox.android.gestures.AndroidGesturesManager A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_22;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_24;
Node_21 -> Node_1;
Node_22 -> Node_20;
Node_23 -> Node_21;
Node_24 -> Node_21;
}

