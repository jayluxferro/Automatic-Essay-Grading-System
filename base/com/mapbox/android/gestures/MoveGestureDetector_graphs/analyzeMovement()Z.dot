digraph "CFG forcom.mapbox.android.gestures.MoveGestureDetector.analyzeMovement()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super.analyzeMovement()\lupdateMoveDistancesObjects()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if (isInProgress() == false) goto L_0x0042\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|android.graphics.PointF r0 = getFocalPoint()\lr4.lastDistanceX = r4.previousFocalPoint.x \- r0.x\lr4.lastDistanceY = r4.previousFocalPoint.y \- r0.y\lr4.previousFocalPoint = r0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|if (r4.resetFocal == false) goto L_0x0035\l}"];
Node_4 [shape=record,label="{4\:\ 0x0029|r4.resetFocal = false\l}"];
Node_5 [shape=record,label="{5\:\ 0x0034|RETURN\l|return ((com.mapbox.android.gestures.MoveGestureDetector.OnMoveGestureListener) r4.listener).onMove(r4, 0.0f, 0.0f)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0035}"];
Node_7 [shape=record,label="{7\:\ 0x0041|RETURN\l|return ((com.mapbox.android.gestures.MoveGestureDetector.OnMoveGestureListener) r4.listener).onMove(r4, r4.lastDistanceX, r4.lastDistanceY)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0042}"];
Node_9 [shape=record,label="{9\:\ 0x0048|if (canExecute(13) == false) goto L_0x0061\l}"];
Node_10 [shape=record,label="{10\:\ 0x004a}"];
Node_11 [shape=record,label="{11\:\ 0x0052|if (((com.mapbox.android.gestures.MoveGestureDetector.OnMoveGestureListener) r4.listener).onMoveBegin(r4) == false) goto L_0x0061\l}"];
Node_12 [shape=record,label="{12\:\ 0x0054|gestureStarted()\lr4.previousFocalPoint = getFocalPoint()\lr4.resetFocal = false\l}"];
Node_13 [shape=record,label="{13\:\ 0x0060|RETURN\l|return true\l}"];
Node_14 [shape=record,label="{14\:\ 0x0061|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{protected boolean com.mapbox.android.gestures.MoveGestureDetector.analyzeMovement((r4v0 'this' com.mapbox.android.gestures.MoveGestureDetector A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
}

