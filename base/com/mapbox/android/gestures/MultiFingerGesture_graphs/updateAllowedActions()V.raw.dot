digraph "CFG forcom.mapbox.android.gestures.MultiFingerGesture.updateAllowedActions()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0002: IPUT  \l  (r0 I:long)\l  (r6 I:com.mapbox.android.gestures.MultiFingerGesture)\l com.mapbox.android.gestures.MultiFingerGesture.allowedActions long \l0x0004: IGET  (r2 I:java.util.List\<java.lang.Integer\>) = (r6 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.pointerIdList java.util.List \l0x0006: INVOKE  (r2 I:int) = (r2 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IPUT  \l  (r0 I:long)\l  (r6 I:com.mapbox.android.gestures.MultiFingerGesture)\l com.mapbox.android.gestures.MultiFingerGesture.allowedActions long \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IGET  (r0 I:java.util.List\<java.lang.Integer\>) = (r6 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.pointerIdList java.util.List \l0x0011: INVOKE  (r0 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0015: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:11:0x0057 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IGET  (r2 I:long) = (r6 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.allowedActions long \l0x001a: CONST  (r4 I:?[long, double]) = (5 ?[long, double]) \l0x001c: ARITH  (r2 I:long) = (r2 I:long) + (r4 I:long) \l0x001d: IPUT  \l  (r2 I:long)\l  (r6 I:com.mapbox.android.gestures.MultiFingerGesture)\l com.mapbox.android.gestures.MultiFingerGesture.allowedActions long \l0x001f: IGET  (r2 I:long) = (r6 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.allowedActions long \l0x0021: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0022: ARITH  (r2 I:long) = (r2 I:long) \<\< (r0 I:long) \l0x0023: IPUT  \l  (r2 I:long)\l  (r6 I:com.mapbox.android.gestures.MultiFingerGesture)\l com.mapbox.android.gestures.MultiFingerGesture.allowedActions long \l0x0025: IGET  (r2 I:long) = (r6 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.allowedActions long \l0x0027: CONST  (r4 I:?[long, double]) = (2 ?[long, double]) \l0x0029: ARITH  (r2 I:long) = (r2 I:long) + (r4 I:long) \l0x002a: IPUT  \l  (r2 I:long)\l  (r6 I:com.mapbox.android.gestures.MultiFingerGesture)\l com.mapbox.android.gestures.MultiFingerGesture.allowedActions long \l0x002c: IGET  (r2 I:java.util.List\<java.lang.Integer\>) = (r6 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.pointerIdList java.util.List \l0x002e: INVOKE  (r2 I:int) = (r2 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0032|0x0032: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0042 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|0x0034: IGET  (r1 I:long) = (r6 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.allowedActions long \l0x0036: ARITH  (r0 I:long) = (r1 I:long) \<\< (r0 I:long) \l0x0038: IPUT  \l  (r0 I:long)\l  (r6 I:com.mapbox.android.gestures.MultiFingerGesture)\l com.mapbox.android.gestures.MultiFingerGesture.allowedActions long \l0x003a: IGET  (r0 I:long) = (r6 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.allowedActions long \l0x003c: CONST  (r2 I:?[long, double]) = (1 ?[long, double]) \l0x003e: ARITH  (r0 I:long) = (r0 I:long) + (r2 I:long) \l0x003f: IPUT  \l  (r0 I:long)\l  (r6 I:com.mapbox.android.gestures.MultiFingerGesture)\l com.mapbox.android.gestures.MultiFingerGesture.allowedActions long \l}"];
Node_8 [shape=record,label="{8\:\ 0x0042|0x0042: IGET  (r2 I:java.util.List\<java.lang.Integer\>) = (r6 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.pointerIdList java.util.List \l0x0044: INVOKE  (r2 I:int) = (r2 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x0048|0x0048: IF  (r2 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:11:0x0057 \l}"];
Node_10 [shape=record,label="{10\:\ 0x004a|0x004a: IGET  (r1 I:long) = (r6 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.allowedActions long \l0x004c: ARITH  (r0 I:long) = (r1 I:long) \<\< (r0 I:long) \l0x004e: IPUT  \l  (r0 I:long)\l  (r6 I:com.mapbox.android.gestures.MultiFingerGesture)\l com.mapbox.android.gestures.MultiFingerGesture.allowedActions long \l0x0050: IGET  (r0 I:long) = (r6 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.allowedActions long \l0x0052: CONST  (r2 I:?[long, double]) = (6 ?[long, double]) \l0x0054: ARITH  (r0 I:long) = (r0 I:long) + (r2 I:long) \l0x0055: IPUT  \l  (r0 I:long)\l  (r6 I:com.mapbox.android.gestures.MultiFingerGesture)\l com.mapbox.android.gestures.MultiFingerGesture.allowedActions long \l}"];
Node_11 [shape=record,label="{11\:\ 0x0057|0x0057: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.android.gestures.MultiFingerGesture.updateAllowedActions((r6 'this' I:com.mapbox.android.gestures.MultiFingerGesture A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
}

