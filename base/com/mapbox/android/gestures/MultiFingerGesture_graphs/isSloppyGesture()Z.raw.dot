digraph "CFG forcom.mapbox.android.gestures.MultiFingerGesture.isSloppyGesture()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.content.Context) = (r8 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.context android.content.Context \l0x0002: INVOKE  (r0 I:android.content.res.Resources) = (r0 I:android.content.Context) android.content.Context.getResources():android.content.res.Resources type: VIRTUAL \l0x0006: INVOKE  (r0 I:android.util.DisplayMetrics) = (r0 I:android.content.res.Resources) android.content.res.Resources.getDisplayMetrics():android.util.DisplayMetrics type: VIRTUAL \l0x000a: IGET  (r1 I:int) = (r0 I:android.util.DisplayMetrics) android.util.DisplayMetrics.widthPixels int \l0x000c: CAST  (r1 I:float) = (float) (r1 I:int) \l0x000d: IGET  (r2 I:float) = (r8 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.edgeSlop float \l0x000f: ARITH  (r1 I:float) = (r1 I:float) \- (r2 I:float) \l0x0010: IGET  (r0 I:int) = (r0 I:android.util.DisplayMetrics) android.util.DisplayMetrics.heightPixels int \l0x0012: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0013: IGET  (r2 I:float) = (r8 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.edgeSlop float \l0x0015: ARITH  (r0 I:float) = (r0 I:float) \- (r2 I:float) \l0x0016: IGET  (r2 I:float) = (r8 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.edgeSlop float \l0x0018: IGET  (r3 I:java.util.List\<java.lang.Integer\>) = (r8 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.pointerIdList java.util.List \l0x001a: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x001e|0x001e: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0022|0x0022: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x005e \l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|0x0024: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0028: CHECK_CAST  (r4 I:java.lang.Integer) = (java.lang.Integer) (r4 I:?[OBJECT, ARRAY]) \l0x002a: INVOKE  (r4 I:int) = (r4 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x002e: INVOKE  (r5 I:android.view.MotionEvent) = (r8 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.getCurrentEvent():android.view.MotionEvent type: VIRTUAL \l0x0032: INVOKE  (r4 I:int) = (r5 I:android.view.MotionEvent), (r4 I:int) android.view.MotionEvent.findPointerIndex(int):int type: VIRTUAL \l0x0036: INVOKE  (r5 I:android.view.MotionEvent) = (r8 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.getCurrentEvent():android.view.MotionEvent type: VIRTUAL \l0x003a: INVOKE  (r5 I:float) = (r5 I:android.view.MotionEvent), (r4 I:int) com.mapbox.android.gestures.Utils.getRawX(android.view.MotionEvent, int):float type: STATIC \l0x003e: INVOKE  (r6 I:android.view.MotionEvent) = (r8 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.getCurrentEvent():android.view.MotionEvent type: VIRTUAL \l0x0042: INVOKE  (r4 I:float) = (r6 I:android.view.MotionEvent), (r4 I:int) com.mapbox.android.gestures.Utils.getRawY(android.view.MotionEvent, int):float type: STATIC \l0x0046: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0047: CMP_G  (r7 I:int) = (r5 I:float), (r2 I:float) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0049|0x0049: IF  (r7 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:13:0x005a \l}"];
Node_5 [shape=record,label="{5\:\ 0x004b|0x004b: CMP_G  (r7 I:int) = (r4 I:float), (r2 I:float) \l}"];
Node_6 [shape=record,label="{6\:\ 0x004d|0x004d: IF  (r7 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:13:0x005a \l}"];
Node_7 [shape=record,label="{7\:\ 0x004f|0x004f: CMP_L  (r5 I:int) = (r5 I:float), (r1 I:float) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0051|0x0051: IF  (r5 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:13:0x005a \l}"];
Node_9 [shape=record,label="{9\:\ 0x0053|0x0053: CMP_L  (r4 I:int) = (r4 I:float), (r0 I:float) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0055|0x0055: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x0058 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0058|0x0058: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x005a|0x005a: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x005b|0x005b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x001e \l}"];
Node_15 [shape=record,label="{15\:\ 0x005d|0x005d: RETURN  (r6 I:boolean) \l}"];
Node_16 [shape=record,label="{16\:\ 0x005e|0x005e: INVOKE  (r0 I:boolean) = (r8 I:com.mapbox.android.gestures.MultiFingerGesture) com.mapbox.android.gestures.MultiFingerGesture.checkSpanBelowThreshold():boolean type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0062|0x0062: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{protected boolean com.mapbox.android.gestures.MultiFingerGesture.isSloppyGesture((r8 'this' I:com.mapbox.android.gestures.MultiFingerGesture A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_16;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_1;
Node_14 -> Node_15[style=dashed];
Node_16 -> Node_17;
}

