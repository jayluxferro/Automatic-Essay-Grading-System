digraph "CFG forcom.mapbox.android.gestures.RotateGestureDetector.calculateAngularVelocityVector(FF)F" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|float r7 = java.lang.Math.abs((float) (((double) ((getFocalPoint().x * r8) + (getFocalPoint().y * r7))) \/ (java.lang.Math.pow((double) getFocalPoint().x, 2.0d) + java.lang.Math.pow((double) getFocalPoint().y, 2.0d))))\l}"];
Node_1 [shape=record,label="{1\:\ 0x0036|if ((r6.deltaSinceLast \> 0.0f ? 1 : (r6.deltaSinceLast == 0.0f ? 0 : \-1)) \>= 0) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0038}"];
Node_3 [shape=record,label="{3\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return \-r7\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\l|return r7\l}"];
MethodNode[shape=record,label="{float com.mapbox.android.gestures.RotateGestureDetector.calculateAngularVelocityVector((r6v0 'this' com.mapbox.android.gestures.RotateGestureDetector A[IMMUTABLE_TYPE, THIS]), (r7v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

