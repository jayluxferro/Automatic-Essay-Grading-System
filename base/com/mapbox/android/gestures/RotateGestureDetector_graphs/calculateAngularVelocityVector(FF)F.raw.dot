digraph "CFG forcom.mapbox.android.gestures.RotateGestureDetector.calculateAngularVelocityVector(FF)F" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.graphics.PointF) = (r6 I:com.mapbox.android.gestures.RotateGestureDetector) com.mapbox.android.gestures.RotateGestureDetector.getFocalPoint():android.graphics.PointF type: VIRTUAL \l0x0004: IGET  (r0 I:float) = (r0 I:android.graphics.PointF) android.graphics.PointF.x float \l0x0006: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x0008: INVOKE  (r8 I:android.graphics.PointF) = (r6 I:com.mapbox.android.gestures.RotateGestureDetector) com.mapbox.android.gestures.RotateGestureDetector.getFocalPoint():android.graphics.PointF type: VIRTUAL \l0x000c: IGET  (r8 I:float) = (r8 I:android.graphics.PointF) android.graphics.PointF.y float \l0x000e: ARITH  (r8 I:float) = (r8 I:float) * (r7 I:float) \l0x0010: ARITH  (r0 I:float) = (r0 I:float) + (r8 I:float) \l0x0011: CAST  (r7 I:double) = (double) (r0 I:float) \l0x0012: INVOKE  (r0 I:android.graphics.PointF) = (r6 I:com.mapbox.android.gestures.RotateGestureDetector) com.mapbox.android.gestures.RotateGestureDetector.getFocalPoint():android.graphics.PointF type: VIRTUAL \l0x0016: IGET  (r0 I:float) = (r0 I:android.graphics.PointF) android.graphics.PointF.x float \l0x0018: CAST  (r0 I:double) = (double) (r0 I:float) \l0x0019: CONST  (r2 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x001b: INVOKE  (r0 I:double) = (r0 I:double), (r2 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x001f: INVOKE  (r4 I:android.graphics.PointF) = (r6 I:com.mapbox.android.gestures.RotateGestureDetector) com.mapbox.android.gestures.RotateGestureDetector.getFocalPoint():android.graphics.PointF type: VIRTUAL \l0x0023: IGET  (r4 I:float) = (r4 I:android.graphics.PointF) android.graphics.PointF.y float \l0x0025: CAST  (r4 I:double) = (double) (r4 I:float) \l0x0026: INVOKE  (r2 I:double) = (r4 I:double), (r2 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x002a: ARITH  (r0 I:double) = (r0 I:double) + (r2 I:double) \l0x002b: ARITH  (r7 I:double) = (r7 I:double) \/ (r0 I:double) \l0x002c: CAST  (r7 I:float) = (float) (r7 I:double) \l0x002d: INVOKE  (r7 I:float) = (r7 I:float) java.lang.Math.abs(float):float type: STATIC \l0x0031: IGET  (r8 I:float) = (r6 I:com.mapbox.android.gestures.RotateGestureDetector) com.mapbox.android.gestures.RotateGestureDetector.deltaSinceLast float \l0x0033: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0034: CMP_G  (r8 I:int) = (r8 I:float), (r0 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0036|0x0036: IF  (r8 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x0039 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0038|0x0038: NEG  (r7 I:float) = (r7 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0039|0x0039: RETURN  (r7 I:float) \l}"];
MethodNode[shape=record,label="{float com.mapbox.android.gestures.RotateGestureDetector.calculateAngularVelocityVector((r6 'this' I:com.mapbox.android.gestures.RotateGestureDetector A[IMMUTABLE_TYPE, THIS]), (r7 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

