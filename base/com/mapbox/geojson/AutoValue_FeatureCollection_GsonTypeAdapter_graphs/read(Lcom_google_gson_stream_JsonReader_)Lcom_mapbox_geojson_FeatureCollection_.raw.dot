digraph "CFG forcom.mapbox.geojson.AutoValue_FeatureCollection.GsonTypeAdapter.read(Lcom\/google\/gson\/stream\/JsonReader;)Lcom\/mapbox\/geojson\/FeatureCollection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.google.gson.stream.JsonToken) = (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0004: SGET  (r1 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: INVOKE  (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN  (r2 I:com.mapbox.geojson.FeatureCollection) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.beginObject():void type: VIRTUAL \l0x0010: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0011: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: INVOKE  (r3 I:boolean) = (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.hasNext():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x00ae \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: INVOKE  (r3 I:java.lang.String) = (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextName():java.lang.String type: VIRTUAL \l0x001c: INVOKE  (r4 I:com.google.gson.stream.JsonToken) = (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0020: SGET  (r5 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: INVOKE  (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0029: INVOKE  (r5 I:int) = (r3 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL \l0x002d: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (\-290659267(0xffffffffeeace43d, float:\-2.6753672E28) ?[int, float, short, byte, char])\l \l0x0030: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0031: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|0x0032: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0053 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (3017257(0x2e0a29, float:4.228078E\-39) ?[int, float, short, byte, char])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|0x0037: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0049 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|0x0039: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (3575610(0x368f3a, float:5.010497E\-39) ?[int, float, short, byte, char])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|0x003c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x003f \l}"];
Node_17 [shape=record,label="{17\:\ 0x003f|0x003f: CONST_STR  (r5 I:java.lang.String) =  \"type\" \l0x0041: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0045|0x0045: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x005c \l}"];
Node_19 [shape=record,label="{19\:\ 0x0047|0x0047: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x0049|0x0049: CONST_STR  (r5 I:java.lang.String) =  \"bbox\" \l0x004b: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x004f|0x004f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x005c \l}"];
Node_22 [shape=record,label="{22\:\ 0x0051|0x0051: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0053|0x0053: CONST_STR  (r5 I:java.lang.String) =  \"features\" \l0x0055: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0059|0x0059: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x005c \l}"];
Node_25 [shape=record,label="{25\:\ 0x005b|0x005b: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x005c|0x005c: SWITCH  \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2] t:[0x0098, 0x0082, 0x0063] \l}"];
Node_27 [shape=record,label="{27\:\ 0x005f|0x005f: INVOKE  (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.skipValue():void type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x0063|0x0063: IGET  (r1 I:com.google.gson.TypeAdapter\<java.util.List\<com.mapbox.geojson.Feature\>\>) = \l  (r9 I:com.mapbox.geojson.AutoValue_FeatureCollection$GsonTypeAdapter)\l com.mapbox.geojson.AutoValue_FeatureCollection.GsonTypeAdapter.list__feature_adapter com.google.gson.TypeAdapter \l}"];
Node_29 [shape=record,label="{29\:\ 0x0065|0x0065: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x007b \l}"];
Node_30 [shape=record,label="{30\:\ 0x0067|0x0067: IGET  (r1 I:com.google.gson.Gson) = \l  (r9 I:com.mapbox.geojson.AutoValue_FeatureCollection$GsonTypeAdapter)\l com.mapbox.geojson.AutoValue_FeatureCollection.GsonTypeAdapter.gson com.google.gson.Gson \l0x0069: CONST_CLASS  (r3 I:java.lang.Class\<java.util.List\>) =  java.util.List.class \l0x006b: NEW_ARRAY  (r4 I:java.lang.reflect.Type[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: java.lang.reflect.Type[] \l0x006d: CONST_CLASS  (r5 I:java.lang.Class\<com.mapbox.geojson.Feature\>) =  com.mapbox.geojson.Feature.class \l0x006f: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x0071: INVOKE  (r3 I:com.google.gson.reflect.TypeToken) = \l  (r3 I:java.lang.reflect.Type)\l  (r4 I:java.lang.reflect.Type[])\l com.google.gson.reflect.TypeToken.getParameterized(java.lang.reflect.Type, java.lang.reflect.Type[]):com.google.gson.reflect.TypeToken type: STATIC \l0x0075: INVOKE  (r1 I:com.google.gson.TypeAdapter) = \l  (r1 I:com.google.gson.Gson)\l  (r3 I:com.google.gson.reflect.TypeToken)\l com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken):com.google.gson.TypeAdapter type: VIRTUAL \l0x0079: IPUT  \l  (r1 I:com.google.gson.TypeAdapter\<java.util.List\<com.mapbox.geojson.Feature\>\>)\l  (r9 I:com.mapbox.geojson.AutoValue_FeatureCollection$GsonTypeAdapter)\l com.mapbox.geojson.AutoValue_FeatureCollection.GsonTypeAdapter.list__feature_adapter com.google.gson.TypeAdapter \l}"];
Node_31 [shape=record,label="{31\:\ 0x007b|0x007b: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:com.google.gson.TypeAdapter)\l  (r10 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x007f: CHECK_CAST  (r1 I:java.util.List) = (java.util.List) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0082|0x0082: IGET  (r0 I:com.google.gson.TypeAdapter\<com.mapbox.geojson.BoundingBox\>) = \l  (r9 I:com.mapbox.geojson.AutoValue_FeatureCollection$GsonTypeAdapter)\l com.mapbox.geojson.AutoValue_FeatureCollection.GsonTypeAdapter.boundingBox_adapter com.google.gson.TypeAdapter \l}"];
Node_33 [shape=record,label="{33\:\ 0x0084|0x0084: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0090 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0086|0x0086: IGET  (r0 I:com.google.gson.Gson) = \l  (r9 I:com.mapbox.geojson.AutoValue_FeatureCollection$GsonTypeAdapter)\l com.mapbox.geojson.AutoValue_FeatureCollection.GsonTypeAdapter.gson com.google.gson.Gson \l0x0088: CONST_CLASS  (r3 I:java.lang.Class\<com.mapbox.geojson.BoundingBox\>) =  com.mapbox.geojson.BoundingBox.class \l0x008a: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r3 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x008e: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<com.mapbox.geojson.BoundingBox\>)\l  (r9 I:com.mapbox.geojson.AutoValue_FeatureCollection$GsonTypeAdapter)\l com.mapbox.geojson.AutoValue_FeatureCollection.GsonTypeAdapter.boundingBox_adapter com.google.gson.TypeAdapter \l}"];
Node_35 [shape=record,label="{35\:\ 0x0090|0x0090: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r10 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0094: CHECK_CAST  (r0 I:com.mapbox.geojson.BoundingBox) = (com.mapbox.geojson.BoundingBox) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0098|0x0098: IGET  (r2 I:com.google.gson.TypeAdapter\<java.lang.String\>) = \l  (r9 I:com.mapbox.geojson.AutoValue_FeatureCollection$GsonTypeAdapter)\l com.mapbox.geojson.AutoValue_FeatureCollection.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_37 [shape=record,label="{37\:\ 0x009a|0x009a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x00a6 \l}"];
Node_38 [shape=record,label="{38\:\ 0x009c|0x009c: IGET  (r2 I:com.google.gson.Gson) = \l  (r9 I:com.mapbox.geojson.AutoValue_FeatureCollection$GsonTypeAdapter)\l com.mapbox.geojson.AutoValue_FeatureCollection.GsonTypeAdapter.gson com.google.gson.Gson \l0x009e: CONST_CLASS  (r3 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x00a0: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson), (r3 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x00a4: IPUT  \l  (r2 I:com.google.gson.TypeAdapter\<java.lang.String\>)\l  (r9 I:com.mapbox.geojson.AutoValue_FeatureCollection$GsonTypeAdapter)\l com.mapbox.geojson.AutoValue_FeatureCollection.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_39 [shape=record,label="{39\:\ 0x00a6|0x00a6: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:com.google.gson.TypeAdapter)\l  (r10 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00aa: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x00ae|0x00ae: INVOKE  (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.endObject():void type: VIRTUAL \l0x00b1: NEW_INSTANCE  (r10 I:com.mapbox.geojson.AutoValue_FeatureCollection) =  com.mapbox.geojson.AutoValue_FeatureCollection \l0x00b3: INVOKE  \l  (r10 I:com.mapbox.geojson.AutoValue_FeatureCollection)\l  (r2 I:java.lang.String)\l  (r0 I:com.mapbox.geojson.BoundingBox)\l  (r1 I:java.util.List)\l com.mapbox.geojson.AutoValue_FeatureCollection.\<init\>(java.lang.String, com.mapbox.geojson.BoundingBox, java.util.List):void type: DIRECT \l}"];
Node_41 [shape=record,label="{41\:\ 0x00b6|0x00b6: RETURN  (r10 I:com.mapbox.geojson.FeatureCollection) \l}"];
MethodNode[shape=record,label="{public com.mapbox.geojson.FeatureCollection com.mapbox.geojson.AutoValue_FeatureCollection.GsonTypeAdapter.read((r9 'this' I:com.mapbox.geojson.AutoValue_FeatureCollection$GsonTypeAdapter A[IMMUTABLE_TYPE, THIS]), (r10 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_40;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_5;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_23;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_26[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_26;
Node_19 -> Node_26;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_28;
Node_26 -> Node_32;
Node_26 -> Node_36;
Node_27 -> Node_5;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_5;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_5;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_5;
Node_40 -> Node_41;
}

