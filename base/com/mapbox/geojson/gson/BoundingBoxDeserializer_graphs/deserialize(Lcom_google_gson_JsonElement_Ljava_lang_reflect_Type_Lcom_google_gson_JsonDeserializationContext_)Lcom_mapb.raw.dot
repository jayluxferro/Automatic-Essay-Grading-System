digraph "CFG forcom.mapbox.geojson.gson.BoundingBoxDeserializer.deserialize(Lcom\/google\/gson\/JsonElement;Ljava\/lang\/reflect\/Type;Lcom\/google\/gson\/JsonDeserializationContext;)Lcom\/mapbox\/geojson\/BoundingBox;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.google.gson.JsonArray) = (r19 I:com.google.gson.JsonElement) com.google.gson.JsonElement.getAsJsonArray():com.google.gson.JsonArray type: VIRTUAL \l0x0004: INVOKE  (r1 I:int) = (r0 I:com.google.gson.JsonArray) com.google.gson.JsonArray.size():int type: VIRTUAL \l0x0008: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0009: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x000a: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000b: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000c: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: CONST  (r7 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0046 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: INVOKE  (r1 I:com.google.gson.JsonElement) = (r0 I:com.google.gson.JsonArray), (r6 I:int) com.google.gson.JsonArray.get(int):com.google.gson.JsonElement type: VIRTUAL \l0x0014: INVOKE  (r6 I:double) = (r1 I:com.google.gson.JsonElement) com.google.gson.JsonElement.getAsDouble():double type: VIRTUAL \l0x0018: INVOKE  (r1 I:com.google.gson.JsonElement) = (r0 I:com.google.gson.JsonArray), (r5 I:int) com.google.gson.JsonArray.get(int):com.google.gson.JsonElement type: VIRTUAL \l0x001c: INVOKE  (r8 I:double) = (r1 I:com.google.gson.JsonElement) com.google.gson.JsonElement.getAsDouble():double type: VIRTUAL \l0x0020: INVOKE  (r1 I:com.google.gson.JsonElement) = (r0 I:com.google.gson.JsonArray), (r4 I:int) com.google.gson.JsonArray.get(int):com.google.gson.JsonElement type: VIRTUAL \l0x0024: INVOKE  (r10 I:double) = (r1 I:com.google.gson.JsonElement) com.google.gson.JsonElement.getAsDouble():double type: VIRTUAL \l0x0028: INVOKE  (r1 I:com.google.gson.JsonElement) = (r0 I:com.google.gson.JsonArray), (r3 I:int) com.google.gson.JsonArray.get(int):com.google.gson.JsonElement type: VIRTUAL \l0x002c: INVOKE  (r12 I:double) = (r1 I:com.google.gson.JsonElement) com.google.gson.JsonElement.getAsDouble():double type: VIRTUAL \l0x0030: INVOKE  (r1 I:com.google.gson.JsonElement) = (r0 I:com.google.gson.JsonArray), (r2 I:int) com.google.gson.JsonArray.get(int):com.google.gson.JsonElement type: VIRTUAL \l0x0034: INVOKE  (r14 I:double) = (r1 I:com.google.gson.JsonElement) com.google.gson.JsonElement.getAsDouble():double type: VIRTUAL \l0x0038: CONST  (r1 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0039: INVOKE  (r0 I:com.google.gson.JsonElement) = (r0 I:com.google.gson.JsonArray), (r1 I:int) com.google.gson.JsonArray.get(int):com.google.gson.JsonElement type: VIRTUAL \l0x003d: INVOKE  (r16 I:double) = (r0 I:com.google.gson.JsonElement) com.google.gson.JsonElement.getAsDouble():double type: VIRTUAL \l0x0041: INVOKE  (r0 I:com.mapbox.geojson.BoundingBox) = \l  (r6 I:double)\l  (r8 I:double)\l  (r10 I:double)\l  (r12 I:double)\l  (r14 I:double)\l  (r16 I:double)\l com.mapbox.geojson.BoundingBox.fromLngLats(double, double, double, double, double, double):com.mapbox.geojson.BoundingBox type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0045|0x0045: RETURN  (r0 I:com.mapbox.geojson.BoundingBox) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0046|0x0046: INVOKE  (r1 I:int) = (r0 I:com.google.gson.JsonArray) com.google.gson.JsonArray.size():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x004a|0x004a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0071 \l}"];
Node_6 [shape=record,label="{6\:\ 0x004c|0x004c: INVOKE  (r1 I:com.google.gson.JsonElement) = (r0 I:com.google.gson.JsonArray), (r6 I:int) com.google.gson.JsonArray.get(int):com.google.gson.JsonElement type: VIRTUAL \l0x0050: INVOKE  (r6 I:double) = (r1 I:com.google.gson.JsonElement) com.google.gson.JsonElement.getAsDouble():double type: VIRTUAL \l0x0054: INVOKE  (r1 I:com.google.gson.JsonElement) = (r0 I:com.google.gson.JsonArray), (r5 I:int) com.google.gson.JsonArray.get(int):com.google.gson.JsonElement type: VIRTUAL \l0x0058: INVOKE  (r8 I:double) = (r1 I:com.google.gson.JsonElement) com.google.gson.JsonElement.getAsDouble():double type: VIRTUAL \l0x005c: INVOKE  (r1 I:com.google.gson.JsonElement) = (r0 I:com.google.gson.JsonArray), (r4 I:int) com.google.gson.JsonArray.get(int):com.google.gson.JsonElement type: VIRTUAL \l0x0060: INVOKE  (r10 I:double) = (r1 I:com.google.gson.JsonElement) com.google.gson.JsonElement.getAsDouble():double type: VIRTUAL \l0x0064: INVOKE  (r0 I:com.google.gson.JsonElement) = (r0 I:com.google.gson.JsonArray), (r3 I:int) com.google.gson.JsonArray.get(int):com.google.gson.JsonElement type: VIRTUAL \l0x0068: INVOKE  (r12 I:double) = (r0 I:com.google.gson.JsonElement) com.google.gson.JsonElement.getAsDouble():double type: VIRTUAL \l0x006c: INVOKE  (r0 I:com.mapbox.geojson.BoundingBox) = \l  (r6 I:double)\l  (r8 I:double)\l  (r10 I:double)\l  (r12 I:double)\l com.mapbox.geojson.BoundingBox.fromLngLats(double, double, double, double):com.mapbox.geojson.BoundingBox type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0070|0x0070: RETURN  (r0 I:com.mapbox.geojson.BoundingBox) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0071|0x0071: NEW_INSTANCE  (r0 I:com.mapbox.geojson.exception.GeoJsonException) =  com.mapbox.geojson.exception.GeoJsonException \l0x0073: CONST_STR  (r1 I:java.lang.String) =  \"The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\" \l0x0075: INVOKE  \l  (r0 I:com.mapbox.geojson.exception.GeoJsonException)\l  (r1 I:java.lang.String)\l com.mapbox.geojson.exception.GeoJsonException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0078|0x0078: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.mapbox.geojson.BoundingBox com.mapbox.geojson.gson.BoundingBoxDeserializer.deserialize((r18 'this' I:com.mapbox.geojson.gson.BoundingBoxDeserializer A[IMMUTABLE_TYPE, THIS]), (r19 I:com.google.gson.JsonElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:com.google.gson.JsonDeserializationContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

