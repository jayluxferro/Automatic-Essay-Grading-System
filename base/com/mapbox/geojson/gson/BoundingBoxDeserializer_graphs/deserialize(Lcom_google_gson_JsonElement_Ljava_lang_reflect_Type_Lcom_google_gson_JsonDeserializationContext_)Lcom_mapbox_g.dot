digraph "CFG forcom.mapbox.geojson.gson.BoundingBoxDeserializer.deserialize(Lcom\/google\/gson\/JsonElement;Ljava\/lang\/reflect\/Type;Lcom\/google\/gson\/JsonDeserializationContext;)Lcom\/mapbox\/geojson\/BoundingBox;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.google.gson.JsonArray r0 = r19.getAsJsonArray()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r0.size() != 6) goto L_0x0046\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010}"];
Node_3 [shape=record,label="{3\:\ 0x0045|RETURN\l|return com.mapbox.geojson.BoundingBox.fromLngLats(r0.get(0).getAsDouble(), r0.get(1).getAsDouble(), r0.get(2).getAsDouble(), r0.get(3).getAsDouble(), r0.get(4).getAsDouble(), r0.get(5).getAsDouble())\l}"];
Node_4 [shape=record,label="{4\:\ 0x0046}"];
Node_5 [shape=record,label="{5\:\ 0x004a|if (r0.size() != 4) goto L_0x0071\l}"];
Node_6 [shape=record,label="{6\:\ 0x004c}"];
Node_7 [shape=record,label="{7\:\ 0x0070|RETURN\l|return com.mapbox.geojson.BoundingBox.fromLngLats(r0.get(0).getAsDouble(), r0.get(1).getAsDouble(), r0.get(2).getAsDouble(), r0.get(3).getAsDouble())\l}"];
Node_8 [shape=record,label="{8\:\ 0x0071}"];
Node_9 [shape=record,label="{9\:\ 0x0078|throw new com.mapbox.geojson.exception.GeoJsonException(\"The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\")\l}"];
MethodNode[shape=record,label="{public com.mapbox.geojson.BoundingBox com.mapbox.geojson.gson.BoundingBoxDeserializer.deserialize((r18v0 'this' com.mapbox.geojson.gson.BoundingBoxDeserializer A[IMMUTABLE_TYPE, THIS]), (r19v0 com.google.gson.JsonElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 com.google.gson.JsonDeserializationContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

