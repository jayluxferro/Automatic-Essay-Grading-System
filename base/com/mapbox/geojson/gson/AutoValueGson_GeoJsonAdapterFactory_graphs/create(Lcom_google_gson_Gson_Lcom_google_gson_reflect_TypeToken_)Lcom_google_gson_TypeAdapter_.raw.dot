digraph "CFG forcom.mapbox.geojson.gson.AutoValueGson_GeoJsonAdapterFactory.create(Lcom\/google\/gson\/Gson;Lcom\/google\/gson\/reflect\/TypeToken;)Lcom\/google\/gson\/TypeAdapter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:java.lang.Class) = (r3 I:com.google.gson.reflect.TypeToken) com.google.gson.reflect.TypeToken.getRawType():java.lang.Class type: VIRTUAL \l0x0004: CONST_CLASS  (r0 I:java.lang.Class\<com.mapbox.geojson.BoundingBox\>) =  com.mapbox.geojson.BoundingBox.class \l0x0006: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Class), (r3 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson) com.mapbox.geojson.BoundingBox.typeAdapter(com.google.gson.Gson):com.google.gson.TypeAdapter type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: RETURN  (r2 I:com.google.gson.TypeAdapter\<T\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: CONST_CLASS  (r0 I:java.lang.Class\<com.mapbox.geojson.Feature\>) =  com.mapbox.geojson.Feature.class \l0x0013: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Class), (r3 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001e \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson) com.mapbox.geojson.Feature.typeAdapter(com.google.gson.Gson):com.google.gson.TypeAdapter type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: RETURN  (r2 I:com.google.gson.TypeAdapter\<T\>) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: CONST_CLASS  (r0 I:java.lang.Class\<com.mapbox.geojson.FeatureCollection\>) =  com.mapbox.geojson.FeatureCollection.class \l0x0020: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Class), (r3 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002b \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson) com.mapbox.geojson.FeatureCollection.typeAdapter(com.google.gson.Gson):com.google.gson.TypeAdapter type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: RETURN  (r2 I:com.google.gson.TypeAdapter\<T\>) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|0x002b: CONST_CLASS  (r0 I:java.lang.Class\<com.mapbox.geojson.GeometryCollection\>) =  com.mapbox.geojson.GeometryCollection.class \l0x002d: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Class), (r3 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|0x0031: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0038 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson) com.mapbox.geojson.GeometryCollection.typeAdapter(com.google.gson.Gson):com.google.gson.TypeAdapter type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|0x0037: RETURN  (r2 I:com.google.gson.TypeAdapter\<T\>) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0038|0x0038: CONST_CLASS  (r0 I:java.lang.Class\<com.mapbox.geojson.LineString\>) =  com.mapbox.geojson.LineString.class \l0x003a: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Class), (r3 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x003e|0x003e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0045 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0040|0x0040: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson) com.mapbox.geojson.LineString.typeAdapter(com.google.gson.Gson):com.google.gson.TypeAdapter type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x0044|0x0044: RETURN  (r2 I:com.google.gson.TypeAdapter\<T\>) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0045|0x0045: CONST_CLASS  (r0 I:java.lang.Class\<com.mapbox.geojson.MultiLineString\>) =  com.mapbox.geojson.MultiLineString.class \l0x0047: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Class), (r3 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x004b|0x004b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0052 \l}"];
Node_22 [shape=record,label="{22\:\ 0x004d|0x004d: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson) com.mapbox.geojson.MultiLineString.typeAdapter(com.google.gson.Gson):com.google.gson.TypeAdapter type: STATIC \l}"];
Node_23 [shape=record,label="{23\:\ 0x0051|0x0051: RETURN  (r2 I:com.google.gson.TypeAdapter\<T\>) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0052|0x0052: CONST_CLASS  (r0 I:java.lang.Class\<com.mapbox.geojson.MultiPoint\>) =  com.mapbox.geojson.MultiPoint.class \l0x0054: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Class), (r3 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x0058|0x0058: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x005f \l}"];
Node_26 [shape=record,label="{26\:\ 0x005a|0x005a: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson) com.mapbox.geojson.MultiPoint.typeAdapter(com.google.gson.Gson):com.google.gson.TypeAdapter type: STATIC \l}"];
Node_27 [shape=record,label="{27\:\ 0x005e|0x005e: RETURN  (r2 I:com.google.gson.TypeAdapter\<T\>) \l}"];
Node_28 [shape=record,label="{28\:\ 0x005f|0x005f: CONST_CLASS  (r0 I:java.lang.Class\<com.mapbox.geojson.MultiPolygon\>) =  com.mapbox.geojson.MultiPolygon.class \l0x0061: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Class), (r3 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x0065|0x0065: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x006c \l}"];
Node_30 [shape=record,label="{30\:\ 0x0067|0x0067: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson) com.mapbox.geojson.MultiPolygon.typeAdapter(com.google.gson.Gson):com.google.gson.TypeAdapter type: STATIC \l}"];
Node_31 [shape=record,label="{31\:\ 0x006b|0x006b: RETURN  (r2 I:com.google.gson.TypeAdapter\<T\>) \l}"];
Node_32 [shape=record,label="{32\:\ 0x006c|0x006c: CONST_CLASS  (r0 I:java.lang.Class\<com.mapbox.geojson.Point\>) =  com.mapbox.geojson.Point.class \l0x006e: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Class), (r3 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_33 [shape=record,label="{33\:\ 0x0072|0x0072: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0079 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0074|0x0074: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson) com.mapbox.geojson.Point.typeAdapter(com.google.gson.Gson):com.google.gson.TypeAdapter type: STATIC \l}"];
Node_35 [shape=record,label="{35\:\ 0x0078|0x0078: RETURN  (r2 I:com.google.gson.TypeAdapter\<T\>) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0079|0x0079: CONST_CLASS  (r0 I:java.lang.Class\<com.mapbox.geojson.Polygon\>) =  com.mapbox.geojson.Polygon.class \l0x007b: INVOKE  (r3 I:boolean) = (r0 I:java.lang.Class), (r3 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_37 [shape=record,label="{37\:\ 0x007f|0x007f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0086 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0081|0x0081: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson) com.mapbox.geojson.Polygon.typeAdapter(com.google.gson.Gson):com.google.gson.TypeAdapter type: STATIC \l}"];
Node_39 [shape=record,label="{39\:\ 0x0085|0x0085: RETURN  (r2 I:com.google.gson.TypeAdapter\<T\>) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0086|0x0086: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_41 [shape=record,label="{41\:\ 0x0087|0x0087: RETURN  (r2 I:com.google.gson.TypeAdapter\<T\>) \l}"];
MethodNode[shape=record,label="{public com.google.gson.TypeAdapter\<T\> com.mapbox.geojson.gson.AutoValueGson_GeoJsonAdapterFactory.create((r1 'this' I:com.mapbox.geojson.gson.AutoValueGson_GeoJsonAdapterFactory A[IMMUTABLE_TYPE, THIS]), (r2 I:com.google.gson.Gson A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.google.gson.reflect.TypeToken\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lcom\/google\/gson\/Gson;, Lcom\/google\/gson\/reflect\/TypeToken\<, TT;\>;), Lcom\/google\/gson\/TypeAdapter\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_40;
Node_38 -> Node_39;
Node_40 -> Node_41;
}

