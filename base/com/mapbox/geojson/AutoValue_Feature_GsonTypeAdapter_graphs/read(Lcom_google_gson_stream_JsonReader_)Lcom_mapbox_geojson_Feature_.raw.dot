digraph "CFG forcom.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.read(Lcom\/google\/gson\/stream\/JsonReader;)Lcom\/mapbox\/geojson\/Feature;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.google.gson.stream.JsonToken) = (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0004: SGET  (r1 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: INVOKE  (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN  (r2 I:com.mapbox.geojson.Feature) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.beginObject():void type: VIRTUAL \l0x0010: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0011: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0012: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x0013: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0014: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: INVOKE  (r0 I:boolean) = (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.hasNext():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x00f4 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: INVOKE  (r0 I:java.lang.String) = (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextName():java.lang.String type: VIRTUAL \l0x001f: INVOKE  (r1 I:com.google.gson.stream.JsonToken) = (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0023: SGET  (r2 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002b \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: INVOKE  (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x002c: INVOKE  (r2 I:int) = (r0 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL \l0x0030: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (\-926053069(0xffffffffc8cd8d33, float:\-420969.6) ?[int, float, short, byte, char])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0071 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|0x0035: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (3355(0xd1b, float:4.701E\-42) ?[int, float, short, byte, char])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|0x0037: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0067 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|0x0039: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (3017257(0x2e0a29, float:4.228078E\-39) ?[int, float, short, byte, char])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|0x003c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x005d \l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|0x003e: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (3575610(0x368f3a, float:5.010497E\-39) ?[int, float, short, byte, char])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0041|0x0041: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0053 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0043|0x0043: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1846020210(0x6e080872, float:1.0525043E28) ?[int, float, short, byte, char])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x0046|0x0046: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0049 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0049|0x0049: CONST_STR  (r2 I:java.lang.String) =  \"geometry\" \l0x004b: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x004f|0x004f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x007a \l}"];
Node_23 [shape=record,label="{23\:\ 0x0051|0x0051: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0053|0x0053: CONST_STR  (r2 I:java.lang.String) =  \"type\" \l0x0055: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x0059|0x0059: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x007a \l}"];
Node_26 [shape=record,label="{26\:\ 0x005b|0x005b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_27 [shape=record,label="{27\:\ 0x005d|0x005d: CONST_STR  (r2 I:java.lang.String) =  \"bbox\" \l0x005f: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x0063|0x0063: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x007a \l}"];
Node_29 [shape=record,label="{29\:\ 0x0065|0x0065: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0067|0x0067: CONST_STR  (r2 I:java.lang.String) =  \"id\" \l0x0069: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x006d|0x006d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x007a \l}"];
Node_32 [shape=record,label="{32\:\ 0x006f|0x006f: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0071|0x0071: CONST_STR  (r2 I:java.lang.String) =  \"properties\" \l0x0073: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_34 [shape=record,label="{34\:\ 0x0077|0x0077: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x007a \l}"];
Node_35 [shape=record,label="{35\:\ 0x0079|0x0079: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x007a|0x007a: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3, 4] t:[0x00dd, 0x00c6, 0x00af, 0x0098, 0x0081] \l}"];
Node_37 [shape=record,label="{37\:\ 0x007d|0x007d: INVOKE  (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.skipValue():void type: VIRTUAL \l}"];
Node_38 [shape=record,label="{38\:\ 0x0081|0x0081: IGET  (r0 I:com.google.gson.TypeAdapter\<com.google.gson.JsonObject\>) = (r9 I:com.mapbox.geojson.AutoValue_Feature$GsonTypeAdapter) com.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.jsonObject_adapter com.google.gson.TypeAdapter \l}"];
Node_39 [shape=record,label="{39\:\ 0x0083|0x0083: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x008f \l}"];
Node_40 [shape=record,label="{40\:\ 0x0085|0x0085: IGET  (r0 I:com.google.gson.Gson) = (r9 I:com.mapbox.geojson.AutoValue_Feature$GsonTypeAdapter) com.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.gson com.google.gson.Gson \l0x0087: CONST_CLASS  (r1 I:java.lang.Class\<com.google.gson.JsonObject\>) =  com.google.gson.JsonObject.class \l0x0089: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x008d: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<com.google.gson.JsonObject\>)\l  (r9 I:com.mapbox.geojson.AutoValue_Feature$GsonTypeAdapter)\l com.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.jsonObject_adapter com.google.gson.TypeAdapter \l}"];
Node_41 [shape=record,label="{41\:\ 0x008f|0x008f: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r10 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0093: CHECK_CAST  (r0 I:com.google.gson.JsonObject) = (com.google.gson.JsonObject) (r0 I:?[OBJECT, ARRAY]) \l0x0095: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0098|0x0098: IGET  (r0 I:com.google.gson.TypeAdapter\<com.mapbox.geojson.Geometry\>) = (r9 I:com.mapbox.geojson.AutoValue_Feature$GsonTypeAdapter) com.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.geometry_adapter com.google.gson.TypeAdapter \l}"];
Node_43 [shape=record,label="{43\:\ 0x009a|0x009a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x00a6 \l}"];
Node_44 [shape=record,label="{44\:\ 0x009c|0x009c: IGET  (r0 I:com.google.gson.Gson) = (r9 I:com.mapbox.geojson.AutoValue_Feature$GsonTypeAdapter) com.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.gson com.google.gson.Gson \l0x009e: CONST_CLASS  (r1 I:java.lang.Class\<com.mapbox.geojson.Geometry\>) =  com.mapbox.geojson.Geometry.class \l0x00a0: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x00a4: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<com.mapbox.geojson.Geometry\>)\l  (r9 I:com.mapbox.geojson.AutoValue_Feature$GsonTypeAdapter)\l com.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.geometry_adapter com.google.gson.TypeAdapter \l}"];
Node_45 [shape=record,label="{45\:\ 0x00a6|0x00a6: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r10 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00aa: CHECK_CAST  (r0 I:com.mapbox.geojson.Geometry) = (com.mapbox.geojson.Geometry) (r0 I:?[OBJECT, ARRAY]) \l0x00ac: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x00af|0x00af: IGET  (r0 I:com.google.gson.TypeAdapter\<java.lang.String\>) = (r9 I:com.mapbox.geojson.AutoValue_Feature$GsonTypeAdapter) com.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_47 [shape=record,label="{47\:\ 0x00b1|0x00b1: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x00bd \l}"];
Node_48 [shape=record,label="{48\:\ 0x00b3|0x00b3: IGET  (r0 I:com.google.gson.Gson) = (r9 I:com.mapbox.geojson.AutoValue_Feature$GsonTypeAdapter) com.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.gson com.google.gson.Gson \l0x00b5: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x00b7: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x00bb: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.lang.String\>)\l  (r9 I:com.mapbox.geojson.AutoValue_Feature$GsonTypeAdapter)\l com.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_49 [shape=record,label="{49\:\ 0x00bd|0x00bd: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r10 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00c1: CHECK_CAST  (r0 I:java.lang.String) = (java.lang.String) (r0 I:?[OBJECT, ARRAY]) \l0x00c3: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x00c6|0x00c6: IGET  (r0 I:com.google.gson.TypeAdapter\<com.mapbox.geojson.BoundingBox\>) = (r9 I:com.mapbox.geojson.AutoValue_Feature$GsonTypeAdapter) com.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.boundingBox_adapter com.google.gson.TypeAdapter \l}"];
Node_51 [shape=record,label="{51\:\ 0x00c8|0x00c8: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x00d4 \l}"];
Node_52 [shape=record,label="{52\:\ 0x00ca|0x00ca: IGET  (r0 I:com.google.gson.Gson) = (r9 I:com.mapbox.geojson.AutoValue_Feature$GsonTypeAdapter) com.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.gson com.google.gson.Gson \l0x00cc: CONST_CLASS  (r1 I:java.lang.Class\<com.mapbox.geojson.BoundingBox\>) =  com.mapbox.geojson.BoundingBox.class \l0x00ce: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x00d2: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<com.mapbox.geojson.BoundingBox\>)\l  (r9 I:com.mapbox.geojson.AutoValue_Feature$GsonTypeAdapter)\l com.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.boundingBox_adapter com.google.gson.TypeAdapter \l}"];
Node_53 [shape=record,label="{53\:\ 0x00d4|0x00d4: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r10 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00d8: CHECK_CAST  (r0 I:com.mapbox.geojson.BoundingBox) = (com.mapbox.geojson.BoundingBox) (r0 I:?[OBJECT, ARRAY]) \l0x00da: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x00dd|0x00dd: IGET  (r0 I:com.google.gson.TypeAdapter\<java.lang.String\>) = (r9 I:com.mapbox.geojson.AutoValue_Feature$GsonTypeAdapter) com.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_55 [shape=record,label="{55\:\ 0x00df|0x00df: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x00eb \l}"];
Node_56 [shape=record,label="{56\:\ 0x00e1|0x00e1: IGET  (r0 I:com.google.gson.Gson) = (r9 I:com.mapbox.geojson.AutoValue_Feature$GsonTypeAdapter) com.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.gson com.google.gson.Gson \l0x00e3: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x00e5: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x00e9: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.lang.String\>)\l  (r9 I:com.mapbox.geojson.AutoValue_Feature$GsonTypeAdapter)\l com.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_57 [shape=record,label="{57\:\ 0x00eb|0x00eb: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r10 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00ef: CHECK_CAST  (r0 I:java.lang.String) = (java.lang.String) (r0 I:?[OBJECT, ARRAY]) \l0x00f1: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_58 [shape=record,label="{58\:\ 0x00f4|0x00f4: INVOKE  (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.endObject():void type: VIRTUAL \l0x00f7: NEW_INSTANCE  (r10 I:com.mapbox.geojson.AutoValue_Feature) =  com.mapbox.geojson.AutoValue_Feature \l0x00f9: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x00fa: INVOKE  \l  (r3 I:com.mapbox.geojson.AutoValue_Feature)\l  (r4 I:java.lang.String)\l  (r5 I:com.mapbox.geojson.BoundingBox)\l  (r6 I:java.lang.String)\l  (r7 I:com.mapbox.geojson.Geometry)\l  (r8 I:com.google.gson.JsonObject)\l com.mapbox.geojson.AutoValue_Feature.\<init\>(java.lang.String, com.mapbox.geojson.BoundingBox, java.lang.String, com.mapbox.geojson.Geometry, com.google.gson.JsonObject):void type: DIRECT \l}"];
Node_59 [shape=record,label="{59\:\ 0x00fd|0x00fd: RETURN  (r10 I:com.mapbox.geojson.Feature) \l}"];
MethodNode[shape=record,label="{public com.mapbox.geojson.Feature com.mapbox.geojson.AutoValue_Feature.GsonTypeAdapter.read((r9 'this' I:com.mapbox.geojson.AutoValue_Feature$GsonTypeAdapter A[IMMUTABLE_TYPE, THIS]), (r10 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_58;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_5;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_33;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_30;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_27;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_24;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_36[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_36;
Node_23 -> Node_36;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_36;
Node_26 -> Node_36;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_36;
Node_29 -> Node_36;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_36;
Node_32 -> Node_36;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_38;
Node_36 -> Node_42;
Node_36 -> Node_46;
Node_36 -> Node_50;
Node_36 -> Node_54;
Node_37 -> Node_5;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_5;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_45;
Node_45 -> Node_5;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_49 -> Node_5;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_53;
Node_53 -> Node_5;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_57;
Node_57 -> Node_5;
Node_58 -> Node_59;
}

