digraph "CFG forcom.mapbox.geojson.utils.PolylineUtils.encode(Ljava\/util\/List;I)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\ldouble r1 = java.lang.Math.pow(10.0d, (double) r12)\ljava.util.Iterator r11 = r11.iterator()\lr3 = 0\lr5 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|LOOP_START\lPHI: r3 r5 \l  PHI: (r3v2 long) = (r3v1 long), (r3v4 long) binds: [B:0:0x0000, B:3:0x0019] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 long) = (r5v0 long), (r5v3 long) binds: [B:0:0x0000, B:3:0x0019] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0013\-\>B:3:0x0019\l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|if (r11.hasNext() == false) goto L_0x0040\l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|LOOP_END\lLOOP:0: B:1:0x0013\-\>B:3:0x0019\l|com.mapbox.geojson.Point r12 = r11.next()\llong r7 = java.lang.Math.round(r12.latitude() * r1)\llong r9 = java.lang.Math.round(r12.longitude() * r1)\lencode(r7 \- r3, r0)\lencode(r9 \- r5, r0)\lr3 = r7\lr5 = r9\l}"];
Node_4 [shape=record,label="{4\:\ 0x0040}"];
Node_5 [shape=record,label="{5\:\ 0x0044|RETURN\l|return r0.toString()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0040|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static java.lang.String com.mapbox.geojson.utils.PolylineUtils.encode((r11v0 java.util.List\<com.mapbox.geojson.Point\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], \lAnnotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lcom\/mapbox\/geojson\/Point;, \>;I), Ljava\/lang\/String;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_6 -> Node_4;
}

