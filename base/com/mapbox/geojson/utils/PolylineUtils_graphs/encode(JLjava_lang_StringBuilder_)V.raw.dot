digraph "CFG forcom.mapbox.geojson.utils.PolylineUtils.encode(JLjava\/lang\/StringBuilder;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l0x0003: CMP_L  (r1 I:int) = (r6 I:long), (r1 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r1 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: ARITH  (r6 I:long) = (r6 I:long) \<\< (r0 I:long) \l0x0008: NOT  (r6 I:long) = (r6 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: ARITH  (r6 I:long) = (r6 I:long) \<\< (r0 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: CONST  (r0 I:?[long, double]) = (63 ?[long, double]) \l0x000d: CONST  (r2 I:?[long, double]) = (32 ?[long, double]) \l0x000f: CMP_L  (r4 I:int) = (r6 I:long), (r2 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r4 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:7:0x0023 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: CONST  (r4 I:?[long, double]) = (31 ?[long, double]) \l0x0015: ARITH  (r4 I:long) = (r4 I:long) & (r6 I:long) \l0x0016: ARITH  (r2 I:long) = (r2 I:long) \| (r4 I:long) \l0x0017: ARITH  (r2 I:long) = (r2 I:long) + (r0 I:long) \l0x0018: CAST  (r0 I:int) = (int) (r2 I:long) \l0x0019: INVOKE  (r0 I:char[]) = (r0 I:int) java.lang.Character.toChars(int):char[] type: STATIC \l0x001d: INVOKE  (r8 I:java.lang.StringBuilder), (r0 I:char[]) java.lang.StringBuilder.append(char[]):java.lang.StringBuilder type: VIRTUAL \l0x0020: CONST  (r0 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0021: ARITH  (r6 I:long) = (r6 I:long) \>\> (r0 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0024: ARITH  (r6 I:long) = (r6 I:long) + (r0 I:long) \l0x0025: CAST  (r6 I:int) = (int) (r6 I:long) \l0x0026: INVOKE  (r6 I:char[]) = (r6 I:int) java.lang.Character.toChars(int):char[] type: STATIC \l0x002a: INVOKE  (r8 I:java.lang.StringBuilder), (r6 I:char[]) java.lang.StringBuilder.append(char[]):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: RETURN   \l}"];
MethodNode[shape=record,label="{private static void com.mapbox.geojson.utils.PolylineUtils.encode((r6 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_4;
Node_7 -> Node_8;
}

