digraph "CFG forcom.mapbox.geojson.utils.PolylineUtils.encode(Ljava\/util\/List;I)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0002: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0005: CAST  (r1 I:double) = (double) (r12 I:int) \l0x0006: CONST  (r3 I:?[long, double]) = \l  (4621819117588971520(0x4024000000000000, double:10.0) ?[long, double])\l \l0x0008: INVOKE  (r1 I:double) = (r3 I:double), (r1 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x000c: INVOKE  (r11 I:java.util.Iterator) = (r11 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l0x0010: CONST  (r3 I:?[long, double]) = (0 ?[long, double]) \l0x0012: MOVE  (r5 I:?[long, double]) = (r3 I:?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: INVOKE  (r12 I:boolean) = (r11 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0040 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: INVOKE  (r12 I:java.lang.Object) = (r11 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x001d: CHECK_CAST  (r12 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r12 I:?[OBJECT, ARRAY]) \l0x001f: INVOKE  (r7 I:double) = (r12 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.latitude():double type: VIRTUAL \l0x0023: ARITH  (r7 I:double) = (r7 I:double) * (r1 I:double) \l0x0025: INVOKE  (r7 I:long) = (r7 I:double) java.lang.Math.round(double):long type: STATIC \l0x0029: INVOKE  (r9 I:double) = (r12 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.longitude():double type: VIRTUAL \l0x002d: ARITH  (r9 I:double) = (r9 I:double) * (r1 I:double) \l0x002f: INVOKE  (r9 I:long) = (r9 I:double) java.lang.Math.round(double):long type: STATIC \l0x0033: ARITH  (r3 I:long) = (r7 I:long) \- (r3 I:long) \l0x0035: ARITH  (r5 I:long) = (r9 I:long) \- (r5 I:long) \l0x0037: INVOKE  (r3 I:long), (r0 I:java.lang.StringBuilder) com.mapbox.geojson.utils.PolylineUtils.encode(long, java.lang.StringBuilder):void type: STATIC \l0x003a: INVOKE  (r5 I:long), (r0 I:java.lang.StringBuilder) com.mapbox.geojson.utils.PolylineUtils.encode(long, java.lang.StringBuilder):void type: STATIC \l0x003d: MOVE  (r3 I:?[long, double]) = (r7 I:?[long, double]) \l0x003e: MOVE  (r5 I:?[long, double]) = (r9 I:?[long, double]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0040|0x0040: INVOKE  (r11 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0044|0x0044: RETURN  (r11 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static java.lang.String com.mapbox.geojson.utils.PolylineUtils.encode((r11 I:java.util.List\<com.mapbox.geojson.Point\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], \lAnnotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lcom\/mapbox\/geojson\/Point;, \>;I), Ljava\/lang\/String;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

