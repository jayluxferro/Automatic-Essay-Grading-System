digraph "CFG forcom.mapbox.geojson.utils.PolylineUtils.simplifyDpStep(Ljava\/util\/List;IIDLjava\/util\/List;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0001: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: NEW_INSTANCE  (r8 I:java.util.ArrayList) =  java.util.ArrayList \l0x0004: INVOKE  (r8 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0007: ARITH  (r0 I:int) = (r13 I:int) + (1 int) \l0x0009: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: MOVE  (r2 I:?[long, double]) = (r15 I:?[long, double]) \l0x000b: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r0 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:6:0x002d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: INVOKE  (r4 I:java.lang.Object) = (r12 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0012: CHECK_CAST  (r4 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r4 I:?[OBJECT, ARRAY]) \l0x0014: INVOKE  (r5 I:java.lang.Object) = (r12 I:java.util.List), (r13 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0018: CHECK_CAST  (r5 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r5 I:?[OBJECT, ARRAY]) \l0x001a: INVOKE  (r10 I:java.lang.Object) = (r12 I:java.util.List), (r14 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x001e: CHECK_CAST  (r10 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r10 I:?[OBJECT, ARRAY]) \l0x0020: INVOKE  (r4 I:double) = \l  (r4 I:com.mapbox.geojson.Point)\l  (r5 I:com.mapbox.geojson.Point)\l  (r10 I:com.mapbox.geojson.Point)\l com.mapbox.geojson.utils.PolylineUtils.getSqSegDist(com.mapbox.geojson.Point, com.mapbox.geojson.Point, com.mapbox.geojson.Point):double type: STATIC \l0x0024: CMP_L  (r10 I:int) = (r4 I:double), (r2 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0026|0x0026: IF  (r10 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:5:0x002a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0029: MOVE  (r2 I:?[long, double]) = (r4 I:?[long, double]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|0x002a: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|0x002d: CMP_L  (r0 I:int) = (r2 I:double), (r15 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:14:0x005b \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: ARITH  (r0 I:int) = (r9 I:int) \- (r13 I:int) \l0x0033: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: IF  (r0 I:?[int, byte, short, char]) \<= (r11 I:?[int, byte, short, char])  \-\> B:11:0x0043 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0037: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0038: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0039: MOVE  (r3 I:?[long, double]) = (r15 I:?[long, double]) \l0x003a: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x003c: INVOKE  (r0 I:java.util.List) = \l  (r0 I:java.util.List)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:double)\l  (r5 I:java.util.List)\l com.mapbox.geojson.utils.PolylineUtils.simplifyDpStep(java.util.List, int, int, double, java.util.List):java.util.List type: STATIC \l0x0040: INVOKE  (r8 I:java.util.ArrayList), (r0 I:java.util.Collection) java.util.ArrayList.addAll(java.util.Collection):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0043|0x0043: INVOKE  (r0 I:java.lang.Object) = (r12 I:java.util.List), (r9 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0047: INVOKE  (r8 I:java.util.ArrayList), (r0 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x004a: ARITH  (r0 I:int) = (r7 I:int) \- (r9 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x004c|0x004c: IF  (r0 I:?[int, byte, short, char]) \<= (r11 I:?[int, byte, short, char])  \-\> B:14:0x005b \l}"];
Node_13 [shape=record,label="{13\:\ 0x004e|0x004e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x004f: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0050: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0051: MOVE  (r3 I:?[long, double]) = (r15 I:?[long, double]) \l0x0052: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0054: INVOKE  (r0 I:java.util.List) = \l  (r0 I:java.util.List)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:double)\l  (r5 I:java.util.List)\l com.mapbox.geojson.utils.PolylineUtils.simplifyDpStep(java.util.List, int, int, double, java.util.List):java.util.List type: STATIC \l0x0058: INVOKE  (r8 I:java.util.ArrayList), (r0 I:java.util.Collection) java.util.ArrayList.addAll(java.util.Collection):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x005b|0x005b: RETURN  (r8 I:java.util.List\<com.mapbox.geojson.Point\>) \l}"];
MethodNode[shape=record,label="{private static java.util.List\<com.mapbox.geojson.Point\> com.mapbox.geojson.utils.PolylineUtils.simplifyDpStep((r12 I:java.util.List\<com.mapbox.geojson.Point\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:java.util.List\<com.mapbox.geojson.Point\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lcom\/mapbox\/geojson\/Point;, \>;IID, Ljava\/util\/List\<, Lcom\/mapbox\/geojson\/Point;, \>;), Ljava\/util\/List\<, Lcom\/mapbox\/geojson\/Point;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
}

