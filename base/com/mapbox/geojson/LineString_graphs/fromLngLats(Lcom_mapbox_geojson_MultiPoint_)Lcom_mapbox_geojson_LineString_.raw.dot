digraph "CFG forcom.mapbox.geojson.LineString.fromLngLats(Lcom\/mapbox\/geojson\/MultiPoint;)Lcom\/mapbox\/geojson\/LineString;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.mapbox.geojson.AutoValue_LineString) =  com.mapbox.geojson.AutoValue_LineString \l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"LineString\" \l0x0004: INVOKE  (r3 I:java.util.List) = (r3 I:com.mapbox.geojson.MultiPoint) com.mapbox.geojson.MultiPoint.coordinates():java.util.List type: VIRTUAL \l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: INVOKE  \l  (r0 I:com.mapbox.geojson.AutoValue_LineString)\l  (r1 I:java.lang.String)\l  (r2 I:com.mapbox.geojson.BoundingBox)\l  (r3 I:java.util.List)\l com.mapbox.geojson.AutoValue_LineString.\<init\>(java.lang.String, com.mapbox.geojson.BoundingBox, java.util.List):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: RETURN  (r0 I:com.mapbox.geojson.LineString) \l}"];
MethodNode[shape=record,label="{public static com.mapbox.geojson.LineString com.mapbox.geojson.LineString.fromLngLats((r3 I:com.mapbox.geojson.MultiPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

