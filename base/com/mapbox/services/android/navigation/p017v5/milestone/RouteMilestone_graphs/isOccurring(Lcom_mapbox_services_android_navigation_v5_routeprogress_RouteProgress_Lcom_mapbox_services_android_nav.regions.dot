digraph "CFG forcom.mapbox.services.android.navigation.v5.milestone.RouteMilestone.isOccurring(Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;)Z" {
subgraph cluster_Region_1466176457 {
label = "R(1:(2:(1:7)|(2:4|5)))";
node [shape=record,color=blue];
subgraph cluster_Region_573190427 {
label = "R(2:(1:7)|(2:4|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1505896037 {
label = "IF [B:1:0x000e, B:3:0x0012] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r1.builder.getTrigger().isOccurring(com.mapbox.services.android.navigation.p017v5.milestone.TriggerProperty.getSparseArray(r2, r3)) == false) goto L_?\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|ADDED_TO_REGION\l|if (r1.called == true) goto L_?\l}"];
subgraph cluster_Region_280121336 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1732246652 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0014|r1.called = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|RETURN\l|return true\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0010}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.services.android.navigation.v5.milestone.RouteMilestone.isOccurring((r1v0 'this' com.mapbox.services.android.navigation.v5.milestone.RouteMilestone A[IMMUTABLE_TYPE, THIS]), (r2v0 com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_0 -> Node_1;
Node_2 -> Node_3;
}

