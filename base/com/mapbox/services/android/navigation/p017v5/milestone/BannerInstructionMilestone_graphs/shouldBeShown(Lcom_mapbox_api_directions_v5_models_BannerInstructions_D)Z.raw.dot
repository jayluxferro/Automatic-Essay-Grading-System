digraph "CFG forcom.mapbox.services.android.navigation.v5.milestone.BannerInstructionMilestone.shouldBeShown(Lcom\/mapbox\/api\/directions\/v5\/models\/BannerInstructions;D)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.mapbox.api.directions.v5.models.BannerInstructions) = \l  (r5 I:com.mapbox.services.android.navigation.v5.milestone.BannerInstructionMilestone)\l com.mapbox.services.android.navigation.v5.milestone.BannerInstructionMilestone.instructions com.mapbox.api.directions.v5.models.BannerInstructions \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:com.mapbox.api.directions.v5.models.BannerInstructions) = \l  (r5 I:com.mapbox.services.android.navigation.v5.milestone.BannerInstructionMilestone)\l com.mapbox.services.android.navigation.v5.milestone.BannerInstructionMilestone.instructions com.mapbox.api.directions.v5.models.BannerInstructions \l0x0008: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r6 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0018 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0018 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|0x0016: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|0x0018: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0025 \l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|0x001b: INVOKE  (r3 I:double) = \l  (r6 I:com.mapbox.api.directions.v5.models.BannerInstructions)\l com.mapbox.api.directions.v5.models.BannerInstructions.distanceAlongGeometry():double type: VIRTUAL \l0x001f: CMP_L  (r7 I:int) = (r3 I:double), (r7 I:double) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|0x0021: IF  (r7 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:15:0x0025 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|0x0023: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|0x0025: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0026|0x0026: IGET  (r8 I:com.mapbox.api.directions.v5.models.BannerInstructions) = \l  (r5 I:com.mapbox.services.android.navigation.v5.milestone.BannerInstructionMilestone)\l com.mapbox.services.android.navigation.v5.milestone.BannerInstructionMilestone.instructions com.mapbox.api.directions.v5.models.BannerInstructions \l}"];
Node_17 [shape=record,label="{17\:\ 0x0028|0x0028: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x002e \l}"];
Node_18 [shape=record,label="{18\:\ 0x002a|0x002a: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x002e \l}"];
Node_19 [shape=record,label="{19\:\ 0x002c|0x002c: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x002e|0x002e: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x002f|0x002f: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0033 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0031|0x0031: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0034 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0033|0x0033: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0034|0x0034: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean com.mapbox.services.android.navigation.v5.milestone.BannerInstructionMilestone.shouldBeShown((r5 'this' I:com.mapbox.services.android.navigation.v5.milestone.BannerInstructionMilestone A[IMMUTABLE_TYPE, THIS]), (r6 I:com.mapbox.api.directions.v5.models.BannerInstructions A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
}

