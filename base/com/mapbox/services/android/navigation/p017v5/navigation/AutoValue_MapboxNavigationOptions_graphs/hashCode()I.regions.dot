digraph "CFG forcom.mapbox.services.android.navigation.v5.navigation.AutoValue_MapboxNavigationOptions.hashCode()I" {
subgraph cluster_Region_1942463107 {
label = "R(4:0|24|(1:26)|32)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r4 = 1237\l}"];
Node_24 [shape=record,label="{24\:\ 0x00d1|PHI: r3 \l  PHI: (r3v40 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r0 = (((((((((((((((((((((((((((((((int) ((java.lang.Double.doubleToLongBits(r10.maxTurnCompletionOffset) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r10.maxTurnCompletionOffset))) ^ 1000003) * 1000003) ^ ((int) ((java.lang.Double.doubleToLongBits(r10.maneuverZoneRadius) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r10.maneuverZoneRadius)))) * 1000003) ^ ((int) ((java.lang.Double.doubleToLongBits(r10.maximumDistanceOffRoute) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r10.maximumDistanceOffRoute)))) * 1000003) ^ ((int) ((java.lang.Double.doubleToLongBits(r10.deadReckoningTimeInterval) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r10.deadReckoningTimeInterval)))) * 1000003) ^ ((int) ((java.lang.Double.doubleToLongBits(r10.maxManipulatedCourseAngle) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r10.maxManipulatedCourseAngle)))) * 1000003) ^ ((int) ((java.lang.Double.doubleToLongBits(r10.userLocationSnapDistance) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r10.userLocationSnapDistance)))) * 1000003) ^ r10.secondsBeforeReroute) * 1000003) ^ (r10.defaultMilestonesEnabled ? 1231 : 1237)) * 1000003) ^ (r10.snapToRoute ? 1231 : 1237)) * 1000003) ^ (r10.enableOffRouteDetection ? 1231 : 1237)) * 1000003) ^ (r10.enableFasterRouteDetection ? 1231 : 1237)) * 1000003) ^ (r10.manuallyEndNavigationUponCompletion ? 1231 : 1237)) * 1000003) ^ ((int) ((java.lang.Double.doubleToLongBits(r10.metersRemainingTillArrival) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r10.metersRemainingTillArrival)))) * 1000003) ^ (r10.isFromNavigationUi ? 1231 : 1237)) * 1000003) ^ ((int) ((java.lang.Double.doubleToLongBits(r10.minimumDistanceBeforeRerouting) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r10.minimumDistanceBeforeRerouting)))) * 1000003\l}"];
subgraph cluster_IfRegion_2060650995 {
label = "IF [B:25:0x00e9] THEN: R(1:26) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x00e9|if (r10.isDebugLoggingEnabled == true) goto L_0x00eb\l}"];
subgraph cluster_Region_767309680 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x00eb|r4 = 1231\l}"];
}
}
Node_32 [shape=record,label="{32\:\ 0x010c|RETURN\l|return ((((((((r0 ^ r4) * 1000003) ^ (r10.navigationNotification == null ? 0 : r10.navigationNotification.hashCode())) * 1000003) ^ r10.roundingIncrement) * 1000003) ^ r10.timeFormatType) * 1000003) ^ r10.locationAcceptableAccuracyInMetersThreshold\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x007c}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x007e}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0081}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0083|PHI: r3 \l  PHI: (r3v29 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0088}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x008a}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x008d}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x008f|PHI: r3 \l  PHI: (r3v31 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0094}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0096}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0099}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x009b|PHI: r3 \l  PHI: (r3v33 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x00a0}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x00a2}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x00a5}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x00a7|PHI: r3 \l  PHI: (r3v35 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x00ac}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x00ae}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x00b1}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x00b3|PHI: r3 \l  PHI: (r3v37 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x00ca}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x00cc}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x00cf}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x00ed|PHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:25:0x00e9, B:26:0x00eb] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x00f2}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x00f4}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x00f6}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x00fc|PHI: r2 \l  PHI: (r2v6 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public int com.mapbox.services.android.navigation.v5.navigation.AutoValue_MapboxNavigationOptions.hashCode((r10v0 'this' com.mapbox.services.android.navigation.v5.navigation.AutoValue_MapboxNavigationOptions A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_27[style=dashed];
Node_26 -> Node_27;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
}

