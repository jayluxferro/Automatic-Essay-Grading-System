digraph "CFG forcom.mapbox.services.android.navigation.v5.navigation.AutoValue_MapboxNavigationOptions.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = (((((((((((((((int) ((java.lang.Double.doubleToLongBits(r10.maxTurnCompletionOffset) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r10.maxTurnCompletionOffset))) ^ 1000003) * 1000003) ^ ((int) ((java.lang.Double.doubleToLongBits(r10.maneuverZoneRadius) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r10.maneuverZoneRadius)))) * 1000003) ^ ((int) ((java.lang.Double.doubleToLongBits(r10.maximumDistanceOffRoute) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r10.maximumDistanceOffRoute)))) * 1000003) ^ ((int) ((java.lang.Double.doubleToLongBits(r10.deadReckoningTimeInterval) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r10.deadReckoningTimeInterval)))) * 1000003) ^ ((int) ((java.lang.Double.doubleToLongBits(r10.maxManipulatedCourseAngle) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r10.maxManipulatedCourseAngle)))) * 1000003) ^ ((int) ((java.lang.Double.doubleToLongBits(r10.userLocationSnapDistance) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r10.userLocationSnapDistance)))) * 1000003) ^ r10.secondsBeforeReroute) * 1000003\lr4 = 1237\l}"];
Node_1 [shape=record,label="{1\:\ 0x007c|if (r10.defaultMilestonesEnabled == false) goto L_0x0081\l}"];
Node_2 [shape=record,label="{2\:\ 0x007e|r3 = 1231\l}"];
Node_3 [shape=record,label="{3\:\ 0x0081|r3 = 1237\l}"];
Node_4 [shape=record,label="{4\:\ 0x0083|PHI: r3 \l  PHI: (r3v29 int) = (r3v51 int), (r3v52 int) binds: [B:3:0x0081, B:2:0x007e] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r3) * 1000003\l}"];
Node_5 [shape=record,label="{5\:\ 0x0088|if (r10.snapToRoute == false) goto L_0x008d\l}"];
Node_6 [shape=record,label="{6\:\ 0x008a|r3 = 1231\l}"];
Node_7 [shape=record,label="{7\:\ 0x008d|r3 = 1237\l}"];
Node_8 [shape=record,label="{8\:\ 0x008f|PHI: r3 \l  PHI: (r3v31 int) = (r3v49 int), (r3v50 int) binds: [B:7:0x008d, B:6:0x008a] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r3) * 1000003\l}"];
Node_9 [shape=record,label="{9\:\ 0x0094|if (r10.enableOffRouteDetection == false) goto L_0x0099\l}"];
Node_10 [shape=record,label="{10\:\ 0x0096|r3 = 1231\l}"];
Node_11 [shape=record,label="{11\:\ 0x0099|r3 = 1237\l}"];
Node_12 [shape=record,label="{12\:\ 0x009b|PHI: r3 \l  PHI: (r3v33 int) = (r3v47 int), (r3v48 int) binds: [B:11:0x0099, B:10:0x0096] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r3) * 1000003\l}"];
Node_13 [shape=record,label="{13\:\ 0x00a0|if (r10.enableFasterRouteDetection == false) goto L_0x00a5\l}"];
Node_14 [shape=record,label="{14\:\ 0x00a2|r3 = 1231\l}"];
Node_15 [shape=record,label="{15\:\ 0x00a5|r3 = 1237\l}"];
Node_16 [shape=record,label="{16\:\ 0x00a7|PHI: r3 \l  PHI: (r3v35 int) = (r3v45 int), (r3v46 int) binds: [B:15:0x00a5, B:14:0x00a2] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r3) * 1000003\l}"];
Node_17 [shape=record,label="{17\:\ 0x00ac|if (r10.manuallyEndNavigationUponCompletion == false) goto L_0x00b1\l}"];
Node_18 [shape=record,label="{18\:\ 0x00ae|r3 = 1231\l}"];
Node_19 [shape=record,label="{19\:\ 0x00b1|r3 = 1237\l}"];
Node_20 [shape=record,label="{20\:\ 0x00b3|PHI: r3 \l  PHI: (r3v37 int) = (r3v43 int), (r3v44 int) binds: [B:19:0x00b1, B:18:0x00ae] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (((r0 ^ r3) * 1000003) ^ ((int) ((java.lang.Double.doubleToLongBits(r10.metersRemainingTillArrival) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r10.metersRemainingTillArrival)))) * 1000003\l}"];
Node_21 [shape=record,label="{21\:\ 0x00ca|if (r10.isFromNavigationUi == false) goto L_0x00cf\l}"];
Node_22 [shape=record,label="{22\:\ 0x00cc|r3 = 1231\l}"];
Node_23 [shape=record,label="{23\:\ 0x00cf|r3 = 1237\l}"];
Node_24 [shape=record,label="{24\:\ 0x00d1|PHI: r3 \l  PHI: (r3v40 int) = (r3v41 int), (r3v42 int) binds: [B:23:0x00cf, B:22:0x00cc] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (((r0 ^ r3) * 1000003) ^ ((int) ((java.lang.Double.doubleToLongBits(r10.minimumDistanceBeforeRerouting) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r10.minimumDistanceBeforeRerouting)))) * 1000003\l}"];
Node_25 [shape=record,label="{25\:\ 0x00e9|if (r10.isDebugLoggingEnabled == false) goto L_0x00ed\l}"];
Node_26 [shape=record,label="{26\:\ 0x00eb|r4 = 1231\l}"];
Node_27 [shape=record,label="{27\:\ 0x00ed|PHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:25:0x00e9, B:26:0x00eb] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r4) * 1000003\l}"];
Node_28 [shape=record,label="{28\:\ 0x00f2|if (r10.navigationNotification != null) goto L_0x00f6\l}"];
Node_29 [shape=record,label="{29\:\ 0x00f4|r2 = 0\l}"];
Node_30 [shape=record,label="{30\:\ 0x00f6|int r2 = r10.navigationNotification.hashCode()\l}"];
Node_31 [shape=record,label="{31\:\ 0x00fc|PHI: r2 \l  PHI: (r2v6 int) = (r2v10 int), (r2v11 int) binds: [B:30:0x00f6, B:29:0x00f4] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x010c|RETURN\l|return ((((((r0 ^ r2) * 1000003) ^ r10.roundingIncrement) * 1000003) ^ r10.timeFormatType) * 1000003) ^ r10.locationAcceptableAccuracyInMetersThreshold\l}"];
MethodNode[shape=record,label="{public int com.mapbox.services.android.navigation.v5.navigation.AutoValue_MapboxNavigationOptions.hashCode((r10v0 'this' com.mapbox.services.android.navigation.v5.navigation.AutoValue_MapboxNavigationOptions A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
}

