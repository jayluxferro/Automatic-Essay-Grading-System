digraph "CFG forcom.mapbox.services.android.navigation.v5.navigation.MapboxNavigation.removeMilestone(I)V" {
subgraph cluster_Region_492671642 {
label = "R(3:0|(2:3|(2:5|6))|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r0 = r3.milestones.iterator()\l}"];
subgraph cluster_LoopRegion_1333930248 {
label = "LOOP:0: (2:3|(2:5|6))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|if (r0.hasNext() != false) goto L_0x000c\l}"];
subgraph cluster_Region_641713939 {
label = "R(2:3|(2:5|6))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|com.mapbox.services.android.navigation.v5.milestone.Milestone r1 = r0.next()\l}"];
subgraph cluster_IfRegion_1771663430 {
label = "IF [B:4:0x0016] THEN: R(2:5|6) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0016|LOOP_END\lLOOP:0: B:1:0x0006\-\>B:4:0x0016\l|if (r4 == r1.getIdentifier()) goto L_0x0018\l}"];
subgraph cluster_Region_404879021 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0018|removeMilestone(r1)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|RETURN\l|return\l}"];
}
}
}
}
Node_7 [shape=record,label="{7\:\ 0x001c|timber.log.Timber.m201w(\"No milestone found with the specified identifier.\", new java.lang.Object[0])\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0006|LOOP_START\lLOOP:0: B:1:0x0006\-\>B:4:0x0016\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0024}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0018|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.mapbox.services.android.navigation.v5.navigation.MapboxNavigation.removeMilestone((r3v0 'this' com.mapbox.services.android.navigation.v5.navigation.MapboxNavigation A[IMMUTABLE_TYPE, THIS]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_10[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_1[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_1 -> Node_2;
Node_9 -> Node_5;
Node_10 -> Node_7;
}

