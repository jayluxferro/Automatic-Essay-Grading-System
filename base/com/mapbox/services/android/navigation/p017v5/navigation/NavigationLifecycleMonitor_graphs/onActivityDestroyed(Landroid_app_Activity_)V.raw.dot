digraph "CFG forcom.mapbox.services.android.navigation.v5.navigation.NavigationLifecycleMonitor.onActivityDestroyed(Landroid\/app\/Activity;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry) =  com.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry.getInstance():com.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry type: STATIC \l0x0004: INVOKE  (r1 I:boolean) = (r3 I:android.app.Activity) android.app.Activity.isChangingConfigurations():boolean type: VIRTUAL \l0x0008: INVOKE  \l  (r0 I:com.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry)\l  (r1 I:boolean)\l com.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry.endSession(boolean):void type: VIRTUAL \l0x000b: INVOKE  (r0 I:boolean) = (r3 I:android.app.Activity) android.app.Activity.isFinishing():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: INVOKE  (r3 I:android.app.Application) = (r3 I:android.app.Activity) android.app.Activity.getApplication():android.app.Application type: VIRTUAL \l0x0015: INVOKE  \l  (r3 I:android.app.Application)\l  (r2 I:android.app.Application$ActivityLifecycleCallbacks)\l android.app.Application.unregisterActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.services.android.navigation.v5.navigation.NavigationLifecycleMonitor.onActivityDestroyed((r2 'this' I:com.mapbox.services.android.navigation.v5.navigation.NavigationLifecycleMonitor A[IMMUTABLE_TYPE, THIS]), (r3 I:android.app.Activity A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

