digraph "CFG forcom.mapbox.services.android.navigation.v5.navigation.NavigationHelper.increaseIndex(Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;Lcom\/mapbox\/services\/android\/navigation\/v5\/navigation\/NavigationIndices;)Lcom\/mapbox\/services\/android\/navigation\/v5\/navigation\/NavigationIndices;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.mapbox.api.directions.v5.models.DirectionsRoute) = \l  (r5 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress)\l com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress.directionsRoute():com.mapbox.api.directions.v5.models.DirectionsRoute type: VIRTUAL \l0x0004: INVOKE  (r1 I:int) = \l  (r6 I:com.mapbox.services.android.navigation.v5.navigation.NavigationIndices)\l com.mapbox.services.android.navigation.v5.navigation.NavigationIndices.stepIndex():int type: VIRTUAL \l0x0008: INVOKE  (r2 I:int) = \l  (r6 I:com.mapbox.services.android.navigation.v5.navigation.NavigationIndices)\l com.mapbox.services.android.navigation.v5.navigation.NavigationIndices.legIndex():int type: VIRTUAL \l0x000c: INVOKE  (r3 I:java.util.List) = (r0 I:com.mapbox.api.directions.v5.models.DirectionsRoute) com.mapbox.api.directions.v5.models.DirectionsRoute.legs():java.util.List type: VIRTUAL \l0x0010: INVOKE  (r3 I:int) = (r3 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0014: INVOKE  (r0 I:java.util.List) = (r0 I:com.mapbox.api.directions.v5.models.DirectionsRoute) com.mapbox.api.directions.v5.models.DirectionsRoute.legs():java.util.List type: VIRTUAL \l0x0018: INVOKE  (r5 I:int) = \l  (r5 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress)\l com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress.legIndex():int type: VIRTUAL \l0x001c: INVOKE  (r5 I:java.lang.Object) = (r0 I:java.util.List), (r5 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0020: CHECK_CAST  (r5 I:com.mapbox.api.directions.v5.models.RouteLeg) = (com.mapbox.api.directions.v5.models.RouteLeg) (r5 I:?[OBJECT, ARRAY]) \l0x0022: INVOKE  (r5 I:java.util.List) = (r5 I:com.mapbox.api.directions.v5.models.RouteLeg) com.mapbox.api.directions.v5.models.RouteLeg.steps():java.util.List type: VIRTUAL \l0x0026: INVOKE  (r5 I:int) = (r5 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x002a: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x002b: ARITH  (r3 I:int) = (r3 I:int) \- (r0 I:int) \l0x002c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x002d|0x002d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0031 \l}"];
Node_2 [shape=record,label="{2\:\ 0x002f|0x002f: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0031|0x0031: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0032|0x0032: ARITH  (r5 I:int) = (r5 I:int) \- (r0 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0033|0x0033: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0037 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0035|0x0035: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|0x0037: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0038|0x0038: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0042 \l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|0x003a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0042 \l}"];
Node_10 [shape=record,label="{10\:\ 0x003c|0x003c: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int) \l0x003d: INVOKE  (r5 I:com.mapbox.services.android.navigation.v5.navigation.NavigationIndices) = (r2 I:int), (r4 I:int) com.mapbox.services.android.navigation.v5.navigation.NavigationIndices.create(int, int):com.mapbox.services.android.navigation.v5.navigation.NavigationIndices type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0041|0x0041: RETURN  \l  (r5 I:com.mapbox.services.android.navigation.v5.navigation.NavigationIndices)\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0042|0x0042: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0045 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|0x0044: RETURN  \l  (r6 I:com.mapbox.services.android.navigation.v5.navigation.NavigationIndices)\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0045|0x0045: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x0046: INVOKE  (r5 I:com.mapbox.services.android.navigation.v5.navigation.NavigationIndices) = (r2 I:int), (r1 I:int) com.mapbox.services.android.navigation.v5.navigation.NavigationIndices.create(int, int):com.mapbox.services.android.navigation.v5.navigation.NavigationIndices type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|0x004a: RETURN  \l  (r5 I:com.mapbox.services.android.navigation.v5.navigation.NavigationIndices)\l \l}"];
MethodNode[shape=record,label="{static com.mapbox.services.android.navigation.v5.navigation.NavigationIndices com.mapbox.services.android.navigation.v5.navigation.NavigationHelper.increaseIndex((r5 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.mapbox.services.android.navigation.v5.navigation.NavigationIndices A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_15;
}

