digraph "CFG forcom.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry.onRouteProgressUpdate(Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.metricProgress = new com.mapbox.services.android.navigation.p017v5.routeprogress.MetricsRouteProgress(r5)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r4.navigationSessionState.startTimestamp() != null) goto L_0x001f\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f}"];
Node_3 [shape=record,label="{3\:\ 0x001b|if ((r5.currentLegProgress().distanceTraveled() \> 0.0d ? 1 : (r5.currentLegProgress().distanceTraveled() == 0.0d ? 0 : \-1)) \<= 0) goto L_0x001f\l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|r5 = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|r5 = false\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|PHI: r5 \l  PHI: (r5v1 boolean) = (r5v7 boolean), (r5v10 boolean) binds: [B:5:0x001f, B:4:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 == false) goto L_?\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|r4.navigationSessionState = r4.navigationSessionState.toBuilder().startTimestamp(new java.util.Date()).build()\lupdateLifecyclePercentages()\lcom.mapbox.services.android.navigation.p017v5.navigation.NavigationMetricsWrapper.departEvent(r4.navigationSessionState, r4.metricProgress, r4.metricLocation.getLocation())\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry.onRouteProgressUpdate((r4v0 'this' com.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry A[IMMUTABLE_TYPE, THIS]), (r5v0 com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
}

