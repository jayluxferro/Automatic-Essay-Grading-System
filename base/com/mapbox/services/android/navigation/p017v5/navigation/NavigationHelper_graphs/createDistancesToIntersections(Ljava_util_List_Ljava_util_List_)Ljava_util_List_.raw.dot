digraph "CFG forcom.mapbox.services.android.navigation.v5.navigation.NavigationHelper.createDistancesToIntersections(Ljava\/util\/List;Ljava\/util\/List;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r6 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: INVOKE  (r2 I:boolean) = (r7 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0064 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0014 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: INVOKE  (r0 I:com.mapbox.geojson.LineString) = (r6 I:java.util.List) com.mapbox.geojson.LineString.fromLngLats(java.util.List):com.mapbox.geojson.LineString type: STATIC \l0x0018: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x001c: CHECK_CAST  (r6 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r6 I:?[OBJECT, ARRAY]) \l0x001e: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0020: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0023: INVOKE  (r7 I:java.util.Iterator) = (r7 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: INVOKE  (r2 I:boolean) = (r7 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0063 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: INVOKE  (r2 I:java.lang.Object) = (r7 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0031: CHECK_CAST  (r2 I:com.mapbox.api.directions.v5.models.StepIntersection) = (com.mapbox.api.directions.v5.models.StepIntersection) (r2 I:?[OBJECT, ARRAY]) \l0x0033: INVOKE  (r3 I:com.mapbox.geojson.Point) = (r2 I:com.mapbox.api.directions.v5.models.StepIntersection) com.mapbox.api.directions.v5.models.StepIntersection.location():com.mapbox.geojson.Point type: VIRTUAL \l0x0037: INVOKE  (r4 I:boolean) = (r6 I:java.lang.Object), (r3 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x004c \l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: NEW_INSTANCE  (r3 I:android.support.v4.util.Pair) =  android.support.v4.util.Pair \l0x003f: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x0041: INVOKE  (r4 I:java.lang.Double) = (r4 I:double) java.lang.Double.valueOf(double):java.lang.Double type: STATIC \l0x0045: INVOKE  \l  (r3 I:android.support.v4.util.Pair)\l  (r2 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l android.support.v4.util.Pair.\<init\>(java.lang.Object, java.lang.Object):void type: DIRECT \l0x0048: INVOKE  (r1 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|0x004c: INVOKE  (r3 I:com.mapbox.geojson.LineString) = \l  (r6 I:com.mapbox.geojson.Point)\l  (r3 I:com.mapbox.geojson.Point)\l  (r0 I:com.mapbox.geojson.LineString)\l com.mapbox.turf.TurfMisc.lineSlice(com.mapbox.geojson.Point, com.mapbox.geojson.Point, com.mapbox.geojson.LineString):com.mapbox.geojson.LineString type: STATIC \l0x0050: CONST_STR  (r4 I:java.lang.String) =  \"meters\" \l0x0052: INVOKE  (r3 I:double) = \l  (r3 I:com.mapbox.geojson.LineString)\l  (r4 I:java.lang.String)\l com.mapbox.turf.TurfMeasurement.length(com.mapbox.geojson.LineString, java.lang.String):double type: STATIC \l0x0056: NEW_INSTANCE  (r5 I:android.support.v4.util.Pair) =  android.support.v4.util.Pair \l0x0058: INVOKE  (r3 I:java.lang.Double) = (r3 I:double) java.lang.Double.valueOf(double):java.lang.Double type: STATIC \l0x005c: INVOKE  \l  (r5 I:android.support.v4.util.Pair)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l android.support.v4.util.Pair.\<init\>(java.lang.Object, java.lang.Object):void type: DIRECT \l0x005f: INVOKE  (r1 I:java.util.List), (r5 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x0063|0x0063: RETURN  \l  (r1 I:java.util.List\<android.support.v4.util.Pair\<com.mapbox.api.directions.v5.models.StepIntersection, java.lang.Double\>\>)\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0064|0x0064: INVOKE  (r6 I:java.util.List) =  java.util.Collections.emptyList():java.util.List type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x0068|0x0068: RETURN  \l  (r6 I:java.util.List\<android.support.v4.util.Pair\<com.mapbox.api.directions.v5.models.StepIntersection, java.lang.Double\>\>)\l \l}"];
MethodNode[shape=record,label="{public static java.util.List\<android.support.v4.util.Pair\<com.mapbox.api.directions.v5.models.StepIntersection, java.lang.Double\>\> com.mapbox.services.android.navigation.v5.navigation.NavigationHelper.createDistancesToIntersections((r6 I:java.util.List\<com.mapbox.geojson.Point\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.List\<com.mapbox.api.directions.v5.models.StepIntersection\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lcom\/mapbox\/geojson\/Point;, \>;, Ljava\/util\/List\<, Lcom\/mapbox\/api\/directions\/v5\/models\/StepIntersection;, \>;), Ljava\/util\/List\<, Landroid\/support\/v4\/util\/Pair\<, Lcom\/mapbox\/api\/directions\/v5\/models\/StepIntersection;, Ljava\/lang\/Double;, \>;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_16;
Node_6 -> Node_8;
Node_6 -> Node_16[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_9;
Node_14 -> Node_9;
Node_16 -> Node_17;
}

