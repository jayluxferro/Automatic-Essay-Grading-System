digraph "CFG forcom.mapbox.services.android.navigation.v5.navigation.NavigationHelper.legDistanceRemaining(DIILcom\/mapbox\/api\/directions\/v5\/models\/DirectionsRoute;)D" {
subgraph cluster_Region_1875690710 {
label = "R(2:0|(2:(1:2)|(2:(1:5)|6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.List java.util.List\<com.mapbox.api.directions.p008v5.models.LegStep\> r4 = r6.legs().get(r4).steps()\lint int r5 = r5 + 1\l}"];
subgraph cluster_Region_459786400 {
label = "R(2:(1:2)|(2:(1:5)|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1018198747 {
label = "IF [B:1:0x0014] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0014|if (r4.size() \< r5) goto L_0x0016\l}"];
subgraph cluster_Region_1259067413 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0016|RETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_2035712614 {
label = "R(2:(1:5)|6)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_634356137 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001b|if (r5 \< r4.size()) goto L_0x001d\l}"];
subgraph cluster_Region_1341337969 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001d|LOOP_END\lLOOP:0: B:3:0x0017\-\>B:5:0x001d\l|r2 += r4.get(r5).distance()\lr5++\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x002b|RETURN\l|return r2\l}"];
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0017|LOOP_START\lPHI: r2 r5 \l  PHI: (r2v1 double) = (r2v0 double), (r2v2 double) binds: [B:1:0x0014, B:5:0x001d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 int) = (r5v1 int), (r5v3 int) binds: [B:1:0x0014, B:5:0x001d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0017\-\>B:5:0x001d\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x002b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static double com.mapbox.services.android.navigation.v5.navigation.NavigationHelper.legDistanceRemaining((r2v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 com.mapbox.api.directions.v5.models.DirectionsRoute A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_5 -> Node_3;
Node_3 -> Node_4;
Node_7 -> Node_6;
}

