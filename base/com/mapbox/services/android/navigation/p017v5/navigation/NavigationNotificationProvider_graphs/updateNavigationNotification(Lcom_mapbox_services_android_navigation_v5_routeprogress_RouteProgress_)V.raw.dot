digraph "CFG forcom.mapbox.services.android.navigation.v5.navigation.NavigationNotificationProvider.updateNavigationNotification(Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = \l  (r1 I:com.mapbox.services.android.navigation.v5.navigation.NavigationNotificationProvider)\l com.mapbox.services.android.navigation.v5.navigation.NavigationNotificationProvider.shouldUpdate boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:com.mapbox.services.android.navigation.v5.navigation.notification.NavigationNotification) = \l  (r1 I:com.mapbox.services.android.navigation.v5.navigation.NavigationNotificationProvider)\l com.mapbox.services.android.navigation.v5.navigation.NavigationNotificationProvider.navigationNotification com.mapbox.services.android.navigation.v5.navigation.notification.NavigationNotification \l0x0006: INVOKE  \l  (r0 I:com.mapbox.services.android.navigation.v5.navigation.notification.NavigationNotification)\l  (r2 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress)\l com.mapbox.services.android.navigation.v5.navigation.notification.NavigationNotification.updateNotification(com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress):void type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: RETURN   \l}"];
MethodNode[shape=record,label="{void com.mapbox.services.android.navigation.v5.navigation.NavigationNotificationProvider.updateNavigationNotification((r1 'this' I:com.mapbox.services.android.navigation.v5.navigation.NavigationNotificationProvider A[IMMUTABLE_TYPE, THIS]), (r2 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

