digraph "CFG forcom.mapbox.services.android.navigation.v5.navigation.RouteProcessorThreadListener.onMilestoneTrigger(Ljava\/util\/List;Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;)V" {
subgraph cluster_Region_1477614616 {
label = "R(2:0|(1:3))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r4 = r4.iterator()\l}"];
subgraph cluster_LoopRegion_1673158409 {
label = "LOOP:0: (1:3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|if (r4.hasNext() != false) goto L_0x000a\l}"];
subgraph cluster_Region_603084509 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|LOOP_END\lLOOP:0: B:1:0x0004\-\>B:3:0x000a\l|com.mapbox.services.android.navigation.v5.milestone.Milestone r0 = r4.next()\lr3.eventDispatcher.onMilestoneEvent(r5, com.mapbox.services.android.navigation.p017v5.navigation.NavigationHelper.buildInstructionString(r5, r0), r0)\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0004|LOOP_START\lLOOP:0: B:1:0x0004\-\>B:3:0x000a\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x001a}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.mapbox.services.android.navigation.v5.navigation.RouteProcessorThreadListener.onMilestoneTrigger((r3v0 'this' com.mapbox.services.android.navigation.v5.navigation.RouteProcessorThreadListener A[IMMUTABLE_TYPE, THIS]), (r4v0 java.util.List\<com.mapbox.services.android.navigation.v5.milestone.Milestone\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lcom\/mapbox\/services\/android\/navigation\/v5\/milestone\/Milestone;, \>;, Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_3 -> Node_1;
Node_1 -> Node_2;
Node_5 -> Node_4;
}

