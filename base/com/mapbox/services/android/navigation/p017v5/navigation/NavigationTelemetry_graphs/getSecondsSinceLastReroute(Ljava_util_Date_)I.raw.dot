digraph "CFG forcom.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry.getSecondsSinceLastReroute(Ljava\/util\/Date;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Date) = \l  (r4 I:com.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry)\l com.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry.lastRerouteDate java.util.Date \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: RETURN  (r5 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: INVOKE  (r0 I:long) = (r5 I:java.util.Date) java.util.Date.getTime():long type: VIRTUAL \l0x000a: IGET  (r5 I:java.util.Date) = \l  (r4 I:com.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry)\l com.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry.lastRerouteDate java.util.Date \l0x000c: INVOKE  (r2 I:long) = (r5 I:java.util.Date) java.util.Date.getTime():long type: VIRTUAL \l0x0010: ARITH  (r0 I:long) = (r0 I:long) \- (r2 I:long) \l0x0011: SGET  (r5 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.MILLISECONDS java.util.concurrent.TimeUnit \l0x0013: INVOKE  (r0 I:long) = (r5 I:java.util.concurrent.TimeUnit), (r0 I:long) java.util.concurrent.TimeUnit.toSeconds(long):long type: VIRTUAL \l0x0017: CAST  (r5 I:int) = (int) (r0 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: RETURN  (r5 I:int) \l}"];
MethodNode[shape=record,label="{private int com.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry.getSecondsSinceLastReroute((r4 'this' I:com.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry A[IMMUTABLE_TYPE, THIS]), (r5 I:java.util.Date A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

