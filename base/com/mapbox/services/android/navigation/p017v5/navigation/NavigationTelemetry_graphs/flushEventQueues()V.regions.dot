digraph "CFG forcom.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry.flushEventQueues()V" {
subgraph cluster_Region_634444153 {
label = "R(4:0|(1:3)|4|(1:7))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r0 = r2.queuedFeedbackEvents.iterator()\l}"];
subgraph cluster_LoopRegion_1005820883 {
label = "LOOP:0: (1:3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|if (r0.hasNext() != false) goto L_0x000c\l}"];
subgraph cluster_Region_230266858 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|LOOP_END\lLOOP:0: B:1:0x0006\-\>B:3:0x000c\l|sendFeedbackEvent(r1)\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x0016|java.util.Iterator r0 = r2.queuedRerouteEvents.iterator()\l}"];
subgraph cluster_LoopRegion_1110964438 {
label = "LOOP:1: (1:7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0020|if (r0.hasNext() != false) goto L_0x0022\l}"];
subgraph cluster_Region_1628437240 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0022|LOOP_END\lLOOP:1: B:5:0x001c\-\>B:7:0x0022\l|sendRerouteEvent(r1)\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0006|LOOP_START\lLOOP:0: B:1:0x0006\-\>B:3:0x000c\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001c|LOOP_START\lLOOP:1: B:5:0x001c\-\>B:7:0x0022\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x002c}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0016|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry.flushEventQueues((r2v0 'this' com.mapbox.services.android.navigation.v5.navigation.NavigationTelemetry A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_10[style=dashed];
Node_7 -> Node_5;
Node_1 -> Node_2;
Node_5 -> Node_6;
Node_9 -> Node_4;
Node_10 -> Node_8;
}

