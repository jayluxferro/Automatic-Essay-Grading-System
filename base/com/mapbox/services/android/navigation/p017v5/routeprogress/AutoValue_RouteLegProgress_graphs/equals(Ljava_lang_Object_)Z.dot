digraph "CFG forcom.mapbox.services.android.navigation.v5.routeprogress.AutoValue_RouteLegProgress.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r8 != r7) goto L_0x0004\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004}"];
Node_4 [shape=record,label="{4\:\ 0x0007|if ((r8 instanceof com.mapbox.services.android.navigation.p017v5.routeprogress.RouteLegProgress) == false) goto L_0x00c7\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|com.mapbox.services.android.navigation.v5.routeprogress.RouteLegProgress r8 = (com.mapbox.services.android.navigation.p017v5.routeprogress.RouteLegProgress) r8\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|if (r7.stepIndex != r8.stepIndex()) goto L_0x00c5\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013}"];
Node_8 [shape=record,label="{8\:\ 0x0023|if ((java.lang.Double.doubleToLongBits(r7.distanceRemaining) \> java.lang.Double.doubleToLongBits(r8.distanceRemaining()) ? 1 : (java.lang.Double.doubleToLongBits(r7.distanceRemaining) == java.lang.Double.doubleToLongBits(r8.distanceRemaining()) ? 0 : \-1)) != 0) goto L_0x00c5\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025}"];
Node_10 [shape=record,label="{10\:\ 0x002f|if (r7.currentStepProgress.equals(r8.currentStepProgress()) == false) goto L_0x00c5\l}"];
Node_11 [shape=record,label="{11\:\ 0x0031}"];
Node_12 [shape=record,label="{12\:\ 0x003b|if (r7.currentStepPoints.equals(r8.currentStepPoints()) == false) goto L_0x00c5\l}"];
Node_13 [shape=record,label="{13\:\ 0x003d}"];
Node_14 [shape=record,label="{14\:\ 0x003f|if (r7.upcomingStepPoints != null) goto L_0x0048\l}"];
Node_15 [shape=record,label="{15\:\ 0x0041}"];
Node_16 [shape=record,label="{16\:\ 0x0045|if (r8.upcomingStepPoints() != null) goto L_0x00c5\l}"];
Node_17 [shape=record,label="{17\:\ 0x0048}"];
Node_18 [shape=record,label="{18\:\ 0x0052|if (r7.upcomingStepPoints.equals(r8.upcomingStepPoints()) == false) goto L_0x00c5\l}"];
Node_19 [shape=record,label="{19\:\ 0x0054}"];
Node_20 [shape=record,label="{20\:\ 0x0056|if (r7.currentLegAnnotation != null) goto L_0x005f\l}"];
Node_21 [shape=record,label="{21\:\ 0x0058}"];
Node_22 [shape=record,label="{22\:\ 0x005c|if (r8.currentLegAnnotation() != null) goto L_0x00c5\l}"];
Node_23 [shape=record,label="{23\:\ 0x005f}"];
Node_24 [shape=record,label="{24\:\ 0x0069|if (r7.currentLegAnnotation.equals(r8.currentLegAnnotation()) == false) goto L_0x00c5\l}"];
Node_25 [shape=record,label="{25\:\ 0x006b}"];
Node_26 [shape=record,label="{26\:\ 0x0075|if (r7.routeLeg.equals(r8.routeLeg()) == false) goto L_0x00c5\l}"];
Node_27 [shape=record,label="{27\:\ 0x0077}"];
Node_28 [shape=record,label="{28\:\ 0x0087|if ((java.lang.Double.doubleToLongBits(r7.stepDistanceRemaining) \> java.lang.Double.doubleToLongBits(r8.stepDistanceRemaining()) ? 1 : (java.lang.Double.doubleToLongBits(r7.stepDistanceRemaining) == java.lang.Double.doubleToLongBits(r8.stepDistanceRemaining()) ? 0 : \-1)) != 0) goto L_0x00c5\l}"];
Node_29 [shape=record,label="{29\:\ 0x0089}"];
Node_30 [shape=record,label="{30\:\ 0x0093|if (r7.intersections.equals(r8.intersections()) == false) goto L_0x00c5\l}"];
Node_31 [shape=record,label="{31\:\ 0x0095}"];
Node_32 [shape=record,label="{32\:\ 0x009f|if (r7.currentIntersection.equals(r8.currentIntersection()) == false) goto L_0x00c5\l}"];
Node_33 [shape=record,label="{33\:\ 0x00a1}"];
Node_34 [shape=record,label="{34\:\ 0x00a3|if (r7.upcomingIntersection != null) goto L_0x00ac\l}"];
Node_35 [shape=record,label="{35\:\ 0x00a5}"];
Node_36 [shape=record,label="{36\:\ 0x00a9|if (r8.upcomingIntersection() != null) goto L_0x00c5\l}"];
Node_37 [shape=record,label="{37\:\ 0x00ac}"];
Node_38 [shape=record,label="{38\:\ 0x00b6|if (r7.upcomingIntersection.equals(r8.upcomingIntersection()) == false) goto L_0x00c5\l}"];
Node_39 [shape=record,label="{39\:\ 0x00b8}"];
Node_40 [shape=record,label="{40\:\ 0x00c2|if (r7.intersectionDistancesAlongStep.equals(r8.intersectionDistancesAlongStep()) == false) goto L_0x00c5\l}"];
Node_41 [shape=record,label="{41\:\ 0x00c5|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_42 [shape=record,label="{42\:\ 0x00c7|RETURN\l|return false\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_RouteLegProgress.equals((r7v0 'this' com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_RouteLegProgress A[IMMUTABLE_TYPE, THIS]), (r8v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_42;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_41;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_41;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_41;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_41;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_41;
Node_16 -> Node_19[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_41;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_41;
Node_22 -> Node_25[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_41;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_41;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_41;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_41;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_41;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_37;
Node_35 -> Node_36;
Node_36 -> Node_41;
Node_36 -> Node_39[style=dashed];
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_41;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_40 -> Node_43[style=dashed];
}

