digraph "CFG forcom.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = \l  (r6 I:com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation)\l com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation.index int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1000003(0xf4243, float:1.401303E\-39) ?[int, float, short, byte, char])\l \l0x0005: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r1 I:?[int, boolean, short, byte, char]) \l0x0006: ARITH  (r0 I:int) = (r0 I:int) * (r1 I:int) \l0x0008: IGET  (r2 I:double) = \l  (r6 I:com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation)\l com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation.distanceToAnnotation double \l0x000a: INVOKE  (r2 I:long) = (r2 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x000e: CONST  (r4 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0010: ARITH  (r2 I:long) = (r2 I:long) \>\>\> (r4 I:long) \l0x0011: IGET  (r4 I:double) = \l  (r6 I:com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation)\l com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation.distanceToAnnotation double \l0x0013: INVOKE  (r4 I:long) = (r4 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x0017: ARITH  (r2 I:long) = (r2 I:long) ^ (r4 I:long) \l0x0018: CAST  (r2 I:int) = (int) (r2 I:long) \l0x0019: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r2 I:?[int, boolean, short, byte, char]) \l0x001a: ARITH  (r0 I:int) = (r0 I:int) * (r1 I:int) \l0x001c: IGET  (r2 I:java.lang.Double) = \l  (r6 I:com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation)\l com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation.distance java.lang.Double \l0x001e: INVOKE  (r2 I:int) = (r2 I:java.lang.Double) java.lang.Double.hashCode():int type: VIRTUAL \l0x0022: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r2 I:?[int, boolean, short, byte, char]) \l0x0023: ARITH  (r0 I:int) = (r0 I:int) * (r1 I:int) \l0x0025: IGET  (r2 I:java.lang.Double) = \l  (r6 I:com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation)\l com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation.duration java.lang.Double \l0x0027: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0028|0x0028: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x002c \l}"];
Node_2 [shape=record,label="{2\:\ 0x002a|0x002a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x002c|0x002c: IGET  (r2 I:java.lang.Double) = \l  (r6 I:com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation)\l com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation.duration java.lang.Double \l0x002e: INVOKE  (r2 I:int) = (r2 I:java.lang.Double) java.lang.Double.hashCode():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0032|0x0032: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r2 I:?[int, boolean, short, byte, char]) \l0x0033: ARITH  (r0 I:int) = (r0 I:int) * (r1 I:int) \l0x0035: IGET  (r2 I:java.lang.Double) = \l  (r6 I:com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation)\l com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation.speed java.lang.Double \l}"];
Node_5 [shape=record,label="{5\:\ 0x0037|0x0037: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x003b \l}"];
Node_6 [shape=record,label="{6\:\ 0x0039|0x0039: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x003b|0x003b: IGET  (r2 I:java.lang.Double) = \l  (r6 I:com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation)\l com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation.speed java.lang.Double \l0x003d: INVOKE  (r2 I:int) = (r2 I:java.lang.Double) java.lang.Double.hashCode():int type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0041|0x0041: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r2 I:?[int, boolean, short, byte, char]) \l0x0042: ARITH  (r0 I:int) = (r0 I:int) * (r1 I:int) \l0x0044: IGET  (r2 I:com.mapbox.api.directions.v5.models.MaxSpeed) = \l  (r6 I:com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation)\l com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation.maxspeed com.mapbox.api.directions.v5.models.MaxSpeed \l}"];
Node_9 [shape=record,label="{9\:\ 0x0046|0x0046: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x004a \l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|0x0048: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x004a|0x004a: IGET  (r2 I:com.mapbox.api.directions.v5.models.MaxSpeed) = \l  (r6 I:com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation)\l com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation.maxspeed com.mapbox.api.directions.v5.models.MaxSpeed \l0x004c: INVOKE  (r2 I:int) = (r2 I:java.lang.Object) java.lang.Object.hashCode():int type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0050|0x0050: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r2 I:?[int, boolean, short, byte, char]) \l0x0051: ARITH  (r0 I:int) = (r0 I:int) * (r1 I:int) \l0x0053: IGET  (r1 I:java.lang.String) = \l  (r6 I:com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation)\l com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation.congestion java.lang.String \l}"];
Node_13 [shape=record,label="{13\:\ 0x0055|0x0055: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0058 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0058|0x0058: IGET  (r1 I:java.lang.String) = \l  (r6 I:com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation)\l com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation.congestion java.lang.String \l0x005a: INVOKE  (r3 I:int) = (r1 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x005e|0x005e: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r3 I:?[int, boolean, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x005f|0x005f: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation.hashCode((r6 'this' I:com.mapbox.services.android.navigation.v5.routeprogress.AutoValue_CurrentLegAnnotation A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
}

