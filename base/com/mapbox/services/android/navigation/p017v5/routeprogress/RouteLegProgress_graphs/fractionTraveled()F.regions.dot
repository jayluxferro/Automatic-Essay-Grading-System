digraph "CFG forcom.mapbox.services.android.navigation.v5.routeprogress.RouteLegProgress.fractionTraveled()F" {
subgraph cluster_Region_1552071676 {
label = "R(1:(2:(1:5)|(2:2|(2:(1:7)|(1:6)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1710013731 {
label = "R(2:(1:5)|(2:2|(2:(1:7)|(1:6))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_225003862 {
label = "IF [B:1:0x0011] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0011|if (routeLeg().distance().doubleValue() \<= 0.0d) goto L_0x002c\l}"];
subgraph cluster_Region_1797190863 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002c|SYNTHETIC\lRETURN\lORIG_RETURN\l|return 1.0f\l}"];
}
}
subgraph cluster_Region_1572214341 {
label = "R(2:2|(2:(1:7)|(1:6)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0013|float float r0 = (float) (distanceTraveled() \/ routeLeg().distance().doubleValue())\l}"];
subgraph cluster_Region_571145995 {
label = "R(2:(1:7)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1268141540 {
label = "IF [B:3:0x0027] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0027|if (r0 \< 0.0f) goto L_?\l}"];
subgraph cluster_Region_571431884 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return 0.0f\l}"];
}
}
subgraph cluster_Region_1582346233 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x002a}"];
MethodNode[shape=record,label="{public float com.mapbox.services.android.navigation.v5.routeprogress.RouteLegProgress.fractionTraveled((r5v0 'this' com.mapbox.services.android.navigation.v5.routeprogress.RouteLegProgress A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_0 -> Node_1;
Node_4 -> Node_6;
}

