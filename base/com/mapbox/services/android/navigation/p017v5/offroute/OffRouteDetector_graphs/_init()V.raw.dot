digraph "CFG forcom.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.\<init\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r2 I:com.mapbox.services.android.navigation.v5.offroute.OffRoute)\l com.mapbox.services.android.navigation.v5.offroute.OffRoute.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:com.mapbox.services.android.navigation.v5.utils.RingBuffer) =  com.mapbox.services.android.navigation.v5.utils.RingBuffer \l0x0005: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0006: INVOKE  \l  (r0 I:com.mapbox.services.android.navigation.v5.utils.RingBuffer)\l  (r1 I:int)\l com.mapbox.services.android.navigation.v5.utils.RingBuffer.\<init\>(int):void type: DIRECT \l0x0009: IPUT  \l  (r0 I:com.mapbox.services.android.navigation.v5.utils.RingBuffer\<java.lang.Integer\>)\l  (r2 I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector)\l com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.distancesAwayFromManeuver com.mapbox.services.android.navigation.v5.utils.RingBuffer \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.\<init\>((r2 'this' I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

