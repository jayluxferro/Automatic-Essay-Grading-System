digraph "CFG forcom.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.isUserOffRoute(Landroid\/location\/Location;Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;Lcom\/mapbox\/services\/android\/navigation\/v5\/navigation\/MapboxNavigationOptions;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r7 I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector)\l  (r9 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress)\l com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.checkDistanceRemaining(com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress):boolean type: DIRECT \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r0 I:boolean) = \l  (r7 I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector)\l  (r8 I:android.location.Location)\l  (r10 I:com.mapbox.services.android.navigation.v5.navigation.MapboxNavigationOptions)\l com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.validOffRoute(android.location.Location, com.mapbox.services.android.navigation.v5.navigation.MapboxNavigationOptions):boolean type: DIRECT \l0x000c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: RETURN  (r2 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: INVOKE  (r3 I:double) = (r8 I:android.location.Location) android.location.Location.getLongitude():double type: VIRTUAL \l0x0014: INVOKE  (r5 I:double) = (r8 I:android.location.Location) android.location.Location.getLatitude():double type: VIRTUAL \l0x0018: INVOKE  (r0 I:com.mapbox.geojson.Point) = (r3 I:double), (r5 I:double) com.mapbox.geojson.Point.fromLngLat(double, double):com.mapbox.geojson.Point type: STATIC \l0x001c: INVOKE  (r3 I:boolean) = \l  (r7 I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector)\l  (r8 I:android.location.Location)\l  (r9 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress)\l  (r10 I:com.mapbox.services.android.navigation.v5.navigation.MapboxNavigationOptions)\l  (r0 I:com.mapbox.geojson.Point)\l com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.checkOffRouteRadius(android.location.Location, com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress, com.mapbox.services.android.navigation.v5.navigation.MapboxNavigationOptions, com.mapbox.geojson.Point):boolean type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0029 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: IGET  (r10 I:com.mapbox.services.android.navigation.v5.utils.RingBuffer\<java.lang.Integer\>) = \l  (r7 I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector)\l com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.distancesAwayFromManeuver com.mapbox.services.android.navigation.v5.utils.RingBuffer \l0x0024: INVOKE  (r8 I:boolean) = \l  (r7 I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector)\l  (r8 I:android.location.Location)\l  (r9 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress)\l  (r10 I:com.mapbox.services.android.navigation.v5.utils.RingBuffer)\l  (r0 I:com.mapbox.geojson.Point)\l com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.isMovingAwayFromManeuver(android.location.Location, com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress, com.mapbox.services.android.navigation.v5.utils.RingBuffer, com.mapbox.geojson.Point):boolean type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: RETURN  (r8 I:boolean) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: INVOKE  (r9 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteLegProgress) = \l  (r9 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress)\l com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress.currentLegProgress():com.mapbox.services.android.navigation.v5.routeprogress.RouteLegProgress type: VIRTUAL \l0x002d: INVOKE  (r9 I:com.mapbox.api.directions.v5.models.LegStep) = \l  (r9 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteLegProgress)\l com.mapbox.services.android.navigation.v5.routeprogress.RouteLegProgress.upComingStep():com.mapbox.api.directions.v5.models.LegStep type: VIRTUAL \l0x0031: IGET  (r3 I:com.mapbox.services.android.navigation.v5.offroute.OffRouteCallback) = \l  (r7 I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector)\l com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.callback com.mapbox.services.android.navigation.v5.offroute.OffRouteCallback \l0x0033: INVOKE  (r9 I:boolean) = \l  (r10 I:com.mapbox.services.android.navigation.v5.navigation.MapboxNavigationOptions)\l  (r3 I:com.mapbox.services.android.navigation.v5.offroute.OffRouteCallback)\l  (r0 I:com.mapbox.geojson.Point)\l  (r9 I:com.mapbox.api.directions.v5.models.LegStep)\l com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.closeToUpcomingStep(com.mapbox.services.android.navigation.v5.navigation.MapboxNavigationOptions, com.mapbox.services.android.navigation.v5.offroute.OffRouteCallback, com.mapbox.geojson.Point, com.mapbox.api.directions.v5.models.LegStep):boolean type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|0x0037: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x003a \l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|0x0039: RETURN  (r2 I:boolean) \l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|0x003a: INVOKE  \l  (r7 I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector)\l  (r8 I:android.location.Location)\l com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.updateLastReroutePoint(android.location.Location):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|0x003d: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.isUserOffRoute((r7 'this' I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector A[IMMUTABLE_TYPE, THIS]), (r8 I:android.location.Location A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:com.mapbox.services.android.navigation.v5.navigation.MapboxNavigationOptions A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_14;
}

