digraph "CFG forcom.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.validOffRoute(Landroid\/location\/Location;Lcom\/mapbox\/services\/android\/navigation\/v5\/navigation\/MapboxNavigationOptions;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:double) = (r5 I:android.location.Location) android.location.Location.getLongitude():double type: VIRTUAL \l0x0004: INVOKE  (r2 I:double) = (r5 I:android.location.Location) android.location.Location.getLatitude():double type: VIRTUAL \l0x0008: INVOKE  (r0 I:com.mapbox.geojson.Point) = (r0 I:double), (r2 I:double) com.mapbox.geojson.Point.fromLngLat(double, double):com.mapbox.geojson.Point type: STATIC \l0x000c: IGET  (r1 I:com.mapbox.geojson.Point) = \l  (r4 I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector)\l com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.lastReroutePoint com.mapbox.geojson.Point \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0019 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IGET  (r5 I:com.mapbox.geojson.Point) = \l  (r4 I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector)\l com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.lastReroutePoint com.mapbox.geojson.Point \l0x0012: CONST_STR  (r1 I:java.lang.String) =  \"meters\" \l0x0014: INVOKE  (r0 I:double) = \l  (r5 I:com.mapbox.geojson.Point)\l  (r0 I:com.mapbox.geojson.Point)\l  (r1 I:java.lang.String)\l com.mapbox.turf.TurfMeasurement.distance(com.mapbox.geojson.Point, com.mapbox.geojson.Point, java.lang.String):double type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: INVOKE  \l  (r4 I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector)\l  (r5 I:android.location.Location)\l com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.updateLastReroutePoint(android.location.Location):void type: DIRECT \l0x001c: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: INVOKE  (r5 I:double) = \l  (r6 I:com.mapbox.services.android.navigation.v5.navigation.MapboxNavigationOptions)\l com.mapbox.services.android.navigation.v5.navigation.MapboxNavigationOptions.minimumDistanceBeforeRerouting():double type: VIRTUAL \l0x0022: CMP_L  (r5 I:int) = (r0 I:double), (r5 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x0028 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: RETURN  (r5 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.validOffRoute((r4 'this' I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector A[IMMUTABLE_TYPE, THIS]), (r5 I:android.location.Location A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.mapbox.services.android.navigation.v5.navigation.MapboxNavigationOptions A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
}

