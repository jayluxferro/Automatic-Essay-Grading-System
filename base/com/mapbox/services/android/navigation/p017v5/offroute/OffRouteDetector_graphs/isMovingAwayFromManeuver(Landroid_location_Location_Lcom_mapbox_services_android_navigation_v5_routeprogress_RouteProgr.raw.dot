digraph "CFG forcom.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.isMovingAwayFromManeuver(Landroid\/location\/Location;Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;Lcom\/mapbox\/services\/android\/navigation\/v5\/utils\/RingBuffer;Lcom\/mapbox\/geojson\/Point;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.util.List) = \l  (r3 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress)\l com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress.currentStepPoints():java.util.List type: VIRTUAL \l0x0004: INVOKE  (r3 I:boolean) = \l  (r3 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress)\l  (r4 I:com.mapbox.services.android.navigation.v5.utils.RingBuffer)\l  (r0 I:java.util.List)\l  (r5 I:com.mapbox.geojson.Point)\l com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.movingAwayFromManeuver(com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress, com.mapbox.services.android.navigation.v5.utils.RingBuffer, java.util.List, com.mapbox.geojson.Point):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  \l  (r1 I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector)\l  (r2 I:android.location.Location)\l com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.updateLastReroutePoint(android.location.Location):void type: DIRECT \l0x000d: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: RETURN  (r2 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.isMovingAwayFromManeuver((r1 'this' I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector A[IMMUTABLE_TYPE, THIS]), (r2 I:android.location.Location A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.mapbox.services.android.navigation.v5.utils.RingBuffer\<java.lang.Integer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.mapbox.geojson.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/location\/Location;, Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;, Lcom\/mapbox\/services\/android\/navigation\/v5\/utils\/RingBuffer\<, Ljava\/lang\/Integer;, \>;, Lcom\/mapbox\/geojson\/Point;, )Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

