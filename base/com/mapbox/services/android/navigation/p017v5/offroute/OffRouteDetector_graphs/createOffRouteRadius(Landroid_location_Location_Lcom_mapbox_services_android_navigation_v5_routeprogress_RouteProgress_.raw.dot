digraph "CFG forcom.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.createOffRouteRadius(Landroid\/location\/Location;Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;Lcom\/mapbox\/services\/android\/navigation\/v5\/navigation\/MapboxNavigationOptions;Lcom\/mapbox\/geojson\/Point;)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:double) = \l  (r6 I:com.mapbox.geojson.Point)\l  (r4 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress)\l com.mapbox.services.android.navigation.v5.utils.ToleranceUtils.dynamicRerouteDistanceTolerance(com.mapbox.geojson.Point, com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress):double type: STATIC \l0x0004: INVOKE  (r3 I:float) = (r3 I:android.location.Location) android.location.Location.getAccuracy():float type: VIRTUAL \l0x0008: CAST  (r3 I:double) = (double) (r3 I:float) \l0x0009: INVOKE  (r5 I:double) = \l  (r5 I:com.mapbox.services.android.navigation.v5.navigation.MapboxNavigationOptions)\l com.mapbox.services.android.navigation.v5.navigation.MapboxNavigationOptions.deadReckoningTimeInterval():double type: VIRTUAL \l0x000d: ARITH  (r3 I:double) = (r3 I:double) * (r5 I:double) \l0x000f: INVOKE  (r3 I:double) = (r0 I:double), (r3 I:double) java.lang.Math.max(double, double):double type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: RETURN  (r3 I:double) \l}"];
MethodNode[shape=record,label="{private double com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector.createOffRouteRadius((r2 'this' I:com.mapbox.services.android.navigation.v5.offroute.OffRouteDetector A[IMMUTABLE_TYPE, THIS]), (r3 I:android.location.Location A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.mapbox.services.android.navigation.v5.navigation.MapboxNavigationOptions A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.mapbox.geojson.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

