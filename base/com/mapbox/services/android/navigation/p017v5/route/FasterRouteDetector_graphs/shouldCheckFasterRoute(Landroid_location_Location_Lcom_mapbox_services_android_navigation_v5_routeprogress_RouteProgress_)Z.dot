digraph "CFG forcom.mapbox.services.android.navigation.v5.route.FasterRouteDetector.shouldCheckFasterRoute(Landroid\/location\/Location;Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r6 == null) goto L_0x0027\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|if (r7 != null) goto L_0x0006\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006}"];
Node_4 [shape=record,label="{4\:\ 0x0008|if (r5.lastCheckedLocation != null) goto L_0x000c\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|r5.lastCheckedLocation = r6\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c}"];
Node_7 [shape=record,label="{7\:\ 0x0014|if ((secondsSinceLastCheck(r6) \> 120 ? 1 : (secondsSinceLastCheck(r6) == 120 ? 0 : \-1)) \< 0) goto L_0x0026\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|r5.lastCheckedLocation = r6\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|if (validRouteDurationRemaining(r7) == false) goto L_0x0026\l}"];
Node_10 [shape=record,label="{10\:\ 0x001e}"];
Node_11 [shape=record,label="{11\:\ 0x0022|if (validStepDurationRemaining(r7) == false) goto L_0x0026\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|RETURN\l|return true\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|RETURN\l|return false\l}"];
Node_14 [shape=record,label="{14\:\ 0x0027|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.services.android.navigation.v5.route.FasterRouteDetector.shouldCheckFasterRoute((r5v0 'this' com.mapbox.services.android.navigation.v5.route.FasterRouteDetector A[IMMUTABLE_TYPE, THIS]), (r6v0 android.location.Location A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_2 -> Node_14[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
}

