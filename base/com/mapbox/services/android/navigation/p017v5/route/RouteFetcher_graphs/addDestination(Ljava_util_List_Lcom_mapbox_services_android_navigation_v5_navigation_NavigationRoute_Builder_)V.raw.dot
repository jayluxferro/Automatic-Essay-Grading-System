digraph "CFG forcom.mapbox.services.android.navigation.v5.route.RouteFetcher.addDestination(Ljava\/util\/List;Lcom\/mapbox\/services\/android\/navigation\/v5\/navigation\/NavigationRoute$Builder;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r2 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r2 I:com.mapbox.geojson.Point) = \l  (r1 I:com.mapbox.services.android.navigation.v5.route.RouteFetcher)\l  (r2 I:java.util.List)\l com.mapbox.services.android.navigation.v5.route.RouteFetcher.retrieveDestinationWaypoint(java.util.List):com.mapbox.geojson.Point type: DIRECT \l0x000a: INVOKE  \l  (r3 I:com.mapbox.services.android.navigation.v5.navigation.NavigationRoute$Builder)\l  (r2 I:com.mapbox.geojson.Point)\l com.mapbox.services.android.navigation.v5.navigation.NavigationRoute.Builder.destination(com.mapbox.geojson.Point):com.mapbox.services.android.navigation.v5.navigation.NavigationRoute$Builder type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.v5.route.RouteFetcher.addDestination((r1 'this' I:com.mapbox.services.android.navigation.v5.route.RouteFetcher A[IMMUTABLE_TYPE, THIS]), (r2 I:java.util.List\<com.mapbox.geojson.Point\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.mapbox.services.android.navigation.v5.navigation.NavigationRoute$Builder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lcom\/mapbox\/geojson\/Point;, \>;, Lcom\/mapbox\/services\/android\/navigation\/v5\/navigation\/NavigationRoute$Builder;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

