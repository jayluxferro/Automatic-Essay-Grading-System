digraph "CFG forcom.mapbox.services.android.navigation.v5.route.FasterRouteDetector.isFasterRoute(Lcom\/mapbox\/api\/directions\/v5\/models\/DirectionsResponse;Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r7 I:com.mapbox.services.android.navigation.v5.route.FasterRouteDetector)\l  (r8 I:com.mapbox.api.directions.v5.models.DirectionsResponse)\l com.mapbox.services.android.navigation.v5.route.FasterRouteDetector.validRouteResponse(com.mapbox.api.directions.v5.models.DirectionsResponse):boolean type: DIRECT \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0061 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r2 I:double) = \l  (r9 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress)\l com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress.durationRemaining():double type: VIRTUAL \l0x000b: INVOKE  (r8 I:java.util.List) = \l  (r8 I:com.mapbox.api.directions.v5.models.DirectionsResponse)\l com.mapbox.api.directions.v5.models.DirectionsResponse.routes():java.util.List type: VIRTUAL \l0x000f: INVOKE  (r8 I:java.lang.Object) = (r8 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0013: CHECK_CAST  (r8 I:com.mapbox.api.directions.v5.models.DirectionsRoute) = (com.mapbox.api.directions.v5.models.DirectionsRoute) (r8 I:?[OBJECT, ARRAY]) \l0x0015: INVOKE  (r0 I:boolean) = \l  (r7 I:com.mapbox.services.android.navigation.v5.route.FasterRouteDetector)\l  (r8 I:com.mapbox.api.directions.v5.models.DirectionsRoute)\l com.mapbox.services.android.navigation.v5.route.FasterRouteDetector.hasLegs(com.mapbox.api.directions.v5.models.DirectionsRoute):boolean type: DIRECT \l0x0019: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x004d \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: INVOKE  (r0 I:java.util.List) = (r8 I:com.mapbox.api.directions.v5.models.DirectionsRoute) com.mapbox.api.directions.v5.models.DirectionsRoute.legs():java.util.List type: VIRTUAL \l0x0020: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0024: CHECK_CAST  (r0 I:com.mapbox.api.directions.v5.models.RouteLeg) = (com.mapbox.api.directions.v5.models.RouteLeg) (r0 I:?[OBJECT, ARRAY]) \l0x0026: INVOKE  (r5 I:boolean) = \l  (r7 I:com.mapbox.services.android.navigation.v5.route.FasterRouteDetector)\l  (r0 I:com.mapbox.api.directions.v5.models.RouteLeg)\l com.mapbox.services.android.navigation.v5.route.FasterRouteDetector.hasAtLeastTwoSteps(com.mapbox.api.directions.v5.models.RouteLeg):boolean type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|0x002a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x004d \l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|0x002c: INVOKE  (r5 I:java.util.List) = (r0 I:com.mapbox.api.directions.v5.models.RouteLeg) com.mapbox.api.directions.v5.models.RouteLeg.steps():java.util.List type: VIRTUAL \l0x0030: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0034: CHECK_CAST  (r5 I:com.mapbox.api.directions.v5.models.LegStep) = (com.mapbox.api.directions.v5.models.LegStep) (r5 I:?[OBJECT, ARRAY]) \l0x0036: INVOKE  (r0 I:java.util.List) = (r0 I:com.mapbox.api.directions.v5.models.RouteLeg) com.mapbox.api.directions.v5.models.RouteLeg.steps():java.util.List type: VIRTUAL \l0x003a: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r4 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x003e: CHECK_CAST  (r0 I:com.mapbox.api.directions.v5.models.LegStep) = (com.mapbox.api.directions.v5.models.LegStep) (r0 I:?[OBJECT, ARRAY]) \l0x0040: INVOKE  (r5 I:boolean) = \l  (r7 I:com.mapbox.services.android.navigation.v5.route.FasterRouteDetector)\l  (r5 I:com.mapbox.api.directions.v5.models.LegStep)\l com.mapbox.services.android.navigation.v5.route.FasterRouteDetector.validFirstStep(com.mapbox.api.directions.v5.models.LegStep):boolean type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0044|0x0044: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x004c \l}"];
Node_8 [shape=record,label="{8\:\ 0x0046|0x0046: INVOKE  (r9 I:boolean) = \l  (r7 I:com.mapbox.services.android.navigation.v5.route.FasterRouteDetector)\l  (r0 I:com.mapbox.api.directions.v5.models.LegStep)\l  (r9 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress)\l com.mapbox.services.android.navigation.v5.route.FasterRouteDetector.validSecondStep(com.mapbox.api.directions.v5.models.LegStep, com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress):boolean type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x004a|0x004a: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x004d \l}"];
Node_10 [shape=record,label="{10\:\ 0x004c|0x004c: RETURN  (r1 I:boolean) \l}"];
Node_11 [shape=record,label="{11\:\ 0x004d|0x004d: INVOKE  (r8 I:java.lang.Double) = (r8 I:com.mapbox.api.directions.v5.models.DirectionsRoute) com.mapbox.api.directions.v5.models.DirectionsRoute.duration():java.lang.Double type: VIRTUAL \l0x0051: INVOKE  (r8 I:double) = (r8 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0055: CONST  (r5 I:?[long, double]) = \l  (4606281698874543309(0x3feccccccccccccd, double:0.9) ?[long, double])\l \l0x005a: ARITH  (r2 I:double) = (r2 I:double) * (r5 I:double) \l0x005c: CMP_G  (r8 I:int) = (r8 I:double), (r2 I:double) \l}"];
Node_12 [shape=record,label="{12\:\ 0x005e|0x005e: IF  (r8 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:14:0x0061 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0060|0x0060: RETURN  (r4 I:boolean) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0061|0x0061: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.services.android.navigation.v5.route.FasterRouteDetector.isFasterRoute((r7 'this' I:com.mapbox.services.android.navigation.v5.route.FasterRouteDetector A[IMMUTABLE_TYPE, THIS]), (r8 I:com.mapbox.api.directions.v5.models.DirectionsResponse A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
}

