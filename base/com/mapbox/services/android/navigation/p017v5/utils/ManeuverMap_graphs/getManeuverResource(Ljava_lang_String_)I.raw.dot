digraph "CFG forcom.mapbox.services.android.navigation.v5.utils.ManeuverMap.getManeuverResource(Ljava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Map\<java.lang.String, java.lang.Integer\>) = \l  (r1 I:com.mapbox.services.android.navigation.v5.utils.ManeuverMap)\l com.mapbox.services.android.navigation.v5.utils.ManeuverMap.maneuverMap java.util.Map \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r2 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:java.util.Map\<java.lang.String, java.lang.Integer\>) = \l  (r1 I:com.mapbox.services.android.navigation.v5.utils.ManeuverMap)\l com.mapbox.services.android.navigation.v5.utils.ManeuverMap.maneuverMap java.util.Map \l0x000a: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.Map), (r2 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x000e: CHECK_CAST  (r2 I:java.lang.Integer) = (java.lang.Integer) (r2 I:?[OBJECT, ARRAY]) \l0x0010: INVOKE  (r2 I:int) = (r2 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: RETURN  (r2 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: SGET  (r2 I:int) =  com.mapbox.services.android.navigation.R.drawable.ic_maneuver_turn_0 int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{public int com.mapbox.services.android.navigation.v5.utils.ManeuverMap.getManeuverResource((r1 'this' I:com.mapbox.services.android.navigation.v5.utils.ManeuverMap A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

