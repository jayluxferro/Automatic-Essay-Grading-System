digraph "CFG forcom.mapbox.services.android.navigation.v5.utils.time.TimeFormatter.formatDays(Landroid\/content\/res\/Resources;JLjava\/util\/List;)V" {
subgraph cluster_Region_2137162696 {
label = "R(1:(1:(1:2)))";
node [shape=record,color=blue];
subgraph cluster_Region_697786953 {
label = "R(1:(1:2))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1577172183 {
label = "IF [B:1:0x0004] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r5 != 0) goto L_0x0006\l}"];
subgraph cluster_Region_1355327737 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|java.lang.String java.lang.String r4 = java.lang.String.format(TIME_STRING_FORMAT, new java.lang.Object[]\{r4.getQuantityString(com.mapbox.services.android.navigation.C1179R.plurals.numberOfDays, (int) r5)\})\lr7.add(new com.mapbox.services.android.navigation.p017v5.utils.span.TextSpanItem(new android.text.style.StyleSpan(1), java.lang.String.valueOf(r5)))\lr7.add(new com.mapbox.services.android.navigation.p017v5.utils.span.TextSpanItem(new android.text.style.RelativeSizeSpan(1.0f), r4))\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void com.mapbox.services.android.navigation.v5.utils.time.TimeFormatter.formatDays((r4v0 android.content.res.Resources A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.util.List\<com.mapbox.services.android.navigation.v5.utils.span.SpanItem\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/content\/res\/Resources;, J, Ljava\/util\/List\<, Lcom\/mapbox\/services\/android\/navigation\/v5\/utils\/span\/SpanItem;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_0 -> Node_1;
}

