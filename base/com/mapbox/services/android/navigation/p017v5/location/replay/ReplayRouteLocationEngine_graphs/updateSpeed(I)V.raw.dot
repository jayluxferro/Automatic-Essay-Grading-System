digraph "CFG forcom.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine.updateSpeed(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IPUT  \l  (r2 I:int)\l  (r1 I:com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine)\l com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine.speed int \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0007: CONST_STR  (r0 I:java.lang.String) =  \"Speed must be greater than 0 km\/h.\" \l0x0009: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine.updateSpeed((r1 'this' I:com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

