digraph "CFG forcom.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine.removeLocationUpdates()V" {
subgraph cluster_Region_719430516 {
label = "R(3:0|(1:3)|(1:(1:6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator java.util.Iterator r0 = r3.locationListeners.iterator()\l}"];
subgraph cluster_LoopRegion_1000145419 {
label = "LOOP:0: (1:3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|if (r0.hasNext() != false) goto L_0x000c\l}"];
subgraph cluster_Region_874916981 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|LOOP_END\lLOOP:0: B:1:0x0006\-\>B:3:0x000c\l|r3.locationListeners.remove((com.mapbox.android.core.location.LocationEngineListener) r0.next())\l}"];
}
}
subgraph cluster_Region_884947511 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1228333325 {
label = "IF [B:5:0x001a] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001a|if (r3.dispatcher != null) goto L_0x001c\l}"];
subgraph cluster_Region_2112450256 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001c|r3.dispatcher.removeReplayLocationListener(r3.replayLocationListener)\l}"];
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0006|LOOP_START\lLOOP:0: B:1:0x0006\-\>B:3:0x000c\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0018}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0018|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine.removeLocationUpdates((r3v0 'this' com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_7[style=dashed];
Node_3 -> Node_1;
Node_5 -> Node_6;
Node_5 -> Node_9[style=dashed];
Node_6 -> Node_8;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_7 -> Node_4;
}

