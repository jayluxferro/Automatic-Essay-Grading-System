digraph "CFG forcom.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine.scheduleNextDispatch()V" {
subgraph cluster_Region_2119761436 {
label = "R(2:0|(1:2)(1:(1:5)(1:6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r3.mockedLocations.size()\l}"];
subgraph cluster_IfRegion_1904732922 {
label = "IF [B:1:0x0006] THEN: R(1:2) ELSE: R(1:(1:5)(1:6))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r0 == 0) goto L_0x0008\l}"];
subgraph cluster_Region_1225920754 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|r3.handler.postDelayed(r3, 0)\l}"];
}
subgraph cluster_Region_1286185928 {
label = "R(1:(1:5)(1:6)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2043579884 {
label = "IF [B:4:0x0011] THEN: R(1:5) ELSE: R(1:6) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|if (r0 \<= 5) goto L_0x0013\l}"];
subgraph cluster_Region_1498205339 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|r3.handler.postDelayed(r3, 1000)\l}"];
}
subgraph cluster_Region_1327221341 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001b|r3.handler.postDelayed(r3, (long) ((r0 \- 5) * 1000))\l}"];
}
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0010}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine.scheduleNextDispatch((r3v0 'this' com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_3 -> Node_4;
}

