digraph "CFG forcom.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine.removeLocationUpdates()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.concurrent.CopyOnWriteArrayList) = \l  (r3 I:com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine)\l com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine.locationListeners java.util.concurrent.CopyOnWriteArrayList \l0x0002: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.concurrent.CopyOnWriteArrayList) java.util.concurrent.CopyOnWriteArrayList.iterator():java.util.Iterator type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0018 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0010: CHECK_CAST  (r1 I:com.mapbox.android.core.location.LocationEngineListener) = (com.mapbox.android.core.location.LocationEngineListener) (r1 I:?[OBJECT, ARRAY]) \l0x0012: IGET  (r2 I:java.util.concurrent.CopyOnWriteArrayList) = \l  (r3 I:com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine)\l com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine.locationListeners java.util.concurrent.CopyOnWriteArrayList \l0x0014: INVOKE  \l  (r2 I:java.util.concurrent.CopyOnWriteArrayList)\l  (r1 I:java.lang.Object)\l java.util.concurrent.CopyOnWriteArrayList.remove(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IGET  (r0 I:com.mapbox.services.android.navigation.v5.location.replay.ReplayLocationDispatcher) = \l  (r3 I:com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine)\l com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine.dispatcher com.mapbox.services.android.navigation.v5.location.replay.ReplayLocationDispatcher \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0023 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IGET  (r0 I:com.mapbox.services.android.navigation.v5.location.replay.ReplayLocationDispatcher) = \l  (r3 I:com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine)\l com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine.dispatcher com.mapbox.services.android.navigation.v5.location.replay.ReplayLocationDispatcher \l0x001e: IGET  (r1 I:com.mapbox.services.android.navigation.v5.location.replay.ReplayLocationListener) = \l  (r3 I:com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine)\l com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine.replayLocationListener com.mapbox.services.android.navigation.v5.location.replay.ReplayLocationListener \l0x0020: INVOKE  \l  (r0 I:com.mapbox.services.android.navigation.v5.location.replay.ReplayLocationDispatcher)\l  (r1 I:com.mapbox.services.android.navigation.v5.location.replay.ReplayLocationListener)\l com.mapbox.services.android.navigation.v5.location.replay.ReplayLocationDispatcher.removeReplayLocationListener(com.mapbox.services.android.navigation.v5.location.replay.ReplayLocationListener):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine.removeLocationUpdates((r3 'this' I:com.mapbox.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
}

