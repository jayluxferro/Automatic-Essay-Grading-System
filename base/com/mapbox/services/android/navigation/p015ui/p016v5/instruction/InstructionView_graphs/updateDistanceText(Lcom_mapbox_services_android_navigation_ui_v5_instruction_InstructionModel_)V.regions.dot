digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.instruction.InstructionView.updateDistanceText(Lcom\/mapbox\/services\/android\/navigation\/ui\/v5\/instruction\/InstructionModel;)V" {
subgraph cluster_Region_204538562 {
label = "R(1:(1:2)(1:(1:5)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1596779379 {
label = "IF [B:1:0x0004] THEN: R(1:2) ELSE: R(1:(1:5)(0))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (newDistanceText(r2) == true) goto L_0x0006\l}"];
subgraph cluster_Region_895897600 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|distanceText(r2)\l}"];
}
subgraph cluster_Region_831326841 {
label = "R(1:(1:5)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_892221848 {
label = "IF [B:4:0x0018] THEN: R(1:5) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0018|if (r1.upcomingDistanceText.getText().toString().isEmpty() == true) goto L_0x001a\l}"];
subgraph cluster_Region_232860477 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001a|distanceText(r2)\l}"];
}
subgraph cluster_Region_167812305 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000a}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.ui.v5.instruction.InstructionView.updateDistanceText((r1v0 'this' com.mapbox.services.android.navigation.ui.v5.instruction.InstructionView A[IMMUTABLE_TYPE, THIS]), (r2v0 com.mapbox.services.android.navigation.ui.v5.instruction.InstructionModel A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_4 -> Node_5;
Node_4 -> Node_8[style=dashed];
Node_5 -> Node_6;
Node_0 -> Node_1;
Node_3 -> Node_4;
}

