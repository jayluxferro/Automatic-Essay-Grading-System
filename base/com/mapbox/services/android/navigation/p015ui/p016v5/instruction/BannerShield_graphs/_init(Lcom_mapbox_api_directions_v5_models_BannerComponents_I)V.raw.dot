digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.instruction.BannerShield.\<init\>(Lcom\/mapbox\/api\/directions\/v5\/models\/BannerComponents;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0004: IPUT  \l  (r0 I:int)\l  (r1 I:com.mapbox.services.android.navigation.ui.v5.instruction.BannerShield)\l com.mapbox.services.android.navigation.ui.v5.instruction.BannerShield.startIndex int \l0x0006: INVOKE  (r0 I:java.lang.String) = (r2 I:com.mapbox.api.directions.v5.models.BannerComponents) com.mapbox.api.directions.v5.models.BannerComponents.imageBaseUrl():java.lang.String type: VIRTUAL \l0x000a: IPUT  \l  (r0 I:java.lang.String)\l  (r1 I:com.mapbox.services.android.navigation.ui.v5.instruction.BannerShield)\l com.mapbox.services.android.navigation.ui.v5.instruction.BannerShield.url java.lang.String \l0x000c: IPUT  \l  (r3 I:int)\l  (r1 I:com.mapbox.services.android.navigation.ui.v5.instruction.BannerShield)\l com.mapbox.services.android.navigation.ui.v5.instruction.BannerShield.nodeIndex int \l0x000e: INVOKE  (r2 I:java.lang.String) = (r2 I:com.mapbox.api.directions.v5.models.BannerComponents) com.mapbox.api.directions.v5.models.BannerComponents.text():java.lang.String type: VIRTUAL \l0x0012: IPUT  \l  (r2 I:java.lang.String)\l  (r1 I:com.mapbox.services.android.navigation.ui.v5.instruction.BannerShield)\l com.mapbox.services.android.navigation.ui.v5.instruction.BannerShield.text java.lang.String \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: RETURN   \l}"];
MethodNode[shape=record,label="{void com.mapbox.services.android.navigation.ui.v5.instruction.BannerShield.\<init\>((r1 'this' I:com.mapbox.services.android.navigation.ui.v5.instruction.BannerShield A[IMMUTABLE_TYPE, THIS]), (r2 I:com.mapbox.api.directions.v5.models.BannerComponents A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

