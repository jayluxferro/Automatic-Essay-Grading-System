digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.instruction.InstructionView.updateDataFromBannerInstruction(Lcom\/mapbox\/services\/android\/navigation\/ui\/v5\/instruction\/InstructionModel;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|updateManeuverView(r3)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r3.getPrimaryBannerText() == null) goto L_0x0016\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|createInstructionLoader(r2.upcomingPrimaryText, r3.getPrimaryBannerText()).loadInstruction()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016}"];
Node_4 [shape=record,label="{4\:\ 0x001c|if (r3.getSecondaryBannerText() == null) goto L_0x0046\l}"];
Node_5 [shape=record,label="{5\:\ 0x001e}"];
Node_6 [shape=record,label="{6\:\ 0x0024|if (r2.upcomingSecondaryText.getVisibility() != 8) goto L_0x0038\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|r2.upcomingSecondaryText.setVisibility(0)\lr2.upcomingPrimaryText.setMaxLines(1)\ladjustBannerTextVerticalBias(0.65f)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0038|createInstructionLoader(r2.upcomingSecondaryText, r3.getSecondaryBannerText()).loadInstruction()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0046|r2.upcomingPrimaryText.setMaxLines(2)\lr2.upcomingSecondaryText.setVisibility(8)\ladjustBannerTextVerticalBias(0.5f)\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.ui.v5.instruction.InstructionView.updateDataFromBannerInstruction((r2v0 'this' com.mapbox.services.android.navigation.ui.v5.instruction.InstructionView A[IMMUTABLE_TYPE, THIS]), (r3v0 com.mapbox.services.android.navigation.ui.v5.instruction.InstructionModel A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_11;
Node_9 -> Node_10;
}

