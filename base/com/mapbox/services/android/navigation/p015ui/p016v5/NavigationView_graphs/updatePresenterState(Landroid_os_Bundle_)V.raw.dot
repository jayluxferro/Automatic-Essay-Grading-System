digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.NavigationView.updatePresenterState(Landroid\/os\/Bundle;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0015 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:android.content.Context) = \l  (r2 I:com.mapbox.services.android.navigation.ui.v5.NavigationView)\l com.mapbox.services.android.navigation.ui.v5.NavigationView.getContext():android.content.Context type: VIRTUAL \l0x0006: SGET  (r1 I:int) =  com.mapbox.services.android.navigation.ui.v5.R.string.navigation_running int \l0x0008: INVOKE  (r0 I:java.lang.String) = (r0 I:android.content.Context), (r1 I:int) android.content.Context.getString(int):java.lang.String type: VIRTUAL \l0x000c: INVOKE  (r3 I:boolean) = (r3 I:android.os.Bundle), (r0 I:java.lang.String) android.os.Bundle.getBoolean(java.lang.String):boolean type: VIRTUAL \l0x0010: IGET  (r0 I:com.mapbox.services.android.navigation.ui.v5.NavigationPresenter) = \l  (r2 I:com.mapbox.services.android.navigation.ui.v5.NavigationView)\l com.mapbox.services.android.navigation.ui.v5.NavigationView.navigationPresenter com.mapbox.services.android.navigation.ui.v5.NavigationPresenter \l0x0012: INVOKE  \l  (r0 I:com.mapbox.services.android.navigation.ui.v5.NavigationPresenter)\l  (r3 I:boolean)\l com.mapbox.services.android.navigation.ui.v5.NavigationPresenter.updateResumeState(boolean):void type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.ui.v5.NavigationView.updatePresenterState((r2 'this' I:com.mapbox.services.android.navigation.ui.v5.NavigationView A[IMMUTABLE_TYPE, THIS]), (r3 I:android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
}

