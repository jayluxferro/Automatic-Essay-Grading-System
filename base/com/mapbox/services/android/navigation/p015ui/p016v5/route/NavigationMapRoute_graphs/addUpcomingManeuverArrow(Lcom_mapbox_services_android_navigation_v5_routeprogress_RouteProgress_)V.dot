digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute.addUpcomingManeuverArrow(Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r6.upcomingStepPoints() == null) goto L_0x0016\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009}"];
Node_3 [shape=record,label="{3\:\ 0x0011|if (r6.upcomingStepPoints().size() \>= 2) goto L_0x0014\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|r0 = false\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|r0 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v2 boolean), (r0v5 boolean) binds: [B:5:0x0016, B:4:0x0014] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|if (r6.currentStepPoints().size() \>= 2) goto L_0x0023\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|r1 = true\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|r1 = false\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v2 boolean), (r1v3 boolean) binds: [B:9:0x0023, B:8:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != false) goto L_0x0037\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|if (r1 == false) goto L_0x0029\l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|updateArrowLayersVisibilityTo(true)\ljava.util.List r6 = obtainArrowPointsFrom(r6)\lupdateArrowShaftWith(r6)\lupdateArrowHeadWith(r6)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0036|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|updateArrowLayersVisibilityTo(false)\l}"];
Node_15 [shape=record,label="{15\:\ 0x003a|RETURN\l|return\l}"];
MethodNode[shape=record,label="{void com.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute.addUpcomingManeuverArrow((r5v0 'this' com.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute A[IMMUTABLE_TYPE, THIS]), (r6v0 com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_11 -> Node_14[style=dashed];
Node_12 -> Node_13;
Node_14 -> Node_15;
}

