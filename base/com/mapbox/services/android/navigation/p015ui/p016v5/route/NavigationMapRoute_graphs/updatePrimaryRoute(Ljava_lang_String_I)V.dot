digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute.updatePrimaryRoute(Ljava\/lang\/String;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.mapbox.mapboxsdk.style.layers.Layer r9 = r8.mapboxMap.getLayer(r9)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r9 == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|com.mapbox.mapboxsdk.style.layers.PropertyValue[] r1 = new com.mapbox.mapboxsdk.style.layers.PropertyValue[1]\lcom.mapbox.mapboxsdk.style.expressions.Expression r2 = com.mapbox.mapboxsdk.style.expressions.Expression.toString(com.mapbox.mapboxsdk.style.expressions.Expression.get(\"congestion\"))\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|if (r10 != r8.primaryRouteIndex) goto L_0x001c\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|int r3 = r8.routeDefaultColor\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|int r3 = r8.alternativeRouteDefaultColor\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|PHI: r3 \l  PHI: (r3v1 int) = (r3v3 int), (r3v4 int) binds: [B:5:0x001c, B:4:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|com.mapbox.mapboxsdk.style.expressions.Expression r3 = com.mapbox.mapboxsdk.style.expressions.Expression.color(r3)\lcom.mapbox.mapboxsdk.style.expressions.Expression$Stop[] r4 = new com.mapbox.mapboxsdk.style.expressions.Expression.Stop[3]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|if (r10 != r8.primaryRouteIndex) goto L_0x002e\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|int r6 = r8.routeModerateColor\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|int r6 = r8.alternativeRouteModerateColor\l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|PHI: r6 \l  PHI: (r6v1 int) = (r6v4 int), (r6v5 int) binds: [B:9:0x002e, B:8:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|r4[0] = com.mapbox.mapboxsdk.style.expressions.Expression.stop(\"moderate\", com.mapbox.mapboxsdk.style.expressions.Expression.color(r6))\l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|if (r10 != r8.primaryRouteIndex) goto L_0x0044\l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|int r7 = r8.routeSevereColor\l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|int r7 = r8.alternativeRouteSevereColor\l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|PHI: r7 \l  PHI: (r7v1 int) = (r7v8 int), (r7v9 int) binds: [B:13:0x0044, B:12:0x0041] A[DONT_GENERATE, DONT_INLINE]\l|r4[1] = com.mapbox.mapboxsdk.style.expressions.Expression.stop(\"heavy\", com.mapbox.mapboxsdk.style.expressions.Expression.color(r7))\l}"];
Node_15 [shape=record,label="{15\:\ 0x0055|if (r10 != r8.primaryRouteIndex) goto L_0x005a\l}"];
Node_16 [shape=record,label="{16\:\ 0x0057|int r7 = r8.routeSevereColor\l}"];
Node_17 [shape=record,label="{17\:\ 0x005a|int r7 = r8.alternativeRouteSevereColor\l}"];
Node_18 [shape=record,label="{18\:\ 0x005c|PHI: r7 \l  PHI: (r7v4 int) = (r7v6 int), (r7v7 int) binds: [B:17:0x005a, B:16:0x0057] A[DONT_GENERATE, DONT_INLINE]\l|r4[2] = com.mapbox.mapboxsdk.style.expressions.Expression.stop(\"severe\", com.mapbox.mapboxsdk.style.expressions.Expression.color(r7))\lr1[0] = com.mapbox.mapboxsdk.style.layers.PropertyFactory.lineColor(com.mapbox.mapboxsdk.style.expressions.Expression.match(r2, r3, r4))\lr9.setProperties(r1)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0075|if (r10 != r8.primaryRouteIndex) goto L_?\l}"];
Node_20 [shape=record,label="{20\:\ 0x0077|r8.mapboxMap.removeLayer(r9)\lr8.mapboxMap.addLayerBelow(r9, WAYPOINT_LAYER_ID)\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute.updatePrimaryRoute((r8v0 'this' com.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute A[IMMUTABLE_TYPE, THIS]), (r9v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_22;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
}

