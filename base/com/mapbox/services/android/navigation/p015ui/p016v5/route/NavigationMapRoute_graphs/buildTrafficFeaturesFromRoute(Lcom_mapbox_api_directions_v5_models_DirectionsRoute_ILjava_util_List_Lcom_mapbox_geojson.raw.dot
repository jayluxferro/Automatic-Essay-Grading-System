digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute.buildTrafficFeaturesFromRoute(Lcom\/mapbox\/api\/directions\/v5\/models\/DirectionsRoute;ILjava\/util\/List;Lcom\/mapbox\/geojson\/LineString;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r11 I:java.util.List) = (r11 I:com.mapbox.api.directions.v5.models.DirectionsRoute) com.mapbox.api.directions.v5.models.DirectionsRoute.legs():java.util.List type: VIRTUAL \l0x0004: INVOKE  (r11 I:java.util.Iterator) = (r11 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: INVOKE  (r0 I:boolean) = (r11 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x00b7 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: INVOKE  (r0 I:java.lang.Object) = (r11 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0012: CHECK_CAST  (r0 I:com.mapbox.api.directions.v5.models.RouteLeg) = (com.mapbox.api.directions.v5.models.RouteLeg) (r0 I:?[OBJECT, ARRAY]) \l0x0014: INVOKE  (r1 I:com.mapbox.api.directions.v5.models.LegAnnotation) = (r0 I:com.mapbox.api.directions.v5.models.RouteLeg) com.mapbox.api.directions.v5.models.RouteLeg.annotation():com.mapbox.api.directions.v5.models.LegAnnotation type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x00ae \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: INVOKE  (r1 I:com.mapbox.api.directions.v5.models.LegAnnotation) = (r0 I:com.mapbox.api.directions.v5.models.RouteLeg) com.mapbox.api.directions.v5.models.RouteLeg.annotation():com.mapbox.api.directions.v5.models.LegAnnotation type: VIRTUAL \l0x001e: INVOKE  (r1 I:java.util.List) = (r1 I:com.mapbox.api.directions.v5.models.LegAnnotation) com.mapbox.api.directions.v5.models.LegAnnotation.congestion():java.util.List type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x00ae \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0025: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: INVOKE  (r3 I:com.mapbox.api.directions.v5.models.LegAnnotation) = (r0 I:com.mapbox.api.directions.v5.models.RouteLeg) com.mapbox.api.directions.v5.models.RouteLeg.annotation():com.mapbox.api.directions.v5.models.LegAnnotation type: VIRTUAL \l0x002a: INVOKE  (r3 I:java.util.List) = (r3 I:com.mapbox.api.directions.v5.models.LegAnnotation) com.mapbox.api.directions.v5.models.LegAnnotation.congestion():java.util.List type: VIRTUAL \l0x002e: INVOKE  (r3 I:int) = (r3 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|0x0032: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:1:0x0008 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: INVOKE  (r3 I:com.mapbox.api.directions.v5.models.LegAnnotation) = (r0 I:com.mapbox.api.directions.v5.models.RouteLeg) com.mapbox.api.directions.v5.models.RouteLeg.annotation():com.mapbox.api.directions.v5.models.LegAnnotation type: VIRTUAL \l0x0038: INVOKE  (r3 I:java.util.List) = (r3 I:com.mapbox.api.directions.v5.models.LegAnnotation) com.mapbox.api.directions.v5.models.LegAnnotation.congestion():java.util.List type: VIRTUAL \l0x003c: INVOKE  (r3 I:int) = (r3 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0040: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0041: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x0042: INVOKE  (r5 I:java.util.List) = (r14 I:com.mapbox.geojson.LineString) com.mapbox.geojson.LineString.coordinates():java.util.List type: VIRTUAL \l0x0046: INVOKE  (r5 I:int) = (r5 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x004a|0x004a: IF  (r3 I:?[int, byte, short, char]) \> (r5 I:?[int, byte, short, char])  \-\> B:13:0x00aa \l}"];
Node_12 [shape=record,label="{12\:\ 0x004c|0x004c: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList \l0x004e: INVOKE  (r3 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0051: INVOKE  (r5 I:java.util.List) = (r14 I:com.mapbox.geojson.LineString) com.mapbox.geojson.LineString.coordinates():java.util.List type: VIRTUAL \l0x0055: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0059: INVOKE  (r3 I:java.util.List), (r5 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x005c: INVOKE  (r5 I:java.util.List) = (r14 I:com.mapbox.geojson.LineString) com.mapbox.geojson.LineString.coordinates():java.util.List type: VIRTUAL \l0x0060: ARITH  (r6 I:int) = (r2 I:int) + (1 int) \l0x0062: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.util.List), (r6 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0066: INVOKE  (r3 I:java.util.List), (r5 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0069: INVOKE  (r3 I:com.mapbox.geojson.LineString) = (r3 I:java.util.List) com.mapbox.geojson.LineString.fromLngLats(java.util.List):com.mapbox.geojson.LineString type: STATIC \l0x006d: INVOKE  (r3 I:com.mapbox.geojson.Feature) = (r3 I:com.mapbox.geojson.Geometry) com.mapbox.geojson.Feature.fromGeometry(com.mapbox.geojson.Geometry):com.mapbox.geojson.Feature type: STATIC \l0x0071: CONST_STR  (r5 I:java.lang.String) =  \"congestion\" \l0x0073: INVOKE  (r6 I:com.mapbox.api.directions.v5.models.LegAnnotation) = (r0 I:com.mapbox.api.directions.v5.models.RouteLeg) com.mapbox.api.directions.v5.models.RouteLeg.annotation():com.mapbox.api.directions.v5.models.LegAnnotation type: VIRTUAL \l0x0077: INVOKE  (r6 I:java.util.List) = (r6 I:com.mapbox.api.directions.v5.models.LegAnnotation) com.mapbox.api.directions.v5.models.LegAnnotation.congestion():java.util.List type: VIRTUAL \l0x007b: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x007f: CHECK_CAST  (r6 I:java.lang.String) = (java.lang.String) (r6 I:?[OBJECT, ARRAY]) \l0x0081: INVOKE  \l  (r3 I:com.mapbox.geojson.Feature)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l com.mapbox.geojson.Feature.addStringProperty(java.lang.String, java.lang.String):void type: VIRTUAL \l0x0084: CONST_STR  (r5 I:java.lang.String) =  \"source\" \l0x0086: SGET  (r6 I:java.util.Locale) =  java.util.Locale.US java.util.Locale \l0x0088: CONST_STR  (r7 I:java.lang.String) =  \"%s\-%d\" \l0x008a: CONST  (r8 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x008b: NEW_ARRAY  (r8 I:java.lang.Object[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x008d: CONST_STR  (r9 I:java.lang.String) =  \"mapbox\-navigation\-route\-source\" \l0x008f: APUT  \l  (r8 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r9 I:?[OBJECT, ARRAY])\l \l0x0091: INVOKE  (r9 I:java.lang.Integer) = (r12 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0095: APUT  \l  (r8 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r9 I:?[OBJECT, ARRAY])\l \l0x0097: INVOKE  (r4 I:java.lang.String) = \l  (r6 I:java.util.Locale)\l  (r7 I:java.lang.String)\l  (r8 I:java.lang.Object[])\l java.lang.String.format(java.util.Locale, java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x009b: INVOKE  \l  (r3 I:com.mapbox.geojson.Feature)\l  (r5 I:java.lang.String)\l  (r4 I:java.lang.String)\l com.mapbox.geojson.Feature.addStringProperty(java.lang.String, java.lang.String):void type: VIRTUAL \l0x009e: CONST_STR  (r4 I:java.lang.String) =  \"index\" \l0x00a0: INVOKE  (r5 I:java.lang.Integer) = (r12 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x00a4: INVOKE  \l  (r3 I:com.mapbox.geojson.Feature)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.Number)\l com.mapbox.geojson.Feature.addNumberProperty(java.lang.String, java.lang.Number):void type: VIRTUAL \l0x00a7: INVOKE  (r13 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_13 [shape=record,label="{13\:\ 0x00aa|0x00aa: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x00ae|0x00ae: INVOKE  (r0 I:com.mapbox.geojson.Feature) = (r14 I:com.mapbox.geojson.Geometry) com.mapbox.geojson.Feature.fromGeometry(com.mapbox.geojson.Geometry):com.mapbox.geojson.Feature type: STATIC \l0x00b2: INVOKE  (r13 I:java.util.List), (r0 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x00b7|0x00b7: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute.buildTrafficFeaturesFromRoute((r10 'this' I:com.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute A[IMMUTABLE_TYPE, THIS]), (r11 I:com.mapbox.api.directions.v5.models.DirectionsRoute A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.util.List\<com.mapbox.geojson.Feature\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:com.mapbox.geojson.LineString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/mapbox\/api\/directions\/v5\/models\/DirectionsRoute;, I, Ljava\/util\/List\<, Lcom\/mapbox\/geojson\/Feature;, \>;, Lcom\/mapbox\/geojson\/LineString;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_8;
Node_14 -> Node_1;
}

