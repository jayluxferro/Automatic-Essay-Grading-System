digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader.parseBannerComponents(Ljava\/util\/List;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0005: IPUT  \l  (r0 I:java.util.List\<com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader$BannerComponentNode\>)\l  (r4 I:com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader)\l com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader.bannerComponentNodes java.util.List \l0x0007: INVOKE  (r5 I:java.util.Iterator) = (r5 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l0x000b: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: INVOKE  (r1 I:boolean) = (r5 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0056 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: INVOKE  (r1 I:java.lang.Object) = (r5 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0016: CHECK_CAST  (r1 I:com.mapbox.api.directions.v5.models.BannerComponents) = (com.mapbox.api.directions.v5.models.BannerComponents) (r1 I:?[OBJECT, ARRAY]) \l0x0018: INVOKE  (r2 I:boolean) = \l  (r4 I:com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader)\l  (r1 I:com.mapbox.api.directions.v5.models.BannerComponents)\l com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader.hasImageUrl(com.mapbox.api.directions.v5.models.BannerComponents):boolean type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x002b \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: IGET  (r2 I:java.util.List\<com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader$BannerComponentNode\>) = \l  (r4 I:com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader)\l com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader.bannerComponentNodes java.util.List \l0x0020: INVOKE  (r2 I:int) = (r2 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0024: ARITH  (r3 I:int) = (r0 I:int) + (\-1 int) \l0x0026: INVOKE  (r2 I:com.mapbox.services.android.navigation.ui.v5.instruction.ImageCoordinator$ImageNode) = \l  (r4 I:com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader)\l  (r1 I:com.mapbox.api.directions.v5.models.BannerComponents)\l  (r2 I:int)\l  (r3 I:int)\l com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader.setupImageNode(com.mapbox.api.directions.v5.models.BannerComponents, int, int):com.mapbox.services.android.navigation.ui.v5.instruction.ImageCoordinator$ImageNode type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|0x002b: INVOKE  (r2 I:boolean) = \l  (r4 I:com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader)\l  (r1 I:com.mapbox.api.directions.v5.models.BannerComponents)\l com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader.hasAbbreviation(com.mapbox.api.directions.v5.models.BannerComponents):boolean type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003e \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: IGET  (r2 I:java.util.List\<com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader$BannerComponentNode\>) = \l  (r4 I:com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader)\l com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader.bannerComponentNodes java.util.List \l0x0033: INVOKE  (r2 I:int) = (r2 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0037: ARITH  (r3 I:int) = (r0 I:int) + (\-1 int) \l0x0039: INVOKE  (r2 I:com.mapbox.services.android.navigation.ui.v5.instruction.AbbreviationCoordinator$AbbreviationNode) = \l  (r4 I:com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader)\l  (r1 I:com.mapbox.api.directions.v5.models.BannerComponents)\l  (r2 I:int)\l  (r3 I:int)\l com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader.setupAbbreviationNode(com.mapbox.api.directions.v5.models.BannerComponents, int, int):com.mapbox.services.android.navigation.ui.v5.instruction.AbbreviationCoordinator$AbbreviationNode type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x003e|0x003e: NEW_INSTANCE  (r2 I:com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader$BannerComponentNode) =  com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader$BannerComponentNode \l0x0040: ARITH  (r3 I:int) = (r0 I:int) + (\-1 int) \l0x0042: INVOKE  \l  (r2 I:com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader$BannerComponentNode)\l  (r1 I:com.mapbox.api.directions.v5.models.BannerComponents)\l  (r3 I:int)\l com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader.BannerComponentNode.\<init\>(com.mapbox.api.directions.v5.models.BannerComponents, int):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0045|0x0045: IGET  (r3 I:java.util.List\<com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader$BannerComponentNode\>) = \l  (r4 I:com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader)\l com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader.bannerComponentNodes java.util.List \l0x0047: INVOKE  (r3 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x004a: INVOKE  (r1 I:java.lang.String) = (r1 I:com.mapbox.api.directions.v5.models.BannerComponents) com.mapbox.api.directions.v5.models.BannerComponents.text():java.lang.String type: VIRTUAL \l0x004e: INVOKE  (r1 I:int) = (r1 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0052: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x0054: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0056|0x0056: IGET  (r5 I:java.util.List\<com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader$BannerComponentNode\>) = \l  (r4 I:com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader)\l com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader.bannerComponentNodes java.util.List \l}"];
Node_12 [shape=record,label="{12\:\ 0x0058|0x0058: RETURN  \l  (r5 I:java.util.List\<com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader$BannerComponentNode\>)\l \l}"];
MethodNode[shape=record,label="{private java.util.List\<com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader$BannerComponentNode\> com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader.parseBannerComponents((r4 'this' I:com.mapbox.services.android.navigation.ui.v5.instruction.InstructionLoader A[IMMUTABLE_TYPE, THIS]), (r5 I:java.util.List\<com.mapbox.api.directions.v5.models.BannerComponents\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lcom\/mapbox\/api\/directions\/v5\/models\/BannerComponents;, \>;), Ljava\/util\/List\<, Lcom\/mapbox\/services\/android\/navigation\/ui\/v5\/instruction\/InstructionLoader$BannerComponentNode;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12;
}

