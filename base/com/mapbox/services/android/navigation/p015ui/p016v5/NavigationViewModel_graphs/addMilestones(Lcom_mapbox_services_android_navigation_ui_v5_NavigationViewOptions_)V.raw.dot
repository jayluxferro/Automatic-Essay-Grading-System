digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.NavigationViewModel.addMilestones(Lcom\/mapbox\/services\/android\/navigation\/ui\/v5\/NavigationViewOptions;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.util.List) = \l  (r2 I:com.mapbox.services.android.navigation.ui.v5.NavigationViewOptions)\l com.mapbox.services.android.navigation.ui.v5.NavigationViewOptions.milestones():java.util.List type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r0 I:boolean) = (r2 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IGET  (r0 I:com.mapbox.services.android.navigation.v5.navigation.MapboxNavigation) = \l  (r1 I:com.mapbox.services.android.navigation.ui.v5.NavigationViewModel)\l com.mapbox.services.android.navigation.ui.v5.NavigationViewModel.navigation com.mapbox.services.android.navigation.v5.navigation.MapboxNavigation \l0x000e: INVOKE  \l  (r0 I:com.mapbox.services.android.navigation.v5.navigation.MapboxNavigation)\l  (r2 I:java.util.List)\l com.mapbox.services.android.navigation.v5.navigation.MapboxNavigation.addMilestones(java.util.List):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.ui.v5.NavigationViewModel.addMilestones((r1 'this' I:com.mapbox.services.android.navigation.ui.v5.NavigationViewModel A[IMMUTABLE_TYPE, THIS]), (r2 I:com.mapbox.services.android.navigation.ui.v5.NavigationViewOptions A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
}

