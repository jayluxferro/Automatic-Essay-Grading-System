digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.route.ViewRouteFetcher.findMostSimilarRoute(Lcom\/mapbox\/api\/directions\/v5\/models\/DirectionsRoute;Ljava\/util\/List;)Lcom\/mapbox\/api\/directions\/v5\/models\/DirectionsRoute;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r5 I:java.lang.String) = \l  (r4 I:com.mapbox.services.android.navigation.ui.v5.route.ViewRouteFetcher)\l  (r5 I:com.mapbox.api.directions.v5.models.DirectionsRoute)\l com.mapbox.services.android.navigation.ui.v5.route.ViewRouteFetcher.obtainRouteLegDescriptionFrom(com.mapbox.api.directions.v5.models.DirectionsRoute):java.lang.String type: DIRECT \l0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l \l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: INVOKE  (r3 I:int) = (r6 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IF  (r0 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:7:0x0024 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: INVOKE  (r3 I:java.lang.Object) = (r6 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0013: CHECK_CAST  (r3 I:com.mapbox.api.directions.v5.models.DirectionsRoute) = (com.mapbox.api.directions.v5.models.DirectionsRoute) (r3 I:?[OBJECT, ARRAY]) \l0x0015: INVOKE  (r3 I:java.lang.String) = \l  (r4 I:com.mapbox.services.android.navigation.ui.v5.route.ViewRouteFetcher)\l  (r3 I:com.mapbox.api.directions.v5.models.DirectionsRoute)\l com.mapbox.services.android.navigation.ui.v5.route.ViewRouteFetcher.obtainRouteLegDescriptionFrom(com.mapbox.api.directions.v5.models.DirectionsRoute):java.lang.String type: DIRECT \l0x0019: INVOKE  (r3 I:int) = (r5 I:java.lang.String), (r3 I:java.lang.String) com.mapbox.services.android.navigation.ui.v5.route.DamerauLevenshteinAlgorithm.execute(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: IF  (r3 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:6:0x0021 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0020: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: INVOKE  (r5 I:java.lang.Object) = (r6 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0028: CHECK_CAST  (r5 I:com.mapbox.api.directions.v5.models.DirectionsRoute) = (com.mapbox.api.directions.v5.models.DirectionsRoute) (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: RETURN  (r5 I:com.mapbox.api.directions.v5.models.DirectionsRoute) \l}"];
MethodNode[shape=record,label="{private com.mapbox.api.directions.v5.models.DirectionsRoute com.mapbox.services.android.navigation.ui.v5.route.ViewRouteFetcher.findMostSimilarRoute((r4 'this' I:com.mapbox.services.android.navigation.ui.v5.route.ViewRouteFetcher A[IMMUTABLE_TYPE, THIS]), (r5 I:com.mapbox.api.directions.v5.models.DirectionsRoute A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.List\<com.mapbox.api.directions.v5.models.DirectionsRoute\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/mapbox\/api\/directions\/v5\/models\/DirectionsRoute;, Ljava\/util\/List\<, Lcom\/mapbox\/api\/directions\/v5\/models\/DirectionsRoute;, \>;), Lcom\/mapbox\/api\/directions\/v5\/models\/DirectionsRoute;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_7 -> Node_8;
}

