digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.utils.MapUtils.updateMapSourceFromFeatureCollection(Lcom\/mapbox\/mapboxsdk\/maps\/MapboxMap;Lcom\/mapbox\/geojson\/FeatureCollection;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0009 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: NEW_ARRAY  (r3 I:com.mapbox.geojson.Feature[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: com.mapbox.geojson.Feature[] \l0x0005: INVOKE  (r3 I:com.mapbox.geojson.FeatureCollection) = (r3 I:com.mapbox.geojson.Feature[]) com.mapbox.geojson.FeatureCollection.fromFeatures(com.mapbox.geojson.Feature[]):com.mapbox.geojson.FeatureCollection type: STATIC \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: INVOKE  (r0 I:com.mapbox.mapboxsdk.style.sources.Source) = \l  (r2 I:com.mapbox.mapboxsdk.maps.MapboxMap)\l  (r4 I:java.lang.String)\l com.mapbox.mapboxsdk.maps.MapboxMap.getSourceAs(java.lang.String):com.mapbox.mapboxsdk.style.sources.Source type: VIRTUAL \l0x000d: CHECK_CAST  (r0 I:com.mapbox.mapboxsdk.style.sources.GeoJsonSource) = (com.mapbox.mapboxsdk.style.sources.GeoJsonSource) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0025 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: NEW_INSTANCE  (r0 I:com.mapbox.mapboxsdk.style.sources.GeoJsonOptions) =  com.mapbox.mapboxsdk.style.sources.GeoJsonOptions \l0x0013: INVOKE  (r0 I:com.mapbox.mapboxsdk.style.sources.GeoJsonOptions) com.mapbox.mapboxsdk.style.sources.GeoJsonOptions.\<init\>():void type: DIRECT \l0x0016: CONST  (r1 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0018: INVOKE  (r0 I:com.mapbox.mapboxsdk.style.sources.GeoJsonOptions) = \l  (r0 I:com.mapbox.mapboxsdk.style.sources.GeoJsonOptions)\l  (r1 I:int)\l com.mapbox.mapboxsdk.style.sources.GeoJsonOptions.withMaxZoom(int):com.mapbox.mapboxsdk.style.sources.GeoJsonOptions type: VIRTUAL \l0x001c: NEW_INSTANCE  (r1 I:com.mapbox.mapboxsdk.style.sources.GeoJsonSource) =  com.mapbox.mapboxsdk.style.sources.GeoJsonSource \l0x001e: INVOKE  \l  (r1 I:com.mapbox.mapboxsdk.style.sources.GeoJsonSource)\l  (r4 I:java.lang.String)\l  (r3 I:com.mapbox.geojson.FeatureCollection)\l  (r0 I:com.mapbox.mapboxsdk.style.sources.GeoJsonOptions)\l com.mapbox.mapboxsdk.style.sources.GeoJsonSource.\<init\>(java.lang.String, com.mapbox.geojson.FeatureCollection, com.mapbox.mapboxsdk.style.sources.GeoJsonOptions):void type: DIRECT \l0x0021: INVOKE  \l  (r2 I:com.mapbox.mapboxsdk.maps.MapboxMap)\l  (r1 I:com.mapbox.mapboxsdk.style.sources.Source)\l com.mapbox.mapboxsdk.maps.MapboxMap.addSource(com.mapbox.mapboxsdk.style.sources.Source):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.style.sources.GeoJsonSource)\l  (r3 I:com.mapbox.geojson.FeatureCollection)\l com.mapbox.mapboxsdk.style.sources.GeoJsonSource.setGeoJson(com.mapbox.geojson.FeatureCollection):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: RETURN   \l}"];
MethodNode[shape=record,label="{public static void com.mapbox.services.android.navigation.ui.v5.utils.MapUtils.updateMapSourceFromFeatureCollection((r2 I:com.mapbox.mapboxsdk.maps.MapboxMap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.mapbox.geojson.FeatureCollection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
}

