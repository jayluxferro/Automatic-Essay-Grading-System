digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute.updatePrimaryShieldRoute(Ljava\/lang\/String;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.mapbox.mapboxsdk.style.layers.Layer r4 = r3.mapboxMap.getLayer(r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r4 == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|com.mapbox.mapboxsdk.style.layers.PropertyValue[] r0 = new com.mapbox.mapboxsdk.style.layers.PropertyValue[1]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r5 != r3.primaryRouteIndex) goto L_0x0013\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|int r2 = r3.routeShieldColor\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|int r2 = r3.alternativeRouteShieldColor\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|PHI: r2 \l  PHI: (r2v1 int) = (r2v3 int), (r2v4 int) binds: [B:5:0x0013, B:4:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|r0[0] = com.mapbox.mapboxsdk.style.layers.PropertyFactory.lineColor(r2)\lr4.setProperties(r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|if (r5 != r3.primaryRouteIndex) goto L_?\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|r3.mapboxMap.removeLayer(r4)\lr3.mapboxMap.addLayerBelow(r4, WAYPOINT_LAYER_ID)\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute.updatePrimaryShieldRoute((r3v0 'this' com.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
}

