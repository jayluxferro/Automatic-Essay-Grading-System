digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.summary.SummaryBottomSheet.setDistanceFormatter(Lcom\/mapbox\/services\/android\/navigation\/v5\/utils\/DistanceFormatter;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000c \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:com.mapbox.services.android.navigation.v5.utils.DistanceFormatter) = \l  (r1 I:com.mapbox.services.android.navigation.ui.v5.summary.SummaryBottomSheet)\l com.mapbox.services.android.navigation.ui.v5.summary.SummaryBottomSheet.distanceFormatter com.mapbox.services.android.navigation.v5.utils.DistanceFormatter \l0x0004: INVOKE  (r0 I:boolean) = (r2 I:java.lang.Object), (r0 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000c \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IPUT  \l  (r2 I:com.mapbox.services.android.navigation.v5.utils.DistanceFormatter)\l  (r1 I:com.mapbox.services.android.navigation.ui.v5.summary.SummaryBottomSheet)\l com.mapbox.services.android.navigation.ui.v5.summary.SummaryBottomSheet.distanceFormatter com.mapbox.services.android.navigation.v5.utils.DistanceFormatter \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.services.android.navigation.ui.v5.summary.SummaryBottomSheet.setDistanceFormatter((r1 'this' I:com.mapbox.services.android.navigation.ui.v5.summary.SummaryBottomSheet A[IMMUTABLE_TYPE, THIS]), (r2 I:com.mapbox.services.android.navigation.v5.utils.DistanceFormatter A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
}

