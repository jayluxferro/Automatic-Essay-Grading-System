digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.instruction.ImageCoordinator.fetchInstructions(Lcom\/mapbox\/api\/directions\/v5\/models\/LegStep;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0050 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:java.util.List) = (r3 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.bannerInstructions():java.util.List type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0050 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r0 I:java.util.List) = (r3 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.bannerInstructions():java.util.List type: VIRTUAL \l0x000c: INVOKE  (r0 I:boolean) = (r0 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0015: INVOKE  (r3 I:java.util.List) = (r3 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.bannerInstructions():java.util.List type: VIRTUAL \l0x0019: INVOKE  (r0 I:java.util.ArrayList), (r3 I:java.util.Collection) java.util.ArrayList.\<init\>(java.util.Collection):void type: DIRECT \l0x001c: INVOKE  (r3 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: INVOKE  (r0 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x004f \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x002a: CHECK_CAST  (r0 I:com.mapbox.api.directions.v5.models.BannerInstructions) = (com.mapbox.api.directions.v5.models.BannerInstructions) (r0 I:?[OBJECT, ARRAY]) \l0x002c: INVOKE  (r1 I:com.mapbox.api.directions.v5.models.BannerText) = \l  (r0 I:com.mapbox.api.directions.v5.models.BannerInstructions)\l com.mapbox.api.directions.v5.models.BannerInstructions.primary():com.mapbox.api.directions.v5.models.BannerText type: VIRTUAL \l0x0030: INVOKE  (r1 I:boolean) = \l  (r2 I:com.mapbox.services.android.navigation.ui.v5.instruction.ImageCoordinator)\l  (r1 I:com.mapbox.api.directions.v5.models.BannerText)\l com.mapbox.services.android.navigation.ui.v5.instruction.ImageCoordinator.hasComponents(com.mapbox.api.directions.v5.models.BannerText):boolean type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003d \l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|0x0036: INVOKE  (r1 I:com.mapbox.api.directions.v5.models.BannerText) = \l  (r0 I:com.mapbox.api.directions.v5.models.BannerInstructions)\l com.mapbox.api.directions.v5.models.BannerInstructions.primary():com.mapbox.api.directions.v5.models.BannerText type: VIRTUAL \l0x003a: INVOKE  \l  (r2 I:com.mapbox.services.android.navigation.ui.v5.instruction.ImageCoordinator)\l  (r1 I:com.mapbox.api.directions.v5.models.BannerText)\l com.mapbox.services.android.navigation.ui.v5.instruction.ImageCoordinator.fetchImageBaseUrls(com.mapbox.api.directions.v5.models.BannerText):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x003d|0x003d: INVOKE  (r1 I:com.mapbox.api.directions.v5.models.BannerText) = \l  (r0 I:com.mapbox.api.directions.v5.models.BannerInstructions)\l com.mapbox.api.directions.v5.models.BannerInstructions.secondary():com.mapbox.api.directions.v5.models.BannerText type: VIRTUAL \l0x0041: INVOKE  (r1 I:boolean) = \l  (r2 I:com.mapbox.services.android.navigation.ui.v5.instruction.ImageCoordinator)\l  (r1 I:com.mapbox.api.directions.v5.models.BannerText)\l com.mapbox.services.android.navigation.ui.v5.instruction.ImageCoordinator.hasComponents(com.mapbox.api.directions.v5.models.BannerText):boolean type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0045|0x0045: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0020 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0047|0x0047: INVOKE  (r0 I:com.mapbox.api.directions.v5.models.BannerText) = \l  (r0 I:com.mapbox.api.directions.v5.models.BannerInstructions)\l com.mapbox.api.directions.v5.models.BannerInstructions.secondary():com.mapbox.api.directions.v5.models.BannerText type: VIRTUAL \l0x004b: INVOKE  \l  (r2 I:com.mapbox.services.android.navigation.ui.v5.instruction.ImageCoordinator)\l  (r0 I:com.mapbox.api.directions.v5.models.BannerText)\l com.mapbox.services.android.navigation.ui.v5.instruction.ImageCoordinator.fetchImageBaseUrls(com.mapbox.api.directions.v5.models.BannerText):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|0x004f: RETURN   \l}"];
Node_16 [shape=record,label="{16\:\ 0x0050|0x0050: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.ui.v5.instruction.ImageCoordinator.fetchInstructions((r2 'this' I:com.mapbox.services.android.navigation.ui.v5.instruction.ImageCoordinator A[IMMUTABLE_TYPE, THIS]), (r3 I:com.mapbox.api.directions.v5.models.LegStep A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_16;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_16;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_16[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_7;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_7;
}

