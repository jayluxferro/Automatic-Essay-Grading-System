digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.camera.NavigationCamera.easeMapCameraPosition(Lcom\/mapbox\/mapboxsdk\/camera\/CameraPosition;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.mapbox.mapboxsdk.maps.MapboxMap) = \l  (r4 I:com.mapbox.services.android.navigation.ui.v5.camera.NavigationCamera)\l com.mapbox.services.android.navigation.ui.v5.camera.NavigationCamera.mapboxMap com.mapbox.mapboxsdk.maps.MapboxMap \l0x0002: INVOKE  (r5 I:com.mapbox.mapboxsdk.camera.CameraUpdate) = (r5 I:com.mapbox.mapboxsdk.camera.CameraPosition) com.mapbox.mapboxsdk.camera.CameraUpdateFactory.newCameraPosition(com.mapbox.mapboxsdk.camera.CameraPosition):com.mapbox.mapboxsdk.camera.CameraUpdate type: STATIC \l0x0006: INVOKE  (r1 I:int) = \l  (r4 I:com.mapbox.services.android.navigation.ui.v5.camera.NavigationCamera)\l com.mapbox.services.android.navigation.ui.v5.camera.NavigationCamera.obtainLocationUpdateDuration():int type: DIRECT \l0x000a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: INVOKE  \l  (r0 I:com.mapbox.mapboxsdk.maps.MapboxMap)\l  (r5 I:com.mapbox.mapboxsdk.camera.CameraUpdate)\l  (r1 I:int)\l  (r2 I:boolean)\l  (r3 I:com.mapbox.mapboxsdk.maps.MapboxMap$CancelableCallback)\l com.mapbox.mapboxsdk.maps.MapboxMap.easeCamera(com.mapbox.mapboxsdk.camera.CameraUpdate, int, boolean, com.mapbox.mapboxsdk.maps.MapboxMap$CancelableCallback):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.ui.v5.camera.NavigationCamera.easeMapCameraPosition((r4 'this' I:com.mapbox.services.android.navigation.ui.v5.camera.NavigationCamera A[IMMUTABLE_TYPE, THIS]), (r5 I:com.mapbox.mapboxsdk.camera.CameraPosition A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

