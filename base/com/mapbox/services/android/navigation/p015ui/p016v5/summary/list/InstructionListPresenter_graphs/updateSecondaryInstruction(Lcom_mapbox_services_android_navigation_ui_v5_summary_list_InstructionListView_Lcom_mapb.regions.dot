digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.summary.list.InstructionListPresenter.updateSecondaryInstruction(Lcom\/mapbox\/services\/android\/navigation\/ui\/v5\/summary\/list\/InstructionListView;Lcom\/mapbox\/api\/directions\/v5\/models\/BannerInstructions;)V" {
subgraph cluster_Region_1039937979 {
label = "R(3:1|4|(1:(1:6)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|boolean r0 = r3.secondary() != null\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|PHI: r0 \l  PHI: (r0v1 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|adjustListViewForSecondaryInstructions(r2, r0)\l}"];
subgraph cluster_Region_1087567802 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_11533567 {
label = "IF [B:5:0x000c] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000c|if (r0 == true) goto L_0x000e\l}"];
subgraph cluster_Region_216987742 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000e|r2.updateSecondaryText(r3.secondary().text())\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0008}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.ui.v5.summary.list.InstructionListPresenter.updateSecondaryInstruction((r1v0 'this' com.mapbox.services.android.navigation.ui.v5.summary.list.InstructionListPresenter A[IMMUTABLE_TYPE, THIS]), (r2v0 com.mapbox.services.android.navigation.ui.v5.summary.list.InstructionListView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 com.mapbox.api.directions.v5.models.BannerInstructions A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

