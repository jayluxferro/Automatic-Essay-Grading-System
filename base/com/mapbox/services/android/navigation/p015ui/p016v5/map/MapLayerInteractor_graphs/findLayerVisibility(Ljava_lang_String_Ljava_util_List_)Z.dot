digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.map.MapLayerInteractor.findLayerVisibility(Ljava\/lang\/String;Ljava\/util\/List;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r4 = r4.iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|LOOP_START\lLOOP:0: B:1:0x0004\-\>B:10:0x0004\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|if (r4.hasNext() == false) goto L_0x002f\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|com.mapbox.mapboxsdk.style.layers.Layer r0 = r4.next()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|if (isValid(r0) == false) goto L_0x0004\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016}"];
Node_6 [shape=record,label="{6\:\ 0x001e|if (retrieveSourceLayerId(r0).equals(r3) == false) goto L_0x0004\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020}"];
Node_8 [shape=record,label="{8\:\ 0x002e|RETURN\l|return ((java.lang.String) r0.getVisibility().value).equals(com.mapbox.mapboxsdk.style.layers.Property.VISIBLE)\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|RETURN\l|return false\l}"];
Node_10 [shape=record,label="{10\:\ 0x0004|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0004\-\>B:10:0x0004\l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0004|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private boolean com.mapbox.services.android.navigation.ui.v5.map.MapLayerInteractor.findLayerVisibility((r2v0 'this' com.mapbox.services.android.navigation.ui.v5.map.MapLayerInteractor A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.util.List\<com.mapbox.mapboxsdk.style.layers.Layer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/util\/List\<, Lcom\/mapbox\/mapboxsdk\/style\/layers\/Layer;, \>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_12[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_10 -> Node_1;
Node_11 -> Node_9;
Node_12 -> Node_7;
Node_13 -> Node_10;
Node_14 -> Node_10;
}

