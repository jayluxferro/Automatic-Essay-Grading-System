digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.utils.MapUtils.addLayerToMap(Lcom\/mapbox\/mapboxsdk\/maps\/MapboxMap;Lcom\/mapbox\/mapboxsdk\/style\/layers\/Layer;Ljava\/lang\/String;)V" {
subgraph cluster_Region_763504407 {
label = "R(1:(1:(1:4)(1:5))(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1025988545 {
label = "IF [B:1:0x0008] THEN: R(1:(1:4)(1:5)) ELSE: R(0)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r1.getLayer(r2.getId()) == null) goto L_0x000b\l}"];
subgraph cluster_Region_1309751260 {
label = "R(1:(1:4)(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_707729226 {
label = "IF [B:3:0x000b] THEN: R(1:4) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r3 == null) goto L_0x000d\l}"];
subgraph cluster_Region_380184455 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|r1.addLayer(r2)\l}"];
}
subgraph cluster_Region_288879564 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|r1.addLayerBelow(r2, r3)\l}"];
}
}
}
subgraph cluster_Region_1457494497 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x000a}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static void com.mapbox.services.android.navigation.ui.v5.utils.MapUtils.addLayerToMap((r1v0 com.mapbox.mapboxsdk.maps.MapboxMap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 com.mapbox.mapboxsdk.style.layers.Layer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_0 -> Node_1;
}

