digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.AutoValue_NavigationLauncherOptions.hashCode()I" {
subgraph cluster_Region_1927359789 {
label = "R(7:0|8|(1:10)|11|23|(1:25)|27)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r3 = 0\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|PHI: r2 \l  PHI: (r2v3 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r0 = (((((r5.directionsRoute.hashCode() ^ 1000003) * 1000003) ^ (r5.directionsProfile == null ? 0 : r5.directionsProfile.hashCode())) * 1000003) ^ (r5.lightThemeResId == null ? 0 : r5.lightThemeResId.hashCode())) * 1000003\l}"];
subgraph cluster_IfRegion_2016804855 {
label = "IF [B:9:0x002d] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002d|if (r5.darkThemeResId != null) goto L_0x0030\l}"];
subgraph cluster_Region_710653935 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0030|int r3 = r5.darkThemeResId.hashCode()\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x0036|PHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v5 int) binds: [B:9:0x002d, B:10:0x0030] A[DONT_GENERATE, DONT_INLINE]\l|int int r0 = (r0 ^ r3) * 1000003\lint r3 = 1237\l}"];
Node_23 [shape=record,label="{23\:\ 0x005e|PHI: r2 \l  PHI: (r2v10 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r0 = (((((r0 ^ (r5.shouldSimulateRoute ? 1231 : 1237)) * 1000003) ^ (r5.waynameChipEnabled ? 1231 : 1237)) * 1000003) ^ (r5.enableOffRouteDetection ? 1231 : 1237)) * 1000003\l}"];
subgraph cluster_IfRegion_1239754140 {
label = "IF [B:24:0x0063] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0063|if (r5.snapToRoute == true) goto L_0x0065\l}"];
subgraph cluster_Region_310436037 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0065|r3 = 1231\l}"];
}
}
Node_27 [shape=record,label="{27\:\ 0x0068|RETURN\l|return r0 ^ r3\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000f}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0011}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0013}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0019|PHI: r2 \l  PHI: (r2v1 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001e}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0020}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0022}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x003f}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0041}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0044}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0046|PHI: r2 \l  PHI: (r2v6 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x004b}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x004d}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0050}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0052|PHI: r2 \l  PHI: (r2v8 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0057}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0059}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x005c}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0067|PHI: r3 \l  PHI: (r3v3 int) = (r3v2 int), (r3v4 int) binds: [B:24:0x0063, B:25:0x0065] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public int com.mapbox.services.android.navigation.ui.v5.AutoValue_NavigationLauncherOptions.hashCode((r5v0 'this' com.mapbox.services.android.navigation.ui.v5.AutoValue_NavigationLauncherOptions A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_26;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_12 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_26 -> Node_27;
}

