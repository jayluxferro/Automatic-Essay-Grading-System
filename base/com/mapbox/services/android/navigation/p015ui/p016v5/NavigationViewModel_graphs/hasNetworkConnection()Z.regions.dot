digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.NavigationViewModel.hasNetworkConnection()Z" {
subgraph cluster_Region_542101985 {
label = "R(1:(2:(1:9)|(1:7))) | DECL_VAR: android.net.NetworkInfo null\l";
node [shape=record,color=blue];
subgraph cluster_Region_279626517 {
label = "R(2:(1:9)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1950478644 {
label = "IF [B:1:0x0003, B:4:0x000c, B:6:0x0012] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r2.connectivityManager == null) goto L_0x0005\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|ADDED_TO_REGION\l|if ((r0 = r2.connectivityManager.getActiveNetworkInfo()) == null) goto L_?\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|ADDED_TO_REGION\l|if (r0.isConnectedOrConnecting() != true) goto L_?\l}"];
subgraph cluster_Region_1360575366 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_260483229 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0014|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0005|RETURN\lADDED_TO_REGION\l|return false\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0006}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000e}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.services.android.navigation.ui.v5.NavigationViewModel.hasNetworkConnection((r2v0 'this' com.mapbox.services.android.navigation.ui.v5.NavigationViewModel A[IMMUTABLE_TYPE, THIS]))  | access modifiers changed from: private\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_5 -> Node_6;
}

