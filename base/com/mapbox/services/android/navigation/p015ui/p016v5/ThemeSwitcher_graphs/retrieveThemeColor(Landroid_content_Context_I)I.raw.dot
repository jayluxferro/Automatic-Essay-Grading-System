digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.ThemeSwitcher.retrieveThemeColor(Landroid\/content\/Context;I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:android.util.TypedValue) = (r2 I:android.content.Context), (r3 I:int) com.mapbox.services.android.navigation.ui.v5.ThemeSwitcher.resolveAttributeFromId(android.content.Context, int):android.util.TypedValue type: STATIC \l0x0004: IGET  (r0 I:int) = (r3 I:android.util.TypedValue) android.util.TypedValue.type int \l0x0006: CONST  (r1 I:?[int, float, short, byte, char]) = (28 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r0 I:int) = (r3 I:android.util.TypedValue) android.util.TypedValue.type int \l0x000c: CONST  (r1 I:?[int, float, short, byte, char]) = (31 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r0 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IGET  (r2 I:int) = (r3 I:android.util.TypedValue) android.util.TypedValue.data int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: RETURN  (r2 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IGET  (r3 I:int) = (r3 I:android.util.TypedValue) android.util.TypedValue.resourceId int \l0x0015: INVOKE  (r2 I:int) = (r2 I:android.content.Context), (r3 I:int) android.support.v4.content.ContextCompat.getColor(android.content.Context, int):int type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{public static int com.mapbox.services.android.navigation.ui.v5.ThemeSwitcher.retrieveThemeColor((r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

