digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute.addRouteLayer(Ljava\/lang\/String;Ljava\/lang\/String;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r14 != r11.primaryRouteIndex) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|float r0 = r11.routeScale\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|float r0 = r11.alternativeRouteScale\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|PHI: r0 \l  PHI: (r0v1 float) = (r0v10 float), (r0v11 float) binds: [B:3:0x0007, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|com.mapbox.mapboxsdk.style.layers.LineLayer r1 = new com.mapbox.mapboxsdk.style.layers.LineLayer(r12, r13)\lcom.mapbox.mapboxsdk.style.layers.PropertyValue[] r13 = new com.mapbox.mapboxsdk.style.layers.PropertyValue[4]\lr13[0] = com.mapbox.mapboxsdk.style.layers.PropertyFactory.lineCap(\"round\")\lr13[1] = com.mapbox.mapboxsdk.style.layers.PropertyFactory.lineJoin(\"round\")\lcom.mapbox.mapboxsdk.style.expressions.Expression$Interpolator r2 = com.mapbox.mapboxsdk.style.expressions.Expression.exponential((java.lang.Number) java.lang.Float.valueOf(1.5f))\lcom.mapbox.mapboxsdk.style.expressions.Expression r5 = com.mapbox.mapboxsdk.style.expressions.Expression.zoom()\lcom.mapbox.mapboxsdk.style.expressions.Expression$Stop[] r6 = new com.mapbox.mapboxsdk.style.expressions.Expression.Stop[]\{com.mapbox.mapboxsdk.style.expressions.Expression.stop(java.lang.Float.valueOf(4.0f), java.lang.Float.valueOf(3.0f * r0)), com.mapbox.mapboxsdk.style.expressions.Expression.stop(java.lang.Float.valueOf(10.0f), java.lang.Float.valueOf(4.0f * r0)), com.mapbox.mapboxsdk.style.expressions.Expression.stop(java.lang.Float.valueOf(MAX_ZOOM_ARROW_SHAFT_SCALE), java.lang.Float.valueOf(6.0f * r0)), com.mapbox.mapboxsdk.style.expressions.Expression.stop(java.lang.Float.valueOf(16.0f), java.lang.Float.valueOf(10.0f * r0)), com.mapbox.mapboxsdk.style.expressions.Expression.stop(java.lang.Float.valueOf(19.0f), java.lang.Float.valueOf(14.0f * r0)), com.mapbox.mapboxsdk.style.expressions.Expression.stop(java.lang.Float.valueOf(22.0f), java.lang.Float.valueOf(r0 * 18.0f))\}\lr13[2] = com.mapbox.mapboxsdk.style.layers.PropertyFactory.lineWidth(com.mapbox.mapboxsdk.style.expressions.Expression.interpolate(r2, r5, r6))\lcom.mapbox.mapboxsdk.style.expressions.Expression r12 = com.mapbox.mapboxsdk.style.expressions.Expression.toString(com.mapbox.mapboxsdk.style.expressions.Expression.get(\"congestion\"))\l}"];
Node_5 [shape=record,label="{5\:\ 0x00c1|if (r14 != r11.primaryRouteIndex) goto L_0x00c6\l}"];
Node_6 [shape=record,label="{6\:\ 0x00c3|int r0 = r11.routeDefaultColor\l}"];
Node_7 [shape=record,label="{7\:\ 0x00c6|int r0 = r11.alternativeRouteDefaultColor\l}"];
Node_8 [shape=record,label="{8\:\ 0x00c8|PHI: r0 \l  PHI: (r0v6 int) = (r0v8 int), (r0v9 int) binds: [B:7:0x00c6, B:6:0x00c3] A[DONT_GENERATE, DONT_INLINE]\l|com.mapbox.mapboxsdk.style.expressions.Expression r0 = com.mapbox.mapboxsdk.style.expressions.Expression.color(r0)\lcom.mapbox.mapboxsdk.style.expressions.Expression$Stop[] r2 = new com.mapbox.mapboxsdk.style.expressions.Expression.Stop[3]\l}"];
Node_9 [shape=record,label="{9\:\ 0x00d2|if (r14 != r11.primaryRouteIndex) goto L_0x00d7\l}"];
Node_10 [shape=record,label="{10\:\ 0x00d4|int r6 = r11.routeModerateColor\l}"];
Node_11 [shape=record,label="{11\:\ 0x00d7|int r6 = r11.alternativeRouteModerateColor\l}"];
Node_12 [shape=record,label="{12\:\ 0x00d9|PHI: r6 \l  PHI: (r6v3 int) = (r6v5 int), (r6v6 int) binds: [B:11:0x00d7, B:10:0x00d4] A[DONT_GENERATE, DONT_INLINE]\l|r2[0] = com.mapbox.mapboxsdk.style.expressions.Expression.stop(\"moderate\", com.mapbox.mapboxsdk.style.expressions.Expression.color(r6))\l}"];
Node_13 [shape=record,label="{13\:\ 0x00e7|if (r14 != r11.primaryRouteIndex) goto L_0x00ec\l}"];
Node_14 [shape=record,label="{14\:\ 0x00e9|int r5 = r11.routeSevereColor\l}"];
Node_15 [shape=record,label="{15\:\ 0x00ec|int r5 = r11.alternativeRouteSevereColor\l}"];
Node_16 [shape=record,label="{16\:\ 0x00ee|PHI: r5 \l  PHI: (r5v4 int) = (r5v6 int), (r5v7 int) binds: [B:15:0x00ec, B:14:0x00e9] A[DONT_GENERATE, DONT_INLINE]\l|r2[1] = com.mapbox.mapboxsdk.style.expressions.Expression.stop(\"heavy\", com.mapbox.mapboxsdk.style.expressions.Expression.color(r5))\l}"];
Node_17 [shape=record,label="{17\:\ 0x00fc|if (r14 != r11.primaryRouteIndex) goto L_0x0101\l}"];
Node_18 [shape=record,label="{18\:\ 0x00fe|int r14 = r11.routeSevereColor\l}"];
Node_19 [shape=record,label="{19\:\ 0x0101|int r14 = r11.alternativeRouteSevereColor\l}"];
Node_20 [shape=record,label="{20\:\ 0x0103|PHI: r14 \l  PHI: (r14v1 int) = (r14v5 int), (r14v6 int) binds: [B:19:0x0101, B:18:0x00fe] A[DONT_GENERATE, DONT_INLINE]\l|r2[2] = com.mapbox.mapboxsdk.style.expressions.Expression.stop(\"severe\", com.mapbox.mapboxsdk.style.expressions.Expression.color(r14))\lr13[3] = com.mapbox.mapboxsdk.style.layers.PropertyFactory.lineColor(com.mapbox.mapboxsdk.style.expressions.Expression.match(r12, r0, r2))\lcom.mapbox.mapboxsdk.style.layers.LineLayer r12 = r1.withProperties(r13)\lcom.mapbox.services.android.navigation.p015ui.p016v5.utils.MapUtils.addLayerToMap(r11.mapboxMap, r12, r11.belowLayer)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0122|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute.addRouteLayer((r11v0 'this' com.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute A[IMMUTABLE_TYPE, THIS]), (r12v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
}

