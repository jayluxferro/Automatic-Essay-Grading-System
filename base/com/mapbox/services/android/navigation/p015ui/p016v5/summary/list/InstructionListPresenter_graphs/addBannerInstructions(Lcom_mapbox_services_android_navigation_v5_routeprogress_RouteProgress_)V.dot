digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.summary.list.InstructionListPresenter.addBannerInstructions(Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (isNewLeg(r3) == false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|r2.instructions = new java.util.ArrayList()\lr2.currentLeg = r3.currentLeg()\ljava.util.Iterator r3 = r2.currentLeg.steps().iterator()\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|LOOP_START\lLOOP:0: B:3:0x001d\-\>B:10:0x001d\l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|if (r3.hasNext() == false) goto L_0x003b\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|java.util.List r0 = r3.next().bannerInstructions()\l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|if (r0 == null) goto L_0x001d\l}"];
Node_7 [shape=record,label="{7\:\ 0x002f}"];
Node_8 [shape=record,label="{8\:\ 0x0033|if (r0.isEmpty() != false) goto L_0x001d\l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|r2.instructions.addAll(r0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|LOOP_END\lSYNTHETIC\lLOOP:0: B:3:0x001d\-\>B:10:0x001d\l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x001d|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.ui.v5.summary.list.InstructionListPresenter.addBannerInstructions((r2v0 'this' com.mapbox.services.android.navigation.ui.v5.summary.list.InstructionListPresenter A[IMMUTABLE_TYPE, THIS]), (r3v0 com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_14;
Node_10 -> Node_3;
Node_11 -> Node_16;
Node_12 -> Node_10;
Node_13 -> Node_10;
Node_14 -> Node_10;
}

