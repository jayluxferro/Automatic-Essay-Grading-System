digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.instruction.InstructionStepResources.extractStepResources(Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.mapbox.api.directions.v5.models.LegStep r0 = r6.currentLegProgress().currentStep()\lcom.mapbox.api.directions.v5.models.LegStep r1 = r6.currentLegProgress().upComingStep()\lcom.mapbox.api.directions.v5.models.LegStep r2 = r6.currentLegProgress().followOnStep()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|if (r1 == null) goto L_0x0049\l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|r5.maneuverViewType = r1.maneuver().type()\lr5.maneuverViewModifier = r1.maneuver().modifier()\l}"];
Node_3 [shape=record,label="{3\:\ 0x002e|if (r2 == null) goto L_0x003f\l}"];
Node_4 [shape=record,label="{4\:\ 0x0030|thenStep(r1, r2, r6.currentLegProgress().currentStepProgress().durationRemaining())\l}"];
Node_5 [shape=record,label="{5\:\ 0x003f}"];
Node_6 [shape=record,label="{6\:\ 0x0043|if (hasIntersections(r1) == false) goto L_?\l}"];
Node_7 [shape=record,label="{7\:\ 0x0045|intersectionTurnLanes(r1)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0049|r5.maneuverViewType = r0.maneuver().type()\lr5.maneuverViewModifier = r0.maneuver().modifier()\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.ui.v5.instruction.InstructionStepResources.extractStepResources((r5v0 'this' com.mapbox.services.android.navigation.ui.v5.instruction.InstructionStepResources A[IMMUTABLE_TYPE, THIS]), (r6v0 com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_11;
Node_8 -> Node_9;
}

