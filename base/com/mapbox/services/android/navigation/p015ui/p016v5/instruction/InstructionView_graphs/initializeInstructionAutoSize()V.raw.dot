digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.instruction.InstructionView.initializeInstructionAutoSize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.widget.TextView) = \l  (r5 I:com.mapbox.services.android.navigation.ui.v5.instruction.InstructionView)\l com.mapbox.services.android.navigation.ui.v5.instruction.InstructionView.upcomingPrimaryText android.widget.TextView \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0003: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0004: CONST  (r3 I:?[int, float, short, byte, char]) = (26 ?[int, float, short, byte, char]) \l0x0006: CONST  (r4 I:?[int, float, short, byte, char]) = (30 ?[int, float, short, byte, char]) \l0x0008: INVOKE  \l  (r0 I:android.widget.TextView)\l  (r3 I:int)\l  (r4 I:int)\l  (r2 I:int)\l  (r1 I:int)\l android.support.v4.widget.TextViewCompat.setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView, int, int, int, int):void type: STATIC \l0x000b: IGET  (r0 I:android.widget.TextView) = \l  (r5 I:com.mapbox.services.android.navigation.ui.v5.instruction.InstructionView)\l com.mapbox.services.android.navigation.ui.v5.instruction.InstructionView.upcomingSecondaryText android.widget.TextView \l0x000d: CONST  (r4 I:?[int, float, short, byte, char]) = (20 ?[int, float, short, byte, char]) \l0x000f: INVOKE  \l  (r0 I:android.widget.TextView)\l  (r4 I:int)\l  (r3 I:int)\l  (r2 I:int)\l  (r1 I:int)\l android.support.v4.widget.TextViewCompat.setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView, int, int, int, int):void type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.ui.v5.instruction.InstructionView.initializeInstructionAutoSize((r5 'this' I:com.mapbox.services.android.navigation.ui.v5.instruction.InstructionView A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

