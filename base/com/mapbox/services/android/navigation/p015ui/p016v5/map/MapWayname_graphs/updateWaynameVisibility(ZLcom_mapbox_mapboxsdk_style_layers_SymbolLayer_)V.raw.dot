digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.map.MapWayname.updateWaynameVisibility(ZLcom\/mapbox\/mapboxsdk\/style\/layers\/SymbolLayer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r2 I:boolean)\l  (r1 I:com.mapbox.services.android.navigation.ui.v5.map.MapWayname)\l com.mapbox.services.android.navigation.ui.v5.map.MapWayname.isVisible boolean \l0x0002: INVOKE  \l  (r1 I:com.mapbox.services.android.navigation.ui.v5.map.MapWayname)\l  (r2 I:boolean)\l com.mapbox.services.android.navigation.ui.v5.map.MapWayname.adjustMapPadding(boolean):void type: DIRECT \l0x0005: INVOKE  (r0 I:boolean) = \l  (r1 I:com.mapbox.services.android.navigation.ui.v5.map.MapWayname)\l  (r2 I:boolean)\l  (r3 I:com.mapbox.mapboxsdk.style.layers.Layer)\l com.mapbox.services.android.navigation.ui.v5.map.MapWayname.checkWaynameVisibility(boolean, com.mapbox.mapboxsdk.style.layers.Layer):boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  \l  (r1 I:com.mapbox.services.android.navigation.ui.v5.map.MapWayname)\l  (r2 I:boolean)\l  (r3 I:com.mapbox.mapboxsdk.style.layers.Layer)\l com.mapbox.services.android.navigation.ui.v5.map.MapWayname.adjustWaynameVisibility(boolean, com.mapbox.mapboxsdk.style.layers.Layer):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: RETURN   \l}"];
MethodNode[shape=record,label="{void com.mapbox.services.android.navigation.ui.v5.map.MapWayname.updateWaynameVisibility((r1 'this' I:com.mapbox.services.android.navigation.ui.v5.map.MapWayname A[IMMUTABLE_TYPE, THIS]), (r2 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.mapbox.mapboxsdk.style.layers.SymbolLayer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

