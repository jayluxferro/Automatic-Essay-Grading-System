digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute.checkNewRouteFound(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2 == r1.primaryRouteIndex) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|updateRoute()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r1.primaryRouteIndex \< 0) goto L_0x0017\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b}"];
Node_5 [shape=record,label="{5\:\ 0x0013|if (r1.primaryRouteIndex \>= r1.directionsRoutes.size()) goto L_0x0017\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|r2 = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|r2 = false\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|PHI: r2 \l  PHI: (r2v2 boolean) = (r2v7 boolean), (r2v9 boolean) binds: [B:7:0x0017, B:6:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == false) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a}"];
Node_10 [shape=record,label="{10\:\ 0x001c|if (r1.onRouteSelectionChangeListener == null) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|com.mapbox.services.android.navigation.ui.v5.route.OnRouteSelectionChangeListener r0 = r1.onRouteSelectionChangeListener\lr0.onNewPrimaryRouteSelected(r1.directionsRoutes.get(r1.primaryRouteIndex))\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute.checkNewRouteFound((r1v0 'this' com.mapbox.services.android.navigation.ui.v5.route.NavigationMapRoute A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
}

