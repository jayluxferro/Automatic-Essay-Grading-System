digraph "CFG forcom.mapbox.services.android.navigation.ui.v5.summary.SummaryBottomSheet.update(Lcom\/mapbox\/services\/android\/navigation\/v5\/routeprogress\/RouteProgress;)V" {
subgraph cluster_Region_667259322 {
label = "R(1:(1:(1:3)))";
node [shape=record,color=blue];
subgraph cluster_Region_1271083813 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_238927317 {
label = "IF [B:0:0x0000, B:2:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 != null) goto L_0x0002\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|ADDED_TO_REGION\l|if (r4.isRerouting != true) goto L_0x0006\l}"];
subgraph cluster_Region_273799517 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|com.mapbox.services.android.navigation.ui.v5.summary.SummaryModel com.mapbox.services.android.navigation.p015ui.p016v5.summary.SummaryModel r0 = new com.mapbox.services.android.navigation.p015ui.p016v5.summary.SummaryModel(getContext(), r4.distanceFormatter, r5, r4.timeFormatType)\lr4.arrivalTimeText.setText(r0.getArrivalTime())\lr4.timeRemainingText.setText(r0.getTimeRemaining())\lr4.distanceRemainingText.setText(r0.getDistanceRemaining())\l}"];
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.mapbox.services.android.navigation.ui.v5.summary.SummaryBottomSheet.update((r4v0 'this' com.mapbox.services.android.navigation.ui.v5.summary.SummaryBottomSheet A[IMMUTABLE_TYPE, THIS]), (r5v0 com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_5[style=dashed];
Node_2 -> Node_3;
Node_2 -> Node_6[style=dashed];
Node_3 -> Node_4;
Node_1 -> Node_2;
}

