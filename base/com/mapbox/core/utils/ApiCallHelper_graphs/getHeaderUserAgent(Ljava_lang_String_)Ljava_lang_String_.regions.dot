digraph "CFG forcom.mapbox.core.utils.ApiCallHelper.getHeaderUserAgent(Ljava\/lang\/String;)Ljava\/lang\/String;" {
subgraph cluster_Region_741674802 {
label = "R(2:0|(2:(1:9)|(1:7)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String java.lang.String r0 = java.lang.System.getProperty(\"os.name\")\ljava.lang.String java.lang.String r1 = java.lang.System.getProperty(\"os.version\")\ljava.lang.String java.lang.String r2 = java.lang.System.getProperty(\"os.arch\")\l}"];
subgraph cluster_Region_700955454 {
label = "R(2:(1:9)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1734960703 {
label = "IF [B:1:0x0016, B:3:0x001c, B:5:0x0022] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0016|if (com.mapbox.core.utils.TextUtils.isEmpty(r0) == true) goto L_0x002a\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|ADDED_TO_REGION\l|if (com.mapbox.core.utils.TextUtils.isEmpty(r1) == true) goto L_0x002a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|ADDED_TO_REGION\l|if (com.mapbox.core.utils.TextUtils.isEmpty(r2) == true) goto L_0x002a\l}"];
subgraph cluster_Region_548460294 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002c|RETURN\l|return com.mapbox.core.constants.Constants.HEADER_USER_AGENT\l}"];
}
}
subgraph cluster_Region_1189148960 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0029|RETURN\l|return getHeaderUserAgent(r4, r0, r1, r2)\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0018}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x001e}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0025}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x002a}"];
MethodNode[shape=record,label="{public static java.lang.String com.mapbox.core.utils.ApiCallHelper.getHeaderUserAgent((r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

