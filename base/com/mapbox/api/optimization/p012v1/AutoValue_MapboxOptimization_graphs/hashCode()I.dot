digraph "CFG forcom.mapbox.api.optimization.v1.AutoValue_MapboxOptimization.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = (((r4.user.hashCode() ^ 1000003) * 1000003) ^ r4.profile.hashCode()) * 1000003\lr3 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|if (r4.roundTrip != null) goto L_0x001c\l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|r2 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|int r2 = r4.roundTrip.hashCode()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|PHI: r2 \l  PHI: (r2v3 int) = (r2v61 int), (r2v62 int) binds: [B:3:0x001c, B:2:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|if (r4.distributions != null) goto L_0x002b\l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|r2 = 0\l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|int r2 = r4.distributions.hashCode()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|PHI: r2 \l  PHI: (r2v5 int) = (r2v58 int), (r2v59 int) binds: [B:7:0x002b, B:6:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|if (r4.source != null) goto L_0x003a\l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|r2 = 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|int r2 = r4.source.hashCode()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|PHI: r2 \l  PHI: (r2v7 int) = (r2v55 int), (r2v56 int) binds: [B:11:0x003a, B:10:0x0038] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_13 [shape=record,label="{13\:\ 0x0045|if (r4.destination != null) goto L_0x0049\l}"];
Node_14 [shape=record,label="{14\:\ 0x0047|r2 = 0\l}"];
Node_15 [shape=record,label="{15\:\ 0x0049|int r2 = r4.destination.hashCode()\l}"];
Node_16 [shape=record,label="{16\:\ 0x004f|PHI: r2 \l  PHI: (r2v9 int) = (r2v52 int), (r2v53 int) binds: [B:15:0x0049, B:14:0x0047] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_17 [shape=record,label="{17\:\ 0x0054|if (r4.geometries != null) goto L_0x0058\l}"];
Node_18 [shape=record,label="{18\:\ 0x0056|r2 = 0\l}"];
Node_19 [shape=record,label="{19\:\ 0x0058|int r2 = r4.geometries.hashCode()\l}"];
Node_20 [shape=record,label="{20\:\ 0x005e|PHI: r2 \l  PHI: (r2v11 int) = (r2v49 int), (r2v50 int) binds: [B:19:0x0058, B:18:0x0056] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_21 [shape=record,label="{21\:\ 0x0063|if (r4.overview != null) goto L_0x0067\l}"];
Node_22 [shape=record,label="{22\:\ 0x0065|r2 = 0\l}"];
Node_23 [shape=record,label="{23\:\ 0x0067|int r2 = r4.overview.hashCode()\l}"];
Node_24 [shape=record,label="{24\:\ 0x006d|PHI: r2 \l  PHI: (r2v13 int) = (r2v46 int), (r2v47 int) binds: [B:23:0x0067, B:22:0x0065] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_25 [shape=record,label="{25\:\ 0x0072|if (r4.steps != null) goto L_0x0076\l}"];
Node_26 [shape=record,label="{26\:\ 0x0074|r2 = 0\l}"];
Node_27 [shape=record,label="{27\:\ 0x0076|int r2 = r4.steps.hashCode()\l}"];
Node_28 [shape=record,label="{28\:\ 0x007c|PHI: r2 \l  PHI: (r2v15 int) = (r2v43 int), (r2v44 int) binds: [B:27:0x0076, B:26:0x0074] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_29 [shape=record,label="{29\:\ 0x0081|if (r4.clientAppName != null) goto L_0x0085\l}"];
Node_30 [shape=record,label="{30\:\ 0x0083|r2 = 0\l}"];
Node_31 [shape=record,label="{31\:\ 0x0085|int r2 = r4.clientAppName.hashCode()\l}"];
Node_32 [shape=record,label="{32\:\ 0x008b|PHI: r2 \l  PHI: (r2v17 int) = (r2v40 int), (r2v41 int) binds: [B:31:0x0085, B:30:0x0083] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (((((r0 ^ r2) * 1000003) ^ r4.accessToken.hashCode()) * 1000003) ^ r4.baseUrl.hashCode()) * 1000003\l}"];
Node_33 [shape=record,label="{33\:\ 0x00a2|if (r4.language != null) goto L_0x00a6\l}"];
Node_34 [shape=record,label="{34\:\ 0x00a4|r2 = 0\l}"];
Node_35 [shape=record,label="{35\:\ 0x00a6|int r2 = r4.language.hashCode()\l}"];
Node_36 [shape=record,label="{36\:\ 0x00ac|PHI: r2 \l  PHI: (r2v23 int) = (r2v37 int), (r2v38 int) binds: [B:35:0x00a6, B:34:0x00a4] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_37 [shape=record,label="{37\:\ 0x00b1|if (r4.radiuses != null) goto L_0x00b5\l}"];
Node_38 [shape=record,label="{38\:\ 0x00b3|r2 = 0\l}"];
Node_39 [shape=record,label="{39\:\ 0x00b5|int r2 = r4.radiuses.hashCode()\l}"];
Node_40 [shape=record,label="{40\:\ 0x00bb|PHI: r2 \l  PHI: (r2v25 int) = (r2v34 int), (r2v35 int) binds: [B:39:0x00b5, B:38:0x00b3] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_41 [shape=record,label="{41\:\ 0x00c0|if (r4.bearings != null) goto L_0x00c4\l}"];
Node_42 [shape=record,label="{42\:\ 0x00c2|r2 = 0\l}"];
Node_43 [shape=record,label="{43\:\ 0x00c4|int r2 = r4.bearings.hashCode()\l}"];
Node_44 [shape=record,label="{44\:\ 0x00ca|PHI: r2 \l  PHI: (r2v27 int) = (r2v31 int), (r2v32 int) binds: [B:43:0x00c4, B:42:0x00c2] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (((r0 ^ r2) * 1000003) ^ r4.coordinates.hashCode()) * 1000003\l}"];
Node_45 [shape=record,label="{45\:\ 0x00d8|if (r4.annotations != null) goto L_0x00db\l}"];
Node_46 [shape=record,label="{46\:\ 0x00db|int r3 = r4.annotations.hashCode()\l}"];
Node_47 [shape=record,label="{47\:\ 0x00e1|PHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:45:0x00d8, B:46:0x00db] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_48 [shape=record,label="{48\:\ 0x00e2|RETURN\l|return r0 ^ r3\l}"];
MethodNode[shape=record,label="{public int com.mapbox.api.optimization.v1.AutoValue_MapboxOptimization.hashCode((r4v0 'this' com.mapbox.api.optimization.v1.AutoValue_MapboxOptimization A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_45 -> Node_47[style=dashed];
Node_46 -> Node_47;
Node_47 -> Node_48;
}

