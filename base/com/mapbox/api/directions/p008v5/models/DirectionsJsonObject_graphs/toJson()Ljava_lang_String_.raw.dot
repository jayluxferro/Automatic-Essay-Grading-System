digraph "CFG forcom.mapbox.api.directions.v5.models.DirectionsJsonObject.toJson()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.google.gson.GsonBuilder) =  com.google.gson.GsonBuilder \l0x0002: INVOKE  (r0 I:com.google.gson.GsonBuilder) com.google.gson.GsonBuilder.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r1 I:com.google.gson.TypeAdapterFactory) =  com.mapbox.api.directions.v5.DirectionsAdapterFactory.create():com.google.gson.TypeAdapterFactory type: STATIC \l0x0009: INVOKE  \l  (r0 I:com.google.gson.GsonBuilder)\l  (r1 I:com.google.gson.TypeAdapterFactory)\l com.google.gson.GsonBuilder.registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory):com.google.gson.GsonBuilder type: VIRTUAL \l0x000c: CONST_CLASS  (r1 I:java.lang.Class\<com.mapbox.geojson.Point\>) =  com.mapbox.geojson.Point.class \l0x000e: NEW_INSTANCE  (r2 I:com.mapbox.geojson.gson.PointSerializer) =  com.mapbox.geojson.gson.PointSerializer \l0x0010: INVOKE  (r2 I:com.mapbox.geojson.gson.PointSerializer) com.mapbox.geojson.gson.PointSerializer.\<init\>():void type: DIRECT \l0x0013: INVOKE  \l  (r0 I:com.google.gson.GsonBuilder)\l  (r1 I:java.lang.reflect.Type)\l  (r2 I:java.lang.Object)\l com.google.gson.GsonBuilder.registerTypeAdapter(java.lang.reflect.Type, java.lang.Object):com.google.gson.GsonBuilder type: VIRTUAL \l0x0016: INVOKE  (r0 I:com.google.gson.Gson) = (r0 I:com.google.gson.GsonBuilder) com.google.gson.GsonBuilder.create():com.google.gson.Gson type: VIRTUAL \l0x001a: INVOKE  (r0 I:java.lang.String) = (r0 I:com.google.gson.Gson), (r3 I:java.lang.Object) com.google.gson.Gson.toJson(java.lang.Object):java.lang.String type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x001e|0x001e: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String com.mapbox.api.directions.v5.models.DirectionsJsonObject.toJson((r3 'this' I:com.mapbox.api.directions.v5.models.DirectionsJsonObject A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

