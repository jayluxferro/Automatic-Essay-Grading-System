digraph "CFG forcom.mapbox.api.directions.v5.models.$AutoValue_DirectionsRoute.hashCode()I" {
subgraph cluster_Region_1683438716 {
label = "R(4:0|28|(1:30)|32)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = 0\l}"];
Node_28 [shape=record,label="{28\:\ 0x006a|PHI: r3 \l  PHI: (r3v11 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r0 = ((((((((((((((r4.distance == null ? 0 : r4.distance.hashCode()) ^ 1000003) * 1000003) ^ (r4.duration == null ? 0 : r4.duration.hashCode())) * 1000003) ^ (r4.geometry == null ? 0 : r4.geometry.hashCode())) * 1000003) ^ (r4.weight == null ? 0 : r4.weight.hashCode())) * 1000003) ^ (r4.weightName == null ? 0 : r4.weightName.hashCode())) * 1000003) ^ (r4.legs == null ? 0 : r4.legs.hashCode())) * 1000003) ^ (r4.routeOptions == null ? 0 : r4.routeOptions.hashCode())) * 1000003\l}"];
subgraph cluster_IfRegion_1050865199 {
label = "IF [B:29:0x006f] THEN: R(1:30) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x006f|if (r4.voiceLanguage != null) goto L_0x0072\l}"];
subgraph cluster_Region_107783423 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0072|int r1 = r4.voiceLanguage.hashCode()\l}"];
}
}
Node_32 [shape=record,label="{32\:\ 0x0079|RETURN\l|return r0 ^ r1\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0003}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0005}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0007}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000d|PHI: r0 \l  PHI: (r0v1 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0015}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0017}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0019}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001f|PHI: r3 \l  PHI: (r3v1 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0024}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0026}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0028}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x002e|PHI: r3 \l  PHI: (r3v3 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0033}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0035}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0037}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x003d|PHI: r3 \l  PHI: (r3v5 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0042}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0044}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0046}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x004c|PHI: r3 \l  PHI: (r3v7 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0051}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0053}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0055}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x005b|PHI: r3 \l  PHI: (r3v9 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0060}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0062}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0064}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0078|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v3 int) binds: [B:29:0x006f, B:30:0x0072] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public int com.mapbox.api.directions.v5.models.$AutoValue_DirectionsRoute.hashCode((r4v0 'this' com.mapbox.api.directions.v5.models.$AutoValue_DirectionsRoute A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_31[style=dashed];
Node_30 -> Node_31;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_31 -> Node_32;
}

