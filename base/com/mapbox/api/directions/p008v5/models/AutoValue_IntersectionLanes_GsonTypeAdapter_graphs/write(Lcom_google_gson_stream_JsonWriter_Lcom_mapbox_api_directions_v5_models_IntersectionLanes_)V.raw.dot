digraph "CFG forcom.mapbox.api.directions.v5.models.AutoValue_IntersectionLanes.GsonTypeAdapter.write(Lcom\/google\/gson\/stream\/JsonWriter;Lcom\/mapbox\/api\/directions\/v5\/models\/IntersectionLanes;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r6 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.nullValue():com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r6 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.beginObject():com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0009: CONST_STR  (r0 I:java.lang.String) =  \"valid\" \l0x000b: INVOKE  \l  (r6 I:com.google.gson.stream.JsonWriter)\l  (r0 I:java.lang.String)\l com.google.gson.stream.JsonWriter.name(java.lang.String):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x000e: INVOKE  (r0 I:java.lang.Boolean) = \l  (r7 I:com.mapbox.api.directions.v5.models.IntersectionLanes)\l com.mapbox.api.directions.v5.models.IntersectionLanes.valid():java.lang.Boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: INVOKE  (r6 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.nullValue():com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IGET  (r0 I:com.google.gson.TypeAdapter\<java.lang.Boolean\>) = \l  (r5 I:com.mapbox.api.directions.v5.models.AutoValue_IntersectionLanes$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_IntersectionLanes.GsonTypeAdapter.boolean__adapter com.google.gson.TypeAdapter \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0026 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IGET  (r0 I:com.google.gson.Gson) = \l  (r5 I:com.mapbox.api.directions.v5.models.AutoValue_IntersectionLanes$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_IntersectionLanes.GsonTypeAdapter.gson com.google.gson.Gson \l0x001e: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Boolean\>) =  java.lang.Boolean.class \l0x0020: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x0024: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.lang.Boolean\>)\l  (r5 I:com.mapbox.api.directions.v5.models.AutoValue_IntersectionLanes$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_IntersectionLanes.GsonTypeAdapter.boolean__adapter com.google.gson.TypeAdapter \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: INVOKE  (r1 I:java.lang.Boolean) = \l  (r7 I:com.mapbox.api.directions.v5.models.IntersectionLanes)\l com.mapbox.api.directions.v5.models.IntersectionLanes.valid():java.lang.Boolean type: VIRTUAL \l0x002a: INVOKE  \l  (r0 I:com.google.gson.TypeAdapter)\l  (r6 I:com.google.gson.stream.JsonWriter)\l  (r1 I:java.lang.Object)\l com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter, java.lang.Object):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: CONST_STR  (r0 I:java.lang.String) =  \"indications\" \l0x002f: INVOKE  \l  (r6 I:com.google.gson.stream.JsonWriter)\l  (r0 I:java.lang.String)\l com.google.gson.stream.JsonWriter.name(java.lang.String):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0032: INVOKE  (r0 I:java.util.List) = \l  (r7 I:com.mapbox.api.directions.v5.models.IntersectionLanes)\l com.mapbox.api.directions.v5.models.IntersectionLanes.indications():java.util.List type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|0x0036: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x003c \l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|0x0038: INVOKE  (r6 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.nullValue():com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|0x003c: IGET  (r0 I:com.google.gson.TypeAdapter\<java.util.List\<java.lang.String\>\>) = \l  (r5 I:com.mapbox.api.directions.v5.models.AutoValue_IntersectionLanes$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_IntersectionLanes.GsonTypeAdapter.list__string_adapter com.google.gson.TypeAdapter \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|0x003e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0056 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0040|0x0040: IGET  (r0 I:com.google.gson.Gson) = \l  (r5 I:com.mapbox.api.directions.v5.models.AutoValue_IntersectionLanes$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_IntersectionLanes.GsonTypeAdapter.gson com.google.gson.Gson \l0x0042: CONST_CLASS  (r1 I:java.lang.Class\<java.util.List\>) =  java.util.List.class \l0x0044: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0045: NEW_ARRAY  (r2 I:java.lang.reflect.Type[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.reflect.Type[] \l0x0047: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0048: CONST_CLASS  (r4 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x004a: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x004c: INVOKE  (r1 I:com.google.gson.reflect.TypeToken) = \l  (r1 I:java.lang.reflect.Type)\l  (r2 I:java.lang.reflect.Type[])\l com.google.gson.reflect.TypeToken.getParameterized(java.lang.reflect.Type, java.lang.reflect.Type[]):com.google.gson.reflect.TypeToken type: STATIC \l0x0050: INVOKE  (r0 I:com.google.gson.TypeAdapter) = \l  (r0 I:com.google.gson.Gson)\l  (r1 I:com.google.gson.reflect.TypeToken)\l com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken):com.google.gson.TypeAdapter type: VIRTUAL \l0x0054: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.util.List\<java.lang.String\>\>)\l  (r5 I:com.mapbox.api.directions.v5.models.AutoValue_IntersectionLanes$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_IntersectionLanes.GsonTypeAdapter.list__string_adapter com.google.gson.TypeAdapter \l}"];
Node_16 [shape=record,label="{16\:\ 0x0056|0x0056: INVOKE  (r7 I:java.util.List) = \l  (r7 I:com.mapbox.api.directions.v5.models.IntersectionLanes)\l com.mapbox.api.directions.v5.models.IntersectionLanes.indications():java.util.List type: VIRTUAL \l0x005a: INVOKE  \l  (r0 I:com.google.gson.TypeAdapter)\l  (r6 I:com.google.gson.stream.JsonWriter)\l  (r7 I:java.lang.Object)\l com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter, java.lang.Object):void type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x005d|0x005d: INVOKE  (r6 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.endObject():com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0060|0x0060: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.mapbox.api.directions.v5.models.AutoValue_IntersectionLanes.GsonTypeAdapter.write((r5 'this' I:com.mapbox.api.directions.v5.models.AutoValue_IntersectionLanes$GsonTypeAdapter A[IMMUTABLE_TYPE, THIS]), (r6 I:com.google.gson.stream.JsonWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.mapbox.api.directions.v5.models.IntersectionLanes A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

