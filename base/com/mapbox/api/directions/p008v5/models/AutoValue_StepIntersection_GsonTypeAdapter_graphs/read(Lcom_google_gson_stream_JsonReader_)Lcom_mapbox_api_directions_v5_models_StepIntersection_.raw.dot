digraph "CFG forcom.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.read(Lcom\/google\/gson\/stream\/JsonReader;)Lcom\/mapbox\/api\/directions\/v5\/models\/StepIntersection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.google.gson.stream.JsonToken) = (r13 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0004: SGET  (r1 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: INVOKE  (r13 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN  (r2 I:com.mapbox.api.directions.v5.models.StepIntersection) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r13 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.beginObject():void type: VIRTUAL \l0x0010: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0011: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0012: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x0013: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0014: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0015: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0016: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: INVOKE  (r0 I:boolean) = (r13 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.hasNext():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x014d \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: INVOKE  (r0 I:java.lang.String) = (r13 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextName():java.lang.String type: VIRTUAL \l0x0021: INVOKE  (r1 I:com.google.gson.stream.JsonToken) = (r13 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0025: SGET  (r2 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002d \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: INVOKE  (r13 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x002e: INVOKE  (r2 I:int) = (r0 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL \l0x0032: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0033: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[3365, 110414, 96667762, 102738951, 853620774, 1325825669, 1901043637] t:[0x0074, 0x006a, 0x0060, 0x0056, 0x004c, 0x0042, 0x0038] \l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|0x0038: CONST_STR  (r2 I:java.lang.String) =  \"location\" \l0x003a: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|0x003e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x007d \l}"];
Node_15 [shape=record,label="{15\:\ 0x0040|0x0040: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0042|0x0042: CONST_STR  (r2 I:java.lang.String) =  \"bearings\" \l0x0044: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|0x0048: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x007d \l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|0x004a: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x004c|0x004c: CONST_STR  (r2 I:java.lang.String) =  \"classes\" \l0x004e: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0052|0x0052: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x007d \l}"];
Node_21 [shape=record,label="{21\:\ 0x0054|0x0054: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0056|0x0056: CONST_STR  (r2 I:java.lang.String) =  \"lanes\" \l0x0058: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x005c|0x005c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x007d \l}"];
Node_24 [shape=record,label="{24\:\ 0x005e|0x005e: CONST  (r1 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0060|0x0060: CONST_STR  (r2 I:java.lang.String) =  \"entry\" \l0x0062: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0066|0x0066: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x007d \l}"];
Node_27 [shape=record,label="{27\:\ 0x0068|0x0068: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x006a|0x006a: CONST_STR  (r2 I:java.lang.String) =  \"out\" \l0x006c: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x0070|0x0070: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x007d \l}"];
Node_30 [shape=record,label="{30\:\ 0x0072|0x0072: CONST  (r1 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0074|0x0074: CONST_STR  (r2 I:java.lang.String) =  \"in\" \l0x0076: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_32 [shape=record,label="{32\:\ 0x007a|0x007a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x007d \l}"];
Node_33 [shape=record,label="{33\:\ 0x007c|0x007c: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x007d|0x007d: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3, 4, 5, 6] t:[0x0136, 0x0115, 0x00f4, 0x00d3, 0x00bc, 0x00a5, 0x0084] \l}"];
Node_35 [shape=record,label="{35\:\ 0x0080|0x0080: INVOKE  (r13 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.skipValue():void type: VIRTUAL \l}"];
Node_36 [shape=record,label="{36\:\ 0x0084|0x0084: IGET  (r0 I:com.google.gson.TypeAdapter\<java.util.List\<com.mapbox.api.directions.v5.models.IntersectionLanes\>\>) = \l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.list__intersectionLanes_adapter com.google.gson.TypeAdapter \l}"];
Node_37 [shape=record,label="{37\:\ 0x0086|0x0086: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x009c \l}"];
Node_38 [shape=record,label="{38\:\ 0x0088|0x0088: IGET  (r0 I:com.google.gson.Gson) = \l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.gson com.google.gson.Gson \l0x008a: CONST_CLASS  (r1 I:java.lang.Class\<java.util.List\>) =  java.util.List.class \l0x008c: NEW_ARRAY  (r2 I:java.lang.reflect.Type[]) = (r11 I:int A[IMMUTABLE_TYPE]) type: java.lang.reflect.Type[] \l0x008e: CONST_CLASS  (r10 I:java.lang.Class\<com.mapbox.api.directions.v5.models.IntersectionLanes\>) =  com.mapbox.api.directions.v5.models.IntersectionLanes.class \l0x0090: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r10 I:?[OBJECT, ARRAY])\l \l0x0092: INVOKE  (r1 I:com.google.gson.reflect.TypeToken) = \l  (r1 I:java.lang.reflect.Type)\l  (r2 I:java.lang.reflect.Type[])\l com.google.gson.reflect.TypeToken.getParameterized(java.lang.reflect.Type, java.lang.reflect.Type[]):com.google.gson.reflect.TypeToken type: STATIC \l0x0096: INVOKE  (r0 I:com.google.gson.TypeAdapter) = \l  (r0 I:com.google.gson.Gson)\l  (r1 I:com.google.gson.reflect.TypeToken)\l com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken):com.google.gson.TypeAdapter type: VIRTUAL \l0x009a: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.util.List\<com.mapbox.api.directions.v5.models.IntersectionLanes\>\>)\l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.list__intersectionLanes_adapter com.google.gson.TypeAdapter \l}"];
Node_39 [shape=record,label="{39\:\ 0x009c|0x009c: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r13 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00a0: CHECK_CAST  (r0 I:java.util.List) = (java.util.List) (r0 I:?[OBJECT, ARRAY]) \l0x00a2: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x00a5|0x00a5: IGET  (r0 I:com.google.gson.TypeAdapter\<java.lang.Integer\>) = \l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.integer_adapter com.google.gson.TypeAdapter \l}"];
Node_41 [shape=record,label="{41\:\ 0x00a7|0x00a7: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x00b3 \l}"];
Node_42 [shape=record,label="{42\:\ 0x00a9|0x00a9: IGET  (r0 I:com.google.gson.Gson) = \l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.gson com.google.gson.Gson \l0x00ab: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Integer\>) =  java.lang.Integer.class \l0x00ad: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x00b1: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.lang.Integer\>)\l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.integer_adapter com.google.gson.TypeAdapter \l}"];
Node_43 [shape=record,label="{43\:\ 0x00b3|0x00b3: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r13 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00b7: CHECK_CAST  (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:?[OBJECT, ARRAY]) \l0x00b9: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x00bc|0x00bc: IGET  (r0 I:com.google.gson.TypeAdapter\<java.lang.Integer\>) = \l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.integer_adapter com.google.gson.TypeAdapter \l}"];
Node_45 [shape=record,label="{45\:\ 0x00be|0x00be: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x00ca \l}"];
Node_46 [shape=record,label="{46\:\ 0x00c0|0x00c0: IGET  (r0 I:com.google.gson.Gson) = \l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.gson com.google.gson.Gson \l0x00c2: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Integer\>) =  java.lang.Integer.class \l0x00c4: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x00c8: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.lang.Integer\>)\l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.integer_adapter com.google.gson.TypeAdapter \l}"];
Node_47 [shape=record,label="{47\:\ 0x00ca|0x00ca: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r13 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00ce: CHECK_CAST  (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:?[OBJECT, ARRAY]) \l0x00d0: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x00d3|0x00d3: IGET  (r0 I:com.google.gson.TypeAdapter\<java.util.List\<java.lang.Boolean\>\>) = \l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.list__boolean_adapter com.google.gson.TypeAdapter \l}"];
Node_49 [shape=record,label="{49\:\ 0x00d5|0x00d5: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x00eb \l}"];
Node_50 [shape=record,label="{50\:\ 0x00d7|0x00d7: IGET  (r0 I:com.google.gson.Gson) = \l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.gson com.google.gson.Gson \l0x00d9: CONST_CLASS  (r1 I:java.lang.Class\<java.util.List\>) =  java.util.List.class \l0x00db: NEW_ARRAY  (r2 I:java.lang.reflect.Type[]) = (r11 I:int A[IMMUTABLE_TYPE]) type: java.lang.reflect.Type[] \l0x00dd: CONST_CLASS  (r7 I:java.lang.Class\<java.lang.Boolean\>) =  java.lang.Boolean.class \l0x00df: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r7 I:?[OBJECT, ARRAY])\l \l0x00e1: INVOKE  (r1 I:com.google.gson.reflect.TypeToken) = \l  (r1 I:java.lang.reflect.Type)\l  (r2 I:java.lang.reflect.Type[])\l com.google.gson.reflect.TypeToken.getParameterized(java.lang.reflect.Type, java.lang.reflect.Type[]):com.google.gson.reflect.TypeToken type: STATIC \l0x00e5: INVOKE  (r0 I:com.google.gson.TypeAdapter) = \l  (r0 I:com.google.gson.Gson)\l  (r1 I:com.google.gson.reflect.TypeToken)\l com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken):com.google.gson.TypeAdapter type: VIRTUAL \l0x00e9: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.util.List\<java.lang.Boolean\>\>)\l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.list__boolean_adapter com.google.gson.TypeAdapter \l}"];
Node_51 [shape=record,label="{51\:\ 0x00eb|0x00eb: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r13 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00ef: CHECK_CAST  (r0 I:java.util.List) = (java.util.List) (r0 I:?[OBJECT, ARRAY]) \l0x00f1: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x00f4|0x00f4: IGET  (r0 I:com.google.gson.TypeAdapter\<java.util.List\<java.lang.String\>\>) = \l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.list__string_adapter com.google.gson.TypeAdapter \l}"];
Node_53 [shape=record,label="{53\:\ 0x00f6|0x00f6: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x010c \l}"];
Node_54 [shape=record,label="{54\:\ 0x00f8|0x00f8: IGET  (r0 I:com.google.gson.Gson) = \l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.gson com.google.gson.Gson \l0x00fa: CONST_CLASS  (r1 I:java.lang.Class\<java.util.List\>) =  java.util.List.class \l0x00fc: NEW_ARRAY  (r2 I:java.lang.reflect.Type[]) = (r11 I:int A[IMMUTABLE_TYPE]) type: java.lang.reflect.Type[] \l0x00fe: CONST_CLASS  (r6 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x0100: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x0102: INVOKE  (r1 I:com.google.gson.reflect.TypeToken) = \l  (r1 I:java.lang.reflect.Type)\l  (r2 I:java.lang.reflect.Type[])\l com.google.gson.reflect.TypeToken.getParameterized(java.lang.reflect.Type, java.lang.reflect.Type[]):com.google.gson.reflect.TypeToken type: STATIC \l0x0106: INVOKE  (r0 I:com.google.gson.TypeAdapter) = \l  (r0 I:com.google.gson.Gson)\l  (r1 I:com.google.gson.reflect.TypeToken)\l com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken):com.google.gson.TypeAdapter type: VIRTUAL \l0x010a: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.util.List\<java.lang.String\>\>)\l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.list__string_adapter com.google.gson.TypeAdapter \l}"];
Node_55 [shape=record,label="{55\:\ 0x010c|0x010c: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r13 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0110: CHECK_CAST  (r0 I:java.util.List) = (java.util.List) (r0 I:?[OBJECT, ARRAY]) \l0x0112: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0115|0x0115: IGET  (r0 I:com.google.gson.TypeAdapter\<java.util.List\<java.lang.Integer\>\>) = \l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.list__integer_adapter com.google.gson.TypeAdapter \l}"];
Node_57 [shape=record,label="{57\:\ 0x0117|0x0117: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x012d \l}"];
Node_58 [shape=record,label="{58\:\ 0x0119|0x0119: IGET  (r0 I:com.google.gson.Gson) = \l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.gson com.google.gson.Gson \l0x011b: CONST_CLASS  (r1 I:java.lang.Class\<java.util.List\>) =  java.util.List.class \l0x011d: NEW_ARRAY  (r2 I:java.lang.reflect.Type[]) = (r11 I:int A[IMMUTABLE_TYPE]) type: java.lang.reflect.Type[] \l0x011f: CONST_CLASS  (r5 I:java.lang.Class\<java.lang.Integer\>) =  java.lang.Integer.class \l0x0121: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x0123: INVOKE  (r1 I:com.google.gson.reflect.TypeToken) = \l  (r1 I:java.lang.reflect.Type)\l  (r2 I:java.lang.reflect.Type[])\l com.google.gson.reflect.TypeToken.getParameterized(java.lang.reflect.Type, java.lang.reflect.Type[]):com.google.gson.reflect.TypeToken type: STATIC \l0x0127: INVOKE  (r0 I:com.google.gson.TypeAdapter) = \l  (r0 I:com.google.gson.Gson)\l  (r1 I:com.google.gson.reflect.TypeToken)\l com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken):com.google.gson.TypeAdapter type: VIRTUAL \l0x012b: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.util.List\<java.lang.Integer\>\>)\l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.list__integer_adapter com.google.gson.TypeAdapter \l}"];
Node_59 [shape=record,label="{59\:\ 0x012d|0x012d: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r13 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0131: CHECK_CAST  (r0 I:java.util.List) = (java.util.List) (r0 I:?[OBJECT, ARRAY]) \l0x0133: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_60 [shape=record,label="{60\:\ 0x0136|0x0136: IGET  (r0 I:com.google.gson.TypeAdapter\<double[]\>) = \l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.array__double_adapter com.google.gson.TypeAdapter \l}"];
Node_61 [shape=record,label="{61\:\ 0x0138|0x0138: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x0144 \l}"];
Node_62 [shape=record,label="{62\:\ 0x013a|0x013a: IGET  (r0 I:com.google.gson.Gson) = \l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.gson com.google.gson.Gson \l0x013c: CONST_CLASS  (r1 I:java.lang.Class\<double[]\>) =  double[].class \l0x013e: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x0142: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<double[]\>)\l  (r12 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.array__double_adapter com.google.gson.TypeAdapter \l}"];
Node_63 [shape=record,label="{63\:\ 0x0144|0x0144: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r13 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0148: CHECK_CAST  (r0 I:double[]) = (double[]) (r0 I:?[OBJECT, ARRAY]) \l0x014a: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_64 [shape=record,label="{64\:\ 0x014d|0x014d: INVOKE  (r13 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.endObject():void type: VIRTUAL \l0x0150: NEW_INSTANCE  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection) =  com.mapbox.api.directions.v5.models.AutoValue_StepIntersection \l0x0152: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0153: INVOKE  \l  (r3 I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection)\l  (r4 I:double[])\l  (r5 I:java.util.List)\l  (r6 I:java.util.List)\l  (r7 I:java.util.List)\l  (r8 I:java.lang.Integer)\l  (r9 I:java.lang.Integer)\l  (r10 I:java.util.List)\l com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.\<init\>(double[], java.util.List, java.util.List, java.util.List, java.lang.Integer, java.lang.Integer, java.util.List):void type: DIRECT \l}"];
Node_65 [shape=record,label="{65\:\ 0x0156|0x0156: RETURN  \l  (r13 I:com.mapbox.api.directions.v5.models.StepIntersection)\l \l}"];
MethodNode[shape=record,label="{public com.mapbox.api.directions.v5.models.StepIntersection com.mapbox.api.directions.v5.models.AutoValue_StepIntersection.GsonTypeAdapter.read((r12 'this' I:com.mapbox.api.directions.v5.models.AutoValue_StepIntersection$GsonTypeAdapter A[IMMUTABLE_TYPE, THIS]), (r13 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_64;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_5;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_16;
Node_11 -> Node_19;
Node_11 -> Node_22;
Node_11 -> Node_25;
Node_11 -> Node_28;
Node_11 -> Node_31;
Node_11 -> Node_34;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_34;
Node_15 -> Node_34;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_34;
Node_18 -> Node_34;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_34;
Node_21 -> Node_34;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_34;
Node_24 -> Node_34;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_34;
Node_27 -> Node_34;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_34;
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_34 -> Node_36;
Node_34 -> Node_40;
Node_34 -> Node_44;
Node_34 -> Node_48;
Node_34 -> Node_52;
Node_34 -> Node_56;
Node_34 -> Node_60;
Node_35 -> Node_5;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_5;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_43 -> Node_5;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_5;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_51;
Node_51 -> Node_5;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_55 -> Node_5;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_59;
Node_59 -> Node_5;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_63;
Node_62 -> Node_63;
Node_63 -> Node_5;
Node_64 -> Node_65;
}

