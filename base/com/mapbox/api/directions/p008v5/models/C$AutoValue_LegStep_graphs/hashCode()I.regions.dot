digraph "CFG forcom.mapbox.api.directions.v5.models.$AutoValue_LegStep.hashCode()I" {
subgraph cluster_Region_2057481211 {
label = "R(4:0|44|(1:46)|48)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r4 = 0\l}"];
Node_44 [shape=record,label="{44\:\ 0x00f1|PHI: r2 \l  PHI: (r2v5 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r0 = (((((((((((((((((((((((((((((((((int) ((java.lang.Double.doubleToLongBits(r7.distance) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r7.distance))) ^ 1000003) * 1000003) ^ ((int) ((java.lang.Double.doubleToLongBits(r7.duration) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r7.duration)))) * 1000003) ^ (r7.geometry == null ? 0 : r7.geometry.hashCode())) * 1000003) ^ (r7.name == null ? 0 : r7.name.hashCode())) * 1000003) ^ (r7.ref == null ? 0 : r7.ref.hashCode())) * 1000003) ^ (r7.destinations == null ? 0 : r7.destinations.hashCode())) * 1000003) ^ r7.mode.hashCode()) * 1000003) ^ (r7.pronunciation == null ? 0 : r7.pronunciation.hashCode())) * 1000003) ^ (r7.rotaryName == null ? 0 : r7.rotaryName.hashCode())) * 1000003) ^ (r7.rotaryPronunciation == null ? 0 : r7.rotaryPronunciation.hashCode())) * 1000003) ^ r7.maneuver.hashCode()) * 1000003) ^ (r7.voiceInstructions == null ? 0 : r7.voiceInstructions.hashCode())) * 1000003) ^ (r7.bannerInstructions == null ? 0 : r7.bannerInstructions.hashCode())) * 1000003) ^ (r7.drivingSide == null ? 0 : r7.drivingSide.hashCode())) * 1000003) ^ ((int) ((java.lang.Double.doubleToLongBits(r7.weight) \>\>\> 32) ^ java.lang.Double.doubleToLongBits(r7.weight)))) * 1000003) ^ (r7.intersections == null ? 0 : r7.intersections.hashCode())) * 1000003\l}"];
subgraph cluster_IfRegion_1018839492 {
label = "IF [B:45:0x00f6] THEN: R(1:46) ELSE: null";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x00f6|if (r7.exits != null) goto L_0x00f9\l}"];
subgraph cluster_Region_1350250806 {
label = "R(1:46)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x00f9|int r4 = r7.exits.hashCode()\l}"];
}
}
Node_48 [shape=record,label="{48\:\ 0x0100|RETURN\l|return r0 ^ r4\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x002c}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x002e}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0030}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0036|PHI: r3 \l  PHI: (r3v8 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x003b}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x003d}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x003f}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0045|PHI: r3 \l  PHI: (r3v10 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x004a}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x004c}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x004e}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0054|PHI: r3 \l  PHI: (r3v12 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0059}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x005b}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x005d}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0063|PHI: r3 \l  PHI: (r3v14 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0071}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0073}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0075}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x007b|PHI: r3 \l  PHI: (r3v18 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0080}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0082}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0084}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x008a|PHI: r3 \l  PHI: (r3v20 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x008f}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0091}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0093}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0099|PHI: r3 \l  PHI: (r3v22 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x00a7}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x00a9}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x00ab}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x00b1|PHI: r3 \l  PHI: (r3v26 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x00b6}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x00b8}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x00ba}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x00c0|PHI: r3 \l  PHI: (r3v28 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x00c5}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x00c7}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x00c9}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x00cf|PHI: r3 \l  PHI: (r3v30 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x00e7}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x00e9}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x00eb}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x00ff|PHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:45:0x00f6, B:46:0x00f9] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public int com.mapbox.api.directions.v5.models.$AutoValue_LegStep.hashCode((r7v0 'this' com.mapbox.api.directions.v5.models.$AutoValue_LegStep A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_45 -> Node_47[style=dashed];
Node_46 -> Node_47;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_41 -> Node_43;
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_47 -> Node_48;
}

