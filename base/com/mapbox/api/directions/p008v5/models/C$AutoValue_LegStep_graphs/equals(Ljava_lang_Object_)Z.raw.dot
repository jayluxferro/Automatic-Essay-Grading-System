digraph "CFG forcom.mapbox.api.directions.v5.models.$AutoValue_LegStep.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INSTANCE_OF  (r1 I:boolean) = (r8 I:?[OBJECT, ARRAY]) com.mapbox.api.directions.v5.models.LegStep \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:102:0x0170 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: CHECK_CAST  (r8 I:com.mapbox.api.directions.v5.models.LegStep) = (com.mapbox.api.directions.v5.models.LegStep) (r8 I:?[OBJECT, ARRAY]) \l0x000b: IGET  (r3 I:double) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.distance double \l0x000d: INVOKE  (r3 I:long) = (r3 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x0011: INVOKE  (r5 I:double) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.distance():double type: VIRTUAL \l0x0015: INVOKE  (r5 I:long) = (r5 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x0019: CMP_L  (r1 I:int) = (r3 I:long), (r5 I:long) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IGET  (r3 I:double) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.duration double \l0x001f: INVOKE  (r3 I:long) = (r3 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x0023: INVOKE  (r5 I:double) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.duration():double type: VIRTUAL \l0x0027: INVOKE  (r5 I:long) = (r5 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x002b: CMP_L  (r1 I:int) = (r3 I:long), (r5 I:long) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.geometry java.lang.String \l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003a \l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: INVOKE  (r1 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.geometry():java.lang.String type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|0x0037: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|0x003a: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.geometry java.lang.String \l0x003c: INVOKE  (r3 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.geometry():java.lang.String type: VIRTUAL \l0x0040: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|0x0044: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_16 [shape=record,label="{16\:\ 0x0046|0x0046: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.name java.lang.String \l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|0x0048: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0051 \l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|0x004a: INVOKE  (r1 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.name():java.lang.String type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x004e|0x004e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|0x0051: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.name java.lang.String \l0x0053: INVOKE  (r3 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.name():java.lang.String type: VIRTUAL \l0x0057: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x005b|0x005b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_23 [shape=record,label="{23\:\ 0x005d|0x005d: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.ref java.lang.String \l}"];
Node_24 [shape=record,label="{24\:\ 0x005f|0x005f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0068 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0061|0x0061: INVOKE  (r1 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.ref():java.lang.String type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0065|0x0065: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_28 [shape=record,label="{28\:\ 0x0068|0x0068: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.ref java.lang.String \l0x006a: INVOKE  (r3 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.ref():java.lang.String type: VIRTUAL \l0x006e: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x0072|0x0072: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_30 [shape=record,label="{30\:\ 0x0074|0x0074: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.destinations java.lang.String \l}"];
Node_31 [shape=record,label="{31\:\ 0x0076|0x0076: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x007f \l}"];
Node_32 [shape=record,label="{32\:\ 0x0078|0x0078: INVOKE  (r1 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.destinations():java.lang.String type: VIRTUAL \l}"];
Node_33 [shape=record,label="{33\:\ 0x007c|0x007c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_35 [shape=record,label="{35\:\ 0x007f|0x007f: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.destinations java.lang.String \l0x0081: INVOKE  (r3 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.destinations():java.lang.String type: VIRTUAL \l0x0085: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_36 [shape=record,label="{36\:\ 0x0089|0x0089: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_37 [shape=record,label="{37\:\ 0x008b|0x008b: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.mode java.lang.String \l0x008d: INVOKE  (r3 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.mode():java.lang.String type: VIRTUAL \l0x0091: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_38 [shape=record,label="{38\:\ 0x0095|0x0095: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_39 [shape=record,label="{39\:\ 0x0097|0x0097: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.pronunciation java.lang.String \l}"];
Node_40 [shape=record,label="{40\:\ 0x0099|0x0099: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x00a2 \l}"];
Node_41 [shape=record,label="{41\:\ 0x009b|0x009b: INVOKE  (r1 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.pronunciation():java.lang.String type: VIRTUAL \l}"];
Node_42 [shape=record,label="{42\:\ 0x009f|0x009f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_44 [shape=record,label="{44\:\ 0x00a2|0x00a2: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.pronunciation java.lang.String \l0x00a4: INVOKE  (r3 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.pronunciation():java.lang.String type: VIRTUAL \l0x00a8: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_45 [shape=record,label="{45\:\ 0x00ac|0x00ac: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_46 [shape=record,label="{46\:\ 0x00ae|0x00ae: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.rotaryName java.lang.String \l}"];
Node_47 [shape=record,label="{47\:\ 0x00b0|0x00b0: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x00b9 \l}"];
Node_48 [shape=record,label="{48\:\ 0x00b2|0x00b2: INVOKE  (r1 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.rotaryName():java.lang.String type: VIRTUAL \l}"];
Node_49 [shape=record,label="{49\:\ 0x00b6|0x00b6: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_51 [shape=record,label="{51\:\ 0x00b9|0x00b9: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.rotaryName java.lang.String \l0x00bb: INVOKE  (r3 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.rotaryName():java.lang.String type: VIRTUAL \l0x00bf: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_52 [shape=record,label="{52\:\ 0x00c3|0x00c3: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_53 [shape=record,label="{53\:\ 0x00c5|0x00c5: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.rotaryPronunciation java.lang.String \l}"];
Node_54 [shape=record,label="{54\:\ 0x00c7|0x00c7: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x00d0 \l}"];
Node_55 [shape=record,label="{55\:\ 0x00c9|0x00c9: INVOKE  (r1 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.rotaryPronunciation():java.lang.String type: VIRTUAL \l}"];
Node_56 [shape=record,label="{56\:\ 0x00cd|0x00cd: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_58 [shape=record,label="{58\:\ 0x00d0|0x00d0: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.rotaryPronunciation java.lang.String \l0x00d2: INVOKE  (r3 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.rotaryPronunciation():java.lang.String type: VIRTUAL \l0x00d6: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_59 [shape=record,label="{59\:\ 0x00da|0x00da: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_60 [shape=record,label="{60\:\ 0x00dc|0x00dc: IGET  (r1 I:com.mapbox.api.directions.v5.models.StepManeuver) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.maneuver com.mapbox.api.directions.v5.models.StepManeuver \l0x00de: INVOKE  (r3 I:com.mapbox.api.directions.v5.models.StepManeuver) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.maneuver():com.mapbox.api.directions.v5.models.StepManeuver type: VIRTUAL \l0x00e2: INVOKE  (r1 I:boolean) = (r1 I:java.lang.Object), (r3 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_61 [shape=record,label="{61\:\ 0x00e6|0x00e6: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_62 [shape=record,label="{62\:\ 0x00e8|0x00e8: IGET  (r1 I:java.util.List\<com.mapbox.api.directions.v5.models.VoiceInstructions\>) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.voiceInstructions java.util.List \l}"];
Node_63 [shape=record,label="{63\:\ 0x00ea|0x00ea: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x00f3 \l}"];
Node_64 [shape=record,label="{64\:\ 0x00ec|0x00ec: INVOKE  (r1 I:java.util.List) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.voiceInstructions():java.util.List type: VIRTUAL \l}"];
Node_65 [shape=record,label="{65\:\ 0x00f0|0x00f0: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_67 [shape=record,label="{67\:\ 0x00f3|0x00f3: IGET  (r1 I:java.util.List\<com.mapbox.api.directions.v5.models.VoiceInstructions\>) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.voiceInstructions java.util.List \l0x00f5: INVOKE  (r3 I:java.util.List) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.voiceInstructions():java.util.List type: VIRTUAL \l0x00f9: INVOKE  (r1 I:boolean) = (r1 I:java.util.List), (r3 I:java.lang.Object) java.util.List.equals(java.lang.Object):boolean type: INTERFACE \l}"];
Node_68 [shape=record,label="{68\:\ 0x00fd|0x00fd: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_69 [shape=record,label="{69\:\ 0x00ff|0x00ff: IGET  (r1 I:java.util.List\<com.mapbox.api.directions.v5.models.BannerInstructions\>) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.bannerInstructions java.util.List \l}"];
Node_70 [shape=record,label="{70\:\ 0x0101|0x0101: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:74:0x010a \l}"];
Node_71 [shape=record,label="{71\:\ 0x0103|0x0103: INVOKE  (r1 I:java.util.List) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.bannerInstructions():java.util.List type: VIRTUAL \l}"];
Node_72 [shape=record,label="{72\:\ 0x0107|0x0107: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_74 [shape=record,label="{74\:\ 0x010a|0x010a: IGET  (r1 I:java.util.List\<com.mapbox.api.directions.v5.models.BannerInstructions\>) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.bannerInstructions java.util.List \l0x010c: INVOKE  (r3 I:java.util.List) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.bannerInstructions():java.util.List type: VIRTUAL \l0x0110: INVOKE  (r1 I:boolean) = (r1 I:java.util.List), (r3 I:java.lang.Object) java.util.List.equals(java.lang.Object):boolean type: INTERFACE \l}"];
Node_75 [shape=record,label="{75\:\ 0x0114|0x0114: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_76 [shape=record,label="{76\:\ 0x0116|0x0116: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.drivingSide java.lang.String \l}"];
Node_77 [shape=record,label="{77\:\ 0x0118|0x0118: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:81:0x0121 \l}"];
Node_78 [shape=record,label="{78\:\ 0x011a|0x011a: INVOKE  (r1 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.drivingSide():java.lang.String type: VIRTUAL \l}"];
Node_79 [shape=record,label="{79\:\ 0x011e|0x011e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_81 [shape=record,label="{81\:\ 0x0121|0x0121: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.drivingSide java.lang.String \l0x0123: INVOKE  (r3 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.drivingSide():java.lang.String type: VIRTUAL \l0x0127: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_82 [shape=record,label="{82\:\ 0x012b|0x012b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_83 [shape=record,label="{83\:\ 0x012d|0x012d: IGET  (r3 I:double) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.weight double \l0x012f: INVOKE  (r3 I:long) = (r3 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x0133: INVOKE  (r5 I:double) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.weight():double type: VIRTUAL \l0x0137: INVOKE  (r5 I:long) = (r5 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x013b: CMP_L  (r1 I:int) = (r3 I:long), (r5 I:long) \l}"];
Node_84 [shape=record,label="{84\:\ 0x013d|0x013d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_85 [shape=record,label="{85\:\ 0x013f|0x013f: IGET  (r1 I:java.util.List\<com.mapbox.api.directions.v5.models.StepIntersection\>) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.intersections java.util.List \l}"];
Node_86 [shape=record,label="{86\:\ 0x0141|0x0141: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:90:0x014a \l}"];
Node_87 [shape=record,label="{87\:\ 0x0143|0x0143: INVOKE  (r1 I:java.util.List) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.intersections():java.util.List type: VIRTUAL \l}"];
Node_88 [shape=record,label="{88\:\ 0x0147|0x0147: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_90 [shape=record,label="{90\:\ 0x014a|0x014a: IGET  (r1 I:java.util.List\<com.mapbox.api.directions.v5.models.StepIntersection\>) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.intersections java.util.List \l0x014c: INVOKE  (r3 I:java.util.List) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.intersections():java.util.List type: VIRTUAL \l0x0150: INVOKE  (r1 I:boolean) = (r1 I:java.util.List), (r3 I:java.lang.Object) java.util.List.equals(java.lang.Object):boolean type: INTERFACE \l}"];
Node_91 [shape=record,label="{91\:\ 0x0154|0x0154: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_92 [shape=record,label="{92\:\ 0x0156|0x0156: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.exits java.lang.String \l}"];
Node_93 [shape=record,label="{93\:\ 0x0158|0x0158: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:97:0x0161 \l}"];
Node_94 [shape=record,label="{94\:\ 0x015a|0x015a: INVOKE  (r8 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.exits():java.lang.String type: VIRTUAL \l}"];
Node_95 [shape=record,label="{95\:\ 0x015e|0x015e: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_97 [shape=record,label="{97\:\ 0x0161|0x0161: IGET  (r1 I:java.lang.String) = \l  (r7 I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep)\l com.mapbox.api.directions.v5.models.$AutoValue_LegStep.exits java.lang.String \l0x0163: INVOKE  (r8 I:java.lang.String) = (r8 I:com.mapbox.api.directions.v5.models.LegStep) com.mapbox.api.directions.v5.models.LegStep.exits():java.lang.String type: VIRTUAL \l0x0167: INVOKE  (r8 I:boolean) = (r1 I:java.lang.String), (r8 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_98 [shape=record,label="{98\:\ 0x016b|0x016b: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x016e \l}"];
Node_100 [shape=record,label="{100\:\ 0x016e|0x016e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_101 [shape=record,label="{101\:\ 0x016f|0x016f: RETURN  (r0 I:boolean) \l}"];
Node_102 [shape=record,label="{102\:\ 0x0170|0x0170: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.api.directions.v5.models.$AutoValue_LegStep.equals((r7 'this' I:com.mapbox.api.directions.v5.models.$AutoValue_LegStep A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_102;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_100;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_100;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_100;
Node_12 -> Node_16[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_100;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_100;
Node_19 -> Node_23[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_100;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_100;
Node_26 -> Node_30[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_100;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_100;
Node_33 -> Node_37[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_100;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_100;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_44;
Node_41 -> Node_42;
Node_42 -> Node_100;
Node_42 -> Node_46[style=dashed];
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_100;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_51;
Node_48 -> Node_49;
Node_49 -> Node_100;
Node_49 -> Node_53[style=dashed];
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_100;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_58;
Node_55 -> Node_56;
Node_56 -> Node_100;
Node_56 -> Node_60[style=dashed];
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_100;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_100;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_67;
Node_64 -> Node_65;
Node_65 -> Node_100;
Node_65 -> Node_69[style=dashed];
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_100;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_74;
Node_71 -> Node_72;
Node_72 -> Node_100;
Node_72 -> Node_76[style=dashed];
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_100;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_81;
Node_78 -> Node_79;
Node_79 -> Node_100;
Node_79 -> Node_83[style=dashed];
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_100;
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_100;
Node_85 -> Node_86;
Node_86 -> Node_87[style=dashed];
Node_86 -> Node_90;
Node_87 -> Node_88;
Node_88 -> Node_100;
Node_88 -> Node_92[style=dashed];
Node_90 -> Node_91;
Node_91 -> Node_92[style=dashed];
Node_91 -> Node_100;
Node_92 -> Node_93;
Node_93 -> Node_94[style=dashed];
Node_93 -> Node_97;
Node_94 -> Node_95;
Node_95 -> Node_100;
Node_95 -> Node_101[style=dashed];
Node_97 -> Node_98;
Node_98 -> Node_100;
Node_98 -> Node_101[style=dashed];
Node_100 -> Node_101;
}

