digraph "CFG forcom.mapbox.api.directions.v5.models.$AutoValue_MaxSpeed.equals(Ljava\/lang\/Object;)Z" {
subgraph cluster_Region_1583630562 {
label = "R(1:(2:(1:2)|(1:(2:(1:30)|(3:5|(1:(1:(1:(1:(1:31))(1:(1:32)))))|29)))))";
node [shape=record,color=blue];
subgraph cluster_Region_2084899494 {
label = "R(2:(1:2)|(1:(2:(1:30)|(3:5|(1:(1:(1:(1:(1:31))(1:(1:32)))))|29))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_637647292 {
label = "IF [B:1:0x0001] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r5 == r4) goto L_0x0003\l}"];
subgraph cluster_Region_1019404000 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1084076738 {
label = "R(1:(2:(1:30)|(3:5|(1:(1:(1:(1:(1:31))(1:(1:32)))))|29)))";
node [shape=record,color=blue];
subgraph cluster_Region_341409869 {
label = "R(2:(1:30)|(3:5|(1:(1:(1:(1:(1:31))(1:(1:32)))))|29))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1061033763 {
label = "IF [B:4:0x0007] THEN: R(1:30) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0007|if ((r5 instanceof com.mapbox.api.directions.p008v5.models.MaxSpeed) != true) goto L_0x006a\l}"];
subgraph cluster_Region_362933242 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x006a|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1840372954 {
label = "R(3:5|(1:(1:(1:(1:(1:31))(1:(1:32)))))|29)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0009|com.mapbox.api.directions.v5.models.MaxSpeed com.mapbox.api.directions.p008v5.models.MaxSpeed r5 = (com.mapbox.api.directions.p008v5.models.MaxSpeed) r5\l}"];
subgraph cluster_IfRegion_1841697555 {
label = "IF [B:6:0x000d, B:8:0x0013, B:10:0x0020] THEN: R(1:(1:(1:(1:(1:31))(1:(1:32))))) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000d|ADDED_TO_REGION\l|if (r4.speed != null) goto L_0x0016\l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|ADDED_TO_REGION\l|if (r5.speed() == null) goto L_0x0022\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|ADDED_TO_REGION\l|if (r4.speed.equals(r5.speed()) == true) goto L_0x0022\l}"];
subgraph cluster_Region_948387886 {
label = "R(1:(1:(1:(1:(1:31))(1:(1:32)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_647151910 {
label = "IF [B:12:0x0024, B:14:0x002a, B:16:0x0037] THEN: R(1:(1:(1:(1:31))(1:(1:32)))) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0024|ADDED_TO_REGION\l|if (r4.unit != null) goto L_0x002d\l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|ADDED_TO_REGION\l|if (r5.unit() == null) goto L_0x0039\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|ADDED_TO_REGION\l|if (r4.unit.equals(r5.unit()) == true) goto L_0x0039\l}"];
subgraph cluster_Region_1610937499 {
label = "R(1:(1:(1:(1:31))(1:(1:32))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_280141578 {
label = "IF [B:18:0x003b, B:20:0x0041, B:22:0x004e] THEN: R(1:(1:(1:31))(1:(1:32))) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x003b|ADDED_TO_REGION\l|if (r4.unknown != null) goto L_0x0044\l}"];
Node_20 [shape=record,label="{20\:\ 0x0041|ADDED_TO_REGION\l|if (r5.unknown() == null) goto L_0x0050\l}"];
Node_22 [shape=record,label="{22\:\ 0x004e|ADDED_TO_REGION\l|if (r4.unknown.equals(r5.unknown()) == true) goto L_0x0050\l}"];
subgraph cluster_Region_801923255 {
label = "R(1:(1:(1:31))(1:(1:32)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_891859087 {
label = "IF [B:24:0x0052] THEN: R(1:(1:31)) ELSE: R(1:(1:32))";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0052|if (r4.none == null) goto L_0x0054\l}"];
subgraph cluster_Region_934023220 {
label = "R(1:(1:31))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1929823946 {
label = "IF [B:26:0x0058] THEN: R(1:31) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0058|if (r5.none() == null) goto L_?\l}"];
subgraph cluster_Region_1892387446 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
}
subgraph cluster_Region_1020171520 {
label = "R(1:(1:32)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_772082994 {
label = "IF [B:28:0x0065] THEN: R(1:32) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0065|if (r4.none.equals(r5.none()) == true) goto L_?\l}"];
subgraph cluster_Region_1284695774 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
}
}
}
}
}
}
}
}
Node_29 [shape=record,label="{29\:\ 0x0068|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0004}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000f}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0016}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0022}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0026}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x002d}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0039}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x003d}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0044}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0050}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0054}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x005b}"];
MethodNode[shape=record,label="{public boolean com.mapbox.api.directions.v5.models.$AutoValue_MaxSpeed.equals((r4v0 'this' com.mapbox.api.directions.v5.models.$AutoValue_MaxSpeed A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_30;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_8 -> Node_29[style=dashed];
Node_8 -> Node_11;
Node_10 -> Node_11;
Node_10 -> Node_29[style=dashed];
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_14 -> Node_29[style=dashed];
Node_14 -> Node_17;
Node_16 -> Node_17;
Node_16 -> Node_29[style=dashed];
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_20 -> Node_29[style=dashed];
Node_20 -> Node_23;
Node_22 -> Node_23;
Node_22 -> Node_29[style=dashed];
Node_24 -> Node_25;
Node_24 -> Node_27[style=dashed];
Node_26 -> Node_29[style=dashed];
Node_26 -> Node_31;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_32;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_27 -> Node_28;
}

