digraph "CFG forcom.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.read(Lcom\/google\/gson\/stream\/JsonReader;)Lcom\/mapbox\/api\/directions\/v5\/models\/DirectionsRoute;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.google.gson.stream.JsonToken) = (r14 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0004: SGET  (r1 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: INVOKE  (r14 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN  (r2 I:com.mapbox.api.directions.v5.models.DirectionsRoute) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r14 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.beginObject():void type: VIRTUAL \l0x0010: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0011: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0012: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x0013: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0014: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0015: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0016: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0017: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: INVOKE  (r0 I:boolean) = (r14 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.hasNext():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x0151 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: INVOKE  (r0 I:java.lang.String) = (r14 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextName():java.lang.String type: VIRTUAL \l0x0022: INVOKE  (r1 I:com.google.gson.stream.JsonToken) = (r14 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0026: SGET  (r2 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002e \l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: INVOKE  (r14 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x002f: INVOKE  (r2 I:int) = (r0 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL \l0x0033: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0034: CONST  (r12 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[\-1992012396, \-791592328, \-445777899, \-264720852, 3317797, 288459765, 1846020210, 2077998066] t:[0x007f, 0x0075, 0x006b, 0x0061, 0x0057, 0x004d, 0x0043, 0x0039] \l}"];
Node_13 [shape=record,label="{13\:\ 0x0039|0x0039: CONST_STR  (r2 I:java.lang.String) =  \"weight_name\" \l0x003b: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|0x003f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0088 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0041|0x0041: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0043|0x0043: CONST_STR  (r2 I:java.lang.String) =  \"geometry\" \l0x0045: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0049|0x0049: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0088 \l}"];
Node_18 [shape=record,label="{18\:\ 0x004b|0x004b: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x004d|0x004d: CONST_STR  (r2 I:java.lang.String) =  \"distance\" \l0x004f: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0053|0x0053: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0088 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0055|0x0055: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x0057|0x0057: CONST_STR  (r2 I:java.lang.String) =  \"legs\" \l0x0059: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x005d|0x005d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0088 \l}"];
Node_24 [shape=record,label="{24\:\ 0x005f|0x005f: CONST  (r1 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0061|0x0061: CONST_STR  (r2 I:java.lang.String) =  \"voiceLocale\" \l0x0063: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0067|0x0067: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0088 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0069|0x0069: CONST  (r1 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x006b|0x006b: CONST_STR  (r2 I:java.lang.String) =  \"routeOptions\" \l0x006d: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x0071|0x0071: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0088 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0073|0x0073: CONST  (r1 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0075|0x0075: CONST_STR  (r2 I:java.lang.String) =  \"weight\" \l0x0077: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_32 [shape=record,label="{32\:\ 0x007b|0x007b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0088 \l}"];
Node_33 [shape=record,label="{33\:\ 0x007d|0x007d: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x007f|0x007f: CONST_STR  (r2 I:java.lang.String) =  \"duration\" \l0x0081: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_35 [shape=record,label="{35\:\ 0x0085|0x0085: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0088 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0087|0x0087: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0088|0x0088: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3, 4, 5, 6, 7] t:[0x013a, 0x0123, 0x010c, 0x00f5, 0x00de, 0x00bd, 0x00a6, 0x008f] \l}"];
Node_38 [shape=record,label="{38\:\ 0x008b|0x008b: INVOKE  (r14 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.skipValue():void type: VIRTUAL \l}"];
Node_39 [shape=record,label="{39\:\ 0x008f|0x008f: IGET  (r0 I:com.google.gson.TypeAdapter\<java.lang.String\>) = \l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_40 [shape=record,label="{40\:\ 0x0091|0x0091: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x009d \l}"];
Node_41 [shape=record,label="{41\:\ 0x0093|0x0093: IGET  (r0 I:com.google.gson.Gson) = \l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.gson com.google.gson.Gson \l0x0095: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x0097: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x009b: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.lang.String\>)\l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_42 [shape=record,label="{42\:\ 0x009d|0x009d: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r14 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00a1: CHECK_CAST  (r0 I:java.lang.String) = (java.lang.String) (r0 I:?[OBJECT, ARRAY]) \l0x00a3: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x00a6|0x00a6: IGET  (r0 I:com.google.gson.TypeAdapter\<com.mapbox.api.directions.v5.models.RouteOptions\>) = \l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.routeOptions_adapter com.google.gson.TypeAdapter \l}"];
Node_44 [shape=record,label="{44\:\ 0x00a8|0x00a8: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x00b4 \l}"];
Node_45 [shape=record,label="{45\:\ 0x00aa|0x00aa: IGET  (r0 I:com.google.gson.Gson) = \l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.gson com.google.gson.Gson \l0x00ac: CONST_CLASS  (r1 I:java.lang.Class\<com.mapbox.api.directions.v5.models.RouteOptions\>) =  com.mapbox.api.directions.v5.models.RouteOptions.class \l0x00ae: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x00b2: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<com.mapbox.api.directions.v5.models.RouteOptions\>)\l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.routeOptions_adapter com.google.gson.TypeAdapter \l}"];
Node_46 [shape=record,label="{46\:\ 0x00b4|0x00b4: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r14 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00b8: CHECK_CAST  (r0 I:com.mapbox.api.directions.v5.models.RouteOptions) = (com.mapbox.api.directions.v5.models.RouteOptions) (r0 I:?[OBJECT, ARRAY]) \l0x00ba: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x00bd|0x00bd: IGET  (r0 I:com.google.gson.TypeAdapter\<java.util.List\<com.mapbox.api.directions.v5.models.RouteLeg\>\>) = \l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.list__routeLeg_adapter com.google.gson.TypeAdapter \l}"];
Node_48 [shape=record,label="{48\:\ 0x00bf|0x00bf: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x00d5 \l}"];
Node_49 [shape=record,label="{49\:\ 0x00c1|0x00c1: IGET  (r0 I:com.google.gson.Gson) = \l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.gson com.google.gson.Gson \l0x00c3: CONST_CLASS  (r1 I:java.lang.Class\<java.util.List\>) =  java.util.List.class \l0x00c5: NEW_ARRAY  (r2 I:java.lang.reflect.Type[]) = (r12 I:int A[IMMUTABLE_TYPE]) type: java.lang.reflect.Type[] \l0x00c7: CONST_CLASS  (r9 I:java.lang.Class\<com.mapbox.api.directions.v5.models.RouteLeg\>) =  com.mapbox.api.directions.v5.models.RouteLeg.class \l0x00c9: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r9 I:?[OBJECT, ARRAY])\l \l0x00cb: INVOKE  (r1 I:com.google.gson.reflect.TypeToken) = \l  (r1 I:java.lang.reflect.Type)\l  (r2 I:java.lang.reflect.Type[])\l com.google.gson.reflect.TypeToken.getParameterized(java.lang.reflect.Type, java.lang.reflect.Type[]):com.google.gson.reflect.TypeToken type: STATIC \l0x00cf: INVOKE  (r0 I:com.google.gson.TypeAdapter) = \l  (r0 I:com.google.gson.Gson)\l  (r1 I:com.google.gson.reflect.TypeToken)\l com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken):com.google.gson.TypeAdapter type: VIRTUAL \l0x00d3: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.util.List\<com.mapbox.api.directions.v5.models.RouteLeg\>\>)\l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.list__routeLeg_adapter com.google.gson.TypeAdapter \l}"];
Node_50 [shape=record,label="{50\:\ 0x00d5|0x00d5: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r14 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00d9: CHECK_CAST  (r0 I:java.util.List) = (java.util.List) (r0 I:?[OBJECT, ARRAY]) \l0x00db: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x00de|0x00de: IGET  (r0 I:com.google.gson.TypeAdapter\<java.lang.String\>) = \l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_52 [shape=record,label="{52\:\ 0x00e0|0x00e0: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00ec \l}"];
Node_53 [shape=record,label="{53\:\ 0x00e2|0x00e2: IGET  (r0 I:com.google.gson.Gson) = \l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.gson com.google.gson.Gson \l0x00e4: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x00e6: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x00ea: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.lang.String\>)\l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_54 [shape=record,label="{54\:\ 0x00ec|0x00ec: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r14 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00f0: CHECK_CAST  (r0 I:java.lang.String) = (java.lang.String) (r0 I:?[OBJECT, ARRAY]) \l0x00f2: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x00f5|0x00f5: IGET  (r0 I:com.google.gson.TypeAdapter\<java.lang.Double\>) = \l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.double__adapter com.google.gson.TypeAdapter \l}"];
Node_56 [shape=record,label="{56\:\ 0x00f7|0x00f7: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0103 \l}"];
Node_57 [shape=record,label="{57\:\ 0x00f9|0x00f9: IGET  (r0 I:com.google.gson.Gson) = \l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.gson com.google.gson.Gson \l0x00fb: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Double\>) =  java.lang.Double.class \l0x00fd: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x0101: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.lang.Double\>)\l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.double__adapter com.google.gson.TypeAdapter \l}"];
Node_58 [shape=record,label="{58\:\ 0x0103|0x0103: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r14 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0107: CHECK_CAST  (r0 I:java.lang.Double) = (java.lang.Double) (r0 I:?[OBJECT, ARRAY]) \l0x0109: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x010c|0x010c: IGET  (r0 I:com.google.gson.TypeAdapter\<java.lang.String\>) = \l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_60 [shape=record,label="{60\:\ 0x010e|0x010e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x011a \l}"];
Node_61 [shape=record,label="{61\:\ 0x0110|0x0110: IGET  (r0 I:com.google.gson.Gson) = \l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.gson com.google.gson.Gson \l0x0112: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x0114: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x0118: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.lang.String\>)\l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_62 [shape=record,label="{62\:\ 0x011a|0x011a: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r14 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x011e: CHECK_CAST  (r0 I:java.lang.String) = (java.lang.String) (r0 I:?[OBJECT, ARRAY]) \l0x0120: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_63 [shape=record,label="{63\:\ 0x0123|0x0123: IGET  (r0 I:com.google.gson.TypeAdapter\<java.lang.Double\>) = \l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.double__adapter com.google.gson.TypeAdapter \l}"];
Node_64 [shape=record,label="{64\:\ 0x0125|0x0125: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x0131 \l}"];
Node_65 [shape=record,label="{65\:\ 0x0127|0x0127: IGET  (r0 I:com.google.gson.Gson) = \l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.gson com.google.gson.Gson \l0x0129: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Double\>) =  java.lang.Double.class \l0x012b: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x012f: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.lang.Double\>)\l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.double__adapter com.google.gson.TypeAdapter \l}"];
Node_66 [shape=record,label="{66\:\ 0x0131|0x0131: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r14 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0135: CHECK_CAST  (r0 I:java.lang.Double) = (java.lang.Double) (r0 I:?[OBJECT, ARRAY]) \l0x0137: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_67 [shape=record,label="{67\:\ 0x013a|0x013a: IGET  (r0 I:com.google.gson.TypeAdapter\<java.lang.Double\>) = \l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.double__adapter com.google.gson.TypeAdapter \l}"];
Node_68 [shape=record,label="{68\:\ 0x013c|0x013c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x0148 \l}"];
Node_69 [shape=record,label="{69\:\ 0x013e|0x013e: IGET  (r0 I:com.google.gson.Gson) = \l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.gson com.google.gson.Gson \l0x0140: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Double\>) =  java.lang.Double.class \l0x0142: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x0146: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.lang.Double\>)\l  (r13 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.double__adapter com.google.gson.TypeAdapter \l}"];
Node_70 [shape=record,label="{70\:\ 0x0148|0x0148: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r14 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x014c: CHECK_CAST  (r0 I:java.lang.Double) = (java.lang.Double) (r0 I:?[OBJECT, ARRAY]) \l0x014e: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_71 [shape=record,label="{71\:\ 0x0151|0x0151: INVOKE  (r14 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.endObject():void type: VIRTUAL \l0x0154: NEW_INSTANCE  (r14 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute) =  com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute \l0x0156: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0157: INVOKE  \l  (r3 I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute)\l  (r4 I:java.lang.Double)\l  (r5 I:java.lang.Double)\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.Double)\l  (r8 I:java.lang.String)\l  (r9 I:java.util.List)\l  (r10 I:com.mapbox.api.directions.v5.models.RouteOptions)\l  (r11 I:java.lang.String)\l com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.\<init\>(java.lang.Double, java.lang.Double, java.lang.String, java.lang.Double, java.lang.String, java.util.List, com.mapbox.api.directions.v5.models.RouteOptions, java.lang.String):void type: DIRECT \l}"];
Node_72 [shape=record,label="{72\:\ 0x015a|0x015a: RETURN  (r14 I:com.mapbox.api.directions.v5.models.DirectionsRoute) \l}"];
MethodNode[shape=record,label="{public com.mapbox.api.directions.v5.models.DirectionsRoute com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute.GsonTypeAdapter.read((r13 'this' I:com.mapbox.api.directions.v5.models.AutoValue_DirectionsRoute$GsonTypeAdapter A[IMMUTABLE_TYPE, THIS]), (r14 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_71;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_5;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_16;
Node_11 -> Node_19;
Node_11 -> Node_22;
Node_11 -> Node_25;
Node_11 -> Node_28;
Node_11 -> Node_31;
Node_11 -> Node_34;
Node_11 -> Node_37;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_37;
Node_15 -> Node_37;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_37;
Node_18 -> Node_37;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_37;
Node_21 -> Node_37;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_37;
Node_24 -> Node_37;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_37;
Node_27 -> Node_37;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_37;
Node_30 -> Node_37;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_37;
Node_33 -> Node_37;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_37 -> Node_39;
Node_37 -> Node_43;
Node_37 -> Node_47;
Node_37 -> Node_51;
Node_37 -> Node_55;
Node_37 -> Node_59;
Node_37 -> Node_63;
Node_37 -> Node_67;
Node_38 -> Node_5;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_5;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_5;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_50;
Node_50 -> Node_5;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_5;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_58;
Node_58 -> Node_5;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_62 -> Node_5;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_66;
Node_66 -> Node_5;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_70;
Node_69 -> Node_70;
Node_70 -> Node_5;
Node_71 -> Node_72;
}

