digraph "CFG forcom.mapbox.api.directions.v5.models.$AutoValue_RouteOptions.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = (((((((r4.baseUrl.hashCode() ^ 1000003) * 1000003) ^ r4.user.hashCode()) * 1000003) ^ r4.profile.hashCode()) * 1000003) ^ r4.coordinates.hashCode()) * 1000003\lr3 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x002a|if (r4.alternatives != null) goto L_0x002e\l}"];
Node_2 [shape=record,label="{2\:\ 0x002c|r2 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x002e|int r2 = r4.alternatives.hashCode()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0034|PHI: r2 \l  PHI: (r2v7 int) = (r2v80 int), (r2v81 int) binds: [B:3:0x002e, B:2:0x002c] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_5 [shape=record,label="{5\:\ 0x0039|if (r4.language != null) goto L_0x003d\l}"];
Node_6 [shape=record,label="{6\:\ 0x003b|r2 = 0\l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|int r2 = r4.language.hashCode()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0043|PHI: r2 \l  PHI: (r2v9 int) = (r2v77 int), (r2v78 int) binds: [B:7:0x003d, B:6:0x003b] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_9 [shape=record,label="{9\:\ 0x0048|if (r4.radiuses != null) goto L_0x004c\l}"];
Node_10 [shape=record,label="{10\:\ 0x004a|r2 = 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x004c|int r2 = r4.radiuses.hashCode()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0052|PHI: r2 \l  PHI: (r2v11 int) = (r2v74 int), (r2v75 int) binds: [B:11:0x004c, B:10:0x004a] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_13 [shape=record,label="{13\:\ 0x0057|if (r4.bearings != null) goto L_0x005b\l}"];
Node_14 [shape=record,label="{14\:\ 0x0059|r2 = 0\l}"];
Node_15 [shape=record,label="{15\:\ 0x005b|int r2 = r4.bearings.hashCode()\l}"];
Node_16 [shape=record,label="{16\:\ 0x0061|PHI: r2 \l  PHI: (r2v13 int) = (r2v71 int), (r2v72 int) binds: [B:15:0x005b, B:14:0x0059] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_17 [shape=record,label="{17\:\ 0x0066|if (r4.continueStraight != null) goto L_0x006a\l}"];
Node_18 [shape=record,label="{18\:\ 0x0068|r2 = 0\l}"];
Node_19 [shape=record,label="{19\:\ 0x006a|int r2 = r4.continueStraight.hashCode()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0070|PHI: r2 \l  PHI: (r2v15 int) = (r2v68 int), (r2v69 int) binds: [B:19:0x006a, B:18:0x0068] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_21 [shape=record,label="{21\:\ 0x0075|if (r4.roundaboutExits != null) goto L_0x0079\l}"];
Node_22 [shape=record,label="{22\:\ 0x0077|r2 = 0\l}"];
Node_23 [shape=record,label="{23\:\ 0x0079|int r2 = r4.roundaboutExits.hashCode()\l}"];
Node_24 [shape=record,label="{24\:\ 0x007f|PHI: r2 \l  PHI: (r2v17 int) = (r2v65 int), (r2v66 int) binds: [B:23:0x0079, B:22:0x0077] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (((r0 ^ r2) * 1000003) ^ r4.geometries.hashCode()) * 1000003\l}"];
Node_25 [shape=record,label="{25\:\ 0x008d|if (r4.overview != null) goto L_0x0091\l}"];
Node_26 [shape=record,label="{26\:\ 0x008f|r2 = 0\l}"];
Node_27 [shape=record,label="{27\:\ 0x0091|int r2 = r4.overview.hashCode()\l}"];
Node_28 [shape=record,label="{28\:\ 0x0097|PHI: r2 \l  PHI: (r2v21 int) = (r2v62 int), (r2v63 int) binds: [B:27:0x0091, B:26:0x008f] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_29 [shape=record,label="{29\:\ 0x009c|if (r4.steps != null) goto L_0x00a0\l}"];
Node_30 [shape=record,label="{30\:\ 0x009e|r2 = 0\l}"];
Node_31 [shape=record,label="{31\:\ 0x00a0|int r2 = r4.steps.hashCode()\l}"];
Node_32 [shape=record,label="{32\:\ 0x00a6|PHI: r2 \l  PHI: (r2v23 int) = (r2v59 int), (r2v60 int) binds: [B:31:0x00a0, B:30:0x009e] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_33 [shape=record,label="{33\:\ 0x00ab|if (r4.annotations != null) goto L_0x00af\l}"];
Node_34 [shape=record,label="{34\:\ 0x00ad|r2 = 0\l}"];
Node_35 [shape=record,label="{35\:\ 0x00af|int r2 = r4.annotations.hashCode()\l}"];
Node_36 [shape=record,label="{36\:\ 0x00b5|PHI: r2 \l  PHI: (r2v25 int) = (r2v56 int), (r2v57 int) binds: [B:35:0x00af, B:34:0x00ad] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_37 [shape=record,label="{37\:\ 0x00ba|if (r4.exclude != null) goto L_0x00be\l}"];
Node_38 [shape=record,label="{38\:\ 0x00bc|r2 = 0\l}"];
Node_39 [shape=record,label="{39\:\ 0x00be|int r2 = r4.exclude.hashCode()\l}"];
Node_40 [shape=record,label="{40\:\ 0x00c4|PHI: r2 \l  PHI: (r2v27 int) = (r2v53 int), (r2v54 int) binds: [B:39:0x00be, B:38:0x00bc] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_41 [shape=record,label="{41\:\ 0x00c9|if (r4.voiceInstructions != null) goto L_0x00cd\l}"];
Node_42 [shape=record,label="{42\:\ 0x00cb|r2 = 0\l}"];
Node_43 [shape=record,label="{43\:\ 0x00cd|int r2 = r4.voiceInstructions.hashCode()\l}"];
Node_44 [shape=record,label="{44\:\ 0x00d3|PHI: r2 \l  PHI: (r2v29 int) = (r2v50 int), (r2v51 int) binds: [B:43:0x00cd, B:42:0x00cb] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_45 [shape=record,label="{45\:\ 0x00d8|if (r4.bannerInstructions != null) goto L_0x00dc\l}"];
Node_46 [shape=record,label="{46\:\ 0x00da|r2 = 0\l}"];
Node_47 [shape=record,label="{47\:\ 0x00dc|int r2 = r4.bannerInstructions.hashCode()\l}"];
Node_48 [shape=record,label="{48\:\ 0x00e2|PHI: r2 \l  PHI: (r2v31 int) = (r2v47 int), (r2v48 int) binds: [B:47:0x00dc, B:46:0x00da] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_49 [shape=record,label="{49\:\ 0x00e7|if (r4.voiceUnits != null) goto L_0x00eb\l}"];
Node_50 [shape=record,label="{50\:\ 0x00e9|r2 = 0\l}"];
Node_51 [shape=record,label="{51\:\ 0x00eb|int r2 = r4.voiceUnits.hashCode()\l}"];
Node_52 [shape=record,label="{52\:\ 0x00f1|PHI: r2 \l  PHI: (r2v33 int) = (r2v44 int), (r2v45 int) binds: [B:51:0x00eb, B:50:0x00e9] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (((((r0 ^ r2) * 1000003) ^ r4.accessToken.hashCode()) * 1000003) ^ r4.requestUuid.hashCode()) * 1000003\l}"];
Node_53 [shape=record,label="{53\:\ 0x0108|if (r4.approaches != null) goto L_0x010c\l}"];
Node_54 [shape=record,label="{54\:\ 0x010a|r2 = 0\l}"];
Node_55 [shape=record,label="{55\:\ 0x010c|int r2 = r4.approaches.hashCode()\l}"];
Node_56 [shape=record,label="{56\:\ 0x0112|PHI: r2 \l  PHI: (r2v39 int) = (r2v41 int), (r2v42 int) binds: [B:55:0x010c, B:54:0x010a] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = (r0 ^ r2) * 1000003\l}"];
Node_57 [shape=record,label="{57\:\ 0x0117|if (r4.waypointNames != null) goto L_0x011a\l}"];
Node_58 [shape=record,label="{58\:\ 0x011a|int r3 = r4.waypointNames.hashCode()\l}"];
Node_59 [shape=record,label="{59\:\ 0x0120|PHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:57:0x0117, B:58:0x011a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_60 [shape=record,label="{60\:\ 0x0121|RETURN\l|return r0 ^ r3\l}"];
MethodNode[shape=record,label="{public int com.mapbox.api.directions.v5.models.$AutoValue_RouteOptions.hashCode((r4v0 'this' com.mapbox.api.directions.v5.models.$AutoValue_RouteOptions A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_48;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_56;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58;
Node_57 -> Node_59[style=dashed];
Node_58 -> Node_59;
Node_59 -> Node_60;
}

