digraph "CFG forcom.mapbox.api.staticmap.v1.MapboxStaticMap.url()Lokhttp3\/HttpUrl;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.String) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.baseUrl():java.lang.String type: VIRTUAL \l0x0004: INVOKE  (r0 I:okhttp3.HttpUrl) = (r0 I:java.lang.String) okhttp3.HttpUrl.parse(java.lang.String):okhttp3.HttpUrl type: STATIC \l0x0008: INVOKE  (r0 I:okhttp3.HttpUrl$Builder) = (r0 I:okhttp3.HttpUrl) okhttp3.HttpUrl.newBuilder():okhttp3.HttpUrl$Builder type: VIRTUAL \l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"styles\" \l0x000e: INVOKE  (r0 I:okhttp3.HttpUrl$Builder) = (r0 I:okhttp3.HttpUrl$Builder), (r1 I:java.lang.String) okhttp3.HttpUrl.Builder.addPathSegment(java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l0x0012: CONST_STR  (r1 I:java.lang.String) =  \"v1\" \l0x0014: INVOKE  (r0 I:okhttp3.HttpUrl$Builder) = (r0 I:okhttp3.HttpUrl$Builder), (r1 I:java.lang.String) okhttp3.HttpUrl.Builder.addPathSegment(java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l0x0018: INVOKE  (r1 I:java.lang.String) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.user():java.lang.String type: VIRTUAL \l0x001c: INVOKE  (r0 I:okhttp3.HttpUrl$Builder) = (r0 I:okhttp3.HttpUrl$Builder), (r1 I:java.lang.String) okhttp3.HttpUrl.Builder.addPathSegment(java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l0x0020: INVOKE  (r1 I:java.lang.String) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.styleId():java.lang.String type: VIRTUAL \l0x0024: INVOKE  (r0 I:okhttp3.HttpUrl$Builder) = (r0 I:okhttp3.HttpUrl$Builder), (r1 I:java.lang.String) okhttp3.HttpUrl.Builder.addPathSegment(java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l0x0028: CONST_STR  (r1 I:java.lang.String) =  \"static\" \l0x002a: INVOKE  (r0 I:okhttp3.HttpUrl$Builder) = (r0 I:okhttp3.HttpUrl$Builder), (r1 I:java.lang.String) okhttp3.HttpUrl.Builder.addPathSegment(java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l0x002e: CONST_STR  (r1 I:java.lang.String) =  \"access_token\" \l0x0030: INVOKE  (r2 I:java.lang.String) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.accessToken():java.lang.String type: VIRTUAL \l0x0034: INVOKE  (r0 I:okhttp3.HttpUrl$Builder) = \l  (r0 I:okhttp3.HttpUrl$Builder)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l okhttp3.HttpUrl.Builder.addQueryParameter(java.lang.String, java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l0x0038: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x003a: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x003d: INVOKE  (r2 I:java.util.List) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.staticMarkerAnnotations():java.util.List type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0041|0x0041: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x006f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0043|0x0043: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x0045: INVOKE  (r3 I:java.util.List) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.staticMarkerAnnotations():java.util.List type: VIRTUAL \l0x0049: INVOKE  (r3 I:int) = (r3 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x004d: INVOKE  (r2 I:java.util.ArrayList), (r3 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x0050: INVOKE  (r3 I:java.util.List) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.staticMarkerAnnotations():java.util.List type: VIRTUAL \l0x0054: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0058|0x0058: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x005c|0x005c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x006c \l}"];
Node_5 [shape=record,label="{5\:\ 0x005e|0x005e: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0062: CHECK_CAST  (r4 I:com.mapbox.api.staticmap.v1.models.StaticMarkerAnnotation) = (com.mapbox.api.staticmap.v1.models.StaticMarkerAnnotation) (r4 I:?[OBJECT, ARRAY]) \l0x0064: INVOKE  (r4 I:java.lang.String) = \l  (r4 I:com.mapbox.api.staticmap.v1.models.StaticMarkerAnnotation)\l com.mapbox.api.staticmap.v1.models.StaticMarkerAnnotation.url():java.lang.String type: VIRTUAL \l0x0068: INVOKE  (r2 I:java.util.List), (r4 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x006c|0x006c: INVOKE  (r1 I:java.util.List), (r2 I:java.util.Collection) java.util.List.addAll(java.util.Collection):boolean type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x006f|0x006f: INVOKE  (r2 I:java.util.List) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.staticPolylineAnnotations():java.util.List type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0073|0x0073: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x00a9 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0075|0x0075: INVOKE  (r2 I:java.util.List) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.staticPolylineAnnotations():java.util.List type: VIRTUAL \l0x0079: INVOKE  (r2 I:int) = (r2 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x007d: NEW_ARRAY  (r2 I:java.lang.String[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x007f: INVOKE  (r3 I:java.util.List) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.staticPolylineAnnotations():java.util.List type: VIRTUAL \l0x0083: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0087|0x0087: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x008b|0x008b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x00a2 \l}"];
Node_12 [shape=record,label="{12\:\ 0x008d|0x008d: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0091: CHECK_CAST  (r4 I:com.mapbox.api.staticmap.v1.models.StaticPolylineAnnotation) = (com.mapbox.api.staticmap.v1.models.StaticPolylineAnnotation) (r4 I:?[OBJECT, ARRAY]) \l0x0093: INVOKE  (r5 I:java.util.List) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.staticPolylineAnnotations():java.util.List type: VIRTUAL \l0x0097: INVOKE  (r5 I:int) = (r5 I:java.util.List), (r4 I:java.lang.Object) java.util.List.indexOf(java.lang.Object):int type: INTERFACE \l0x009b: INVOKE  (r4 I:java.lang.String) = \l  (r4 I:com.mapbox.api.staticmap.v1.models.StaticPolylineAnnotation)\l com.mapbox.api.staticmap.v1.models.StaticPolylineAnnotation.url():java.lang.String type: VIRTUAL \l0x009f: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x00a2|0x00a2: INVOKE  (r2 I:java.util.List) = (r2 I:java.lang.Object[]) java.util.Arrays.asList(java.lang.Object[]):java.util.List type: STATIC \l0x00a6: INVOKE  (r1 I:java.util.List), (r2 I:java.util.Collection) java.util.List.addAll(java.util.Collection):boolean type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x00a9|0x00a9: INVOKE  (r2 I:com.mapbox.geojson.GeoJson) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.geoJson():com.mapbox.geojson.GeoJson type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x00ad|0x00ad: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x00c8 \l}"];
Node_16 [shape=record,label="{16\:\ 0x00af|0x00af: SGET  (r2 I:java.util.Locale) =  java.util.Locale.US java.util.Locale \l0x00b1: CONST_STR  (r3 I:java.lang.String) =  \"geojson(%s)\" \l0x00b3: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00b4: NEW_ARRAY  (r4 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x00b6: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b7: INVOKE  (r6 I:com.mapbox.geojson.GeoJson) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.geoJson():com.mapbox.geojson.GeoJson type: VIRTUAL \l0x00bb: INVOKE  (r6 I:java.lang.String) = (r6 I:com.mapbox.geojson.GeoJson) com.mapbox.geojson.GeoJson.toJson():java.lang.String type: INTERFACE \l0x00bf: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x00c1: INVOKE  (r2 I:java.lang.String) = \l  (r2 I:java.util.Locale)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.Object[])\l java.lang.String.format(java.util.Locale, java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x00c5: INVOKE  (r1 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_17 [shape=record,label="{17\:\ 0x00c8|0x00c8: INVOKE  (r2 I:boolean) = (r1 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x00cc|0x00cc: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x00db \l}"];
Node_19 [shape=record,label="{19\:\ 0x00ce|0x00ce: CONST_STR  (r2 I:java.lang.String) =  \",\" \l0x00d0: INVOKE  (r1 I:java.lang.Object[]) = (r1 I:java.util.List) java.util.List.toArray():java.lang.Object[] type: INTERFACE \l0x00d4: INVOKE  (r1 I:java.lang.String) = (r2 I:java.lang.CharSequence), (r1 I:java.lang.Object[]) com.mapbox.core.utils.TextUtils.join(java.lang.CharSequence, java.lang.Object[]):java.lang.String type: STATIC \l0x00d8: INVOKE  (r0 I:okhttp3.HttpUrl$Builder), (r1 I:java.lang.String) okhttp3.HttpUrl.Builder.addPathSegment(java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x00db|0x00db: INVOKE  (r1 I:boolean) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.cameraAuto():boolean type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x00df|0x00df: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x00e4 \l}"];
Node_22 [shape=record,label="{22\:\ 0x00e1|0x00e1: CONST_STR  (r1 I:java.lang.String) =  \"auto\" \l}"];
Node_23 [shape=record,label="{23\:\ 0x00e4|0x00e4: INVOKE  (r1 I:java.lang.String) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.generateLocationPathSegment():java.lang.String type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x00e8|0x00e8: INVOKE  (r0 I:okhttp3.HttpUrl$Builder), (r1 I:java.lang.String) okhttp3.HttpUrl.Builder.addPathSegment(java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l0x00eb: INVOKE  (r1 I:java.lang.String) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.beforeLayer():java.lang.String type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x00ef|0x00ef: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x00fa \l}"];
Node_26 [shape=record,label="{26\:\ 0x00f1|0x00f1: CONST_STR  (r1 I:java.lang.String) =  \"before_layer\" \l0x00f3: INVOKE  (r2 I:java.lang.String) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.beforeLayer():java.lang.String type: VIRTUAL \l0x00f7: INVOKE  \l  (r0 I:okhttp3.HttpUrl$Builder)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l okhttp3.HttpUrl.Builder.addQueryParameter(java.lang.String, java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x00fa|0x00fa: INVOKE  (r1 I:boolean) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.attribution():boolean type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x00fe|0x00fe: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0107 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0100|0x0100: CONST_STR  (r1 I:java.lang.String) =  \"attribution\" \l0x0102: CONST_STR  (r2 I:java.lang.String) =  \"false\" \l0x0104: INVOKE  \l  (r0 I:okhttp3.HttpUrl$Builder)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l okhttp3.HttpUrl.Builder.addQueryParameter(java.lang.String, java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l}"];
Node_30 [shape=record,label="{30\:\ 0x0107|0x0107: INVOKE  (r1 I:boolean) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.logo():boolean type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x010b|0x010b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0114 \l}"];
Node_32 [shape=record,label="{32\:\ 0x010d|0x010d: CONST_STR  (r1 I:java.lang.String) =  \"logo\" \l0x010f: CONST_STR  (r2 I:java.lang.String) =  \"false\" \l0x0111: INVOKE  \l  (r0 I:okhttp3.HttpUrl$Builder)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l okhttp3.HttpUrl.Builder.addQueryParameter(java.lang.String, java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l}"];
Node_33 [shape=record,label="{33\:\ 0x0114|0x0114: INVOKE  (r1 I:java.lang.String) = (r7 I:com.mapbox.api.staticmap.v1.MapboxStaticMap) com.mapbox.api.staticmap.v1.MapboxStaticMap.generateSizePathSegment():java.lang.String type: DIRECT \l0x0118: INVOKE  (r0 I:okhttp3.HttpUrl$Builder), (r1 I:java.lang.String) okhttp3.HttpUrl.Builder.addPathSegment(java.lang.String):okhttp3.HttpUrl$Builder type: VIRTUAL \l0x011b: INVOKE  (r0 I:okhttp3.HttpUrl) = (r0 I:okhttp3.HttpUrl$Builder) okhttp3.HttpUrl.Builder.build():okhttp3.HttpUrl type: VIRTUAL \l}"];
Node_34 [shape=record,label="{34\:\ 0x011f|0x011f: RETURN  (r0 I:okhttp3.HttpUrl) \l}"];
MethodNode[shape=record,label="{public okhttp3.HttpUrl com.mapbox.api.staticmap.v1.MapboxStaticMap.url((r7 'this' I:com.mapbox.api.staticmap.v1.MapboxStaticMap A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_10;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
}

