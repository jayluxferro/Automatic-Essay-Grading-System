digraph "CFG forcom.mapbox.api.staticmap.v1.models.StaticMarkerAnnotation.Builder.build()Lcom\/mapbox\/api\/staticmap\/v1\/models\/StaticMarkerAnnotation;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.mapbox.api.staticmap.v1.models.StaticMarkerAnnotation) = \l  (r2 I:com.mapbox.api.staticmap.v1.models.StaticMarkerAnnotation$Builder)\l com.mapbox.api.staticmap.v1.models.StaticMarkerAnnotation.Builder.autoBuild():com.mapbox.api.staticmap.v1.models.StaticMarkerAnnotation type: VIRTUAL \l0x0004: INVOKE  (r1 I:com.mapbox.geojson.Point) = \l  (r0 I:com.mapbox.api.staticmap.v1.models.StaticMarkerAnnotation)\l com.mapbox.api.staticmap.v1.models.StaticMarkerAnnotation.lnglat():com.mapbox.geojson.Point type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: RETURN  \l  (r0 I:com.mapbox.api.staticmap.v1.models.StaticMarkerAnnotation)\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:com.mapbox.core.exceptions.ServicesException) =  com.mapbox.core.exceptions.ServicesException \l0x000d: CONST_STR  (r1 I:java.lang.String) =  \"A Static map marker requires a defined longitude and latitude coordinate.\" \l0x000f: INVOKE  \l  (r0 I:com.mapbox.core.exceptions.ServicesException)\l  (r1 I:java.lang.String)\l com.mapbox.core.exceptions.ServicesException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.mapbox.api.staticmap.v1.models.StaticMarkerAnnotation com.mapbox.api.staticmap.v1.models.StaticMarkerAnnotation.Builder.build((r2 'this' I:com.mapbox.api.staticmap.v1.models.StaticMarkerAnnotation$Builder A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

