digraph "CFG forcom.mapbox.api.staticmap.v1.models.StaticPolylineAnnotation.url()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"path\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (strokeWidth() == null) goto L_0x001c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|r0.append(\"\-\")\lr0.append(strokeWidth())\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c}"];
Node_4 [shape=record,label="{4\:\ 0x0020|if (strokeColor() == null) goto L_0x002e\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|r0.append(\"+\")\lr0.append(strokeColor())\l}"];
Node_6 [shape=record,label="{6\:\ 0x002e}"];
Node_7 [shape=record,label="{7\:\ 0x0032|if (strokeOpacity() == null) goto L_0x0040\l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|r0.append(\"\-\")\lr0.append(strokeOpacity())\l}"];
Node_9 [shape=record,label="{9\:\ 0x0040}"];
Node_10 [shape=record,label="{10\:\ 0x0044|if (fillColor() == null) goto L_0x0052\l}"];
Node_11 [shape=record,label="{11\:\ 0x0046|r0.append(\"+\")\lr0.append(fillColor())\l}"];
Node_12 [shape=record,label="{12\:\ 0x0052}"];
Node_13 [shape=record,label="{13\:\ 0x0056|if (fillOpacity() == null) goto L_0x0064\l}"];
Node_14 [shape=record,label="{14\:\ 0x0058|r0.append(\"\-\")\lr0.append(fillOpacity())\l}"];
Node_15 [shape=record,label="{15\:\ 0x0064|r0.append(\"(\")\lr0.append(polyline())\lr0.append(\")\")\l}"];
Node_16 [shape=record,label="{16\:\ 0x0079|RETURN\l|return r0.toString()\l}"];
MethodNode[shape=record,label="{public java.lang.String com.mapbox.api.staticmap.v1.models.StaticPolylineAnnotation.url((r2v0 'this' com.mapbox.api.staticmap.v1.models.StaticPolylineAnnotation A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.support.annotation.RestrictTo, \{value=[android.support.annotation.RestrictTo.Scope.LIBRARY android.support.annotation.RestrictTo$Scope]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

