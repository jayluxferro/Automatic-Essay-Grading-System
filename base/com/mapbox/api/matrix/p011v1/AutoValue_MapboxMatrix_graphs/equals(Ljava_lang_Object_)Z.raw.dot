digraph "CFG forcom.mapbox.api.matrix.v1.AutoValue_MapboxMatrix.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INSTANCE_OF  (r1 I:boolean) = (r5 I:?[OBJECT, ARRAY]) com.mapbox.api.matrix.v1.MapboxMatrix \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x008f \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: CHECK_CAST  (r5 I:com.mapbox.api.matrix.v1.MapboxMatrix) = (com.mapbox.api.matrix.v1.MapboxMatrix) (r5 I:?[OBJECT, ARRAY]) \l0x000b: IGET  (r1 I:java.lang.String) = (r4 I:com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix) com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix.clientAppName java.lang.String \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0016 \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: INVOKE  (r1 I:java.lang.String) = (r5 I:com.mapbox.api.matrix.v1.MapboxMatrix) com.mapbox.api.matrix.v1.MapboxMatrix.clientAppName():java.lang.String type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x008d \l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|0x0016: IGET  (r1 I:java.lang.String) = (r4 I:com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix) com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix.clientAppName java.lang.String \l0x0018: INVOKE  (r3 I:java.lang.String) = (r5 I:com.mapbox.api.matrix.v1.MapboxMatrix) com.mapbox.api.matrix.v1.MapboxMatrix.clientAppName():java.lang.String type: VIRTUAL \l0x001c: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x008d \l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: IGET  (r1 I:java.lang.String) = (r4 I:com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix) com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix.user java.lang.String \l0x0024: INVOKE  (r3 I:java.lang.String) = (r5 I:com.mapbox.api.matrix.v1.MapboxMatrix) com.mapbox.api.matrix.v1.MapboxMatrix.user():java.lang.String type: VIRTUAL \l0x0028: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|0x002c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x008d \l}"];
Node_14 [shape=record,label="{14\:\ 0x002e|0x002e: IGET  (r1 I:java.lang.String) = (r4 I:com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix) com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix.coordinates java.lang.String \l0x0030: INVOKE  (r3 I:java.lang.String) = (r5 I:com.mapbox.api.matrix.v1.MapboxMatrix) com.mapbox.api.matrix.v1.MapboxMatrix.coordinates():java.lang.String type: VIRTUAL \l0x0034: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|0x0038: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x008d \l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|0x003a: IGET  (r1 I:java.lang.String) = (r4 I:com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix) com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix.accessToken java.lang.String \l0x003c: INVOKE  (r3 I:java.lang.String) = (r5 I:com.mapbox.api.matrix.v1.MapboxMatrix) com.mapbox.api.matrix.v1.MapboxMatrix.accessToken():java.lang.String type: VIRTUAL \l0x0040: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0044|0x0044: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x008d \l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|0x0046: IGET  (r1 I:java.lang.String) = (r4 I:com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix) com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix.profile java.lang.String \l0x0048: INVOKE  (r3 I:java.lang.String) = (r5 I:com.mapbox.api.matrix.v1.MapboxMatrix) com.mapbox.api.matrix.v1.MapboxMatrix.profile():java.lang.String type: VIRTUAL \l0x004c: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0050|0x0050: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x008d \l}"];
Node_20 [shape=record,label="{20\:\ 0x0052|0x0052: IGET  (r1 I:java.lang.String) = (r4 I:com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix) com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix.sources java.lang.String \l}"];
Node_21 [shape=record,label="{21\:\ 0x0054|0x0054: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x005d \l}"];
Node_22 [shape=record,label="{22\:\ 0x0056|0x0056: INVOKE  (r1 I:java.lang.String) = (r5 I:com.mapbox.api.matrix.v1.MapboxMatrix) com.mapbox.api.matrix.v1.MapboxMatrix.sources():java.lang.String type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x005a|0x005a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x008d \l}"];
Node_25 [shape=record,label="{25\:\ 0x005d|0x005d: IGET  (r1 I:java.lang.String) = (r4 I:com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix) com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix.sources java.lang.String \l0x005f: INVOKE  (r3 I:java.lang.String) = (r5 I:com.mapbox.api.matrix.v1.MapboxMatrix) com.mapbox.api.matrix.v1.MapboxMatrix.sources():java.lang.String type: VIRTUAL \l0x0063: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0067|0x0067: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x008d \l}"];
Node_27 [shape=record,label="{27\:\ 0x0069|0x0069: IGET  (r1 I:java.lang.String) = (r4 I:com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix) com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix.destinations java.lang.String \l}"];
Node_28 [shape=record,label="{28\:\ 0x006b|0x006b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0074 \l}"];
Node_29 [shape=record,label="{29\:\ 0x006d|0x006d: INVOKE  (r1 I:java.lang.String) = (r5 I:com.mapbox.api.matrix.v1.MapboxMatrix) com.mapbox.api.matrix.v1.MapboxMatrix.destinations():java.lang.String type: VIRTUAL \l}"];
Node_30 [shape=record,label="{30\:\ 0x0071|0x0071: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x008d \l}"];
Node_32 [shape=record,label="{32\:\ 0x0074|0x0074: IGET  (r1 I:java.lang.String) = (r4 I:com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix) com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix.destinations java.lang.String \l0x0076: INVOKE  (r3 I:java.lang.String) = (r5 I:com.mapbox.api.matrix.v1.MapboxMatrix) com.mapbox.api.matrix.v1.MapboxMatrix.destinations():java.lang.String type: VIRTUAL \l0x007a: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_33 [shape=record,label="{33\:\ 0x007e|0x007e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x008d \l}"];
Node_34 [shape=record,label="{34\:\ 0x0080|0x0080: IGET  (r1 I:java.lang.String) = (r4 I:com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix) com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix.baseUrl java.lang.String \l0x0082: INVOKE  (r5 I:java.lang.String) = (r5 I:com.mapbox.api.matrix.v1.MapboxMatrix) com.mapbox.api.matrix.v1.MapboxMatrix.baseUrl():java.lang.String type: VIRTUAL \l0x0086: INVOKE  (r5 I:boolean) = (r1 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_35 [shape=record,label="{35\:\ 0x008a|0x008a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x008d \l}"];
Node_37 [shape=record,label="{37\:\ 0x008d|0x008d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_38 [shape=record,label="{38\:\ 0x008e|0x008e: RETURN  (r0 I:boolean) \l}"];
Node_39 [shape=record,label="{39\:\ 0x008f|0x008f: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix.equals((r4 'this' I:com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_39;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_37;
Node_8 -> Node_12[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_37;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_37;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_37;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_37;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_37;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_37;
Node_23 -> Node_27[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_37;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_32;
Node_29 -> Node_30;
Node_30 -> Node_37;
Node_30 -> Node_34[style=dashed];
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_37;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_38[style=dashed];
Node_37 -> Node_38;
}

