digraph "CFG forcom.mapbox.api.matrix.v1.AutoValue_MapboxMatrix.Builder.autoBuild()Lcom\/mapbox\/api\/matrix\/v1\/MapboxMatrix;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r0 = \"\"\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r12.user != null) goto L_0x0017\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(r0)\lr1.append(\" user\")\ljava.lang.String r0 = r1.toString()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|PHI: r0 \l  PHI: (r0v1 java.lang.String) = (r0v0 java.lang.String), (r0v17 java.lang.String) binds: [B:1:0x0004, B:2:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|if (r12.coordinates != null) goto L_0x002c\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(r0)\lr1.append(\" coordinates\")\ljava.lang.String r0 = r1.toString()\l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|PHI: r0 \l  PHI: (r0v2 java.lang.String) = (r0v1 java.lang.String), (r0v15 java.lang.String) binds: [B:4:0x0019, B:5:0x001b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|if (r12.accessToken != null) goto L_0x0041\l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(r0)\lr1.append(\" accessToken\")\ljava.lang.String r0 = r1.toString()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|PHI: r0 \l  PHI: (r0v3 java.lang.String) = (r0v2 java.lang.String), (r0v13 java.lang.String) binds: [B:7:0x002e, B:8:0x0030] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0043|if (r12.profile != null) goto L_0x0056\l}"];
Node_11 [shape=record,label="{11\:\ 0x0045|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(r0)\lr1.append(\" profile\")\ljava.lang.String r0 = r1.toString()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0056|PHI: r0 \l  PHI: (r0v4 java.lang.String) = (r0v3 java.lang.String), (r0v11 java.lang.String) binds: [B:10:0x0043, B:11:0x0045] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0058|if (r12.baseUrl != null) goto L_0x006b\l}"];
Node_14 [shape=record,label="{14\:\ 0x005a|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(r0)\lr1.append(\" baseUrl\")\ljava.lang.String r0 = r1.toString()\l}"];
Node_15 [shape=record,label="{15\:\ 0x006b|PHI: r0 \l  PHI: (r0v5 java.lang.String) = (r0v4 java.lang.String), (r0v9 java.lang.String) binds: [B:13:0x0058, B:14:0x005a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x006f|if (r0.isEmpty() == false) goto L_0x0089\l}"];
Node_17 [shape=record,label="{17\:\ 0x0071}"];
Node_18 [shape=record,label="{18\:\ 0x0088|RETURN\l|return new com.mapbox.api.matrix.p011v1.AutoValue_MapboxMatrix(r12.clientAppName, r12.user, r12.coordinates, r12.accessToken, r12.profile, r12.sources, r12.destinations, r12.baseUrl, (com.mapbox.api.matrix.p011v1.AutoValue_MapboxMatrix.C10691) null)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0089|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Missing required properties:\")\lr2.append(r0)\l}"];
Node_20 [shape=record,label="{20\:\ 0x009f|throw new java.lang.IllegalStateException(r2.toString())\l}"];
MethodNode[shape=record,label="{com.mapbox.api.matrix.v1.MapboxMatrix com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix.Builder.autoBuild((r12v0 'this' com.mapbox.api.matrix.v1.AutoValue_MapboxMatrix$Builder A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_19 -> Node_20;
}

