digraph "CFG forcom.mapbox.api.matching.v5.MapboxMapMatching.errorDidOccur(Lretrofit2\/Callback;Lretrofit2\/Response;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:retrofit2.Retrofit) = (r3 I:com.mapbox.api.matching.v5.MapboxMapMatching) com.mapbox.api.matching.v5.MapboxMapMatching.getRetrofit():retrofit2.Retrofit type: VIRTUAL \l0x0004: CONST_CLASS  (r1 I:java.lang.Class\<com.mapbox.api.matching.v5.models.MapMatchingError\>) =  com.mapbox.api.matching.v5.models.MapMatchingError.class \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: NEW_ARRAY  (r2 I:java.lang.annotation.Annotation[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.annotation.Annotation[] \l0x0009: INVOKE  (r0 I:retrofit2.Converter) = \l  (r0 I:retrofit2.Retrofit)\l  (r1 I:java.lang.reflect.Type)\l  (r2 I:java.lang.annotation.Annotation[])\l retrofit2.Retrofit.responseBodyConverter(java.lang.reflect.Type, java.lang.annotation.Annotation[]):retrofit2.Converter type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0019 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: SGET  (r4 I:java.util.logging.Logger) =  com.sun.xml.internal.ws.spi.db.BindingContextFactory.LOGGER java.util.logging.Logger \l0x0011: SGET  (r5 I:java.util.logging.Level) =  java.util.logging.Level.WARNING java.util.logging.Level \l0x0013: CONST_STR  (r0 I:java.lang.String) =  \"Failed to complete your request and callback is null\" \l0x0015: INVOKE  \l  (r4 I:java.util.logging.Logger)\l  (r5 I:java.util.logging.Level)\l  (r0 I:java.lang.String)\l java.util.logging.Logger.log(java.util.logging.Level, java.lang.String):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|SYNTHETIC\lSplitter:B:3:0x0019\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0019\l|0x0019: INVOKE  (r1 I:retrofit2.Call) = (r3 I:com.mapbox.api.matching.v5.MapboxMapMatching) com.mapbox.api.matching.v5.MapboxMapMatching.getCall():retrofit2.Call type: VIRTUAL A[Catch:\{ IOException \-\> 0x0034 \}, TRY_ENTER]\l0x001d: NEW_INSTANCE  (r2 I:java.lang.Throwable) =  java.lang.Throwable A[Catch:\{ IOException \-\> 0x0034 \}]\l0x001f: INVOKE  (r5 I:okhttp3.ResponseBody) = (r5 I:retrofit2.Response) retrofit2.Response.errorBody():okhttp3.ResponseBody type: VIRTUAL A[Catch:\{ IOException \-\> 0x0034 \}]\l0x0023: INVOKE  (r5 I:java.lang.Object) = (r0 I:retrofit2.Converter), (r5 I:java.lang.Object) retrofit2.Converter.convert(java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ IOException \-\> 0x0034 \}]\l0x0027: CHECK_CAST  (r5 I:com.mapbox.api.matching.v5.models.MapMatchingError) = (com.mapbox.api.matching.v5.models.MapMatchingError) (r5 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x0034 \}]\l0x0029: INVOKE  (r5 I:java.lang.String) = (r5 I:com.mapbox.api.matching.v5.models.MapMatchingError) com.mapbox.api.matching.v5.models.MapMatchingError.message():java.lang.String type: VIRTUAL A[Catch:\{ IOException \-\> 0x0034 \}]\l0x002d: INVOKE  (r2 I:java.lang.Throwable), (r5 I:java.lang.String) java.lang.Throwable.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ IOException \-\> 0x0034 \}]\l0x0030: INVOKE  \l  (r4 I:retrofit2.Callback)\l  (r1 I:retrofit2.Call)\l  (r2 I:java.lang.Throwable)\l retrofit2.Callback.onFailure(retrofit2.Call, java.lang.Throwable):void type: INTERFACE A[Catch:\{ IOException \-\> 0x0034 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0034|ExcHandler: IOException null\lSplitter:B:3:0x0019\l|0x0034: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|0x0035: SGET  (r5 I:java.util.logging.Logger) =  com.sun.xml.internal.ws.spi.db.BindingContextFactory.LOGGER java.util.logging.Logger \l0x0037: SGET  (r0 I:java.util.logging.Level) =  java.util.logging.Level.WARNING java.util.logging.Level \l0x0039: CONST_STR  (r1 I:java.lang.String) =  \"Failed to complete your request. \" \l0x003b: INVOKE  \l  (r5 I:java.util.logging.Logger)\l  (r0 I:java.util.logging.Level)\l  (r1 I:java.lang.String)\l  (r4 I:java.lang.Throwable)\l java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|0x003e: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.mapbox.api.matching.v5.MapboxMapMatching.errorDidOccur((r3 'this' I:com.mapbox.api.matching.v5.MapboxMapMatching A[IMMUTABLE_TYPE, THIS]), (r4 I:retrofit2.Callback\<com.mapbox.api.matching.v5.models.MapMatchingResponse\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:retrofit2.Response\<com.mapbox.api.matching.v5.models.MapMatchingResponse\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lretrofit2\/Callback\<, Lcom\/mapbox\/api\/matching\/v5\/models\/MapMatchingResponse;, \>;, Lretrofit2\/Response\<, Lcom\/mapbox\/api\/matching\/v5\/models\/MapMatchingResponse;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_6;
Node_4 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

