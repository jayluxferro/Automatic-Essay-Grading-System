digraph "CFG forcom.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.read(Lcom\/google\/gson\/stream\/JsonReader;)Lcom\/mapbox\/api\/matching\/v5\/models\/MapMatchingTracepoint;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.google.gson.stream.JsonToken) = (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0004: SGET  (r1 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: INVOKE  (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN  \l  (r2 I:com.mapbox.api.matching.v5.models.MapMatchingTracepoint)\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.beginObject():void type: VIRTUAL \l0x0010: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0011: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0012: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x0013: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0014: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: INVOKE  (r0 I:boolean) = (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.hasNext():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x00de \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: INVOKE  (r0 I:java.lang.String) = (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextName():java.lang.String type: VIRTUAL \l0x001f: INVOKE  (r1 I:com.google.gson.stream.JsonToken) = (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0023: SGET  (r2 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002b \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: INVOKE  (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x002c: INVOKE  (r2 I:int) = (r0 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[\-2146142359, \-1874027018, 3373707, 601411348, 1901043637] t:[0x005c, 0x0052, 0x0048, 0x003e, 0x0034] \l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|0x0034: CONST_STR  (r2 I:java.lang.String) =  \"location\" \l0x0036: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|0x003a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0065 \l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|0x003c: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|0x003e: CONST_STR  (r2 I:java.lang.String) =  \"waypoint_index\" \l0x0040: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0044|0x0044: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0065 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|0x0046: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0048|0x0048: CONST_STR  (r2 I:java.lang.String) =  \"name\" \l0x004a: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x004e|0x004e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0065 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0050|0x0050: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0052|0x0052: CONST_STR  (r2 I:java.lang.String) =  \"alternatives_count\" \l0x0054: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x0058|0x0058: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0065 \l}"];
Node_24 [shape=record,label="{24\:\ 0x005a|0x005a: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x005c|0x005c: CONST_STR  (r2 I:java.lang.String) =  \"matchings_index\" \l0x005e: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0062|0x0062: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0065 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0064|0x0064: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_28 [shape=record,label="{28\:\ 0x0065|0x0065: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3, 4] t:[0x00c7, 0x00b0, 0x0099, 0x0082, 0x006c] \l}"];
Node_29 [shape=record,label="{29\:\ 0x0068|0x0068: INVOKE  (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.skipValue():void type: VIRTUAL \l}"];
Node_30 [shape=record,label="{30\:\ 0x006c|0x006c: IGET  (r0 I:com.google.gson.TypeAdapter\<double[]\>) = \l  (r9 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.array__double_adapter com.google.gson.TypeAdapter \l}"];
Node_31 [shape=record,label="{31\:\ 0x006e|0x006e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x007a \l}"];
Node_32 [shape=record,label="{32\:\ 0x0070|0x0070: IGET  (r0 I:com.google.gson.Gson) = \l  (r9 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.gson com.google.gson.Gson \l0x0072: CONST_CLASS  (r1 I:java.lang.Class\<double[]\>) =  double[].class \l0x0074: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x0078: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<double[]\>)\l  (r9 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.array__double_adapter com.google.gson.TypeAdapter \l}"];
Node_33 [shape=record,label="{33\:\ 0x007a|0x007a: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r10 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x007e: CHECK_CAST  (r0 I:double[]) = (double[]) (r0 I:?[OBJECT, ARRAY]) \l0x0080: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0082|0x0082: IGET  (r0 I:com.google.gson.TypeAdapter\<java.lang.String\>) = \l  (r9 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_35 [shape=record,label="{35\:\ 0x0084|0x0084: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0090 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0086|0x0086: IGET  (r0 I:com.google.gson.Gson) = \l  (r9 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.gson com.google.gson.Gson \l0x0088: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x008a: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x008e: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.lang.String\>)\l  (r9 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_37 [shape=record,label="{37\:\ 0x0090|0x0090: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r10 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0094: CHECK_CAST  (r0 I:java.lang.String) = (java.lang.String) (r0 I:?[OBJECT, ARRAY]) \l0x0096: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0099|0x0099: IGET  (r0 I:com.google.gson.TypeAdapter\<java.lang.Integer\>) = \l  (r9 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.integer_adapter com.google.gson.TypeAdapter \l}"];
Node_39 [shape=record,label="{39\:\ 0x009b|0x009b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x00a7 \l}"];
Node_40 [shape=record,label="{40\:\ 0x009d|0x009d: IGET  (r0 I:com.google.gson.Gson) = \l  (r9 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.gson com.google.gson.Gson \l0x009f: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Integer\>) =  java.lang.Integer.class \l0x00a1: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x00a5: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.lang.Integer\>)\l  (r9 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.integer_adapter com.google.gson.TypeAdapter \l}"];
Node_41 [shape=record,label="{41\:\ 0x00a7|0x00a7: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r10 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00ab: CHECK_CAST  (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:?[OBJECT, ARRAY]) \l0x00ad: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x00b0|0x00b0: IGET  (r0 I:com.google.gson.TypeAdapter\<java.lang.Integer\>) = \l  (r9 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.integer_adapter com.google.gson.TypeAdapter \l}"];
Node_43 [shape=record,label="{43\:\ 0x00b2|0x00b2: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x00be \l}"];
Node_44 [shape=record,label="{44\:\ 0x00b4|0x00b4: IGET  (r0 I:com.google.gson.Gson) = \l  (r9 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.gson com.google.gson.Gson \l0x00b6: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Integer\>) =  java.lang.Integer.class \l0x00b8: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x00bc: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.lang.Integer\>)\l  (r9 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.integer_adapter com.google.gson.TypeAdapter \l}"];
Node_45 [shape=record,label="{45\:\ 0x00be|0x00be: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r10 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00c2: CHECK_CAST  (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:?[OBJECT, ARRAY]) \l0x00c4: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x00c7|0x00c7: IGET  (r0 I:com.google.gson.TypeAdapter\<java.lang.Integer\>) = \l  (r9 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.integer_adapter com.google.gson.TypeAdapter \l}"];
Node_47 [shape=record,label="{47\:\ 0x00c9|0x00c9: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x00d5 \l}"];
Node_48 [shape=record,label="{48\:\ 0x00cb|0x00cb: IGET  (r0 I:com.google.gson.Gson) = \l  (r9 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.gson com.google.gson.Gson \l0x00cd: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Integer\>) =  java.lang.Integer.class \l0x00cf: INVOKE  (r0 I:com.google.gson.TypeAdapter) = (r0 I:com.google.gson.Gson), (r1 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x00d3: IPUT  \l  (r0 I:com.google.gson.TypeAdapter\<java.lang.Integer\>)\l  (r9 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.integer_adapter com.google.gson.TypeAdapter \l}"];
Node_49 [shape=record,label="{49\:\ 0x00d5|0x00d5: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r10 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00d9: CHECK_CAST  (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:?[OBJECT, ARRAY]) \l0x00db: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x00de|0x00de: INVOKE  (r10 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.endObject():void type: VIRTUAL \l0x00e1: NEW_INSTANCE  (r10 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint) =  com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint \l0x00e3: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x00e4: INVOKE  \l  (r3 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint)\l  (r4 I:java.lang.Integer)\l  (r5 I:java.lang.Integer)\l  (r6 I:java.lang.Integer)\l  (r7 I:java.lang.String)\l  (r8 I:double[])\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.\<init\>(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, double[]):void type: DIRECT \l}"];
Node_51 [shape=record,label="{51\:\ 0x00e7|0x00e7: RETURN  \l  (r10 I:com.mapbox.api.matching.v5.models.MapMatchingTracepoint)\l \l}"];
MethodNode[shape=record,label="{public com.mapbox.api.matching.v5.models.MapMatchingTracepoint com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint.GsonTypeAdapter.read((r9 'this' I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingTracepoint$GsonTypeAdapter A[IMMUTABLE_TYPE, THIS]), (r10 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_50;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_5;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_16;
Node_11 -> Node_19;
Node_11 -> Node_22;
Node_11 -> Node_25;
Node_11 -> Node_28;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_28;
Node_15 -> Node_28;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_28;
Node_18 -> Node_28;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_28;
Node_21 -> Node_28;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_30;
Node_28 -> Node_34;
Node_28 -> Node_38;
Node_28 -> Node_42;
Node_28 -> Node_46;
Node_29 -> Node_5;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_5;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_5;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_5;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_45;
Node_45 -> Node_5;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_49 -> Node_5;
Node_50 -> Node_51;
}

