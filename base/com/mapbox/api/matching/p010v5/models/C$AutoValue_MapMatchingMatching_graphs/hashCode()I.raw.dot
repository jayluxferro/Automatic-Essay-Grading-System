digraph "CFG forcom.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:double) = \l  (r9 I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching)\l com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.distance double \l0x0002: INVOKE  (r0 I:long) = (r0 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x0006: CONST  (r2 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0008: ARITH  (r0 I:long) = (r0 I:long) \>\>\> (r2 I:long) \l0x0009: IGET  (r3 I:double) = \l  (r9 I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching)\l com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.distance double \l0x000b: INVOKE  (r3 I:long) = (r3 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x000f: ARITH  (r0 I:long) = (r0 I:long) ^ (r3 I:long) \l0x0010: CAST  (r0 I:int) = (int) (r0 I:long) \l0x0011: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1000003(0xf4243, float:1.401303E\-39) ?[int, float, short, byte, char])\l \l0x0014: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r1 I:?[int, boolean, short, byte, char]) \l0x0015: ARITH  (r0 I:int) = (r0 I:int) * (r1 I:int) \l0x0017: IGET  (r3 I:double) = \l  (r9 I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching)\l com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.duration double \l0x0019: INVOKE  (r3 I:long) = (r3 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x001d: ARITH  (r3 I:long) = (r3 I:long) \>\>\> (r2 I:long) \l0x001e: IGET  (r5 I:double) = \l  (r9 I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching)\l com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.duration double \l0x0020: INVOKE  (r5 I:long) = (r5 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x0024: ARITH  (r3 I:long) = (r3 I:long) ^ (r5 I:long) \l0x0025: CAST  (r3 I:int) = (int) (r3 I:long) \l0x0026: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r3 I:?[int, boolean, short, byte, char]) \l0x0027: ARITH  (r0 I:int) = (r0 I:int) * (r1 I:int) \l0x0029: IGET  (r3 I:java.lang.String) = \l  (r9 I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching)\l com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.geometry java.lang.String \l0x002b: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x002c|0x002c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0030 \l}"];
Node_2 [shape=record,label="{2\:\ 0x002e|0x002e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0030|0x0030: IGET  (r3 I:java.lang.String) = \l  (r9 I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching)\l com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.geometry java.lang.String \l0x0032: INVOKE  (r3 I:int) = (r3 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0036|0x0036: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r3 I:?[int, boolean, short, byte, char]) \l0x0037: ARITH  (r0 I:int) = (r0 I:int) * (r1 I:int) \l0x0039: IGET  (r5 I:double) = \l  (r9 I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching)\l com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.weight double \l0x003b: INVOKE  (r5 I:long) = (r5 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x003f: ARITH  (r5 I:long) = (r5 I:long) \>\>\> (r2 I:long) \l0x0040: IGET  (r7 I:double) = \l  (r9 I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching)\l com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.weight double \l0x0042: INVOKE  (r7 I:long) = (r7 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x0046: ARITH  (r5 I:long) = (r5 I:long) ^ (r7 I:long) \l0x0047: CAST  (r3 I:int) = (int) (r5 I:long) \l0x0048: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r3 I:?[int, boolean, short, byte, char]) \l0x0049: ARITH  (r0 I:int) = (r0 I:int) * (r1 I:int) \l0x004b: IGET  (r3 I:java.lang.String) = \l  (r9 I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching)\l com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.weightName java.lang.String \l0x004d: INVOKE  (r3 I:int) = (r3 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL \l0x0051: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r3 I:?[int, boolean, short, byte, char]) \l0x0052: ARITH  (r0 I:int) = (r0 I:int) * (r1 I:int) \l0x0054: IGET  (r3 I:java.util.List\<com.mapbox.api.directions.v5.models.RouteLeg\>) = \l  (r9 I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching)\l com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.legs java.util.List \l0x0056: INVOKE  (r3 I:int) = (r3 I:java.util.List) java.util.List.hashCode():int type: INTERFACE \l0x005a: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r3 I:?[int, boolean, short, byte, char]) \l0x005b: ARITH  (r0 I:int) = (r0 I:int) * (r1 I:int) \l0x005d: IGET  (r5 I:double) = \l  (r9 I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching)\l com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.confidence double \l0x005f: INVOKE  (r5 I:long) = (r5 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x0063: ARITH  (r2 I:long) = (r5 I:long) \>\>\> (r2 I:long) \l0x0065: IGET  (r5 I:double) = \l  (r9 I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching)\l com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.confidence double \l0x0067: INVOKE  (r5 I:long) = (r5 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x006b: ARITH  (r2 I:long) = (r2 I:long) ^ (r5 I:long) \l0x006c: CAST  (r2 I:int) = (int) (r2 I:long) \l0x006d: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r2 I:?[int, boolean, short, byte, char]) \l0x006e: ARITH  (r0 I:int) = (r0 I:int) * (r1 I:int) \l0x0070: IGET  (r2 I:com.mapbox.api.directions.v5.models.RouteOptions) = \l  (r9 I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching)\l com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.routeOptions com.mapbox.api.directions.v5.models.RouteOptions \l}"];
Node_5 [shape=record,label="{5\:\ 0x0072|0x0072: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0076 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0074|0x0074: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0076|0x0076: IGET  (r2 I:com.mapbox.api.directions.v5.models.RouteOptions) = \l  (r9 I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching)\l com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.routeOptions com.mapbox.api.directions.v5.models.RouteOptions \l0x0078: INVOKE  (r2 I:int) = (r2 I:java.lang.Object) java.lang.Object.hashCode():int type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x007c|0x007c: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r2 I:?[int, boolean, short, byte, char]) \l0x007d: ARITH  (r0 I:int) = (r0 I:int) * (r1 I:int) \l0x007f: IGET  (r1 I:java.lang.String) = \l  (r9 I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching)\l com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.voiceLanguage java.lang.String \l}"];
Node_9 [shape=record,label="{9\:\ 0x0081|0x0081: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0084 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0084|0x0084: IGET  (r1 I:java.lang.String) = \l  (r9 I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching)\l com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.voiceLanguage java.lang.String \l0x0086: INVOKE  (r4 I:int) = (r1 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x008a|0x008a: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r4 I:?[int, boolean, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x008b|0x008b: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching.hashCode((r9 'this' I:com.mapbox.api.matching.v5.models.$AutoValue_MapMatchingMatching A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
}

