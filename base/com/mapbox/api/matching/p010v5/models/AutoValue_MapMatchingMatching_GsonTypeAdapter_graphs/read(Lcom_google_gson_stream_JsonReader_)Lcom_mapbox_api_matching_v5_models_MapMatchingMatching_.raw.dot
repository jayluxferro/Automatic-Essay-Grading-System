digraph "CFG forcom.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.read(Lcom\/google\/gson\/stream\/JsonReader;)Lcom\/mapbox\/api\/matching\/v5\/models\/MapMatchingMatching;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0004: INVOKE  (r2 I:com.google.gson.stream.JsonToken) = (r20 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0008: SGET  (r3 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l0x000a: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: INVOKE  (r20 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: RETURN  \l  (r4 I:com.mapbox.api.matching.v5.models.MapMatchingMatching)\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: INVOKE  (r20 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.beginObject():void type: VIRTUAL \l0x0014: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0016: MOVE  (r6 I:?[long, double]) = (r2 I:?[long, double]) \l0x0017: MOVE  (r8 I:?[long, double]) = (r6 I:?[long, double]) \l0x0018: MOVE  (r11 I:?[long, double]) = (r8 I:?[long, double]) \l0x0019: MOVE  (r15 I:?[long, double]) = (r11 I:?[long, double]) \l0x001a: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x001b: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x001c: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x001d: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x001f: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: INVOKE  (r2 I:boolean) = (r20 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.hasNext():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:79:0x0190 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: INVOKE  (r2 I:java.lang.String) = (r20 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextName():java.lang.String type: VIRTUAL \l0x002b: INVOKE  (r3 I:com.google.gson.stream.JsonToken) = (r20 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x002f: SGET  (r4 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0037 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|0x0033: INVOKE  (r20 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|0x0037: INVOKE  (r4 I:int) = (r2 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL \l0x003b: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003c: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x003d|0x003d: SWITCH  \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[\-1992012396, \-791592328, \-445777899, \-264720852, 3317797, 288459765, 829251210, 1846020210, 2077998066] t:[0x0092, 0x0088, 0x007e, 0x0073, 0x0069, 0x005f, 0x0055, 0x004b, 0x0041] \l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|0x0041: CONST_STR  (r4 I:java.lang.String) =  \"weight_name\" \l0x0043: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0047|0x0047: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x009c \l}"];
Node_15 [shape=record,label="{15\:\ 0x0049|0x0049: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x004b|0x004b: CONST_STR  (r4 I:java.lang.String) =  \"geometry\" \l0x004d: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0051|0x0051: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x009c \l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|0x0053: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0055|0x0055: CONST_STR  (r4 I:java.lang.String) =  \"confidence\" \l0x0057: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x005b|0x005b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x009c \l}"];
Node_21 [shape=record,label="{21\:\ 0x005d|0x005d: CONST  (r2 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x005f|0x005f: CONST_STR  (r4 I:java.lang.String) =  \"distance\" \l0x0061: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x0065|0x0065: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x009c \l}"];
Node_24 [shape=record,label="{24\:\ 0x0067|0x0067: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x0069|0x0069: CONST_STR  (r4 I:java.lang.String) =  \"legs\" \l0x006b: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x006f|0x006f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x009c \l}"];
Node_27 [shape=record,label="{27\:\ 0x0071|0x0071: CONST  (r2 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0073|0x0073: CONST_STR  (r4 I:java.lang.String) =  \"voiceLocale\" \l0x0075: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x0079|0x0079: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x009c \l}"];
Node_30 [shape=record,label="{30\:\ 0x007b|0x007b: CONST  (r2 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x007e|0x007e: CONST_STR  (r4 I:java.lang.String) =  \"routeOptions\" \l0x0080: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_32 [shape=record,label="{32\:\ 0x0084|0x0084: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x009c \l}"];
Node_33 [shape=record,label="{33\:\ 0x0086|0x0086: CONST  (r2 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0088|0x0088: CONST_STR  (r4 I:java.lang.String) =  \"weight\" \l0x008a: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_35 [shape=record,label="{35\:\ 0x008e|0x008e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x009c \l}"];
Node_36 [shape=record,label="{36\:\ 0x0090|0x0090: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0092|0x0092: CONST_STR  (r4 I:java.lang.String) =  \"duration\" \l0x0094: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_38 [shape=record,label="{38\:\ 0x0098|0x0098: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x009c \l}"];
Node_39 [shape=record,label="{39\:\ 0x009a|0x009a: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x009c|0x009c: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x009d|0x009d: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3, 4, 5, 6, 7, 8] t:[0x0175, 0x015a, 0x0143, 0x0128, 0x0111, 0x00f0, 0x00d5, 0x00bd, 0x00a5] \l}"];
Node_42 [shape=record,label="{42\:\ 0x00a0|0x00a0: INVOKE  (r20 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.skipValue():void type: VIRTUAL \l}"];
Node_43 [shape=record,label="{43\:\ 0x00a5|0x00a5: IGET  (r2 I:com.google.gson.TypeAdapter\<java.lang.String\>) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_44 [shape=record,label="{44\:\ 0x00a7|0x00a7: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x00b3 \l}"];
Node_45 [shape=record,label="{45\:\ 0x00a9|0x00a9: IGET  (r2 I:com.google.gson.Gson) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.gson com.google.gson.Gson \l0x00ab: CONST_CLASS  (r3 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x00ad: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson), (r3 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x00b1: IPUT  \l  (r2 I:com.google.gson.TypeAdapter\<java.lang.String\>)\l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_46 [shape=record,label="{46\:\ 0x00b3|0x00b3: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:com.google.gson.TypeAdapter)\l  (r1 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00b7: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x00b9: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x00bd|0x00bd: IGET  (r2 I:com.google.gson.TypeAdapter\<com.mapbox.api.directions.v5.models.RouteOptions\>) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.routeOptions_adapter com.google.gson.TypeAdapter \l}"];
Node_48 [shape=record,label="{48\:\ 0x00bf|0x00bf: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x00cb \l}"];
Node_49 [shape=record,label="{49\:\ 0x00c1|0x00c1: IGET  (r2 I:com.google.gson.Gson) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.gson com.google.gson.Gson \l0x00c3: CONST_CLASS  (r3 I:java.lang.Class\<com.mapbox.api.directions.v5.models.RouteOptions\>) =  com.mapbox.api.directions.v5.models.RouteOptions.class \l0x00c5: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson), (r3 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x00c9: IPUT  \l  (r2 I:com.google.gson.TypeAdapter\<com.mapbox.api.directions.v5.models.RouteOptions\>)\l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.routeOptions_adapter com.google.gson.TypeAdapter \l}"];
Node_50 [shape=record,label="{50\:\ 0x00cb|0x00cb: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:com.google.gson.TypeAdapter)\l  (r1 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00cf: CHECK_CAST  (r2 I:com.mapbox.api.directions.v5.models.RouteOptions) = (com.mapbox.api.directions.v5.models.RouteOptions) (r2 I:?[OBJECT, ARRAY]) \l0x00d1: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x00d5|0x00d5: IGET  (r2 I:com.google.gson.TypeAdapter\<java.lang.Double\>) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.double__adapter com.google.gson.TypeAdapter \l}"];
Node_52 [shape=record,label="{52\:\ 0x00d7|0x00d7: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00e3 \l}"];
Node_53 [shape=record,label="{53\:\ 0x00d9|0x00d9: IGET  (r2 I:com.google.gson.Gson) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.gson com.google.gson.Gson \l0x00db: CONST_CLASS  (r3 I:java.lang.Class\<java.lang.Double\>) =  java.lang.Double.class \l0x00dd: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson), (r3 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x00e1: IPUT  \l  (r2 I:com.google.gson.TypeAdapter\<java.lang.Double\>)\l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.double__adapter com.google.gson.TypeAdapter \l}"];
Node_54 [shape=record,label="{54\:\ 0x00e3|0x00e3: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:com.google.gson.TypeAdapter)\l  (r1 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x00e7: CHECK_CAST  (r2 I:java.lang.Double) = (java.lang.Double) (r2 I:?[OBJECT, ARRAY]) \l0x00e9: INVOKE  (r2 I:double) = (r2 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x00ed: MOVE  (r15 I:?[long, double]) = (r2 I:?[long, double]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x00f0|0x00f0: IGET  (r2 I:com.google.gson.TypeAdapter\<java.util.List\<com.mapbox.api.directions.v5.models.RouteLeg\>\>) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.list__routeLeg_adapter com.google.gson.TypeAdapter \l}"];
Node_56 [shape=record,label="{56\:\ 0x00f2|0x00f2: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0108 \l}"];
Node_57 [shape=record,label="{57\:\ 0x00f4|0x00f4: IGET  (r2 I:com.google.gson.Gson) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.gson com.google.gson.Gson \l0x00f6: CONST_CLASS  (r4 I:java.lang.Class\<java.util.List\>) =  java.util.List.class \l0x00f8: NEW_ARRAY  (r3 I:java.lang.reflect.Type[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.reflect.Type[] \l0x00fa: CONST_CLASS  (r14 I:java.lang.Class\<com.mapbox.api.directions.v5.models.RouteLeg\>) =  com.mapbox.api.directions.v5.models.RouteLeg.class \l0x00fc: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r14 I:?[OBJECT, ARRAY])\l \l0x00fe: INVOKE  (r3 I:com.google.gson.reflect.TypeToken) = \l  (r4 I:java.lang.reflect.Type)\l  (r3 I:java.lang.reflect.Type[])\l com.google.gson.reflect.TypeToken.getParameterized(java.lang.reflect.Type, java.lang.reflect.Type[]):com.google.gson.reflect.TypeToken type: STATIC \l0x0102: INVOKE  (r2 I:com.google.gson.TypeAdapter) = \l  (r2 I:com.google.gson.Gson)\l  (r3 I:com.google.gson.reflect.TypeToken)\l com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken):com.google.gson.TypeAdapter type: VIRTUAL \l0x0106: IPUT  \l  (r2 I:com.google.gson.TypeAdapter\<java.util.List\<com.mapbox.api.directions.v5.models.RouteLeg\>\>)\l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.list__routeLeg_adapter com.google.gson.TypeAdapter \l}"];
Node_58 [shape=record,label="{58\:\ 0x0108|0x0108: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:com.google.gson.TypeAdapter)\l  (r1 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x010c: CHECK_CAST  (r2 I:java.util.List) = (java.util.List) (r2 I:?[OBJECT, ARRAY]) \l0x010e: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x0111|0x0111: IGET  (r2 I:com.google.gson.TypeAdapter\<java.lang.String\>) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_60 [shape=record,label="{60\:\ 0x0113|0x0113: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x011f \l}"];
Node_61 [shape=record,label="{61\:\ 0x0115|0x0115: IGET  (r2 I:com.google.gson.Gson) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.gson com.google.gson.Gson \l0x0117: CONST_CLASS  (r3 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x0119: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson), (r3 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x011d: IPUT  \l  (r2 I:com.google.gson.TypeAdapter\<java.lang.String\>)\l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_62 [shape=record,label="{62\:\ 0x011f|0x011f: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:com.google.gson.TypeAdapter)\l  (r1 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0123: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x0125: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_63 [shape=record,label="{63\:\ 0x0128|0x0128: IGET  (r2 I:com.google.gson.TypeAdapter\<java.lang.Double\>) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.double__adapter com.google.gson.TypeAdapter \l}"];
Node_64 [shape=record,label="{64\:\ 0x012a|0x012a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x0136 \l}"];
Node_65 [shape=record,label="{65\:\ 0x012c|0x012c: IGET  (r2 I:com.google.gson.Gson) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.gson com.google.gson.Gson \l0x012e: CONST_CLASS  (r3 I:java.lang.Class\<java.lang.Double\>) =  java.lang.Double.class \l0x0130: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson), (r3 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x0134: IPUT  \l  (r2 I:com.google.gson.TypeAdapter\<java.lang.Double\>)\l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.double__adapter com.google.gson.TypeAdapter \l}"];
Node_66 [shape=record,label="{66\:\ 0x0136|0x0136: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:com.google.gson.TypeAdapter)\l  (r1 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x013a: CHECK_CAST  (r2 I:java.lang.Double) = (java.lang.Double) (r2 I:?[OBJECT, ARRAY]) \l0x013c: INVOKE  (r2 I:double) = (r2 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0140: MOVE  (r11 I:?[long, double]) = (r2 I:?[long, double]) \l}"];
Node_67 [shape=record,label="{67\:\ 0x0143|0x0143: IGET  (r2 I:com.google.gson.TypeAdapter\<java.lang.String\>) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_68 [shape=record,label="{68\:\ 0x0145|0x0145: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x0151 \l}"];
Node_69 [shape=record,label="{69\:\ 0x0147|0x0147: IGET  (r2 I:com.google.gson.Gson) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.gson com.google.gson.Gson \l0x0149: CONST_CLASS  (r3 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x014b: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson), (r3 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x014f: IPUT  \l  (r2 I:com.google.gson.TypeAdapter\<java.lang.String\>)\l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.string_adapter com.google.gson.TypeAdapter \l}"];
Node_70 [shape=record,label="{70\:\ 0x0151|0x0151: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:com.google.gson.TypeAdapter)\l  (r1 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0155: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x0157: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_71 [shape=record,label="{71\:\ 0x015a|0x015a: IGET  (r2 I:com.google.gson.TypeAdapter\<java.lang.Double\>) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.double__adapter com.google.gson.TypeAdapter \l}"];
Node_72 [shape=record,label="{72\:\ 0x015c|0x015c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:74:0x0168 \l}"];
Node_73 [shape=record,label="{73\:\ 0x015e|0x015e: IGET  (r2 I:com.google.gson.Gson) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.gson com.google.gson.Gson \l0x0160: CONST_CLASS  (r3 I:java.lang.Class\<java.lang.Double\>) =  java.lang.Double.class \l0x0162: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson), (r3 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x0166: IPUT  \l  (r2 I:com.google.gson.TypeAdapter\<java.lang.Double\>)\l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.double__adapter com.google.gson.TypeAdapter \l}"];
Node_74 [shape=record,label="{74\:\ 0x0168|0x0168: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:com.google.gson.TypeAdapter)\l  (r1 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x016c: CHECK_CAST  (r2 I:java.lang.Double) = (java.lang.Double) (r2 I:?[OBJECT, ARRAY]) \l0x016e: INVOKE  (r2 I:double) = (r2 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0172: MOVE  (r8 I:?[long, double]) = (r2 I:?[long, double]) \l}"];
Node_75 [shape=record,label="{75\:\ 0x0175|0x0175: IGET  (r2 I:com.google.gson.TypeAdapter\<java.lang.Double\>) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.double__adapter com.google.gson.TypeAdapter \l}"];
Node_76 [shape=record,label="{76\:\ 0x0177|0x0177: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:78:0x0183 \l}"];
Node_77 [shape=record,label="{77\:\ 0x0179|0x0179: IGET  (r2 I:com.google.gson.Gson) = \l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.gson com.google.gson.Gson \l0x017b: CONST_CLASS  (r3 I:java.lang.Class\<java.lang.Double\>) =  java.lang.Double.class \l0x017d: INVOKE  (r2 I:com.google.gson.TypeAdapter) = (r2 I:com.google.gson.Gson), (r3 I:java.lang.Class) com.google.gson.Gson.getAdapter(java.lang.Class):com.google.gson.TypeAdapter type: VIRTUAL \l0x0181: IPUT  \l  (r2 I:com.google.gson.TypeAdapter\<java.lang.Double\>)\l  (r0 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.double__adapter com.google.gson.TypeAdapter \l}"];
Node_78 [shape=record,label="{78\:\ 0x0183|0x0183: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:com.google.gson.TypeAdapter)\l  (r1 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0187: CHECK_CAST  (r2 I:java.lang.Double) = (java.lang.Double) (r2 I:?[OBJECT, ARRAY]) \l0x0189: INVOKE  (r2 I:double) = (r2 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x018d: MOVE  (r6 I:?[long, double]) = (r2 I:?[long, double]) \l}"];
Node_79 [shape=record,label="{79\:\ 0x0190|0x0190: INVOKE  (r20 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.endObject():void type: VIRTUAL \l0x0193: NEW_INSTANCE  (r1 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching) =  com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching \l0x0195: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0196: INVOKE  \l  (r5 I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching)\l  (r6 I:double)\l  (r8 I:double)\l  (r10 I:java.lang.String)\l  (r11 I:double)\l  (r13 I:java.lang.String)\l  (r14 I:java.util.List)\l  (r15 I:double)\l  (r17 I:com.mapbox.api.directions.v5.models.RouteOptions)\l  (r18 I:java.lang.String)\l com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.\<init\>(double, double, java.lang.String, double, java.lang.String, java.util.List, double, com.mapbox.api.directions.v5.models.RouteOptions, java.lang.String):void type: DIRECT \l}"];
Node_80 [shape=record,label="{80\:\ 0x0199|0x0199: RETURN  \l  (r1 I:com.mapbox.api.matching.v5.models.MapMatchingMatching)\l \l}"];
MethodNode[shape=record,label="{public com.mapbox.api.matching.v5.models.MapMatchingMatching com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching.GsonTypeAdapter.read((r19 'this' I:com.mapbox.api.matching.v5.models.AutoValue_MapMatchingMatching$GsonTypeAdapter A[IMMUTABLE_TYPE, THIS]), (r20 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_79;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_5;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_16;
Node_11 -> Node_19;
Node_11 -> Node_22;
Node_11 -> Node_25;
Node_11 -> Node_28;
Node_11 -> Node_31;
Node_11 -> Node_34;
Node_11 -> Node_37;
Node_11 -> Node_40;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_40;
Node_15 -> Node_41;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_40;
Node_18 -> Node_41;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_40;
Node_21 -> Node_41;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_40;
Node_24 -> Node_41;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_40;
Node_27 -> Node_41;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_40;
Node_30 -> Node_41;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_40;
Node_33 -> Node_41;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_40;
Node_36 -> Node_41;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_41 -> Node_43;
Node_41 -> Node_47;
Node_41 -> Node_51;
Node_41 -> Node_55;
Node_41 -> Node_59;
Node_41 -> Node_63;
Node_41 -> Node_67;
Node_41 -> Node_71;
Node_41 -> Node_75;
Node_42 -> Node_5;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_5;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_50;
Node_50 -> Node_5;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_5;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_58;
Node_58 -> Node_5;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_62 -> Node_5;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_66;
Node_66 -> Node_5;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_70;
Node_69 -> Node_70;
Node_70 -> Node_5;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_74;
Node_73 -> Node_74;
Node_74 -> Node_5;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_78;
Node_77 -> Node_78;
Node_78 -> Node_5;
Node_79 -> Node_80;
}

