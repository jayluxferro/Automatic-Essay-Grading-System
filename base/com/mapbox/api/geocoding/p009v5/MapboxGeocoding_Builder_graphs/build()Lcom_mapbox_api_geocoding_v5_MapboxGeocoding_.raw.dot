digraph "CFG forcom.mapbox.api.geocoding.v5.MapboxGeocoding.Builder.build()Lcom\/mapbox\/api\/geocoding\/v5\/MapboxGeocoding;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<java.lang.String\>) = (r3 I:com.mapbox.api.geocoding.v5.MapboxGeocoding$Builder) com.mapbox.api.geocoding.v5.MapboxGeocoding.Builder.countries java.util.List \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0017 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST_STR  (r0 I:java.lang.String) =  \",\" \l0x000a: IGET  (r1 I:java.util.List\<java.lang.String\>) = (r3 I:com.mapbox.api.geocoding.v5.MapboxGeocoding$Builder) com.mapbox.api.geocoding.v5.MapboxGeocoding.Builder.countries java.util.List \l0x000c: INVOKE  (r1 I:java.lang.Object[]) = (r1 I:java.util.List) java.util.List.toArray():java.lang.Object[] type: INTERFACE \l0x0010: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.CharSequence), (r1 I:java.lang.Object[]) com.mapbox.core.utils.TextUtils.join(java.lang.CharSequence, java.lang.Object[]):java.lang.String type: STATIC \l0x0014: INVOKE  \l  (r3 I:com.mapbox.api.geocoding.v5.MapboxGeocoding$Builder)\l  (r0 I:java.lang.String)\l com.mapbox.api.geocoding.v5.MapboxGeocoding.Builder.country(java.lang.String):com.mapbox.api.geocoding.v5.MapboxGeocoding$Builder type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: INVOKE  (r0 I:com.mapbox.api.geocoding.v5.MapboxGeocoding) = (r3 I:com.mapbox.api.geocoding.v5.MapboxGeocoding$Builder) com.mapbox.api.geocoding.v5.MapboxGeocoding.Builder.autoBuild():com.mapbox.api.geocoding.v5.MapboxGeocoding type: VIRTUAL \l0x001b: INVOKE  (r1 I:java.lang.String) = (r0 I:com.mapbox.api.geocoding.v5.MapboxGeocoding) com.mapbox.api.geocoding.v5.MapboxGeocoding.accessToken():java.lang.String type: VIRTUAL \l0x001f: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String) com.mapbox.core.utils.MapboxUtils.isAccessTokenValid(java.lang.String):boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|0x0023: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0059 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: INVOKE  (r1 I:java.lang.String) = (r0 I:com.mapbox.api.geocoding.v5.MapboxGeocoding) com.mapbox.api.geocoding.v5.MapboxGeocoding.query():java.lang.String type: VIRTUAL \l0x0029: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String) java.lang.String.isEmpty():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|0x002d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0051 \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: INVOKE  (r1 I:java.lang.String) = (r0 I:com.mapbox.api.geocoding.v5.MapboxGeocoding) com.mapbox.api.geocoding.v5.MapboxGeocoding.reverseMode():java.lang.String type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0033|0x0033: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0050 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|0x0035: INVOKE  (r1 I:java.lang.String) = (r0 I:com.mapbox.api.geocoding.v5.MapboxGeocoding) com.mapbox.api.geocoding.v5.MapboxGeocoding.limit():java.lang.String type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|0x0039: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0050 \l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|0x003b: INVOKE  (r1 I:java.lang.String) = (r0 I:com.mapbox.api.geocoding.v5.MapboxGeocoding) com.mapbox.api.geocoding.v5.MapboxGeocoding.limit():java.lang.String type: VIRTUAL \l0x003f: CONST_STR  (r2 I:java.lang.String) =  \"1\" \l0x0041: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0045|0x0045: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0048 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|0x0048: NEW_INSTANCE  (r0 I:com.mapbox.core.exceptions.ServicesException) =  com.mapbox.core.exceptions.ServicesException \l0x004a: CONST_STR  (r1 I:java.lang.String) =  \"Limit must be combined with a single type parameter\" \l0x004c: INVOKE  \l  (r0 I:com.mapbox.core.exceptions.ServicesException)\l  (r1 I:java.lang.String)\l com.mapbox.core.exceptions.ServicesException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|0x004f: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0050|0x0050: RETURN  (r0 I:com.mapbox.api.geocoding.v5.MapboxGeocoding) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0051|0x0051: NEW_INSTANCE  (r0 I:com.mapbox.core.exceptions.ServicesException) =  com.mapbox.core.exceptions.ServicesException \l0x0053: CONST_STR  (r1 I:java.lang.String) =  \"A query with at least one character or digit is required.\" \l0x0055: INVOKE  \l  (r0 I:com.mapbox.core.exceptions.ServicesException)\l  (r1 I:java.lang.String)\l com.mapbox.core.exceptions.ServicesException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x0058|0x0058: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0059|0x0059: NEW_INSTANCE  (r0 I:com.mapbox.core.exceptions.ServicesException) =  com.mapbox.core.exceptions.ServicesException \l0x005b: CONST_STR  (r1 I:java.lang.String) =  \"Using Mapbox Services requires setting a valid access token.\" \l0x005d: INVOKE  \l  (r0 I:com.mapbox.core.exceptions.ServicesException)\l  (r1 I:java.lang.String)\l com.mapbox.core.exceptions.ServicesException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x0060|0x0060: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.mapbox.api.geocoding.v5.MapboxGeocoding com.mapbox.api.geocoding.v5.MapboxGeocoding.Builder.build((r3 'this' I:com.mapbox.api.geocoding.v5.MapboxGeocoding$Builder A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_19;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_17;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_14;
Node_12 -> Node_16[style=dashed];
Node_14 -> Node_15;
Node_17 -> Node_18;
Node_19 -> Node_20;
}

