digraph "CFG forcom.mapbox.turf.TurfMisc.lineSliceAlong(Lcom\/mapbox\/geojson\/LineString;DDLjava\/lang\/String;)Lcom\/mapbox\/geojson\/LineString;" {
subgraph cluster_Region_1052641706 {
label = "R(2:0|(2:43|44)(1:(3:4|(3:11|(2:15|(2:(2:17|18)|(1:19)))|(2:(2:22|(2:(2:24|25)|(2:26|27)))|(2:(1:29)|(2:(1:33)|(1:34)))))|(2:(1:38)|(1:40)))(1:42)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.List java.util.List r3 = r20.coordinates()\l}"];
subgraph cluster_IfRegion_129392932 {
label = "IF [B:1:0x0009] THEN: R(2:43|44) ELSE: R(1:(3:4|(3:11|(2:15|(2:(2:17|18)|(1:19)))|(2:(2:22|(2:(2:24|25)|(2:26|27)))|(2:(1:29)|(2:(1:33)|(1:34)))))|(2:(1:38)|(1:40)))(1:42))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r3.size() \< 2) goto L_0x00f6\l}"];
subgraph cluster_Region_1293609638 {
label = "R(2:43|44)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x00f6}"];
Node_44 [shape=record,label="{44\:\ 0x0115|throw new com.mapbox.turf.TurfException(\"Turf lineSlice requires a LineString Geometry made up of at least 2 coordinates. The LineString passed in only contains \" + r3.size() + mil.nga.geopackage.property.PropertyConstants.PROPERTY_DIVIDER)\l}"];
}
subgraph cluster_Region_447782118 {
label = "R(1:(3:4|(3:11|(2:15|(2:(2:17|18)|(1:19)))|(2:(2:22|(2:(2:24|25)|(2:26|27)))|(2:(1:29)|(2:(1:33)|(1:34)))))|(2:(1:38)|(1:40)))(1:42)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_928884692 {
label = "IF [B:3:0x000d] THEN: R(3:4|(3:11|(2:15|(2:(2:17|18)|(1:19)))|(2:(2:22|(2:(2:24|25)|(2:26|27)))|(2:(1:29)|(2:(1:33)|(1:34)))))|(2:(1:38)|(1:40))) ELSE: R(1:42) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000d|if (r21 != r23) goto L_0x000f\l}"];
subgraph cluster_Region_914194501 {
label = "R(3:4|(3:11|(2:15|(2:(2:17|18)|(1:19)))|(2:(2:22|(2:(2:24|25)|(2:26|27)))|(2:(1:29)|(2:(1:33)|(1:34)))))|(2:(1:38)|(1:40)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|java.util.ArrayList java.util.ArrayList r4 = new java.util.ArrayList(2)\lint r5 = 0\ldouble r8 = 0.0d\l}"];
subgraph cluster_LoopRegion_286210127 {
label = "LOOP:0: (3:11|(2:15|(2:(2:17|18)|(1:19)))|(2:(2:22|(2:(2:24|25)|(2:26|27)))|(2:(1:29)|(2:(1:33)|(1:34)))))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001c|if (r5 \< r3.size()) goto L_0x001e\l}"];
subgraph cluster_Region_468333415 {
label = "R(3:11|(2:15|(2:(2:17|18)|(1:19)))|(2:(2:22|(2:(2:24|25)|(2:26|27)))|(2:(1:29)|(2:(1:33)|(1:34)))))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002c|int int r12 = (r8 \> r21 ? 1 : (r8 == r21 ? 0 : \-1))\l}"];
subgraph cluster_IfRegion_1160107658 {
label = "IF [B:12:0x0033, B:14:0x0039] THEN: R(2:15|(2:(2:17|18)|(1:19))) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0033|ADDED_TO_REGION\l|if (r12 \> 0) goto L_0x0035\l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|ADDED_TO_REGION\l|if (r4.size() == 0) goto L_0x003b\l}"];
subgraph cluster_Region_1888495382 {
label = "R(2:15|(2:(2:17|18)|(1:19)))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x003b|double double r15 = r21 \- r8\l}"];
subgraph cluster_Region_1029527592 {
label = "R(2:(2:17|18)|(1:19))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1713559297 {
label = "IF [B:16:0x003f] THEN: R(2:17|18) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x003f|if (r15 == 0.0d) goto L_0x0041\l}"];
subgraph cluster_Region_1605537949 {
label = "R(2:17|18)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0041|r4.add(r3.get(r5))\l}"];
Node_18 [shape=record,label="{18\:\ 0x004c|RETURN\l|return com.mapbox.geojson.LineString.fromLngLats((java.util.List\<com.mapbox.geojson.Point\>) r4)\l}"];
}
}
subgraph cluster_Region_1807312142 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x004d|r4.add(com.mapbox.turf.TurfMeasurement.destination((com.mapbox.geojson.Point) r3.get(r5), r15, com.mapbox.turf.TurfMeasurement.bearing((com.mapbox.geojson.Point) r3.get(r5), (com.mapbox.geojson.Point) r3.get(r5 \- 1)) \- 180.0d, r25))\l}"];
}
}
}
}
subgraph cluster_Region_720434049 {
label = "R(2:(2:22|(2:(2:24|25)|(2:26|27)))|(2:(1:29)|(2:(1:33)|(1:34))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2136040466 {
label = "IF [B:21:0x0073] THEN: R(2:22|(2:(2:24|25)|(2:26|27))) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0073|if (r8 \>= r23) goto L_0x0075\l}"];
subgraph cluster_Region_1095054783 {
label = "R(2:22|(2:(2:24|25)|(2:26|27)))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0075|double double r15 = r23 \- r8\l}"];
subgraph cluster_Region_876154261 {
label = "R(2:(2:24|25)|(2:26|27))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_245560231 {
label = "IF [B:23:0x0079] THEN: R(2:24|25) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0079|if (r15 == 0.0d) goto L_0x007b\l}"];
subgraph cluster_Region_1911352581 {
label = "R(2:24|25)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x007b|r4.add(r3.get(r5))\l}"];
Node_25 [shape=record,label="{25\:\ 0x0086|RETURN\l|return com.mapbox.geojson.LineString.fromLngLats((java.util.List\<com.mapbox.geojson.Point\>) r4)\l}"];
}
}
subgraph cluster_Region_424246839 {
label = "R(2:26|27)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0087|r4.add(com.mapbox.turf.TurfMeasurement.destination((com.mapbox.geojson.Point) r3.get(r5), r15, com.mapbox.turf.TurfMeasurement.bearing((com.mapbox.geojson.Point) r3.get(r5), (com.mapbox.geojson.Point) r3.get(r5 \- 1)) \- 180.0d, r25))\l}"];
Node_27 [shape=record,label="{27\:\ 0x00af|RETURN\l|return com.mapbox.geojson.LineString.fromLngLats((java.util.List\<com.mapbox.geojson.Point\>) r4)\l}"];
}
}
}
}
subgraph cluster_Region_1845526465 {
label = "R(2:(1:29)|(2:(1:33)|(1:34)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2057795861 {
label = "IF [B:28:0x00b0] THEN: R(1:29) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x00b0|if (r12 \>= 0) goto L_0x00b2\l}"];
subgraph cluster_Region_1387537403 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x00b2|r4.add(r3.get(r5))\l}"];
}
}
subgraph cluster_Region_969664049 {
label = "R(2:(1:33)|(1:34))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1912974774 {
label = "IF [B:31:0x00bf] THEN: R(1:33) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x00bf|if (r5 == (r3.size() \- 1)) goto L_0x00c1\l}"];
subgraph cluster_Region_437435269 {
label = "R(1:33)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x00c5|RETURN\l|return com.mapbox.geojson.LineString.fromLngLats((java.util.List\<com.mapbox.geojson.Point\>) r4)\l}"];
}
}
subgraph cluster_Region_1679286838 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x00c6|LOOP_END\lLOOP:0: B:5:0x0018\-\>B:34:0x00c6\l|r5++\lr8 += com.mapbox.turf.TurfMeasurement.distance((com.mapbox.geojson.Point) r3.get(r5), (com.mapbox.geojson.Point) r3.get(r5), r25)\l}"];
}
}
}
}
}
}
subgraph cluster_Region_336225906 {
label = "R(2:(1:38)|(1:40))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_192825339 {
label = "IF [B:36:0x00df] THEN: R(1:38) ELSE: null";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x00df|if (r8 \>= r21) goto L_0x00e1\l}"];
subgraph cluster_Region_1095761059 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x00e5|RETURN\l|return com.mapbox.geojson.LineString.fromLngLats((java.util.List\<com.mapbox.geojson.Point\>) r4)\l}"];
}
}
subgraph cluster_Region_1747162307 {
label = "R(1:40)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x00ed|throw new com.mapbox.turf.TurfException(\"Start position is beyond line\")\l}"];
}
}
}
subgraph cluster_Region_87036017 {
label = "R(1:42)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x00f5|throw new com.mapbox.turf.TurfException(\"Start and stop distance in Turf lineSliceAlong cannot equal each other.\")\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000b}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0018|LOOP_START\lPHI: r5 r8 \l  PHI: (r5v2 int) = (r5v1 int), (r5v3 int) binds: [B:4:0x000f, B:34:0x00c6] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 double) = (r8v0 double), (r8v2 double) binds: [B:4:0x000f, B:34:0x00c6] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0018\-\>B:34:0x00c6\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001e}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0020|ADDED_TO_REGION\l|if (r21 \< r8) goto L_0x002c\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0022}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0028|ADDED_TO_REGION\l|if (r5 != (r3.size() \- 1)) goto L_0x002c\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0035}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0071}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x00b9}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x00c1}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x00dd}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x00e1}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x00e6}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x00ee}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x00dd|SYNTHETIC\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x0075|SYNTHETIC\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x00dd|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x00c1|SYNTHETIC\l}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x0041|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static com.mapbox.geojson.LineString com.mapbox.turf.TurfMisc.lineSliceAlong((r20v0 com.mapbox.geojson.LineString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.FloatRange, \{from=0.0\}], Annotation[BUILD, android.support.annotation.FloatRange, \{from=0.0\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_43;
Node_43 -> Node_44;
Node_3 -> Node_4;
Node_3 -> Node_41[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_47[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_20[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_20[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_19[style=dashed];
Node_16 -> Node_49;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_21 -> Node_28[style=dashed];
Node_21 -> Node_46;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_26[style=dashed];
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_28 -> Node_30[style=dashed];
Node_29 -> Node_30;
Node_31 -> Node_34[style=dashed];
Node_31 -> Node_48;
Node_34 -> Node_5;
Node_36 -> Node_37;
Node_36 -> Node_39[style=dashed];
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_45[style=dashed];
Node_13 -> Node_14;
Node_20 -> Node_21;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_35 -> Node_36;
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_41 -> Node_42;
Node_45 -> Node_35;
Node_46 -> Node_22;
Node_47 -> Node_35;
Node_48 -> Node_32;
Node_49 -> Node_17;
}

