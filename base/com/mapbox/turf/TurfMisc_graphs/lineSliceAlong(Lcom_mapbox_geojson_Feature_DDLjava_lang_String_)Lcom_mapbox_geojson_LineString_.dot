digraph "CFG forcom.mapbox.turf.TurfMisc.lineSliceAlong(Lcom\/mapbox\/geojson\/Feature;DDLjava\/lang\/String;)Lcom\/mapbox\/geojson\/LineString;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.mapbox.core.internal.Preconditions.checkNotNull(r6.geometry(), \"Feature.geometry() == null\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|if (r6.geometry().type().equals(\"LineString\") == false) goto L_0x0028\l}"];
Node_2 [shape=record,label="{2\:\ 0x0019}"];
Node_3 [shape=record,label="{3\:\ 0x0027|RETURN\l|return lineSliceAlong((com.mapbox.geojson.LineString) r6.geometry(), r7, r9, r11)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0028}"];
Node_5 [shape=record,label="{5\:\ 0x002f|throw new com.mapbox.turf.TurfException(\"input must be a LineString Feature or Geometry\")\l}"];
MethodNode[shape=record,label="{public static com.mapbox.geojson.LineString com.mapbox.turf.TurfMisc.lineSliceAlong((r6v0 com.mapbox.geojson.Feature A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.FloatRange, \{from=0.0\}], Annotation[BUILD, android.support.annotation.FloatRange, \{from=0.0\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

