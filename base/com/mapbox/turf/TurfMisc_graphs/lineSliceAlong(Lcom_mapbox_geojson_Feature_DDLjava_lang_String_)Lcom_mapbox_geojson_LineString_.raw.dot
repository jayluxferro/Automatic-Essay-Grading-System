digraph "CFG forcom.mapbox.turf.TurfMisc.lineSliceAlong(Lcom\/mapbox\/geojson\/Feature;DDLjava\/lang\/String;)Lcom\/mapbox\/geojson\/LineString;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.mapbox.geojson.Geometry) = (r6 I:com.mapbox.geojson.Feature) com.mapbox.geojson.Feature.geometry():com.mapbox.geojson.Geometry type: VIRTUAL \l0x0004: CONST_STR  (r1 I:java.lang.String) =  \"Feature.geometry() == null\" \l0x0006: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) com.mapbox.core.internal.Preconditions.checkNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0009: INVOKE  (r0 I:com.mapbox.geojson.Geometry) = (r6 I:com.mapbox.geojson.Feature) com.mapbox.geojson.Feature.geometry():com.mapbox.geojson.Geometry type: VIRTUAL \l0x000d: INVOKE  (r0 I:java.lang.String) = (r0 I:com.mapbox.geojson.Geometry) com.mapbox.geojson.Geometry.type():java.lang.String type: INTERFACE \l0x0011: CONST_STR  (r1 I:java.lang.String) =  \"LineString\" \l0x0013: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|0x0019: INVOKE  (r6 I:com.mapbox.geojson.Geometry) = (r6 I:com.mapbox.geojson.Feature) com.mapbox.geojson.Feature.geometry():com.mapbox.geojson.Geometry type: VIRTUAL \l0x001d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x001e: CHECK_CAST  (r0 I:com.mapbox.geojson.LineString) = (com.mapbox.geojson.LineString) (r0 I:?[OBJECT, ARRAY]) \l0x0020: MOVE  (r1 I:?[long, double]) = (r7 I:?[long, double]) \l0x0021: MOVE  (r3 I:?[long, double]) = (r9 I:?[long, double]) \l0x0022: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0023: INVOKE  (r6 I:com.mapbox.geojson.LineString) = \l  (r0 I:com.mapbox.geojson.LineString)\l  (r1 I:double)\l  (r3 I:double)\l  (r5 I:java.lang.String)\l com.mapbox.turf.TurfMisc.lineSliceAlong(com.mapbox.geojson.LineString, double, double, java.lang.String):com.mapbox.geojson.LineString type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|0x0027: RETURN  (r6 I:com.mapbox.geojson.LineString) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: NEW_INSTANCE  (r6 I:com.mapbox.turf.TurfException) =  com.mapbox.turf.TurfException \l0x002a: CONST_STR  (r7 I:java.lang.String) =  \"input must be a LineString Feature or Geometry\" \l0x002c: INVOKE  \l  (r6 I:com.mapbox.turf.TurfException)\l  (r7 I:java.lang.String)\l com.mapbox.turf.TurfException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x002f|0x002f: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static com.mapbox.geojson.LineString com.mapbox.turf.TurfMisc.lineSliceAlong((r6 I:com.mapbox.geojson.Feature A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.FloatRange, \{from=0.0\}], Annotation[BUILD, android.support.annotation.FloatRange, \{from=0.0\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

