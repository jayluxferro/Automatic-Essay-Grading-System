digraph "CFG forcom.mapbox.turf.TurfJoins.inside(Lcom\/mapbox\/geojson\/Point;Lcom\/mapbox\/geojson\/MultiPolygon;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r8 I:java.util.List) = (r8 I:com.mapbox.geojson.MultiPolygon) com.mapbox.geojson.MultiPolygon.coordinates():java.util.List type: VIRTUAL \l0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: INVOKE  (r3 I:int) = (r8 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IF  (r1 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:17:0x004e \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x004e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: INVOKE  (r3 I:java.lang.Object) = (r8 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0013: CHECK_CAST  (r3 I:java.util.List) = (java.util.List) (r3 I:?[OBJECT, ARRAY]) \l0x0015: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0019: CHECK_CAST  (r3 I:java.util.List) = (java.util.List) (r3 I:?[OBJECT, ARRAY]) \l0x001b: INVOKE  (r3 I:boolean) = (r7 I:com.mapbox.geojson.Point), (r3 I:java.util.List) com.mapbox.turf.TurfJoins.inRing(com.mapbox.geojson.Point, java.util.List):boolean type: STATIC \l0x001f: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x004b \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0023: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: INVOKE  (r6 I:java.lang.Object) = (r8 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0028: CHECK_CAST  (r6 I:java.util.List) = (java.util.List) (r6 I:?[OBJECT, ARRAY]) \l0x002a: INVOKE  (r6 I:int) = (r6 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: IF  (r3 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:14:0x0048 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0048 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|0x0032: INVOKE  (r6 I:java.lang.Object) = (r8 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0036: CHECK_CAST  (r6 I:java.util.List) = (java.util.List) (r6 I:?[OBJECT, ARRAY]) \l0x0038: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.List), (r3 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x003c: CHECK_CAST  (r6 I:java.util.List) = (java.util.List) (r6 I:?[OBJECT, ARRAY]) \l0x003e: INVOKE  (r6 I:boolean) = (r7 I:com.mapbox.geojson.Point), (r6 I:java.util.List) com.mapbox.turf.TurfJoins.inRing(com.mapbox.geojson.Point, java.util.List):boolean type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|0x0042: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0045 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0044|0x0044: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0045|0x0045: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|0x0048: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x004b \l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|0x004a: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x004b|0x004b: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x004e|0x004e: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean com.mapbox.turf.TurfJoins.inside((r7 I:com.mapbox.geojson.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.mapbox.geojson.MultiPolygon A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_17;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_17;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_16;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_7;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_1;
}

