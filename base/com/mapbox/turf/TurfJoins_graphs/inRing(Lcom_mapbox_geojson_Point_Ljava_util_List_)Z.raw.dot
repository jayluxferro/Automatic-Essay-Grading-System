digraph "CFG forcom.mapbox.turf.TurfJoins.inRing(Lcom\/mapbox\/geojson\/Point;Ljava\/util\/List;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0002: INVOKE  (r1 I:int) = (r20 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0006: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x0008: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: INVOKE  (r6 I:int) = (r20 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IF  (r1 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:19:0x0076 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: INVOKE  (r6 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0016: CHECK_CAST  (r6 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r6 I:?[OBJECT, ARRAY]) \l0x0018: INVOKE  (r6 I:double) = (r6 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.longitude():double type: VIRTUAL \l0x001c: INVOKE  (r8 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0020: CHECK_CAST  (r8 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r8 I:?[OBJECT, ARRAY]) \l0x0022: INVOKE  (r8 I:double) = (r8 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.latitude():double type: VIRTUAL \l0x0026: INVOKE  (r10 I:java.lang.Object) = (r0 I:java.util.List), (r4 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x002a: CHECK_CAST  (r10 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r10 I:?[OBJECT, ARRAY]) \l0x002c: INVOKE  (r10 I:double) = (r10 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.longitude():double type: VIRTUAL \l0x0030: INVOKE  (r4 I:java.lang.Object) = (r0 I:java.util.List), (r4 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0034: CHECK_CAST  (r4 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r4 I:?[OBJECT, ARRAY]) \l0x0036: INVOKE  (r12 I:double) = (r4 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.latitude():double type: VIRTUAL \l0x003a: INVOKE  (r14 I:double) = (r19 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.latitude():double type: VIRTUAL \l0x003e: CMP_L  (r4 I:int) = (r8 I:double), (r14 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0040|0x0040: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x0044 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0042|0x0042: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0044|0x0044: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0045|0x0045: INVOKE  (r14 I:double) = (r19 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.latitude():double type: VIRTUAL \l0x0049: CMP_L  (r14 I:int) = (r12 I:double), (r14 I:double) \l}"];
Node_8 [shape=record,label="{8\:\ 0x004b|0x004b: IF  (r14 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:10:0x004f \l}"];
Node_9 [shape=record,label="{9\:\ 0x004d|0x004d: CONST  (r14 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x004f|0x004f: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|0x0050: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0068 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0052|0x0052: INVOKE  (r14 I:double) = (r19 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.longitude():double type: VIRTUAL \l0x0056: ARITH  (r10 I:double) = (r10 I:double) \- (r6 I:double) \l0x0057: INVOKE  (r16 I:double) = (r19 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.latitude():double type: VIRTUAL \l0x005b: ARITH  (r16 I:double) = (r16 I:double) \- (r8 I:double) \l0x005d: ARITH  (r10 I:double) = (r10 I:double) * (r16 I:double) \l0x005f: ARITH  (r12 I:double) = (r12 I:double) \- (r8 I:double) \l0x0060: ARITH  (r10 I:double) = (r10 I:double) \/ (r12 I:double) \l0x0061: ARITH  (r10 I:double) = (r10 I:double) + (r6 I:double) \l0x0062: CMP_G  (r4 I:int) = (r14 I:double), (r10 I:double) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0064|0x0064: IF  (r4 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:15:0x0068 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0066|0x0066: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0068|0x0068: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0069|0x0069: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x006e \l}"];
Node_17 [shape=record,label="{17\:\ 0x006b|0x006b: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) ^ (1 ?[boolean, int, float, short, byte, char]) \l0x006d: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x006e|0x006e: ARITH  (r4 I:int) = (r1 I:int) + (1 int) \l0x0070: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0072: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0073: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x0076|0x0076: RETURN  (r5 I:boolean) \l}"];
MethodNode[shape=record,label="{private static boolean com.mapbox.turf.TurfJoins.inRing((r19 I:com.mapbox.geojson.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:java.util.List\<com.mapbox.geojson.Point\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/mapbox\/geojson\/Point;, Ljava\/util\/List\<, Lcom\/mapbox\/geojson\/Point;, \>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_19;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_1;
}

