digraph "CFG forcom.mapbox.turf.TurfMeasurement.along(Lcom\/mapbox\/geojson\/LineString;DLjava\/lang\/String;)Lcom\/mapbox\/geojson\/Point;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r12 I:java.util.List) = (r12 I:com.mapbox.geojson.LineString) com.mapbox.geojson.LineString.coordinates():java.util.List type: VIRTUAL \l0x0004: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: MOVE  (r3 I:?[long, double]) = (r0 I:?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: INVOKE  (r5 I:int) = (r12 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r2 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:17:0x0066 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: CMP_L  (r5 I:int) = (r13 I:double), (r3 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r5 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:8:0x001b \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: INVOKE  (r5 I:int) = (r12 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0016: ARITH  (r5 I:int) = (r5 I:int) + (\-1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001b \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: CMP_L  (r5 I:int) = (r3 I:double), (r13 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: IF  (r5 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:16:0x0052 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: ARITH  (r7 I:double) = (r13 I:double) \- (r3 I:double) \l0x0021: CMP_L  (r13 I:int) = (r7 I:double), (r0 I:double) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002c \l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|0x0025: INVOKE  (r12 I:java.lang.Object) = (r12 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0029: CHECK_CAST  (r12 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r12 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: RETURN  (r12 I:com.mapbox.geojson.Point) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|0x002c: INVOKE  (r13 I:java.lang.Object) = (r12 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0030: CHECK_CAST  (r13 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r13 I:?[OBJECT, ARRAY]) \l0x0032: ARITH  (r14 I:int) = (r2 I:int) + (\-1 int) \l0x0034: INVOKE  (r14 I:java.lang.Object) = (r12 I:java.util.List), (r14 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0038: CHECK_CAST  (r14 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r14 I:?[OBJECT, ARRAY]) \l0x003a: INVOKE  (r13 I:double) = \l  (r13 I:com.mapbox.geojson.Point)\l  (r14 I:com.mapbox.geojson.Point)\l com.mapbox.turf.TurfMeasurement.bearing(com.mapbox.geojson.Point, com.mapbox.geojson.Point):double type: STATIC \l0x003e: CONST  (r0 I:?[long, double]) = \l  (4640537203540230144(0x4066800000000000, double:180.0) ?[long, double])\l \l0x0043: ARITH  (r9 I:double) = (r13 I:double) \- (r0 I:double) \l0x0045: INVOKE  (r12 I:java.lang.Object) = (r12 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0049: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x004a: CHECK_CAST  (r6 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r6 I:?[OBJECT, ARRAY]) \l0x004c: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x004d: INVOKE  (r12 I:com.mapbox.geojson.Point) = \l  (r6 I:com.mapbox.geojson.Point)\l  (r7 I:double)\l  (r9 I:double)\l  (r11 I:java.lang.String)\l com.mapbox.turf.TurfMeasurement.destination(com.mapbox.geojson.Point, double, double, java.lang.String):com.mapbox.geojson.Point type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x0051|0x0051: RETURN  (r12 I:com.mapbox.geojson.Point) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0052|0x0052: INVOKE  (r5 I:java.lang.Object) = (r12 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0056: CHECK_CAST  (r5 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r5 I:?[OBJECT, ARRAY]) \l0x0058: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x005a: INVOKE  (r6 I:java.lang.Object) = (r12 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x005e: CHECK_CAST  (r6 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r6 I:?[OBJECT, ARRAY]) \l0x0060: INVOKE  (r5 I:double) = \l  (r5 I:com.mapbox.geojson.Point)\l  (r6 I:com.mapbox.geojson.Point)\l  (r15 I:java.lang.String)\l com.mapbox.turf.TurfMeasurement.distance(com.mapbox.geojson.Point, com.mapbox.geojson.Point, java.lang.String):double type: STATIC \l0x0064: ARITH  (r3 I:double) = (r3 I:double) + (r5 I:double) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0066|0x0066: INVOKE  (r13 I:int) = (r12 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x006a: ARITH  (r13 I:int) = (r13 I:int) + (\-1 int) \l0x006c: INVOKE  (r12 I:java.lang.Object) = (r12 I:java.util.List), (r13 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0070: CHECK_CAST  (r12 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r12 I:?[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0072|0x0072: RETURN  (r12 I:com.mapbox.geojson.Point) \l}"];
MethodNode[shape=record,label="{public static com.mapbox.geojson.Point com.mapbox.turf.TurfMeasurement.along((r12 I:com.mapbox.geojson.LineString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.FloatRange, \{from=0.0\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_17;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_17[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_1;
Node_17 -> Node_18;
}

