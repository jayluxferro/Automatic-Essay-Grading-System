digraph "CFG forcom.mapbox.turf.TurfMeasurement.bboxCalculator(Ljava\/util\/List;)[D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0001: NEW_ARRAY  (r0 I:double[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: double[] \l0x0003: FILL_ARRAY  (r0 I:?[long, double][]), data: [9218868437227405312, 9218868437227405312, \-4503599627370496, \-4503599627370496] \l0x0006: INVOKE  (r7 I:java.util.Iterator) = (r7 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: INVOKE  (r1 I:boolean) = (r7 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x005b \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: INVOKE  (r1 I:java.lang.Object) = (r7 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0014: CHECK_CAST  (r1 I:com.mapbox.geojson.Point) = (com.mapbox.geojson.Point) (r1 I:?[OBJECT, ARRAY]) \l0x0016: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0017: AGET  (r3 I:?[long, double]) = (r0 I:?[long, double][]), (r2 I:?[int, short, byte, char]) \l0x0019: INVOKE  (r5 I:double) = (r1 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.longitude():double type: VIRTUAL \l0x001d: CMP_L  (r3 I:int) = (r3 I:double), (r5 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x0027 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: INVOKE  (r3 I:double) = (r1 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.longitude():double type: VIRTUAL \l0x0025: APUT  \l  (r0 I:?[long, double][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[long, double])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0028: AGET  (r3 I:?[long, double]) = (r0 I:?[long, double][]), (r2 I:?[int, short, byte, char]) \l0x002a: INVOKE  (r5 I:double) = (r1 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.latitude():double type: VIRTUAL \l0x002e: CMP_L  (r3 I:int) = (r3 I:double), (r5 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|0x0030: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:9:0x0038 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|0x0032: INVOKE  (r3 I:double) = (r1 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.latitude():double type: VIRTUAL \l0x0036: APUT  \l  (r0 I:?[long, double][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[long, double])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0039: AGET  (r3 I:?[long, double]) = (r0 I:?[long, double][]), (r2 I:?[int, short, byte, char]) \l0x003b: INVOKE  (r5 I:double) = (r1 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.longitude():double type: VIRTUAL \l0x003f: CMP_G  (r3 I:int) = (r3 I:double), (r5 I:double) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|0x0041: IF  (r3 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:12:0x0049 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0043|0x0043: INVOKE  (r3 I:double) = (r1 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.longitude():double type: VIRTUAL \l0x0047: APUT  \l  (r0 I:?[long, double][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[long, double])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|0x0049: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x004a: AGET  (r3 I:?[long, double]) = (r0 I:?[long, double][]), (r2 I:?[int, short, byte, char]) \l0x004c: INVOKE  (r5 I:double) = (r1 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.latitude():double type: VIRTUAL \l0x0050: CMP_G  (r3 I:int) = (r3 I:double), (r5 I:double) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0052|0x0052: IF  (r3 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:1:0x000a \l}"];
Node_14 [shape=record,label="{14\:\ 0x0054|0x0054: INVOKE  (r3 I:double) = (r1 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.latitude():double type: VIRTUAL \l0x0058: APUT  \l  (r0 I:?[long, double][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[long, double])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x005b|0x005b: RETURN  (r0 I:double[]) \l}"];
MethodNode[shape=record,label="{private static double[] com.mapbox.turf.TurfMeasurement.bboxCalculator((r7 I:java.util.List\<com.mapbox.geojson.Point\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lcom\/mapbox\/geojson\/Point;, \>;)[D]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_1;
}

