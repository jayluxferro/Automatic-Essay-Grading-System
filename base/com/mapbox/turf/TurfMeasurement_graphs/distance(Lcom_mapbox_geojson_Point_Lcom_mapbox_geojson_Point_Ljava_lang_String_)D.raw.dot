digraph "CFG forcom.mapbox.turf.TurfMeasurement.distance(Lcom\/mapbox\/geojson\/Point;Lcom\/mapbox\/geojson\/Point;Ljava\/lang\/String;)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:double) = (r9 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.latitude():double type: VIRTUAL \l0x0004: INVOKE  (r2 I:double) = (r8 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.latitude():double type: VIRTUAL \l0x0008: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x0009: INVOKE  (r0 I:double) = (r0 I:double) com.mapbox.turf.TurfConversion.degreesToRadians(double):double type: STATIC \l0x000d: INVOKE  (r2 I:double) = (r9 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.longitude():double type: VIRTUAL \l0x0011: INVOKE  (r4 I:double) = (r8 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.longitude():double type: VIRTUAL \l0x0015: ARITH  (r2 I:double) = (r2 I:double) \- (r4 I:double) \l0x0016: INVOKE  (r2 I:double) = (r2 I:double) com.mapbox.turf.TurfConversion.degreesToRadians(double):double type: STATIC \l0x001a: INVOKE  (r4 I:double) = (r8 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.latitude():double type: VIRTUAL \l0x001e: INVOKE  (r4 I:double) = (r4 I:double) com.mapbox.turf.TurfConversion.degreesToRadians(double):double type: STATIC \l0x0022: INVOKE  (r8 I:double) = (r9 I:com.mapbox.geojson.Point) com.mapbox.geojson.Point.latitude():double type: VIRTUAL \l0x0026: INVOKE  (r8 I:double) = (r8 I:double) com.mapbox.turf.TurfConversion.degreesToRadians(double):double type: STATIC \l0x002a: CONST  (r6 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x002c: ARITH  (r0 I:double) = (r0 I:double) \/ (r6 I:double) \l0x002d: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0031: INVOKE  (r0 I:double) = (r0 I:double), (r6 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x0035: ARITH  (r2 I:double) = (r2 I:double) \/ (r6 I:double) \l0x0036: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.sin(double):double type: STATIC \l0x003a: INVOKE  (r2 I:double) = (r2 I:double), (r6 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x003e: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0042: ARITH  (r2 I:double) = (r2 I:double) * (r4 I:double) \l0x0044: INVOKE  (r8 I:double) = (r8 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0048: ARITH  (r2 I:double) = (r2 I:double) * (r8 I:double) \l0x004a: ARITH  (r0 I:double) = (r0 I:double) + (r2 I:double) \l0x004b: INVOKE  (r8 I:double) = (r0 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x004f: CONST  (r2 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0051: ARITH  (r2 I:double) = (r2 I:double) \- (r0 I:double) \l0x0052: INVOKE  (r0 I:double) = (r2 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0056: INVOKE  (r8 I:double) = (r8 I:double), (r0 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x005a: ARITH  (r8 I:double) = (r8 I:double) * (r6 I:double) \l0x005c: INVOKE  (r8 I:double) = (r8 I:double), (r10 I:java.lang.String) com.mapbox.turf.TurfConversion.radiansToLength(double, java.lang.String):double type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0060|0x0060: RETURN  (r8 I:double) \l}"];
MethodNode[shape=record,label="{public static double com.mapbox.turf.TurfMeasurement.distance((r8 I:com.mapbox.geojson.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:com.mapbox.geojson.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

