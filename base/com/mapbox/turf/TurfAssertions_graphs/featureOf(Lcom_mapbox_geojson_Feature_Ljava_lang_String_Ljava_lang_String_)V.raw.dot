digraph "CFG forcom.mapbox.turf.TurfAssertions.featureOf(Lcom\/mapbox\/geojson\/Feature;Ljava\/lang\/String;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r6 I:java.lang.CharSequence) com.mapbox.core.utils.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x005f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x004f \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r2 I:java.lang.String) = (r4 I:com.mapbox.geojson.Feature) com.mapbox.geojson.Feature.type():java.lang.String type: VIRTUAL \l0x000e: CONST_STR  (r3 I:java.lang.String) =  \"Feature\" \l0x0010: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x004f \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: INVOKE  (r2 I:com.mapbox.geojson.Geometry) = (r4 I:com.mapbox.geojson.Feature) com.mapbox.geojson.Feature.geometry():com.mapbox.geojson.Geometry type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x004f \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: INVOKE  (r2 I:com.mapbox.geojson.Geometry) = (r4 I:com.mapbox.geojson.Feature) com.mapbox.geojson.Feature.geometry():com.mapbox.geojson.Geometry type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0031 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: INVOKE  (r2 I:com.mapbox.geojson.Geometry) = (r4 I:com.mapbox.geojson.Feature) com.mapbox.geojson.Feature.geometry():com.mapbox.geojson.Geometry type: VIRTUAL \l0x0026: INVOKE  (r2 I:java.lang.String) = (r2 I:com.mapbox.geojson.Geometry) com.mapbox.geojson.Geometry.type():java.lang.String type: INTERFACE \l0x002a: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0031 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: RETURN   \l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|0x0031: NEW_INSTANCE  (r2 I:com.mapbox.turf.TurfException) =  com.mapbox.turf.TurfException \l0x0033: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0034: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0036: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x0038: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x003a: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x003b: INVOKE  (r4 I:com.mapbox.geojson.Geometry) = (r4 I:com.mapbox.geojson.Feature) com.mapbox.geojson.Feature.geometry():com.mapbox.geojson.Geometry type: VIRTUAL \l0x003f: INVOKE  (r4 I:java.lang.String) = (r4 I:com.mapbox.geojson.Geometry) com.mapbox.geojson.Geometry.type():java.lang.String type: INTERFACE \l0x0043: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x0045: CONST_STR  (r4 I:java.lang.String) =  \"Invalid input to %s: must be a %s, given %s\" \l0x0047: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String), (r3 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x004b: INVOKE  \l  (r2 I:com.mapbox.turf.TurfException)\l  (r4 I:java.lang.String)\l com.mapbox.turf.TurfException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x004e|0x004e: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|0x004f: NEW_INSTANCE  (r4 I:com.mapbox.turf.TurfException) =  com.mapbox.turf.TurfException \l0x0051: NEW_ARRAY  (r5 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0053: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x0055: CONST_STR  (r6 I:java.lang.String) =  \"Invalid input to %s, Feature with geometry required\" \l0x0057: INVOKE  (r5 I:java.lang.String) = (r6 I:java.lang.String), (r5 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x005b: INVOKE  \l  (r4 I:com.mapbox.turf.TurfException)\l  (r5 I:java.lang.String)\l com.mapbox.turf.TurfException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x005e|0x005e: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ 0x005f|0x005f: NEW_INSTANCE  (r4 I:com.mapbox.turf.TurfException) =  com.mapbox.turf.TurfException \l0x0061: CONST_STR  (r5 I:java.lang.String) =  \".featureOf() requires a name\" \l0x0063: INVOKE  \l  (r4 I:com.mapbox.turf.TurfException)\l  (r5 I:java.lang.String)\l com.mapbox.turf.TurfException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x0066|0x0066: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void com.mapbox.turf.TurfAssertions.featureOf((r4 I:com.mapbox.geojson.Feature A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

