digraph "CFG forcom.google.android.gms.stats.WakeLock.\<init\>(Landroid\/content\/Context;ILjava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r1 I:java.lang.Object)\l  (r1 I:com.google.android.gms.stats.WakeLock)\l com.google.android.gms.stats.WakeLock.zza java.lang.Object \l0x0005: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0006: IPUT  \l  (r5 I:boolean)\l  (r1 I:com.google.android.gms.stats.WakeLock)\l com.google.android.gms.stats.WakeLock.zzi boolean \l0x0008: NEW_INSTANCE  (r5 I:java.util.HashMap) =  java.util.HashMap \l0x000a: INVOKE  (r5 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x000d: IPUT  \l  (r5 I:java.util.Map\<java.lang.String, java.lang.Integer[]\>)\l  (r1 I:com.google.android.gms.stats.WakeLock)\l com.google.android.gms.stats.WakeLock.zzj java.util.Map \l0x000f: NEW_INSTANCE  (r5 I:java.util.HashSet) =  java.util.HashSet \l0x0011: INVOKE  (r5 I:java.util.HashSet) java.util.HashSet.\<init\>():void type: DIRECT \l0x0014: INVOKE  (r5 I:java.util.Set) = (r5 I:java.util.Set) java.util.Collections.synchronizedSet(java.util.Set):java.util.Set type: STATIC \l0x0018: IPUT  \l  (r5 I:java.util.Set\<java.util.concurrent.Future\<?\>\>)\l  (r1 I:com.google.android.gms.stats.WakeLock)\l com.google.android.gms.stats.WakeLock.zzk java.util.Set \l0x001a: NEW_INSTANCE  (r5 I:java.util.concurrent.atomic.AtomicInteger) =  java.util.concurrent.atomic.AtomicInteger \l0x001c: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001d: INVOKE  \l  (r5 I:java.util.concurrent.atomic.AtomicInteger)\l  (r7 I:int)\l java.util.concurrent.atomic.AtomicInteger.\<init\>(int):void type: DIRECT \l0x0020: IPUT  \l  (r5 I:java.util.concurrent.atomic.AtomicInteger)\l  (r1 I:com.google.android.gms.stats.WakeLock)\l com.google.android.gms.stats.WakeLock.zzm java.util.concurrent.atomic.AtomicInteger \l0x0022: CONST_STR  (r5 I:java.lang.String) =  \"WakeLock: context must not be null\" \l0x0024: INVOKE  (r2 I:java.lang.Object), (r5 I:java.lang.Object) com.google.android.gms.common.internal.Preconditions.checkNotNull(java.lang.Object, java.lang.Object):java.lang.Object type: STATIC \l0x0027: CONST_STR  (r5 I:java.lang.String) =  \"WakeLock: wakeLockName must not be empty\" \l0x0029: INVOKE  (r4 I:java.lang.String), (r5 I:java.lang.Object) com.google.android.gms.common.internal.Preconditions.checkNotEmpty(java.lang.String, java.lang.Object):java.lang.String type: STATIC \l0x002c: IPUT  (r3 I:int), (r1 I:com.google.android.gms.stats.WakeLock) com.google.android.gms.stats.WakeLock.zzd int \l0x002e: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: IPUT  \l  (r5 I:java.lang.String)\l  (r1 I:com.google.android.gms.stats.WakeLock)\l com.google.android.gms.stats.WakeLock.zzf java.lang.String \l0x0031: IPUT  \l  (r5 I:java.lang.String)\l  (r1 I:com.google.android.gms.stats.WakeLock)\l com.google.android.gms.stats.WakeLock.zzg java.lang.String \l0x0033: INVOKE  (r5 I:android.content.Context) = (r2 I:android.content.Context) android.content.Context.getApplicationContext():android.content.Context type: VIRTUAL \l0x0037: IPUT  \l  (r5 I:android.content.Context)\l  (r1 I:com.google.android.gms.stats.WakeLock)\l com.google.android.gms.stats.WakeLock.zzh android.content.Context \l0x0039: CONST_STR  (r5 I:java.lang.String) =  \"com.google.android.gms\" \l0x003b: INVOKE  (r7 I:java.lang.String) = (r2 I:android.content.Context) android.content.Context.getPackageName():java.lang.String type: VIRTUAL \l0x003f: INVOKE  (r5 I:boolean) = (r5 I:java.lang.String), (r7 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0043|0x0043: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0063 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0045|0x0045: CONST_STR  (r5 I:java.lang.String) =  \"*gcore*:\" \l0x0047: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l0x004b: INVOKE  (r7 I:java.lang.String) = (r4 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l0x004f: INVOKE  (r0 I:int) = (r7 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0053|0x0053: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x005a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0055|0x0055: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.String), (r7 I:java.lang.String) java.lang.String.concat(java.lang.String):java.lang.String type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x005a|0x005a: NEW_INSTANCE  (r7 I:java.lang.String) =  java.lang.String \l0x005c: INVOKE  (r7 I:java.lang.String), (r5 I:java.lang.String) java.lang.String.\<init\>(java.lang.String):void type: DIRECT \l0x005f: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0060|0x0060: IPUT  \l  (r5 I:java.lang.String)\l  (r1 I:com.google.android.gms.stats.WakeLock)\l com.google.android.gms.stats.WakeLock.zze java.lang.String \l}"];
Node_7 [shape=record,label="{7\:\ 0x0063|0x0063: IPUT  \l  (r4 I:java.lang.String)\l  (r1 I:com.google.android.gms.stats.WakeLock)\l com.google.android.gms.stats.WakeLock.zze java.lang.String \l}"];
Node_8 [shape=record,label="{8\:\ 0x0065|0x0065: CONST_STR  (r5 I:java.lang.String) =  \"power\" \l0x0067: INVOKE  (r5 I:java.lang.Object) = (r2 I:android.content.Context), (r5 I:java.lang.String) android.content.Context.getSystemService(java.lang.String):java.lang.Object type: VIRTUAL \l0x006b: CHECK_CAST  (r5 I:android.os.PowerManager) = (android.os.PowerManager) (r5 I:?[OBJECT, ARRAY]) \l0x006d: INVOKE  (r3 I:android.os.PowerManager$WakeLock) = \l  (r5 I:android.os.PowerManager)\l  (r3 I:int)\l  (r4 I:java.lang.String)\l android.os.PowerManager.newWakeLock(int, java.lang.String):android.os.PowerManager$WakeLock type: VIRTUAL \l0x0071: IPUT  \l  (r3 I:android.os.PowerManager$WakeLock)\l  (r1 I:com.google.android.gms.stats.WakeLock)\l com.google.android.gms.stats.WakeLock.zzb android.os.PowerManager$WakeLock \l0x0073: INVOKE  (r3 I:boolean) = (r2 I:android.content.Context) com.google.android.gms.common.util.WorkSourceUtil.hasWorkSourcePermission(android.content.Context):boolean type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0077|0x0077: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x00b3 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0079|0x0079: INVOKE  (r3 I:boolean) = (r6 I:java.lang.String) com.google.android.gms.common.util.Strings.isEmptyOrWhitespace(java.lang.String):boolean type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x007d|0x007d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0083 \l}"];
Node_12 [shape=record,label="{12\:\ 0x007f|0x007f: INVOKE  (r6 I:java.lang.String) = (r2 I:android.content.Context) android.content.Context.getPackageName():java.lang.String type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0083|0x0083: INVOKE  (r2 I:android.os.WorkSource) = (r2 I:android.content.Context), (r6 I:java.lang.String) com.google.android.gms.common.util.WorkSourceUtil.fromPackage(android.content.Context, java.lang.String):android.os.WorkSource type: STATIC \l0x0087: IPUT  \l  (r2 I:android.os.WorkSource)\l  (r1 I:com.google.android.gms.stats.WakeLock)\l com.google.android.gms.stats.WakeLock.zzc android.os.WorkSource \l0x0089: IGET  (r2 I:android.os.WorkSource) = (r1 I:com.google.android.gms.stats.WakeLock) com.google.android.gms.stats.WakeLock.zzc android.os.WorkSource \l}"];
Node_14 [shape=record,label="{14\:\ 0x008b|0x008b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x00b3 \l}"];
Node_15 [shape=record,label="{15\:\ 0x008d|0x008d: IGET  (r3 I:android.content.Context) = (r1 I:com.google.android.gms.stats.WakeLock) com.google.android.gms.stats.WakeLock.zzh android.content.Context \l0x008f: INVOKE  (r3 I:boolean) = (r3 I:android.content.Context) com.google.android.gms.common.util.WorkSourceUtil.hasWorkSourcePermission(android.content.Context):boolean type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0093|0x0093: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x00b3 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0095|0x0095: IGET  (r3 I:android.os.WorkSource) = (r1 I:com.google.android.gms.stats.WakeLock) com.google.android.gms.stats.WakeLock.zzc android.os.WorkSource \l}"];
Node_18 [shape=record,label="{18\:\ 0x0097|0x0097: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x009f \l}"];
Node_19 [shape=record,label="{19\:\ 0x0099|0x0099: IGET  (r3 I:android.os.WorkSource) = (r1 I:com.google.android.gms.stats.WakeLock) com.google.android.gms.stats.WakeLock.zzc android.os.WorkSource \l0x009b: INVOKE  (r3 I:android.os.WorkSource), (r2 I:android.os.WorkSource) android.os.WorkSource.add(android.os.WorkSource):boolean type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x009f|0x009f: IPUT  \l  (r2 I:android.os.WorkSource)\l  (r1 I:com.google.android.gms.stats.WakeLock)\l com.google.android.gms.stats.WakeLock.zzc android.os.WorkSource \l}"];
Node_21 [shape=record,label="{21\:\ 0x00a1|0x00a1: IGET  (r2 I:android.os.WorkSource) = (r1 I:com.google.android.gms.stats.WakeLock) com.google.android.gms.stats.WakeLock.zzc android.os.WorkSource \l}"];
Node_22 [shape=record,label="{22\:\ 0x00a3|SYNTHETIC\lSplitter:B:22:0x00a3\l}"];
Node_23 [shape=record,label="{23\:\ ?|Splitter:B:22:0x00a3\l|0x00a3: IGET  (r3 I:android.os.PowerManager$WakeLock) = (r1 I:com.google.android.gms.stats.WakeLock) com.google.android.gms.stats.WakeLock.zzb android.os.PowerManager$WakeLock A[Catch:\{ ArrayIndexOutOfBoundsException \| IllegalArgumentException \-\> 0x00a9 \}, TRY_ENTER]\l0x00a5: INVOKE  \l  (r3 I:android.os.PowerManager$WakeLock)\l  (r2 I:android.os.WorkSource)\l android.os.PowerManager.WakeLock.setWorkSource(android.os.WorkSource):void type: VIRTUAL A[Catch:\{ ArrayIndexOutOfBoundsException \| IllegalArgumentException \-\> 0x00a9 \}, TRY_LEAVE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x00a9|ExcHandler: ArrayIndexOutOfBoundsException \| IllegalArgumentException null\lSplitter:B:22:0x00a3\l|0x00a9: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_26 [shape=record,label="{26\:\ 0x00aa|0x00aa: CONST_STR  (r3 I:java.lang.String) =  \"WakeLock\" \l0x00ac: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.RuntimeException) java.lang.RuntimeException.toString():java.lang.String type: VIRTUAL \l0x00b0: INVOKE  (r3 I:java.lang.String), (r2 I:java.lang.String) android.util.Log.wtf(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_27 [shape=record,label="{27\:\ 0x00b3|0x00b3: SGET  (r2 I:java.util.concurrent.ScheduledExecutorService) =  com.google.android.gms.stats.WakeLock.zzn java.util.concurrent.ScheduledExecutorService \l}"];
Node_28 [shape=record,label="{28\:\ 0x00b5|0x00b5: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x00c1 \l}"];
Node_29 [shape=record,label="{29\:\ 0x00b7|0x00b7: INVOKE  (r2 I:com.google.android.gms.common.providers.PooledExecutorsProvider$PooledExecutorFactory) =  com.google.android.gms.common.providers.PooledExecutorsProvider.getInstance():com.google.android.gms.common.providers.PooledExecutorsProvider$PooledExecutorFactory type: STATIC \l0x00bb: INVOKE  (r2 I:java.util.concurrent.ScheduledExecutorService) = \l  (r2 I:com.google.android.gms.common.providers.PooledExecutorsProvider$PooledExecutorFactory)\l com.google.android.gms.common.providers.PooledExecutorsProvider.PooledExecutorFactory.newSingleThreadScheduledExecutor():java.util.concurrent.ScheduledExecutorService type: INTERFACE \l0x00bf: SPUT  (r2 I:java.util.concurrent.ScheduledExecutorService) com.google.android.gms.stats.WakeLock.zzn java.util.concurrent.ScheduledExecutorService \l}"];
Node_30 [shape=record,label="{30\:\ 0x00c1|0x00c1: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.gms.stats.WakeLock.\<init\>((r1 'this' I:com.google.android.gms.stats.WakeLock A[IMMUTABLE_TYPE, THIS]), (r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], , Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[BUILD, android.annotation.SuppressLint, \{value=[UnwrappedWakeLock]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_27;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_27;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_27;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_25;
Node_23 -> Node_25;
Node_23 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
}

