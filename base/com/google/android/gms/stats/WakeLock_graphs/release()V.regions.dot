digraph "CFG forcom.google.android.gms.stats.WakeLock.release()V" {
subgraph cluster_Region_794880689 {
label = "R(4:(1:2)|3|20|22) | DECL_VAR: boolean null\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_647554275 {
label = "IF [B:1:0x0006] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r12.zzm.decrementAndGet() \< 0) goto L_0x0008\l}"];
subgraph cluster_Region_497794475 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|android.util.Log.e(\"WakeLock\", java.lang.String.valueOf(r12.zze).concat(\" release without a matched acquire!\"))\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0019|java.lang.String java.lang.String r6 = zza((java.lang.String) null)\l}"];
subgraph cluster_SynchronizedRegion_2022941537 {
label = "Synchronized:R(2:4|(2:(3:8|(1:(1:13)(1:14))|10)|(0)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0020}"];
subgraph cluster_Region_522448429 {
label = "R(2:(3:8|(1:(1:13)(1:14))|10)|(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2130558678 {
label = "IF [B:7:0x0025] THEN: R(3:8|(1:(1:13)(1:14))|10) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0025|if (r12.zzi == true) goto L_0x0027\l}"];
subgraph cluster_Region_249442824 {
label = "R(3:8|(1:(1:13)(1:14))|10)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0027|java.lang.Integer[] java.lang.Integer[] r1 = r12.zzj.get(r6)\l}"];
subgraph cluster_IfRegion_506433751 {
label = "IF [B:9:0x002f] THEN: R(1:(1:13)(1:14)) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002f|if (r1 != null) goto L_0x0033\l}"];
subgraph cluster_Region_1048248903 {
label = "R(1:(1:13)(1:14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_917685441 {
label = "IF [B:12:0x0039] THEN: R(1:13) ELSE: R(1:14)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0039|if (r1[0].intValue() == 1) goto L_0x003b\l}"];
subgraph cluster_Region_1928067471 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x003b|r12.zzj.remove(r6)\lr1 = true\l}"];
}
subgraph cluster_Region_1233383021 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0042|r1[0] = java.lang.Integer.valueOf(r1[0].intValue() \- 1)\l}"];
}
}
}
}
Node_10 [shape=record,label="{10\:\ 0x0031|r1 = false\l}"];
}
}
subgraph cluster_IfRegion_1536566850 {
label = "IF [B:17:0x0054] THEN: R(0) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0054|if (r12.zzi == false) goto L_0x0056\l}"];
subgraph cluster_Region_1531247003 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_22 [shape=record,label="{22\:\ 0x007a|zza(0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0021|SYNTHETIC\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0033}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0050|PHI: r1 \l  PHI: (r1v10 boolean) = (r1v12 boolean), (r1v13 boolean) binds: [B:13:0x003b, B:10:0x0031] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != false) goto L_0x005a\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0052}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0056}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0058|if (r12.zzl == 1) goto L_0x005a\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x005a|com.google.android.gms.common.stats.WakeLockTracker.getInstance().registerEvent(r12.zzh, com.google.android.gms.common.stats.StatsUtils.getEventKey(r12.zzb, r6), 8, r12.zze, r6, (java.lang.String) null, r12.zzd, zza())\lr12.zzl\-\-\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0079|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x0079: MONITOR_EXIT  \l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x007d}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x007e|LOOP_START\lREMOVE\lLOOP:0: B:24:0x007e\-\>B:28:0x007e\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x007f|SYNTHETIC\lREMOVE\lSplitter:B:25:0x007f\l}"];
Node_26 [shape=record,color=red,label="{26\:\ ?|REMOVE\lSplitter:B:25:0x007f\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0080|REMOVE\l|throw r1\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x007e|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:24:0x007e\-\>B:28:0x007e\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0080|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x007e|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
MethodNode[shape=record,label="{public void com.google.android.gms.stats.WakeLock.release((r12v0 'this' com.google.android.gms.stats.WakeLock A[IMMUTABLE_TYPE, THIS]))  | INCONSISTENT_CODE\lCode restructure failed: missing block: B:15:0x0050, code lost:\l    if (r1 != false) goto L_0x005a;\l\lCode restructure failed: missing block: B:19:0x0058, code lost:\l    if (r12.zzl == 1) goto L_0x005a;\l\lCode restructure failed: missing block: B:20:0x005a, code lost:\l    com.google.android.gms.common.stats.WakeLockTracker.getInstance().registerEvent(r12.zzh, com.google.android.gms.common.stats.StatsUtils.getEventKey(r12.zzb, r6), 8, r12.zze, r6, (java.lang.String) null, r12.zzd, zza());\l    r12.zzl\-\-;\l\lAnnotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_7 -> Node_8;
Node_7 -> Node_16[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_10;
Node_10 -> Node_15;
Node_17 -> Node_18;
Node_17 -> Node_21[style=dashed];
Node_22 -> Node_23;
Node_0 -> Node_1;
Node_5 -> Node_6;
Node_5 -> Node_24;
Node_6 -> Node_7;
Node_11 -> Node_12;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_28;
Node_26 -> Node_29;
Node_26 -> Node_30;
Node_28 -> Node_24;
Node_29 -> Node_27;
Node_30 -> Node_28;
}

