digraph "CFG forcom.google.android.gms.internal.ads.zzaxj.zzax(Landroid\/content\/Context;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INSTANCE_OF  (r1 I:boolean) = (r6 I:?[OBJECT, ARRAY]) android.app.Activity \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: CHECK_CAST  (r6 I:android.app.Activity) = (android.app.Activity) (r6 I:?[OBJECT, ARRAY]) \l0x0008: INVOKE  (r1 I:android.view.Window) = (r6 I:android.app.Activity) android.app.Activity.getWindow():android.view.Window type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0005 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: INVOKE  (r2 I:android.view.View) = (r1 I:android.view.Window) android.view.Window.getDecorView():android.view.View type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0005 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: NEW_INSTANCE  (r2 I:android.graphics.Rect) =  android.graphics.Rect \l0x0016: INVOKE  (r2 I:android.graphics.Rect) android.graphics.Rect.\<init\>():void type: DIRECT \l0x0019: NEW_INSTANCE  (r3 I:android.graphics.Rect) =  android.graphics.Rect \l0x001b: INVOKE  (r3 I:android.graphics.Rect) android.graphics.Rect.\<init\>():void type: DIRECT \l0x001e: INVOKE  (r4 I:android.view.View) = (r1 I:android.view.Window) android.view.Window.getDecorView():android.view.View type: VIRTUAL \l0x0022: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: INVOKE  \l  (r4 I:android.view.View)\l  (r2 I:android.graphics.Rect)\l  (r5 I:android.graphics.Point)\l android.view.View.getGlobalVisibleRect(android.graphics.Rect, android.graphics.Point):boolean type: VIRTUAL \l0x0026: INVOKE  (r1 I:android.view.View) = (r1 I:android.view.Window) android.view.Window.getDecorView():android.view.View type: VIRTUAL \l0x002a: INVOKE  (r1 I:android.view.View), (r3 I:android.graphics.Rect) android.view.View.getWindowVisibleDisplayFrame(android.graphics.Rect):void type: VIRTUAL \l0x002d: IGET  (r1 I:int) = (r2 I:android.graphics.Rect) android.graphics.Rect.bottom int \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0005 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: IGET  (r1 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.bottom int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|0x0033: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0005 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: IGET  (r1 I:int) = (r2 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0037: IGET  (r2 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.top int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|0x0039: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0005 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|0x003b: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{public static boolean com.google.android.gms.internal.ads.zzaxj.zzax((r6 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_2;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_2;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_2;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_2;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_2;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_2;
}

