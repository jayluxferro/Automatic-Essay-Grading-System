digraph "CFG forcom.google.android.gms.internal.ads.zzdne.zzawp()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r6 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0002: CONST  (r8 I:?[long, double]) = (255(0xff, double:1.26E\-321) ?[long, double]) \l0x0004: IGET  (r0 I:int) = (r10 I:com.google.android.gms.internal.ads.zzdne) com.google.android.gms.internal.ads.zzdne.pos int \l0x0006: IGET  (r1 I:int) = (r10 I:com.google.android.gms.internal.ads.zzdne) com.google.android.gms.internal.ads.zzdne.limit int \l0x0008: ARITH  (r1 I:int) = (r1 I:int) \- (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r1 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:4:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: INVOKE  (r0 I:com.google.android.gms.internal.ads.zzdoj) =  com.google.android.gms.internal.ads.zzdoj.zzayd():com.google.android.gms.internal.ads.zzdoj type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IGET  (r1 I:byte[]) = (r10 I:com.google.android.gms.internal.ads.zzdne) com.google.android.gms.internal.ads.zzdne.buffer byte[] \l0x0012: ARITH  (r2 I:int) = (r0 I:int) + (8 int) \l0x0014: IPUT  \l  (r2 I:int)\l  (r10 I:com.google.android.gms.internal.ads.zzdne)\l com.google.android.gms.internal.ads.zzdne.pos int \l0x0016: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l \l0x0018: CAST  (r2 I:long) = (long) (r2 I:int) \l0x0019: ARITH  (r2 I:long) = (r2 I:long) & (r8 I:long) \l0x001a: ARITH  (r4 I:int) = (r0 I:int) + (1 int) \l0x001c: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x001e: CAST  (r4 I:long) = (long) (r4 I:int) \l0x001f: ARITH  (r4 I:long) = (r4 I:long) & (r8 I:long) \l0x0020: ARITH  (r4 I:long) = (r4 I:long) \<\< (r6 I:long) \l0x0021: ARITH  (r2 I:long) = (r2 I:long) \| (r4 I:long) \l0x0022: ARITH  (r4 I:int) = (r0 I:int) + (2 int) \l0x0024: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x0026: CAST  (r4 I:long) = (long) (r4 I:int) \l0x0027: ARITH  (r4 I:long) = (r4 I:long) & (r8 I:long) \l0x0028: CONST  (r6 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x002a: ARITH  (r4 I:long) = (r4 I:long) \<\< (r6 I:long) \l0x002b: ARITH  (r2 I:long) = (r2 I:long) \| (r4 I:long) \l0x002c: ARITH  (r4 I:int) = (r0 I:int) + (3 int) \l0x002e: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x0030: CAST  (r4 I:long) = (long) (r4 I:int) \l0x0031: ARITH  (r4 I:long) = (r4 I:long) & (r8 I:long) \l0x0032: CONST  (r6 I:?[int, float, short, byte, char]) = (24 ?[int, float, short, byte, char]) \l0x0034: ARITH  (r4 I:long) = (r4 I:long) \<\< (r6 I:long) \l0x0035: ARITH  (r2 I:long) = (r2 I:long) \| (r4 I:long) \l0x0036: ARITH  (r4 I:int) = (r0 I:int) + (4 int) \l0x0038: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x003a: CAST  (r4 I:long) = (long) (r4 I:int) \l0x003b: ARITH  (r4 I:long) = (r4 I:long) & (r8 I:long) \l0x003c: CONST  (r6 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x003e: ARITH  (r4 I:long) = (r4 I:long) \<\< (r6 I:long) \l0x003f: ARITH  (r2 I:long) = (r2 I:long) \| (r4 I:long) \l0x0040: ARITH  (r4 I:int) = (r0 I:int) + (5 int) \l0x0042: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x0044: CAST  (r4 I:long) = (long) (r4 I:int) \l0x0045: ARITH  (r4 I:long) = (r4 I:long) & (r8 I:long) \l0x0046: CONST  (r6 I:?[int, float, short, byte, char]) = (40 ?[int, float, short, byte, char]) \l0x0048: ARITH  (r4 I:long) = (r4 I:long) \<\< (r6 I:long) \l0x0049: ARITH  (r2 I:long) = (r2 I:long) \| (r4 I:long) \l0x004a: ARITH  (r4 I:int) = (r0 I:int) + (6 int) \l0x004c: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x004e: CAST  (r4 I:long) = (long) (r4 I:int) \l0x004f: ARITH  (r4 I:long) = (r4 I:long) & (r8 I:long) \l0x0050: CONST  (r6 I:?[int, float, short, byte, char]) = (48 ?[int, float, short, byte, char]) \l0x0052: ARITH  (r4 I:long) = (r4 I:long) \<\< (r6 I:long) \l0x0053: ARITH  (r2 I:long) = (r2 I:long) \| (r4 I:long) \l0x0054: ARITH  (r0 I:int) = (r0 I:int) + (7 int) \l0x0056: AGET  (r0 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l \l0x0058: CAST  (r0 I:long) = (long) (r0 I:int) \l0x0059: ARITH  (r0 I:long) = (r0 I:long) & (r8 I:long) \l0x005a: CONST  (r4 I:?[int, float, short, byte, char]) = (56 ?[int, float, short, byte, char]) \l0x005c: ARITH  (r0 I:long) = (r0 I:long) \<\< (r4 I:long) \l0x005d: ARITH  (r0 I:long) = (r0 I:long) \| (r2 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x005e|0x005e: RETURN  (r0 I:long) \l}"];
MethodNode[shape=record,label="{private final long com.google.android.gms.internal.ads.zzdne.zzawp((r10 'this' I:com.google.android.gms.internal.ads.zzdne A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

