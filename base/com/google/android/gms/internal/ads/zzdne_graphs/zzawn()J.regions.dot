digraph "CFG forcom.google.android.gms.internal.ads.zzdne.zzawn()J" {
subgraph cluster_Region_1670710627 {
label = "R(3:0|(2:2|(2:4|35)(1:(4:7|(1:9)(2:11|(1:13)(2:14|(1:16)(2:17|(1:19)(2:20|(1:22)(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34))))))))|10|36)))|37) | DECL_VAR: long null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r10.pos\l}"];
subgraph cluster_IfRegion_888933551 {
label = "IF [B:1:0x0006] THEN: R(2:2|(2:4|35)(1:(4:7|(1:9)(2:11|(1:13)(2:14|(1:16)(2:17|(1:19)(2:20|(1:22)(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34))))))))|10|36))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r10.limit != r0) goto L_0x0008\l}"];
subgraph cluster_Region_1002670903 {
label = "R(2:2|(2:4|35)(1:(4:7|(1:9)(2:11|(1:13)(2:14|(1:16)(2:17|(1:19)(2:20|(1:22)(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34))))))))|10|36)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|byte[] byte[] r4 = r10.buffer\lint int r1 = r0 + 1\lbyte byte r0 = r4[r0]\l}"];
subgraph cluster_IfRegion_933162804 {
label = "IF [B:3:0x000e] THEN: R(2:4|35) ELSE: R(1:(4:7|(1:9)(2:11|(1:13)(2:14|(1:16)(2:17|(1:19)(2:20|(1:22)(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34))))))))|10|36))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r0 \>= 0) goto L_0x0010\l}"];
subgraph cluster_Region_113066885 {
label = "R(2:4|35)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|r10.pos = r1\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return (long) r0\l}"];
}
subgraph cluster_Region_666822930 {
label = "R(1:(4:7|(1:9)(2:11|(1:13)(2:14|(1:16)(2:17|(1:19)(2:20|(1:22)(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34))))))))|10|36)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1125044758 {
label = "IF [B:6:0x0019] THEN: R(4:7|(1:9)(2:11|(1:13)(2:14|(1:16)(2:17|(1:19)(2:20|(1:22)(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34))))))))|10|36) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0019|if ((r10.limit \- r1) \>= 9) goto L_0x001b\l}"];
subgraph cluster_Region_1684419069 {
label = "R(4:7|(1:9)(2:11|(1:13)(2:14|(1:16)(2:17|(1:19)(2:20|(1:22)(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34))))))))|10|36)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001b|int int r2 = r1 + 1\lbyte r0 = r0 ^ (r4[r1] \<\< 7)\l}"];
subgraph cluster_IfRegion_97238366 {
label = "IF [B:8:0x0022] THEN: R(1:9) ELSE: R(2:11|(1:13)(2:14|(1:16)(2:17|(1:19)(2:20|(1:22)(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34))))))))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0022|if (r0 \< 0) goto L_0x0024\l}"];
subgraph cluster_Region_328198372 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0024|long r0 = (long) (r0 ^ Byte.MIN_VALUE)\l}"];
}
subgraph cluster_Region_789814799 {
label = "R(2:11|(1:13)(2:14|(1:16)(2:17|(1:19)(2:20|(1:22)(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34))))))))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002a|int int r3 = r2 + 1\lbyte r0 = r0 ^ (r4[r2] \<\< 14)\l}"];
subgraph cluster_IfRegion_2014645264 {
label = "IF [B:12:0x0031] THEN: R(1:13) ELSE: R(2:14|(1:16)(2:17|(1:19)(2:20|(1:22)(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34)))))))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0031|if (r0 \>= 0) goto L_0x0033\l}"];
subgraph cluster_Region_2036322120 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0033|long r0 = (long) (r0 ^ 16256)\lr2 = r3\l}"];
}
subgraph cluster_Region_2078172726 {
label = "R(2:14|(1:16)(2:17|(1:19)(2:20|(1:22)(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34)))))))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0038|int r2 = r3 + 1\lbyte r0 = r0 ^ (r4[r3] \<\< 21)\l}"];
subgraph cluster_IfRegion_2134354389 {
label = "IF [B:15:0x003f] THEN: R(1:16) ELSE: R(2:17|(1:19)(2:20|(1:22)(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34))))))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x003f|if (r0 \< 0) goto L_0x0041\l}"];
subgraph cluster_Region_659474976 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0041|long r0 = (long) (r0 ^ \-2080896)\l}"];
}
subgraph cluster_Region_1558433865 {
label = "R(2:17|(1:19)(2:20|(1:22)(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34))))))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0047|int int r3 = r2 + 1\llong long r0 = ((long) r0) ^ (((long) r4[r2]) \<\< 28)\l}"];
subgraph cluster_IfRegion_1273679589 {
label = "IF [B:18:0x0053] THEN: R(1:19) ELSE: R(2:20|(1:22)(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34)))))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0053|if (r0 \>= 0) goto L_0x0055\l}"];
subgraph cluster_Region_130910098 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0055|long r0 = r0 ^ 266354560\lr2 = r3\l}"];
}
subgraph cluster_Region_157281265 {
label = "R(2:20|(1:22)(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34)))))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x005b|int r2 = r3 + 1\llong long r0 = r0 ^ (((long) r4[r3]) \<\< 35)\l}"];
subgraph cluster_IfRegion_458178052 {
label = "IF [B:21:0x0066] THEN: R(1:22) ELSE: R(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34))))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0066|if (r0 \< 0) goto L_0x0068\l}"];
subgraph cluster_Region_1509184953 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0068|long r0 = r0 ^ \-34093383808L\l}"];
}
subgraph cluster_Region_982511411 {
label = "R(2:23|(1:25)(2:26|(1:28)(2:29|(1:31)(1:34))))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x006f|int int r3 = r2 + 1\llong long r0 = r0 ^ (((long) r4[r2]) \<\< 42)\l}"];
subgraph cluster_IfRegion_146443117 {
label = "IF [B:24:0x007a] THEN: R(1:25) ELSE: R(2:26|(1:28)(2:29|(1:31)(1:34)))";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x007a|if (r0 \>= 0) goto L_0x007c\l}"];
subgraph cluster_Region_1198139140 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x007c|long r0 = r0 ^ 4363953127296L\lr2 = r3\l}"];
}
subgraph cluster_Region_845730178 {
label = "R(2:26|(1:28)(2:29|(1:31)(1:34)))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0084|int r2 = r3 + 1\llong long r0 = r0 ^ (((long) r4[r3]) \<\< 49)\l}"];
subgraph cluster_IfRegion_356184441 {
label = "IF [B:27:0x008f] THEN: R(1:28) ELSE: R(2:29|(1:31)(1:34))";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x008f|if (r0 \< 0) goto L_0x0091\l}"];
subgraph cluster_Region_2003260100 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0091|long r0 = r0 ^ \-558586000294016L\l}"];
}
subgraph cluster_Region_1883975198 {
label = "R(2:29|(1:31)(1:34))";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0098|int int r3 = r2 + 1\llong r0 = (r0 ^ (((long) r4[r2]) \<\< 56)) ^ 71499008037633920L\l}"];
subgraph cluster_IfRegion_504253962 {
label = "IF [B:30:0x00a9] THEN: R(1:31) ELSE: R(1:34)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x00a9|if (r0 \< 0) goto L_0x00ab\l}"];
subgraph cluster_Region_1916912952 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x00ab|int r2 = r3 + 1\l}"];
}
subgraph cluster_Region_512498695 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x00ba|r2 = r3\l}"];
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
Node_10 [shape=record,label="{10\:\ 0x0027|PHI: r0 r2 \l  PHI: (r0v21 long) = (r0v12 long), (r0v12 long), (r0v13 long), (r0v14 long), (r0v15 long), (r0v16 long), (r0v18 long), (r0v20 long), (r0v23 long) binds: [B:34:0x00ba, B:32:0x00b2, B:28:0x0091, B:25:0x007c, B:22:0x0068, B:19:0x0055, B:16:0x0041, B:13:0x0033, B:9:0x0024] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v20 int) = (r2v15 int), (r2v16 int), (r2v11 int), (r2v17 int), (r2v7 int), (r2v18 int), (r2v3 int), (r2v19 int), (r2v2 int) binds: [B:34:0x00ba, B:32:0x00b2, B:28:0x0091, B:25:0x007c, B:22:0x0068, B:19:0x0055, B:16:0x0041, B:13:0x0033, B:9:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|r10.pos = r2\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
}
}
}
}
}
}
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return zzawj()\l}"];
}
Node_5 [shape=record,color=red,label="{5\:\ 0x0014}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x00b2|if (((long) r4[r3]) \< 0) goto L_0x00b4\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x00b4}"];
MethodNode[shape=record,label="{private final long com.google.android.gms.internal.ads.zzdne.zzawn((r10v0 'this' com.google.android.gms.internal.ads.zzdne A[IMMUTABLE_TYPE, THIS]))  | INCONSISTENT_CODE\lCode restructure failed: missing block: B:32:0x00b2, code lost:\l    if (((long) r4[r3]) \< 0) goto L_0x00b4;\l\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_33[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_35;
Node_6 -> Node_7;
Node_6 -> Node_33[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_11[style=dashed];
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_10;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_10;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_10;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_10;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_10;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_10;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_34[style=dashed];
Node_31 -> Node_32;
Node_34 -> Node_10;
Node_10 -> Node_36;
Node_5 -> Node_6;
Node_32 -> Node_10[style=dashed];
Node_32 -> Node_33;
Node_33 -> Node_37;
}

