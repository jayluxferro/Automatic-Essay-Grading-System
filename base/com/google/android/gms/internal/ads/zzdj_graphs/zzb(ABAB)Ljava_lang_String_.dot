digraph "CFG forcom.google.android.gms.internal.ads.zzdj.zzb([B[B)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r6.length == 16) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x000a|throw new com.google.android.gms.internal.ads.zzdk(r5)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|SYNTHETIC\lSplitter:B:4:0x000b\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\lSplitter:B:4:0x000b\l|javax.crypto.spec.SecretKeySpec r0 = new javax.crypto.spec.SecretKeySpec(r6, \"AES\")     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\ljava.lang.Object r1 = zzws     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\l|monitor\-enter(r1)     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\l|getCipher().init(1, r0, (java.security.SecureRandom) null)     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\lbyte[] r0 = getCipher().doFinal(r7)     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\lbyte[] r2 = getCipher().getIV()     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\l|monitor\-exit(r1)     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|SYNTHETIC\lSplitter:B:10:0x002f\l}"];
Node_11 [shape=record,label="{11\:\ ?|Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\lSplitter:B:10:0x002f\l|int r1 = r0.length + r2.length     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\ljava.nio.ByteBuffer r3 = java.nio.ByteBuffer.allocate(r1)     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\lr3.put(r2).put(r0)     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\lr3.flip()     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\lbyte[] r0 = new byte[r1]     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\lr3.get(r0)     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x004a|RETURN\l|return com.google.android.gms.internal.ads.zzcg.zza(r0, false)\l}"];
Node_13 [shape=record,label="{13\:\ 0x004b|LOOP_START\lREMOVE\lLOOP:0: B:13:0x004b\-\>B:33:0x004b\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|SYNTHETIC\lREMOVE\lSplitter:B:14:0x004c\l}"];
Node_15 [shape=record,label="{15\:\ ?|REMOVE\lSplitter:B:14:0x004c\l}"];
Node_16 [shape=record,label="{16\:\ 0x004d|SYNTHETIC\lREMOVE\lSplitter:B:16:0x004d\l}"];
Node_17 [shape=record,label="{17\:\ ?|REMOVE\lCatch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\lSplitter:B:16:0x004d\l|throw r0     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004e, InvalidKeyException \-\> 0x0055, IllegalBlockSizeException \-\> 0x005c, NoSuchPaddingException \-\> 0x0063, BadPaddingException \-\> 0x006a \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x004e|ExcHandler: NoSuchAlgorithmException (r0v5 'e' java.security.NoSuchAlgorithmException A[CUSTOM_DECLARE])\lSplitter:B:4:0x000b\l|java.security.NoSuchAlgorithmException r0 = move\-exception\l}"];
Node_19 [shape=record,label="{19\:\ 0x004f}"];
Node_20 [shape=record,label="{20\:\ 0x0054|throw new com.google.android.gms.internal.ads.zzdk(r5, r0)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0055|ExcHandler: InvalidKeyException (r0v4 'e' java.security.InvalidKeyException A[CUSTOM_DECLARE])\lSplitter:B:4:0x000b\l|java.security.InvalidKeyException r0 = move\-exception\l}"];
Node_22 [shape=record,label="{22\:\ 0x0056}"];
Node_23 [shape=record,label="{23\:\ 0x005b|throw new com.google.android.gms.internal.ads.zzdk(r5, r0)\l}"];
Node_24 [shape=record,label="{24\:\ 0x005c|ExcHandler: IllegalBlockSizeException (r0v3 'e' javax.crypto.IllegalBlockSizeException A[CUSTOM_DECLARE])\lSplitter:B:4:0x000b\l|javax.crypto.IllegalBlockSizeException r0 = move\-exception\l}"];
Node_25 [shape=record,label="{25\:\ 0x005d}"];
Node_26 [shape=record,label="{26\:\ 0x0062|throw new com.google.android.gms.internal.ads.zzdk(r5, r0)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0063|ExcHandler: NoSuchPaddingException (r0v2 'e' javax.crypto.NoSuchPaddingException A[CUSTOM_DECLARE])\lSplitter:B:4:0x000b\l|javax.crypto.NoSuchPaddingException r0 = move\-exception\l}"];
Node_28 [shape=record,label="{28\:\ 0x0064}"];
Node_29 [shape=record,label="{29\:\ 0x0069|throw new com.google.android.gms.internal.ads.zzdk(r5, r0)\l}"];
Node_30 [shape=record,label="{30\:\ 0x006a|ExcHandler: BadPaddingException (r0v1 'e' javax.crypto.BadPaddingException A[CUSTOM_DECLARE])\lSplitter:B:4:0x000b\l|javax.crypto.BadPaddingException r0 = move\-exception\l}"];
Node_31 [shape=record,label="{31\:\ 0x006b}"];
Node_32 [shape=record,label="{32\:\ 0x0070|throw new com.google.android.gms.internal.ads.zzdk(r5, r0)\l}"];
Node_33 [shape=record,label="{33\:\ 0x004b|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:13:0x004b\-\>B:33:0x004b\l}"];
Node_34 [shape=record,label="{34\:\ 0x004b|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
MethodNode[shape=record,label="{public final java.lang.String com.google.android.gms.internal.ads.zzdj.zzb((r5v0 'this' com.google.android.gms.internal.ads.zzdj A[IMMUTABLE_TYPE, THIS]), (r6v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.gms.internal.ads.zzdk]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_18;
Node_4 -> Node_21;
Node_4 -> Node_24;
Node_4 -> Node_27;
Node_4 -> Node_30;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_18;
Node_10 -> Node_21;
Node_10 -> Node_24;
Node_10 -> Node_27;
Node_10 -> Node_30;
Node_11 -> Node_18;
Node_11 -> Node_21;
Node_11 -> Node_24;
Node_11 -> Node_27;
Node_11 -> Node_30;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_33;
Node_15 -> Node_16;
Node_15 -> Node_34;
Node_16 -> Node_17;
Node_16 -> Node_18;
Node_16 -> Node_21;
Node_16 -> Node_24;
Node_16 -> Node_27;
Node_16 -> Node_30;
Node_17 -> Node_18;
Node_17 -> Node_21;
Node_17 -> Node_24;
Node_17 -> Node_27;
Node_17 -> Node_30;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_33 -> Node_13;
Node_34 -> Node_33;
}

