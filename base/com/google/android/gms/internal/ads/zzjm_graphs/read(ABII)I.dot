digraph "CFG forcom.google.android.gms.internal.ads.zzjm.read([BII)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if ((r6.zzapc \> 0 ? 1 : (r6.zzapc == 0 ? 0 : \-1)) != 0) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|SYNTHETIC\lRETURN\lORIG_RETURN\l|return \-1\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|SYNTHETIC\lSplitter:B:3:0x000a\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ IOException \-\> 0x002a \}\lSplitter:B:3:0x000a\l|int r0 = r6.zzapb.read(r7, r8, (int) java.lang.Math.min(r6.zzapc, (long) r9))     \/\/ Catch:\{ IOException \-\> 0x002a \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r0 \<= 0) goto L_?\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|r6.zzapc = r6.zzapc \- ((long) r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|if (r6.zzaoz == null) goto L_?\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|r6.zzaoz.zzab(r0)\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|ExcHandler: IOException (r0v2 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:3:0x000a\l|java.io.IOException r0 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b}"];
Node_11 [shape=record,label="{11\:\ 0x0030|throw new com.google.android.gms.internal.ads.zzjn(r0)\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public final int com.google.android.gms.internal.ads.zzjm.read((r6v0 'this' com.google.android.gms.internal.ads.zzjm A[IMMUTABLE_TYPE, THIS]), (r7v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.gms.internal.ads.zzjn]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_9;
Node_4 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

