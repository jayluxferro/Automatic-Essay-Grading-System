digraph "CFG forcom.google.android.gms.internal.ads.zzst.zzgh()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:long) = (r5 I:com.google.android.gms.internal.ads.zzst) com.google.android.gms.internal.ads.zzst.readLong():long type: VIRTUAL \l0x0004: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0006: CMP_L  (r2 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:4:0x0025 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: NEW_INSTANCE  (r2 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x000c: CONST  (r3 I:?[int, float, short, byte, char]) = (38 ?[int, float, short, byte, char]) \l0x000e: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0010: INVOKE  (r4 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.\<init\>(int):void type: DIRECT \l0x0013: CONST_STR  (r3 I:java.lang.String) =  \"Top bit not zero: \" \l0x0015: INVOKE  (r3 I:java.lang.StringBuilder) = (r4 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0019: INVOKE  (r0 I:java.lang.StringBuilder) = (r3 I:java.lang.StringBuilder), (r0 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x001d: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0021: INVOKE  \l  (r2 I:java.lang.IllegalStateException)\l  (r0 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|0x0024: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: RETURN  (r0 I:long) \l}"];
MethodNode[shape=record,label="{public final long com.google.android.gms.internal.ads.zzst.zzgh((r5 'this' I:com.google.android.gms.internal.ads.zzst A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

