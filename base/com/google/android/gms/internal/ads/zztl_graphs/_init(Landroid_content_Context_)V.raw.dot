digraph "CFG forcom.google.android.gms.internal.ads.zztl.\<init\>(Landroid\/content\/Context;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"window\" \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r3 I:android.content.Context), (r0 I:java.lang.String) android.content.Context.getSystemService(java.lang.String):java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:android.view.WindowManager) = (android.view.WindowManager) (r0 I:?[OBJECT, ARRAY]) \l0x0008: INVOKE  (r1 I:android.view.Display) = (r0 I:android.view.WindowManager) android.view.WindowManager.getDefaultDisplay():android.view.Display type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: INVOKE  (r0 I:android.view.Display) = (r0 I:android.view.WindowManager) android.view.WindowManager.getDefaultDisplay():android.view.Display type: INTERFACE \l0x0012: INVOKE  (r0 I:float) = (r0 I:android.view.Display) android.view.Display.getRefreshRate():float type: VIRTUAL \l0x0016: CAST  (r0 I:double) = (double) (r0 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: INVOKE  \l  (r2 I:com.google.android.gms.internal.ads.zztl)\l  (r0 I:double)\l com.google.android.gms.internal.ads.zztl.\<init\>(double):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: CONST  (r0 I:?[long, double]) = \l  (\-4616189618054758400(0xbff0000000000000, double:\-1.0) ?[long, double])\l \l}"];
MethodNode[shape=record,label="{public void com.google.android.gms.internal.ads.zztl.\<init\>((r2 'this' I:com.google.android.gms.internal.ads.zztl A[IMMUTABLE_TYPE, THIS]), (r3 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_3;
}

