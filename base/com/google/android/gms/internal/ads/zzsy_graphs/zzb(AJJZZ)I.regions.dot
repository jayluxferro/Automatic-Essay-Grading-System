digraph "CFG forcom.google.android.gms.internal.ads.zzsy.zzb([JJZZ)I" {
subgraph cluster_Region_1072241988 {
label = "R(3:0|(1:2)(2:(4:5|(1:(1:10))|5|11)|(0))|3)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = java.util.Arrays.binarySearch(r5, r6)\l}"];
subgraph cluster_IfRegion_1472573467 {
label = "IF [B:1:0x0004] THEN: R(1:2) ELSE: R(2:(4:5|(1:(1:10))|5|11)|(0))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 \< 0) goto L_0x0006\l}"];
subgraph cluster_Region_540121700 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|r0 ^= \-1\l}"];
}
subgraph cluster_Region_189998257 {
label = "R(2:(4:5|(1:(1:10))|5|11)|(0))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_410148766 {
label = "LOOP:0: (4:5|(1:(1:10))|5|11)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001b|LOOP_END\lLOOP:0: B:5:0x0012\-\>B:8:0x001b\l|if (r5[r0] != r6) goto L_0x001d\l}"];
subgraph cluster_Region_1460870496 {
label = "R(4:5|(1:(1:10))|5|11)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:1:0x0004, B:8:0x001b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0012\-\>B:8:0x001b\l|r0++\l}"];
subgraph cluster_IfRegion_243222655 {
label = "IF [B:6:0x0015, B:8:0x001b] THEN: R(1:(1:10)) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|ADDED_TO_REGION\l|if (r0 \>= r5.length) goto L_0x001d\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|LOOP_END\lLOOP:0: B:5:0x0012\-\>B:8:0x001b\l|if (r5[r0] != r6) goto L_0x001d\l}"];
subgraph cluster_Region_1073889709 {
label = "R(1:(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_192551938 {
label = "IF [B:9:0x001d] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001d|EDGE_INSN: B:11:0x001d\-\>B:9:0x001d ?: BREAK  \l|if (r8 == true) goto L_0x001f\l}"];
subgraph cluster_Region_912527328 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001f|r0\-\-\l}"];
}
}
}
}
Node_5 [shape=record,label="{5\:\ 0x0012|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:1:0x0004, B:8:0x001b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0012\-\>B:8:0x001b\l|r0++\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:11:0x001d\-\>B:9:0x001d ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_IfRegion_1760604721 {
label = "IF [B:9:0x001d] THEN: R(0) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001d|EDGE_INSN: B:11:0x001d\-\>B:9:0x001d ?: BREAK  \l|if (r8 == true) goto L_0x001f\l}"];
subgraph cluster_Region_2048161074 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_3 [shape=record,label="{3\:\ 0x0008|RETURN\lPHI: r0 \l  PHI: (r0v4 int) = (r0v2 int), (r0v3 int), (r0v6 int) binds: [B:9:0x001d, B:10:0x001f, B:2:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|return r9 ? java.lang.Math.min(r5.length \- 1, r0) : r0\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ 0x000a}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0017}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x001d|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static int com.google.android.gms.internal.ads.zzsy.zzb((r5v0 long[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lRemoved duplicated region for block: B:10:0x001f \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_2 -> Node_3;
Node_8 -> Node_5[style=dashed];
Node_8 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_8 -> Node_5[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_3[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_3;
Node_5 -> Node_6;
Node_11 -> Node_9;
Node_9 -> Node_3[style=dashed];
Node_9 -> Node_10;
Node_3 -> Node_4;
Node_3 -> Node_14;
Node_4 -> Node_13;
Node_7 -> Node_8;
Node_12 -> Node_9;
}

