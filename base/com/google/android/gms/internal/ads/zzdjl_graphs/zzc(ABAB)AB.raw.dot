digraph "CFG forcom.google.android.gms.internal.ads.zzdjl.zzc([B[B)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r5 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l0x0003: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: ARRAY_LENGTH  (r0 I:int) = (r8 I:?[]) \l0x0005: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (2147483619(0x7fffffe3, float:NaN) ?[int, float, short, byte, char])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:4:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: NEW_INSTANCE  (r0 I:java.security.GeneralSecurityException) =  java.security.GeneralSecurityException \l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"plaintext too long\" \l0x000e: INVOKE  \l  (r0 I:java.security.GeneralSecurityException)\l  (r1 I:java.lang.String)\l java.security.GeneralSecurityException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: ARRAY_LENGTH  (r0 I:int) = (r8 I:?[]) \l0x0013: ARITH  (r0 I:int) = (r0 I:int) + (12 int) \l0x0015: ARITH  (r0 I:int) = (r0 I:int) + (16 int) \l0x0017: NEW_ARRAY  (r4 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0019: INVOKE  (r1 I:byte[]) = (r5 I:int) com.google.android.gms.internal.ads.zzdln.zzff(int):byte[] type: STATIC \l0x001d: INVOKE  \l  (r1 I:java.lang.Object)\l  (r2 I:int)\l  (r4 I:java.lang.Object)\l  (r2 I:int)\l  (r5 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0020: SGET  (r0 I:com.google.android.gms.internal.ads.zzdkw\<com.google.android.gms.internal.ads.zzdky, javax.crypto.Cipher\>) =  com.google.android.gms.internal.ads.zzdkw.zzhap com.google.android.gms.internal.ads.zzdkw \l0x0022: CONST_STR  (r3 I:java.lang.String) =  \"AES\/GCM\/NoPadding\" \l0x0024: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.android.gms.internal.ads.zzdkw)\l  (r3 I:java.lang.String)\l com.google.android.gms.internal.ads.zzdkw.zzgt(java.lang.String):java.lang.Object type: VIRTUAL \l0x0028: CHECK_CAST  (r0 I:javax.crypto.Cipher) = (javax.crypto.Cipher) (r0 I:?[OBJECT, ARRAY]) \l0x002a: ARRAY_LENGTH  (r3 I:int) = (r1 I:?[]) \l0x002b: INVOKE  (r1 I:java.security.spec.AlgorithmParameterSpec) = (r1 I:byte[]), (r2 I:int), (r3 I:int) com.google.android.gms.internal.ads.zzdjl.zzf(byte[], int, int):java.security.spec.AlgorithmParameterSpec type: STATIC \l0x002f: IGET  (r3 I:javax.crypto.SecretKey) = (r7 I:com.google.android.gms.internal.ads.zzdjl) com.google.android.gms.internal.ads.zzdjl.zzgxc javax.crypto.SecretKey \l0x0031: INVOKE  \l  (r0 I:javax.crypto.Cipher)\l  (r6 I:int)\l  (r3 I:java.security.Key)\l  (r1 I:java.security.spec.AlgorithmParameterSpec)\l javax.crypto.Cipher.init(int, java.security.Key, java.security.spec.AlgorithmParameterSpec):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0034|0x0034: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003c \l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|0x0036: ARRAY_LENGTH  (r1 I:int) = (r9 I:?[]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|0x0037: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003c \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: INVOKE  (r0 I:javax.crypto.Cipher), (r9 I:byte[]) javax.crypto.Cipher.updateAAD(byte[]):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x003c|0x003c: ARRAY_LENGTH  (r3 I:int) = (r8 I:?[]) \l0x003d: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x003e: INVOKE  (r0 I:int) = \l  (r0 I:javax.crypto.Cipher)\l  (r1 I:byte[])\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:byte[])\l  (r5 I:int)\l javax.crypto.Cipher.doFinal(byte[], int, int, byte[], int):int type: VIRTUAL \l0x0042: ARRAY_LENGTH  (r1 I:int) = (r8 I:?[]) \l0x0043: ARITH  (r1 I:int) = (r1 I:int) + (16 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0045|0x0045: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0066 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0047|0x0047: ARRAY_LENGTH  (r1 I:int) = (r8 I:?[]) \l0x0048: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0049: NEW_INSTANCE  (r1 I:java.security.GeneralSecurityException) =  java.security.GeneralSecurityException \l0x004b: CONST_STR  (r3 I:java.lang.String) =  \"encryption failed; GCM tag must be %s bytes, but got only %s bytes\" \l0x004d: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x004e: NEW_ARRAY  (r4 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0050: CONST  (r5 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0052: INVOKE  (r5 I:java.lang.Integer) = (r5 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0056: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x0058: INVOKE  (r0 I:java.lang.Integer) = (r0 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x005c: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r6 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l \l0x005e: INVOKE  (r0 I:java.lang.String) = (r3 I:java.lang.String), (r4 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x0062: INVOKE  \l  (r1 I:java.security.GeneralSecurityException)\l  (r0 I:java.lang.String)\l java.security.GeneralSecurityException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0065|0x0065: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0066|0x0066: RETURN  (r4 I:byte[]) \l}"];
MethodNode[shape=record,label="{public final byte[] com.google.android.gms.internal.ads.zzdjl.zzc((r7 'this' I:com.google.android.gms.internal.ads.zzdjl A[IMMUTABLE_TYPE, THIS]), (r8 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.security.GeneralSecurityException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
}

