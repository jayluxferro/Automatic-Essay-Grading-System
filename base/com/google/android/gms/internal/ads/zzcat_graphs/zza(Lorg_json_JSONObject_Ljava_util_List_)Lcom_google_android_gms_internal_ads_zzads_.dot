digraph "CFG forcom.google.android.gms.internal.ads.zzcat.zza(Lorg\/json\/JSONObject;Ljava\/util\/List;)Lcom\/google\/android\/gms\/internal\/ads\/zzads;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r5 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r11 == null) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r11.isEmpty() == false) goto L_0x000b\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009}"];
Node_5 [shape=record,label="{5\:\ 0x000b|java.lang.String r1 = r10.optString(com.google.android.exoplayer2.util.MimeTypes.BASE_TYPE_TEXT)\ljava.lang.Integer r3 = zzf(r10, \"bg_color\")\ljava.lang.Integer r4 = zzf(r10, \"text_color\")\lint r2 = r10.optInt(\"text_size\", \-1)\lboolean r8 = r10.optBoolean(\"allow_pub_rendering\")\lint r6 = r10.optInt(\"animation_ms\", 1000)\lint r7 = r10.optInt(\"presentation_ms\", 4000)\l}"];
Node_6 [shape=record,label="{6\:\ 0x003c|if (r2 \<= 0) goto L_0x0042\l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|java.lang.Integer r5 = java.lang.Integer.valueOf(r2)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0042|PHI: r5 \l  PHI: (r5v1 java.lang.Integer) = (r5v0 java.lang.Integer), (r5v2 java.lang.Integer) binds: [B:6:0x003c, B:7:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|int r6 = r6 + r7\lint r7 = r9.zzdgu.zzbqf\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return new com.google.android.gms.internal.ads.zzads(r1, r11, r3, r4, r5, r6, r7, r8)\l}"];
MethodNode[shape=record,label="{final \/* synthetic *\/ com.google.android.gms.internal.ads.zzads com.google.android.gms.internal.ads.zzcat.zza((r9v0 'this' com.google.android.gms.internal.ads.zzcat A[IMMUTABLE_TYPE, THIS]), (r10v0 org.json.JSONObject A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 java.util.List A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_10;
}

