digraph "CFG forcom.google.android.gms.internal.ads.zzcam.zza([BDZ)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.graphics.BitmapFactory$Options r1 = new android.graphics.BitmapFactory.Options()\lr1.inDensity = (int) (160.0d * r8)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if (r10 != false) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|r1.inPreferredConfig = android.graphics.Bitmap.Config.RGB_565\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|com.google.android.gms.internal.ads.zzaci\<java.lang.Boolean\> r0 = com.google.android.gms.internal.ads.zzact.zzcwo\l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|if (((java.lang.Boolean) com.google.android.gms.internal.ads.zzyr.zzpe().zzd(r0)).booleanValue() == false) goto L_0x0053\l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|r1.inJustDecodeBounds = true\lzza(r7, r1)\lr1.inJustDecodeBounds = false\lint r0 = r1.outWidth\lint r2 = r1.outHeight * r0\l}"];
Node_6 [shape=record,label="{6\:\ 0x0031|if (r2 \<= 0) goto L_0x0053\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|com.google.android.gms.internal.ads.zzaci\<java.lang.Integer\> r0 = com.google.android.gms.internal.ads.zzact.zzcwp\lint r2 = r2 + \-1\lr1.inSampleSize = 1 \<\< ((33 \- java.lang.Integer.numberOfLeadingZeros(r2 \/ ((java.lang.Integer) com.google.android.gms.internal.ads.zzyr.zzpe().zzd(r0)).intValue())) \/ 2)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0053}"];
Node_9 [shape=record,label="{9\:\ 0x0057|RETURN\l|return zza(r7, r1)\l}"];
MethodNode[shape=record,label="{private final android.graphics.Bitmap com.google.android.gms.internal.ads.zzcam.zza((r6v0 'this' com.google.android.gms.internal.ads.zzcam A[IMMUTABLE_TYPE, THIS]), (r7v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

