digraph "CFG forcom.google.android.gms.internal.ads.zzig.zzdu()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[long, double]) = (\-9223372036854775808 ?[long, double]) \l0x0002: IGET  (r0 I:boolean) = (r8 I:com.google.android.gms.internal.ads.zzig) com.google.android.gms.internal.ads.zzig.zzaiz boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r2 I:?[long, double]) = (\-3 ?[long, double]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: RETURN  (r2 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: INVOKE  (r0 I:boolean) = (r8 I:com.google.android.gms.internal.ads.zzig) com.google.android.gms.internal.ads.zzig.zzfo():boolean type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0012 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IGET  (r2 I:long) = (r8 I:com.google.android.gms.internal.ads.zzig) com.google.android.gms.internal.ads.zzig.zzaiq long \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: MOVE  (r2 I:?[long, double]) = (r4 I:?[long, double]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|0x0015: IGET  (r0 I:android.util.SparseArray\<com.google.android.gms.internal.ads.zzii\>) = (r8 I:com.google.android.gms.internal.ads.zzig) com.google.android.gms.internal.ads.zzig.zzaif android.util.SparseArray \l0x0017: INVOKE  (r0 I:int) = (r0 I:android.util.SparseArray) android.util.SparseArray.size():int type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:11:0x0031 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: IGET  (r0 I:android.util.SparseArray\<com.google.android.gms.internal.ads.zzii\>) = (r8 I:com.google.android.gms.internal.ads.zzig) com.google.android.gms.internal.ads.zzig.zzaif android.util.SparseArray \l0x001f: INVOKE  (r0 I:java.lang.Object) = (r0 I:android.util.SparseArray), (r1 I:int) android.util.SparseArray.valueAt(int):java.lang.Object type: VIRTUAL \l0x0023: CHECK_CAST  (r0 I:com.google.android.gms.internal.ads.zzii) = (com.google.android.gms.internal.ads.zzii) (r0 I:?[OBJECT, ARRAY]) \l0x0025: INVOKE  (r6 I:long) = (r0 I:com.google.android.gms.internal.ads.zzic) com.google.android.gms.internal.ads.zzic.zzff():long type: VIRTUAL \l0x0029: INVOKE  (r2 I:long) = (r2 I:long), (r6 I:long) java.lang.Math.max(long, long):long type: STATIC \l0x002d: ARITH  (r0 I:int) = (r1 I:int) + (1 int) \l0x002f: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|0x0031: CMP_L  (r0 I:int) = (r2 I:long), (r4 I:long) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|0x0033: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|0x0035: IGET  (r2 I:long) = (r8 I:com.google.android.gms.internal.ads.zzig) com.google.android.gms.internal.ads.zzig.zzaio long \l}"];
MethodNode[shape=record,label="{public final long com.google.android.gms.internal.ads.zzig.zzdu((r8 'this' I:com.google.android.gms.internal.ads.zzig A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_3;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_8;
Node_11 -> Node_12;
Node_12 -> Node_3;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_3;
}

