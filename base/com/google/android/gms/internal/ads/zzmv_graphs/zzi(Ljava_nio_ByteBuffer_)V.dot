digraph "CFG forcom.google.android.gms.internal.ads.zzmv.zzi(Ljava\/nio\/ByteBuffer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = r5.position()\lint r2 = r5.limit()\lint r0 = r2 \- r1\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|switch(r4.zzagi) \{\l    case \-2147483648: goto L_0x0038;\l    case 3: goto L_0x0015;\l    case 1073741824: goto L_0x003d;\l    default: goto L_0x000f;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f}"];
Node_3 [shape=record,label="{3\:\ 0x0014|throw new java.lang.IllegalStateException()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|int r0 = r0 \<\< 1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|PHI: r0 \l  PHI: (r0v4 int) = (r0v1 int), (r0v3 int), (r0v20 int) binds: [B:13:0x003d, B:12:0x0038, B:4:0x0015] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|if (r4.zzaxl.capacity() \>= r0) goto L_0x0040\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|r4.zzaxl = java.nio.ByteBuffer.allocateDirect(r0).order(java.nio.ByteOrder.nativeOrder())\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d}"];
Node_9 [shape=record,label="{9\:\ 0x002f|switch(r4.zzagi) \{\l    case \-2147483648: goto L_0x005f;\l    case 3: goto L_0x0046;\l    case 1073741824: goto L_0x007a;\l    default: goto L_0x0032;\l\}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0032}"];
Node_11 [shape=record,label="{11\:\ 0x0037|throw new java.lang.IllegalStateException()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|int r0 = (r0 \/ 3) \<\< 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|int r0 = r0 \/ 2\l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|r4.zzaxl.clear()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0046|LOOP_START\lPHI: r1 \l  PHI: (r1v5 int) = (r1v0 int), (r1v6 int) binds: [B:9:0x002f, B:16:0x0048] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:15:0x0046\-\>B:16:0x0048\l|if (r1 \>= r2) goto L_0x0096\l}"];
Node_16 [shape=record,label="{16\:\ 0x0048|LOOP_END\lLOOP:0: B:15:0x0046\-\>B:16:0x0048\l|r4.zzaxl.put((byte) 0)\lr4.zzaxl.put((byte) ((r5.get(r1) & 255) + Byte.MIN_VALUE))\lint r1 = r1 + 1\l}"];
Node_17 [shape=record,label="{17\:\ 0x005f|LOOP_START\lPHI: r1 \l  PHI: (r1v3 int) = (r1v0 int), (r1v4 int) binds: [B:9:0x002f, B:18:0x0061] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:17:0x005f\-\>B:18:0x0061\l|if (r1 \>= r2) goto L_0x0096\l}"];
Node_18 [shape=record,label="{18\:\ 0x0061|LOOP_END\lLOOP:1: B:17:0x005f\-\>B:18:0x0061\l|r4.zzaxl.put(r5.get(r1 + 1))\lr4.zzaxl.put(r5.get(r1 + 2))\lint r1 = r1 + 3\l}"];
Node_19 [shape=record,label="{19\:\ 0x007a|r0 = r1\l}"];
Node_20 [shape=record,label="{20\:\ 0x007b|LOOP_START\lPHI: r0 \l  PHI: (r0v11 int) = (r0v10 int), (r0v12 int) binds: [B:19:0x007a, B:21:0x007d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:20:0x007b\-\>B:21:0x007d\l|if (r0 \>= r2) goto L_0x0096\l}"];
Node_21 [shape=record,label="{21\:\ 0x007d|LOOP_END\lLOOP:2: B:20:0x007b\-\>B:21:0x007d\l|r4.zzaxl.put(r5.get(r0 + 2))\lr4.zzaxl.put(r5.get(r0 + 3))\lint r0 = r0 + 4\l}"];
Node_22 [shape=record,label="{22\:\ 0x0096|r5.position(r5.limit())\lr4.zzaxl.flip()\lr4.zzaws = r4.zzaxl\l}"];
Node_23 [shape=record,label="{23\:\ 0x00a6|RETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ 0x0096|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0096|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0096|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final void com.google.android.gms.internal.ads.zzmv.zzi((r4v0 'this' com.google.android.gms.internal.ads.zzmv A[IMMUTABLE_TYPE, THIS]), (r5v0 java.nio.ByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_12;
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_15;
Node_9 -> Node_17;
Node_9 -> Node_19;
Node_10 -> Node_11;
Node_12 -> Node_5;
Node_13 -> Node_5;
Node_14 -> Node_8;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_24;
Node_16 -> Node_15;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_17;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_20;
Node_22 -> Node_23;
Node_24 -> Node_22;
Node_25 -> Node_22;
Node_26 -> Node_22;
}

