digraph "CFG forcom.google.android.gms.internal.ads.zzdjs.zzb([II)[I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: ARRAY_LENGTH  (r0 I:int) = (r6 I:?[]) \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0007: CONST_STR  (r1 I:java.lang.String) =  \"ChaCha20 uses 96\-bit nonces, but got a %d\-bit nonce\" \l0x0009: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000a: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x000c: ARRAY_LENGTH  (r3 I:int) = (r6 I:?[]) \l0x000d: ARITH  (r3 I:int) = (r3 I:int) \<\< (5 int) \l0x000f: INVOKE  (r3 I:java.lang.Integer) = (r3 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0013: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0015: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.String), (r2 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x0019: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r1 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: CONST  (r0 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x001f: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0021: IGET  (r1 I:int[]) = (r5 I:com.google.android.gms.internal.ads.zzdjs) com.google.android.gms.internal.ads.zzdjs.zzgyf int[] \l0x0023: INVOKE  (r0 I:int[]), (r1 I:int[]) com.google.android.gms.internal.ads.zzdjt.zza(int[], int[]):void type: STATIC \l0x0026: CONST  (r1 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l0x0028: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r7 I:?[int, float])\l \l0x002a: CONST  (r1 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l0x002c: ARRAY_LENGTH  (r2 I:int) = (r6 I:?[]) \l0x002d: INVOKE  \l  (r6 I:java.lang.Object)\l  (r4 I:int)\l  (r0 I:java.lang.Object)\l  (r1 I:int)\l  (r2 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0030|0x0030: RETURN  (r0 I:int[]) \l}"];
MethodNode[shape=record,label="{final int[] com.google.android.gms.internal.ads.zzdjs.zzb((r5 'this' I:com.google.android.gms.internal.ads.zzdjs A[IMMUTABLE_TYPE, THIS]), (r6 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

