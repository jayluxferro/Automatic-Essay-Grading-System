digraph "CFG forcom.google.android.gms.internal.ads.zzkq.zza([JJJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if ((r12 \> com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND ? 1 : (r12 == com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND ? 0 : \-1)) \< 0) goto L_0x001d\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (((r12 % com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND) \> 0 ? 1 : ((r12 % com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND) == 0 ? 0 : \-1)) != 0) goto L_0x001d\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|long r2 = r12 \/ com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|LOOP_START\lPHI: r0 \l  PHI: (r0v5 int) = (r0v0 int), (r0v6 int) binds: [B:4:0x0010, B:7:0x0015] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0012\-\>B:7:0x0015\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|if (r0 \>= r9.length) goto L_0x0048\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|LOOP_END\lLOOP:0: B:5:0x0012\-\>B:7:0x0015\l|r9[r0] = r9[r0] \/ r2\lint r0 = r0 + 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d}"];
Node_9 [shape=record,label="{9\:\ 0x001f|if ((r12 \> com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND ? 1 : (r12 == com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND ? 0 : \-1)) \>= 0) goto L_0x0034\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021}"];
Node_11 [shape=record,label="{11\:\ 0x0025|if (((com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND % r12) \> 0 ? 1 : ((com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND % r12) == 0 ? 0 : \-1)) != 0) goto L_0x0034\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|long r2 = com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND \/ r12\l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v0 int), (r0v4 int) binds: [B:12:0x0027, B:15:0x002c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:13:0x0029\-\>B:15:0x002c\l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|if (r0 \>= r9.length) goto L_0x0048\l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|LOOP_END\lLOOP:1: B:13:0x0029\-\>B:15:0x002c\l|r9[r0] = r9[r0] * r2\lint r0 = r0 + 1\l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|double r2 = 1000000.0d \/ ((double) r12)\l}"];
Node_17 [shape=record,label="{17\:\ 0x003b|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:16:0x0034, B:19:0x003e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:17:0x003b\-\>B:19:0x003e\l}"];
Node_18 [shape=record,label="{18\:\ 0x003c|if (r0 \>= r9.length) goto L_0x0048\l}"];
Node_19 [shape=record,label="{19\:\ 0x003e|LOOP_END\lLOOP:2: B:17:0x003b\-\>B:19:0x003e\l|r9[r0] = (long) (((double) r9[r0]) * r2)\lint r0 = r0 + 1\l}"];
Node_20 [shape=record,label="{20\:\ 0x0048|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0048|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0048|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public static void com.google.android.gms.internal.ads.zzkq.zza((r9v0 long[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_20;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_21;
Node_15 -> Node_13;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_17;
Node_20 -> Node_23;
Node_21 -> Node_24;
Node_22 -> Node_25;
}

