digraph "CFG forcom.google.android.gms.internal.ads.zzkq.zza(JJJ)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if ((r10 \> com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND ? 1 : (r10 == com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND ? 0 : \-1)) \< 0) goto L_0x0014\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009}"];
Node_3 [shape=record,label="{3\:\ 0x000d|if (((r10 % com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND) \> 0 ? 1 : ((r10 % com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND) == 0 ? 0 : \-1)) != 0) goto L_0x0014\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f}"];
Node_5 [shape=record,label="{5\:\ 0x0014}"];
Node_6 [shape=record,label="{6\:\ 0x0016|if ((r10 \> com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND ? 1 : (r10 == com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND ? 0 : \-1)) \>= 0) goto L_0x0022\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018}"];
Node_8 [shape=record,label="{8\:\ 0x001c|if (((com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND % r10) \> 0 ? 1 : ((com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND % r10) == 0 ? 0 : \-1)) != 0) goto L_0x0022\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e}"];
Node_10 [shape=record,label="{10\:\ 0x0022}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r6 \/ (r10 \/ com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND)\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return (com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND \/ r10) * r6\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return (long) ((1000000.0d \/ ((double) r10)) * ((double) r6))\l}"];
MethodNode[shape=record,label="{public static long com.google.android.gms.internal.ads.zzkq.zza((r6v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_12;
Node_10 -> Node_13;
}

