digraph "CFG forcom.google.android.gms.internal.ads.zzci.zza([BLjava\/lang\/String;Z)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r10 == false) goto L_0x0069\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|r0 = 239\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|PHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v21 int) binds: [B:14:0x0069, B:2:0x0007] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r8.length \<= r0) goto L_0x0016\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|byte[] r8 = zza(com.google.android.gms.internal.ads.zzbp.zza.zzd.PSN_ENCODE_SIZE_FAIL).toByteArray()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|PHI: r8 \l  PHI: (r8v1 byte[]) = (r8v0 byte[]), (r8v2 byte[]) binds: [B:4:0x000a, B:5:0x000c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|if (r8.length \>= r0) goto L_0x006c\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|byte[] r1 = new byte[(r0 \- r8.length)]\lnew java.security.SecureRandom().nextBytes(r1)\lbyte[] r0 = java.nio.ByteBuffer.allocate(r0 + 1).put((byte) r8.length).put(r8).put(r1).array()\l}"];
Node_9 [shape=record,label="{9\:\ 0x003e|PHI: r0 \l  PHI: (r0v7 byte[]) = (r0v6 byte[]), (r0v20 byte[]) binds: [B:15:0x006c, B:8:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|if (r10 == false) goto L_0x0054\l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|byte[] r1 = zzb(r0)\lbyte[] r0 = java.nio.ByteBuffer.allocate(256).put(r1).put(r0).array()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0054|PHI: r0 \l  PHI: (r0v8 byte[]) = (r0v7 byte[]), (r0v14 byte[]) binds: [B:9:0x003e, B:10:0x0040] A[DONT_GENERATE, DONT_INLINE]\l|byte[] r3 = new byte[256]\lcom.google.android.gms.internal.ads.zzcn[] r4 = new com.google.android.gms.internal.ads.zzcl().zzvb\lint r5 = r4.length\lr1 = 0\l}"];
Node_12 [shape=record,label="{12\:\ 0x005f|LOOP_START\lPHI: r1 \l  PHI: (r1v6 int) = (r1v5 int), (r1v8 int) binds: [B:11:0x0054, B:13:0x0061] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:12:0x005f\-\>B:13:0x0061\l|if (r1 \>= r5) goto L_0x0081\l}"];
Node_13 [shape=record,label="{13\:\ 0x0061|LOOP_END\lLOOP:0: B:12:0x005f\-\>B:13:0x0061\l|r4[r1].zza(r0, r3)\lint r1 = r1 + 1\l}"];
Node_14 [shape=record,label="{14\:\ 0x0069|r0 = 255\l}"];
Node_15 [shape=record,label="{15\:\ 0x006c|byte[] r0 = java.nio.ByteBuffer.allocate(r0 + 1).put((byte) r8.length).put(r8).array()\l}"];
Node_16 [shape=record,label="{16\:\ 0x0081|if (r9 == null) goto L_0x00a1\l}"];
Node_17 [shape=record,label="{17\:\ 0x0083}"];
Node_18 [shape=record,label="{18\:\ 0x0087|if (r9.length() \<= 0) goto L_0x00a1\l}"];
Node_19 [shape=record,label="{19\:\ 0x0089}"];
Node_20 [shape=record,label="{20\:\ 0x008d|if (r9.length() \<= 32) goto L_0x0093\l}"];
Node_21 [shape=record,label="{21\:\ 0x008f|java.lang.String r9 = r9.substring(0, 32)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0093|PHI: r9 \l  PHI: (r9v1 java.lang.String) = (r9v0 java.lang.String), (r9v2 java.lang.String) binds: [B:20:0x008d, B:21:0x008f] A[DONT_GENERATE, DONT_INLINE]\l|new com.google.android.gms.internal.ads.zzdmg(r9.getBytes(com.google.android.exoplayer2.C1260C.UTF8_NAME)).zzy(r3)\l}"];
Node_23 [shape=record,label="{23\:\ 0x00a1|RETURN\l|return r3\l}"];
Node_24 [shape=record,label="{24\:\ 0x0081|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static byte[] com.google.android.gms.internal.ads.zzci.zza((r8v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.security.NoSuchAlgorithmException, java.io.UnsupportedEncodingException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_24;
Node_13 -> Node_12;
Node_14 -> Node_3;
Node_15 -> Node_9;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_24 -> Node_16;
}

