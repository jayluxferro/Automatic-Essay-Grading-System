digraph "CFG forcom.google.android.gms.internal.ads.zzdjj.zza(Ljavax\/crypto\/Cipher;I[BII)[B" {
subgraph cluster_Region_1327124940 {
label = "R(2:0|(2:(1:22)|(5:3|(3:6|(1:8)|9)|10|(1:12)(3:14|(1:17)|18)|23))) | DECL_VAR: byte[] null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = 0\lbyte[] byte[] r1 = new byte[16]\lr1[15] = (byte) r9\l}"];
subgraph cluster_Region_950329367 {
label = "R(2:(1:22)|(5:3|(3:6|(1:8)|9)|10|(1:12)(3:14|(1:17)|18)|23))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_891052918 {
label = "IF [B:1:0x000a] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r12 == 0) goto L_0x000c\l}"];
subgraph cluster_Region_1477693507 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r8.doFinal(zzd(r1, r7.zzgxq))\l}"];
}
}
subgraph cluster_Region_1167752892 {
label = "R(5:3|(3:6|(1:8)|9)|10|(1:12)(3:14|(1:17)|18)|23)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0017|int r2 = 0\lbyte[] r3 = r8.doFinal(r1)\l}"];
subgraph cluster_LoopRegion_1236281398 {
label = "LOOP:0: (3:6|(1:8)|9)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001f|if ((r12 \- r2) \> 16) goto L_0x0021\l}"];
subgraph cluster_Region_2105229032 {
label = "R(3:6|(1:8)|9)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0021|int r1 = 0\l}"];
subgraph cluster_LoopRegion_1100516066 {
label = "LOOP:1: (1:8)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0022|LOOP_START\lPHI: r1 \l  PHI: (r1v8 int) = (r1v7 int), (r1v10 int) binds: [B:6:0x0021, B:8:0x0024] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:7:0x0022\-\>B:8:0x0024\l|if (r1 \< 16) goto L_0x0024\l}"];
subgraph cluster_Region_266823819 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0024|LOOP_END\lLOOP:1: B:7:0x0022\-\>B:8:0x0024\l|r3[r1] = (byte) (r3[r1] ^ r10[(r11 + r2) + r1])\lr1++\l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x0032|LOOP_END\lLOOP:0: B:4:0x001d\-\>B:9:0x0032\l|byte[] r3 = r8.doFinal(r3)\lr2 += 16\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x003a|byte[] byte[] r2 = java.util.Arrays.copyOfRange(r10, r11 + r2, r11 + r12)\l}"];
subgraph cluster_IfRegion_421435477 {
label = "IF [B:11:0x0043] THEN: R(1:12) ELSE: R(3:14|(1:17)|18)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0043|if (r2.length == 16) goto L_0x0045\l}"];
subgraph cluster_Region_1035368928 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0045|byte[] r0 = zzd(r2, r7.zzgxq)\l}"];
}
subgraph cluster_Region_1963919352 {
label = "R(3:14|(1:17)|18)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0054|byte[] byte[] r1 = java.util.Arrays.copyOf(r7.zzgxr, 16)\l}"];
subgraph cluster_LoopRegion_223781366 {
label = "LOOP:2: (1:17)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x005b|if (r0 \< r2.length) goto L_0x005d\l}"];
subgraph cluster_Region_1787547271 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x005d|LOOP_END\lLOOP:2: B:15:0x005a\-\>B:17:0x005d\l|r1[r0] = (byte) (r1[r0] ^ r2[r0])\lr0++\l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x0068|r1[r2.length] = (byte) (r1[r2.length] ^ 128)\lr0 = r1\l}"];
}
}
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return r8.doFinal(zzd(r3, r0))\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000c}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x001d|LOOP_START\lPHI: r2 r3 \l  PHI: (r2v2 int) = (r2v1 int), (r2v9 int) binds: [B:3:0x0017, B:9:0x0032] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 byte[]) = (r3v1 byte[]), (r3v3 byte[]) binds: [B:3:0x0017, B:9:0x0032] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x001d\-\>B:9:0x0032\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x004b|PHI: r0 \l  PHI: (r0v5 byte[]) = (r0v3 byte[]), (r0v9 byte[]) binds: [B:18:0x0068, B:12:0x0045] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x005a|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v4 int) binds: [B:14:0x0054, B:17:0x005d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:15:0x005a\-\>B:17:0x005d\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x003a|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0032|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0068|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private final byte[] com.google.android.gms.internal.ads.zzdjj.zza((r7v0 'this' com.google.android.gms.internal.ads.zzdjj A[IMMUTABLE_TYPE, THIS]), (r8v0 javax.crypto.Cipher A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_19[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_20[style=dashed];
Node_8 -> Node_7;
Node_9 -> Node_4;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_14[style=dashed];
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_21[style=dashed];
Node_17 -> Node_15;
Node_18 -> Node_13;
Node_2 -> Node_22;
Node_4 -> Node_5;
Node_13 -> Node_23;
Node_15 -> Node_16;
Node_19 -> Node_10;
Node_20 -> Node_9;
Node_21 -> Node_18;
}

