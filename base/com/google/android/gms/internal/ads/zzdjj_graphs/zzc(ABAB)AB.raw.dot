digraph "CFG forcom.google.android.gms.internal.ads.zzdjj.zzc([B[B)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: ARRAY_LENGTH  (r0 I:int) = (r13 I:?[]) \l0x0003: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l \l0x0006: IGET  (r3 I:int) = (r12 I:com.google.android.gms.internal.ads.zzdjj) com.google.android.gms.internal.ads.zzdjj.zzgxs int \l0x0008: ARITH  (r1 I:int) = (r1 I:int) \- (r3 I:int) \l0x0009: ARITH  (r1 I:int) = (r1 I:int) + (\-16 int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r0 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:4:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: NEW_INSTANCE  (r0 I:java.security.GeneralSecurityException) =  java.security.GeneralSecurityException \l0x000f: CONST_STR  (r1 I:java.lang.String) =  \"plaintext too long\" \l0x0011: INVOKE  \l  (r0 I:java.security.GeneralSecurityException)\l  (r1 I:java.lang.String)\l java.security.GeneralSecurityException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: IGET  (r0 I:int) = (r12 I:com.google.android.gms.internal.ads.zzdjj) com.google.android.gms.internal.ads.zzdjj.zzgxs int \l0x0017: ARRAY_LENGTH  (r1 I:int) = (r13 I:?[]) \l0x0018: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0019: ARITH  (r0 I:int) = (r0 I:int) + (16 int) \l0x001b: NEW_ARRAY  (r9 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x001d: IGET  (r0 I:int) = (r12 I:com.google.android.gms.internal.ads.zzdjj) com.google.android.gms.internal.ads.zzdjj.zzgxs int \l0x001f: INVOKE  (r3 I:byte[]) = (r0 I:int) com.google.android.gms.internal.ads.zzdln.zzff(int):byte[] type: STATIC \l0x0023: IGET  (r0 I:int) = (r12 I:com.google.android.gms.internal.ads.zzdjj) com.google.android.gms.internal.ads.zzdjj.zzgxs int \l0x0025: INVOKE  \l  (r3 I:java.lang.Object)\l  (r2 I:int)\l  (r9 I:java.lang.Object)\l  (r2 I:int)\l  (r0 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0028: CONST_STR  (r0 I:java.lang.String) =  \"AES\/ECB\/NOPADDING\" \l0x002a: INVOKE  (r1 I:javax.crypto.Cipher) = (r0 I:java.lang.String) javax.crypto.Cipher.getInstance(java.lang.String):javax.crypto.Cipher type: STATIC \l0x002e: IGET  (r0 I:javax.crypto.spec.SecretKeySpec) = (r12 I:com.google.android.gms.internal.ads.zzdjj) com.google.android.gms.internal.ads.zzdjj.zzgxn javax.crypto.spec.SecretKeySpec \l0x0030: INVOKE  \l  (r1 I:javax.crypto.Cipher)\l  (r11 I:int)\l  (r0 I:java.security.Key)\l javax.crypto.Cipher.init(int, java.security.Key):void type: VIRTUAL \l0x0033: ARRAY_LENGTH  (r5 I:int) = (r3 I:?[]) \l0x0034: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0035: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0036: INVOKE  (r0 I:byte[]) = \l  (r0 I:com.google.android.gms.internal.ads.zzdjj)\l  (r1 I:javax.crypto.Cipher)\l  (r2 I:int)\l  (r3 I:byte[])\l  (r4 I:int)\l  (r5 I:int)\l com.google.android.gms.internal.ads.zzdjj.zza(javax.crypto.Cipher, int, byte[], int, int):byte[] type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x003a|0x003a: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0084 \l}"];
Node_6 [shape=record,label="{6\:\ 0x003c|0x003c: NEW_ARRAY  (r6 I:byte[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: byte[] \l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|0x003e: ARRAY_LENGTH  (r8 I:int) = (r6 I:?[]) \l0x003f: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0040: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0041: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0042: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0043: INVOKE  (r10 I:byte[]) = \l  (r3 I:com.google.android.gms.internal.ads.zzdjj)\l  (r4 I:javax.crypto.Cipher)\l  (r5 I:int)\l  (r6 I:byte[])\l  (r7 I:int)\l  (r8 I:int)\l com.google.android.gms.internal.ads.zzdjj.zza(javax.crypto.Cipher, int, byte[], int, int):byte[] type: DIRECT \l0x0047: CONST_STR  (r3 I:java.lang.String) =  \"AES\/CTR\/NOPADDING\" \l0x0049: INVOKE  (r3 I:javax.crypto.Cipher) = (r3 I:java.lang.String) javax.crypto.Cipher.getInstance(java.lang.String):javax.crypto.Cipher type: STATIC \l0x004d: IGET  (r4 I:javax.crypto.spec.SecretKeySpec) = (r12 I:com.google.android.gms.internal.ads.zzdjj) com.google.android.gms.internal.ads.zzdjj.zzgxn javax.crypto.spec.SecretKeySpec \l0x004f: NEW_INSTANCE  (r5 I:javax.crypto.spec.IvParameterSpec) =  javax.crypto.spec.IvParameterSpec \l0x0051: INVOKE  (r5 I:javax.crypto.spec.IvParameterSpec), (r0 I:byte[]) javax.crypto.spec.IvParameterSpec.\<init\>(byte[]):void type: DIRECT \l0x0054: INVOKE  \l  (r3 I:javax.crypto.Cipher)\l  (r11 I:int)\l  (r4 I:java.security.Key)\l  (r5 I:java.security.spec.AlgorithmParameterSpec)\l javax.crypto.Cipher.init(int, java.security.Key, java.security.spec.AlgorithmParameterSpec):void type: VIRTUAL \l0x0057: ARRAY_LENGTH  (r6 I:int) = (r13 I:?[]) \l0x0058: IGET  (r8 I:int) = (r12 I:com.google.android.gms.internal.ads.zzdjj) com.google.android.gms.internal.ads.zzdjj.zzgxs int \l0x005a: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x005b: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005c: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x005d: INVOKE  \l  (r3 I:javax.crypto.Cipher)\l  (r4 I:byte[])\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:byte[])\l  (r8 I:int)\l javax.crypto.Cipher.doFinal(byte[], int, int, byte[], int):int type: VIRTUAL \l0x0060: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0061: IGET  (r7 I:int) = (r12 I:com.google.android.gms.internal.ads.zzdjj) com.google.android.gms.internal.ads.zzdjj.zzgxs int \l0x0063: ARRAY_LENGTH  (r8 I:int) = (r13 I:?[]) \l0x0064: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0065: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0066: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0067: INVOKE  (r1 I:byte[]) = \l  (r3 I:com.google.android.gms.internal.ads.zzdjj)\l  (r4 I:javax.crypto.Cipher)\l  (r5 I:int)\l  (r6 I:byte[])\l  (r7 I:int)\l  (r8 I:int)\l com.google.android.gms.internal.ads.zzdjj.zza(javax.crypto.Cipher, int, byte[], int, int):byte[] type: DIRECT \l0x006b: ARRAY_LENGTH  (r3 I:int) = (r13 I:?[]) \l0x006c: IGET  (r4 I:int) = (r12 I:com.google.android.gms.internal.ads.zzdjj) com.google.android.gms.internal.ads.zzdjj.zzgxs int \l0x006e: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x006f|0x006f: CONST  (r4 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0071|0x0071: IF  (r2 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:11:0x0083 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0073|0x0073: ARITH  (r4 I:int) = (r3 I:int) + (r2 I:int) \l0x0075: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x0077: AGET  (r6 I:byte A[IMMUTABLE_TYPE]) = \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x0079: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) ^ (r6 I:?[int, boolean, short, byte, char]) \l0x007a: AGET  (r6 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x007c: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) ^ (r6 I:?[int, boolean, short, byte, char]) \l0x007d: CAST  (r5 I:byte) = (byte) (r5 I:int) \l0x007e: APUT  \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:byte A[IMMUTABLE_TYPE])\l \l0x0080: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0083|0x0083: RETURN  (r9 I:byte[]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0084|0x0084: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public final byte[] com.google.android.gms.internal.ads.zzdjj.zzc((r12 'this' I:com.google.android.gms.internal.ads.zzdjj A[IMMUTABLE_TYPE, THIS]), (r13 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.security.GeneralSecurityException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_8;
Node_12 -> Node_7;
}

