digraph "CFG forcom.google.android.gms.internal.ads.zzbc.zzc(Ljava\/nio\/ByteBuffer;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x0002: INVOKE  (r0 I:long) = (r6 I:java.nio.ByteBuffer) com.google.android.gms.internal.ads.zzbc.zza(java.nio.ByteBuffer):long type: STATIC \l0x0006: CONST  (r2 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0008: ARITH  (r0 I:long) = (r0 I:long) \<\< (r2 I:long) \l0x0009: ARITH  (r0 I:long) = (r0 I:long) + (r4 I:long) \l0x000a: CMP_L  (r2 I:int) = (r0 I:long), (r4 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:4:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0010: CONST_STR  (r1 I:java.lang.String) =  \"I don't know how to deal with UInt64! long is not sufficient and I don't want to use BigInt\" \l0x0012: INVOKE  (r0 I:java.lang.RuntimeException), (r1 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: INVOKE  (r2 I:long) = (r6 I:java.nio.ByteBuffer) com.google.android.gms.internal.ads.zzbc.zza(java.nio.ByteBuffer):long type: STATIC \l0x001a: ARITH  (r0 I:long) = (r0 I:long) + (r2 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: RETURN  (r0 I:long) \l}"];
MethodNode[shape=record,label="{public static long com.google.android.gms.internal.ads.zzbc.zzc((r6 I:java.nio.ByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

