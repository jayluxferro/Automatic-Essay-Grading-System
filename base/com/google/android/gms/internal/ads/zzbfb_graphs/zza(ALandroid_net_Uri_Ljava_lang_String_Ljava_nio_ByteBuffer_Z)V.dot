digraph "CFG forcom.google.android.gms.internal.ads.zzbfb.zza([Landroid\/net\/Uri;Ljava\/lang\/String;Ljava\/nio\/ByteBuffer;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = 0\lr3.zzehf = r6\lr3.zzehg = r7\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r4.length != 1) goto L_0x001b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|com.google.android.gms.internal.ads.zzql r0 = zza(r4[0], r5)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|PHI: r0 \l  PHI: (r0v4 com.google.android.gms.internal.ads.zzql) = (r0v2 com.google.android.gms.internal.ads.zzql), (r0v8 com.google.android.gms.internal.ads.zzql) binds: [B:9:0x002c, B:2:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|r3.zzehe.zza(r0)\lzzeff = zzeff + 1\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|com.google.android.gms.internal.ads.zzql[] r1 = new com.google.android.gms.internal.ads.zzql[r4.length]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v3 int) binds: [B:5:0x001b, B:8:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x001e\-\>B:8:0x0021\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|if (r0 \>= r4.length) goto L_0x002c\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|LOOP_END\lLOOP:0: B:6:0x001e\-\>B:8:0x0021\l|r1[r0] = zza(r4[r0], r5)\lint r0 = r0 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|com.google.android.gms.internal.ads.zzqo r0 = new com.google.android.gms.internal.ads.zzqo(r1)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final void com.google.android.gms.internal.ads.zzbfb.zza((r3v0 'this' com.google.android.gms.internal.ads.zzbfb A[IMMUTABLE_TYPE, THIS]), (r4v0 android.net.Uri[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.nio.ByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_6;
Node_9 -> Node_3;
Node_10 -> Node_9;
}

