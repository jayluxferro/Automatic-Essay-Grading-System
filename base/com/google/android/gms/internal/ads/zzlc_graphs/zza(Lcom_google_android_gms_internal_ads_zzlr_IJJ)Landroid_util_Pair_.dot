digraph "CFG forcom.google.android.gms.internal.ads.zzlc.zza(Lcom\/google\/android\/gms\/internal\/ads\/zzlr;IJJ)Landroid\/util\/Pair;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.google.android.gms.internal.ads.zzsk.zzc(r11, 0, r10.zzhf())\lr0 = r10\lr1 = r11\lr0.zza(r1, r9.zzars, false, r14)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|if ((r12 \> com.google.android.exoplayer2.C1260C.TIME_UNSET ? 1 : (r12 == com.google.android.exoplayer2.C1260C.TIME_UNSET ? 0 : \-1)) != 0) goto L_0x0023\l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|long r12 = r9.zzars.zzauw\l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|if ((r12 \> com.google.android.exoplayer2.C1260C.TIME_UNSET ? 1 : (r12 == com.google.android.exoplayer2.C1260C.TIME_UNSET ? 0 : \-1)) != 0) goto L_0x0023\l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|PHI: r12 \l  PHI: (r12v1 long) = (r12v0 long), (r12v2 long) binds: [B:1:0x0017, B:3:0x001f] A[DONT_GENERATE, DONT_INLINE]\l|r10.zza(0, r9.zzart, false)\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return android.util.Pair.create(0, java.lang.Long.valueOf(r9.zzars.zzaux + r12))\l}"];
MethodNode[shape=record,label="{private final android.util.Pair\<java.lang.Integer, java.lang.Long\> com.google.android.gms.internal.ads.zzlc.zza((r9v0 'this' com.google.android.gms.internal.ads.zzlc A[IMMUTABLE_TYPE, THIS]), (r10v0 com.google.android.gms.internal.ads.zzlr A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/android\/gms\/internal\/ads\/zzlr;, IJJ), Landroid\/util\/Pair, \<, Ljava\/lang\/Integer;, Ljava\/lang\/Long;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
}

