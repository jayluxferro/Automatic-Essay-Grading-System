digraph "CFG forcom.google.android.gms.internal.ads.zzdjv.zzc([B[B)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: ARRAY_LENGTH  (r0 I:int) = (r8 I:?[]) \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l \l0x0005: IGET  (r2 I:com.google.android.gms.internal.ads.zzdjt) = (r7 I:com.google.android.gms.internal.ads.zzdjv) com.google.android.gms.internal.ads.zzdjv.zzgyh com.google.android.gms.internal.ads.zzdjt \l0x0007: INVOKE  (r2 I:int) = (r2 I:com.google.android.gms.internal.ads.zzdjt) com.google.android.gms.internal.ads.zzdjt.zzauv():int type: VIRTUAL \l0x000b: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x000c: ARITH  (r1 I:int) = (r1 I:int) + (\-16 int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r0 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:4:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: NEW_INSTANCE  (r0 I:java.security.GeneralSecurityException) =  java.security.GeneralSecurityException \l0x0012: CONST_STR  (r1 I:java.lang.String) =  \"plaintext too long\" \l0x0014: INVOKE  \l  (r0 I:java.security.GeneralSecurityException)\l  (r1 I:java.lang.String)\l java.security.GeneralSecurityException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: ARRAY_LENGTH  (r0 I:int) = (r8 I:?[]) \l0x0019: IGET  (r1 I:com.google.android.gms.internal.ads.zzdjt) = (r7 I:com.google.android.gms.internal.ads.zzdjv) com.google.android.gms.internal.ads.zzdjv.zzgyh com.google.android.gms.internal.ads.zzdjt \l0x001b: INVOKE  (r1 I:int) = (r1 I:com.google.android.gms.internal.ads.zzdjt) com.google.android.gms.internal.ads.zzdjt.zzauv():int type: VIRTUAL \l0x001f: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0020: ARITH  (r0 I:int) = (r0 I:int) + (16 int) \l0x0022: INVOKE  (r3 I:java.nio.ByteBuffer) = (r0 I:int) java.nio.ByteBuffer.allocate(int):java.nio.ByteBuffer type: STATIC \l0x0026: INVOKE  (r0 I:int) = (r3 I:java.nio.ByteBuffer) java.nio.ByteBuffer.remaining():int type: VIRTUAL \l0x002a: ARRAY_LENGTH  (r1 I:int) = (r8 I:?[]) \l0x002b: IGET  (r2 I:com.google.android.gms.internal.ads.zzdjt) = (r7 I:com.google.android.gms.internal.ads.zzdjv) com.google.android.gms.internal.ads.zzdjv.zzgyh com.google.android.gms.internal.ads.zzdjt \l0x002d: INVOKE  (r2 I:int) = (r2 I:com.google.android.gms.internal.ads.zzdjt) com.google.android.gms.internal.ads.zzdjt.zzauv():int type: VIRTUAL \l0x0031: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x0032: ARITH  (r1 I:int) = (r1 I:int) + (16 int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0034|0x0034: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:8:0x003e \l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|0x0036: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0038: CONST_STR  (r1 I:java.lang.String) =  \"Given ByteBuffer output is too small\" \l0x003a: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r1 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|0x003d: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|0x003e: INVOKE  (r0 I:int) = (r3 I:java.nio.ByteBuffer) java.nio.ByteBuffer.position():int type: VIRTUAL \l0x0042: IGET  (r1 I:com.google.android.gms.internal.ads.zzdjt) = (r7 I:com.google.android.gms.internal.ads.zzdjv) com.google.android.gms.internal.ads.zzdjv.zzgyh com.google.android.gms.internal.ads.zzdjt \l0x0044: INVOKE  \l  (r1 I:com.google.android.gms.internal.ads.zzdjt)\l  (r3 I:java.nio.ByteBuffer)\l  (r8 I:byte[])\l com.google.android.gms.internal.ads.zzdjt.zza(java.nio.ByteBuffer, byte[]):void type: VIRTUAL \l0x0047: INVOKE  (r3 I:java.nio.ByteBuffer), (r0 I:int) java.nio.ByteBuffer.position(int):java.nio.Buffer type: VIRTUAL \l0x004a: IGET  (r0 I:com.google.android.gms.internal.ads.zzdjt) = (r7 I:com.google.android.gms.internal.ads.zzdjv) com.google.android.gms.internal.ads.zzdjv.zzgyh com.google.android.gms.internal.ads.zzdjt \l0x004c: INVOKE  (r0 I:int) = (r0 I:com.google.android.gms.internal.ads.zzdjt) com.google.android.gms.internal.ads.zzdjt.zzauv():int type: VIRTUAL \l0x0050: NEW_ARRAY  (r0 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0052: INVOKE  (r3 I:java.nio.ByteBuffer), (r0 I:byte[]) java.nio.ByteBuffer.get(byte[]):java.nio.ByteBuffer type: VIRTUAL \l0x0055: INVOKE  (r1 I:int) = (r3 I:java.nio.ByteBuffer) java.nio.ByteBuffer.limit():int type: VIRTUAL \l0x0059: ARITH  (r1 I:int) = (r1 I:int) + (\-16 int) \l0x005b: INVOKE  (r3 I:java.nio.ByteBuffer), (r1 I:int) java.nio.ByteBuffer.limit(int):java.nio.Buffer type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x005e|0x005e: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0062 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0060|0x0060: NEW_ARRAY  (r9 I:byte[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: byte[] \l}"];
Node_11 [shape=record,label="{11\:\ 0x0062|0x0062: IGET  (r1 I:com.google.android.gms.internal.ads.zzdjt) = (r7 I:com.google.android.gms.internal.ads.zzdjv) com.google.android.gms.internal.ads.zzdjv.zzgyi com.google.android.gms.internal.ads.zzdjt \l0x0064: INVOKE  (r0 I:java.nio.ByteBuffer) = \l  (r1 I:com.google.android.gms.internal.ads.zzdjt)\l  (r0 I:byte[])\l  (r4 I:int)\l com.google.android.gms.internal.ads.zzdjt.zzc(byte[], int):java.nio.ByteBuffer type: VIRTUAL \l0x0068: CONST  (r1 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x006a: NEW_ARRAY  (r4 I:byte[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x006c: INVOKE  (r0 I:java.nio.ByteBuffer), (r4 I:byte[]) java.nio.ByteBuffer.get(byte[]):java.nio.ByteBuffer type: VIRTUAL \l0x006f: ARRAY_LENGTH  (r0 I:int) = (r9 I:?[]) \l0x0070: ARITH  (r0 I:int) = (r0 I:int) % (16 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0072|0x0072: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x00bb \l}"];
Node_13 [shape=record,label="{13\:\ 0x0074|0x0074: ARRAY_LENGTH  (r0 I:int) = (r9 I:?[]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0075|0x0075: INVOKE  (r2 I:int) = (r3 I:java.nio.ByteBuffer) java.nio.ByteBuffer.remaining():int type: VIRTUAL \l0x0079: ARITH  (r1 I:int) = (r2 I:int) % (16 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x007b|0x007b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x00c3 \l}"];
Node_16 [shape=record,label="{16\:\ 0x007d|0x007d: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x007e|0x007e: ARITH  (r5 I:int) = (r0 I:int) + (r1 I:int) \l0x0080: ARITH  (r5 I:int) = (r5 I:int) + (16 int) \l0x0082: INVOKE  (r5 I:java.nio.ByteBuffer) = (r5 I:int) java.nio.ByteBuffer.allocate(int):java.nio.ByteBuffer type: STATIC \l0x0086: SGET  (r6 I:java.nio.ByteOrder) =  java.nio.ByteOrder.LITTLE_ENDIAN java.nio.ByteOrder \l0x0088: INVOKE  (r5 I:java.nio.ByteBuffer) = (r5 I:java.nio.ByteBuffer), (r6 I:java.nio.ByteOrder) java.nio.ByteBuffer.order(java.nio.ByteOrder):java.nio.ByteBuffer type: VIRTUAL \l0x008c: INVOKE  (r5 I:java.nio.ByteBuffer), (r9 I:byte[]) java.nio.ByteBuffer.put(byte[]):java.nio.ByteBuffer type: VIRTUAL \l0x008f: INVOKE  (r5 I:java.nio.ByteBuffer), (r0 I:int) java.nio.ByteBuffer.position(int):java.nio.Buffer type: VIRTUAL \l0x0092: INVOKE  (r5 I:java.nio.ByteBuffer), (r3 I:java.nio.ByteBuffer) java.nio.ByteBuffer.put(java.nio.ByteBuffer):java.nio.ByteBuffer type: VIRTUAL \l0x0095: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0096: INVOKE  (r5 I:java.nio.ByteBuffer), (r0 I:int) java.nio.ByteBuffer.position(int):java.nio.Buffer type: VIRTUAL \l0x0099: ARRAY_LENGTH  (r0 I:int) = (r9 I:?[]) \l0x009a: CAST  (r0 I:long) = (long) (r0 I:int) \l0x009b: INVOKE  (r5 I:java.nio.ByteBuffer), (r0 I:long) java.nio.ByteBuffer.putLong(long):java.nio.ByteBuffer type: VIRTUAL \l0x009e: CAST  (r0 I:long) = (long) (r2 I:int) \l0x009f: INVOKE  (r5 I:java.nio.ByteBuffer), (r0 I:long) java.nio.ByteBuffer.putLong(long):java.nio.ByteBuffer type: VIRTUAL \l0x00a2: INVOKE  (r0 I:byte[]) = (r5 I:java.nio.ByteBuffer) java.nio.ByteBuffer.array():byte[] type: VIRTUAL \l0x00a6: INVOKE  (r0 I:byte[]) = (r4 I:byte[]), (r0 I:byte[]) com.google.android.gms.internal.ads.zzdlm.zzf(byte[], byte[]):byte[] type: STATIC \l0x00aa: INVOKE  (r1 I:int) = (r3 I:java.nio.ByteBuffer) java.nio.ByteBuffer.limit():int type: VIRTUAL \l0x00ae: ARITH  (r1 I:int) = (r1 I:int) + (16 int) \l0x00b0: INVOKE  (r3 I:java.nio.ByteBuffer), (r1 I:int) java.nio.ByteBuffer.limit(int):java.nio.Buffer type: VIRTUAL \l0x00b3: INVOKE  (r3 I:java.nio.ByteBuffer), (r0 I:byte[]) java.nio.ByteBuffer.put(byte[]):java.nio.ByteBuffer type: VIRTUAL \l0x00b6: INVOKE  (r0 I:byte[]) = (r3 I:java.nio.ByteBuffer) java.nio.ByteBuffer.array():byte[] type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x00ba|0x00ba: RETURN  (r0 I:byte[]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x00bb|0x00bb: ARRAY_LENGTH  (r0 I:int) = (r9 I:?[]) \l0x00bc: ARITH  (r0 I:int) = (r0 I:int) + (16 int) \l0x00be: ARRAY_LENGTH  (r1 I:int) = (r9 I:?[]) \l0x00bf: ARITH  (r1 I:int) = (r1 I:int) % (16 int) \l0x00c1: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x00c3|0x00c3: ARITH  (r1 I:int) = (r2 I:int) + (16 int) \l0x00c5: ARITH  (r5 I:int) = (r2 I:int) % (16 int) \l0x00c7: ARITH  (r1 I:int) = (r1 I:int) \- (r5 I:int) \l}"];
MethodNode[shape=record,label="{public byte[] com.google.android.gms.internal.ads.zzdjv.zzc((r7 'this' I:com.google.android.gms.internal.ads.zzdjv A[IMMUTABLE_TYPE, THIS]), (r8 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.security.GeneralSecurityException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_19;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_14;
Node_20 -> Node_17;
}

