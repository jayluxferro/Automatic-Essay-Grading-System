digraph "CFG forcom.google.android.gms.internal.ads.zzhj.zzen()Landroid\/media\/MediaFormat;" {
subgraph cluster_Region_1244545644 {
label = "R(2:(6:2|(1:4)|5|(2:6|(2:(1:15)|(1:8)))|(1:11)|12)|14)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1314248002 {
label = "IF [B:1:0x0002] THEN: R(6:2|(1:4)|5|(2:6|(2:(1:15)|(1:8)))|(1:11)|12) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r6.zzafy == null) goto L_0x0004\l}"];
subgraph cluster_Region_447651591 {
label = "R(6:2|(1:4)|5|(2:6|(2:(1:15)|(1:8)))|(1:11)|12)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|android.media.MediaFormat android.media.MediaFormat r2 = new android.media.MediaFormat()\lr2.setString(\"mime\", r6.mimeType)\lzza(r2, \"max\-input\-size\", r6.zzafs)\lzza(r2, \"width\", r6.width)\lzza(r2, \"height\", r6.height)\lzza(r2, \"channel\-count\", r6.zzafu)\lzza(r2, \"sample\-rate\", r6.zzafv)\lfloat float r1 = r6.zzaft\l}"];
subgraph cluster_IfRegion_132112233 {
label = "IF [B:3:0x003b] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x003b|if (r1 != \-1.0f) goto L_0x003d\l}"];
subgraph cluster_Region_1170867340 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x003d|r2.setFloat(\"com.google.android.videos.pixelWidthHeightRatio\", r1)\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0040|int r0 = 0\l}"];
subgraph cluster_LoopRegion_598640625 {
label = "LOOP:0: (2:6|(2:(1:15)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_312755578 {
label = "R(2:6|(2:(1:15)|(1:8)))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0042|LOOP_START\lPHI: r0 \l  PHI: (r0v10 int) = (r0v9 int), (r0v25 int) binds: [B:5:0x0040, B:8:0x004a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0042\-\>B:8:0x004a\l|int r1 = r0\l}"];
subgraph cluster_Region_1369214518 {
label = "R(2:(1:15)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_545274309 {
label = "IF [B:7:0x0048] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0048|if (r1 \>= r6.zzafw.size()) goto L_0x0072\l}"];
subgraph cluster_Region_1763285835 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0072|SYNTHETIC\lEDGE_INSN: B:15:0x0072\-\>B:9:0x0072 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_85389315 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x004a|LOOP_END\lLOOP:0: B:6:0x0042\-\>B:8:0x004a\l|r2.setByteBuffer(new java.lang.StringBuilder(15).append(\"csd\-\").append(r1).toString(), java.nio.ByteBuffer.wrap(r6.zzafw.get(r1)))\lint r0 = r1 + 1\l}"];
}
}
}
}
subgraph cluster_IfRegion_159825135 {
label = "IF [B:10:0x0078] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0078|if (r6.zzack != \-1) goto L_0x007a\l}"];
subgraph cluster_Region_1776759797 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x007a|r2.setLong(\"durationUs\", r6.zzack)\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0081|zza(r2, \"max\-width\", r6.maxWidth)\lzza(r2, \"max\-height\", r6.maxHeight)\lr6.zzafy = r2\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0093|RETURN\l|return r6.zzafy\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0072|EDGE_INSN: B:15:0x0072\-\>B:9:0x0072 ?: BREAK  \l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0091}"];
MethodNode[shape=record,label="{public final android.media.MediaFormat com.google.android.gms.internal.ads.zzhj.zzen((r6v0 'this' com.google.android.gms.internal.ads.zzhj A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=16\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_13[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_15 -> Node_9;
Node_8 -> Node_6;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_0 -> Node_1;
Node_9 -> Node_10;
Node_13 -> Node_14;
}

