digraph "CFG forcom.google.android.gms.internal.ads.zzhj.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r4.zzafx != 0) goto L_0x0061\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r4.mimeType != null) goto L_0x0058\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|r0 = 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|PHI: r0 \l  PHI: (r0v5 int) = (r0v4 int), (r0v31 int) binds: [B:9:0x0058, B:4:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = ((((((((((((((((((r0 + 527) * 31) + r4.zzafs) * 31) + r4.width) * 31) + r4.height) * 31) + java.lang.Float.floatToRawIntBits(r4.zzaft)) * 31) + ((int) r4.zzack)) * 31) + r4.maxWidth) * 31) + r4.maxHeight) * 31) + r4.zzafu) * 31) + r4.zzafv\l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|LOOP_START\lPHI: r0 r1 \l  PHI: (r0v25 int) = (r0v24 int), (r0v30 int) binds: [B:5:0x000a, B:8:0x0046] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:5:0x000a, B:8:0x0046] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x003e\-\>B:8:0x0046\l}"];
Node_7 [shape=record,label="{7\:\ 0x0044|if (r1 \>= r4.zzafw.size()) goto L_0x005f\l}"];
Node_8 [shape=record,label="{8\:\ 0x0046|LOOP_END\lLOOP:0: B:6:0x003e\-\>B:8:0x0046\l|int r2 = r0 * 31\lint r0 = java.util.Arrays.hashCode(r4.zzafw.get(r1)) + r2\lint r1 = r1 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0058|int r0 = r4.mimeType.hashCode()\l}"];
Node_10 [shape=record,label="{10\:\ 0x005f|r4.zzafx = r0\l}"];
Node_11 [shape=record,label="{11\:\ 0x0061}"];
Node_12 [shape=record,label="{12\:\ 0x0063|RETURN\l|return r4.zzafx\l}"];
Node_13 [shape=record,label="{13\:\ 0x005f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final int com.google.android.gms.internal.ads.zzhj.hashCode((r4v0 'this' com.google.android.gms.internal.ads.zzhj A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_6;
Node_9 -> Node_5;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_10;
}

