digraph "CFG forcom.google.android.gms.internal.ads.zzdlk.zzk([B)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ CloneNotSupportedException \-\> 0x001a \}\lSplitter:B:1:0x0001\l|javax.crypto.Mac r0 = (javax.crypto.Mac) r4.zzhbh.clone()     \/\/ Catch:\{ CloneNotSupportedException \-\> 0x001a \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|PHI: r0 \l  PHI: (r0v4 javax.crypto.Mac) = (r0v3 javax.crypto.Mac), (r0v8 javax.crypto.Mac) binds: [B:6:0x001b, B:2:?] A[DONT_GENERATE, DONT_INLINE]\l|r0.update(r5)\lbyte[] r1 = new byte[r4.zzhbi]\ljava.lang.System.arraycopy(r0.doFinal(), 0, r1, 0, r4.zzhbi)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|RETURN\l|return r1\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|ExcHandler: CloneNotSupportedException (e java.lang.CloneNotSupportedException)\lSplitter:B:1:0x0001\l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|javax.crypto.Mac r0 = com.google.android.gms.internal.ads.zzdkw.zzhaq.zzgt(r4.zzhbj)\lr0.init(r4.zzhbk)\l}"];
MethodNode[shape=record,label="{public final byte[] com.google.android.gms.internal.ads.zzdlk.zzk((r4v0 'this' com.google.android.gms.internal.ads.zzdlk A[IMMUTABLE_TYPE, THIS]), (r5v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.security.GeneralSecurityException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_3;
}

