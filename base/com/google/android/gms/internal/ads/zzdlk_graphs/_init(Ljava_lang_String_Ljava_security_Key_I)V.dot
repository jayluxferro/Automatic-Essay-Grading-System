digraph "CFG forcom.google.android.gms.internal.ads.zzdlk.\<init\>(Ljava\/lang\/String;Ljava\/security\/Key;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r7 \>= 10) goto L_0x000f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007}"];
Node_3 [shape=record,label="{3\:\ 0x000e|throw new java.security.InvalidAlgorithmParameterException(\"tag size too small, need at least 10 bytes\")\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|r0 = 65535\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|switch(r5.hashCode()) \{\l    case \-1823053428: goto L_0x0030;\l    case 392315118: goto L_0x003a;\l    case 392317873: goto L_0x0044;\l    default: goto L_0x0017;\l\}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|PHI: r0 \l  PHI: (r0v5 char) = (r0v1 char), (r0v1 char), (r0v2 char), (r0v1 char), (r0v3 char), (r0v1 char), (r0v4 char) binds: [B:5:0x0014, B:19:0x004a, B:20:0x004c, B:16:0x0040, B:17:0x0042, B:13:0x0036, B:14:0x0038] A[DONT_GENERATE, DONT_INLINE]\l|switch(r0) \{\l    case 0: goto L_0x004e;\l    case 1: goto L_0x005a;\l    case 2: goto L_0x0066;\l    default: goto L_0x001a;\l\}\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|java.lang.String r0 = java.lang.String.valueOf(r5)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|if (r0.length() == 0) goto L_0x0072\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|java.lang.String r0 = \"unknown Hmac algorithm: \".concat(r0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|PHI: r0 \l  PHI: (r0v18 java.lang.String) = (r0v17 java.lang.String), (r0v19 java.lang.String) binds: [B:33:0x0072, B:9:0x0028] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|throw new java.security.NoSuchAlgorithmException(r0)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0030}"];
Node_13 [shape=record,label="{13\:\ 0x0036|if (r5.equals(\"HMACSHA1\") == false) goto L_0x0017\l}"];
Node_14 [shape=record,label="{14\:\ 0x0038|r0 = 0\l}"];
Node_15 [shape=record,label="{15\:\ 0x003a}"];
Node_16 [shape=record,label="{16\:\ 0x0040|if (r5.equals(\"HMACSHA256\") == false) goto L_0x0017\l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|r0 = 1\l}"];
Node_18 [shape=record,label="{18\:\ 0x0044}"];
Node_19 [shape=record,label="{19\:\ 0x004a|if (r5.equals(\"HMACSHA512\") == false) goto L_0x0017\l}"];
Node_20 [shape=record,label="{20\:\ 0x004c|r0 = 2\l}"];
Node_21 [shape=record,label="{21\:\ 0x004e}"];
Node_22 [shape=record,label="{22\:\ 0x0050|if (r7 \<= 20) goto L_0x0078\l}"];
Node_23 [shape=record,label="{23\:\ 0x0052}"];
Node_24 [shape=record,label="{24\:\ 0x0059|throw new java.security.InvalidAlgorithmParameterException(\"tag size too big\")\l}"];
Node_25 [shape=record,label="{25\:\ 0x005a}"];
Node_26 [shape=record,label="{26\:\ 0x005c|if (r7 \<= 32) goto L_0x0078\l}"];
Node_27 [shape=record,label="{27\:\ 0x005e}"];
Node_28 [shape=record,label="{28\:\ 0x0065|throw new java.security.InvalidAlgorithmParameterException(\"tag size too big\")\l}"];
Node_29 [shape=record,label="{29\:\ 0x0066}"];
Node_30 [shape=record,label="{30\:\ 0x0068|if (r7 \<= 64) goto L_0x0078\l}"];
Node_31 [shape=record,label="{31\:\ 0x006a}"];
Node_32 [shape=record,label="{32\:\ 0x0071|throw new java.security.InvalidAlgorithmParameterException(\"tag size too big\")\l}"];
Node_33 [shape=record,label="{33\:\ 0x0072|java.lang.String r0 = new java.lang.String(\"unknown Hmac algorithm: \")\l}"];
Node_34 [shape=record,label="{34\:\ 0x0078|r4.zzhbj = r5\lr4.zzhbi = r7\lr4.zzhbk = r6\lr4.zzhbh = com.google.android.gms.internal.ads.zzdkw.zzhaq.zzgt(r5)\lr4.zzhbh.init(r6)\l}"];
Node_35 [shape=record,label="{35\:\ 0x008d|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.gms.internal.ads.zzdlk.\<init\>((r4v0 'this' com.google.android.gms.internal.ads.zzdlk A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.security.Key A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.security.GeneralSecurityException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_12;
Node_5 -> Node_15;
Node_5 -> Node_18;
Node_6 -> Node_7;
Node_6 -> Node_21;
Node_6 -> Node_25;
Node_6 -> Node_29;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_33;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_6;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_6;
Node_15 -> Node_16;
Node_16 -> Node_6;
Node_16 -> Node_17[style=dashed];
Node_17 -> Node_6;
Node_18 -> Node_19;
Node_19 -> Node_6;
Node_19 -> Node_20[style=dashed];
Node_20 -> Node_6;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_34;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_34;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_33 -> Node_10;
Node_34 -> Node_35;
}

