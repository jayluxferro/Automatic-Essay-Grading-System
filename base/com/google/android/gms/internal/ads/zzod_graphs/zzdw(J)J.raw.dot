digraph "CFG forcom.google.android.gms.internal.ads.zzod.zzdw(J)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:long) = (r7 I:com.google.android.gms.internal.ads.zzod) com.google.android.gms.internal.ads.zzod.zzanu long \l0x0002: CONST  (r2 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0007: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:com.google.android.gms.internal.ads.zzlm) =  com.google.android.gms.internal.ads.zzlm \l0x000d: CONST_STR  (r1 I:java.lang.String) =  \"Can't scale timecode prior to timecodeScale being set.\" \l0x000f: INVOKE  \l  (r0 I:com.google.android.gms.internal.ads.zzlm)\l  (r1 I:java.lang.String)\l com.google.android.gms.internal.ads.zzlm.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IGET  (r2 I:long) = (r7 I:com.google.android.gms.internal.ads.zzod) com.google.android.gms.internal.ads.zzod.zzanu long \l0x0015: CONST  (r4 I:?[long, double]) = (1000(0x3e8, double:4.94E\-321) ?[long, double]) \l0x0017: MOVE  (r0 I:?[long, double]) = (r8 I:?[long, double]) \l0x0018: INVOKE  (r0 I:long) = (r0 I:long), (r2 I:long), (r4 I:long) com.google.android.gms.internal.ads.zzsy.zza(long, long, long):long type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: RETURN  (r0 I:long) \l}"];
MethodNode[shape=record,label="{private final long com.google.android.gms.internal.ads.zzod.zzdw((r7 'this' I:com.google.android.gms.internal.ads.zzod A[IMMUTABLE_TYPE, THIS]), (r8 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.gms.internal.ads.zzlm]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

