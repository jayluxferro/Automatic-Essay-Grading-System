digraph "CFG forcom.google.android.gms.internal.ads.zzdnh.zza.zzfj(J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|if (com.google.android.gms.internal.ads.zzdnh.zzaww() == false) goto L_0x004e\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c}"];
Node_3 [shape=record,label="{3\:\ 0x0012|if (zzawu() \< 10) goto L_0x004e\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|LOOP_START\lPHI: r14 \l  PHI: (r14v3 long) = (r14v0 long), (r14v4 long) binds: [B:3:0x0012, B:7:0x0029] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0014\-\>B:7:0x0029\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|if (((r14 & \-128) \> 0 ? 1 : ((r14 & \-128) == 0 ? 0 : \-1)) != 0) goto L_0x0029\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|byte[] r0 = r13.buffer\lint r1 = r13.position\lr13.position = r1 + 1\lcom.google.android.gms.internal.ads.zzdqy.zza(r0, (long) r1, (byte) ((int) r14))\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|LOOP_END\lLOOP:0: B:4:0x0014\-\>B:7:0x0029\l|byte[] r0 = r13.buffer\lint r1 = r13.position\lr13.position = r1 + 1\lcom.google.android.gms.internal.ads.zzdqy.zza(r0, (long) r1, (byte) ((((int) r14) & 127) \| 128))\llong r14 = r14 \>\>\> 7\l}"];
Node_8 [shape=record,label="{8\:\ 0x003d|SYNTHETIC\lSplitter:B:8:0x003d\l}"];
Node_9 [shape=record,label="{9\:\ ?|LOOP_END\lCatch:\{ IndexOutOfBoundsException \-\> 0x0061 \}\lSplitter:B:8:0x003d\lLOOP:1: B:10:0x004e\-\>B:9:?\l|byte[] r0 = r13.buffer     \/\/ Catch:\{ IndexOutOfBoundsException \-\> 0x0061 \}\lint r1 = r13.position     \/\/ Catch:\{ IndexOutOfBoundsException \-\> 0x0061 \}\lr13.position = r1 + 1     \/\/ Catch:\{ IndexOutOfBoundsException \-\> 0x0061 \}\lr0[r1] = (byte) ((((int) r14) & 127) \| 128)     \/\/ Catch:\{ IndexOutOfBoundsException \-\> 0x0061 \}\llong r14 = r14 \>\>\> 7     \/\/ Catch:\{ IndexOutOfBoundsException \-\> 0x0061 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x004e|LOOP_START\lCatch:\{ IndexOutOfBoundsException \-\> 0x0061 \}\lPHI: r14 \l  PHI: (r14v1 long) = (r14v0 long), (r14v2 long) binds: [B:18:0x004e, B:9:?] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:10:0x004e\-\>B:9:?\l}"];
Node_11 [shape=record,label="{11\:\ 0x0052|Catch:\{ IndexOutOfBoundsException \-\> 0x0061 \}\l|if (((r14 & \-128) \> 0 ? 1 : ((r14 & \-128) == 0 ? 0 : \-1)) != 0) goto L_0x003d     \/\/ Catch:\{ IndexOutOfBoundsException \-\> 0x0061 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0054|Catch:\{ IndexOutOfBoundsException \-\> 0x0061 \}\l|byte[] r0 = r13.buffer     \/\/ Catch:\{ IndexOutOfBoundsException \-\> 0x0061 \}\lint r1 = r13.position     \/\/ Catch:\{ IndexOutOfBoundsException \-\> 0x0061 \}\lr13.position = r1 + 1     \/\/ Catch:\{ IndexOutOfBoundsException \-\> 0x0061 \}\lr0[r1] = (byte) ((int) r14)     \/\/ Catch:\{ IndexOutOfBoundsException \-\> 0x0061 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0061|ExcHandler: IndexOutOfBoundsException (r0v4 'e' java.lang.IndexOutOfBoundsException A[CUSTOM_DECLARE])\lSplitter:B:8:0x003d\l|java.lang.IndexOutOfBoundsException r0 = move\-exception\l}"];
Node_14 [shape=record,label="{14\:\ 0x0062|java.lang.Object[] r3 = new java.lang.Object[]\{java.lang.Integer.valueOf(r13.position), java.lang.Integer.valueOf(r13.limit), 1\}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0088|throw new com.google.android.gms.internal.ads.zzdnh.zzc(java.lang.String.format(\"Pos: %d, limit: %d, len: %d\", r3), r0)\l}"];
Node_16 [shape=record,label="{16\:\ 0x001a|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0054|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x004e|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public final void com.google.android.gms.internal.ads.zzdnh.zza.zzfj((r13v0 'this' com.google.android.gms.internal.ads.zzdnh$zza A[IMMUTABLE_TYPE, THIS]), (r14v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_18;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_18;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_16[style=dashed];
Node_6 -> Node_19;
Node_7 -> Node_4;
Node_8 -> Node_9;
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_8;
Node_11 -> Node_17[style=dashed];
Node_12 -> Node_20;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_6;
Node_17 -> Node_12;
Node_18 -> Node_10;
}

