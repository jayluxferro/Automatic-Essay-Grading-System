digraph "CFG forcom.google.android.gms.internal.ads.zzaio.createFromParcel(Landroid\/os\/Parcel;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: INVOKE  (r4 I:int) = (r8 I:android.os.Parcel) com.google.android.gms.common.internal.safeparcel.SafeParcelReader.validateObjectHeader(android.os.Parcel):int type: STATIC \l0x0006: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: INVOKE  (r5 I:int) = (r8 I:android.os.Parcel) android.os.Parcel.dataPosition():int type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r5 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:10:0x0031 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: INVOKE  (r5 I:int) = (r8 I:android.os.Parcel) com.google.android.gms.common.internal.safeparcel.SafeParcelReader.readHeader(android.os.Parcel):int type: STATIC \l0x0012: INVOKE  (r6 I:int) = (r5 I:int) com.google.android.gms.common.internal.safeparcel.SafeParcelReader.getFieldId(int):int type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: SWITCH  \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4] t:[0x001d, 0x0022, 0x0027, 0x002c] \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: INVOKE  (r8 I:android.os.Parcel), (r5 I:int) com.google.android.gms.common.internal.safeparcel.SafeParcelReader.skipUnknownField(android.os.Parcel, int):void type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: INVOKE  (r3 I:java.lang.String) = (r8 I:android.os.Parcel), (r5 I:int) com.google.android.gms.common.internal.safeparcel.SafeParcelReader.createString(android.os.Parcel, int):java.lang.String type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: INVOKE  (r2 I:boolean) = (r8 I:android.os.Parcel), (r5 I:int) com.google.android.gms.common.internal.safeparcel.SafeParcelReader.readBoolean(android.os.Parcel, int):boolean type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: INVOKE  (r1 I:int) = (r8 I:android.os.Parcel), (r5 I:int) com.google.android.gms.common.internal.safeparcel.SafeParcelReader.readInt(android.os.Parcel, int):int type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: INVOKE  (r0 I:java.lang.String) = (r8 I:android.os.Parcel), (r5 I:int) com.google.android.gms.common.internal.safeparcel.SafeParcelReader.createString(android.os.Parcel, int):java.lang.String type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: INVOKE  (r8 I:android.os.Parcel), (r4 I:int) com.google.android.gms.common.internal.safeparcel.SafeParcelReader.ensureAtEnd(android.os.Parcel, int):void type: STATIC \l0x0034: NEW_INSTANCE  (r4 I:com.google.android.gms.internal.ads.zzain) =  com.google.android.gms.internal.ads.zzain \l0x0036: INVOKE  \l  (r4 I:com.google.android.gms.internal.ads.zzain)\l  (r3 I:java.lang.String)\l  (r2 I:boolean)\l  (r1 I:int)\l  (r0 I:java.lang.String)\l com.google.android.gms.internal.ads.zzain.\<init\>(java.lang.String, boolean, int, java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0039|0x0039: RETURN  (r4 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public final \/* synthetic *\/ java.lang.Object com.google.android.gms.internal.ads.zzaio.createFromParcel((r7 'this' I:com.google.android.gms.internal.ads.zzaio A[IMMUTABLE_TYPE, THIS]), (r8 I:android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_4 -> Node_7;
Node_4 -> Node_8;
Node_4 -> Node_9;
Node_5 -> Node_1;
Node_6 -> Node_1;
Node_7 -> Node_1;
Node_8 -> Node_1;
Node_9 -> Node_1;
Node_10 -> Node_11;
}

