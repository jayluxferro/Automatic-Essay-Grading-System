digraph "CFG forcom.google.android.gms.internal.ads.zzdjr.zza([BI[BII)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r8 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:5:0x000a \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: ARRAY_LENGTH  (r0 I:int) = (r4 I:?[]) \l0x0003: ARITH  (r0 I:int) = (r0 I:int) \- (r8 I:int) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \< (r5 I:?[int, byte, short, char])  \-\> B:5:0x000a \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: ARRAY_LENGTH  (r0 I:int) = (r6 I:?[]) \l0x0007: ARITH  (r0 I:int) = (r0 I:int) \- (r8 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r0 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:7:0x0012 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"That combination of buffers, offsets and length to xor result in out\-of\-bond accesses.\" \l0x000e: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r1 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: NEW_ARRAY  (r1 I:byte[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0014: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|0x0015: IF  (r0 I:?[int, byte, short, char]) \>= (r8 I:?[int, byte, short, char])  \-\> B:10:0x0026 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: ARITH  (r2 I:int) = (r0 I:int) + (r5 I:int) \l0x0019: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r4 I:byte[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x001b: ARITH  (r3 I:int) = (r0 I:int) + (r7 I:int) \l0x001d: AGET  (r3 I:byte A[IMMUTABLE_TYPE]) = \l  (r6 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l \l0x001f: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) ^ (r3 I:?[int, boolean, short, byte, char]) \l0x0020: CAST  (r2 I:byte) = (byte) (r2 I:int) \l0x0021: APUT  \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l  (r2 I:byte A[IMMUTABLE_TYPE])\l \l0x0023: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: RETURN  (r1 I:byte[]) \l}"];
MethodNode[shape=record,label="{public static final byte[] com.google.android.gms.internal.ads.zzdjr.zza((r4 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_8;
}

