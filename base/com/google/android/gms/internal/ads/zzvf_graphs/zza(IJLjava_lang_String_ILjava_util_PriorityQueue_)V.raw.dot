digraph "CFG forcom.google.android.gms.internal.ads.zzvf.zza(IJLjava\/lang\/String;ILjava\/util\/PriorityQueue;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r1 I:com.google.android.gms.internal.ads.zzvg) =  com.google.android.gms.internal.ads.zzvg \l0x0002: INVOKE  \l  (r1 I:com.google.android.gms.internal.ads.zzvg)\l  (r8 I:long)\l  (r10 I:java.lang.String)\l  (r11 I:int)\l com.google.android.gms.internal.ads.zzvg.\<init\>(long, java.lang.String, int):void type: DIRECT \l0x0005: INVOKE  (r0 I:int) = (r12 I:java.util.PriorityQueue) java.util.PriorityQueue.size():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0026 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: INVOKE  (r0 I:java.lang.Object) = (r12 I:java.util.PriorityQueue) java.util.PriorityQueue.peek():java.lang.Object type: VIRTUAL \l0x000f: CHECK_CAST  (r0 I:com.google.android.gms.internal.ads.zzvg) = (com.google.android.gms.internal.ads.zzvg) (r0 I:?[OBJECT, ARRAY]) \l0x0011: IGET  (r0 I:int) = (r0 I:com.google.android.gms.internal.ads.zzvg) com.google.android.gms.internal.ads.zzvg.zzbvx int \l0x0013: IGET  (r2 I:int) = (r1 I:com.google.android.gms.internal.ads.zzvg) com.google.android.gms.internal.ads.zzvg.zzbvx int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r0 I:?[int, byte, short, char]) \> (r2 I:?[int, byte, short, char])  \-\> B:6:0x0025 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: INVOKE  (r0 I:java.lang.Object) = (r12 I:java.util.PriorityQueue) java.util.PriorityQueue.peek():java.lang.Object type: VIRTUAL \l0x001b: CHECK_CAST  (r0 I:com.google.android.gms.internal.ads.zzvg) = (com.google.android.gms.internal.ads.zzvg) (r0 I:?[OBJECT, ARRAY]) \l0x001d: IGET  (r2 I:long) = (r0 I:com.google.android.gms.internal.ads.zzvg) com.google.android.gms.internal.ads.zzvg.value long \l0x001f: IGET  (r4 I:long) = (r1 I:com.google.android.gms.internal.ads.zzvg) com.google.android.gms.internal.ads.zzvg.value long \l0x0021: CMP_L  (r0 I:int) = (r2 I:long), (r4 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x0026 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: INVOKE  (r0 I:boolean) = (r12 I:java.util.PriorityQueue), (r1 I:java.lang.Object) java.util.PriorityQueue.contains(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0025 \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: INVOKE  (r12 I:java.util.PriorityQueue), (r1 I:java.lang.Object) java.util.PriorityQueue.add(java.lang.Object):boolean type: VIRTUAL \l0x002f: INVOKE  (r0 I:int) = (r12 I:java.util.PriorityQueue) java.util.PriorityQueue.size():int type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|0x0033: IF  (r0 I:?[int, byte, short, char]) \<= (r7 I:?[int, byte, short, char])  \-\> B:6:0x0025 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: INVOKE  (r12 I:java.util.PriorityQueue) java.util.PriorityQueue.poll():java.lang.Object type: VIRTUAL \l}"];
MethodNode[shape=record,label="{private static void com.google.android.gms.internal.ads.zzvf.zza((r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.util.PriorityQueue\<com.google.android.gms.internal.ads.zzvg\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, com.google.android.gms.common.util.VisibleForTesting, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(IJ, Ljava\/lang\/String;, I, Ljava\/util\/PriorityQueue, \<, Lcom\/google\/android\/gms\/internal\/ads\/zzvg;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_6;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_6;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_6;
}

