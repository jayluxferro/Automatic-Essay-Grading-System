digraph "CFG forcom.google.android.gms.internal.ads.zzan.zzc(Ljava\/io\/InputStream;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r6 I:?[long, double]) = (255(0xff, double:1.26E\-321) ?[long, double]) \l0x0002: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0004: INVOKE  (r2 I:int) = (r8 I:java.io.InputStream) com.google.android.gms.internal.ads.zzan.zza(java.io.InputStream):int type: STATIC \l0x0008: CAST  (r2 I:long) = (long) (r2 I:int) \l0x0009: ARITH  (r2 I:long) = (r2 I:long) & (r6 I:long) \l0x000a: ARITH  (r0 I:long) = (r0 I:long) \| (r2 I:long) \l0x000b: INVOKE  (r2 I:int) = (r8 I:java.io.InputStream) com.google.android.gms.internal.ads.zzan.zza(java.io.InputStream):int type: STATIC \l0x000f: CAST  (r2 I:long) = (long) (r2 I:int) \l0x0010: ARITH  (r2 I:long) = (r2 I:long) & (r6 I:long) \l0x0011: CONST  (r4 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0013: ARITH  (r2 I:long) = (r2 I:long) \<\< (r4 I:long) \l0x0014: ARITH  (r0 I:long) = (r0 I:long) \| (r2 I:long) \l0x0015: INVOKE  (r2 I:int) = (r8 I:java.io.InputStream) com.google.android.gms.internal.ads.zzan.zza(java.io.InputStream):int type: STATIC \l0x0019: CAST  (r2 I:long) = (long) (r2 I:int) \l0x001a: ARITH  (r2 I:long) = (r2 I:long) & (r6 I:long) \l0x001b: CONST  (r4 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x001d: ARITH  (r2 I:long) = (r2 I:long) \<\< (r4 I:long) \l0x001e: ARITH  (r0 I:long) = (r0 I:long) \| (r2 I:long) \l0x001f: INVOKE  (r2 I:int) = (r8 I:java.io.InputStream) com.google.android.gms.internal.ads.zzan.zza(java.io.InputStream):int type: STATIC \l0x0023: CAST  (r2 I:long) = (long) (r2 I:int) \l0x0024: ARITH  (r2 I:long) = (r2 I:long) & (r6 I:long) \l0x0025: CONST  (r4 I:?[int, float, short, byte, char]) = (24 ?[int, float, short, byte, char]) \l0x0027: ARITH  (r2 I:long) = (r2 I:long) \<\< (r4 I:long) \l0x0028: ARITH  (r0 I:long) = (r0 I:long) \| (r2 I:long) \l0x0029: INVOKE  (r2 I:int) = (r8 I:java.io.InputStream) com.google.android.gms.internal.ads.zzan.zza(java.io.InputStream):int type: STATIC \l0x002d: CAST  (r2 I:long) = (long) (r2 I:int) \l0x002e: ARITH  (r2 I:long) = (r2 I:long) & (r6 I:long) \l0x002f: CONST  (r4 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0031: ARITH  (r2 I:long) = (r2 I:long) \<\< (r4 I:long) \l0x0032: ARITH  (r0 I:long) = (r0 I:long) \| (r2 I:long) \l0x0033: INVOKE  (r2 I:int) = (r8 I:java.io.InputStream) com.google.android.gms.internal.ads.zzan.zza(java.io.InputStream):int type: STATIC \l0x0037: CAST  (r2 I:long) = (long) (r2 I:int) \l0x0038: ARITH  (r2 I:long) = (r2 I:long) & (r6 I:long) \l0x0039: CONST  (r4 I:?[int, float, short, byte, char]) = (40 ?[int, float, short, byte, char]) \l0x003b: ARITH  (r2 I:long) = (r2 I:long) \<\< (r4 I:long) \l0x003c: ARITH  (r0 I:long) = (r0 I:long) \| (r2 I:long) \l0x003d: INVOKE  (r2 I:int) = (r8 I:java.io.InputStream) com.google.android.gms.internal.ads.zzan.zza(java.io.InputStream):int type: STATIC \l0x0041: CAST  (r2 I:long) = (long) (r2 I:int) \l0x0042: ARITH  (r2 I:long) = (r2 I:long) & (r6 I:long) \l0x0043: CONST  (r4 I:?[int, float, short, byte, char]) = (48 ?[int, float, short, byte, char]) \l0x0045: ARITH  (r2 I:long) = (r2 I:long) \<\< (r4 I:long) \l0x0046: ARITH  (r0 I:long) = (r0 I:long) \| (r2 I:long) \l0x0047: INVOKE  (r2 I:int) = (r8 I:java.io.InputStream) com.google.android.gms.internal.ads.zzan.zza(java.io.InputStream):int type: STATIC \l0x004b: CAST  (r2 I:long) = (long) (r2 I:int) \l0x004c: ARITH  (r2 I:long) = (r2 I:long) & (r6 I:long) \l0x004d: CONST  (r4 I:?[int, float, short, byte, char]) = (56 ?[int, float, short, byte, char]) \l0x004f: ARITH  (r2 I:long) = (r2 I:long) \<\< (r4 I:long) \l0x0050: ARITH  (r0 I:long) = (r0 I:long) \| (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0051|0x0051: RETURN  (r0 I:long) \l}"];
MethodNode[shape=record,label="{static long com.google.android.gms.internal.ads.zzan.zzc((r8 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

