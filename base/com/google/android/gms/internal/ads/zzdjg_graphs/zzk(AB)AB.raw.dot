digraph "CFG forcom.google.android.gms.internal.ads.zzdjg.zzk([B)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r8 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0003: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: INVOKE  (r4 I:javax.crypto.Cipher) =  com.google.android.gms.internal.ads.zzdjg.zzauu():javax.crypto.Cipher type: STATIC \l0x0008: IGET  (r0 I:javax.crypto.SecretKey) = (r9 I:com.google.android.gms.internal.ads.zzdjg) com.google.android.gms.internal.ads.zzdjg.zzgxc javax.crypto.SecretKey \l0x000a: INVOKE  \l  (r4 I:javax.crypto.Cipher)\l  (r3 I:int)\l  (r0 I:java.security.Key)\l javax.crypto.Cipher.init(int, java.security.Key):void type: VIRTUAL \l0x000d: ARRAY_LENGTH  (r0 I:int) = (r10 I:?[]) \l0x000e: CAST  (r0 I:double) = (double) (r0 I:int) \l0x000f: CONST  (r6 I:?[long, double]) = \l  (4625196817309499392(0x4030000000000000, double:16.0) ?[long, double])\l \l0x0011: ARITH  (r0 I:double) = (r0 I:double) \/ (r6 I:double) \l0x0012: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x0016: CAST  (r0 I:int) = (int) (r0 I:double) \l0x0017: INVOKE  (r5 I:int) = (r3 I:int), (r0 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x001b: ARITH  (r0 I:int) = (r5 I:int) \<\< (4 int) \l0x001d: ARRAY_LENGTH  (r1 I:int) = (r10 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x001e|0x001e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x003f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0020|0x0020: ARITH  (r0 I:int) = (r5 I:int) + (\-1 int) \l0x0022: ARITH  (r0 I:int) = (r0 I:int) \<\< (4 int) \l0x0024: IGET  (r1 I:byte[]) = (r9 I:com.google.android.gms.internal.ads.zzdjg) com.google.android.gms.internal.ads.zzdjg.zzgxe byte[] \l0x0026: INVOKE  (r0 I:byte[]) = \l  (r10 I:byte[])\l  (r0 I:int)\l  (r1 I:byte[])\l  (r2 I:int)\l  (r8 I:int)\l com.google.android.gms.internal.ads.zzdjr.zza(byte[], int, byte[], int, int):byte[] type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x002a|0x002a: NEW_ARRAY  (r1 I:byte[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x002c: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x002d: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x002e|0x002e: ARITH  (r6 I:int) = (r5 I:int) + (\-1 int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0030|0x0030: IF  (r1 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:12:0x0063 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0032|0x0032: ARITH  (r6 I:int) = (r1 I:int) \<\< (4 int) \l0x0034: INVOKE  (r3 I:byte[]) = \l  (r3 I:byte[])\l  (r2 I:int)\l  (r10 I:byte[])\l  (r6 I:int)\l  (r8 I:int)\l com.google.android.gms.internal.ads.zzdjr.zza(byte[], int, byte[], int, int):byte[] type: STATIC \l0x0038: INVOKE  (r3 I:byte[]) = (r4 I:javax.crypto.Cipher), (r3 I:byte[]) javax.crypto.Cipher.doFinal(byte[]):byte[] type: VIRTUAL \l0x003c: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x003f|0x003f: ARITH  (r0 I:int) = (r5 I:int) + (\-1 int) \l0x0041: ARITH  (r0 I:int) = (r0 I:int) \<\< (4 int) \l0x0043: ARRAY_LENGTH  (r1 I:int) = (r10 I:?[]) \l0x0044: INVOKE  (r0 I:byte[]) = (r10 I:byte[]), (r0 I:int), (r1 I:int) java.util.Arrays.copyOfRange(byte[], int, int):byte[] type: STATIC \l0x0048: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0049|0x0049: IF  (r1 I:?[int, byte, short, char]) \< (r8 I:?[int, byte, short, char])  \-\> B:11:0x0053 \l}"];
Node_9 [shape=record,label="{9\:\ 0x004b|0x004b: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x004d: CONST_STR  (r1 I:java.lang.String) =  \"x must be smaller than a block.\" \l0x004f: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r1 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0052|0x0052: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0053|0x0053: INVOKE  (r1 I:byte[]) = (r0 I:byte[]), (r8 I:int) java.util.Arrays.copyOf(byte[], int):byte[] type: STATIC \l0x0057: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l0x0058: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (\-128(0xffffffffffffff80, float:NaN) ?[int, float, short, byte, char])\l \l0x005a: APUT  \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l  (r3 I:byte A[IMMUTABLE_TYPE])\l \l0x005c: IGET  (r0 I:byte[]) = (r9 I:com.google.android.gms.internal.ads.zzdjg) com.google.android.gms.internal.ads.zzdjg.zzgxf byte[] \l0x005e: INVOKE  (r0 I:byte[]) = (r1 I:byte[]), (r0 I:byte[]) com.google.android.gms.internal.ads.zzdjr.zzd(byte[], byte[]):byte[] type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0063|0x0063: INVOKE  (r0 I:byte[]) = (r0 I:byte[]), (r3 I:byte[]) com.google.android.gms.internal.ads.zzdjr.zzd(byte[], byte[]):byte[] type: STATIC \l0x0067: IGET  (r1 I:int) = (r9 I:com.google.android.gms.internal.ads.zzdjg) com.google.android.gms.internal.ads.zzdjg.zzgxd int \l0x0069: NEW_ARRAY  (r1 I:byte[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x006b: INVOKE  (r0 I:byte[]) = (r4 I:javax.crypto.Cipher), (r0 I:byte[]) javax.crypto.Cipher.doFinal(byte[]):byte[] type: VIRTUAL \l0x006f: IGET  (r3 I:int) = (r9 I:com.google.android.gms.internal.ads.zzdjg) com.google.android.gms.internal.ads.zzdjg.zzgxd int \l0x0071: INVOKE  \l  (r0 I:java.lang.Object)\l  (r2 I:int)\l  (r1 I:java.lang.Object)\l  (r2 I:int)\l  (r3 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0074|0x0074: RETURN  (r1 I:byte[]) \l}"];
MethodNode[shape=record,label="{public final byte[] com.google.android.gms.internal.ads.zzdjg.zzk((r9 'this' I:com.google.android.gms.internal.ads.zzdjg A[IMMUTABLE_TYPE, THIS]), (r10 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.security.GeneralSecurityException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_3;
Node_12 -> Node_13;
}

