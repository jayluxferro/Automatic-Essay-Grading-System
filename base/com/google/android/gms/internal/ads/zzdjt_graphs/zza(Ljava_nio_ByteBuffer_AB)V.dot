digraph "CFG forcom.google.android.gms.internal.ads.zzdjt.zza(Ljava\/nio\/ByteBuffer;[B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|if ((r8.remaining() \- zzauv()) \>= r9.length) goto L_0x0014\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c}"];
Node_3 [shape=record,label="{3\:\ 0x0013|throw new java.lang.IllegalArgumentException(\"Given ByteBuffer output is too small\")\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|byte[] r1 = com.google.android.gms.internal.ads.zzdln.zzff(zzauv())\lr8.put(r1)\ljava.nio.ByteBuffer r2 = java.nio.ByteBuffer.wrap(r9)\lint r3 = r2.remaining()\lint r4 = (r3 \/ 64) + 1\lr0 = 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|LOOP_START\lPHI: r0 \l  PHI: (r0v5 int) = (r0v4 int), (r0v6 int) binds: [B:4:0x0014, B:9:0x003e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x002c\-\>B:9:0x003e\l|if (r0 \>= r4) goto L_0x0047\l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|java.nio.ByteBuffer r5 = zzc(r1, r7.zzgyg + r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|if (r0 != (r4 + \-1)) goto L_0x0041\l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|com.google.android.gms.internal.ads.zzdjr.zza(r8, r2, r5, r3 % 64)\l}"];
Node_9 [shape=record,label="{9\:\ 0x003e|LOOP_END\lLOOP:0: B:5:0x002c\-\>B:9:0x003e\l|int r0 = r0 + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|com.google.android.gms.internal.ads.zzdjr.zza(r8, r2, r5, 64)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0047|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ 0x0047|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{final void com.google.android.gms.internal.ads.zzdjt.zza((r7v0 'this' com.google.android.gms.internal.ads.zzdjt A[IMMUTABLE_TYPE, THIS]), (r8v0 java.nio.ByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.security.GeneralSecurityException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_13;
Node_9 -> Node_5;
Node_10 -> Node_14;
Node_12 -> Node_11;
Node_13 -> Node_9;
Node_14 -> Node_9;
}

