digraph "CFG forcom.google.android.gms.internal.ads.zzdjt.zzc([BI)Ljava\/nio\/ByteBuffer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r0 I:int[]) = (r7 I:byte[]) com.google.android.gms.internal.ads.zzdjt.zzr(byte[]):int[] type: STATIC \l0x0005: INVOKE  (r3 I:int[]) = \l  (r6 I:com.google.android.gms.internal.ads.zzdjt)\l  (r0 I:int[])\l  (r8 I:int)\l com.google.android.gms.internal.ads.zzdjt.zzb(int[], int):int[] type: VIRTUAL \l0x0009: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.lang.Object) java.lang.Object.clone():java.lang.Object type: VIRTUAL \l0x000d: CHECK_CAST  (r0 I:int[]) = (int[]) (r0 I:?[OBJECT, ARRAY]) \l0x000f: INVOKE  (r0 I:int[]) com.google.android.gms.internal.ads.zzdjt.zzc(int[]):void type: STATIC \l0x0012: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: ARRAY_LENGTH  (r4 I:int) = (r3 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: IF  (r1 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:4:0x0020 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: AGET  (r4 I:?[int, float]) = (r3 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x0018: AGET  (r5 I:?[int, float]) = (r0 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x001a: ARITH  (r4 I:int) = (r4 I:int) + (r5 I:int) \l0x001b: APUT  \l  (r3 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x001d: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: CONST  (r0 I:?[int, float, short, byte, char]) = (64 ?[int, float, short, byte, char]) \l0x0022: INVOKE  (r0 I:java.nio.ByteBuffer) = (r0 I:int) java.nio.ByteBuffer.allocate(int):java.nio.ByteBuffer type: STATIC \l0x0026: SGET  (r1 I:java.nio.ByteOrder) =  java.nio.ByteOrder.LITTLE_ENDIAN java.nio.ByteOrder \l0x0028: INVOKE  (r0 I:java.nio.ByteBuffer) = (r0 I:java.nio.ByteBuffer), (r1 I:java.nio.ByteOrder) java.nio.ByteBuffer.order(java.nio.ByteOrder):java.nio.ByteBuffer type: VIRTUAL \l0x002c: INVOKE  (r1 I:java.nio.IntBuffer) = (r0 I:java.nio.ByteBuffer) java.nio.ByteBuffer.asIntBuffer():java.nio.IntBuffer type: VIRTUAL \l0x0030: CONST  (r4 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0032: INVOKE  \l  (r1 I:java.nio.IntBuffer)\l  (r3 I:int[])\l  (r2 I:int)\l  (r4 I:int)\l java.nio.IntBuffer.put(int[], int, int):java.nio.IntBuffer type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0035|0x0035: RETURN  (r0 I:java.nio.ByteBuffer) \l}"];
MethodNode[shape=record,label="{final java.nio.ByteBuffer com.google.android.gms.internal.ads.zzdjt.zzc((r6 'this' I:com.google.android.gms.internal.ads.zzdjt A[IMMUTABLE_TYPE, THIS]), (r7 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

