digraph "CFG forcom.google.android.gms.internal.ads.zzdjt.zza(Ljava\/nio\/ByteBuffer;[B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r8 I:java.nio.ByteBuffer) java.nio.ByteBuffer.remaining():int type: VIRTUAL \l0x0004: INVOKE  (r1 I:int) = (r7 I:com.google.android.gms.internal.ads.zzdjt) com.google.android.gms.internal.ads.zzdjt.zzauv():int type: VIRTUAL \l0x0008: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0009: ARRAY_LENGTH  (r1 I:int) = (r9 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:4:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x000e: CONST_STR  (r1 I:java.lang.String) =  \"Given ByteBuffer output is too small\" \l0x0010: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r1 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: INVOKE  (r0 I:int) = (r7 I:com.google.android.gms.internal.ads.zzdjt) com.google.android.gms.internal.ads.zzdjt.zzauv():int type: VIRTUAL \l0x0018: INVOKE  (r1 I:byte[]) = (r0 I:int) com.google.android.gms.internal.ads.zzdln.zzff(int):byte[] type: STATIC \l0x001c: INVOKE  (r8 I:java.nio.ByteBuffer), (r1 I:byte[]) java.nio.ByteBuffer.put(byte[]):java.nio.ByteBuffer type: VIRTUAL \l0x001f: INVOKE  (r2 I:java.nio.ByteBuffer) = (r9 I:byte[]) java.nio.ByteBuffer.wrap(byte[]):java.nio.ByteBuffer type: STATIC \l0x0023: INVOKE  (r3 I:int) = (r2 I:java.nio.ByteBuffer) java.nio.ByteBuffer.remaining():int type: VIRTUAL \l0x0027: ARITH  (r0 I:int) = (r3 I:int) \/ (64 int) \l0x0029: ARITH  (r4 I:int) = (r0 I:int) + (1 int) \l0x002b: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: IF  (r0 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:11:0x0047 \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: IGET  (r5 I:int) = (r7 I:com.google.android.gms.internal.ads.zzdjt) com.google.android.gms.internal.ads.zzdjt.zzgyg int \l0x0030: ARITH  (r5 I:int) = (r5 I:int) + (r0 I:int) \l0x0031: INVOKE  (r5 I:java.nio.ByteBuffer) = \l  (r7 I:com.google.android.gms.internal.ads.zzdjt)\l  (r1 I:byte[])\l  (r5 I:int)\l com.google.android.gms.internal.ads.zzdjt.zzc(byte[], int):java.nio.ByteBuffer type: VIRTUAL \l0x0035: ARITH  (r6 I:int) = (r4 I:int) + (\-1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|0x0037: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0041 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: ARITH  (r6 I:int) = (r3 I:int) % (64 int) \l0x003b: INVOKE  \l  (r8 I:java.nio.ByteBuffer)\l  (r2 I:java.nio.ByteBuffer)\l  (r5 I:java.nio.ByteBuffer)\l  (r6 I:int)\l com.google.android.gms.internal.ads.zzdjr.zza(java.nio.ByteBuffer, java.nio.ByteBuffer, java.nio.ByteBuffer, int):void type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x003e|0x003e: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|0x0041: CONST  (r6 I:?[int, float, short, byte, char]) = (64 ?[int, float, short, byte, char]) \l0x0043: INVOKE  \l  (r8 I:java.nio.ByteBuffer)\l  (r2 I:java.nio.ByteBuffer)\l  (r5 I:java.nio.ByteBuffer)\l  (r6 I:int)\l com.google.android.gms.internal.ads.zzdjr.zza(java.nio.ByteBuffer, java.nio.ByteBuffer, java.nio.ByteBuffer, int):void type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0047|0x0047: RETURN   \l}"];
MethodNode[shape=record,label="{final void com.google.android.gms.internal.ads.zzdjt.zza((r7 'this' I:com.google.android.gms.internal.ads.zzdjt A[IMMUTABLE_TYPE, THIS]), (r8 I:java.nio.ByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.security.GeneralSecurityException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_5;
Node_10 -> Node_9;
}

