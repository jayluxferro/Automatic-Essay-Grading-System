digraph "CFG forcom.google.android.gms.internal.ads.zzazu.zzb(Landroid\/content\/Context;I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if ((r2.zzdyw \> 0.0f ? 1 : (r2.zzdyw == 0.0f ? 0 : \-1)) \>= 0) goto L_0x0027\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|monitor\-enter(r2)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|SYNTHETIC\l}"];
Node_4 [shape=record,label="{4\:\ ?}"];
Node_5 [shape=record,label="{5\:\ 0x000c|if ((r2.zzdyw \> 0.0f ? 1 : (r2.zzdyw == 0.0f ? 0 : \-1)) \>= 0) goto L_0x0026\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|android.view.Display r0 = ((android.view.WindowManager) r3.getSystemService(\"window\")).getDefaultDisplay()\landroid.util.DisplayMetrics r1 = new android.util.DisplayMetrics()     \/\/ Catch:\{  \}\lr0.getMetrics(r1)\lr2.zzdyw = r1.density\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|monitor\-exit(r2)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0027}"];
Node_9 [shape=record,label="{9\:\ 0x002f|RETURN\l|return java.lang.Math.round(((float) r4) \/ r2.zzdyw)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|LOOP_START\lREMOVE\lLOOP:0: B:10:0x0030\-\>B:14:0x0030\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|SYNTHETIC\lREMOVE\lSplitter:B:11:0x0031\l}"];
Node_12 [shape=record,label="{12\:\ ?|REMOVE\lSplitter:B:11:0x0031\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|REMOVE\l|throw r0\l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:10:0x0030\-\>B:14:0x0030\l}"];
Node_15 [shape=record,label="{15\:\ 0x0032|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_16 [shape=record,label="{16\:\ 0x0030|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
MethodNode[shape=record,label="{public final int com.google.android.gms.internal.ads.zzazu.zzb((r2v0 'this' com.google.android.gms.internal.ads.zzazu A[IMMUTABLE_TYPE, THIS]), (r3v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_14;
Node_12 -> Node_15;
Node_12 -> Node_16;
Node_14 -> Node_10;
Node_15 -> Node_13;
Node_16 -> Node_14;
}

