digraph "CFG forcom.google.android.gms.internal.ads.zzddj.\<init\>(Lcom\/google\/android\/gms\/internal\/ads\/zzdgv;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.zzgqe = r5.zzart()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|if (r4.zzgqe.equals(\"type.googleapis.com\/google.crypto.tink.AesGcmKey\") == false) goto L_0x0033\l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|SYNTHETIC\lSplitter:B:2:0x0013\l}"];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ zzdoj \-\> 0x002a \}\lSplitter:B:2:0x0013\l|com.google.android.gms.internal.ads.zzdeu r1 = com.google.android.gms.internal.ads.zzdeu.zzal(r5.zzaru())     \/\/ Catch:\{ zzdoj \-\> 0x002a \}\lr4.zzgqg = (com.google.android.gms.internal.ads.zzdes) com.google.android.gms.internal.ads.zzdce.zzb(r5)     \/\/ Catch:\{ zzdoj \-\> 0x002a \}\lr4.zzgqf = r1.getKeySize()     \/\/ Catch:\{ zzdoj \-\> 0x002a \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|ExcHandler: zzdoj (r0v19 'e' com.google.android.gms.internal.ads.zzdoj A[CUSTOM_DECLARE])\lSplitter:B:2:0x0013\l|com.google.android.gms.internal.ads.zzdoj r0 = move\-exception\l}"];
Node_5 [shape=record,label="{5\:\ 0x002b}"];
Node_6 [shape=record,label="{6\:\ 0x0032|throw new java.security.GeneralSecurityException(\"invalid KeyFormat protobuf, expected AesGcmKeyFormat\", r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033}"];
Node_8 [shape=record,label="{8\:\ 0x003b|if (r4.zzgqe.equals(\"type.googleapis.com\/google.crypto.tink.AesCtrHmacAeadKey\") == false) goto L_0x006e\l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|SYNTHETIC\lSplitter:B:9:0x003d\l}"];
Node_10 [shape=record,label="{10\:\ ?|Catch:\{ zzdoj \-\> 0x0065 \}\lSplitter:B:9:0x003d\l|com.google.android.gms.internal.ads.zzdds r1 = com.google.android.gms.internal.ads.zzdds.zzv(r5.zzaru())     \/\/ Catch:\{ zzdoj \-\> 0x0065 \}\lr4.zzgqh = (com.google.android.gms.internal.ads.zzddq) com.google.android.gms.internal.ads.zzdce.zzb(r5)     \/\/ Catch:\{ zzdoj \-\> 0x0065 \}\lr4.zzgqi = r1.zzaoe().getKeySize()     \/\/ Catch:\{ zzdoj \-\> 0x0065 \}\lr4.zzgqf = r1.zzaof().getKeySize() + r4.zzgqi     \/\/ Catch:\{ zzdoj \-\> 0x0065 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0065|ExcHandler: zzdoj (r0v10 'e' com.google.android.gms.internal.ads.zzdoj A[CUSTOM_DECLARE])\lSplitter:B:9:0x003d\l|com.google.android.gms.internal.ads.zzdoj r0 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x0066}"];
Node_13 [shape=record,label="{13\:\ 0x006d|throw new java.security.GeneralSecurityException(\"invalid KeyFormat protobuf, expected AesCtrHmacAeadKeyFormat\", r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x006e|java.lang.String r0 = java.lang.String.valueOf(r4.zzgqe)\l}"];
Node_15 [shape=record,label="{15\:\ 0x007c|if (r0.length() == 0) goto L_0x0086\l}"];
Node_16 [shape=record,label="{16\:\ 0x007e|java.lang.String r0 = \"unsupported AEAD DEM key type: \".concat(r0)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0082|PHI: r0 \l  PHI: (r0v8 java.lang.String) = (r0v7 java.lang.String), (r0v9 java.lang.String) binds: [B:19:0x0086, B:16:0x007e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0085|throw new java.security.GeneralSecurityException(r0)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0086|java.lang.String r0 = new java.lang.String(\"unsupported AEAD DEM key type: \")\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void com.google.android.gms.internal.ads.zzddj.\<init\>((r4v0 'this' com.google.android.gms.internal.ads.zzddj A[IMMUTABLE_TYPE, THIS]), (r5v0 com.google.android.gms.internal.ads.zzdgv A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.security.GeneralSecurityException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_3 -> Node_20;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_10 -> Node_21;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_17;
}

