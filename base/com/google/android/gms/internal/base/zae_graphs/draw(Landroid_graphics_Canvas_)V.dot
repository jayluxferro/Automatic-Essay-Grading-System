digraph "CFG forcom.google.android.gms.internal.base.zae.draw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = true\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|switch(r7.zang) \{\l    case 1: goto L_0x0037;\l    case 2: goto L_0x0008;\l    default: goto L_0x0007;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if ((r7.zanh \> 0 ? 1 : (r7.zanh == 0 ? 0 : \-1)) \< 0) goto L_0x0041\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|float r0 = ((float) (android.os.SystemClock.uptimeMillis() \- r7.zanh)) \/ ((float) r7.zank)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|if ((r0 \> 1.0f ? 1 : (r0 == 1.0f ? 0 : \-1)) \< 0) goto L_0x0023\l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|r1 = false\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|PHI: r1 \l  PHI: (r1v7 boolean) = (r1v0 boolean), (r1v8 boolean) binds: [B:5:0x0020, B:6:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L_0x0028\l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|r7.zang = 0\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|float r0 = java.lang.Math.min(r0, 1.0f)\lr7.mAlpha = (int) ((((float) r7.zani) * r0) + 0.0f)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|r7.zanh = android.os.SystemClock.uptimeMillis()\lr7.zang = 2\lr1 = false\l}"];
Node_11 [shape=record,label="{11\:\ 0x0041|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v6 boolean), (r1v0 boolean), (r1v7 boolean) binds: [B:1:0x0004, B:10:0x0037, B:3:0x000e, B:9:0x0028] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = r7.mAlpha\lboolean r2 = r7.zamy\landroid.graphics.drawable.Drawable r3 = r7.zann\landroid.graphics.drawable.Drawable r4 = r7.zano\l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|if (r1 == false) goto L_0x005f\l}"];
Node_13 [shape=record,label="{13\:\ 0x004b|if (r2 == false) goto L_0x004f\l}"];
Node_14 [shape=record,label="{14\:\ 0x004d|if (r0 != 0) goto L_0x0052\l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|r3.draw(r8)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0052}"];
Node_17 [shape=record,label="{17\:\ 0x0054|if (r0 != r7.zanj) goto L_?\l}"];
Node_18 [shape=record,label="{18\:\ 0x0056|r4.setAlpha(r7.zanj)\lr4.draw(r8)\l}"];
Node_19 [shape=record,label="{19\:\ 0x005f|if (r2 == false) goto L_0x0067\l}"];
Node_20 [shape=record,label="{20\:\ 0x0061|r3.setAlpha(r7.zanj \- r0)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0067|r3.draw(r8)\l}"];
Node_22 [shape=record,label="{22\:\ 0x006a|if (r2 == false) goto L_0x0071\l}"];
Node_23 [shape=record,label="{23\:\ 0x006c|r3.setAlpha(r7.zanj)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0071|if (r0 \<= 0) goto L_0x007e\l}"];
Node_25 [shape=record,label="{25\:\ 0x0073|r4.setAlpha(r0)\lr4.draw(r8)\lr4.setAlpha(r7.zanj)\l}"];
Node_26 [shape=record,label="{26\:\ 0x007e|invalidateSelf()\l}"];
Node_27 [shape=record,label="{27\:\ 0x0081|RETURN\l|return\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public final void com.google.android.gms.internal.base.zae.draw((r7v0 'this' com.google.android.gms.internal.base.zae A[IMMUTABLE_TYPE, THIS]), (r8v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_19;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_29;
Node_18 -> Node_28;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
}

