digraph "CFG forcom.google.android.gms.internal.measurement.zzgz.zzz(Ljava\/util\/List;)I" {
subgraph cluster_Region_1802114329 {
label = "R(2:0|(2:(1:2)|(2:(2:5|(1:7))(2:8|(1:10))|11))) | DECL_VAR: int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r4.size()\lint r1 = 0\l}"];
subgraph cluster_Region_1969130832 {
label = "R(2:(1:2)|(2:(2:5|(1:7))(2:8|(1:10))|11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_785934555 {
label = "IF [B:1:0x0005] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r0 == 0) goto L_0x0007\l}"];
subgraph cluster_Region_2143409496 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_1494956028 {
label = "R(2:(2:5|(1:7))(2:8|(1:10))|11)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_317390103 {
label = "IF [B:4:0x000a] THEN: R(2:5|(1:7)) ELSE: R(2:8|(1:10))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|if ((r4 instanceof com.google.android.gms.internal.measurement.zzfa) == true) goto L_0x000c\l}"];
subgraph cluster_Region_450169394 {
label = "R(2:5|(1:7))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000c|com.google.android.gms.internal.measurement.zzfa com.google.android.gms.internal.measurement.zzfa r4 = (com.google.android.gms.internal.measurement.zzfa) r4\lr2 = 0\l}"];
subgraph cluster_LoopRegion_1558867291 {
label = "LOOP:0: (1:7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000f|LOOP_START\lPHI: r1 r2 \l  PHI: (r1v3 int) = (r1v0 int), (r1v4 int) binds: [B:5:0x000c, B:7:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v6 int) = (r2v5 int), (r2v7 int) binds: [B:5:0x000c, B:7:0x0011] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x000f\-\>B:7:0x0011\l|if (r1 \< r0) goto L_0x0011\l}"];
subgraph cluster_Region_358235511 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0011|LOOP_END\lLOOP:0: B:6:0x000f\-\>B:7:0x0011\l|r2 += com.google.android.gms.internal.measurement.zzee.zzbk(r4.getInt(r1))\lr1++\l}"];
}
}
}
subgraph cluster_Region_1768042882 {
label = "R(2:8|(1:10))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001d|int r2 = 0\l}"];
subgraph cluster_LoopRegion_1129319335 {
label = "LOOP:1: (1:10)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001e|LOOP_START\lPHI: r1 r2 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:8:0x001d, B:10:0x0020] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 int) = (r2v2 int), (r2v4 int) binds: [B:8:0x001d, B:10:0x0020] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:9:0x001e\-\>B:10:0x0020\l|if (r1 \< r0) goto L_0x0020\l}"];
subgraph cluster_Region_2024348681 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0020|LOOP_END\lLOOP:1: B:9:0x001e\-\>B:10:0x0020\l|int r2 = r2 + com.google.android.gms.internal.measurement.zzee.zzbk(r4.get(r1).intValue())\lr1++\l}"];
}
}
}
}
Node_11 [shape=record,label="{11\:\ 0x0032|RETURN\lPHI: r2 \l  PHI: (r2v1 int) = (r2v3 int), (r2v6 int) binds: [B:13:0x0032, B:12:0x0032] A[DONT_GENERATE, DONT_INLINE]\l|return r2\l}"];
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0008}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0032|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0032|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static int com.google.android.gms.internal.measurement.zzgz.zzz((r4v0 java.util.List\<java.lang.Integer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Ljava\/lang\/Integer;, \>;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_8[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_12[style=dashed];
Node_7 -> Node_6;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_13[style=dashed];
Node_10 -> Node_9;
Node_3 -> Node_4;
Node_12 -> Node_11;
Node_13 -> Node_11;
}

