digraph "CFG forcom.google.android.gms.internal.measurement.zzed.zztd()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r9 I:com.google.android.gms.internal.measurement.zzed) com.google.android.gms.internal.measurement.zzed.pos int \l0x0002: IGET  (r1 I:int) = (r9 I:com.google.android.gms.internal.measurement.zzed) com.google.android.gms.internal.measurement.zzed.limit int \l0x0004: ARITH  (r1 I:int) = (r1 I:int) \- (r0 I:int) \l0x0005: CONST  (r2 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r1 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:4:0x005b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r1 I:byte[]) = (r9 I:com.google.android.gms.internal.measurement.zzed) com.google.android.gms.internal.measurement.zzed.buffer byte[] \l0x000b: ARITH  (r3 I:int) = (r0 I:int) + (8 int) \l0x000d: IPUT  \l  (r3 I:int)\l  (r9 I:com.google.android.gms.internal.measurement.zzed)\l com.google.android.gms.internal.measurement.zzed.pos int \l0x000f: AGET  (r3 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l \l0x0011: CAST  (r3 I:long) = (long) (r3 I:int) \l0x0012: CONST  (r5 I:?[long, double]) = (255(0xff, double:1.26E\-321) ?[long, double]) \l0x0014: ARITH  (r3 I:long) = (r3 I:long) & (r5 I:long) \l0x0015: ARITH  (r7 I:int) = (r0 I:int) + (1 int) \l0x0017: AGET  (r7 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l \l0x0019: CAST  (r7 I:long) = (long) (r7 I:int) \l0x001a: ARITH  (r7 I:long) = (r7 I:long) & (r5 I:long) \l0x001b: ARITH  (r7 I:long) = (r7 I:long) \<\< (r2 I:long) \l0x001c: ARITH  (r2 I:long) = (r3 I:long) \| (r7 I:long) \l0x001e: ARITH  (r4 I:int) = (r0 I:int) + (2 int) \l0x0020: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x0022: CAST  (r7 I:long) = (long) (r4 I:int) \l0x0023: ARITH  (r7 I:long) = (r7 I:long) & (r5 I:long) \l0x0024: CONST  (r4 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0026: ARITH  (r7 I:long) = (r7 I:long) \<\< (r4 I:long) \l0x0027: ARITH  (r2 I:long) = (r2 I:long) \| (r7 I:long) \l0x0028: ARITH  (r4 I:int) = (r0 I:int) + (3 int) \l0x002a: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x002c: CAST  (r7 I:long) = (long) (r4 I:int) \l0x002d: ARITH  (r7 I:long) = (r7 I:long) & (r5 I:long) \l0x002e: CONST  (r4 I:?[int, float, short, byte, char]) = (24 ?[int, float, short, byte, char]) \l0x0030: ARITH  (r7 I:long) = (r7 I:long) \<\< (r4 I:long) \l0x0031: ARITH  (r2 I:long) = (r2 I:long) \| (r7 I:long) \l0x0032: ARITH  (r4 I:int) = (r0 I:int) + (4 int) \l0x0034: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x0036: CAST  (r7 I:long) = (long) (r4 I:int) \l0x0037: ARITH  (r7 I:long) = (r7 I:long) & (r5 I:long) \l0x0038: CONST  (r4 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x003a: ARITH  (r7 I:long) = (r7 I:long) \<\< (r4 I:long) \l0x003b: ARITH  (r2 I:long) = (r2 I:long) \| (r7 I:long) \l0x003c: ARITH  (r4 I:int) = (r0 I:int) + (5 int) \l0x003e: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x0040: CAST  (r7 I:long) = (long) (r4 I:int) \l0x0041: ARITH  (r7 I:long) = (r7 I:long) & (r5 I:long) \l0x0042: CONST  (r4 I:?[int, float, short, byte, char]) = (40 ?[int, float, short, byte, char]) \l0x0044: ARITH  (r7 I:long) = (r7 I:long) \<\< (r4 I:long) \l0x0045: ARITH  (r2 I:long) = (r2 I:long) \| (r7 I:long) \l0x0046: ARITH  (r4 I:int) = (r0 I:int) + (6 int) \l0x0048: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x004a: CAST  (r7 I:long) = (long) (r4 I:int) \l0x004b: ARITH  (r7 I:long) = (r7 I:long) & (r5 I:long) \l0x004c: CONST  (r4 I:?[int, float, short, byte, char]) = (48 ?[int, float, short, byte, char]) \l0x004e: ARITH  (r7 I:long) = (r7 I:long) \<\< (r4 I:long) \l0x004f: ARITH  (r2 I:long) = (r2 I:long) \| (r7 I:long) \l0x0050: ARITH  (r0 I:int) = (r0 I:int) + (7 int) \l0x0052: AGET  (r0 I:byte A[IMMUTABLE_TYPE]) = \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l \l0x0054: CAST  (r0 I:long) = (long) (r0 I:int) \l0x0055: ARITH  (r0 I:long) = (r0 I:long) & (r5 I:long) \l0x0056: CONST  (r4 I:?[int, float, short, byte, char]) = (56 ?[int, float, short, byte, char]) \l0x0058: ARITH  (r0 I:long) = (r0 I:long) \<\< (r4 I:long) \l0x0059: ARITH  (r0 I:long) = (r0 I:long) \| (r2 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x005a|0x005a: RETURN  (r0 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x005b|0x005b: INVOKE  (r0 I:com.google.android.gms.internal.measurement.zzfi) =  com.google.android.gms.internal.measurement.zzfi.zzut():com.google.android.gms.internal.measurement.zzfi type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x005f|0x005f: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private final long com.google.android.gms.internal.measurement.zzed.zztd((r9 'this' I:com.google.android.gms.internal.measurement.zzed A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

