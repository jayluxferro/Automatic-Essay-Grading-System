digraph "CFG forcom.google.android.gms.internal.measurement.zzhc.zza(Ljava\/lang\/Comparable;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<com.google.android.gms.internal.measurement.zzhh\>) = (r4 I:com.google.android.gms.internal.measurement.zzhc) com.google.android.gms.internal.measurement.zzhc.zzall java.util.List \l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0006: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:8:0x0025 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r1 I:java.util.List\<com.google.android.gms.internal.measurement.zzhh\>) = (r4 I:com.google.android.gms.internal.measurement.zzhc) com.google.android.gms.internal.measurement.zzhc.zzall java.util.List \l0x000c: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0010: CHECK_CAST  (r1 I:com.google.android.gms.internal.measurement.zzhh) = (com.google.android.gms.internal.measurement.zzhh) (r1 I:?[OBJECT, ARRAY]) \l0x0012: INVOKE  (r1 I:java.lang.Object) = (r1 I:com.google.android.gms.internal.measurement.zzhh) com.google.android.gms.internal.measurement.zzhh.getKey():java.lang.Object type: VIRTUAL \l0x0016: CHECK_CAST  (r1 I:java.lang.Comparable) = (java.lang.Comparable) (r1 I:?[OBJECT, ARRAY]) \l0x0018: INVOKE  (r1 I:int) = (r5 I:java.lang.Comparable), (r1 I:java.lang.Object) java.lang.Comparable.compareTo(java.lang.Object):int type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x0022 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: ARITH  (r0 I:int) = (r0 I:int) + (2 int) \l0x0020: NEG  (r5 I:int) = (r0 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: RETURN  (r5 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0025 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: RETURN  (r0 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: IF  (r1 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:16:0x0049 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: ARITH  (r2 I:int) = (r1 I:int) + (r0 I:int) \l0x002a: ARITH  (r2 I:int) = (r2 I:int) \/ (2 int) \l0x002c: IGET  (r3 I:java.util.List\<com.google.android.gms.internal.measurement.zzhh\>) = (r4 I:com.google.android.gms.internal.measurement.zzhc) com.google.android.gms.internal.measurement.zzhc.zzall java.util.List \l0x002e: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0032: CHECK_CAST  (r3 I:com.google.android.gms.internal.measurement.zzhh) = (com.google.android.gms.internal.measurement.zzhh) (r3 I:?[OBJECT, ARRAY]) \l0x0034: INVOKE  (r3 I:java.lang.Object) = (r3 I:com.google.android.gms.internal.measurement.zzhh) com.google.android.gms.internal.measurement.zzhh.getKey():java.lang.Object type: VIRTUAL \l0x0038: CHECK_CAST  (r3 I:java.lang.Comparable) = (java.lang.Comparable) (r3 I:?[OBJECT, ARRAY]) \l0x003a: INVOKE  (r3 I:int) = (r5 I:java.lang.Comparable), (r3 I:java.lang.Object) java.lang.Comparable.compareTo(java.lang.Object):int type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|0x003e: IF  (r3 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:13:0x0043 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|0x0040: ARITH  (r0 I:int) = (r2 I:int) + (\-1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|0x0043: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:15:0x0048 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0045|0x0045: ARITH  (r1 I:int) = (r2 I:int) + (1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|0x0048: RETURN  (r2 I:int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|0x0049: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x004b: NEG  (r5 I:int) = (r1 I:int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x004c|0x004c: RETURN  (r5 I:int) \l}"];
MethodNode[shape=record,label="{private final int com.google.android.gms.internal.measurement.zzhc.zza((r4 'this' I:com.google.android.gms.internal.measurement.zzhc A[IMMUTABLE_TYPE, THIS]), (r5 I:K A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TK;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_9;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_9;
Node_16 -> Node_17;
}

