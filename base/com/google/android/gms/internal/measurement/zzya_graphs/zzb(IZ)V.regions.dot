digraph "CFG forcom.google.android.gms.internal.measurement.zzya.zzb(IZ)V" {
subgraph cluster_Region_1335706308 {
label = "R(4:0|(1:2)|3|(2:(1:6)|(1:7)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = 0\lzzc(r4, 0)\l}"];
subgraph cluster_IfRegion_1451307089 {
label = "IF [B:1:0x0004] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r5 == true) goto L_0x0006\l}"];
subgraph cluster_Region_679575946 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|r0 = 1\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0007|PHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v4 int) binds: [B:1:0x0004, B:2:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|byte byte r0 = (byte) r0\l}"];
subgraph cluster_Region_1007975974 {
label = "R(2:(1:6)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_635024697 {
label = "IF [B:4:0x000e] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|if (r3.zzbut.hasRemaining() == false) goto L_0x0010\l}"];
subgraph cluster_Region_1241175531 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0021|throw new com.google.android.gms.internal.measurement.zzyb(r3.zzbut.position(), r3.zzbut.limit())\l}"];
}
}
subgraph cluster_Region_1033916639 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0022|r3.zzbut.put(r0)\l}"];
}
}
}
Node_5 [shape=record,color=red,label="{5\:\ 0x0010}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0027}"];
MethodNode[shape=record,label="{public final void com.google.android.gms.internal.measurement.zzya.zzb((r3v0 'this' com.google.android.gms.internal.measurement.zzya A[IMMUTABLE_TYPE, THIS]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_5 -> Node_6;
}

