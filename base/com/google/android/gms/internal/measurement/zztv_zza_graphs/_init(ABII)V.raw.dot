digraph "CFG forcom.google.android.gms.internal.measurement.zztv.zza.\<init\>([BII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  \l  (r5 I:com.google.android.gms.internal.measurement.zztv)\l  (r0 I:com.google.android.gms.internal.measurement.zztw)\l com.google.android.gms.internal.measurement.zztv.\<init\>(com.google.android.gms.internal.measurement.zztw):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: NEW_INSTANCE  (r0 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x0008: CONST_STR  (r1 I:java.lang.String) =  \"buffer\" \l0x000a: INVOKE  \l  (r0 I:java.lang.NullPointerException)\l  (r1 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) \| (r8 I:?[int, boolean, short, byte, char]) \l0x0010: ARRAY_LENGTH  (r1 I:int) = (r6 I:?[]) \l0x0011: ARITH  (r2 I:int) = (r7 I:int) + (r8 I:int) \l0x0013: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x0014: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) \| (r1 I:?[int, boolean, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:8:0x003c \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0019: CONST_STR  (r1 I:java.lang.String) =  \"Array range is invalid. Buffer.length=%d, offset=%d, length=%d\" \l0x001b: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x001c: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x001e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001f: ARRAY_LENGTH  (r4 I:int) = (r6 I:?[]) \l0x0020: INVOKE  (r4 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0024: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x0026: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0027: INVOKE  (r4 I:java.lang.Integer) = (r7 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x002b: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x002d: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x002e: INVOKE  (r4 I:java.lang.Integer) = (r8 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0032: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x0034: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.String), (r2 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x0038: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r1 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x003b|0x003b: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|0x003c: IPUT  \l  (r6 I:byte[])\l  (r5 I:com.google.android.gms.internal.measurement.zztv$zza)\l com.google.android.gms.internal.measurement.zztv.zza.buffer byte[] \l0x003e: IPUT  \l  (r7 I:int)\l  (r5 I:com.google.android.gms.internal.measurement.zztv$zza)\l com.google.android.gms.internal.measurement.zztv.zza.offset int \l0x0040: IPUT  \l  (r7 I:int)\l  (r5 I:com.google.android.gms.internal.measurement.zztv$zza)\l com.google.android.gms.internal.measurement.zztv.zza.position int \l0x0042: ARITH  (r0 I:int) = (r7 I:int) + (r8 I:int) \l0x0044: IPUT  \l  (r0 I:int)\l  (r5 I:com.google.android.gms.internal.measurement.zztv$zza)\l com.google.android.gms.internal.measurement.zztv.zza.limit int \l}"];
Node_9 [shape=record,label="{9\:\ 0x0046|0x0046: RETURN   \l}"];
MethodNode[shape=record,label="{void com.google.android.gms.internal.measurement.zztv.zza.\<init\>((r5 'this' I:com.google.android.gms.internal.measurement.zztv$zza A[IMMUTABLE_TYPE, THIS]), (r6 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

