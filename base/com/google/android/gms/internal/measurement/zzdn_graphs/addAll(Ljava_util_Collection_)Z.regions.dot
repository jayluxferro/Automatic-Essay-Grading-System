digraph "CFG forcom.google.android.gms.internal.measurement.zzdn.addAll(Ljava\/util\/Collection;)Z" {
subgraph cluster_Region_239768622 {
label = "R(2:0|(2:(1:3)|(2:4|(2:(1:6)|(1:(2:(4:9|(1:11)|12|13)|(1:15)))))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|zzrz()\lcom.google.android.gms.internal.measurement.zzez.checkNotNull(r6)\l}"];
subgraph cluster_Region_1721736405 {
label = "R(2:(1:3)|(2:4|(2:(1:6)|(1:(2:(4:9|(1:11)|12|13)|(1:15))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1532798663 {
label = "IF [B:1:0x0008] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if ((r6 instanceof com.google.android.gms.internal.measurement.zzdn) == false) goto L_0x000a\l}"];
subgraph cluster_Region_542386021 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000e|RETURN\l|return super.addAll(r6)\l}"];
}
}
subgraph cluster_Region_1242442303 {
label = "R(2:4|(2:(1:6)|(1:(2:(4:9|(1:11)|12|13)|(1:15)))))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|com.google.android.gms.internal.measurement.zzdn com.google.android.gms.internal.measurement.zzdn r6 = (com.google.android.gms.internal.measurement.zzdn) r6\l}"];
subgraph cluster_Region_2053455013 {
label = "R(2:(1:6)|(1:(2:(4:9|(1:11)|12|13)|(1:15))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_834624214 {
label = "IF [B:5:0x0014] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|if (r6.size == 0) goto L_0x0016\l}"];
subgraph cluster_Region_1619426824 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1590859329 {
label = "R(1:(2:(4:9|(1:11)|12|13)|(1:15)))";
node [shape=record,color=blue];
subgraph cluster_Region_1606217201 {
label = "R(2:(4:9|(1:11)|12|13)|(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1229189870 {
label = "IF [B:8:0x001f] THEN: R(4:9|(1:11)|12|13) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001f|if ((Integer.MAX_VALUE \- r5.size) \>= r6.size) goto L_0x0021\l}"];
subgraph cluster_Region_686382168 {
label = "R(4:9|(1:11)|12|13)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0021|int int r0 = r5.size + r6.size\l}"];
subgraph cluster_IfRegion_328062120 {
label = "IF [B:10:0x0029] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0029|if (r0 \> r5.zzadf.length) goto L_0x002b\l}"];
subgraph cluster_Region_1479497189 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002b|r5.zzadf = java.util.Arrays.copyOf(r5.zzadf, r0)\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0033|java.lang.System.arraycopy(r6.zzadf, 0, r5.zzadf, r5.size, r6.size)\lr5.size = r0\lr5.modCount++\l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_208626359 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x004c|throw new java.lang.OutOfMemoryError()\l}"];
}
}
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000a}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0017}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0047}"];
MethodNode[shape=record,label="{public final boolean com.google.android.gms.internal.measurement.zzdn.addAll((r5v0 'this' com.google.android.gms.internal.measurement.zzdn A[IMMUTABLE_TYPE, THIS]), (r6v0 java.util.Collection\<? extends java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Collection\<, +, Ljava\/lang\/Boolean;, \>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_14[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_2 -> Node_3;
Node_7 -> Node_8;
Node_14 -> Node_15;
}

