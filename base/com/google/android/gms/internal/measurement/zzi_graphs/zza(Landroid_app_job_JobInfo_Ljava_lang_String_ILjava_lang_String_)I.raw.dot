digraph "CFG forcom.google.android.gms.internal.measurement.zzi.zza(Landroid\/app\/job\/JobInfo;Ljava\/lang\/String;ILjava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:java.lang.reflect.Method) =  com.google.android.gms.internal.measurement.zzi.zzg java.lang.reflect.Method \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|SYNTHETIC\lSplitter:B:2:0x0004\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0004\l|0x0004: SGET  (r0 I:java.lang.reflect.Method) =  com.google.android.gms.internal.measurement.zzi.zzg java.lang.reflect.Method A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0026 \}, TRY_ENTER]\l0x0006: IGET  (r1 I:android.app.job.JobScheduler) = (r4 I:com.google.android.gms.internal.measurement.zzi) com.google.android.gms.internal.measurement.zzi.zzf android.app.job.JobScheduler A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0026 \}]\l0x0008: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0026 \}]\l0x0009: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0026 \}]\l0x000b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0026 \}]\l0x000c: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0026 \}]\l0x000e: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0026 \}]\l0x000f: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0026 \}]\l0x0011: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0026 \}]\l0x0012: INVOKE  (r7 I:java.lang.Integer) = (r7 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0026 \}]\l0x0016: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r6 I:?[int, short, byte, char])\l  (r7 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0026 \}]\l0x0018: CONST  (r6 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0026 \}]\l0x0019: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r6 I:?[int, short, byte, char])\l  (r8 I:?[OBJECT, ARRAY])\l A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0026 \}]\l0x001b: INVOKE  (r6 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Method)\l  (r1 I:java.lang.Object)\l  (r2 I:java.lang.Object[])\l java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0026 \}]\l0x001f: CHECK_CAST  (r6 I:java.lang.Integer) = (java.lang.Integer) (r6 I:?[OBJECT, ARRAY]) A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0026 \}]\l0x0021: INVOKE  (r6 I:int) = (r6 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL A[Catch:\{ IllegalAccessException \| InvocationTargetException \-\> 0x0026 \}]\l0x0024: NOP   A[TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: RETURN  (r6 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|ExcHandler: IllegalAccessException \| InvocationTargetException null\lSplitter:B:2:0x0004\l|0x0026: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: CONST_STR  (r7 I:java.lang.String) =  \"error calling scheduleAsPackage\" \l0x0029: INVOKE  \l  (r8 I:java.lang.String)\l  (r7 I:java.lang.String)\l  (r6 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: IGET  (r6 I:android.app.job.JobScheduler) = (r4 I:com.google.android.gms.internal.measurement.zzi) com.google.android.gms.internal.measurement.zzi.zzf android.app.job.JobScheduler \l0x002e: INVOKE  (r5 I:int) = \l  (r6 I:android.app.job.JobScheduler)\l  (r5 I:android.app.job.JobInfo)\l android.app.job.JobScheduler.schedule(android.app.job.JobInfo):int type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|0x0032: RETURN  (r5 I:int) \l}"];
MethodNode[shape=record,label="{private final int com.google.android.gms.internal.measurement.zzi.zza((r4 'this' I:com.google.android.gms.internal.measurement.zzi A[IMMUTABLE_TYPE, THIS]), (r5 I:android.app.job.JobInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

