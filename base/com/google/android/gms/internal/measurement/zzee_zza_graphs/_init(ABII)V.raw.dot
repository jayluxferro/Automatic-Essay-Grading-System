digraph "CFG forcom.google.android.gms.internal.measurement.zzee.zza.\<init\>([BII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  \l  (r3 I:com.google.android.gms.internal.measurement.zzee)\l  (r0 I:com.google.android.gms.internal.measurement.zzeg)\l com.google.android.gms.internal.measurement.zzee.\<init\>(com.google.android.gms.internal.measurement.zzeg):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x003d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) \| (r6 I:?[int, boolean, short, byte, char]) \l0x0008: ARRAY_LENGTH  (r1 I:int) = (r4 I:?[]) \l0x0009: ARITH  (r2 I:int) = (r5 I:int) + (r6 I:int) \l0x000b: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x000c: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) \| (r1 I:?[int, boolean, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IPUT  \l  (r4 I:byte[])\l  (r3 I:com.google.android.gms.internal.measurement.zzee$zza)\l com.google.android.gms.internal.measurement.zzee.zza.buffer byte[] \l0x0011: IPUT  \l  (r5 I:int)\l  (r3 I:com.google.android.gms.internal.measurement.zzee$zza)\l com.google.android.gms.internal.measurement.zzee.zza.offset int \l0x0013: IPUT  \l  (r5 I:int)\l  (r3 I:com.google.android.gms.internal.measurement.zzee$zza)\l com.google.android.gms.internal.measurement.zzee.zza.position int \l0x0015: IPUT  \l  (r2 I:int)\l  (r3 I:com.google.android.gms.internal.measurement.zzee$zza)\l com.google.android.gms.internal.measurement.zzee.zza.limit int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x001a: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x001b: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x001d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001e: ARRAY_LENGTH  (r4 I:int) = (r4 I:?[]) \l0x001f: INVOKE  (r4 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0023: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x0025: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0026: INVOKE  (r5 I:java.lang.Integer) = (r5 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x002a: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x002c: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x002d: INVOKE  (r5 I:java.lang.Integer) = (r6 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0031: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x0033: CONST_STR  (r4 I:java.lang.String) =  \"Array range is invalid. Buffer.length=%d, offset=%d, length=%d\" \l0x0035: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String), (r1 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x0039: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x003c|0x003c: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x003d|0x003d: NEW_INSTANCE  (r4 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x003f: CONST_STR  (r5 I:java.lang.String) =  \"buffer\" \l0x0041: INVOKE  \l  (r4 I:java.lang.NullPointerException)\l  (r5 I:java.lang.String)\l java.lang.NullPointerException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0044|0x0044: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{void com.google.android.gms.internal.measurement.zzee.zza.\<init\>((r3 'this' I:com.google.android.gms.internal.measurement.zzee$zza A[IMMUTABLE_TYPE, THIS]), (r4 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

