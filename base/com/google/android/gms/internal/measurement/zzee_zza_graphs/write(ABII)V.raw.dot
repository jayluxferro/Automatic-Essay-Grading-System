digraph "CFG forcom.google.android.gms.internal.measurement.zzee.zza.write([BII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:byte[]) = (r3 I:com.google.android.gms.internal.measurement.zzee$zza) com.google.android.gms.internal.measurement.zzee.zza.buffer byte[] A[Catch:\{ IndexOutOfBoundsException \-\> 0x000d \}, TRY_ENTER]\l0x0002: IGET  (r1 I:int) = (r3 I:com.google.android.gms.internal.measurement.zzee$zza) com.google.android.gms.internal.measurement.zzee.zza.position int A[Catch:\{ IndexOutOfBoundsException \-\> 0x000d \}]\l0x0004: INVOKE  \l  (r4 I:java.lang.Object)\l  (r5 I:int)\l  (r0 I:java.lang.Object)\l  (r1 I:int)\l  (r6 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC A[Catch:\{ IndexOutOfBoundsException \-\> 0x000d \}]\l0x0007: IGET  (r4 I:int) = (r3 I:com.google.android.gms.internal.measurement.zzee$zza) com.google.android.gms.internal.measurement.zzee.zza.position int A[Catch:\{ IndexOutOfBoundsException \-\> 0x000d \}]\l0x0009: ARITH  (r4 I:int) = (r4 I:int) + (r6 I:int) A[Catch:\{ IndexOutOfBoundsException \-\> 0x000d \}]\l0x000a: IPUT  \l  (r4 I:int)\l  (r3 I:com.google.android.gms.internal.measurement.zzee$zza)\l com.google.android.gms.internal.measurement.zzee.zza.position int A[Catch:\{ IndexOutOfBoundsException \-\> 0x000d \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|ExcHandler: IndexOutOfBoundsException null\lSplitter:B:0:0x0000\l|0x000d: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: NEW_INSTANCE  (r5 I:com.google.android.gms.internal.measurement.zzee$zzb) =  com.google.android.gms.internal.measurement.zzee$zzb \l0x0010: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0011: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0013: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: IGET  (r2 I:int) = (r3 I:com.google.android.gms.internal.measurement.zzee$zza) com.google.android.gms.internal.measurement.zzee.zza.position int \l0x0016: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x001a: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x001c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001d: IGET  (r2 I:int) = (r3 I:com.google.android.gms.internal.measurement.zzee$zza) com.google.android.gms.internal.measurement.zzee.zza.limit int \l0x001f: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0023: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0025: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0026: INVOKE  (r6 I:java.lang.Integer) = (r6 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x002a: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x002c: CONST_STR  (r6 I:java.lang.String) =  \"Pos: %d, limit: %d, len: %d\" \l0x002e: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.String), (r0 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x0032: INVOKE  \l  (r5 I:com.google.android.gms.internal.measurement.zzee$zzb)\l  (r6 I:java.lang.String)\l  (r4 I:java.lang.Throwable)\l com.google.android.gms.internal.measurement.zzee.zzb.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0035|0x0035: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final void com.google.android.gms.internal.measurement.zzee.zza.write((r3 'this' I:com.google.android.gms.internal.measurement.zzee$zza A[IMMUTABLE_TYPE, THIS]), (r4 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

