digraph "CFG forcom.google.android.gms.internal.firebase_messaging.zzq.zza(Ljava\/lang\/Throwable;Ljava\/lang\/Throwable;)V" {
subgraph cluster_Region_497870358 {
label = "R(1:(1:7)(1:(1:2)(1:5)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_652047403 {
label = "IF [B:0:0x0000] THEN: R(1:7) ELSE: R(1:(1:2)(1:5))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r4 == r3) goto L_0x0017\l}"];
subgraph cluster_Region_1098667578 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001e|throw new java.lang.IllegalArgumentException(\"Self suppression is not allowed.\", r4)\l}"];
}
subgraph cluster_Region_362597402 {
label = "R(1:(1:2)(1:5)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1878656233 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: R(1:5) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4 != null) goto L_0x0004\l}"];
subgraph cluster_Region_583747857 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|r2.zzp.zza(r3, true).add(r4)\l}"];
}
subgraph cluster_Region_19207924 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0016|throw new java.lang.NullPointerException(\"The suppressed exception cannot be null.\")\l}"];
}
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x000e}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000f}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0017}"];
MethodNode[shape=record,label="{public final void com.google.android.gms.internal.firebase_messaging.zzq.zza((r2v0 'this' com.google.android.gms.internal.firebase_messaging.zzq A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.Throwable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Throwable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_6;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

