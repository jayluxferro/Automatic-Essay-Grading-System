digraph "CFG forcom.google.android.gms.internal.firebase_messaging.zzk.zza(Ljava\/io\/InputStream;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001c \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0002\l|0x0002: INVOKE  (r6 I:java.io.Closeable) java.io.Closeable.close():void type: INTERFACE A[Catch:\{ IOException \-\> 0x0006 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|ExcHandler: IOException null\lSplitter:B:1:0x0002\l|0x0006: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|SYNTHETIC\lSplitter:B:5:0x0007\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0007\l|0x0007: SGET  (r0 I:java.util.logging.Logger) =  com.google.android.gms.internal.firebase_messaging.zzk.logger java.util.logging.Logger A[Catch:\{ IOException \-\> 0x0015 \}, TRY_ENTER]\l0x0009: SGET  (r1 I:java.util.logging.Level) =  java.util.logging.Level.WARNING java.util.logging.Level A[Catch:\{ IOException \-\> 0x0015 \}]\l0x000b: CONST_STR  (r2 I:java.lang.String) =  \"com.google.common.io.Closeables\" A[Catch:\{ IOException \-\> 0x0015 \}]\l0x000d: CONST_STR  (r3 I:java.lang.String) =  \"close\" A[Catch:\{ IOException \-\> 0x0015 \}]\l0x000f: CONST_STR  (r4 I:java.lang.String) =  \"IOException thrown while closing Closeable.\" A[Catch:\{ IOException \-\> 0x0015 \}]\l0x0011: INVOKE  \l  (r0 I:java.util.logging.Logger)\l  (r1 I:java.util.logging.Level)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.Throwable)\l java.util.logging.Logger.logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0015 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|ExcHandler: IOException null\lSplitter:B:5:0x0007\l|0x0015: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|0x0016: NEW_INSTANCE  (r0 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0018: INVOKE  (r0 I:java.lang.AssertionError), (r6 I:java.lang.Object) java.lang.AssertionError.\<init\>(java.lang.Object):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: RETURN   \l}"];
MethodNode[shape=record,label="{public static void com.google.android.gms.internal.firebase_messaging.zzk.zza((r6 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, org.checkerframework.checker.nullness.compatqual.NullableDecl, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_11;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_8;
Node_6 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

