digraph "CFG forcom.google.android.gms.ads.formats.UnifiedNativeAdView.setClickConfirmingView(Landroid\/view\/View;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:com.google.android.gms.internal.ads.zzael) = \l  (r2 I:com.google.android.gms.ads.formats.UnifiedNativeAdView)\l com.google.android.gms.ads.formats.UnifiedNativeAdView.zzbqj com.google.android.gms.internal.ads.zzael A[Catch:\{ RemoteException \-\> 0x000a \}, TRY_ENTER]\l0x0002: INVOKE  (r1 I:com.google.android.gms.dynamic.IObjectWrapper) = (r3 I:java.lang.Object) com.google.android.gms.dynamic.ObjectWrapper.wrap(java.lang.Object):com.google.android.gms.dynamic.IObjectWrapper type: STATIC A[Catch:\{ RemoteException \-\> 0x000a \}]\l0x0006: INVOKE  \l  (r0 I:com.google.android.gms.internal.ads.zzael)\l  (r1 I:com.google.android.gms.dynamic.IObjectWrapper)\l com.google.android.gms.internal.ads.zzael.zzi(com.google.android.gms.dynamic.IObjectWrapper):void type: INTERFACE A[Catch:\{ RemoteException \-\> 0x000a \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|ExcHandler: RemoteException null\lSplitter:B:0:0x0000\l|0x000a: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: CONST_STR  (r1 I:java.lang.String) =  \"Unable to call setClickConfirmingView on delegate\" \l0x000d: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.Throwable) com.google.android.gms.internal.ads.zzbae.zzc(java.lang.String, java.lang.Throwable):void type: STATIC \l}"];
MethodNode[shape=record,label="{public final void com.google.android.gms.ads.formats.UnifiedNativeAdView.setClickConfirmingView((r2 'this' I:com.google.android.gms.ads.formats.UnifiedNativeAdView A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_2;
}

