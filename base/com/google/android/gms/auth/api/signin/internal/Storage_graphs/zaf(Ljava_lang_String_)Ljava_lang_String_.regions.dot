digraph "CFG forcom.google.android.gms.auth.api.signin.internal.Storage.zaf(Ljava\/lang\/String;)Ljava\/lang\/String;" {
subgraph cluster_Region_1731474489 {
label = "R(2:0|(1:4))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.zaal.lock()\l}"];
subgraph cluster_TryCatchRegion_779823938 {
label = "Try: R(1:4) finally: R(3:5|6|7)";
node [shape=record,color=blue];
subgraph cluster_Region_539971263 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|RETURN\l|return r2.zaam.getString(r3, (java.lang.String) null)\l}"];
}
subgraph cluster_Region_1421874860 {
label = "R(3:5|6|7) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|ExcHandler:  FINALLY\lSplitter:B:1:0x0005\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|FINALLY_INSNS\l|r2.zaal.unlock()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|throw r3\l}"];
}
}
}
subgraph cluster_Region_1421874860 {
label = "R(3:5|6|7) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|ExcHandler:  FINALLY\lSplitter:B:1:0x0005\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|FINALLY_INSNS\l|r2.zaal.unlock()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|throw r3\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0005|SYNTHETIC\lSplitter:B:1:0x0005\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?|Catch:\{ all \-\> 0x0012 \}\lSplitter:B:1:0x0005\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000c|DONT_GENERATE\l|java.util.concurrent.locks.Lock r0 = r2.zaal\lr0.unlock()\l}"];
MethodNode[shape=record,label="{private final java.lang.String com.google.android.gms.auth.api.signin.internal.Storage.zaf((r2v0 'this' com.google.android.gms.auth.api.signin.internal.Storage A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

