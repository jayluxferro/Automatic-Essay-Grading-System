digraph "CFG forcom.google.android.gms.measurement.internal.zzx.zzac(Ljava\/lang\/String;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r7 I:java.lang.String) com.google.android.gms.common.internal.Preconditions.checkNotEmpty(java.lang.String):java.lang.String type: STATIC \l0x0003: INVOKE  (r6 I:com.google.android.gms.measurement.internal.zzgf) com.google.android.gms.measurement.internal.zzgf.zzo():void type: VIRTUAL \l0x0006: INVOKE  (r6 I:com.google.android.gms.measurement.internal.zzjh) com.google.android.gms.measurement.internal.zzjh.zzbi():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|SYNTHETIC\lSplitter:B:1:0x0009\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0009\l|0x0009: INVOKE  (r0 I:android.database.sqlite.SQLiteDatabase) = (r6 I:com.google.android.gms.measurement.internal.zzx) com.google.android.gms.measurement.internal.zzx.getWritableDatabase():android.database.sqlite.SQLiteDatabase type: VIRTUAL A[Catch:\{ SQLiteException \-\> 0x0039 \}, TRY_ENTER]\l0x000d: INVOKE  (r1 I:com.google.android.gms.measurement.internal.zzs) = (r6 I:com.google.android.gms.measurement.internal.zzgf) com.google.android.gms.measurement.internal.zzgf.zzad():com.google.android.gms.measurement.internal.zzs type: VIRTUAL A[Catch:\{ SQLiteException \-\> 0x0039 \}]\l0x0011: SGET  (r2 I:com.google.android.gms.measurement.internal.zzdu\<java.lang.Integer\>) =  com.google.android.gms.measurement.internal.zzak.zzgu com.google.android.gms.measurement.internal.zzdu A[Catch:\{ SQLiteException \-\> 0x0039 \}]\l0x0013: INVOKE  (r1 I:int) = \l  (r1 I:com.google.android.gms.measurement.internal.zzs)\l  (r7 I:java.lang.String)\l  (r2 I:com.google.android.gms.measurement.internal.zzdu)\l com.google.android.gms.measurement.internal.zzs.zzb(java.lang.String, com.google.android.gms.measurement.internal.zzdu):int type: VIRTUAL A[Catch:\{ SQLiteException \-\> 0x0039 \}]\l0x0017: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1000000(0xf4240, float:1.401298E\-39) ?[int, float, short, byte, char])\l A[Catch:\{ SQLiteException \-\> 0x0039 \}]\l0x001a: INVOKE  (r1 I:int) = (r2 I:int), (r1 I:int) java.lang.Math.min(int, int):int type: STATIC A[Catch:\{ SQLiteException \-\> 0x0039 \}]\l0x001e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ SQLiteException \-\> 0x0039 \}]\l0x001f: INVOKE  (r1 I:int) = (r2 I:int), (r1 I:int) java.lang.Math.max(int, int):int type: STATIC A[Catch:\{ SQLiteException \-\> 0x0039 \}]\l0x0023: INVOKE  (r1 I:java.lang.String) = (r1 I:int) java.lang.String.valueOf(int):java.lang.String type: STATIC A[Catch:\{ SQLiteException \-\> 0x0039 \}]\l0x0027: CONST_STR  (r3 I:java.lang.String) =  \"raw_events\" A[Catch:\{ SQLiteException \-\> 0x0039 \}]\l0x0029: CONST_STR  (r4 I:java.lang.String) =  \"rowid in (select rowid from raw_events where app_id=? order by rowid desc limit \-1 offset ?)\" A[Catch:\{ SQLiteException \-\> 0x0039 \}]\l0x002b: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ SQLiteException \-\> 0x0039 \}]\l0x002c: NEW_ARRAY  (r5 I:java.lang.String[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] A[Catch:\{ SQLiteException \-\> 0x0039 \}]\l0x002e: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r7 I:?[OBJECT, ARRAY])\l A[Catch:\{ SQLiteException \-\> 0x0039 \}]\l0x0030: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ SQLiteException \-\> 0x0039 \}]\l0x0031: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l A[Catch:\{ SQLiteException \-\> 0x0039 \}]\l0x0033: INVOKE  (r0 I:int) = \l  (r0 I:android.database.sqlite.SQLiteDatabase)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String[])\l android.database.sqlite.SQLiteDatabase.delete(java.lang.String, java.lang.String, java.lang.String[]):int type: VIRTUAL A[Catch:\{ SQLiteException \-\> 0x0039 \}]\l0x0036: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0037|0x0037: CAST  (r0 I:long) = (long) (r0 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0038|0x0038: RETURN  (r0 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0039|ExcHandler: SQLiteException null\lSplitter:B:1:0x0009\l|0x0039: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x003a|0x003a: INVOKE  (r1 I:com.google.android.gms.measurement.internal.zzef) = (r6 I:com.google.android.gms.measurement.internal.zzgf) com.google.android.gms.measurement.internal.zzgf.zzab():com.google.android.gms.measurement.internal.zzef type: VIRTUAL \l0x003e: INVOKE  (r1 I:com.google.android.gms.measurement.internal.zzeh) = (r1 I:com.google.android.gms.measurement.internal.zzef) com.google.android.gms.measurement.internal.zzef.zzgk():com.google.android.gms.measurement.internal.zzeh type: VIRTUAL \l0x0042: CONST_STR  (r2 I:java.lang.String) =  \"Error deleting over the limit events. appId\" \l0x0044: INVOKE  (r7 I:java.lang.Object) = (r7 I:java.lang.String) com.google.android.gms.measurement.internal.zzef.zzam(java.lang.String):java.lang.Object type: STATIC \l0x0048: INVOKE  \l  (r1 I:com.google.android.gms.measurement.internal.zzeh)\l  (r2 I:java.lang.String)\l  (r7 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l com.google.android.gms.measurement.internal.zzeh.zza(java.lang.String, java.lang.Object, java.lang.Object):void type: VIRTUAL \l0x004b: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x004d|0x004d: RETURN  (r0 I:long) \l}"];
MethodNode[shape=record,label="{public final long com.google.android.gms.measurement.internal.zzx.zzac((r6 'this' I:com.google.android.gms.measurement.internal.zzx A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

