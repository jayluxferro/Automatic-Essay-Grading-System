digraph "CFG forcom.google.android.gms.measurement.internal.zzx.zzae(Ljava\/lang\/String;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|zzbi()\lzzo()\lcom.google.android.gms.common.internal.Preconditions.checkNotEmpty(r8)\landroid.support.v4.util.ArrayMap r0 = new android.support.p000v4.util.ArrayMap()\landroid.database.sqlite.SQLiteDatabase r1 = getWritableDatabase()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|SYNTHETIC\lSplitter:B:1:0x0016\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ SQLiteException \-\> 0x006a, all \-\> 0x0067 \}\lSplitter:B:1:0x0016\l|java.lang.String[] r4 = new java.lang.String[]\{r8, r8\}\landroid.database.Cursor r1 = r1.rawQuery(\"select audience_id, filter_id from event_filters where app_id = ? and session_scoped = 1 UNION select audience_id, filter_id from property_filters where app_id = ? and session_scoped = 1;\", r4)     \/\/ Catch:\{ SQLiteException \-\> 0x006a, all \-\> 0x0067 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|SYNTHETIC\lSplitter:B:3:0x0022\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ SQLiteException \-\> 0x0065 \}\lSplitter:B:3:0x0022\l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|Catch:\{ SQLiteException \-\> 0x0065 \}\l|if (r1.moveToFirst() != false) goto L_0x0032     \/\/ Catch:\{ SQLiteException \-\> 0x0065 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|Catch:\{ SQLiteException \-\> 0x0065 \}\l|java.util.Map r0 = java.util.Collections.emptyMap()     \/\/ Catch:\{ SQLiteException \-\> 0x0065 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|if (r1 == null) goto L_0x0031\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|r1.close()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|RETURN\l|return r0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|LOOP_START\lSYNTHETIC\lSplitter:B:10:0x0032\lLOOP:0: B:10:0x0032\-\>B:15:0x005d\l}"];
Node_11 [shape=record,label="{11\:\ ?|Catch:\{ SQLiteException \-\> 0x0065 \}\lSplitter:B:10:0x0032\l|int r3 = r1.getInt(0)     \/\/ Catch:\{ SQLiteException \-\> 0x0065 \}\ljava.util.List r4 = (java.util.List) r0.get(java.lang.Integer.valueOf(r3))     \/\/ Catch:\{ SQLiteException \-\> 0x0065 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|Catch:\{ SQLiteException \-\> 0x0065 \}\l|if (r4 != null) goto L_0x004e     \/\/ Catch:\{ SQLiteException \-\> 0x0065 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0042|Catch:\{ SQLiteException \-\> 0x0065 \}\l|java.util.ArrayList r4 = new java.util.ArrayList()     \/\/ Catch:\{ SQLiteException \-\> 0x0065 \}\lr0.put(java.lang.Integer.valueOf(r3), r4)     \/\/ Catch:\{ SQLiteException \-\> 0x0065 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x004e|Catch:\{ SQLiteException \-\> 0x0065 \}\lPHI: r4 \l  PHI: (r4v6 java.util.List) = (r4v5 java.util.List), (r4v7 java.util.List) binds: [B:12:0x0040, B:13:0x0042] A[DONT_GENERATE, DONT_INLINE]\l|r4.add(java.lang.Integer.valueOf(r1.getInt(1)))     \/\/ Catch:\{ SQLiteException \-\> 0x0065 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x005d|LOOP_END\lLOOP:0: B:10:0x0032\-\>B:15:0x005d\l|if (r1.moveToNext() != false) goto L_0x0032\l}"];
Node_16 [shape=record,label="{16\:\ 0x005f|if (r1 == null) goto L_0x0064\l}"];
Node_17 [shape=record,label="{17\:\ 0x0061|r1.close()\l}"];
Node_18 [shape=record,label="{18\:\ 0x0064|RETURN\l|return r0\l}"];
Node_19 [shape=record,label="{19\:\ 0x0065|ExcHandler: SQLiteException (e android.database.sqlite.SQLiteException)\lSplitter:B:3:0x0022\l|android.database.sqlite.SQLiteException r0 = e\l}"];
Node_20 [shape=record,label="{20\:\ 0x0067|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:1:0x0016\l|java.lang.Throwable r8 = th\l}"];
Node_21 [shape=record,label="{21\:\ 0x0068|r1 = null\l}"];
Node_22 [shape=record,label="{22\:\ 0x006a|ExcHandler: SQLiteException (e android.database.sqlite.SQLiteException)\lSplitter:B:1:0x0016\l|android.database.sqlite.SQLiteException r0 = e\l}"];
Node_23 [shape=record,label="{23\:\ 0x006b|r1 = null\l}"];
Node_24 [shape=record,label="{24\:\ 0x006c|SYNTHETIC\lPHI: r0 r1 \l  PHI: (r0v1 'e' android.database.sqlite.SQLiteException) = (r0v2 'e' android.database.sqlite.SQLiteException), (r0v3 'e' android.database.sqlite.SQLiteException) binds: [B:23:0x006b, B:19:0x0065] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 android.database.Cursor) = (r1v3 android.database.Cursor), (r1v5 android.database.Cursor) binds: [B:23:0x006b, B:19:0x0065] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:24:0x006c\l}"];
Node_25 [shape=record,label="{25\:\ ?|Catch:\{ all \-\> 0x0083 \}\lSplitter:B:24:0x006c\l|zzab().zzgk().zza(\"Database error querying scoped filters. appId\", com.google.android.gms.measurement.internal.zzef.zzam(r8), r0)     \/\/ Catch:\{ all \-\> 0x0083 \}\l}"];
Node_26 [shape=record,label="{26\:\ 0x007d|if (r1 == null) goto L_0x0082\l}"];
Node_27 [shape=record,label="{27\:\ 0x007f|r1.close()\l}"];
Node_28 [shape=record,label="{28\:\ 0x0082|RETURN\l|return null\l}"];
Node_29 [shape=record,label="{29\:\ 0x0083|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:24:0x006c\l|java.lang.Throwable r8 = th\l}"];
Node_30 [shape=record,label="{30\:\ 0x0084|PHI: r1 r8 \l  PHI: (r1v1 android.database.Cursor) = (r1v2 android.database.Cursor), (r1v4 android.database.Cursor) binds: [B:29:0x0083, B:21:0x0068] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 'th' java.lang.Throwable) = (r8v2 'th' java.lang.Throwable), (r8v4 'th' java.lang.Throwable) binds: [B:29:0x0083, B:21:0x0068] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == null) goto L_0x0089\l}"];
Node_31 [shape=record,label="{31\:\ 0x0086|r1.close()\l}"];
Node_32 [shape=record,label="{32\:\ 0x0089|throw r8\l}"];
Node_33 [shape=record,label="{33\:\ 0x005f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{final java.util.Map\<java.lang.Integer, java.util.List\<java.lang.Integer\>\> com.google.android.gms.measurement.internal.zzx.zzae((r7v0 'this' com.google.android.gms.measurement.internal.zzx A[IMMUTABLE_TYPE, THIS]), (r8v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, ), Ljava\/util\/Map\<, Ljava\/lang\/Integer;, Ljava\/util\/List\<, Ljava\/lang\/Integer;, \>;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_22;
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_19;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_19;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_10;
Node_15 -> Node_33[style=dashed];
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_30;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_29;
Node_25 -> Node_26;
Node_25 -> Node_29;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_33 -> Node_16;
}

