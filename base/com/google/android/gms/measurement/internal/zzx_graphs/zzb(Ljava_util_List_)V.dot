digraph "CFG forcom.google.android.gms.measurement.internal.zzx.zzb(Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|zzo()\lzzbi()\lcom.google.android.gms.common.internal.Preconditions.checkNotNull(r5)\lcom.google.android.gms.common.internal.Preconditions.checkNotZero(r5.size())\l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|if (zzcg() != false) goto L_0x0017\l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|java.lang.String r5 = android.text.TextUtils.join(\",\", r5)\ljava.lang.StringBuilder r1 = new java.lang.StringBuilder(java.lang.String.valueOf(r5).length() + 2)\lr1.append(\"(\")\lr1.append(r5)\lr1.append(\")\")\ljava.lang.String r5 = r1.toString()\ljava.lang.StringBuilder r1 = new java.lang.StringBuilder(java.lang.String.valueOf(r5).length() + 80)\lr1.append(\"SELECT COUNT(1) FROM queue WHERE rowid IN \")\lr1.append(r5)\lr1.append(\" AND retry_count =  2147483647 LIMIT 1\")\l}"];
Node_4 [shape=record,label="{4\:\ 0x0066|if ((zza(r1.toString(), (java.lang.String[]) null) \> 0 ? 1 : (zza(r1.toString(), (java.lang.String[]) null) == 0 ? 0 : \-1)) \<= 0) goto L_0x0075\l}"];
Node_5 [shape=record,label="{5\:\ 0x0068|zzab().zzgn().zzao(\"The number of upload retries exceeds the limit. Will remain unchanged.\")\l}"];
Node_6 [shape=record,label="{6\:\ 0x0075|SYNTHETIC\lSplitter:B:6:0x0075\l}"];
Node_7 [shape=record,label="{7\:\ ?|Catch:\{ SQLiteException \-\> 0x009d \}\lSplitter:B:6:0x0075\l|android.database.sqlite.SQLiteDatabase r0 = getWritableDatabase()     \/\/ Catch:\{ SQLiteException \-\> 0x009d \}\ljava.lang.StringBuilder r2 = new java.lang.StringBuilder(java.lang.String.valueOf(r5).length() + 127)     \/\/ Catch:\{ SQLiteException \-\> 0x009d \}\lr2.append(\"UPDATE queue SET retry_count = IFNULL(retry_count, 0) + 1 WHERE rowid IN \")     \/\/ Catch:\{ SQLiteException \-\> 0x009d \}\lr2.append(r5)     \/\/ Catch:\{ SQLiteException \-\> 0x009d \}\lr2.append(\" AND (retry_count IS NULL OR retry_count \< 2147483647)\")     \/\/ Catch:\{ SQLiteException \-\> 0x009d \}\lr0.execSQL(r2.toString())     \/\/ Catch:\{ SQLiteException \-\> 0x009d \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x009c|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ 0x009d|ExcHandler: SQLiteException (r5v4 'e' android.database.sqlite.SQLiteException A[CUSTOM_DECLARE])\lSplitter:B:6:0x0075\l|android.database.sqlite.SQLiteException r5 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x009e|zzab().zzgk().zza(\"Error incrementing retry count. error\", r5)\l}"];
Node_11 [shape=record,label="{11\:\ 0x00ab|RETURN\l|return\l}"];
MethodNode[shape=record,label="{final void com.google.android.gms.measurement.internal.zzx.zzb((r4v0 'this' com.google.android.gms.measurement.internal.zzx A[IMMUTABLE_TYPE, THIS]), (r5v0 java.util.List\<java.lang.Long\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.WorkerThread, \{\}], Annotation[BUILD, com.google.android.gms.common.util.VisibleForTesting, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Ljava\/lang\/Long;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

