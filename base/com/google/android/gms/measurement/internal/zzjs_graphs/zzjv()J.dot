digraph "CFG forcom.google.android.gms.measurement.internal.zzjs.zzjv()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|if ((r6.zzty.get() \> 0 ? 1 : (r6.zzty.get() == 0 ? 0 : \-1)) != 0) goto L_0x0032\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|java.util.concurrent.atomic.AtomicLong r0 = r6.zzty\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|monitor\-enter(r0)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|SYNTHETIC\l}"];
Node_5 [shape=record,label="{5\:\ ?|long r1 = new java.util.Random(java.lang.System.nanoTime() ^ zzx().currentTimeMillis()).nextLong()\lint r3 = r6.zzag + 1\lr6.zzag = r3\llong r1 = r1 + ((long) r3)\l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|monitor\-exit(r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|RETURN\l|return r1\l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|REMOVE\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|REMOVE\l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|REMOVE\l|throw r1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|java.util.concurrent.atomic.AtomicLong r0 = r6.zzty\l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|monitor\-enter(r0)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ ?|r6.zzty.compareAndSet(\-1, 1)\llong r1 = r6.zzty.getAndIncrement()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|monitor\-exit(r0)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0045|RETURN\l|return r1\l}"];
Node_17 [shape=record,label="{17\:\ 0x0046|REMOVE\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_18 [shape=record,label="{18\:\ 0x0047|REMOVE\l}"];
Node_19 [shape=record,label="{19\:\ 0x0048|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{public final long com.google.android.gms.measurement.internal.zzjs.zzjv((r6v0 'this' com.google.android.gms.measurement.internal.zzjs A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

