digraph "CFG forcom.google.android.gms.measurement.internal.zzjs.zzd(Landroid\/content\/Context;Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:javax.security.auth.x500.X500Principal) =  javax.security.auth.x500.X500Principal \l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"CN=Android Debug,O=Android,C=US\" \l0x0004: INVOKE  \l  (r0 I:javax.security.auth.x500.X500Principal)\l  (r1 I:java.lang.String)\l javax.security.auth.x500.X500Principal.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|SYNTHETIC\lSplitter:B:1:0x0007\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0007\l|0x0007: INVOKE  (r3 I:com.google.android.gms.common.wrappers.PackageManagerWrapper) = (r3 I:android.content.Context) com.google.android.gms.common.wrappers.Wrappers.packageManager(android.content.Context):com.google.android.gms.common.wrappers.PackageManagerWrapper type: STATIC A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}, TRY_ENTER]\l0x000b: CONST  (r1 I:?[int, float, short, byte, char]) = (64 ?[int, float, short, byte, char]) A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l0x000d: INVOKE  (r3 I:android.content.pm.PackageInfo) = \l  (r3 I:com.google.android.gms.common.wrappers.PackageManagerWrapper)\l  (r4 I:java.lang.String)\l  (r1 I:int)\l com.google.android.gms.common.wrappers.PackageManagerWrapper.getPackageInfo(java.lang.String, int):android.content.pm.PackageInfo type: VIRTUAL A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x005c A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IGET  (r4 I:android.content.pm.Signature[]) = (r3 I:android.content.pm.PackageInfo) android.content.pm.PackageInfo.signatures android.content.pm.Signature[] A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x005c A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IGET  (r4 I:android.content.pm.Signature[]) = (r3 I:android.content.pm.PackageInfo) android.content.pm.PackageInfo.signatures android.content.pm.Signature[] A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l0x0019: ARRAY_LENGTH  (r4 I:int) = (r4 I:?[]) A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:14:0x005c A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IGET  (r3 I:android.content.pm.Signature[]) = (r3 I:android.content.pm.PackageInfo) android.content.pm.PackageInfo.signatures android.content.pm.Signature[] A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l0x001e: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l0x001f: AGET  (r3 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l0x0021: CONST_STR  (r4 I:java.lang.String) =  \"X.509\" A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l0x0023: INVOKE  (r4 I:java.security.cert.CertificateFactory) = (r4 I:java.lang.String) java.security.cert.CertificateFactory.getInstance(java.lang.String):java.security.cert.CertificateFactory type: STATIC A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l0x0027: NEW_INSTANCE  (r1 I:java.io.ByteArrayInputStream) =  java.io.ByteArrayInputStream A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l0x0029: INVOKE  (r3 I:byte[]) = (r3 I:android.content.pm.Signature) android.content.pm.Signature.toByteArray():byte[] type: VIRTUAL A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l0x002d: INVOKE  (r1 I:java.io.ByteArrayInputStream), (r3 I:byte[]) java.io.ByteArrayInputStream.\<init\>(byte[]):void type: DIRECT A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l0x0030: INVOKE  (r3 I:java.security.cert.Certificate) = \l  (r4 I:java.security.cert.CertificateFactory)\l  (r1 I:java.io.InputStream)\l java.security.cert.CertificateFactory.generateCertificate(java.io.InputStream):java.security.cert.Certificate type: VIRTUAL A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l0x0034: CHECK_CAST  (r3 I:java.security.cert.X509Certificate) = (java.security.cert.X509Certificate) (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l0x0036: INVOKE  (r3 I:javax.security.auth.x500.X500Principal) = (r3 I:java.security.cert.X509Certificate) java.security.cert.X509Certificate.getSubjectX500Principal():javax.security.auth.x500.X500Principal type: VIRTUAL A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l0x003a: INVOKE  (r3 I:boolean) = \l  (r3 I:javax.security.auth.x500.X500Principal)\l  (r0 I:java.lang.Object)\l javax.security.auth.x500.X500Principal.equals(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ CertificateException \-\> 0x004e, NameNotFoundException \-\> 0x003f \}]\l0x003d: NOP   A[TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x003e|0x003e: RETURN  (r3 I:boolean) \l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|ExcHandler: NameNotFoundException null\lSplitter:B:1:0x0007\l|0x003f: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: INVOKE  (r4 I:com.google.android.gms.measurement.internal.zzef) = (r2 I:com.google.android.gms.measurement.internal.zzgf) com.google.android.gms.measurement.internal.zzgf.zzab():com.google.android.gms.measurement.internal.zzef type: VIRTUAL \l0x0044: INVOKE  (r4 I:com.google.android.gms.measurement.internal.zzeh) = (r4 I:com.google.android.gms.measurement.internal.zzef) com.google.android.gms.measurement.internal.zzef.zzgk():com.google.android.gms.measurement.internal.zzeh type: VIRTUAL \l0x0048: CONST_STR  (r0 I:java.lang.String) =  \"Package name not found\" \l0x004a: INVOKE  \l  (r4 I:com.google.android.gms.measurement.internal.zzeh)\l  (r0 I:java.lang.String)\l  (r3 I:java.lang.Object)\l com.google.android.gms.measurement.internal.zzeh.zza(java.lang.String, java.lang.Object):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x004e|ExcHandler: CertificateException null\lSplitter:B:1:0x0007\l|0x004e: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x004f|0x004f: INVOKE  (r4 I:com.google.android.gms.measurement.internal.zzef) = (r2 I:com.google.android.gms.measurement.internal.zzgf) com.google.android.gms.measurement.internal.zzgf.zzab():com.google.android.gms.measurement.internal.zzef type: VIRTUAL \l0x0053: INVOKE  (r4 I:com.google.android.gms.measurement.internal.zzeh) = (r4 I:com.google.android.gms.measurement.internal.zzef) com.google.android.gms.measurement.internal.zzef.zzgk():com.google.android.gms.measurement.internal.zzeh type: VIRTUAL \l0x0057: CONST_STR  (r0 I:java.lang.String) =  \"Error obtaining certificate\" \l0x0059: INVOKE  \l  (r4 I:com.google.android.gms.measurement.internal.zzeh)\l  (r0 I:java.lang.String)\l  (r3 I:java.lang.Object)\l com.google.android.gms.measurement.internal.zzeh.zza(java.lang.String, java.lang.Object):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x005c|0x005c: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x005d|0x005d: RETURN  (r3 I:boolean) \l}"];
MethodNode[shape=record,label="{private final boolean com.google.android.gms.measurement.internal.zzjs.zzd((r2 'this' I:com.google.android.gms.measurement.internal.zzjs A[IMMUTABLE_TYPE, THIS]), (r3 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, com.google.android.gms.common.util.VisibleForTesting, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_12;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

