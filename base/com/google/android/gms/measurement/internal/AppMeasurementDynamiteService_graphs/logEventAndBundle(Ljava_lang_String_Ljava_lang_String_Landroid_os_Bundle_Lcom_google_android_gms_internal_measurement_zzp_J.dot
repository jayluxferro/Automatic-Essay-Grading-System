digraph "CFG forcom.google.android.gms.measurement.internal.AppMeasurementDynamiteService.logEventAndBundle(Ljava\/lang\/String;Ljava\/lang\/String;Landroid\/os\/Bundle;Lcom\/google\/android\/gms\/internal\/measurement\/zzp;J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|zzbi()\lcom.google.android.gms.common.internal.Preconditions.checkNotEmpty(r9)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r10 == null) goto L_0x0010\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|android.os.Bundle r0 = new android.os.Bundle(r10)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|android.os.Bundle r0 = new android.os.Bundle()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|PHI: r0 \l  PHI: (r0v0 android.os.Bundle) = (r0v2 android.os.Bundle), (r0v3 android.os.Bundle) binds: [B:3:0x0010, B:2:0x000a] A[DONT_GENERATE, DONT_INLINE]\l|r0.putString(\"_o\", p018io.fabric.sdk.android.services.settings.SettingsJsonConstants.APP_KEY)\lr1 = r9\lcom.google.android.gms.measurement.internal.zzai r0 = new com.google.android.gms.measurement.internal.zzai(r1, new com.google.android.gms.measurement.internal.zzah(r10), p018io.fabric.sdk.android.services.settings.SettingsJsonConstants.APP_KEY, r12)\lr7.zzj.zzaa().zza((java.lang.Runnable) new com.google.android.gms.measurement.internal.zzj(r7, r11, r0, r8))\l}"];
Node_5 [shape=record,label="{5\:\ 0x0035|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.gms.measurement.internal.AppMeasurementDynamiteService.logEventAndBundle((r7v0 'this' com.google.android.gms.measurement.internal.AppMeasurementDynamiteService A[IMMUTABLE_TYPE, THIS]), (r8v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 com.google.android.gms.internal.measurement.zzp A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.os.RemoteException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

