digraph "CFG forcom.google.android.gms.measurement.internal.zzgp.zzif()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.content.Context) = (r2 I:com.google.android.gms.measurement.internal.zzgf) com.google.android.gms.measurement.internal.zzgf.getContext():android.content.Context type: VIRTUAL \l0x0004: INVOKE  (r0 I:android.content.Context) = (r0 I:android.content.Context) android.content.Context.getApplicationContext():android.content.Context type: VIRTUAL \l0x0008: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) android.app.Application \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r0 I:android.content.Context) = (r2 I:com.google.android.gms.measurement.internal.zzgf) com.google.android.gms.measurement.internal.zzgf.getContext():android.content.Context type: VIRTUAL \l0x0010: INVOKE  (r0 I:android.content.Context) = (r0 I:android.content.Context) android.content.Context.getApplicationContext():android.content.Context type: VIRTUAL \l0x0014: CHECK_CAST  (r0 I:android.app.Application) = (android.app.Application) (r0 I:?[OBJECT, ARRAY]) \l0x0016: IGET  (r1 I:com.google.android.gms.measurement.internal.zzhj) = (r2 I:com.google.android.gms.measurement.internal.zzgp) com.google.android.gms.measurement.internal.zzgp.zzpu com.google.android.gms.measurement.internal.zzhj \l0x0018: INVOKE  \l  (r0 I:android.app.Application)\l  (r1 I:android.app.Application$ActivityLifecycleCallbacks)\l android.app.Application.unregisterActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: RETURN   \l}"];
MethodNode[shape=record,label="{public final void com.google.android.gms.measurement.internal.zzgp.zzif((r2 'this' I:com.google.android.gms.measurement.internal.zzgp A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

