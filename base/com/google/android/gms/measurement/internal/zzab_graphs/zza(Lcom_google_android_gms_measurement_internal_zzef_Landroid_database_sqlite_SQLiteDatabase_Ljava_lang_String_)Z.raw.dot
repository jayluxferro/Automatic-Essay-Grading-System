digraph "CFG forcom.google.android.gms.measurement.internal.zzab.zza(Lcom\/google\/android\/gms\/measurement\/internal\/zzef;Landroid\/database\/sqlite\/SQLiteDatabase;Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0045 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: CONST_STR  (r3 I:java.lang.String) =  \"SQLITE_MASTER\" \l0x0006: CONST_STR  (r2 I:java.lang.String) =  \"name\" \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|SYNTHETIC\lSplitter:B:2:0x0008\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0008\l|0x0008: FILLED_NEW_ARRAY  (r4 I:java.lang.String[]) = (r2 I:java.lang.String) elemType: java.lang.String A[Catch:\{ SQLiteException \-\> 0x002f \}, TRY_ENTER]\l0x000c: CONST_STR  (r5 I:java.lang.String) =  \"name=?\" A[Catch:\{ SQLiteException \-\> 0x002f \}]\l0x000e: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ SQLiteException \-\> 0x002f \}]\l0x000f: NEW_ARRAY  (r6 I:java.lang.String[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] A[Catch:\{ SQLiteException \-\> 0x002f \}]\l0x0011: APUT  \l  (r6 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r13 I:?[OBJECT, ARRAY])\l A[Catch:\{ SQLiteException \-\> 0x002f \}]\l0x0013: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ SQLiteException \-\> 0x002f \}]\l0x0014: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ SQLiteException \-\> 0x002f \}]\l0x0015: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ SQLiteException \-\> 0x002f \}]\l0x0016: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) A[Catch:\{ SQLiteException \-\> 0x002f \}]\l0x0017: INVOKE  (r12 I:android.database.Cursor) = \l  (r2 I:android.database.sqlite.SQLiteDatabase)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String[])\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String[])\l  (r7 I:java.lang.String)\l  (r8 I:java.lang.String)\l  (r9 I:java.lang.String)\l android.database.sqlite.SQLiteDatabase.query(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String):android.database.Cursor type: VIRTUAL A[Catch:\{ SQLiteException \-\> 0x002f \}]\l0x001a: NOP   A[TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|SYNTHETIC\lSplitter:B:4:0x001b\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x001b\l|0x001b: INVOKE  (r0 I:boolean) = (r12 I:android.database.Cursor) android.database.Cursor.moveToFirst():boolean type: INTERFACE A[Catch:\{ SQLiteException \-\> 0x0028, all \-\> 0x0025 \}, TRY_ENTER]\l0x001e: NOP   A[TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0024 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: INVOKE  (r12 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: RETURN  (r0 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|ExcHandler: all null\lSplitter:B:4:0x001b\l|0x0025: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|ExcHandler: SQLiteException null\lSplitter:B:4:0x001b\l|0x0028: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x002a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x002b: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|ExcHandler: all null\lSplitter:B:16:0x0030\l|0x002d: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|ExcHandler: SQLiteException null\lSplitter:B:2:0x0008\l|0x002f: MOVE_EXCEPTION  (r12 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x0030|SYNTHETIC\lSplitter:B:16:0x0030\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x0030\l|0x0030: INVOKE  (r11 I:com.google.android.gms.measurement.internal.zzeh) = (r11 I:com.google.android.gms.measurement.internal.zzef) com.google.android.gms.measurement.internal.zzef.zzgn():com.google.android.gms.measurement.internal.zzeh type: VIRTUAL A[Catch:\{ all \-\> 0x002d \}, TRY_ENTER]\l0x0034: CONST_STR  (r2 I:java.lang.String) =  \"Error querying for table\" A[Catch:\{ all \-\> 0x002d \}]\l0x0036: INVOKE  \l  (r11 I:com.google.android.gms.measurement.internal.zzeh)\l  (r2 I:java.lang.String)\l  (r13 I:java.lang.Object)\l  (r12 I:java.lang.Object)\l com.google.android.gms.measurement.internal.zzeh.zza(java.lang.String, java.lang.Object, java.lang.Object):void type: VIRTUAL A[Catch:\{ all \-\> 0x002d \}, TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0039|0x0039: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x003e \l}"];
Node_19 [shape=record,label="{19\:\ 0x003b|0x003b: INVOKE  (r0 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_20 [shape=record,label="{20\:\ 0x003e|0x003e: RETURN  (r1 I:boolean) \l}"];
Node_21 [shape=record,label="{21\:\ 0x003f|0x003f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0044 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0041|0x0041: INVOKE  (r0 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_23 [shape=record,label="{23\:\ 0x0044|0x0044: THROW  (r11 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0045|0x0045: NEW_INSTANCE  (r11 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0047: CONST_STR  (r12 I:java.lang.String) =  \"Monitor must not be null\" \l0x0049: INVOKE  \l  (r11 I:java.lang.IllegalArgumentException)\l  (r12 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_25 [shape=record,label="{25\:\ 0x004c|0x004c: THROW  (r11 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static boolean com.google.android.gms.measurement.internal.zzab.zza((r11 I:com.google.android.gms.measurement.internal.zzef A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.database.sqlite.SQLiteDatabase A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.WorkerThread, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_24;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_11;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_21;
Node_11 -> Node_12;
Node_12 -> Node_16;
Node_13 -> Node_21;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_13;
Node_17 -> Node_18;
Node_17 -> Node_13;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_24 -> Node_25;
}

