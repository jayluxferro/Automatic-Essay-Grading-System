digraph "CFG forcom.google.android.gms.measurement.internal.zzab.zza(Lcom\/google\/android\/gms\/measurement\/internal\/zzef;Landroid\/database\/sqlite\/SQLiteDatabase;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x004a \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: NEW_INSTANCE  (r0 I:java.io.File) =  java.io.File \l0x0004: INVOKE  (r4 I:java.lang.String) = (r4 I:android.database.sqlite.SQLiteDatabase) android.database.sqlite.SQLiteDatabase.getPath():java.lang.String type: VIRTUAL \l0x0008: INVOKE  (r0 I:java.io.File), (r4 I:java.lang.String) java.io.File.\<init\>(java.lang.String):void type: DIRECT \l0x000b: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: INVOKE  (r1 I:boolean) = (r0 I:java.io.File), (r4 I:boolean), (r4 I:boolean) java.io.File.setReadable(boolean, boolean):boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001b \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: INVOKE  (r1 I:com.google.android.gms.measurement.internal.zzeh) = (r3 I:com.google.android.gms.measurement.internal.zzef) com.google.android.gms.measurement.internal.zzef.zzgn():com.google.android.gms.measurement.internal.zzeh type: VIRTUAL \l0x0016: CONST_STR  (r2 I:java.lang.String) =  \"Failed to turn off database read permission\" \l0x0018: INVOKE  \l  (r1 I:com.google.android.gms.measurement.internal.zzeh)\l  (r2 I:java.lang.String)\l com.google.android.gms.measurement.internal.zzeh.zzao(java.lang.String):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: INVOKE  (r4 I:boolean) = (r0 I:java.io.File), (r4 I:boolean), (r4 I:boolean) java.io.File.setWritable(boolean, boolean):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: INVOKE  (r4 I:com.google.android.gms.measurement.internal.zzeh) = (r3 I:com.google.android.gms.measurement.internal.zzef) com.google.android.gms.measurement.internal.zzef.zzgn():com.google.android.gms.measurement.internal.zzeh type: VIRTUAL \l0x0025: CONST_STR  (r1 I:java.lang.String) =  \"Failed to turn off database write permission\" \l0x0027: INVOKE  \l  (r4 I:com.google.android.gms.measurement.internal.zzeh)\l  (r1 I:java.lang.String)\l com.google.android.gms.measurement.internal.zzeh.zzao(java.lang.String):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x002b: INVOKE  (r1 I:boolean) = (r0 I:java.io.File), (r4 I:boolean), (r4 I:boolean) java.io.File.setReadable(boolean, boolean):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003a \l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: INVOKE  (r1 I:com.google.android.gms.measurement.internal.zzeh) = (r3 I:com.google.android.gms.measurement.internal.zzef) com.google.android.gms.measurement.internal.zzef.zzgn():com.google.android.gms.measurement.internal.zzeh type: VIRTUAL \l0x0035: CONST_STR  (r2 I:java.lang.String) =  \"Failed to turn on database read permission for owner\" \l0x0037: INVOKE  \l  (r1 I:com.google.android.gms.measurement.internal.zzeh)\l  (r2 I:java.lang.String)\l com.google.android.gms.measurement.internal.zzeh.zzao(java.lang.String):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x003a|0x003a: INVOKE  (r4 I:boolean) = (r0 I:java.io.File), (r4 I:boolean), (r4 I:boolean) java.io.File.setWritable(boolean, boolean):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|0x003e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0049 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|0x0040: INVOKE  (r3 I:com.google.android.gms.measurement.internal.zzeh) = (r3 I:com.google.android.gms.measurement.internal.zzef) com.google.android.gms.measurement.internal.zzef.zzgn():com.google.android.gms.measurement.internal.zzeh type: VIRTUAL \l0x0044: CONST_STR  (r4 I:java.lang.String) =  \"Failed to turn on database write permission for owner\" \l0x0046: INVOKE  \l  (r3 I:com.google.android.gms.measurement.internal.zzeh)\l  (r4 I:java.lang.String)\l com.google.android.gms.measurement.internal.zzeh.zzao(java.lang.String):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0049|0x0049: RETURN   \l}"];
Node_14 [shape=record,label="{14\:\ 0x004a|0x004a: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x004c: CONST_STR  (r4 I:java.lang.String) =  \"Monitor must not be null\" \l0x004e: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0051|0x0051: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{static void com.google.android.gms.measurement.internal.zzab.zza((r3 I:com.google.android.gms.measurement.internal.zzef A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.database.sqlite.SQLiteDatabase A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_14;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

