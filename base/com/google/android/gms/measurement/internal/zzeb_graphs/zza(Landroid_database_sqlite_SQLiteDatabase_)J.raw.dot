digraph "CFG forcom.google.android.gms.measurement.internal.zzeb.zza(Landroid\/database\/sqlite\/SQLiteDatabase;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST_STR  (r2 I:java.lang.String) =  \"messages\" \l0x0003: CONST_STR  (r1 I:java.lang.String) =  \"rowid\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|SYNTHETIC\lSplitter:B:1:0x0005\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0005\l|0x0005: FILLED_NEW_ARRAY  (r3 I:java.lang.String[]) = (r1 I:java.lang.String) elemType: java.lang.String A[Catch:\{ all \-\> 0x003a \}, TRY_ENTER]\l0x0009: CONST_STR  (r4 I:java.lang.String) =  \"type=?\" A[Catch:\{ all \-\> 0x003a \}]\l0x000b: CONST_STR  (r1 I:java.lang.String) =  \"3\" A[Catch:\{ all \-\> 0x003a \}]\l0x000d: FILLED_NEW_ARRAY  (r5 I:java.lang.String[]) = (r1 I:java.lang.String) elemType: java.lang.String A[Catch:\{ all \-\> 0x003a \}]\l0x0011: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x003a \}]\l0x0012: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x003a \}]\l0x0013: CONST_STR  (r8 I:java.lang.String) =  \"rowid desc\" A[Catch:\{ all \-\> 0x003a \}]\l0x0015: CONST_STR  (r9 I:java.lang.String) =  \"1\" A[Catch:\{ all \-\> 0x003a \}]\l0x0017: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003a \}]\l0x0018: INVOKE  (r11 I:android.database.Cursor) = \l  (r1 I:android.database.sqlite.SQLiteDatabase)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String[])\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String[])\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String)\l  (r8 I:java.lang.String)\l  (r9 I:java.lang.String)\l android.database.sqlite.SQLiteDatabase.query(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String):android.database.Cursor type: VIRTUAL A[Catch:\{ all \-\> 0x003a \}]\l0x001b: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|SYNTHETIC\lSplitter:B:3:0x001c\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x001c\l|0x001c: INVOKE  (r0 I:boolean) = (r11 I:android.database.Cursor) android.database.Cursor.moveToFirst():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0035 \}, TRY_ENTER]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002d A[Catch:\{ all \-\> 0x0035 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0035 \}]\l0x0023: INVOKE  (r0 I:long) = (r11 I:android.database.Cursor), (r0 I:int) android.database.Cursor.getLong(int):long type: INTERFACE A[Catch:\{ all \-\> 0x0035 \}]\l0x0026: NOP   A[TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002c \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: INVOKE  (r11 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: RETURN  (r0 I:long) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0032 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|0x002f: INVOKE  (r11 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|0x0032: CONST  (r0 I:?[long, double]) = (\-1 ?[long, double]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|0x0034: RETURN  (r0 I:long) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|ExcHandler: all null\lSplitter:B:3:0x001c\l|0x0035: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0036|0x0036: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0037: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0038: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|ExcHandler: all null\lSplitter:B:1:0x0005\l|0x003a: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x003b|0x003b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0040 \l}"];
Node_18 [shape=record,label="{18\:\ 0x003d|0x003d: INVOKE  (r0 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_19 [shape=record,label="{19\:\ 0x0040|0x0040: THROW  (r11 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static long com.google.android.gms.measurement.internal.zzeb.zza((r11 I:android.database.sqlite.SQLiteDatabase A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
}

