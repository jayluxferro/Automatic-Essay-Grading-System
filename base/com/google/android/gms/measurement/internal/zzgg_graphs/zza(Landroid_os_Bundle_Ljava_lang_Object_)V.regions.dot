digraph "CFG forcom.google.android.gms.measurement.internal.zzgg.zza(Landroid\/os\/Bundle;Ljava\/lang\/Object;)V" {
subgraph cluster_Region_1810180009 {
label = "R(1:(1:2)(1:(1:6)(1:8)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2030278643 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: R(1:(1:6)(1:8))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r4 instanceof java.lang.Double) == true) goto L_0x0004\l}"];
subgraph cluster_Region_2117108719 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|r3.putDouble(\"value\", ((java.lang.Double) r4).doubleValue())\l}"];
}
subgraph cluster_Region_1380960585 {
label = "R(1:(1:6)(1:8)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_274035910 {
label = "IF [B:5:0x0012] THEN: R(1:6) ELSE: R(1:8) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|if ((r4 instanceof java.lang.Long) == true) goto L_0x0014\l}"];
subgraph cluster_Region_1972163888 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0014|r3.putLong(\"value\", ((java.lang.Long) r4).longValue())\l}"];
}
subgraph cluster_Region_265887637 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0020|r3.putString(\"value\", r4.toString())\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000f}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0010}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001f}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0029}"];
MethodNode[shape=record,label="{public static void com.google.android.gms.measurement.internal.zzgg.zza((r3v0 android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_0 -> Node_1;
Node_4 -> Node_5;
}

