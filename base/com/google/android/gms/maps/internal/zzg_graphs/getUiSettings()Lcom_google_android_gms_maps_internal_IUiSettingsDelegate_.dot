digraph "CFG forcom.google.android.gms.maps.internal.zzg.getUiSettings()Lcom\/google\/android\/gms\/maps\/internal\/IUiSettingsDelegate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.os.Parcel r0 = zza(25, zza())\landroid.os.IBinder r1 = r0.readStrongBinder()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r1 != null) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|r1 = null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|android.os.IInterface r2 = r1.queryLocalInterface(\"com.google.android.gms.maps.internal.IUiSettingsDelegate\")\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|if ((r2 instanceof com.google.android.gms.maps.internal.IUiSettingsDelegate) == false) goto L_0x0020\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|com.google.android.gms.maps.internal.IUiSettingsDelegate r1 = r2\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|r1 = new com.google.android.gms.maps.internal.zzbx(r1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|PHI: r1 \l  PHI: (r1v2 com.google.android.gms.maps.internal.IUiSettingsDelegate) = (r1v3 com.google.android.gms.maps.internal.IUiSettingsDelegate), (r1v5 com.google.android.gms.maps.internal.IUiSettingsDelegate), (r1v6 com.google.android.gms.maps.internal.IUiSettingsDelegate) binds: [B:6:0x0020, B:5:0x001c, B:2:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|r0.recycle()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|RETURN\l|return r1\l}"];
MethodNode[shape=record,label="{public final com.google.android.gms.maps.internal.IUiSettingsDelegate com.google.android.gms.maps.internal.zzg.getUiSettings((r4v0 'this' com.google.android.gms.maps.internal.zzg A[IMMUTABLE_TYPE, THIS]))  | INCONSISTENT_CODE\lJADX WARNING: type inference failed for: r2v1, types: [android.os.IInterface]\lMulti\-variable type inference failed\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.os.RemoteException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

