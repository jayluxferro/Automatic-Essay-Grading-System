digraph "CFG forcom.google.android.gms.maps.model.StreetViewPanoramaOrientation.\<init\>(FF)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if ((\-90.0f \> r5 ? 1 : (\-90.0f == r5 ? 0 : \-1)) \> 0) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009}"];
Node_3 [shape=record,label="{3\:\ 0x000d|if ((r5 \> 90.0f ? 1 : (r5 == 90.0f ? 0 : \-1)) \> 0) goto L_0x0011\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|r0 = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|r0 = false\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|PHI: r0 \l  PHI: (r0v2 boolean) = (r0v6 boolean), (r0v9 boolean) binds: [B:5:0x0011, B:4:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.StringBuilder r2 = new java.lang.StringBuilder(62)\lr2.append(\"Tilt needs to be between \-90 and 90 inclusive: \")\lr2.append(r5)\lcom.google.android.gms.common.internal.Preconditions.checkArgument(r0, r2.toString())\lr4.tilt = r5 + 0.0f\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|if ((((double) r6) \> 0.0d ? 1 : (((double) r6) == 0.0d ? 0 : \-1)) \> 0) goto L_0x0037\l}"];
Node_8 [shape=record,label="{8\:\ 0x0035|float r6 = (r6 % 360.0f) + 360.0f\l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|PHI: r6 \l  PHI: (r6v1 float) = (r6v0 float), (r6v4 float) binds: [B:7:0x0033, B:8:0x0035] A[DONT_GENERATE, DONT_INLINE]\l|r4.bearing = r6 % 360.0f\l}"];
Node_10 [shape=record,label="{10\:\ 0x003a|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.gms.maps.model.StreetViewPanoramaOrientation.\<init\>((r4v0 'this' com.google.android.gms.maps.model.StreetViewPanoramaOrientation A[IMMUTABLE_TYPE, THIS]), (r5v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, com.google.android.gms.common.internal.safeparcel.SafeParcelable$Param, \{id=2\}], Annotation[BUILD, com.google.android.gms.common.internal.safeparcel.SafeParcelable$Param, \{id=3\}]\lAnnotation[BUILD, com.google.android.gms.common.internal.safeparcel.SafeParcelable$Constructor, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

