digraph "CFG forcom.google.android.gms.maps.GoogleMap.snapshot(Lcom\/google\/android\/gms\/maps\/GoogleMap$SnapshotReadyCallback;Landroid\/graphics\/Bitmap;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r4 == null) goto L_0x0007\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|com.google.android.gms.dynamic.IObjectWrapper r4 = com.google.android.gms.dynamic.ObjectWrapper.wrap(r4)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|r4 = null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|PHI: r4 \l  PHI: (r4v1 com.google.android.gms.dynamic.IObjectWrapper) = (r4v4 com.google.android.gms.dynamic.IObjectWrapper), (r4v5 com.google.android.gms.dynamic.IObjectWrapper) binds: [B:2:0x0007, B:1:0x0002] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.gms.dynamic.ObjectWrapper r4 = (com.google.android.gms.dynamic.ObjectWrapper) r4\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|SYNTHETIC\lSplitter:B:4:0x000a\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ RemoteException \-\> 0x0015 \}\lSplitter:B:4:0x000a\l|r2.zzg.snapshot(new com.google.android.gms.maps.zzr(r2, r3), r4)     \/\/ Catch:\{ RemoteException \-\> 0x0015 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|ExcHandler: RemoteException (r3v1 'e' android.os.RemoteException A[CUSTOM_DECLARE])\lSplitter:B:4:0x000a\l|android.os.RemoteException r3 = move\-exception\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016}"];
Node_9 [shape=record,label="{9\:\ 0x001b|throw new com.google.android.gms.maps.model.RuntimeRemoteException(r3)\l}"];
MethodNode[shape=record,label="{public final void com.google.android.gms.maps.GoogleMap.snapshot((r2v0 'this' com.google.android.gms.maps.GoogleMap A[IMMUTABLE_TYPE, THIS]), (r3v0 com.google.android.gms.maps.GoogleMap$SnapshotReadyCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

