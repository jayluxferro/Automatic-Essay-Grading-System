digraph "CFG forcom.google.android.gms.common.server.response.FastParser.zaa(Ljava\/io\/BufferedReader;[C)I" {
subgraph cluster_Region_359920085 {
label = "R(2:0|(1:53)(1:(1:51)(1:(2:6|7)(3:8|(2:10|(2:15|(1:27)(1:(2:22|25)(2:19|20))))(2:28|(1:(2:(2:42|43)|(1:41))))|(2:(1:47)|(1:49)))))) | DECL_VAR: int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|char char r0 = zaj(r9)\l}"];
subgraph cluster_IfRegion_251536037 {
label = "IF [B:1:0x0004] THEN: R(1:53) ELSE: R(1:(1:51)(1:(2:6|7)(3:8|(2:10|(2:15|(1:27)(1:(2:22|25)(2:19|20))))(2:28|(1:(2:(2:42|43)|(1:41))))|(2:(1:47)|(1:49)))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 == 0) goto L_0x00a3\l}"];
subgraph cluster_Region_1811020164 {
label = "R(1:53)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x00aa|throw new com.google.android.gms.common.server.response.FastParser.ParseException(\"Unexpected EOF\")\l}"];
}
subgraph cluster_Region_601368651 {
label = "R(1:(1:51)(1:(2:6|7)(3:8|(2:10|(2:15|(1:27)(1:(2:22|25)(2:19|20))))(2:28|(1:(2:(2:42|43)|(1:41))))|(2:(1:47)|(1:49))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_408171998 {
label = "IF [B:3:0x0008] THEN: R(1:51) ELSE: R(1:(2:6|7)(3:8|(2:10|(2:15|(1:27)(1:(2:22|25)(2:19|20))))(2:28|(1:(2:(2:42|43)|(1:41))))|(2:(1:47)|(1:49)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r0 == ',') goto L_0x009b\l}"];
subgraph cluster_Region_522493182 {
label = "R(1:51)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x00a2|throw new com.google.android.gms.common.server.response.FastParser.ParseException(\"Missing value\")\l}"];
}
subgraph cluster_Region_1158444505 {
label = "R(1:(2:6|7)(3:8|(2:10|(2:15|(1:27)(1:(2:22|25)(2:19|20))))(2:28|(1:(2:(2:42|43)|(1:41))))|(2:(1:47)|(1:49)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1720434457 {
label = "IF [B:5:0x000d] THEN: R(2:6|7) ELSE: R(3:8|(2:10|(2:15|(1:27)(1:(2:22|25)(2:19|20))))(2:28|(1:(2:(2:42|43)|(1:41))))|(2:(1:47)|(1:49))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000d|if (r0 == 'n') goto L_0x000f\l}"];
subgraph cluster_Region_567642405 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000f|zab(r9, zaqf)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|RETURN\l|return 0\l}"];
}
subgraph cluster_Region_1127048996 {
label = "R(3:8|(2:10|(2:15|(1:27)(1:(2:22|25)(2:19|20))))(2:28|(1:(2:(2:42|43)|(1:41))))|(2:(1:47)|(1:49)))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0015|r9.mark(1024)\l}"];
subgraph cluster_IfRegion_1820071748 {
label = "IF [B:9:0x001e] THEN: R(2:10|(2:15|(1:27)(1:(2:22|25)(2:19|20)))) ELSE: R(2:28|(1:(2:(2:42|43)|(1:41))))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001e|if (r0 == '\"') goto L_0x0020\l}"];
subgraph cluster_Region_707511810 {
label = "R(2:10|(2:15|(1:27)(1:(2:22|25)(2:19|20))))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0020|r0 = 0\lboolean r1 = false\l}"];
subgraph cluster_LoopRegion_1503680297 {
label = "LOOP:0: (2:15|(1:27)(1:(2:22|25)(2:19|20)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0023|if (r0 \< r10.length) goto L_0x0025\l}"];
subgraph cluster_Region_1827152415 {
label = "R(2:15|(1:27)(1:(2:22|25)(2:19|20)))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002b|char char r6 = r10[r0]\l}"];
subgraph cluster_IfRegion_328551666 {
label = "IF [B:16:0x0031] THEN: R(1:27) ELSE: R(1:(2:22|25)(2:19|20))";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0031|if (java.lang.Character.isISOControl(r6) != false) goto L_0x004c\l}"];
subgraph cluster_Region_2027274451 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0053|throw new com.google.android.gms.common.server.response.FastParser.ParseException(\"Unexpected control character while reading string\")\l}"];
}
subgraph cluster_Region_1590808749 {
label = "R(1:(2:22|25)(2:19|20)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1213678542 {
label = "IF [B:17:0x0033, B:18:0x0035] THEN: R(2:22|25) ELSE: R(2:19|20) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0033|if (r6 != '\"') goto L_0x0041\l}"];
Node_18 [shape=record,label="{18\:\ 0x0035|ADDED_TO_REGION\l|if (r1 == true) goto L_0x0041\l}"];
subgraph cluster_Region_291751721 {
label = "R(2:22|25)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0043|r1 = r6 == '' ? !r1 : false\l}"];
Node_25 [shape=record,label="{25\:\ 0x0049|LOOP_END\lPHI: r1 \l  PHI: (r1v5 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:11:0x0022\-\>B:25:0x0049\l|r0++\l}"];
}
subgraph cluster_Region_2017777232 {
label = "R(2:19|20)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0037|r9.reset()\lr9.skip((long) (r0 + 1))\l}"];
Node_20 [shape=record,label="{20\:\ 0x0040|RETURN\l|return r0\l}"];
}
}
}
}
}
}
}
subgraph cluster_Region_334035812 {
label = "R(2:28|(1:(2:(2:42|43)|(1:41))))";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0054|r10[0] = r0\lint r0 = 1\l}"];
subgraph cluster_LoopRegion_1229901676 {
label = "LOOP:1: (1:(2:(2:42|43)|(1:41)))";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0058|if (r0 \< r10.length) goto L_0x005a\l}"];
subgraph cluster_Region_1405155059 {
label = "R(1:(2:(2:42|43)|(1:41)))";
node [shape=record,color=blue];
subgraph cluster_Region_2080157672 {
label = "R(2:(2:42|43)|(1:41))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1025579921 {
label = "IF [B:34:0x0064, B:36:0x0068, B:38:0x0070, B:40:0x0076] THEN: R(2:42|43) ELSE: null";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0064|if (r10[r0] == '\}') goto L_0x007c\l}"];
Node_36 [shape=record,label="{36\:\ 0x0068|ADDED_TO_REGION\l|if (r10[r0] == ',') goto L_0x007c\l}"];
Node_38 [shape=record,label="{38\:\ 0x0070|ADDED_TO_REGION\l|if (java.lang.Character.isWhitespace(r10[r0]) == true) goto L_0x007c\l}"];
Node_40 [shape=record,label="{40\:\ 0x0076|ADDED_TO_REGION\l|if (r10[r0] == ']') goto L_0x007c\l}"];
subgraph cluster_Region_846518675 {
label = "R(2:42|43)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x007c|r9.reset()\lr9.skip((long) (r0 \- 1))\lr10[r0] = 0\l}"];
Node_43 [shape=record,label="{43\:\ 0x0087|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_1714077999 {
label = "R(1:41)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0079|LOOP_END\lLOOP:1: B:29:0x0057\-\>B:41:0x0079\l|int r0 = r0 + 1\l}"];
}
}
}
}
}
}
subgraph cluster_Region_771304220 {
label = "R(2:(1:47)|(1:49))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_489239670 {
label = "IF [B:45:0x0089] THEN: R(1:47) ELSE: null";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0089|if (r0 == r10.length) goto L_0x008b\l}"];
subgraph cluster_Region_2113786550 {
label = "R(1:47)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x0092|throw new com.google.android.gms.common.server.response.FastParser.ParseException(\"Absurdly long value\")\l}"];
}
}
subgraph cluster_Region_702469268 {
label = "R(1:49)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x009a|throw new com.google.android.gms.common.server.response.FastParser.ParseException(\"Unexpected EOF\")\l}"];
}
}
}
}
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000a}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0022|LOOP_START\lPHI: r0 r1 \l  PHI: (r0v6 int) = (r0v5 int), (r0v7 int) binds: [B:10:0x0020, B:25:0x0049] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v4 boolean) = (r1v3 boolean), (r1v5 boolean) binds: [B:10:0x0020, B:25:0x0049] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:11:0x0022\-\>B:25:0x0049\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0025}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0029|ADDED_TO_REGION\l|if (r9.read(r10, r0, 1) != \-1) goto L_0x002b\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0041}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0045}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0048}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x004c}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0057|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v4 int) binds: [B:28:0x0054, B:41:0x0079] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:29:0x0057\-\>B:41:0x0079\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x005a}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x005e|ADDED_TO_REGION\l|if (r9.read(r10, r0, 1) != \-1) goto L_0x0060\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0060}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0066}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x006a}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0072}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0088|PHI: r0 \l  PHI: (r0v1 int) = (r0v3 int), (r0v3 int), (r0v6 int), (r0v6 int) binds: [B:64:0x0088, B:65:0x0088, B:54:0x0088, B:55:0x0088] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x008b}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x0093}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x009b}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x00a3}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x0088|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x0088|SYNTHETIC\l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x004c|SYNTHETIC\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x0037|SYNTHETIC\l}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x0049|SYNTHETIC\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x0049|SYNTHETIC\l}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x007c|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x007c|SYNTHETIC\l}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x007c|SYNTHETIC\l}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x007c|SYNTHETIC\l}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x0088|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x0088|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private final int com.google.android.gms.common.server.response.FastParser.zaa((r8v0 'this' com.google.android.gms.common.server.response.FastParser A[IMMUTABLE_TYPE, THIS]), (r9v0 java.io.BufferedReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 char[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.gms.common.server.response.FastParser$ParseException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_52;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_50;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_28[style=dashed];
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_54[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_56;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_21;
Node_18 -> Node_57[style=dashed];
Node_22 -> Node_23;
Node_22 -> Node_24;
Node_25 -> Node_11;
Node_19 -> Node_20;
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_30 -> Node_64[style=dashed];
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_60;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_61;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_62;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_63;
Node_42 -> Node_43;
Node_41 -> Node_29;
Node_45 -> Node_46;
Node_45 -> Node_48[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_55[style=dashed];
Node_21 -> Node_22;
Node_23 -> Node_59;
Node_24 -> Node_58;
Node_26 -> Node_27;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_65[style=dashed];
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_44 -> Node_45;
Node_46 -> Node_47;
Node_48 -> Node_49;
Node_50 -> Node_51;
Node_52 -> Node_53;
Node_54 -> Node_44;
Node_55 -> Node_44;
Node_56 -> Node_26;
Node_57 -> Node_19;
Node_58 -> Node_25;
Node_59 -> Node_25;
Node_60 -> Node_42;
Node_61 -> Node_42;
Node_62 -> Node_42;
Node_63 -> Node_42;
Node_64 -> Node_44;
Node_65 -> Node_44;
}

