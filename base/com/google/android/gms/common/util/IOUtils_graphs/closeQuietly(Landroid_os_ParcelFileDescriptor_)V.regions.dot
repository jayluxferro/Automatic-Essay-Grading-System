digraph "CFG forcom.google.android.gms.common.util.IOUtils.closeQuietly(Landroid\/os\/ParcelFileDescriptor;)V" {
subgraph cluster_Region_1193016442 {
label = "R(1:(1:(1:2))(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2096844703 {
label = "IF [B:0:0x0000] THEN: R(1:(1:2)) ELSE: R(0)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r0 != null) goto L_0x0002\l}"];
subgraph cluster_Region_956207107 {
label = "R(1:(1:2))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1543621268 {
label = "Try: R(1:2) catches: R(0)";
node [shape=record,color=blue];
subgraph cluster_Region_1147209026 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IOException \-\> 0x0006 \}\lSplitter:B:1:0x0002\l|r0.close()     \/\/ Catch:\{ IOException \-\> 0x0006 \}\l}"];
}
subgraph cluster_Region_1656765926 {
label = "R(0) | ExcHandler: IOException (unused java.io.IOException)\l";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_779274037 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_1656765926 {
label = "R(0) | ExcHandler: IOException (unused java.io.IOException)\l";
node [shape=record,color=blue];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0005}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:1:0x0002\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static void com.google.android.gms.common.util.IOUtils.closeQuietly((r0v0 android.os.ParcelFileDescriptor A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\lAnnotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_4 -> Node_5;
}

