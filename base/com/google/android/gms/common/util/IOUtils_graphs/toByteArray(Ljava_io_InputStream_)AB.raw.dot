digraph "CFG forcom.google.android.gms.common.util.IOUtils.toByteArray(Ljava\/io\/InputStream;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.io.ByteArrayOutputStream) =  java.io.ByteArrayOutputStream \l0x0002: INVOKE  (r0 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r4 I:java.lang.Object) com.google.android.gms.common.internal.Preconditions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l0x0008: INVOKE  (r0 I:java.lang.Object) com.google.android.gms.common.internal.Preconditions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l0x000b: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (4096(0x1000, float:5.74E\-42) ?[int, float, short, byte, char])\l \l0x000d: NEW_ARRAY  (r1 I:byte[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: byte[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: INVOKE  (r2 I:int) = (r4 I:java.io.InputStream), (r1 I:byte[]) java.io.InputStream.read(byte[]):int type: VIRTUAL \l0x0013: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001b \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0017: INVOKE  \l  (r0 I:java.io.OutputStream)\l  (r1 I:byte[])\l  (r3 I:int)\l  (r2 I:int)\l java.io.OutputStream.write(byte[], int, int):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: INVOKE  (r4 I:byte[]) = (r0 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.toByteArray():byte[] type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: RETURN  (r4 I:byte[]) \l}"];
MethodNode[shape=record,label="{public static byte[] com.google.android.gms.common.util.IOUtils.toByteArray((r4 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}], Annotation[RUNTIME, java.lang.Deprecated, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

