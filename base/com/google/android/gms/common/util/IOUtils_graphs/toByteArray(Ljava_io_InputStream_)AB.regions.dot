digraph "CFG forcom.google.android.gms.common.util.IOUtils.toByteArray(Ljava\/io\/InputStream;)[B" {
subgraph cluster_Region_1231572228 {
label = "R(2:0|(2:1|(2:(1:5)|(1:3))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream r0 = new java.io.ByteArrayOutputStream()\lcom.google.android.gms.common.internal.Preconditions.checkNotNull(r4)\lcom.google.android.gms.common.internal.Preconditions.checkNotNull(r0)\lbyte[] byte[] r1 = new byte[4096]\l}"];
subgraph cluster_LoopRegion_1096618046 {
label = "LOOP:0: (2:1|(2:(1:5)|(1:3)))";
node [shape=record,color=blue];
subgraph cluster_Region_1097991889 {
label = "R(2:1|(2:(1:5)|(1:3)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000f|LOOP_START\lLOOP:0: B:1:0x000f\-\>B:3:0x0016\l|int int r2 = r4.read(r1)\l}"];
subgraph cluster_Region_1667379330 {
label = "R(2:(1:5)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1257857942 {
label = "IF [B:2:0x0014] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0014|if (r2 == \-1) goto L_0x001b\l}"];
subgraph cluster_Region_1199139254 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001f|RETURN\l|return r0.toByteArray()\l}"];
}
}
subgraph cluster_Region_2097992001 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0016|LOOP_END\lLOOP:0: B:1:0x000f\-\>B:3:0x0016\l|r0.write(r1, 0, r2)\l}"];
}
}
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x001b}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static byte[] com.google.android.gms.common.util.IOUtils.toByteArray((r4v0 java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}], Annotation[RUNTIME, java.lang.Deprecated, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_6 -> Node_4;
}

