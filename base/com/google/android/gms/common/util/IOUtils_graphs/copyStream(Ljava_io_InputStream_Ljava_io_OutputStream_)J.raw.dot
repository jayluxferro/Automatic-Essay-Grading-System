digraph "CFG forcom.google.android.gms.common.util.IOUtils.copyStream(Ljava\/io\/InputStream;Ljava\/io\/OutputStream;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r1 I:long) = \l  (r1 I:java.io.InputStream)\l  (r2 I:java.io.OutputStream)\l  (r0 I:boolean)\l com.google.android.gms.common.util.IOUtils.zza(java.io.InputStream, java.io.OutputStream, boolean):long type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: RETURN  (r1 I:long) \l}"];
MethodNode[shape=record,label="{public static long com.google.android.gms.common.util.IOUtils.copyStream((r1 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}], Annotation[RUNTIME, java.lang.Deprecated, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

