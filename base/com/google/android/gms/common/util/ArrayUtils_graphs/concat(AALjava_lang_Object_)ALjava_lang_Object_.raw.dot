digraph "CFG forcom.google.android.gms.common.util.ArrayUtils.concat([[Ljava\/lang\/Object;)[Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r6 I:?[]) \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r6 I:java.lang.Class) = (r6 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x0008: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.lang.Class), (r1 I:int) java.lang.reflect.Array.newInstance(java.lang.Class, int):java.lang.Object type: STATIC \l0x000c: CHECK_CAST  (r6 I:java.lang.Object[]) = (java.lang.Object[]) (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: RETURN  (r6 I:T[]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: ARRAY_LENGTH  (r3 I:int) = (r6 I:?[]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IF  (r0 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:8:0x001b \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: AGET  (r3 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0016: ARRAY_LENGTH  (r3 I:int) = (r3 I:?[]) \l0x0017: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0018: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: AGET  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x001d: INVOKE  (r0 I:java.lang.Object[]) = (r0 I:java.lang.Object[]), (r2 I:int) java.util.Arrays.copyOf(java.lang.Object[], int):java.lang.Object[] type: STATIC \l0x0021: AGET  (r2 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0023: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l0x0024: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: ARRAY_LENGTH  (r4 I:int) = (r6 I:?[]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:12:0x0033 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: AGET  (r4 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x002a: ARRAY_LENGTH  (r5 I:int) = (r4 I:?[]) \l0x002b: INVOKE  \l  (r4 I:java.lang.Object)\l  (r1 I:int)\l  (r0 I:java.lang.Object)\l  (r2 I:int)\l  (r5 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x002e: ARRAY_LENGTH  (r4 I:int) = (r4 I:?[]) \l0x002f: ARITH  (r2 I:int) = (r2 I:int) + (r4 I:int) \l0x0030: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|0x0033: RETURN  (r0 I:T[]) \l}"];
MethodNode[shape=record,label="{public static T[] com.google.android.gms.common.util.ArrayUtils.concat((r6 I:T[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>([[TT;)[TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_9;
}

