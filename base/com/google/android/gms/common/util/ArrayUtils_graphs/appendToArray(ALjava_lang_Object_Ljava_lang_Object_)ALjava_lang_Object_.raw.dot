digraph "CFG forcom.google.android.gms.common.util.ArrayUtils.appendToArray([Ljava\/lang\/Object;Ljava\/lang\/Object;)[Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000d \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0007: CONST_STR  (r3 I:java.lang.String) =  \"Cannot generate array of generic type w\/o class info\" \l0x0009: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001b \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: INVOKE  (r2 I:java.lang.Class) = (r3 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x0014: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.lang.Class), (r0 I:int) java.lang.reflect.Array.newInstance(java.lang.Class, int):java.lang.Object type: STATIC \l0x0018: CHECK_CAST  (r2 I:java.lang.Object[]) = (java.lang.Object[]) (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: ARRAY_LENGTH  (r1 I:int) = (r2 I:?[]) \l0x001c: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x001d: INVOKE  (r2 I:java.lang.Object[]) = (r2 I:java.lang.Object[]), (r1 I:int) java.util.Arrays.copyOf(java.lang.Object[], int):java.lang.Object[] type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: ARRAY_LENGTH  (r1 I:int) = (r2 I:?[]) \l0x0022: ARITH  (r1 I:int) = (r1 I:int) \- (r0 I:int) \l0x0023: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: RETURN  (r2 I:T[]) \l}"];
MethodNode[shape=record,label="{public static T[] com.google.android.gms.common.util.ArrayUtils.appendToArray((r2 I:T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>([TT;TT;)[TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_3;
Node_1 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

