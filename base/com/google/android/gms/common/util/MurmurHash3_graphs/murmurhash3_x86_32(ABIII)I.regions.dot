digraph "CFG forcom.google.android.gms.common.util.MurmurHash3.murmurhash3_x86_32([BIII)I" {
subgraph cluster_Region_1122544945 {
label = "R(4:0|(1:3)|4|5)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = (r7 & \-4) + r6\l}"];
subgraph cluster_LoopRegion_666529491 {
label = "LOOP:0: (1:3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|if (r6 \< r0) goto L_0x000b\l}"];
subgraph cluster_Region_1101232544 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000b|LOOP_END\lLOOP:0: B:1:0x0003\-\>B:3:0x000b\l|int int r3 = ((r5[r6] & 255) \| ((r5[r6 + 1] & 255) \<\< 8) \| ((r5[r6 + 2] & 255) \<\< 16) \| (r5[r6 + 3] \<\< 24)) * \-862048943\lint r8 = r8 ^ (((r3 \<\< 15) \| (r3 \>\>\> 17)) * 461845907)\lint r8 = (((r8 \>\>\> 19) \| (r8 \<\< 13)) * 5) \- 430675100\lr6 += 4\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x0040|int r6 = 0\l}"];
subgraph cluster_SwitchRegion_840824689 {
label = "Switch: 3, default: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0043|switch((r7 & 3)) \{\l    case 1: goto L_0x0058;\l    case 2: goto L_0x004f;\l    case 3: goto L_0x0047;\l    default: goto L_0x0046;\l\}\l}"];
subgraph cluster_Region_324059039 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_1231338028 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_562397013 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_2088673899 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1731775135 {
label = "R(2:6|1)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0047|int r6 = (r5[r0 + 2] & 255) \<\< 16\l}"];
Node_InsnContainer_1791247932 [shape=record,label="{|break\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0003|LOOP_START\lPHI: r6 r8 \l  PHI: (r6v1 int) = (r6v0 int), (r6v16 int) binds: [B:0:0x0000, B:3:0x000b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 int) = (r8v0 int), (r8v8 int) binds: [B:0:0x0000, B:3:0x000b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:3:0x000b\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x004f|PHI: r6 \l  PHI: (r6v10 int) = (r6v2 int), (r6v15 int) binds: [B:5:0x0043, B:6:0x0047] A[DONT_GENERATE, DONT_INLINE]\l|r6 \|= (r5[r0 + 1] & 255) \<\< 8\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0058|PHI: r6 \l  PHI: (r6v8 int) = (r6v2 int), (r6v11 int) binds: [B:5:0x0043, B:7:0x004f] A[DONT_GENERATE, DONT_INLINE]\l|int r5 = ((r5[r0] & 255) \| r6) * \-862048943\lr8 ^= ((r5 \>\>\> 17) \| (r5 \<\< 15)) * 461845907\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0067|PHI: r8 \l  PHI: (r8v2 int) = (r8v1 int), (r8v3 int) binds: [B:5:0x0043, B:8:0x0058] A[DONT_GENERATE, DONT_INLINE]\l|r5 = r8 ^ r7\lint r5 = (r5 ^ (r5 \>\>\> 16)) * \-2048144789\lint r5 = (r5 ^ (r5 \>\>\> 13)) * \-1028477387\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x007c|RETURN\l|return r5 ^ (r5 \>\>\> 16)\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0040|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static int com.google.android.gms.common.util.MurmurHash3.murmurhash3_x86_32((r5v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCode restructure failed: missing block: B:7:0x004f, code lost:\l    r6 = r6 \| ((r5[r0 + 1] & 255) \<\< 8);\l\lCode restructure failed: missing block: B:8:0x0058, code lost:\l    r5 = ((r5[r0] & 255) \| r6) * \-862048943;\l    r8 = r8 ^ (((r5 \>\>\> 17) \| (r5 \<\< 15)) * 461845907);\l\lCode restructure failed: missing block: B:9:0x0067, code lost:\l    r5 = r8 ^ r7;\l    r5 = (r5 ^ (r5 \>\>\> 16)) * \-2048144789;\l    r5 = (r5 ^ (r5 \>\>\> 13)) * \-1028477387;\l\lCode restructure failed: missing block: B:10:0x007c, code lost:\l    return r5 ^ (r5 \>\>\> 16);\l\lAnnotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_11[style=dashed];
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_5 -> Node_8;
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_1 -> Node_2;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_4;
}

