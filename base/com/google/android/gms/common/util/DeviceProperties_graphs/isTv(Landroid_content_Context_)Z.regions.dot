digraph "CFG forcom.google.android.gms.common.util.DeviceProperties.isTv(Landroid\/content\/Context;)Z" {
subgraph cluster_Region_1028364447 {
label = "R(2:(2:2|10)|12)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_971933534 {
label = "IF [B:1:0x0002] THEN: R(2:2|10) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (zzgu == null) goto L_0x0004\l}"];
subgraph cluster_Region_1975438610 {
label = "R(2:2|10)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|android.content.pm.PackageManager android.content.pm.PackageManager r1 = r1.getPackageManager()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|PHI: r1 \l  PHI: (r1v4 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|zzgu = java.lang.Boolean.valueOf(r1.hasSystemFeature(\"com.google.android.tv\") \|\| r1.hasSystemFeature(\"android.hardware.type.television\") \|\| r1.hasSystemFeature(\"android.software.leanback\"))\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0030|RETURN\l|return zzgu.booleanValue()\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000e}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0010}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0016|REMOVE\lADDED_TO_REGION\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0018}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001e|REMOVE\lADDED_TO_REGION\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0021}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0023}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x002a}"];
MethodNode[shape=record,label="{public static boolean com.google.android.gms.common.util.DeviceProperties.isTv((r1v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_11[style=dashed];
Node_2 -> Node_3;
Node_10 -> Node_11;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

