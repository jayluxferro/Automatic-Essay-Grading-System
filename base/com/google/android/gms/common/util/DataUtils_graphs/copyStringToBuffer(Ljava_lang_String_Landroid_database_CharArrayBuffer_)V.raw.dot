digraph "CFG forcom.google.android.gms.common.util.DataUtils.copyStringToBuffer(Ljava\/lang\/String;Landroid\/database\/CharArrayBuffer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r3 I:java.lang.CharSequence) android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IPUT  (r1 I:int), (r4 I:android.database.CharArrayBuffer) android.database.CharArrayBuffer.sizeCopied int \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IGET  (r0 I:char[]) = (r4 I:android.database.CharArrayBuffer) android.database.CharArrayBuffer.data char[] \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0022 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IGET  (r0 I:char[]) = (r4 I:android.database.CharArrayBuffer) android.database.CharArrayBuffer.data char[] \l0x0010: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l0x0011: INVOKE  (r2 I:int) = (r3 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r0 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:8:0x0018 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: INVOKE  (r0 I:int) = (r3 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x001c: IGET  (r2 I:char[]) = (r4 I:android.database.CharArrayBuffer) android.database.CharArrayBuffer.data char[] \l0x001e: INVOKE  \l  (r3 I:java.lang.String)\l  (r1 I:int)\l  (r0 I:int)\l  (r2 I:char[])\l  (r1 I:int)\l java.lang.String.getChars(int, int, char[], int):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: INVOKE  (r0 I:char[]) = (r3 I:java.lang.String) java.lang.String.toCharArray():char[] type: VIRTUAL \l0x0026: IPUT  (r0 I:char[]), (r4 I:android.database.CharArrayBuffer) android.database.CharArrayBuffer.data char[] \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: INVOKE  (r3 I:int) = (r3 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x002c: IPUT  (r3 I:int), (r4 I:android.database.CharArrayBuffer) android.database.CharArrayBuffer.sizeCopied int \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: RETURN   \l}"];
MethodNode[shape=record,label="{public static void com.google.android.gms.common.util.DataUtils.copyStringToBuffer((r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.database.CharArrayBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

