digraph "CFG forcom.google.android.gms.common.util.ScopeUtil.toScopeString([Lcom\/google\/android\/gms\/common\/api\/Scope;)[Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"scopes can't be null.\" \l0x0002: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.Object) com.google.android.gms.common.internal.Preconditions.checkNotNull(java.lang.Object, java.lang.Object):java.lang.Object type: STATIC \l0x0005: ARRAY_LENGTH  (r0 I:int) = (r3 I:?[]) \l0x0006: NEW_ARRAY  (r0 I:java.lang.String[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x0008: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: ARRAY_LENGTH  (r2 I:int) = (r3 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:4:0x0017 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: AGET  (r2 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x000e: INVOKE  (r2 I:java.lang.String) = (r2 I:com.google.android.gms.common.api.Scope) com.google.android.gms.common.api.Scope.getScopeUri():java.lang.String type: VIRTUAL \l0x0012: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0014: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: RETURN  (r0 I:java.lang.String[]) \l}"];
MethodNode[shape=record,label="{public static java.lang.String[] com.google.android.gms.common.util.ScopeUtil.toScopeString((r3 I:com.google.android.gms.common.api.Scope[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

