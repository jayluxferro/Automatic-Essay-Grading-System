digraph "CFG forcom.google.android.gms.common.util.CollectionUtils.setOf([Ljava\/lang\/Object;)Ljava\/util\/Set;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|switch(r5.length) \{\l    case 0: goto L_0x0058;\l    case 1: goto L_0x0051;\l    case 2: goto L_0x003e;\l    case 3: goto L_0x0033;\l    case 4: goto L_0x0014;\l    default: goto L_0x0007;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|java.util.Set r0 = zza(r5.length, false)\ljava.util.Collections.addAll(r0, r5)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|RETURN\l|return java.util.Collections.unmodifiableSet(r0)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|r0 = r5[0]\lr2 = r5[1]\lr1 = r5[2]\lr5 = r5[3]\ljava.util.Set r3 = zza(4, false)\lr3.add(r0)\lr3.add(r2)\lr3.add(r1)\lr3.add(r5)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0032|RETURN\l|return java.util.Collections.unmodifiableSet(r3)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0033}"];
Node_7 [shape=record,label="{7\:\ 0x003d|RETURN\l|return setOf(r5[0], r5[1], r5[2])\l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|r0 = r5[0]\lr5 = r5[1]\ljava.util.Set r1 = zza(2, false)\lr1.add(r0)\lr1.add(r5)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0050|RETURN\l|return java.util.Collections.unmodifiableSet(r1)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0051}"];
Node_11 [shape=record,label="{11\:\ 0x0057|RETURN\l|return java.util.Collections.singleton(r5[0])\l}"];
Node_12 [shape=record,label="{12\:\ 0x0058}"];
Node_13 [shape=record,label="{13\:\ 0x005c|RETURN\l|return java.util.Collections.emptySet()\l}"];
MethodNode[shape=record,label="{public static java.util.Set\<T\> com.google.android.gms.common.util.CollectionUtils.setOf((r5v0 T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}], Annotation[RUNTIME, java.lang.Deprecated, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>([TT;), Ljava\/util\/Set\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_6;
Node_1 -> Node_8;
Node_1 -> Node_10;
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
}

