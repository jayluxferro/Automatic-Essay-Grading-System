digraph "CFG forcom.google.android.gms.common.util.CollectionUtils.listOf([Ljava\/lang\/Object;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r1 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1] t:[0x0015, 0x000d] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r1 I:java.util.List) = (r1 I:java.lang.Object[]) java.util.Arrays.asList(java.lang.Object[]):java.util.List type: STATIC \l0x0008: INVOKE  (r1 I:java.util.List) = (r1 I:java.util.List) java.util.Collections.unmodifiableList(java.util.List):java.util.List type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN  (r1 I:java.util.List\<T\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0010: INVOKE  (r1 I:java.util.List) = (r1 I:java.lang.Object) com.google.android.gms.common.util.CollectionUtils.listOf(java.lang.Object):java.util.List type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: RETURN  (r1 I:java.util.List\<T\>) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INVOKE  (r1 I:java.util.List) =  com.google.android.gms.common.util.CollectionUtils.listOf():java.util.List type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: RETURN  (r1 I:java.util.List\<T\>) \l}"];
MethodNode[shape=record,label="{public static java.util.List\<T\> com.google.android.gms.common.util.CollectionUtils.listOf((r1 I:T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}], Annotation[RUNTIME, java.lang.Deprecated, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>([TT;), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

