digraph "CFG forcom.google.android.gms.common.util.CollectionUtils.mapOfKeyValueArrays([Ljava\/lang\/Object;[Ljava\/lang\/Object;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r4 I:?[]) \l0x0001: ARRAY_LENGTH  (r1 I:int) = (r5 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: ARRAY_LENGTH  (r0 I:int) = (r4 I:?[]) \l0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1] t:[0x0018, 0x000f] \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: ARRAY_LENGTH  (r0 I:int) = (r4 I:?[]) \l0x000a: INVOKE  (r0 I:java.util.Map) = (r0 I:int), (r1 I:boolean) com.google.android.gms.common.util.CollectionUtils.zzb(int, boolean):java.util.Map type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: AGET  (r4 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0011: AGET  (r5 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0013: INVOKE  (r4 I:java.util.Map) = (r4 I:java.lang.Object), (r5 I:java.lang.Object) java.util.Collections.singletonMap(java.lang.Object, java.lang.Object):java.util.Map type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: RETURN  (r4 I:java.util.Map\<K, V\>) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: INVOKE  (r4 I:java.util.Map) =  java.util.Collections.emptyMap():java.util.Map type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: RETURN  (r4 I:java.util.Map\<K, V\>) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: ARRAY_LENGTH  (r2 I:int) = (r4 I:?[]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:12:0x002a \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: AGET  (r2 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0022: AGET  (r3 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0024: INVOKE  \l  (r0 I:java.util.Map)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x0027: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: INVOKE  (r4 I:java.util.Map) = (r0 I:java.util.Map) java.util.Collections.unmodifiableMap(java.util.Map):java.util.Map type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|0x002e: RETURN  (r4 I:java.util.Map\<K, V\>) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|0x002f: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0031: ARRAY_LENGTH  (r4 I:int) = (r4 I:?[]) \l0x0032: ARRAY_LENGTH  (r5 I:int) = (r5 I:?[]) \l0x0033: CONST  (r1 I:?[int, float, short, byte, char]) = (66 ?[int, float, short, byte, char]) \l0x0035: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0037: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.\<init\>(int):void type: DIRECT \l0x003a: CONST_STR  (r1 I:java.lang.String) =  \"Key and values array lengths not equal: \" \l0x003c: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003f: INVOKE  (r2 I:java.lang.StringBuilder), (r4 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0042: CONST_STR  (r4 I:java.lang.String) =  \" != \" \l0x0044: INVOKE  (r2 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0047: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x004a: INVOKE  (r4 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004e: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0051|0x0051: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static java.util.Map\<K, V\> com.google.android.gms.common.util.CollectionUtils.mapOfKeyValueArrays((r4 I:K[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:V[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<K:, Ljava\/lang\/Object;, V:, Ljava\/lang\/Object;, \>([TK;[TV;), Ljava\/util\/Map\<, TK;TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_3 -> Node_7;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_9;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

