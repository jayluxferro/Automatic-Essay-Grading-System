digraph "CFG forcom.google.android.gms.common.util.zza.zzg(Landroid\/content\/Context;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0047 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: INVOKE  (r1 I:android.content.Context) = (r4 I:android.content.Context) android.content.Context.getApplicationContext():android.content.Context type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000a \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: INVOKE  (r1 I:android.content.Context) = (r4 I:android.content.Context) android.content.Context.getApplicationContext():android.content.Context type: VIRTUAL \l0x000e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000f: SGET  (r3 I:android.content.IntentFilter) =  com.google.android.gms.common.util.zza.filter android.content.IntentFilter \l0x0011: INVOKE  (r1 I:android.content.Intent) = \l  (r1 I:android.content.Context)\l  (r2 I:android.content.BroadcastReceiver)\l  (r3 I:android.content.IntentFilter)\l android.content.Context.registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter):android.content.Intent type: VIRTUAL \l0x0015: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: CONST_STR  (r3 I:java.lang.String) =  \"plugged\" \l0x001c: INVOKE  (r1 I:int) = \l  (r1 I:android.content.Intent)\l  (r3 I:java.lang.String)\l  (r2 I:int)\l android.content.Intent.getIntExtra(java.lang.String, int):int type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (7 ?[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0026 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|0x0024: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|0x0026: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|0x0027: CONST_STR  (r3 I:java.lang.String) =  \"power\" \l0x0029: INVOKE  (r4 I:java.lang.Object) = (r4 I:android.content.Context), (r3 I:java.lang.String) android.content.Context.getSystemService(java.lang.String):java.lang.Object type: VIRTUAL \l0x002d: CHECK_CAST  (r4 I:android.os.PowerManager) = (android.os.PowerManager) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|0x002f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0032 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0031: RETURN  (r0 I:int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|0x0032: INVOKE  (r0 I:boolean) =  com.google.android.gms.common.util.PlatformVersion.isAtLeastKitKatWatch():boolean type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|0x0036: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x003d \l}"];
Node_18 [shape=record,label="{18\:\ 0x0038|0x0038: INVOKE  (r4 I:boolean) = (r4 I:android.os.PowerManager) android.os.PowerManager.isInteractive():boolean type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x003d|0x003d: INVOKE  (r4 I:boolean) = (r4 I:android.os.PowerManager) android.os.PowerManager.isScreenOn():boolean type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0041|0x0041: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0044 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0043|0x0043: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0044|0x0044: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) \| (r1 I:?[int, boolean, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0046|0x0046: RETURN  (r4 I:int) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0047|0x0047: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public static int com.google.android.gms.common.util.zza.zzg((r4 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=20\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_24;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_24[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
}

