digraph "CFG forcom.google.android.gms.common.util.UidVerifier.isGooglePlayServicesUid(Landroid\/content\/Context;I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (uidHasPackageName(r3, r4, \"com.google.android.gms\") != false) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|RETURN\l|return false\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a}"];
Node_4 [shape=record,label="{4\:\ 0x0012|SYNTHETIC\lSplitter:B:4:0x0012\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ NameNotFoundException \-\> 0x001f \}\lSplitter:B:4:0x0012\l|android.content.pm.PackageInfo r4 = r3.getPackageManager().getPackageInfo(\"com.google.android.gms\", 64)     \/\/ Catch:\{ NameNotFoundException \-\> 0x001f \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016}"];
Node_7 [shape=record,label="{7\:\ 0x001e|RETURN\l|return com.google.android.gms.common.GoogleSignatureVerifier.getInstance(r3).isGooglePublicSignedPackage(r4)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lExcHandler: NameNotFoundException (unused android.content.pm.PackageManager$NameNotFoundException)\lSplitter:B:4:0x0012\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|if (android.util.Log.isLoggable(\"UidVerifier\", 3) == false) goto L_0x002f\l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|android.util.Log.d(\"UidVerifier\", \"Package manager can't find google play services package, defaulting to false\")\l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static boolean com.google.android.gms.common.util.UidVerifier.isGooglePlayServicesUid((r3v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_10;
Node_9 -> Node_8;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
}

