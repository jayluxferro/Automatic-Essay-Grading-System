digraph "CFG forcom.google.android.gms.common.internal.Asserts.checkNotMainThread(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.os.Looper) =  android.os.Looper.getMainLooper():android.os.Looper type: STATIC \l0x0004: INVOKE  (r0 I:java.lang.Thread) = (r0 I:android.os.Looper) android.os.Looper.getThread():java.lang.Thread type: VIRTUAL \l0x0008: INVOKE  (r1 I:java.lang.Thread) =  java.lang.Thread.currentThread():java.lang.Thread type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: INVOKE  (r0 I:java.lang.Thread) =  java.lang.Thread.currentThread():java.lang.Thread type: STATIC \l0x0013: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l0x0017: INVOKE  (r1 I:android.os.Looper) =  android.os.Looper.getMainLooper():android.os.Looper type: STATIC \l0x001b: INVOKE  (r1 I:java.lang.Thread) = (r1 I:android.os.Looper) android.os.Looper.getThread():java.lang.Thread type: VIRTUAL \l0x001f: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l0x0023: INVOKE  (r2 I:java.lang.String) = (r0 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l0x0027: INVOKE  (r2 I:int) = (r2 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x002b: ARITH  (r2 I:int) = (r2 I:int) + (56 int) \l0x002d: INVOKE  (r3 I:java.lang.String) = (r1 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l0x0031: INVOKE  (r3 I:int) = (r3 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0035: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0036: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0038: INVOKE  (r3 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.\<init\>(int):void type: DIRECT \l0x003b: CONST_STR  (r2 I:java.lang.String) =  \"checkNotMainThread: current thread \" \l0x003d: INVOKE  (r3 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0040: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0043: CONST_STR  (r0 I:java.lang.String) =  \" IS the main thread \" \l0x0045: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0048: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004b: CONST_STR  (r0 I:java.lang.String) =  \"!\" \l0x004d: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0050: INVOKE  (r0 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0054: CONST_STR  (r1 I:java.lang.String) =  \"Asserts\" \l0x0056: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC \l0x0059: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x005b: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r4 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x005e|0x005e: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void com.google.android.gms.common.internal.Asserts.checkNotMainThread((r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

