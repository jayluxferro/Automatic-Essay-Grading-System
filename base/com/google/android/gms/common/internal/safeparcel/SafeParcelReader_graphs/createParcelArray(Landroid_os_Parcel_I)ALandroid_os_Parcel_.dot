digraph "CFG forcom.google.android.gms.common.internal.safeparcel.SafeParcelReader.createParcelArray(Landroid\/os\/Parcel;I)[Landroid\/os\/Parcel;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r9 = readSize(r8, r9)\lint r0 = r8.dataPosition()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r9 != 0) goto L_0x000c\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|RETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|int r2 = r8.readInt()\landroid.os.Parcel[] r3 = new android.os.Parcel[r2]\lr4 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|LOOP_START\lPHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:3:0x000c, B:9:0x002f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0013\-\>B:9:0x002f\l|if (r4 \>= r2) goto L_0x0032\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|int r5 = r8.readInt()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|if (r5 == 0) goto L_0x002d\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|int r6 = r8.dataPosition()\landroid.os.Parcel r7 = android.os.Parcel.obtain()\lr7.appendFrom(r8, r6, r5)\lr3[r4] = r7\lr8.setDataPosition(r6 + r5)\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|r3[r4] = null\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|LOOP_END\lLOOP:0: B:4:0x0013\-\>B:9:0x002f\l|int r4 = r4 + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|r8.setDataPosition(r0 + r9)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|RETURN\l|return r3\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static android.os.Parcel[] com.google.android.gms.common.internal.safeparcel.SafeParcelReader.createParcelArray((r8v0 android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_14;
Node_8 -> Node_13;
Node_9 -> Node_4;
Node_10 -> Node_11;
Node_12 -> Node_10;
Node_13 -> Node_9;
Node_14 -> Node_9;
}

